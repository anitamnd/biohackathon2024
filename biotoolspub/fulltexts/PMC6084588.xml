<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6084588</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/bty185</article-id>
    <article-id pub-id-type="publisher-id">bty185</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genetics and Population Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Efficient analysis of large-scale genome-wide data with two R packages: bigstatsr and bigsnpr</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Privé</surname>
          <given-names>Florian</given-names>
        </name>
        <xref ref-type="aff" rid="bty185-aff1">1</xref>
        <xref ref-type="corresp" rid="bty185-cor1"/>
        <!--<email>florian.prive@univ-grenoble-alpes.fr</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Aschard</surname>
          <given-names>Hugues</given-names>
        </name>
        <xref ref-type="aff" rid="bty185-aff2">2</xref>
        <xref ref-type="aff" rid="bty185-aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ziyatdinov</surname>
          <given-names>Andrey</given-names>
        </name>
        <xref ref-type="aff" rid="bty185-aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Blum</surname>
          <given-names>Michael G B</given-names>
        </name>
        <xref ref-type="aff" rid="bty185-aff1">1</xref>
        <xref ref-type="corresp" rid="bty185-cor1"/>
        <!--<email>michael.blum@univ-grenoble-alpes.fr</email>-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Stegle</surname>
          <given-names>Oliver</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="bty185-aff1"><label>1</label>Laboratoire TIMC-IMAG, UMR 5525, CNRS, Université Grenoble Alpes, Grenoble, France</aff>
    <aff id="bty185-aff2"><label>2</label>Centre de Bioinformatique, Biostatistique et Biologie Intégrative (C3BI), Institut Pasteur, Paris, France</aff>
    <aff id="bty185-aff3"><label>3</label>Department of Epidemiology, Harvard T.H. Chan School of Public Health, Boston, MA, USA</aff>
    <author-notes>
      <corresp id="bty185-cor1">To whom correspondence should be addressed. Email: <email>florian.prive@univ-grenoble-alpes.fr</email> or <email>michael.blum@univ-grenoble-alpes.fr</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>8</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2018-03-30">
      <day>30</day>
      <month>3</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>30</day>
      <month>3</month>
      <year>2018</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>34</volume>
    <issue>16</issue>
    <fpage>2781</fpage>
    <lpage>2787</lpage>
    <history>
      <date date-type="received">
        <day>06</day>
        <month>10</month>
        <year>2017</year>
      </date>
      <date date-type="rev-recd">
        <day>02</day>
        <month>2</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>3</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2018</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bty185.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Genome-wide datasets produced for association studies have dramatically increased in size over the past few years, with modern datasets commonly including millions of variants measured in dozens of thousands of individuals. This increase in data size is a major challenge severely slowing down genomic analyses, leading to some software becoming obsolete and researchers having limited access to diverse analysis tools.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here we present two R packages, bigstatsr and bigsnpr, allowing for the analysis of large scale genomic data to be performed within R. To address large data size, the packages use memory-mapping for accessing data matrices stored on disk instead of in RAM. To perform data pre-processing and data analysis, the packages integrate most of the tools that are commonly used, either through transparent system calls to existing software, or through updated or improved implementation of existing methods. In particular, the packages implement fast and accurate computations of principal component analysis and association studies, functions to remove single nucleotide polymorphisms in linkage disequilibrium and algorithms to learn polygenic risk scores on millions of single nucleotide polymorphisms. We illustrate applications of the two R packages by analyzing a case–control genomic dataset for celiac disease, performing an association study and computing polygenic risk scores. Finally, we demonstrate the scalability of the R packages by analyzing a simulated genome-wide dataset including 500 000 individuals and 1 million markers on a single desktop computer.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><ext-link ext-link-type="uri" xlink:href="https://privefl.github.io/bigstatsr/">https://privefl.github.io/bigstatsr/</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://privefl.github.io/bigsnpr/">https://privefl.github.io/bigsnpr/</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">LabEx PERSYVAL-Lab</named-content>
        </funding-source>
        <award-id>ANR-11-LABX-0025-01</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Grenoble Alpes Data Institute</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">French National Research Agency</named-content>
          <named-content content-type="funder-identifier">10.13039/501100001665</named-content>
        </funding-source>
        <award-id>ANR-15-IDEX-02</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Genome-wide datasets produced for association studies have dramatically increased in size over the past few years, with modern datasets commonly including millions of variants measured in dozens of thousands of individuals. As a consequence, most existing software and algorithms have to be continuously optimized in order to avoid obsolescence. For computing principal component analysis (PCA), commonly performed to account for population stratification in association, a fast mode named FastPCA has been added to the software EIGENSOFT, and FlashPCA has been replaced by FlashPCA2 (<xref rid="bty185-B2" ref-type="bibr">Abraham and Inouye, 2014</xref>; <xref rid="bty185-B4" ref-type="bibr">Abraham <italic>et al.</italic>, 2016</xref>; <xref rid="bty185-B15" ref-type="bibr">Galinsky <italic>et al.</italic>, 2016</xref>; <xref rid="bty185-B25" ref-type="bibr">Price <italic>et al.</italic>, 2006</xref>). PLINK 1.07, which has been a central tool in the analysis of genotype data, has been replaced by PLINK 1.9 to speed-up computations, and there is also an alpha version of PLINK 2.0 that will handle more data types (<xref rid="bty185-B7" ref-type="bibr">Chang <italic>et al.</italic>, 2015</xref>; <xref rid="bty185-B27" ref-type="bibr">Purcell <italic>et al.</italic>, 2007</xref>).</p>
    <p>Increasing size of genetic datasets is a source of major computational challenges and many analytical tools would be restricted by the amount of memory (RAM) available on computers. This is particularly a burden for commonly used analysis languages such as R. For analyzing genotype datasets in R, a range of software are available, including for example the popular R packages GenABEL, SNPRelate and GWASTools (<xref rid="bty185-B5" ref-type="bibr">Aulchenko <italic>et al.</italic>, 2007</xref>; <xref rid="bty185-B16" ref-type="bibr">Gogarten <italic>et al.</italic>, 2012</xref>; <xref rid="bty185-B36" ref-type="bibr">Zheng <italic>et al.</italic>, 2012b</xref>). Solving memory issues for languages such as R would give access to a broad range of already implemented tools for data analysis. Fortunately, strategies have been developed to avoid loading large datasets in RAM. For storing and accessing matrices, memory-mapping is very attractive because it is seamless and usually much faster to use than direct read or write operations. Storing large matrices on disk and accessing them via memory-mapping has been available for several years in R through ‘big.matrix’ objects implemented in the R package bigmemory (<xref rid="bty185-B18" ref-type="bibr">Kane <italic>et al.</italic>, 2013</xref>).</p>
  </sec>
  <sec>
    <title>2 Approach</title>
    <p>In order to perform analyses of large-scale genomic data in R, we developed two R packages, bigstatsr and bigsnpr, that provide a wide-range of building blocks which are parts of standard analyses. R is a programming language that makes it easy to tie together existing or new functions to be used as part of large, interactive and reproducible analyses (<xref rid="bty185-B29" ref-type="bibr">R Core Team, 2017</xref>). We provide a similar format as filebacked ‘big.matrix’ objects that we called ‘Filebacked Big Matrices (FBMs)’. Thanks to this matrix-like format, algorithms in R/C++ can be developed or adapted for large genotype data. This data format is a particularly good trade-off between easiness of use and computation efficiency, making our code both simple and fast. Package bigstatsr implements many statistical tools for several types of FBMs (unsigned char, unsigned short, integer and double). This includes implementation of multivariate sparse linear models, PCA, association tests, matrix operations and numerical summaries. The statistical tools developed in bigstatsr can be used for other types of data as long as they can be represented as matrices. Package bigsnpr depends on bigstatsr, using a special type of filebacked big matrix (FBM) object to store the genotypes, called ‘FBM.code256’. Package bigsnpr implements algorithms which are specific to the analysis of single nucleotide polymorphism (SNP) arrays, such as calls to external software for processing steps, Input/Output (I/O) operations from binary PLINK files and data analysis operations on SNP data (thinning, testing, predicting and plotting). We use both a real case–control genomic dataset for celiac disease and large-scale simulated data to illustrate application of the two R packages, including two association studies and the computation of polygenic risk scores (PRS). We compare results from bigstatsr and bigsnpr with those obtained by using command-line software PLINK, EIGENSOFT and PRSice, and R packages SNPRelate and GWASTools. We report execution times along with the code to perform major computational tasks. For a comprehensive comparison between R packages bigstatsr and bigmemory, see <xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘bigstatsr-and-bigmemory’</xref>.</p>
  </sec>
  <sec>
    <title>3 Materials and methods</title>
    <sec>
      <title>3.1 Memory-mapped files</title>
      <p>The two R packages do not use standard read operations on a file nor load the genotype matrix entirely in memory. They use a hybrid solution: memory-mapping. Memory-mapping is used to access data, possibly stored on disk, as if it were in memory. This solution is made available within R through the BH package, providing access to Boost C++ Header Files (<ext-link ext-link-type="uri" xlink:href="http://www.boost.org/">http://www.boost.org/</ext-link>).</p>
      <p>We are aware of the software library SNPFile that uses memory-mapped files to store and efficiently access genotype data, coded in C++ (<xref rid="bty185-B23" ref-type="bibr">Nielsen and Mailund, 2008</xref>) and of the R package BEDMatrix (<ext-link ext-link-type="uri" xlink:href="https://github.com/QuantGen/BEDMatrix">https://github.com/QuantGen/BEDMatrix</ext-link>) which provides memory-mapping directly for binary PLINK files. With the two packages we developed, we made this solution available in R and in C++ via package Rcpp (<xref rid="bty185-B12" ref-type="bibr">Eddelbuettel and François, 2011</xref>). The major advantage of manipulating genotype data within R, almost as if it were a standard matrix in memory, is the possibility of using most of the other tools that have been developed in R (<xref rid="bty185-B29" ref-type="bibr">R Core Team, 2017</xref>). For example, we provide sparse multivariate linear models and an efficient algorithm for PCA based on adaptations from R packages biglasso and RSpectra (<xref rid="bty185-B28" ref-type="bibr">Qiu and Mei, 2016</xref>; <xref rid="bty185-B34" ref-type="bibr">Zeng and Breheny, 2017</xref>).</p>
      <p>Memory-mapping provides transparent and faster access than standard read/write operations. When an element is needed, a small chunk of the genotype matrix, containing this element, is accessed in memory. When the system needs more memory, some chunks of the matrix are freed from the memory in order to make space for others. All this is managed by the operating system so that it is seamless and efficient. It means that if the same chunks of data are used repeatedly, it will be very fast the second time they are accessed, the third time and so on. Of course, if the memory size of the computer is larger than the size of the dataset, the file could fit entirely in memory and every second access would be fast.</p>
    </sec>
    <sec>
      <title>3.2 Data management, pre-processing and imputation</title>
      <p>We developed a special FBM object, called ‘FBM.code256’, that can be used to seamlessly store up to 256 arbitrary different values, while having a relatively efficient storage. Indeed, each element is stored in one byte which requires eight times less disk storage than double-precision numbers but four times more space than the binary PLINK format ‘.bed’ which can store only genotype calls. With these 256 values, the matrix can store genotype calls and missing values (four values), best guess genotypes (three values) and genotype dosages (likelihoods) rounded to two decimal places (201 values). So, we use a single data format that can store both genotype calls and dosages.</p>
      <p>For pre-processing steps, PLINK is a widely-used software. For the sake of reproducibility, one could use PLINK directly from R via systems calls. We therefore provide wrappers as R functions that use system calls to PLINK for conversion and quality control and a variety of formats can be used as input (e.g. vcf, bed/bim/fam, ped/map) and bed/bim/fam files as output (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>). Package bigsnpr provides fast conversions between bed/bim/fam PLINK files and the ‘bigSNP’ object, which contains the genotype FBM (FBM.code256), a data frame with information on samples and another data frame with information on SNPs. We also provide another function which could be used to read from tabular-like text files in order to create a genotype in the format ‘FBM’. Finally, we provide two methods for converting dosage data to the format ‘bigSNP’ (<xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘dosage’</xref>).</p>
      <p>Most modern SNP chips provide genotype data with large call-rates. For example, the celiac data we use in this paper presents only 0.04% of missing values after quality control. Yet, most of the functions in bigstatsr and bigsnpr do not handle missing values. So, we provide two functions for imputing missing values of genotyped SNPs. Note that we do not impute completely missing SNPs which would require the use of reference panels and could be performed via e.g. imputation servers for human data (<xref rid="bty185-B21" ref-type="bibr">McCarthy <italic>et al.</italic>, 2016</xref>). The first function is a wrapper to PLINK and Beagle (<xref rid="bty185-B6" ref-type="bibr">Browning and Browning, 2007</xref>) which takes bed files as input and return bed files without missing values, and should therefore be used before reading the data in R (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref>). The second function is a new algorithm we developed in order to have a fast imputation method without losing much of imputation accuracy. This function also provides an estimator of the imputation error rate by SNP for post-quality control. This algorithm is based on machine learning approaches for genetic imputation (<xref rid="bty185-B33" ref-type="bibr">Wang <italic>et al.</italic>, 2012</xref>) and does not use phasing, thus allowing for a dramatic decrease in computation time. It only relies on some local XGBoost models (<xref rid="bty185-B9" ref-type="bibr">Chen and Guestrin, 2016</xref>). XGBoost, which is available in R, builds decision trees that can detect non-linear interactions, partially reconstructing phase, making it well suited for imputing genotype matrices. Our algorithm is the following: for each SNP, we divide the individuals in the ones which have a missing genotype (test set) and the ones which have a non-missing genotype for this particular SNP. Those latter individuals are further separated in a training set and a validation set (e.g. 80% training and 20% validation). The training set is used to build the XGBoost model for predicting missing data. The prediction model is then evaluated on the validation set for which we know the true genotype values, providing an estimator of the number of genotypes that have been wrongly imputed for that particular SNP. The prediction model is also projected on the test set (missing values) in order to impute them.</p>
    </sec>
    <sec>
      <title>3.3 Population structure and SNP thinning based on linkage disequilibrium</title>
      <p>For computing principal components (PCs) of a large-scale genotype matrix, we provide several functions related to SNP thinning and two functions for computing a partial singular value decomposition (SVD), one based on eigenvalue decomposition and the other one based on randomized projections, respectively named big_SVD and big_randomSVD (<xref ref-type="fig" rid="bty185-F1">Fig. 1</xref>). While the function based on eigenvalue decomposition is at least quadratic in the smallest dimension, the function based on randomized projections runs in linear time in all dimensions (<xref rid="bty185-B19" ref-type="bibr">Lehoucq and Sorensen, 1996</xref>). Package bigstatsr uses the same PCA algorithm as FlashPCA2 called implicitly restarted Arnoldi method (IRAM), which is implemented in R package RSpectra. The main difference between the two implementations is that FlashPCA2 computes vector-matrix multiplications with the genotype matrix based on the binary PLINK file whereas bigstatsr computes these multiplications based on the FBM format, which enables parallel computations and easier subsetting.
</p>
      <fig id="bty185-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Functions available in packages bigstatsr and bigsnpr for the computation of a partial singular value decomposition of a genotype array, with three different methods for thinning SNPs</p>
        </caption>
        <graphic xlink:href="bty185f1"/>
      </fig>
      <p>SNP thinning improves ascertainment of population structure with PCA (<xref rid="bty185-B1" ref-type="bibr">Abdellaoui <italic>et al.</italic>, 2013</xref>). There are at least three different approaches to thin SNPs based on linkage disequilibrium. Two of them, named pruning and clumping, address SNPs in LD close to each other’s because of recombination events, while the third one address long-range regions with a complex LD pattern due to other biological events such as inversions (<xref rid="bty185-B26" ref-type="bibr">Price <italic>et al.</italic>, 2008</xref>). First, pruning is an algorithm that sequentially scan the genome for nearby SNPs in LD, performing pairwise thinning based on a given threshold of correlation. Clumping is useful if a statistic is available for sorting the SNPs by importance. Clumping is usually used to post-process results of genome-wide association studies (GWAS) in order to keep only the most significant SNP per region of the genome. For PCA, the thinning procedure should remain unsupervised (no phenotype must be used) and we therefore propose to use the minor allele frequency (MAF) as the statistic of importance. This choice is consistent with the pruning algorithm of PLINK; when two nearby SNPs are correlated, PLINK keeps only the one with the highest MAF. Yet, in some worst-case scenario, the pruning algorithm can leave regions of the genome without any representative SNP at all (<xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘pruning-vs-clumping’</xref>). So, we suggest to use clumping instead of pruning, using the MAF as the statistic of importance, which is the default in function snp_clumping of package bigsnpr. In practice, for the three datasets we considered, the clumping algorithm with the MAF provides similar sets of SNPs as when using the pruning algorithm (results not shown).</p>
      <p>The third approach, which is generally combined with pruning, consists of removing SNPs in long-range LD regions (<xref rid="bty185-B26" ref-type="bibr">Price <italic>et al.</italic>, 2008</xref>). Long-range LD regions for the human genome are available as an online table (<ext-link ext-link-type="uri" xlink:href="https://goo.gl/8TngVE">https://goo.gl/8TngVE</ext-link>) that package bigsnpr can use to discard SNPs in these regions before computing PCs. However, the pattern of LD might be population specific, so we developed an iterative algorithm that automatically detects these long-range LD regions and removes them. This algorithm consists in the following steps: first, PCA is performed using a subset of SNP remaining after clumping (with MAFs), then outliers SNPs are detected using the robust Mahalanobis distance as implemented in method pcadapt (<xref rid="bty185-B20" ref-type="bibr">Luu <italic>et al.</italic>, 2017</xref>). Finally, the algorithm considers that consecutive outlier SNPs are in long-range LD regions. Indeed, a long-range LD region would cause SNPs in this region to have strong consecutive weights (loadings) in the PCA. This algorithm is implemented in function snp_autoSVD of package bigsnpr and will be referred by this name in the rest of the paper.</p>
    </sec>
    <sec>
      <title>3.4 Association tests and polygenic risk scores</title>
      <p>Any test statistic that is based on counts could be easily implemented because we provide fast counting summaries. Among these tests, the Armitage trend test and the MAX3 test statistic are already provided for binary outcomes in bigsnpr (<xref rid="bty185-B35" ref-type="bibr">Zheng <italic>et al.</italic>, 2012a</xref>). Package bigstatsr implements statistical tests based on linear and logistic regressions. For linear regression, a <italic>t</italic>-test is performed for each SNP <italic>j</italic> on <italic>β</italic><sup>(</sup><sup><italic>j</italic></sup><sup>)</sup> where
<disp-formula id="E1"><label>(1)</label><mml:math id="M1"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mo>α</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mo>β</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi>S</mml:mi><mml:mi>N</mml:mi><mml:msup><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mo>γ</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:msubsup><mml:mo>γ</mml:mo><mml:mi>K</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>+</mml:mo><mml:msubsup><mml:mo>δ</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:msubsup><mml:mo>δ</mml:mo><mml:mi>L</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
and <italic>K</italic> is the number of PCs and <italic>L</italic> is the number of other covariates (such as age and gender). Similarly, for logistic regression, a <italic>Z</italic>-test is performed for each SNP <italic>j</italic> on <italic>β</italic><sup>(</sup><sup><italic>j</italic></sup><sup>)</sup> where
<disp-formula id="E2"><label>(2)</label><mml:math id="M2"><mml:mtable><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mfrac></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mo>α</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mo>β</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi>S</mml:mi><mml:mi>N</mml:mi><mml:msup><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mo>γ</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:msubsup><mml:mo>γ</mml:mo><mml:mi>K</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>+</mml:mo><mml:msubsup><mml:mo>δ</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:msubsup><mml:mo>δ</mml:mo><mml:mi>L</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mi>C</mml:mi><mml:mi>O</mml:mi><mml:msub><mml:mi>V</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
and <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mi>ℙ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <italic>Y</italic> denotes the binary phenotype. These tests can be used to perform GWAS and are very fast due to the use of optimized implementations, partly based on previous work by <xref rid="bty185-B30" ref-type="bibr">Sikorska <italic>et al.</italic> (2013)</xref>.</p>
      <p>The R packages also implement functions for computing PRS using two methods. The first method is the widely-used ‘Clumping + Thresholding’ (C + T, also called ‘Pruning + Thresholding’ in the literature) model based on univariate GWAS summary statistics as described in previous equations. Under the C + T model, a coefficient of regression is learned independently for each SNP along with a corresponding <italic>P</italic>-value (the GWAS part). The SNPs are first clumped (C) so that there remains only SNPs that are weakly correlated with each other. Thresholding (T) consists in removing SNPs that are under a certain level of significance (<italic>P</italic>-value threshold to be determined). A PRS is defined as the sum of allele counts of the remaining SNPs weighted by the corresponding regression coefficients (<xref rid="bty185-B8" ref-type="bibr">Chatterjee <italic>et al.</italic>, 2013</xref>; <xref rid="bty185-B11" ref-type="bibr">Dudbridge, 2013</xref>; <xref rid="bty185-B13" ref-type="bibr">Euesden <italic>et al.</italic>, 2015</xref>). On the contrary, the second approach does not use univariate summary statistics but instead train a multivariate model on all the SNPs and covariables <italic>at once</italic>, optimally accounting for correlation between predictors (<xref rid="bty185-B3" ref-type="bibr">Abraham <italic>et al.</italic>, 2012</xref>). The currently available models are very fast sparse linear and logistic regressions. These models include lasso and elastic-net regularizations, which reduce the number of predictors (SNPs) included in the predictive models (<xref rid="bty185-B14" ref-type="bibr">Friedman <italic>et al.</italic>, 2010</xref>; <xref rid="bty185-B31" ref-type="bibr">Tibshirani, 1996</xref>; <xref rid="bty185-B37" ref-type="bibr">Zou and Hastie, 2005</xref>). Package bigstatsr provides a fast implementation of these models by using efficient rules to discard most of the predictors (<xref rid="bty185-B32" ref-type="bibr">Tibshirani <italic>et al.</italic>, 2012</xref>). The implementation of these algorithms is based on modified versions of functions available in the R package biglasso (<xref rid="bty185-B34" ref-type="bibr">Zeng and Breheny, 2017</xref>). These modifications allow to include covariates in the models, to use these algorithms on the special type of FBM called ‘FBM.code256’ used in bigsnpr and to remove the need of choosing the regularization parameter.</p>
    </sec>
    <sec>
      <title>3.5 Data analyzed</title>
      <p>In this paper, two datasets are analyzed: the celiac disease cohort and POPRES (<xref rid="bty185-B10" ref-type="bibr">Dubois <italic>et al.</italic>, 2010</xref>; <xref rid="bty185-B22" ref-type="bibr">Nelson <italic>et al.</italic>, 2008</xref>). The celiac dataset is composed of 15 283 individuals of European ancestry genotyped on 295 453 SNPs. The POPRES dataset is composed of 1385 individuals of European ancestry genotyped on 447 245 SNPs. For computation time comparisons, we replicated individuals in the celiac dataset 5 and 10 times in order to increase sample size while keeping the same eigen decomposition (up to a constant) and pairwise SNP correlations as the original dataset. To assess scalability of the packages for a biobank-scale genotype dataset, we formed another dataset of 500 000 individuals and 1 million SNPs, also through replication of the celiac dataset.</p>
    </sec>
    <sec>
      <title>3.6 Reproducibility</title>
      <p>All the code used in this paper along with results, such as execution times and figures, are available as HTML R notebooks in the <xref ref-type="supplementary-material" rid="sup1">Supplementary materials</xref>. In <xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘public-data’</xref>, we provide some open-access data of domestic dogs so that users can test our code and functions on a moderate size dataset with 4342 samples and 145 596 SNPs (<xref rid="bty185-B17" ref-type="bibr">Hayward <italic>et al.</italic>, 2016</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <sec>
      <title>4.1 Overview</title>
      <p>We present the results of four different analyses. First, we illustrate the application of R packages bigstatsr and bigsnpr. Second, by performing two GWAS, we compare the performance of bigstatsr and bigsnpr to the performance obtained with FastPCA (EIGENSOFT 6.1.4) and PLINK 1.9, and also two R packages SNPRelate and GWASTools (<xref rid="bty185-B7" ref-type="bibr">Chang <italic>et al.</italic>, 2015</xref>; <xref rid="bty185-B15" ref-type="bibr">Galinsky <italic>et al.</italic>, 2016</xref>; <xref rid="bty185-B16" ref-type="bibr">Gogarten <italic>et al.</italic>, 2012</xref>; <xref rid="bty185-B36" ref-type="bibr">Zheng <italic>et al.</italic>, 2012b</xref>). PCA is a computationally intensive step of the GWAS, so that we further compare PCA methods on larger datasets. Third, by performing a PRS analysis with summary statistics, we compare the performance of bigstatsr and bigsnpr to the performance obtained with PRSice-2 (<xref rid="bty185-B13" ref-type="bibr">Euesden <italic>et al.</italic>, 2015</xref>). Finally, we present results of the two new methods implemented in bigsnpr, one method for the automatic detection and removal of long-range LD regions in PCA and another for the in-sample imputation of missing genotypes (i.e. for genotyped SNPs only). We compare performance on two computers, a desktop computer with 64 GB of RAM and 12 cores (six physical cores), and a laptop with only 8 GB of RAM and 4 cores (two physical cores). For the functions that enable parallelism, we use half of the cores available on the corresponding computer. We present a table summarizing the features of different software in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S5</xref>.</p>
    </sec>
    <sec>
      <title>4.2 Application</title>
      <p>The data were pre-processed following steps from <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref>, removing individuals and SNPs with more than 5% of missing values, non-autosomal SNPs, SNPs with a MAF lower than 0.05 or a <italic>P</italic>-value for the Hardy–Weinberg exact test lower than 10<sup>−</sup><sup>10</sup>, and finally, removing the first individual in each pair of individuals with a proportion of alleles shared IBD &gt;0.08 (<xref rid="bty185-B27" ref-type="bibr">Purcell <italic>et al.</italic>, 2007</xref>). For the POPRES dataset, this resulted in 1382 individuals and 344 614 SNPs with no missing value. For the celiac dataset, this resulted in 15 155 individuals and 281 122 SNPs with an overall genotyping rate of 99.96%. The 0.04% missing genotype values were imputed with the XGBoost method. If we would have used a standard R matrix to store the genotypes, this data would have required 32 GB of memory. On the disk, the ‘.bed’ file requires 1 GB and the ‘.bk’ file (storing the FBM) requires 4 GB.</p>
      <p>We used bigstatsr and bigsnpr R functions to compute the first PCs of the celiac genotype matrix and to visualize them (<xref ref-type="fig" rid="bty185-F2">Fig. 2</xref>). We then performed a GWAS investigating how SNPs are associated with celiac disease, while adjusting for PCs, and plotted the results as a Manhattan plot (<xref ref-type="fig" rid="bty185-F3">Fig. 3</xref>). As illustrated in the <xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref>, the whole pipeline is user-friendly, requires only 20 lines of R code and there is no need to write temporary files or objects because functions of packages bigstatsr and bigsnpr have parameters which enable subsetting of the genotype matrix without having to copy it.
</p>
      <fig id="bty185-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Principal components of the celiac cohort genotype matrix produced by package bigstatsr</p>
        </caption>
        <graphic xlink:href="bty185f2"/>
      </fig>
      <fig id="bty185-F3" orientation="portrait" position="float">
        <label>Fig. 3.</label>
        <caption>
          <p>Manhattan plot of the celiac disease cohort produced by package bigsnpr. Some SNPs in chromosome 6 have <italic>P</italic>-values smaller than the 10<sup>−30</sup> threshold used for visualization purposes</p>
        </caption>
        <graphic xlink:href="bty185f3"/>
      </fig>
      <p>To illustrate the scalability of the two R packages, we performed a GWAS analysis on 500 K individuals and 1 M SNPs. The GWAS analysis completed in ∼11 h using the aforementioned desktop computer. The GWAS analysis was composed of four main steps. First we converted binary PLINK files in the format ‘bigSNP’ in 1 h. Then, we removed SNPs in long-range LD regions and used SNP clumping, leaving 93 083 SNPs in 5.4 h. Then, the 10 first PCs were computed on the 500 K individuals and these remaining SNPs in 1.8 h. Finally, we performed a linear association test on the complete 500 K dataset for each of the 1 M SNPs, using the 10 first PCs as covariables in 2.9 h.</p>
    </sec>
    <sec>
      <title>4.3 Performance and precision comparisons</title>
      <p>First, we compared the GWAS computations obtained with bigstatsr and bigsnpr to the ones obtained with PLINK 1.9 and EIGENSOFT 6.1.4, and also two R packages SNPRelate and GWASTools. For most functions, multithreading is not available yet in PLINK, nevertheless, PLINK-specific algorithms that use bitwise parallelism (e.g. pruning) are still faster than the parallel algorithms reimplemented in package bigsnpr (<xref rid="bty185-T1" ref-type="table">Table 1</xref>). Overall, performing a GWAS on a binary outcome with bigstatsr and bigsnpr is as fast as when using EIGENSOFT and PLINK, and 19–45 times faster than when using R packages SNPRelate and GWASTools. For performing an association study on a continuous outcome, we report a dramatic increase in performance by using bigstatsr and bigsnpr, making it possible to perform such analysis in &lt;2 min for a relatively large dataset such as the celiac dataset. This analysis was 7–19 times faster as compared to PLINK 1.9 and 28–74 times faster as compared to SNPRelate and GWASTools (<xref rid="bty185-T1" ref-type="table">Table 1</xref>). Note that the PC scores obtained are more accurate as compared to PLINK (see the last paragraph of this subsection), which is also the case for the <italic>P</italic>-values computed for the two GWAS (see <xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘GWAS-comparison’</xref>).
<table-wrap id="bty185-T1" orientation="portrait" position="float"><label>Table 1.</label><caption><p>Execution times with bigstatsr and bigsnpr compared to PLINK 1.9 and FastPCA (EIGENSOFT) and also to R packages SNPRelate and GWASTools for making a GWAS for the celiac dataset (15 155 individuals and 281 122 SNPs). The first execution time is with a desktop computer (6 cores used and 64 GB of RAM) and the second one is with a laptop (2 cores used and 8 GB of RAM)</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="3" colspan="1">Operation\software</th><th colspan="3" rowspan="1">Execution times (in seconds)<hr/></th></tr><tr><th rowspan="1" colspan="1">FastPCA</th><th rowspan="1" colspan="1">bigstatsr</th><th rowspan="1" colspan="1">SNPRelate</th></tr><tr><th rowspan="1" colspan="1">PLINK 1.9</th><th rowspan="1" colspan="1">bigsnpr</th><th rowspan="1" colspan="1">GWASTools</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">Converting PLINK files</td><td rowspan="1" colspan="1">n/a</td><td rowspan="1" colspan="1">6/20</td><td rowspan="1" colspan="1">13/33</td></tr><tr><td rowspan="1" colspan="1">Pruning</td><td rowspan="1" colspan="1">4/4</td><td rowspan="1" colspan="1">14/52</td><td rowspan="1" colspan="1">33/32</td></tr><tr><td rowspan="1" colspan="1">Computing 10 PCs</td><td rowspan="1" colspan="1">305/314</td><td rowspan="1" colspan="1">58/183</td><td rowspan="1" colspan="1">323/535</td></tr><tr><td rowspan="1" colspan="1">GWAS (binary phenotype)</td><td rowspan="1" colspan="1">337/284</td><td rowspan="1" colspan="1">291/682</td><td rowspan="1" colspan="1">16 220/17 425</td></tr><tr><td rowspan="1" colspan="1">GWAS (continuous phenotype)</td><td rowspan="1" colspan="1">1348/1633</td><td rowspan="1" colspan="1">10/23</td><td rowspan="1" colspan="1">6115/7101</td></tr><tr><td rowspan="1" colspan="1">Total (binary)</td><td rowspan="1" colspan="1">646/602</td><td rowspan="1" colspan="1">369/937</td><td rowspan="1" colspan="1">16 589/18 025</td></tr><tr><td rowspan="1" colspan="1">Total (continuous)</td><td rowspan="1" colspan="1">1657/1951</td><td rowspan="1" colspan="1">88/278</td><td rowspan="1" colspan="1">6484/7701</td></tr></tbody></table></table-wrap></p>
      <p>Second, we compared the PRS analysis performed with the R packages to the one using PRSice-2. There are five main steps in such an analysis (<xref rid="bty185-T2" ref-type="table">Table 2</xref>), including four steps handled with functions of packages bigstatsr and bigsnpr. The remaining step is the reading of summary statistics which can be performed with the widely used function fread of R package data.table. Using bigstatsr and bigsnpr results in an analysis as fast as with PRSice-2 when using our desktop computer, and three times slower when using our laptop (<xref rid="bty185-T2" ref-type="table">Table 2</xref>).
<table-wrap id="bty185-T2" orientation="portrait" position="float"><label>Table 2.</label><caption><p>Execution times with bigstatsr and bigsnpr compared to PRSice for making a PRS on the celiac dataset based on summary statistics for height. The first execution time is with a desktop computer (6 cores used and 64 GB of RAM) and the second one is with a laptop (2 cores used and 8 GB of RAM)</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="center" span="1"/><col valign="top" align="left" span="1"/></colgroup><thead><tr><th rowspan="2" colspan="1">Operation\software</th><th colspan="2" align="left" rowspan="1">Execution times (in seconds)<hr/></th></tr><tr><th rowspan="1" colspan="1">PRSice</th><th rowspan="1" colspan="1">bigstatsr and bigsnpr</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">Converting PLINK files</td><td rowspan="1" colspan="1">—</td><td rowspan="1" colspan="1">6/20</td></tr><tr><td rowspan="1" colspan="1">Reading summary stats</td><td rowspan="1" colspan="1">—</td><td rowspan="1" colspan="1">4/6</td></tr><tr><td rowspan="1" colspan="1">Clumping</td><td rowspan="1" colspan="1">—</td><td rowspan="1" colspan="1">9/31</td></tr><tr><td rowspan="1" colspan="1">PRS</td><td rowspan="1" colspan="1">—</td><td rowspan="1" colspan="1">2/33</td></tr><tr><td rowspan="1" colspan="1">Compute <italic>P-</italic>values</td><td rowspan="1" colspan="1">—</td><td rowspan="1" colspan="1">1/1</td></tr><tr><td rowspan="1" colspan="1">Total</td><td rowspan="1" colspan="1">22/29</td><td rowspan="1" colspan="1">22/91</td></tr></tbody></table></table-wrap></p>
      <p>Finally, on our desktop computer, we compared the computation times of FastPCA (fast mode of EIGENSOFT), FlashPCA2 and PLINK 2.0 (approx mode) to the similar function big_randomSVD implemented in bigstatsr. For each comparison, we used the 93 083 SNPs which were remaining after pruning and we computed 10 PCs. We used the datasets of growing size simulated from the celiac dataset (from 15 155 to 151 550 individuals). Overall, function big_randomSVD is almost twice as fast as FastPCA and FlashPCA2 and eight times as fast as when using parallelism with six cores, an option not currently available in either FastPCA or FlashPCA2 (<xref ref-type="fig" rid="bty185-F4">Fig. 4</xref>). PLINK 2.0 is faster than bigstatsr with a decrease in time of 20–40%. We also compared results in terms of precision by comparing squared correlation between approximated PCs and ‘true’ PCs provided by an exact eigen decomposition obtained with PLINK 2.0 (exact mode). Package bigstatsr and FlashPCA2 (that use the same algorithm) infer all PCs with a squared correlation of more than 0.999 between true PCs and approximated ones (<xref ref-type="fig" rid="bty185-F5">Fig. 5</xref>). Yet, FastPCA (fast mode of EIGENSOFT) and PLINK 2.0 (that use the same algorithm) infer the true first six PCs but the squared correlation between true PCs and approximated ones decreases for further PCs (<xref ref-type="fig" rid="bty185-F5">Fig. 5</xref>).
</p>
      <fig id="bty185-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>Benchmark comparisons between randomized partial singular value decomposition available in FlashPCA2, FastPCA (fast mode of SmartPCA/EIGENSOFT), PLINK 2.0 (approx mode) and package bigstatsr. It shows the computation time in minutes as a function of the number of samples. The first 10 principal components have been computed based on the 93 083 SNPs which remained after thinning</p>
        </caption>
        <graphic xlink:href="bty185f4"/>
      </fig>
      <fig id="bty185-F5" orientation="portrait" position="float">
        <label>Fig. 5.</label>
        <caption>
          <p>Precision comparisons between randomized partial singular value decomposition available in FlashPCA2, FastPCA (fast mode of SmartPCA/EIGENSOFT), PLINK 2.0 (approx mode) and package bigstatsr. It shows the squared correlation between approximated PCs and ‘true’ PCs (produced by the exact mode of PLINK 2.0) of the celiac dataset (whose individuals have been repeated 1, 5 and 10 times)</p>
        </caption>
        <graphic xlink:href="bty185f5"/>
      </fig>
    </sec>
    <sec>
      <title>4.4 Automatic detection of long-range LD regions</title>
      <p>For detecting long-range LD regions during the computation of PCA, we tested the function snp_autoSVD on both the celiac and POPRES datasets. For the POPRES dataset, the algorithm converged in two iterations. The first iterations found three long-range LD regions in chromosomes 2, 6 and 8 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). We compared the PCs of genotypes obtained after applying snp_autoSVD with the PCs obtained after removing pre-determined long-range LD regions (<ext-link ext-link-type="uri" xlink:href="https://goo.gl/8TngVE">https://goo.gl/8TngVE</ext-link>) and found a mean correlation of 89.6% between PCs, mainly due to a rotation of PC7 and PC8 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>). For the celiac dataset, we found five long-range LD regions (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>) and a mean correlation of 98.6% between PCs obtained with snp_autoSVD and the ones obtained by clumping and removing pre-determined long-range LD regions (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref>).</p>
      <p>For the celiac dataset, we further compared results of PCA obtained when using snp_autoSVD and when computing PCA without removing any long range LD region (only clumping at <italic>R</italic><sup>2</sup> &gt; 0.2). When not removing any long range LD region, we show that PC4 and PC5 do not capture population structure and correspond to a long-range LD region in chromosome 8 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S3 and S4</xref>). When automatically removing some long-range LD regions with snp_autoSVD, we show that PC4 and PC5 reflect population structure (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S3</xref>). Moreover, loadings are more equally distributed among SNPs after removal of long-range LD regions (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S4</xref>). This is confirmed by Gini coefficients (measure of dispersion) of each squared loadings that are significantly smaller when computing PCA with snp_autoSVD than when no long-range LD region is removed (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S5</xref>).</p>
    </sec>
    <sec>
      <title>4.5 Imputation of missing values for genotyped SNPs</title>
      <p>For the imputation method based on XGBoost, we compared the imputation accuracy and computation times with Beagle on the POPRES dataset (with no missing value). The histogram of the MAFs of this dataset is provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>. We used a beta-binomial distribution to simulate the number of missing values by SNP and then randomly introduced missing values according to these numbers, resulting in ∼3% of missing values overall (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S7</xref>). Imputation was compared between function snp_fastImpute of package bigsnpr and Beagle 4.1 (version of January 21, 2017) by counting the percentage of imputation errors (when the imputed genotype is different from the true genotype). Overall, in three runs, snp_fastImpute made only 4.7% of imputation errors and Beagle made only 3.1% of errors. Yet, it took Beagle 14.6 h to complete while snp_fastImpute only took 42 min (20 times less). We also note that snp_fastImpute made less 0/2 switching errors, i.e. imputing with a homozygous referent where the true genotype is a homozygous variant, or the contrary (<xref ref-type="supplementary-material" rid="sup1">Supplementary notebook ‘imputation’</xref>). We also show that the estimation of the number of imputation errors provided by function snp_fastImpute is accurate (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S8</xref>), which can be useful for post-processing the imputation by removing SNPs with too many errors (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S9</xref>). For the celiac dataset in which there were already missing values, in order to further compare computation times, we report that snp_fastImpute took &lt;10 h to complete for the whole genome whereas Beagle did not finish imputing chromosome 1 in 48 h.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Discussion</title>
    <p>We have developed two R packages, bigstatsr and bigsnpr, which enable multiple analyses of large-scale genotype datasets in R thanks to memory-mapping. Linkage disequilibrium pruning, PCA, association tests and computation of PRS are made available in these software. Implemented algorithms are both fast and memory-efficient, allowing the use of laptops or desktop computers to make genome-wide analyses. Technically, bigstatsr and bigsnpr could handle any size of datasets. However, if the OS has to often swap between the file and the memory for accessing the data, this would slow down data analysis. For example, the PCA algorithm in bigstatsr is iterative so that the matrix has to be sequentially accessed over a hundred times. If the number of samples times the number of SNPs remaining after pruning is larger than the available memory, this slowdown would happen. For instance, a 32 GB computer would be slow when computing PCs on more than 100K samples and 300K SNPs remaining after LD thinning.</p>
    <p>The two R packages use a matrix-like format, which makes it easy to develop new functions in order to experiment and develop new ideas. Integration in R makes it possible to take advantage of the vast and diverse R libraries. For example, we developed a fast and accurate imputation algorithm for genotyped SNPs using the widely-used machine learning algorithm XGBoost available in the R package xgboost. Other functions, not presented here, are also available and all the functions available within the package bigstatsr are not specific to SNP arrays, so that they could be used for other omic data or in other fields of research.</p>
    <p>We think that the two R packages and the corresponding data format could help researchers to develop new ideas and algorithms to analyze genome-wide data. For example, we wish to use these packages to train much more accurate predictive models than the standard C + T model currently in use for computing PRS. As a second example, multiple imputation has been shown to be a very promising method for increasing statistical power of a GWAS (<xref rid="bty185-B24" ref-type="bibr">Palmer and Pe’er, 2016</xref>), and it could be implemented with the data format ‘FBM.code256’ without having to write multiple files.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>Authors acknowledge LabEx PERSYVAL-Lab (ANR-11-LABX-0025-01). Authors also acknowledge the Grenoble Alpes Data Institute that is supported by the French National Research Agency under the ‘Investissements d’avenir’ program (ANR-15-IDEX-02).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="bty185_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>Authors would like to thank the reviewers of this paper because their comments and suggestions have led to a significant improvement of this paper.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bty185-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abdellaoui</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Population structure, migration, and diversifying selection in the Netherlands</article-title>. <source>Eur. J. Hum. Genet</source>., <volume>21</volume>, <fpage>1277</fpage>–<lpage>1285</lpage>.<pub-id pub-id-type="pmid">23531865</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abraham</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Inouye</surname><given-names>M.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Fast principal component analysis of large-scale genome-wide data</article-title>. <source>PLoS ONE</source>, <volume>9</volume>, <fpage>e93766</fpage>.<pub-id pub-id-type="pmid">24718290</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abraham</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>SparSNP: fast and memory-efficient analysis of all SNPs for phenotype prediction</article-title>. <source>BMC Bioinformatics</source>, <volume>13</volume>, <fpage>88</fpage>.<pub-id pub-id-type="pmid">22574887</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abraham</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>FlashPCA2: principal component analysis of biobank-scale genotype datasets</article-title>. <source>bioRxiv</source>, <volume>12</volume>, <fpage>2014</fpage>–<lpage>2017</lpage>.</mixed-citation>
    </ref>
    <ref id="bty185-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aulchenko</surname><given-names>Y.S.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>Genabel: an r library for genome-wide association analysis</article-title>. <source>Bioinformatics</source>, <volume>23</volume>, <fpage>1294</fpage>–<lpage>1296</lpage>.<pub-id pub-id-type="pmid">17384015</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Browning</surname><given-names>S.R.</given-names></name>, <name name-style="western"><surname>Browning</surname><given-names>B.L.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Rapid and accurate haplotype phasing and missing data inference for whole genome association studies by use of localized haplotype clustering</article-title>. <source>Am. J. Hum. Genet</source>., <volume>81</volume>, <fpage>1084</fpage>–<lpage>1097</lpage>.<pub-id pub-id-type="pmid">17924348</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chang</surname><given-names>C.C.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Second-generation plink: rising to the challenge of larger and richer datasets</article-title>. <source>Gigascience</source>, <volume>4</volume>, <fpage>7</fpage>.<pub-id pub-id-type="pmid">25722852</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chatterjee</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Projecting the performance of risk prediction based on polygenic analyses of genome-wide association studies</article-title>. <source>Nature Genet</source>., <volume>45</volume>, <fpage>400</fpage>–<lpage>405</lpage>. 405e1–3.<pub-id pub-id-type="pmid">23455638</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B9">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Guestrin</surname><given-names>C.</given-names></name></person-group> (<year>2016</year>) XGBoost: A scalable tree boosting system. In <italic>Proceedings of the 22nd ACM Sigkdd International Conference on Knowledge Discovery and Data Mining</italic>, ACM, pp. 785–794.</mixed-citation>
    </ref>
    <ref id="bty185-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dubois</surname><given-names>P.C.A.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Multiple common variants for celiac disease influencing immune gene expression</article-title>. <source>Nature Genet</source>., <volume>42</volume>, <fpage>295</fpage>–<lpage>302</lpage>.<pub-id pub-id-type="pmid">20190752</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dudbridge</surname><given-names>F.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Power and predictive accuracy of polygenic risk scores</article-title>. <source>PLoS Genet</source>., <volume>9</volume>, <fpage>e1003348</fpage>.<pub-id pub-id-type="pmid">23555274</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eddelbuettel</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>François</surname><given-names>R.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Rcpp: seamless R and C ++ integration</article-title>. <source>J. Stat. Softw</source>., <volume>40</volume>, <fpage>1</fpage>–<lpage>18</lpage>.</mixed-citation>
    </ref>
    <ref id="bty185-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Euesden</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>PRSice: Polygenic Risk Score software</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>1466</fpage>–<lpage>1468</lpage>.<pub-id pub-id-type="pmid">25550326</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Regularization paths for generalized linear models via coordinate descent</article-title>. <source>J. Stat. Softw</source>., <volume>33</volume>, <fpage>1</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">20808728</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Galinsky</surname><given-names>K.J.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Fast principal-component analysis reveals convergent evolution of ADH1B in Europe and East Asia</article-title>. <source>Am. J. Hum. Genet</source>., <volume>98</volume>, <fpage>456</fpage>–<lpage>472</lpage>.<pub-id pub-id-type="pmid">26924531</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gogarten</surname><given-names>S.M.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>GWASTools: an R/Bioconductor package for quality control and analysis of genome-wide association studies</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>3329</fpage>–<lpage>3331</lpage>.<pub-id pub-id-type="pmid">23052040</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hayward</surname><given-names>J.J.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Complex disease and phenotype mapping in the domestic dog</article-title>. <source>Nat. Commun</source>., <volume>7</volume>, <fpage>10460</fpage>.<pub-id pub-id-type="pmid">26795439</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kane</surname><given-names>M.J.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Scalable strategies for computing with massive data</article-title>. <source>J. Stat. Softw</source>., <volume>55</volume>, <fpage>1</fpage>–<lpage>19</lpage>.</mixed-citation>
    </ref>
    <ref id="bty185-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lehoucq</surname><given-names>R.B.</given-names></name>, <name name-style="western"><surname>Sorensen</surname><given-names>D.C.</given-names></name></person-group> (<year>1996</year>) 
<article-title>Deflation techniques for an implicitly restarted Arnoldi iteration</article-title>. <source>SIAM J. Matrix Anal. Appl</source>., <volume>17</volume>, <fpage>789</fpage>–<lpage>821</lpage>.</mixed-citation>
    </ref>
    <ref id="bty185-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Luu</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>pcadapt: an R package to perform genome scans for selection based on principal component analysis</article-title>. <source>Mol. Ecol. Resour</source>., <volume>17</volume>, <fpage>67</fpage>–<lpage>77</lpage>.<pub-id pub-id-type="pmid">27601374</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McCarthy</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>A reference panel of 64, 976 haplotypes for genotype imputation</article-title>. <source>Nature Genet</source>., <volume>48</volume>, <fpage>1279</fpage>.<pub-id pub-id-type="pmid">27548312</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nelson</surname><given-names>M.R.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) 
<article-title>The population reference sample, POPRES: a resource for population, disease, and pharmacological genetics research</article-title>. <source>Am. J. Hum. Genet</source>., <volume>83</volume>, <fpage>347</fpage>–<lpage>358</lpage>.<pub-id pub-id-type="pmid">18760391</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nielsen</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Mailund</surname><given-names>T.</given-names></name></person-group> (<year>2008</year>) 
<article-title>SNPFile–a software library and file format for large scale association mapping and population genetics studies</article-title>. <source>BMC Bioinformatics</source>, <volume>9</volume>, <fpage>526</fpage>.<pub-id pub-id-type="pmid">19063732</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Palmer</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Pe’er</surname><given-names>I.</given-names></name></person-group> (<year>2016</year>) 
<article-title>Bias characterization in probabilistic genotype data and improved signal detection with multiple imputation</article-title>. <source>PLoS Genet</source>., <volume>12</volume>, <fpage>e1006091</fpage>.<pub-id pub-id-type="pmid">27310603</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Price</surname><given-names>A.L.</given-names></name></person-group><etal>et al</etal> (<year>2006</year>) 
<article-title>Principal components analysis corrects for stratification in genome-wide association studies</article-title>. <source>Nature Genet</source>., <volume>38</volume>, <fpage>904</fpage>–<lpage>909</lpage>.<pub-id pub-id-type="pmid">16862161</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Price</surname><given-names>A.L.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) 
<article-title>Long-range LD can confound genome scans in admixed populations</article-title>. <source>Am. J. Hum. Genet</source>., <volume>83</volume>, <fpage>132</fpage>–<lpage>135</lpage>.<pub-id pub-id-type="pmid">18606306</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Purcell</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>PLINK: a tool set for whole-genome association and population-based linkage analyses</article-title>. <source>Am. J. Hum. Genet</source>., <volume>81</volume>, <fpage>559</fpage>–<lpage>575</lpage>.<pub-id pub-id-type="pmid">17701901</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B28">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Qiu</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Mei</surname><given-names>J.</given-names></name></person-group> (<year>2016</year>) <italic>RSpectra: Solvers for Large Scale Eigenvalue and SVD Problems.</italic> R package version 0.12-0.</mixed-citation>
    </ref>
    <ref id="bty185-B29">
      <mixed-citation publication-type="book"><collab>R Core Team</collab> (<year>2017</year>) <source>R: A Language and Environment for Statistical Computing</source>. 
<publisher-name>R Foundation for Statistical Computing</publisher-name>, 
<publisher-loc>Vienna, Austria</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty185-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sikorska</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Gwas on your notebook: fast semi-parallel linear and logistic regression for genome-wide association studies</article-title>. <source>BMC Bioinformatics</source>, <volume>14</volume>, <fpage>166</fpage>.<pub-id pub-id-type="pmid">23711206</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tibshirani</surname><given-names>R.</given-names></name></person-group> (<year>1996</year>) 
<article-title>Regression selection and shrinkage via the lasso</article-title>. <source>J. R. Stat. Soc. B</source>, <volume>58</volume>, <fpage>267</fpage>–<lpage>288</lpage>.</mixed-citation>
    </ref>
    <ref id="bty185-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tibshirani</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Strong rules for discarding predictors in lasso-type problems</article-title>. <source>J. R. Stat. Soc. Series B Stat. Methodol</source>., <volume>74</volume>, <fpage>245</fpage>–<lpage>266</lpage>.<pub-id pub-id-type="pmid">25506256</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Fast accurate missing SNP genotype local imputation</article-title>. <source>BMC Res. Notes</source>, <volume>5</volume>, <fpage>404</fpage>.<pub-id pub-id-type="pmid">22863359</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B34">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Zeng</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Breheny</surname><given-names>P.</given-names></name></person-group> (<year>2017</year>) The biglasso package: a memory-and computation-efficient solver for lasso model fitting with big data in R. <italic>arXiv preprint arXiv: 1701.05936.</italic></mixed-citation>
    </ref>
    <ref id="bty185-B35">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Zheng</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2012a</year>) <source>Analysis of Genetic Association Studies. Statistics for Biology and Health</source>. 
<publisher-name>Springer</publisher-name>, 
<publisher-loc>Boston, MA, USA</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty185-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zheng</surname><given-names>X.</given-names></name></person-group><etal>et al</etal> (<year>2012b</year>) 
<article-title>A high-performance computing toolset for relatedness and principal component analysis of snp data</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>3326</fpage>–<lpage>3328</lpage>.<pub-id pub-id-type="pmid">23060615</pub-id></mixed-citation>
    </ref>
    <ref id="bty185-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zou</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Hastie</surname><given-names>T.</given-names></name></person-group> (<year>2005</year>) 
<article-title>Regularization and variable selection via the elastic net</article-title>. <source>J. R. Stat. Soc. Series B Stat. Methodol</source>., <volume>67</volume>, <fpage>301</fpage>–<lpage>320</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

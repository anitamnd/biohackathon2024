<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10120131</article-id>
    <article-id pub-id-type="pmid">37081487</article-id>
    <article-id pub-id-type="publisher-id">2917</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02917-w</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pycoMeth: a toolbox for differential methylation testing from Nanopore methylation calls</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-7318-976X</contrib-id>
        <name>
          <surname>Snajder</surname>
          <given-names>Rene</given-names>
        </name>
        <address>
          <email>rene.snajder@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Leger</surname>
          <given-names>Adrien</given-names>
        </name>
        <address>
          <email>adrien.leger@nanoporetech.com</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stegle</surname>
          <given-names>Oliver</given-names>
        </name>
        <address>
          <email>o.stegle@dkfz-heidelberg.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff6">6</xref>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bonder</surname>
          <given-names>Marc Jan</given-names>
        </name>
        <address>
          <email>m.bonder@dkfz-heidelberg.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff6">6</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.7497.d</institution-id><institution-id institution-id-type="ISNI">0000 0004 0492 0584</institution-id><institution>Division of Computational Genomics and Systems Genetics, </institution><institution>German Cancer Research Center (DKFZ), </institution></institution-wrap>Heidelberg, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.7700.0</institution-id><institution-id institution-id-type="ISNI">0000 0001 2190 4373</institution-id><institution>Faculty for Biosciences, </institution><institution>Heidelberg University, </institution></institution-wrap>Heidelberg, Germany </aff>
      <aff id="Aff3"><label>3</label>HIDSS4Health, Helmholtz Information and Data Science School for Health, Heidelberg, Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.225360.0</institution-id><institution-id institution-id-type="ISNI">0000 0000 9709 7726</institution-id><institution>European Bioinformatics Institute, </institution><institution>European Molecular Biology Laboratory (EMBL), </institution></institution-wrap>Hinxton, Cambridge, UK </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.437060.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0567 5138</institution-id><institution>Current affiliation: Oxford Nanopore Technologies, </institution><institution>Gosling Building, Oxford Science Park, </institution></institution-wrap>Oxford, UK </aff>
      <aff id="Aff6"><label>6</label><institution-wrap><institution-id institution-id-type="GRID">grid.4709.a</institution-id><institution-id institution-id-type="ISNI">0000 0004 0495 846X</institution-id><institution>Genome Biology Unit, </institution><institution>European Molecular Biology Laboratory (EMBL), </institution></institution-wrap>Heidelberg, Germany </aff>
      <aff id="Aff7"><label>7</label><institution-wrap><institution-id institution-id-type="GRID">grid.10306.34</institution-id><institution-id institution-id-type="ISNI">0000 0004 0606 5382</institution-id><institution>Wellcome Sanger Institute, </institution><institution>Wellcome Trust Genome Campus, </institution></institution-wrap>Cambridge, UK </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>4</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>4</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>83</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>3</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present <italic>pycoMeth</italic>, a toolbox to store, manage and analyze DNA methylation calls from long-read sequencing data obtained using the Oxford Nanopore Technologies sequencing platform. Building on a novel, rapid-access, read-level and reference-anchored methylation storage format <italic>MetH5</italic>, we propose efficient algorithms for haplotype aware, multi-sample consensus segmentation and differential methylation testing. We show that <italic>MetH5</italic> is more efficient than existing solutions for storing Oxford Nanopore Technologies methylation calls, and carry out benchmarking for <italic>pycoMeth</italic> segmentation and differential methylation testing, demonstrating increased performance and sensitivity compared to existing solutions designed for short-read methylation data.</p>
      <sec>
        <title>Supplementary information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02917-w.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Nanopore</kwd>
      <kwd>Methylation</kwd>
      <kwd>meth5</kwd>
      <kwd>pycometh</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Deutsches Krebsforschungszentrum (DKFZ) (1052)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">High-throughput technologies for profiling of DNA base modifications have become established tools to study epigenetic regulation. In mammalian cells, the predominant and most studied type of base modification is the methylation of cytosine in the 5′CpG3′ context (often abbreviated 5mC or simply CpG-methylation). Genomic regions enriched with this CpG motif (often referred to as CpG-islands, CGI) are found to be less tightly associated with nucleosomes, hence more accessible to DNA-binding proteins such as transcription factors [<xref ref-type="bibr" rid="CR1">1</xref>]. Methylation of CpG in regulatory regions can affect gene expression in a variety of ways, including via direct interference with transcription factor binding or via recruitment of binding proteins attracted to methylated CpGs [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Other, arguably less well studied, types of DNA base modifications include the methylation of adenine in 5′GATC3′ (6mA) context or any of the oxidative derivatives of 5mC (5hmC, 5fC, and 5caC) [<xref ref-type="bibr" rid="CR3">3</xref>].</p>
    <p id="Par3">There exists a growing repertoire of high-throughput assays for the profiling of CpG-methylation states. Aside from targeted approaches like bead array based methods, the most commonly used techniques are based on short read sequencing and offer single-base resolution and genome-wide coverage [<xref ref-type="bibr" rid="CR4">4</xref>]. These include whole genome bisulfite sequencing (WGBS), and more recently an enzymatic methylation sequencing protocol, promising lower DNA degradation and more balanced base representation [<xref ref-type="bibr" rid="CR5">5</xref>]. Both of these methods have been applied in bulk and single cell setting.</p>
    <p id="Par4">Our increased understanding on genetic variation has created demand for longer reads, and has therefore given rise to long-read sequencing technologies such as those developed by Pacific Biosciences (PacBio) as well as Oxford Nanopore Technologies (ONT), which can directly sequence native DNA molecules. Sequencing long single molecules can aide in problems that are difficult to resolve with short-read sequencing, such as the reliable detection of structural variations [<xref ref-type="bibr" rid="CR6">6</xref>], phasing of variants into paternal and maternal haplotype [<xref ref-type="bibr" rid="CR7">7</xref>], as well as the assembly of an entire human genome including low-complexity regions [<xref ref-type="bibr" rid="CR8">8</xref>]. Additionally, ONT sequencing datasets can be (re)processed to obtain measurements of base modification states [<xref ref-type="bibr" rid="CR9">9</xref>]. This allows for a host of applications through profiling the epigenome in a haplotype-resolved, whole-genome, single-molecule setting [<xref ref-type="bibr" rid="CR10">10</xref>], including in regions which are poorly studied and annotated.</p>
    <p id="Par5">These new opportunities come with new challenges that need to be addressed in downstream analysis software. In the initial step, the modification state of a base needs to be determined. For this, a number of methylation callers have already been published, including Nanopolish [<xref ref-type="bibr" rid="CR10">10</xref>], DeepSignal [<xref ref-type="bibr" rid="CR11">11</xref>], and ONT’s own Megalodon [<xref ref-type="bibr" rid="CR12">12</xref>]. These methods have been compared and benchmarked elsewhere [<xref ref-type="bibr" rid="CR13">13</xref>]. The first pivotal challenge which arises from this new data type, and one which we address, is the need to efficiently store and retrieve base-level information with read association. We focus specifically on methylation calls from Nanopolish, a Bayesian methylation prediction tool emitting log-likelihood ratios (LLRs) of methylation [<xref ref-type="bibr" rid="CR10">10</xref>]. The large number of methylation calls (up to 850 million CpG-methylation calls in a 30× coverage sequencing experiment of the human genome [<xref ref-type="bibr" rid="CR14">14</xref>]) need to be stored and made accessible in an efficient manner. HTSLib [<xref ref-type="bibr" rid="CR15">15</xref>] recently implemented two new tags (MM and ML) to store base modification probabilities together with the read alignments in the SAM format, storing methylation calls efficiently but at the cost of access speed (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C). Here, we propose <italic>MetH5</italic>, an open standard storage format optimized for rapid random access, scalability, and parallel computing, storing individual methylation calls at read and base level.</p>
    <p id="Par6">Furthermore, standard downstream analysis tasks such as discovery of differential methylation require software tools supporting methylation data from ONT sequencing. While existing methods designed for methylation frequency analysis measured using bisulfite sequencing can be appropriated, this approach ignores read information and requires binarizing methylation probabilities to discrete methylation calls. Downstream analysis software which takes full advantage of the probabilistic nature of ONT methylation calls as well as the molecule-level information, such as haplotype assignment, is currently lacking. To close this gap, we provide <italic>pycoMeth</italic>, a software suite for <italic>de novo</italic> methylation segmentation and differential methylation testing. To shed dependence on reliable genome annotation and to identify methylation patterns <italic>de novo</italic>, pycoMeth implements a Bayesian changepoint detection framework as a methylome segmentation tool. This method takes into account read-level information, as well as methylation call uncertainties, and produces a consensus segmentation over multiple read-groups (e.g., multiple samples, haplotypes, or sample/haplotype combinations). Furthermore, pycoMeth’s differential methylation testing module offers a variety of testing options for the discovery of differentially methylated regions (DMRs) in two or more samples, as well as a reporting function generating HTML reports for discovered DMRs.</p>
    <p id="Par7">Together, in this work, we present a software toolbox that represents an accessible, integrated solution, addressing the unique challenges of methylation analysis from ONT sequencing, encompassing efficient storage, segmentation, and differential methylation testing (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). To showcase our software, we also perform an extensive benchmark on simulated and real data, demonstrating the efficiency, flexibility, and versatility of <italic>pycoMeth</italic> and the <italic>MetH5</italic> format compared to existing tools for ONT and bisulfite sequencing.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of differential methylation analysis on ONT data using MetH5 and pycoMeth. Here, three biological samples are ONT-sequenced, base- and methylation-called, and haplotyped. The methylation caller output is stored in MetH5 format. Sample name and haplotype assignment for each read are stored as read groups in the MetH5 file (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). PycoMeth methylome segmentation is performed, producing a consensus segmentation over all read-groups. Each segment is then tested for differential methylation or allele-specific methylation (in this example between-sample differences, ignoring haplotypes). Finally, pycoMeth generates a summary HTML report as well as detailed reports for all DMRs (Fig. <xref rid="Fig3" ref-type="fig">3</xref>)</p></caption><graphic xlink:href="13059_2023_2917_Fig1_HTML" id="MO1"/></fig></p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>MetH5 — an efficient read-level base modification container</title>
      <p id="Par8">Data storage and retrieval in pycoMeth is handled by MetH5 — a file format specifically designed for base methylation call storage from long read data with uncertainties (such as ONT). MetH5 enables rapid random access and is optimized for parallel computing, while retaining access to all long-read specific information such as methylation call uncertainties and molecule-level information. The MetH5 format (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A) is built on the Hierarchical Data Format (HDF) version 5 [<xref ref-type="bibr" rid="CR16">16</xref>], and we consider the following guiding principles for its design. <italic>Read-level storage</italic>: All base modification calls are stored together with the read they originated from, in order to allow read-level and read-group-level analyses. <italic>Base-level uncertainty estimates</italic>: MetH5 is not limited to binary calls, but can natively store the confidence values output by the base modification caller. <italic>Rapid random access</italic>: Base modification calls are stored in order of their genomic coordinate and indexed such that they can be retrieved with minimum disk I/O (Fig. <xref rid="Fig2" ref-type="fig">2</xref>B, C). <italic>Parallel processing</italic>: Chunked storage and accessor methods facilitate even load distribution when used in parallel systems (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1). <italic>Efficient storage</italic>: Using efficient data types, data compression, and avoiding data duplication (such as read names or chromosome names). <italic>Flexible annotations</italic>: Reads can be annotated with arbitrary read-group qualifiers (e.g., sample, haplotype group, haplotype id). We evaluate the runtime performance and storage efficiency of the MetH5 format in Fig. <xref rid="Fig2" ref-type="fig">2</xref>C.<fig id="Fig2"><label>Fig. 2</label><caption><p>The MetH5 file format. <bold>A</bold> Structure of the HDF5 container including dataset types and shapes. <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_x$$\end{document}</tex-math><mml:math id="M2"><mml:msub><mml:mi>N</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq1.gif"/></alternatives></inline-formula> refers to the number of methylation calls per chromosome <italic>x</italic>. <italic>R</italic> refers to the total number of reads in the entire container. Methylation calls are stored together with their genomic coordinate on the chromosome (range), the log-likelihood ratio (LLR) of methylation, and a numeric read ID (unique to this container). Read names are optionally stored, mapping each of the MetH5 numeric read IDs to the original read name. An arbitrary number of read groupings can be stored, assigning each read to exactly one read group per grouping. <bold>B</bold> Schematic representation of random access in the MetH5 format. An index per chromosome allows direct access to the required chunk. The range dataset can then be searched for the start and end index. Once these indices have been acquired, LLRs and read IDs can be read directly and optionally. If globally unique read names are required, they can be looked up directly using the read ID, and the same holds for read groups such as haplotype assignments. <bold>C</bold> Performance comparison between MetH5 and BAM/CRAM format with MM tag (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>). In the file size comparison, bars represent only the extra space occupied by MM and ML tags, and native BAM size is annotated next to the bar</p></caption><graphic xlink:href="13059_2023_2917_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par9">MetH5 comes with a python API to abstract the architecture and provide developers with a coherent software interface. In addition to the python API, the meth5 package also comes with a command line user interface (CLI), which allows the creation, merging, and annotation of MetH5 files. The software also supports the extraction of key data quality statistics, such as base modification rates and coverage, for visualization in external software such as the integrative genomics viewer (IGV) [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>].</p>
    </sec>
    <sec id="Sec4">
      <title>pycoMeth Meth_Seg — Bayesian methylome segmentation for haplotype-aware multi-sample changepoint discovery</title>
      <p id="Par10">The ability to measure methylation on haplotyped long reads offers a unique opportunity for discovery of methylation patterns in a <italic>de novo</italic> fashion, independent of pre-made functional annotations or CGIs. Utilizing the efficient access to read-level methylation information offered by the MetH5 format, we implement pycoMeth Meth_Seg, a Bayesian changepoint detection algorithm (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A) for multi-read-group segmentation of methylation profiles, designed for the <italic>de novo</italic> discovery of methylation patterns from multiple (haplotyped) ONT sequenced samples. In contrast to previous segmentation methods, which either segment a single methylation profile [<xref ref-type="bibr" rid="CR19">19</xref>], or derive a segmentation from differential methylation between two samples [<xref ref-type="bibr" rid="CR20">20</xref>], pycoMeth Meth_Seg takes into account an arbitrary number of read groups (e.g., biological samples, haplotypes, or individual molecules/reads) to detect a dynamic set of methylation patterns from which it then derives a single consensus segmentation. To do so, the read-group annotation stored in the MetH5 container can be used to inform pycoMeth Meth_Seg about categorical methylation confounders such as biological sample or haplotype, which are then considered equally in the segmentation, allowing for for haplotype aware multi-sample methylome segmentation.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example pycoMeth workflow for differential methylation analysis. <bold>A</bold> Methylome segmentation using a sBayesian changepoint detection model. Segmentation can be computed on a read-group (e.g., haplotype) level. Emission likelihood in the HMM models methylation call uncertainties as well as an optional methylation rate prior. <bold>B</bold> Differential methylation testing allows for a number of test choices. The LLR difference hypothesis compares methylation call LLRs within a segment between two samples directly. Selecting the count dependency hypothesis or the <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M4"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq2.gif"/></alternatives></inline-formula>-score difference hypothesis (default) both result in binarization of methylation calls based on a defined LLR threshold. The count dependency hypothesis leads to a test on contingency tables, testing dependency between methylation count and read group, whereas the <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M6"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq3.gif"/></alternatives></inline-formula>-score difference hypothesis results in a test comparing, for each segment, the read methylation rates between read groups. Regardless of test hypothesis, <italic>p</italic>-values are then subjected to multiple testing correction. <bold>C</bold> The reporting module generates an overview HTML report, as well as individual interval reports</p></caption><graphic xlink:href="13059_2023_2917_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par11">The pycoMeth Meth_Seg model directly models methylation calls as uncertain observations, based on the LLRs stored in the MetH5 container. Methylation rates per segment per read group are then estimated as the parameters of the model, while simultaneously the segmentation is optimized to maximize the likelihood of observations (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>). Default hyperparameters are set to maximize sensitivity such that typically an oversegmentation is achieved. This results in a segmentation that is unbiased towards between-sample differential methylation, as it is designed to compute a segmentation even in the absence of DMRs.</p>
      <p id="Par12">Segmentation can be performed either via a python API, or using a CLI which takes one or more MetH5 files as the input. PycoMeth can take advantage of MetH5’s chunked data storage, allowing chunked operations in order to allow efficient load distribution on parallel systems (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1).</p>
    </sec>
    <sec id="Sec5">
      <title>pycoMeth Meth_Comp — versatile differential methylation testing suite</title>
      <p id="Par13">Once the methylome has been segmented, pycoMeth can be used to test segments for differential methylation between two or more samples, implemented in pycoMeth’s Meth_Comp subcommand. Methylation calls can either be provided as one MetH5 file per sample, or a single MetH5 file containing read-group annotations, such as when testing for allele specific methylation (ASM) within a single sample using read groups to tag haplotypes. PycoMeth Meth_Comp accepts any region information, provided in bed-format, for differential methylation testing (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B), and also implements a heuristic CGI detector (pycoMeth CGI_Finder) for the study of CGI methylation.</p>
      <p id="Par14">A variety of differential methylation test options are provided by pycoMeth Meth_Comp. The user can define a test hypothesis, and pycoMeth chooses a test depending on the number of samples, the test hypothesis, and other parameters (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>). For multiple testing correction, pycoMeth implements a number of options for <italic>p</italic>-value adjustment, including an optional independent hypothesis weighting (IHW) scheme [<xref ref-type="bibr" rid="CR21">21</xref>] that uses standard deviation of methylation rates as a weight in order to draw more power from a large number of tests. If more than two samples are provided, the matching 2-sample test will be performed as a <italic>post-hoc</italic> test in a one-vs-all setting for each interval where the null hypothesis had been rejected in the n-sample test. DMRs are reported as a tab-separated file. The optional Comp_Report subcommand provides additional functionality to generate easily accessible HTML reports, including visualizations in the context of user provided gene annotations (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C).</p>
    </sec>
    <sec id="Sec6">
      <title>Benchmarking pycoMeth</title>
      <p id="Par15">In order to evaluate performance of the different tools in the pycoMeth suite, we applied pycoMeth to two datasets. The first is a simulated Nanopolish dataset of methylation calls on chromosome 1(hg19) on two samples with differential methylation between them. We started by simulating methylation patterns organized in segments with either high, low, or intermittent methylation rate, with about <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$8\%$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mn>8</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq4.gif"/></alternatives></inline-formula> of the segments differentially methylated between the two samples with a variety of effect sizes (from 0.15 to 0.6 difference). This information was used to generate a low-coverage (15×) and a high-coverage (30×) dataset by simulating reads and LLRs, approximating the uncertainty distribution of Nanopolish methylation calls (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>). The second dataset is a real ONT sequencing dataset from a father-mother-son trio sequenced by the Genome in a Bottle (GIAB) consortium [<xref ref-type="bibr" rid="CR22">22</xref>] (information on alignment and data processing can be found in the methods). Here as well, we investigated the effects of a high-coverage (30× per sample) and low-coverage (15× per sample) setting. This synergy between the simulated and the real datasets allows us to draw conclusions about the accuracy of our methods in the real data.</p>
    </sec>
    <sec id="Sec7">
      <title>MetH5 facilitates rapid random access to methylation calls</title>
      <p id="Par16">To show the benefits of the MetH5 container format, we compared our format with the current definition and implementation of modification scores in hts-specs (MM and ML tag) [<xref ref-type="bibr" rid="CR23">23</xref>]. Here, we focused only on the data from one of the GIAB samples (HG003, <xref rid="Sec12" ref-type="sec">Materials and methods</xref>), either using BAM files combined with the MM tag or stored using the MetH5 format (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>). Methylation calls were stored in MetH5 as well as BAM and CRAM format. Assessing the advantages of the MetH5 file format, Fig. <xref rid="Fig2" ref-type="fig">2</xref>D compares random access and sequential access times of methylation scores stored in MetH5 versus CRAM and compressed BAM format, as well as storage space required. While BAM/CRAM files make more efficient use of storage, between 165 and 1400 MB (11 to 64% of that used by MetH5) depending on compression, they are significantly more expensive to read (about 5 to 90 times slower depending on compression).</p>
    </sec>
    <sec id="Sec8">
      <title>pycoMeth changepoint detection on simulated data outperforms existing tools</title>
      <p id="Par17">Next, we assessed the performance of the segmentation. Due to the lack of tools designed for segmentation and differential methylation analysis in single-molecule sequencing data, we instead compare our segmentation with two commonly used methods designed for segmentation of methylation rates from bisulfite sequencing data, methylKit [<xref ref-type="bibr" rid="CR19">19</xref>] and MethCP [<xref ref-type="bibr" rid="CR20">20</xref>]. MethCP performs segmentation of a differential methylation profile in a two-sample setting, which is why it is naturally biased towards DMRs. In order to also compare with an impartial segmentation, we use methylKit’s single-sample segmentation on the summed methylation profile of the two samples which are compared.</p>
      <p id="Par18">We created two segmentations using pycoMeth Meth_Seg, one with a maximum of 16 segments per 300 CpG sites and one with the same maximum per 600 CpG sites (which we refer to as “pycoMeth coarse”). Additionally, we evaluated the performance of pycoMeth Meth_Comp when matching the settings to those used by methylKit and MethCP, in order to investigate the impact of the segmentation and DMR testing methods independently.</p>
      <p id="Par19">To evaluate the segmentation quality, we counted the number of ground-truth segments whose changepoints (segment boundaries) are represented in the segmentation in the high-coverage example (Fig. <xref rid="Fig4" ref-type="fig">4</xref>A) and the low-coverage example (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2A). As an accuracy threshold, we define that a changepoint has been correctly identified if the nearest predicted changepoint is no further away than 5% of the containing segment’s width. The pycoMeth segmentation identified 72.2% of all DMR segments and 72.9% of non-DMR segments (full match). For 24.1% of DMR segments and 23.5% of non-DMR segments, one side of the segment (start or endpoint) could be accurately detected (partial match). Only 3.6% of DMR segments and 3.6% of non-DMR segments could not be accurately detected on either side. However, the segmentation also predicted 33,100 additional changepoints which do not correspond to ground-truth segments (485% oversegmentation). Reducing the segmentation granularity (pycoMeth coarse) reduced the oversegmentation to 18,276 (268%) additional changepoints while reducing detection power by about 4%. The methylKit segmentation, which resulted in the least number of segments (only 35% oversegmentation), still captured a fair number of DMR (33.5% found, 32.2% partially found) and non-DMR (50.7% found, 30.4% partially found) segments, whereas MethCP showed good performance on DMR segments (63.4% found, 22.4% partially found), but failed to capture non-DMR segment boundaries (15.4% found, 28.7% partially found) despite producing a large number of segments (667% oversegmentation). Since detection power naturally also increases with segmentation granularity, we performed a randomization test in which predicted segments are shuffled and compared to the original segmentations, confirming that all segmentation methods perform vastly better than random (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3).<fig id="Fig4"><label>Fig. 4</label><caption><p>Benchmark on simulated data and GIAB dataset. <bold>A</bold> Number of segments identified as <italic>full match</italic>, meaning that both the true start and end changepoint have been accurately identified, <italic>partial match</italic>, meaning that one of either the true start- or end-changepoint has been accurately identified, or <italic>no match</italic>, meaning that neither the true start nor end changepoint have been accurately identified, in the high-coverage simulated dataset. For the purpose of this graphic, a changepoint is considered accurately identified if a predicted segment breakpoint is no more than 5% of its containing segment’s length away from the true (ground truth) changepoint. Additional changepoints are the number of predicted changepoints not counting towards a partial or full match (oversegmentation). <bold>B</bold> Performance of DMR calling on simulated data using the pycoMeth coarse segmentation and varying DMR tests. Each bar group corresponds to the respective interpretation of the <italic>y</italic>-axis: recall as a measure of test power, precision as a measure of false discovery, and F1-score (harmonic mean of recall and precision). <bold>C</bold> DMR calling performance on simulated data for varying segmentations. All settings use a Fisher’s exact test for DMR testing. MethCP-pycoMeth and methylKit settings use pycoMeth for DMR testing. <bold>D</bold> Allele-specific methylation called on HG002. PycoMeth calls were performed using the Fisher exact test with IHW. Colors represent the effect size of the containing segment (absolute differential methylation rate). <bold>E</bold> DMRs identified between HG003 and HG004</p></caption><graphic xlink:href="13059_2023_2917_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par20">After segment identification, we performed DMR testing using pycoMeth Meth_Comp on all four segmentations. First, we assessed the impact of different statistical tests on DMR identification in the high-coverage example, comparing the options implemented in pycoMeth with MethCP (Fig. <xref rid="Fig4" ref-type="fig">4</xref>B). We observe that in this setting, the test method used in pycoMeth Meth_Comp does not strongly impact the outcome, with the improved precision of the most conservative test (<inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M10"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq5.gif"/></alternatives></inline-formula>-score difference) leading to the best overall performance (F1 score 0.868, used to represent the compromise between precision and recall) compared to the LLR difference test and Fisher exact test (both with an F1 score of 0.866). Next we tested the impact of the segmentation on DMR identification (Fig. <xref rid="Fig4" ref-type="fig">4</xref>C) fixing the test to Fisher exact (count dependency hypothesis) — as this is the same test used in MethCP — with IHW. We find that both pycoMeth options have higher recall than the other tools. While MethCP shows best precision, pycoMeth coarse has the highest F1-score. In summary, of all configurations, pycoMeth coarse with <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M12"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq6.gif"/></alternatives></inline-formula>-score difference test yielded the best performance in terms of F1-score and has been set as the default parameters when using pycoMeth.</p>
      <p id="Par21">In the low-coverage (15×) example with the same test settings (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2B–C), we found that reduced coverage led to a slight reduction in performance in all methods. Most affected was methylKit, with an F1 score reduction of 0.036, compared to MethCP (0.016 reduction) and pycoMeth coarse segmentation (0.013 reduction). Next, we investigated the agreement of changepoint predictions across low- and high-coverage examples. The Jaccard index of changepoints found is 0.83 in the pycoMeth segmentation, 0.82 in pycoMeth coarse, 0.85 in MethCP and 0.76 in methylKit, indicating good stability in all methods.</p>
    </sec>
    <sec id="Sec9">
      <title>pycoMeth shows high power at detecting low-effect DMRs in real ONT data</title>
      <p id="Par22">Besides simulations, we also assessed pycoMeth Meth_Seg performance in a real-world setting, by generating a methylome segmentation on the GIAB data, and test both for DMRs between HG003 and HG004 (parental samples), as well as trying to identify ASM in HG002 (son) (Fig. <xref rid="Fig4" ref-type="fig">4</xref>D, E). For the between-sample DMR test, coverage was  30× per sample, and in the ASM test <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim$$\end{document}</tex-math><mml:math id="M14"><mml:mo>∼</mml:mo></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq7.gif"/></alternatives></inline-formula>15× coverage per haplotype, analogous to the high- and the low-coverage simulation examples, respectively. We find that pycoMeth identifies a much larger number of CpGs in DMRs, particularly in DMRs with low effect sizes. Examining chromosome 20 as a benchmark, pycoMeth coarse with the Fisher exact test and IHW identifies 77,054 DMR CpGs in the ASM scenario, where 66,307 (86.1%) were of low effect size (0.1 to 0.3) and 10,747 (13.9%) of high effect size (<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&gt;0.3$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0.3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq8.gif"/></alternatives></inline-formula>). Using the same settings, in the parent comparison, pycoMeth identified 156,584 CpGs in DMRs, of which 153,839 (98.2%) were of low effect size and 2746 (1.8%) of high effect size. Comparable figures for MethCP show lower numbers overall, but with more CpGs from high-effect-size DMRs: in ASM, 42,936 CpGs total with 29,450 (68.6%) of low effect size and 13,486 (31.4%) of high effect-size, and in the parent comparison, 92,435 total with 87,586 (94.8%) of low effect size and 4849 (5.2%) of high effect-size. Using pycoMeth’s Fisher’s exact IHW test on the methylKit segmentation shows lower counts overall, with very few CpGs in high-effect-size regions: in ASM, 33,826 CpGs total with 31,591 (93.4%) of low effect size and 2235 (6.6%) of high effect size, and in the parent comparison, 110,975 total with 110,853 (99.9%) of low effect size and 112 (0.1%) of high effect size.</p>
      <p id="Par23">Surprisingly we find that the tool used for segmentation has a great impact on the segment discovery, implying that the methods are complementary. High agreement in the segmentation performed by pycoMeth coarse and pycoMeth show that increasing segmentation granularity in pycoMeth still finds most of the same changepoints, but increases how segments are further broken down (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4).</p>
      <p id="Par24">Comparing agreement of differential methylation calling, we find that in the real data (GIAB parent comparison, chromosome 20) only 14.8% of CpGs in DMRs identified are found using all segmentations, much lower than the 52.6% observed on the simulated data. Between pycoMeth and pycoMeth coarse, the percent positive agreement (PPA, <xref rid="Sec12" ref-type="sec">Materials and methods</xref>) in the real data was 66.5% (79.3% in simulated data, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5). Note that PPA of 66.5% is higher than expected (46.4%) at the observed DMR distribution (<xref rid="Sec12" ref-type="sec">Materials and methods</xref>).</p>
      <p id="Par25">While percent negative agreement is over 90% between the two pycoMeth segmentations (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6), lower PPA on real data can likely be explained by overabundance of low effect size DMRs. Comparing different tests on the same pycoMeth segmentation, 79.5% of sites are called by all tests (96% on simulated data), with the more conservative <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M18"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq9.gif"/></alternatives></inline-formula>-score difference method standing out, not calling 12.2% of sites which are called by the other two methods (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S7).</p>
      <p id="Par26">Finally, seeing how pycoMeth has high power in low-effect-size settings, we evaluated overcalling of low-effect-size DMRs in both simulated and real data. On GIAB data, a randomization test was performed, in which LLRs in the MetH5 containers of HG003 and HG004 were randomized within each chromosome, such that methylation becomes fully independent of read, read group, and genomic location. A segmentation and DMR testing run between randomized HG003 and randomized HG004 was then performed to estimate a false discovery rate (FDR). We find this FDR is in the range of 0.07–2.2 for effect-size thresholds up to 0.1. For thresholds of 0.1 or higher, FDR ranges (mostly) from 0.04 to 0.23 for LLR-Diff and the Fisher exact test, and consistently stays below 0.05 for the BS-Diff test (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S8). Furthermore, we find that the majority of false-positive segments are long (&gt; 3000 methylation calls per segment) low-effect-size DMRs which are effectively filtered out by the effect-size filter of 0.1. Computing precision and recall on simulated data at different effect-size thresholds also shows that segmentations with higher granularity suffer from reduced precision, with pycoMeth coarse segmentation resulting in the best precision and recall (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S9). Taking everything together, pycoMeth coarse segmentation with the BS-Diff test hypothesis and IHW presents a good configuration for further studies of all ranges of methylation effects.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Discussion</title>
    <p id="Par27">In this work, we presented pycoMeth and MetH5, a toolbox for the analysis of ONT-derived methylation data, encompassing storage, segmentation, and differential methylation analysis. We provided a benchmark on simulated and real sequencing data, each in a low- and high-coverage setting, comparing MetH5 and pycoMeth with existing solutions.</p>
    <p id="Par28">We observed that using MetH5 as a file storage showed a marked performance increase as compared to current BAM-based file formats for downstream methylation analyses, such as our segmentation. While we are aware of the advantages of having methylation calls stored in a well-supported file format, we believe MetH5 to be a complementary solution used during analysis and visualization, offering boosted performance, parallel computing capabilities and an intuitive interface. MetH5 allows for easier sharing of methylation information due to being a compact specialized storage container, whereas BAM are large and monolithic, containing many different data modalities.</p>
    <p id="Par29">On top of that, in our experiments, we currently observe compatibility issues between (mod)BAM files generated by Nanopolish and the modbampy and pysam libraries for downstream analysis, both with read-anchored as well as reference-anchored calls, but we expect that future improvements will solve this and potentially increase methylation accession speeds in BAM files. The use of the modification tags (MM and ML), is still new, and therefore support in downstream software is either not optimal or not existing, even though development is picking up speed rapidly. With MetH5, we provide a specialized file format allowing for extraction and storage of methylation data with the intent to simplify and speed up methylation-related analyses and methylation data sharing.</p>
    <p id="Par30">We have shown that the segmentation method used to determine segments for DMR testing has a great impact on the number of DMRs found in native data, particularly on DMRs with low effect sizes. Compared to existing DMR calling workflows, pycoMeth shows improved performance (F1 score) on simulated data, and identifies more DMR segments in real data. Furthermore, we show that the segmentation approach implemented in pycoMeth allows for the discovery of methylation changepoints, both in regions with and without DMRs, and demonstrates the potential for further study of <italic>de novo</italic> methylation pattern discovery from long-read sequencing in a multi-sample setting. The high complementarity between changepoints placed by pycoMeth and MethCP (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4) suggest that a combined approach may be beneficial for DMR discovery. However, this does require great care in the design of the differential methylation test on which MethCP segments, and the integration of the segment boundaries, before DMR testing and multiple testing correction. Therefore we would not recommend this combination in a general use case, and would suggest to use only pycoMeth coarse, which finds most DMR and non-DMR segments in the simulated data, as a starting point for analyses.</p>
    <p id="Par31">MetH5 and pycoMeth have been developed and tested with methylation calls from Nanopolish [<xref ref-type="bibr" rid="CR9">9</xref>] in mind, as Nanopolish is easy to run on CPU-based hardware, has benefited from long-term maintenance and updates and has therefore become very robust and popular in the community. Furthermore, with Nanopolish being a Bayesian method, LLRs reported by it are well-suited for the uncertainty propagation method as implemented in pycoMeth Meth_Seg. However, newer base modification callers have shown higher methylation calling accuracy [<xref ref-type="bibr" rid="CR13">13</xref>], and more recently, remora-based methylation calling has been integrated in the ONT basecallers guppy [<xref ref-type="bibr" rid="CR24">24</xref>] and bonito [<xref ref-type="bibr" rid="CR25">25</xref>], which store methylation calls as tags in BAM format. Future development of pycoMeth and the meth5 API will aim to support methylation calls in BAM format as the file standard and implementations stabilize, thus improving support for these methylation calling tools. Doing so will also enable us to investigate potential applications to methylation calls from PacBio sequencing, another avenue we intend to pursue in the future. Also, while mainly developed for the evaluation of CpG-methylation, all methods (aside from the CGI-finder) are also applicable to other types of epigenetic marks, such as adenine methylation, or cytosine methylation in GpC context. Although this is not currently implemented, the relational design of MetH5 also makes it an excellent choice for storing multiple nucleotide (or base) modification calls on the same data, such as for different oxidative derivatives of 5mC (5hmC, 5fC, and 5caC), by linking multiple LLR datasets to the same coordinates and read IDs.</p>
  </sec>
  <sec id="Sec11">
    <title>Conclusions</title>
    <p id="Par32">Here, we presented a toolkit and efficient file format for epigenetic analyses on ONT reads. Due to the novelty of single-molecule methylation calling, there are no gold standards yet for storage and analysis. With the MetH5 format, we attempt to provide an efficient method of storing reference-anchored methylation calls without compromising on read-level information or methylation call uncertainty information. The pycoMeth Bayesian segmentation method and differential methylation testing take advantage of read-level or read-group-level information, which tools designed for bisulfite sequencing typically do not consider. This new approach performs comparably to or better than previous tools in terms of segmentation accuracy and balance between DMR testing recall and precision (F1-score). Especially in a low-coverage setting and for the detection of methylation changes with low effect sizes, pycoMeth excels compared to the other tools tested.</p>
  </sec>
  <sec id="Sec12">
    <title>Materials and methods</title>
    <sec id="Sec13">
      <title>GIAB benchmark data preparation</title>
      <p id="Par33">GIAB raw fast5 files were downloaded from the Human Pangenome Project’s S3 bucket. In order to reach approximately 20× to 30× coverage, we use four flowcells from HG002 and three flowcells from HG003 and HG004, respectively (Additional file <xref rid="MOESM2" ref-type="media">2</xref>). Phased SVs produced by [<xref ref-type="bibr" rid="CR26">26</xref>] were downloaded from the NCBI ftp server (Additional file <xref rid="MOESM2" ref-type="media">2</xref>). Reads have been re-basecalled using guppy (version 5.0.11) with the high-accuracy model with modbases. Alignment to reference genome GRCh38 was performed using minimap2 (version 2.17) [<xref ref-type="bibr" rid="CR27">27</xref>] with the map-ont preset and otherwise default settings. Reads were haplotagged using whatshap [<xref ref-type="bibr" rid="CR7">7</xref>] (version 1.1). To produce Nanopolish [<xref ref-type="bibr" rid="CR9">9</xref>] methylation calls in MetH5 format, we run Nanopolish call-methylation with Nanopolish (version 0.13.3) and then use the python meth5 API to convert the Nanopolish output to the MetH5 format. In order to generate BAM files with MM tags, the “methylation_bam” branch (commit 9B01ad7) of Nanopolish has been used. BAM files were compressed to create CRAM files using samtools (version 1.5) [<xref ref-type="bibr" rid="CR15">15</xref>] with the command samtools view -C and both BAM and CRAM were indexed using samtools index. Performance comparisons between MetH5 and BAM/CRAM files were performed using the meth5 (version 0.8.0) and modbampy (version 0.4.1) [<xref ref-type="bibr" rid="CR28">28</xref>].</p>
    </sec>
    <sec id="Sec14">
      <title>Simulation of methylation profile and Nanopolish methylation calls</title>
      <p id="Par34">We use the tool OmicsSIMLA (version 0.6) [<xref ref-type="bibr" rid="CR29">29</xref>] with the parameter --WGBS to first generate a methylation profile based on human liver tissue for chromosome 1 (hg19) and simulate a control sample and a perturbed sample. We run OmicsSIMLA multiple times, with the methy_theta parameter (which indicates the effect size of DMRs) set to 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, and 0.6, each time with parameters -p_diff_phase_meth 0.01
-p_diff_phase_unmeth 0.01
-p_diff_phase_fuzzy 0.01. We combine the profile from these simulation runs, such that up to <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10\%$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>10</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq10.gif"/></alternatives></inline-formula> of segments are DMRs. Segments which are highly methylated in control and up-methylated in the perturbed sample as well as segments which are unmethylated in control and de-methylated in the perturbed sample were treated these as non-DMR segments.</p>
      <p id="Par35">In order to then simulate Nanopolish methylation calls for these methylation profiles, we first estimate the distribution of read-lengths in a real ONT sequencing run as well as the distribution of LLRs in Nanopolish calls, based on the GIAB sample HG002. We model log10 read-lengths as a Gaussian mixture model with three kernels. Methylation call uncertainty encoded in LLRs from Nanopolish are modeled as a beta distribution.</p>
      <p id="Par36">Note that <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p(\text {M} | X)$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq11.gif"/></alternatives></inline-formula>, the probability of methylation given the observed raw signal <italic>X</italic> equals <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma (\text {LLR})$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>LLR</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq12.gif"/></alternatives></inline-formula>. We define certainty of a methylation call <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c(LLR) \in [0,1]$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mi>L</mml:mi><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq13.gif"/></alternatives></inline-formula> as <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c(LLR) = |\sigma (LLR)*2-1|$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mi>L</mml:mi><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mi>L</mml:mi><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>2</mml:mn><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq14.gif"/></alternatives></inline-formula>, making it so that an LLR of 0 leads to <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c=0$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq15.gif"/></alternatives></inline-formula>, complete uncertainty of the methylation call, and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c(LLR) = c(-LLR)$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mi>L</mml:mi><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mi>L</mml:mi><mml:mi>L</mml:mi><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq16.gif"/></alternatives></inline-formula>. We collect all certainties for chromosome 21 of HG002 and estimate their distribution as a beta distribution <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$B(\alpha , \beta )$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mi>B</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mi>β</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq17.gif"/></alternatives></inline-formula>. The resulting parameters of the distribution were <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha =0.640308$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0.640308</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq18.gif"/></alternatives></inline-formula> and <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta =0.208756$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>β</mml:mi><mml:mo>=</mml:mo><mml:mn>0.208756</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq19.gif"/></alternatives></inline-formula>.</p>
      <p id="Par37">Methylation rate <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M40"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq20.gif"/></alternatives></inline-formula> per CpG-site per sample were taken from the OmicsSIMLA simulations. We draw a random methylation status <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x \sim \text {B}(\mu )$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∼</mml:mo><mml:mtext>B</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>μ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq21.gif"/></alternatives></inline-formula> where <italic>x</italic> is either 0 or 1. Furthermore, we draw a methylation call certainty <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c \sim B(\alpha , \beta )$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>c</mml:mi><mml:mo>∼</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo>,</mml:mo><mml:mi>β</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq22.gif"/></alternatives></inline-formula>. The simulated LLR is then computed as <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {LLR} = \sigma ^{-1}(0.5 + (x - 0.5)c)$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mtext>LLR</mml:mtext><mml:mo>=</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0.5</mml:mn><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>-</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq23.gif"/></alternatives></inline-formula>. </p>
      <p id="Par38">Nanopolish methylation calls were then simulated by randomly drawing read position and read length, followed by sampling methylation states for each CpG site covered by the read using the methylation rates simulated by OmicsSIMLA. Then the uncertainty distribution is used to sample an LLR for the methylation call. Both the high coverage and the low coverage dataset are drawn from the same methylation profile simulated by OmicsSIMLA, but reads were independently simulated. We simulate a total of 500,000 reads per sample for the high coverage dataset (corresponding to roughly 30× coverage) and 250,000 for the low coverage dataset (corresponding to roughly 15× coverage), and store the methylation calls in a MetH5 container using the meth5 python API.</p>
    </sec>
    <sec id="Sec15">
      <title>DMR calling agreement</title>
      <p id="Par39">For the purpose of segmentation and DMR calling consistency, PPA was computed based on individual CpG sites within a DMR.<disp-formula id="Equ1"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} PPA = 100 \frac{\#\text {DMR CpGs in both callers}}{\#\text {DMR CpGs in one or both callers}} \end{aligned}$$\end{document}</tex-math><mml:math id="M48" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>P</mml:mi><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mn>100</mml:mn><mml:mfrac><mml:mrow><mml:mo>#</mml:mo><mml:mtext>DMR CpGs in both callers</mml:mtext></mml:mrow><mml:mrow><mml:mo>#</mml:mo><mml:mtext>DMR CpGs in one or both callers</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par40">For comparison, we compute expected PPA, which depends on the label distribution (true DMRs / true non-DMRs).<disp-formula id="Equ2"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbb {E}[PPA] = 100 \frac{p \cdot \text {TPR}^2 + (1-p)\cdot \text {FPR}^2}{1 - p \cdot (1-\text {TPR})^2 - (1-p)\cdot (1-\text {FPR})^2} \end{aligned}$$\end{document}</tex-math><mml:math id="M50" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>P</mml:mi><mml:mi>P</mml:mi><mml:mi>A</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>100</mml:mn><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mtext>TPR</mml:mtext><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mtext>FPR</mml:mtext><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mtext>TPR</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>-</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mtext>FPR</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <italic>p</italic> refers to the fraction of ground truth positive DMRs. Since <italic>p</italic> is unknown in real data, we estimate <italic>p</italic> based on predictions of both DMR callers, substituting <italic>p</italic> with predicted positive (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S10).</p>
    </sec>
    <sec id="Sec16">
      <title>Implementation</title>
      <p id="Par41">All tools have been implemented in python and require python version 3.7. The MetH5 format implements an HDF version 5 [<xref ref-type="bibr" rid="CR16">16</xref>] container which is accessed using the h5py [<xref ref-type="bibr" rid="CR30">30</xref>] library. Other open source software libraries used in this work include NumPy [<xref ref-type="bibr" rid="CR31">31</xref>], SciPy [<xref ref-type="bibr" rid="CR32">32</xref>], pandas [<xref ref-type="bibr" rid="CR33">33</xref>], pyfaidx [<xref ref-type="bibr" rid="CR34">34</xref>], statsmodels [<xref ref-type="bibr" rid="CR35">35</xref>], and plotly [<xref ref-type="bibr" rid="CR36">36</xref>].</p>
    </sec>
    <sec id="Sec17">
      <title>Implementation of MetH5</title>
      <p id="Par42">The MetH5 format (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A), an HDF version 5 container, contains two top-level groups: chromosomes and reads. The chromosomes group contains one group named for each chromosome or contig, which in turn contain four datasets. The first three datasets, llr, read_id, and range, are all of length <italic>n</italic> and chunked using a chunk size defined upon container creation. They store the methylation call uncertainties (as a floating point number), locally unique read identifier (int) and genomic range (start and end integer coordinate on the chromosome, thus facilitating grouped methylation calls), respectively. Finally, upon indexing, another dataset chunk_ranges of dimension (<italic>c</italic>, 2), where <inline-formula id="IEq24"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c=\lceil \frac{n}{\text {chunk size}} \rceil$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mrow><mml:mtext>chunk size</mml:mtext></mml:mrow></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq24.gif"/></alternatives></inline-formula> the number of chunks, is created. This dataset serves as an index for rapid random access of genomic coordinates. The second top-level group “reads” is entirely optional and stores read annotations. It contains the dataset read_name_mapping, a string dataset of shape <italic>r</italic>, where <italic>r</italic> is the total number of unique reads. This dataset stores read names and can be directly indexed using the local read identifiers stored in the read_id dataset. Additionally, the group “read_groups” can contain a variable number of datasets of shape <italic>r</italic> which can be used for read-group annotation, such as sample assignment or haplotype assignment. Users can define dataset compression options upon creation. As a default, lzf compression is enabled.</p>
      <p id="Par43">The meth5 python API and CLI implements creation of a meth5 file from Nanopolish result files. Random access to a genomic range is implemented by first identifying the required chunks inside a chromosome, using the chunk_ranges dataset, and then performing a binary search for the start and end index within the required chunk of the ranges dataset. These indexes can then be used to directly access the corresponding values in the read_id and llr datasets. Alternatively, chunk-based accessor functions allow direct access to the llr, read_id, and range datasets within a given chunk, and optionally also allow for inclusion of data from neighboring chunks whenever the methylation calls for a coordinate are split by the chunk boundary.</p>
    </sec>
    <sec id="Sec18">
      <title>Implementation of Bayesian changepoint detection</title>
      <p id="Par44">PycoMeth Meth_Seg implements a Bayesian changepoint detection algorithm modeled as an HMM, based on the segment based model defined in [<xref ref-type="bibr" rid="CR37">37</xref>] and modified to account for variable number of segments by introducing a transition from any state to the end state, multiple read groups, and uncertainty propagation from methylation inference.</p>
      <p id="Par45">The number of states <italic>S</italic> is a hyperparameter and represents the maximum number of segments. Transition probabilities are defined as:<disp-formula id="Equ3"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} t_{i,j}&amp;= \left\{ \begin{array}{ll} t_{stay} &amp;{}\text {if} j=i,\\ t_{move} &amp;{}\text {if} j=i+1,\\ t_{end} &amp;{}\text {if} j=S,\\ 0 &amp;{}\text {otherwise}\\ \end{array}\right. \end{aligned}$$\end{document}</tex-math><mml:math id="M54" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">stay</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">move</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">end</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq25"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t_{stay}=0.1$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">stay</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq25.gif"/></alternatives></inline-formula>, <inline-formula id="IEq26"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t_{move}=0.8$$\end{document}</tex-math><mml:math id="M58"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">move</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.8</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq26.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq27"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t_{end}=0.1$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">end</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq27.gif"/></alternatives></inline-formula> are priors controlling the granularity of the segmentation and their default parameters respectively.</p>
      <p id="Par46">Each segment is parameterized with <inline-formula id="IEq28"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu _{s,g} \in [0,1]$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq28.gif"/></alternatives></inline-formula> the methylation rate of segment <italic>s</italic> in read-group <italic>g</italic>. If each read is represented as its own read-group, we refer to this as a read-level segmentation and <italic>g</italic> refers to the read. Emission likelihoods for each methylation call from segment <italic>s</italic> and read-group <italic>g</italic> given raw Nanopore signal <italic>X</italic> are derived as follows. Let <italic>p</italic>(<italic>U</italic>|<italic>X</italic>) and <italic>p</italic>(<italic>M</italic>|<italic>X</italic>) be the probability of a base being unmethylated or methylated respectively, given observed raw signal <italic>X</italic>.<disp-formula id="Equ4"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \text {LLR}&amp;= \log \frac{p(X | \text {M})}{p(X| \text {U})} \\ p(\text {M} | X)&amp;= \sigma (\text {LLR} + \sigma ^{-1}(p(\text {M})) \end{aligned}$$\end{document}</tex-math><mml:math id="M64" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mtext>LLR</mml:mtext></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>log</mml:mo><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>LLR</mml:mtext><mml:mo>+</mml:mo><mml:msup><mml:mi>σ</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq29"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M66"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq29.gif"/></alternatives></inline-formula> refers to the sigmoid function <inline-formula id="IEq30"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma = \frac{1}{1+e^{-x}}$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq30.gif"/></alternatives></inline-formula> and <inline-formula id="IEq31"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p(\text {M}) = 1-p(\text {U})$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq31.gif"/></alternatives></inline-formula> is the prior methylation probability.<disp-formula id="Equ5"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} p(X|\mu _{s,g})&amp;= p(X | \text {U}) p(\text {U} | \mu _{s,g}) + p(X | \text {M}) p(\text {M} | \mu _{s,g})\\&amp;= \text {const} \left( \frac{p(\text {U} | X) (1-\mu _{s,g})}{p(\text {U})} + \frac{p(\text {M} | X) \mu _{s,g}}{p(\text {M})} \right) \end{aligned}$$\end{document}</tex-math><mml:math id="M72" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mtext>const</mml:mtext><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>U</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>M</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par47">A segmentation is then computed using the Baum-Welch algorithm. Let <inline-formula id="IEq32"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\psi$$\end{document}</tex-math><mml:math id="M74"><mml:mi>ψ</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq32.gif"/></alternatives></inline-formula> be the mapping between CpG sites and segments. In the expectation step we compute the posterior <inline-formula id="IEq33"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p(\psi (i) = s | X, \mu )$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq33.gif"/></alternatives></inline-formula> for all <italic>i</italic>, <italic>s</italic> using the forward-backward algorithm. In the maximization step, we then update the segment methylation rate parameter <inline-formula id="IEq34"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M78"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq34.gif"/></alternatives></inline-formula> to the maximum likelihood estimator. Let <italic>r</italic>(<italic>g</italic>) be the set of all reads in read-group <italic>g</italic>.<disp-formula id="Equ6"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \hat{\mu }_{s,g} = \arg \min \sum _{i,r\in r(g)} - \log p(X_{i,r} | \mu _{s, g}) p(\psi (i) = g) \end{aligned}$$\end{document}</tex-math><mml:math id="M80" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>μ</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>arg</mml:mo><mml:mo movablelimits="true">min</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2917_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par48">The expectation and maximization steps are repeated until all parameters <inline-formula id="IEq35"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu _{s,g}$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq35.gif"/></alternatives></inline-formula> have reached convergence with a tolerance of <inline-formula id="IEq36"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1e-4$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mn>1</mml:mn><mml:mi>e</mml:mi><mml:mo>-</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq36.gif"/></alternatives></inline-formula>. Finally, a cleanup step is performed in which segments shorter than 5 CpG sites are merged with the next segment. To mitigate oversegmentation, neighboring segments whose methylation rate parameters differ less than 0.2 in all read-groups are then merged in a post-processing step. Since the memory requirement of the Baum-Welch algorithm scales <italic>O</italic>(<italic>NSG</italic>) where <italic>N</italic> is the number of CpG sites, <italic>S</italic> is the number of segments, and <italic>G</italic> is the number of read-groups, we perform the segmentation in a windowed fashion, on 300 or 600 CpG-sites per window by setting the corresponding parameter of pycoMeth Meth_Seg. This leads to artificial breakpoints between windows, causing some over-segmentation.</p>
    </sec>
    <sec id="Sec19">
      <title>Implementation of differential methylation testing</title>
      <p id="Par49">DMR testing implements a number of different statistical tests depending on the test hypothesis, number of samples, and other parameters. Currently, three test hypotheses are implemented, named llr_diff, bs_diff, and count_dependency (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S11). The test hypothesis llr_diff tests whether there is a significant difference in mean LLR between samples by computing a ranked test. This mode assumes all LLRs are independent and draws statistical power from both segment size, read-depth, and considers methylation call uncertainty. The count_dependency hypothesis setting will in a two-sample setting perform a Fisher exact test on binarized methylation call count, or with more samples, a <inline-formula id="IEq37"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi ^2$$\end{document}</tex-math><mml:math id="M86"><mml:msup><mml:mi>χ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq37.gif"/></alternatives></inline-formula>-test on the full contingency table. Most conservatively, the hypothesis bs_diff tests for a difference between mean read methylation rate between samples. Therefore, a methylation rate (<inline-formula id="IEq38"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta = \frac{n\_met}{n\_met+n\_unmet}$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi>β</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq38.gif"/></alternatives></inline-formula>) per read is computed on binarized methylation calls, and then a ranked test on methylation <inline-formula id="IEq39"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M90"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq39.gif"/></alternatives></inline-formula>-scores is performed. Thus, this test draws statistical power only from read-depth. Both the llr_diff and the bs_diff hypotheses perform a two-sided Mann-Whitney-<italic>U</italic> test in the two-sample case, and a two-sided Kruskal-Wallis test in the <inline-formula id="IEq40"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n&gt;2$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:mi>n</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq40.gif"/></alternatives></inline-formula> sample case. Alternatively, if the parameter –paired is provided in a 2-sample setting, pycoMeth will instead compute <inline-formula id="IEq41"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M94"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq41.gif"/></alternatives></inline-formula>-scores for each genomic site observed in both samples and perform a two-sided Wilcoxon signed rank sum test on site-level <inline-formula id="IEq42"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M96"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2917_Article_IEq42.gif"/></alternatives></inline-formula>-scores.</p>
      <p id="Par50">As multiple testing correction on top of filtered results can introduce biases [<xref ref-type="bibr" rid="CR38">38</xref>], pycoMeth Meth_Comp does not filter segments before <italic>p</italic>-value calculation safe for segments with insufficient data-points to compute the selected test. Multiple testing correction is thus performed across <italic>p</italic>-values from all segments with sufficient data, which leads to a large number of tests that need to be corrected for. Optionally, independent hypothesis weighting (IHW) [<xref ref-type="bibr" rid="CR21">21</xref>] can be enabled to mitigate the problem of inflated <italic>p</italic>-values when testing a large number of segments for DMRs with <italic>p</italic>-value adjustment. When enabled, the scaled 1-centered standard deviation of methylation rates is used as a weight and multiplied with raw <italic>p</italic>-values. In any case, <italic>p</italic>-value adjustment is computed on raw or weighted <italic>p</italic>-values, and a large number of <italic>p</italic>-value adjustment methods are provided to users as implemented by the statsmodels python package [<xref ref-type="bibr" rid="CR35">35</xref>].</p>
    </sec>
    <sec id="Sec20">
      <title>Methylome segmentation benchmark setup</title>
      <p id="Par51">The pycometh methylome segmentation was compared to two existing tools designed for WGBS, methylKit (version 1.18.0) [<xref ref-type="bibr" rid="CR19">19</xref>] and MethCP (version 1.6.0) [<xref ref-type="bibr" rid="CR20">20</xref>]. MethylKit was used to perform a single-sample segmentation independent of differential methylation, wheres MethCP supports a 2-sample segmentation based on differential methylation. In order to evaluate the effect of segmentation granularity on DMR calling, we created a coarser segmentations with parameters –window_size 600 –max_segments_per_window 16 (a maximum of 16 segments per 600 CpG calls) and a more fine-grained segmentation with parameters –window_size 300 –max_segments_per_window 16 (a maximum of 16 segments per 300 CpG calls). No methylation rate prior was provided and haplotype information was provided as read-groups in the MetH5 format. For the segmentation using methylKit and MethCP, binarized metylation counts (LLR threshold 2.0) were created from the Nanopore methylation calls such as produced in a WGBS experiment. The methylKit segmentations were created based on total methylation rate of the compared samples/haplotypes. For MethCP methylation rates per sample/haplotype were computed. MethylKit segmentations were created using the function methSeg with parameters maxInt=100 and minSeg=10 as suggested in the methylKit documentation. MethCP was run with default parameters.</p>
    </sec>
    <sec id="Sec21">
      <title>Differential methylation testing setup</title>
      <p id="Par52">PycoMeth Meth_Comp was run in all of the three hypothesis options (bs_diff, llr_diff, count_dependency), with and without independent hypothesis weighing, and with <italic>p</italic>-value adjustment using the Benjamini-Hochberg method [<xref ref-type="bibr" rid="CR39">39</xref>]. MethCP differential methylation testing was run with Fisher’s combined probability test. <italic>P</italic>-values reported by MethCP are already reported as adjusted by methylKit’s implementation of SLIM [<xref ref-type="bibr" rid="CR40">40</xref>].</p>
      <p id="Par53">Intervals called by MethCP which were based on a single call were removed, since these obtained false significance from grouped Nanopolish calls being duplicated in the pseudo-bulk generation (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S11).</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec22">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2917_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1:</bold> Supplementary figures S1-S11.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2917_MOESM2_ESM.xlsx">
            <caption>
              <p><bold>Additional file 2.</bold> Benchmark data. Spreadsheet containing sample names, cell line, and download links for raw data (ONT fast5 files) and for VCF files containing SNVs.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2023_2917_MOESM3_ESM.docx">
            <caption>
              <p><bold>Additional file 3.</bold> Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The present contribution is supported by the Helmholtz Association under the joint research school “HIDSS4Health - Helmholtz Information and Data Science School for Health”.</p>
    <sec id="FPar1">
      <title>Review history</title>
      <p id="Par54">The review history is available as Additional file <xref rid="MOESM3" ref-type="media">3</xref>.</p>
    </sec>
    <sec id="FPar2">
      <title>Peer review information</title>
      <p id="Par55">Wenjing She was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>R.S. with guidance by M.B. and O.S. designed and developed the MetH5 format and Bayesian methylation segmentation method. A.L. and R.S. designed and implemented pycoMeth. R.S. prepared the figures and wrote the manuscript with input from M.B. and O.S. The author(s) read and approved the final manuscript.</p>
    <sec id="FPar3">
      <title>Authors’ Twitter handles</title>
      <p id="Par56">Twitter handles: @Adrienleger2 (Adrien Leger), @OliverStegle (Oliver Stegle), @mjbonder (Marc Jan Bonder).</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data availability</title>
    <p>Sequencing raw data and variant calls were downloaded from the Genome in a Bottle (GIAB) consortium [<xref ref-type="bibr" rid="CR22">22</xref>]. Download links are provided in Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Code availability</title>
    <p>pycoMeth:</p>
    <p> • GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/PMBio/pycometh">https://github.com/PMBio/pycometh</ext-link> [<xref ref-type="bibr" rid="CR41">41</xref>]</p>
    <p> • Zenodo: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.4772050">https://doi.org/10.5281/zenodo.4772050</ext-link> [<xref ref-type="bibr" rid="CR42">42</xref>]</p>
    <p> • License: GPL-3</p>
    <p> meth5:</p>
    <p> • GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/PMBio/MetH5Format">https://github.com/PMBio/MetH5Format</ext-link> [<xref ref-type="bibr" rid="CR43">43</xref>]</p>
    <p> • Zenodo: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.4772316">https://doi.org/10.5281/zenodo.4772316</ext-link> [<xref ref-type="bibr" rid="CR44">44</xref>]</p>
    <p> • License: MIT</p>
    <p> Benchmark scripts:</p>
    <p> • GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/snajder-r/benchmark_meth5">https://github.com/snajder-r/benchmark_meth5</ext-link> [<xref ref-type="bibr" rid="CR45">45</xref>]</p>
    <p> • Zenodo: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7380556">https://doi.org/10.5281/zenodo.7380556</ext-link> [<xref ref-type="bibr" rid="CR46">46</xref>]</p>
    <p> • License: MIT</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar4">
      <title>Ethics approval and consent to participate</title>
      <p id="Par57">Not applicable.</p>
    </notes>
    <notes id="FPar5">
      <title>Consent for publication</title>
      <p id="Par58">Not applicable.</p>
    </notes>
    <notes id="FPar6" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par59">A.L. has received financial support from ONT. for consumables during the course of the project and is currently an employee of Oxford Nanopore Technologies (ONT). The remaining authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moore</surname>
            <given-names>LD</given-names>
          </name>
          <name>
            <surname>Le</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>DNA methylation and its basic function</article-title>
        <source>Neuropsychopharmacology.</source>
        <year>2013</year>
        <volume>38</volume>
        <issue>1</issue>
        <fpage>23</fpage>
        <lpage>38</lpage>
        <pub-id pub-id-type="doi">10.1038/npp.2012.112</pub-id>
        <?supplied-pmid 22781841?>
        <pub-id pub-id-type="pmid">22781841</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>DNA methylation in mammals</article-title>
        <source>Cold Spring Harb Perspect Biol.</source>
        <year>2014</year>
        <volume>6</volume>
        <issue>5</issue>
        <fpage>a019133</fpage>
        <pub-id pub-id-type="doi">10.1101/cshperspect.a019133</pub-id>
        <?supplied-pmid 24789823?>
        <pub-id pub-id-type="pmid">24789823</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kumar</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chinnusamy</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Mohapatra</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Epigenetics of Modified DNA Bases: 5-Methylcytosine and Beyond</article-title>
        <source>Front Genet.</source>
        <year>2018</year>
        <volume>9</volume>
        <fpage>640</fpage>
        <pub-id pub-id-type="doi">10.3389/fgene.2018.00640</pub-id>
        <?supplied-pmid 30619465?>
        <pub-id pub-id-type="pmid">30619465</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kurdyukov</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bullock</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>DNA methylation analysis:choosing the right method</article-title>
        <source>Biology.</source>
        <year>2016</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>3</fpage>
        <pub-id pub-id-type="doi">10.3390/biology5010003</pub-id>
        <?supplied-pmid 26751487?>
        <pub-id pub-id-type="pmid">26751487</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feng</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhong</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jacobsen</surname>
            <given-names>SE</given-names>
          </name>
        </person-group>
        <article-title>Efficient and accurate determination of genome-wide DNA methylation patterns in Arabidopsis thaliana with enzymatic methyl sequencing</article-title>
        <source>Epigenetics Chromatin.</source>
        <year>2020</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>42</fpage>
        <pub-id pub-id-type="doi">10.1186/s13072-020-00361-9</pub-id>
        <?supplied-pmid 33028374?>
        <pub-id pub-id-type="pmid">33028374</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mahmoud</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gobet</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Cruz-Dávalos</surname>
            <given-names>DI</given-names>
          </name>
          <name>
            <surname>Mounier</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Dessimoz</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sedlazeck</surname>
            <given-names>FJ</given-names>
          </name>
        </person-group>
        <article-title>Structural variant calling: the long and the short of it</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>246</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1828-7</pub-id>
        <?supplied-pmid 31747936?>
        <pub-id pub-id-type="pmid">31747936</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patterson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Marschall</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Pisanti</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>van Iersel</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Stougie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Klau</surname>
            <given-names>GW</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>WhatsHap: Weighted Haplotype Assembly for Future-Generation Sequencing Reads</article-title>
        <source>J Comput Biol.</source>
        <year>2015</year>
        <volume>22</volume>
        <issue>6</issue>
        <fpage>498</fpage>
        <lpage>509</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2014.0157</pub-id>
        <?supplied-pmid 25658651?>
        <pub-id pub-id-type="pmid">25658651</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nurk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rhie</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rautiainen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bzikadze</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Mikheenko</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The complete sequence of a human genome</article-title>
        <source>Science.</source>
        <year>2022</year>
        <volume>376</volume>
        <fpage>44</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1126/science.abj6987</pub-id>
        <?supplied-pmid 35357919?>
        <pub-id pub-id-type="pmid">35357919</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Workman</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Zuzarte</surname>
            <given-names>PC</given-names>
          </name>
          <name>
            <surname>David</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dursi</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Timp</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Detecting DNA cytosine methylation using nanopore sequencing</article-title>
        <source>Nat Methods.</source>
        <year>2017</year>
        <volume>14</volume>
        <issue>4</issue>
        <fpage>407</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.4184</pub-id>
        <?supplied-pmid 28218898?>
        <pub-id pub-id-type="pmid">28218898</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>AWS</given-names>
          </name>
          <name>
            <surname>Zheng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Applications and potentials of nanopore sequencing in the (epi)genome and (epi)transcriptome era</article-title>
        <source>Innovation (N Y).</source>
        <year>2021</year>
        <volume>2</volume>
        <issue>4</issue>
        <fpage>100153</fpage>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ni</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Liang</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Miao</surname>
            <given-names>Y</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>DeepSignal: detecting DNA methylation state from nanopore sequencing reads using deep-learning</article-title>
        <source>Bioinformatics.</source>
        <year>2019</year>
        <volume>35</volume>
        <issue>22</issue>
        <fpage>4586</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz276</pub-id>
        <?supplied-pmid 30994904?>
        <pub-id pub-id-type="pmid">30994904</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">nanoporetech/megalodon. GitHub. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/nanoporetech/megalodon">https://github.com/nanoporetech/megalodon</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yuen</surname>
            <given-names>ZWS</given-names>
          </name>
          <name>
            <surname>Srivastava</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Daniel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>McNevin</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Jack</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Eyras</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Systematic benchmarking of tools for CpG methylation detection from nanopore sequencing</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>3438</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23778-6</pub-id>
        <?supplied-pmid 34103501?>
        <pub-id pub-id-type="pmid">34103501</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Babenko</surname>
            <given-names>VN</given-names>
          </name>
          <name>
            <surname>Chadaeva</surname>
            <given-names>IV</given-names>
          </name>
          <name>
            <surname>Orlov</surname>
            <given-names>YL</given-names>
          </name>
        </person-group>
        <article-title>Genomic landscape of CpG rich elements in human</article-title>
        <source>BMC Evol Biol.</source>
        <year>2017</year>
        <volume>17</volume>
        <issue>Suppl 1</issue>
        <fpage>19</fpage>
        <pub-id pub-id-type="doi">10.1186/s12862-016-0864-0</pub-id>
        <?supplied-pmid 28251877?>
        <pub-id pub-id-type="pmid">28251877</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Danecek</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bonfield</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Liddle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Marshall</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ohan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Pollard</surname>
            <given-names>MO</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Twelve years of SAMtools and BCFtools</article-title>
        <source>Gigascience</source>
        <year>2021</year>
        <volume>10</volume>
        <issue>2</issue>
        <fpage>giab008</fpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/giab008</pub-id>
        <?supplied-pmid 33590861?>
        <pub-id pub-id-type="pmid">33590861</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Koziol Q, Robinson D. HDF5. 2018. 10.11578/dc.20180330.1.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thorvaldsdóttir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Robinson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Mesirov</surname>
            <given-names>JP</given-names>
          </name>
        </person-group>
        <article-title>Integrative Genomics Viewer (IGV): high-performance genomics data visualization and exploration</article-title>
        <source>Brief Bioinform.</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>2</issue>
        <fpage>178</fpage>
        <lpage>192</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs017</pub-id>
        <?supplied-pmid 22517427?>
        <pub-id pub-id-type="pmid">22517427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Thorvaldsdóttir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Winckler</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Guttman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lander</surname>
            <given-names>ES</given-names>
          </name>
          <name>
            <surname>Getz</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Integrative genomics viewer</article-title>
        <source>Nat Biotechnol.</source>
        <year>2011</year>
        <volume>29</volume>
        <issue>1</issue>
        <fpage>24</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1754</pub-id>
        <?supplied-pmid 21221095?>
        <pub-id pub-id-type="pmid">21221095</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Akalin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kormaksson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Garrett-Bakelman</surname>
            <given-names>FE</given-names>
          </name>
          <name>
            <surname>Figueroa</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Melnick</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>methylKit: a comprehensive R package for the analysis of genome-wide DNA methylation profiles</article-title>
        <source>Genome Biol.</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>10</issue>
        <fpage>R87</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2012-13-10-r87</pub-id>
        <?supplied-pmid 23034086?>
        <pub-id pub-id-type="pmid">23034086</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gong</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Purdom</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>MethCP: Differentially Methylated Region Detection with Change Point Models</article-title>
        <source>J Comput Biol.</source>
        <year>2020</year>
        <volume>27</volume>
        <issue>4</issue>
        <fpage>458</fpage>
        <lpage>471</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2019.0326</pub-id>
        <?supplied-pmid 32176529?>
        <pub-id pub-id-type="pmid">32176529</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ignatiadis</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Klaus</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Zaugg</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Data-driven hypothesis weighting increases detection power in genome-scale multiple testing</article-title>
        <source>Nat Methods.</source>
        <year>2016</year>
        <volume>13</volume>
        <issue>7</issue>
        <fpage>577</fpage>
        <lpage>580</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3885</pub-id>
        <?supplied-pmid 27240256?>
        <pub-id pub-id-type="pmid">27240256</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zook</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Catoe</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McDaniel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Vang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Spies</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sidow</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title>
        <source>Sci Data.</source>
        <year>2016</year>
        <volume>3</volume>
        <fpage>160025</fpage>
        <pub-id pub-id-type="doi">10.1038/sdata.2016.25</pub-id>
        <?supplied-pmid 27271295?>
        <pub-id pub-id-type="pmid">27271295</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">hts-specs version 4f57d6a0e4c030202a07a60bc1bb1ed1544bf679. GitHub repository. <ext-link ext-link-type="uri" xlink:href="https://github.com/samtools/hts-specs/tree/df69c359fb37bc2809d998231519117f1d423017">https://github.com/samtools/hts-specs/tree/df69c359fb37bc2809d998231519117f1d423017</ext-link>. Accessed 14 Dec 2022.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Nanopore Community. <ext-link ext-link-type="uri" xlink:href="https://nanoporetech.com/community">https://nanoporetech.com/community</ext-link>. Accessed 16 Feb 2022.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">bonito: A PyTorch Basecaller for Oxford Nanopore Reads. <ext-link ext-link-type="uri" xlink:href="https://github.com/nanoporetech/bonito">https://github.com/nanoporetech/bonito</ext-link>. Accessed 16 Feb 2022.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zook</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>McDaniel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Wagner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Parikh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Heaton</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An open resource for accurately benchmarking small variant and reference calls</article-title>
        <source>Nat Biotechnol.</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>5</issue>
        <fpage>561</fpage>
        <lpage>566</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0074-6</pub-id>
        <?supplied-pmid 30936564?>
        <pub-id pub-id-type="pmid">30936564</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics.</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>18</issue>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <?supplied-pmid 29750242?>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">modbampy. <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/modbampy/">https://pypi.org/project/modbampy/</ext-link>. Accessed 13 Feb 2022.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chung</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Kang</surname>
            <given-names>CY</given-names>
          </name>
        </person-group>
        <article-title>A multi-omics data simulator for complex disease studies and its application to evaluate multi-omics data analysis methods for disease classification</article-title>
        <source>Gigascience</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>giz045</fpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/giz045</pub-id>
        <?supplied-pmid 31029063?>
        <pub-id pub-id-type="pmid">31029063</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Collette A. Python and HDF5. Sebastopol: O’Reilly Media; 2013.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature.</source>
        <year>2020</year>
        <volume>585</volume>
        <issue>7825</issue>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <?supplied-pmid 32939066?>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Haberland</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SciPy 1.0: fundamental algorithms for scientific computing in Python</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <issue>3</issue>
        <fpage>261</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
        <?supplied-pmid 32015543?>
        <pub-id pub-id-type="pmid">32015543</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">McKinney W. Data structures for statistical computing in python. <italic>Austin, TX: </italic>Proceedings of the 9th Python in Science Conference. 2010;445:56–10.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shirley</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Pedersen</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wheelan</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Efficient, "pythonic" access to FASTA files using pyfaidx</article-title>
        <source>PeerJ PrePrints.</source>
        <year>2015</year>
        <volume>3</volume>
        <fpage>e1196</fpage>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Seabold</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Perktold</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Statsmodels: Econometric and statistical modeling with python. <italic>Austin, TX:</italic> Proceedings of the 9th Python in Science Conference</article-title>
        <source>SciPy</source>
        <year>2010</year>
        <volume>445</volume>
        <fpage>92</fpage>
        <lpage>96</lpage>
        <pub-id pub-id-type="doi">10.25080/Majora-92bf1922-011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Inc</surname>
            <given-names>PT</given-names>
          </name>
        </person-group>
        <source>Collaborative data science</source>
        <year>2015</year>
        <publisher-loc>Montreal</publisher-loc>
        <publisher-name>Plotly Technologies Inc Montral</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Luong TM, Perduca V, Nuel G. Hidden Markov Model Applications in Change-Point Analysis. arXiv. 2012. 
10.48550/arXiv.1212.1778.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Iterson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boer</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Menezes</surname>
            <given-names>RX</given-names>
          </name>
        </person-group>
        <article-title>Filtering, FDR and power</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>450</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-450</pub-id>
        <?supplied-pmid 20822518?>
        <pub-id pub-id-type="pmid">20822518</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benjamini</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hochberg</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Controlling the False Discovery Rate: A Practical and Powerful Approach to Multiple Testing</article-title>
        <source>J R Stat Soc Series B Stat Methodol.</source>
        <year>1995</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>289</fpage>
        <lpage>300</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>HQ</given-names>
          </name>
          <name>
            <surname>Tuominen</surname>
            <given-names>LK</given-names>
          </name>
          <name>
            <surname>Tsai</surname>
            <given-names>CJ</given-names>
          </name>
        </person-group>
        <article-title>SLIM: a sliding linear model for estimating the proportion of true null hypotheses in datasets with dependence structures</article-title>
        <source>Bioinformatics.</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>2</issue>
        <fpage>225</fpage>
        <lpage>231</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq650</pub-id>
        <?supplied-pmid 21098430?>
        <pub-id pub-id-type="pmid">21098430</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Snajder R, Leger A. PMBio/pycoMeth. GitHub. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/PMBio/pycometh">https://github.com/PMBio/pycometh</ext-link>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Snajder R, Leger A. PMBio/pycoMeth. Zenodo. 2022. <pub-id pub-id-type="doi">10.5281/zenodo.4772050</pub-id>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Snajder R. PMBio/MetH5Format. GitHub. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/PMBio/MetH5Format">https://github.com/PMBio/MetH5Format</ext-link>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Snajder R. PMBio/MetH5Format. Zenodo. 2022. <pub-id pub-id-type="doi">10.5281/zenodo.4772316</pub-id>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Snajder R. snajder-r/benchmark_meth5. GitHub. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/snajder-r/benchmark_meth5">https://github.com/snajder-r/benchmark_meth5</ext-link>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Snajder R. snajder-r/benchmark_meth5. Zenodo. 2022. <pub-id pub-id-type="doi">10.5281/zenodo.7380556</pub-id>. Accessed 20 Feb 2023.</mixed-citation>
    </ref>
  </ref-list>
</back>

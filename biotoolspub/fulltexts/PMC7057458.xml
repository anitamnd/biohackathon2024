<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7057458</article-id>
    <article-id pub-id-type="publisher-id">6585</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-020-6585-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>InvBFM: finding genomic inversions from high-throughput sequence data based on feature mining</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wu</surname>
          <given-names>Zhongjia</given-names>
        </name>
        <address>
          <email>2016200809@mail.buct.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wu</surname>
          <given-names>Yufeng</given-names>
        </name>
        <address>
          <email>yufeng.wu@uconn.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Gao</surname>
          <given-names>Jingyang</given-names>
        </name>
        <address>
          <email>gaojy@mail.buct.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0000 9931 8406</institution-id><institution-id institution-id-type="GRID">grid.48166.3d</institution-id><institution>College of Information Science and Technology, </institution><institution>Beijing University of Chemical Technology, </institution></institution-wrap>Beijing, People’s Republic of China </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0860 4915</institution-id><institution-id institution-id-type="GRID">grid.63054.34</institution-id><institution>Department of Computer Science and Engineering, </institution><institution>University of Connecticut, </institution></institution-wrap>Storrs, Connecticut USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>5</day>
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>5</day>
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <issue>Suppl 1</issue>
    <issue-sponsor>Publication of this supplement has not been supported by sponsorship. Information about the source of funding for publication charges can be found in the individual articles. The articles have undergone the journal's standard peer review process for supplements. The Supplement Editors declare that they have no competing interests.</issue-sponsor>
    <elocation-id>173</elocation-id>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>1</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>2</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Genomic inversion is one type of structural variations (SVs) and is known to play an important biological role. An established problem in sequence data analysis is calling inversions from high-throughput sequence data. It is more difficult to detect inversions because they are surrounded by duplication or other types of SVs in the inversion areas. Existing inversion detection tools are mainly based on three approaches: paired-end reads, split-mapped reads, and assembly. However, existing tools suffer from unsatisfying precision or sensitivity (eg: only 50~60% sensitivity) and it needs to be improved.</p>
      </sec>
      <sec>
        <title>Result</title>
        <p id="Par2">In this paper, we present a new inversion calling method called InvBFM. InvBFM calls inversions based on feature mining. InvBFM first gathers the results of existing inversion detection tools as candidates for inversions. It then extracts features from the inversions. Finally, it calls the true inversions by a trained support vector machine (SVM) classifier.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">Our results on real sequence data from the 1000 Genomes Project show that by combining feature mining and a machine learning model, InvBFM outperforms existing tools. InvBFM is written in Python and Shell and is available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/s736670893/InvBFM">https://github.com/wzj1234/InvBFM</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genomics</kwd>
      <kwd>High-throughput sequencing</kwd>
      <kwd>Structural variation</kwd>
      <kwd>Inversion</kwd>
      <kwd>Support vector machine</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Beijing Natural Science Foundation</institution>
        </funding-source>
        <award-id>5182018</award-id>
        <principal-award-recipient>
          <name>
            <surname>Gao</surname>
            <given-names>Jingyang</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>US National Science Foundation</institution>
        </funding-source>
        <award-id>III-1526415</award-id>
        <principal-award-recipient>
          <name>
            <surname>Wu</surname>
            <given-names>Yufeng</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution> the Fundamental Research Funds for the Central Universities</institution>
        </funding-source>
        <award-id>PYBZ1834</award-id>
        <principal-award-recipient>
          <name>
            <surname>Gao</surname>
            <given-names>Jingyang</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <conference xlink:href="http://alan.cs.gsu.edu/isbra18/">
      <conf-name>14th International Symposium on Bioinformatics Research and Applications (ISBRA'18)</conf-name>
      <conf-acronym>ISBRA 2018</conf-acronym>
      <conf-loc>Beijing, China</conf-loc>
      <conf-date>8-11 June 2018</conf-date>
    </conference>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par12">It is widely known that genomic variation plays an important role in shaping the genetic diversity of populations. Recently, high-throughput sequencing data becomes the mature type of genomic data used in research. Finding genomic variations from high-throughput sequence data has become a major objective for large-scale genomics studies, such as the 1000 Genomics Project [<xref ref-type="bibr" rid="CR1">1</xref>]. There are various types of genomic variations, including single nucleotide polymorphisms (SNPs), short (say 50 bp or less) deletions or insertions (indels) and SVs (which are usually longer than 50 bp). There are different types of SVs, including insertion, deletion, copy number variation, and inversion. While some types of SVs (e.g. deletion) have been very actively studied (e.g. [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR6">6</xref>]), other types of SVs such as inversion are less studied. Different from deletion calling where there are a growing list of deletion calling tools, there are less tools for finding inversions. We note that the impact of inversions can have large effect on an organism [<xref ref-type="bibr" rid="CR7">7</xref>]. For example, inversion inhibits recombination in heterokaryons, which may lead to distinct gene-expression patterns. Inversion may also directly influence gene structure or regulation in different ways as well as secondary mutations in the offspring. In addition, inversion may cause diseases such as hemophilia A [<xref ref-type="bibr" rid="CR8">8</xref>], Hunter syndrome [<xref ref-type="bibr" rid="CR9">9</xref>] and increase the risk of infertility or miscarriage [<xref ref-type="bibr" rid="CR10">10</xref>]. Therefore, developing effective inversion calling tools may potentially be very useful.</p>
    <p id="Par13">We focus on calling inversions from mapped sequence data (i.e. paired-end reads). Calling genomic variations from mapped sequence reads is usually based on the following three mapped sequence properties (called signatures): insert size from mapped paired-end reads (ISPE), split-mapped reads, and read depth. Note that there are also approaches performing sequence assembly. Existing inversion calling methods usually use these signatures. Pindel [<xref ref-type="bibr" rid="CR11">11</xref>] only uses split-mapped reads. Delly [<xref ref-type="bibr" rid="CR12">12</xref>] and Lumpy [<xref ref-type="bibr" rid="CR13">13</xref>] are based on paired-end reads and split-mapped reads. All these three tools have been used in the 1000 Genomes Project. We note that although Delly and Lumpy use the same sets of signatures, they appear to perform differently. This implies that these tools are individually engineered in different aspects in order to call inversions more accurately. Our experience indicates that none of these tools clearly outperforms the others. A natural approach for calling inversions accurately is using machine learning: we extract various sequence features and treat inversion calling as a classification problem in machine learning. Previously, we have developed machine learning approaches for finding deletions from sequence data [<xref ref-type="bibr" rid="CR14">14</xref>–<xref ref-type="bibr" rid="CR17">17</xref>]. A main challenge for finding inversions from sequence data with machine learning is that inversions are relatively rare. There are not many known inversions in the benchmark data (e.g. from the 1000 Genomes Project).</p>
    <p id="Par14">In this paper, we develop a new inversion calling approach, called InvBFM. InvBFM uses multiple relevant sequence properties (called features). InvBFM mines features that are unique to both wild-type sequence and inversions, and trains a model based on these features using simulated data. Then InvBFM calls inversions based on the model with real data by examining each candidate inversion site found by multiple inversion calling results. We demonstrate that InvBFM outperforms existing inversion calling tools on real data. InvBFM in Python and Shell is available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/s736670893/InvBFM">https://github.com/wzj1234/InvBFM</ext-link>.</p>
  </sec>
  <sec id="Sec2">
    <title>Results and discussion</title>
    <sec id="Sec3">
      <title>Analysis of features</title>
      <p id="Par15">We first analyze the correlation between the numerical features and the target value. This helps to evaluate the feasibility of using the features of simulated data to train the SVM classifier and then generalize the real data features. InvBFM converts the 15-dimensional feature space which the initially extracted features of inversion are mapped into two dimensions via the principal component analysis (PCA) in order to be visualized as shown in Fig.<xref rid="Fig1" ref-type="fig">1</xref>. In Fig.<xref rid="Fig1" ref-type="fig">1</xref>, the blue dots represent the inversions’ features of the simulated inversions, which are extracted from simulated BAM files and then converted into 2-dimensional feature. The red dots indicate the features of wild-type in simulated data, which are also extracted from simulated data and then mapped into 2-dimensional features. The green dots correspond to the converted 2-dimensional features which are extracted from the 102 real samples near the inversion area recorded in the benchmark. It is evident that the blue and green dots, representing the inversions’ features, are well clustered. The red dots, which represent wild-type features, are clearly separated. This shows that the 15 extracted features are justifiable. That is, the features used by InvBFM are correlated well to whether the target value of the inversion occurs or not.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Visualization of features in simulation and benchmark. All features involved in this image are processed by PCA. The red dots mean wild-type features from simulated data, and the blue dots mean the inversions’ features from simulated data. The green dots’ features come from benchmark of inversion in real data. The green and blue dots are clustered and separated from the red dots, which indicate the features mined by InvBFM are effective</p></caption><graphic xlink:href="12864_2020_6585_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par16">In order to further demonstrate that the feature selection indeed selects more effective features, we compare the detection results by choosing a different number of inversion features, as shown in Table <xref rid="Tab1" ref-type="table">1</xref>. The threshold here is chosen to be three times ISPE. Features<sub>15</sub> refers to the results of calling inversion for 15 features extracted initially, and Feature<sub>8</sub> refers to the results of 8 features selected only by chi-square test. InvBFM uses 8 features selected in Feature<sub>8</sub> and two additional features. It is obvious that the Feature<sub>8</sub> has 2% improvement in precision, and about 1% improvement in recall over the original Feature<sub>15</sub>. Although InvBFM only leads to a small improvement in precision and recall compared to Feature<sub>8</sub>, it is the best of the three. Thus, feature selection in InvBFM using both chi-square test and experience indeed makes the detection of inversion more effective.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of different features</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Feature Version</th><th>No. Calls</th><th>TP<sub>0</sub></th><th>FN</th><th>TP</th><th>FP</th><th>Precision</th><th>Recall</th></tr></thead><tbody><tr><td>Features<sub>15</sub></td><td>1468</td><td>168</td><td>70</td><td>478</td><td>990</td><td>32.56%</td><td>70.59%</td></tr><tr><td>Features<sub>8</sub></td><td>1386</td><td>170</td><td>68</td><td>479</td><td>907</td><td>34.56%</td><td>71.43%</td></tr><tr><td><bold>InvBFM</bold></td><td><bold>1379</bold></td><td><bold>170</bold></td><td><bold>68</bold></td><td><bold>479</bold></td><td><bold>900</bold></td><td><bold>34.73%</bold></td><td><bold>71.43%</bold></td></tr></tbody></table><table-wrap-foot><p>Features<sub>15</sub> means the first 15 features are extracted, Features<sub>8</sub> means selecting 8 numeral features by the chi-square test from Features<sub>15</sub>, InvBFM means the union of Features<sub>8</sub> and 2 features that lead to better results in practice. No.Calls: detected inversion count. <italic>TP</italic> true positive, <italic>TP</italic><sub><bold><italic>0</italic></bold></sub> remove repeats of TP, <italic>FP</italic> false positive, <italic>FN</italic> false negative. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
      <p id="Par17">For measuring the difference in performance between selected the 8 and 10 features, we use a 10-fold cross-validation and take the average values of 100 times from all simulated data and the 204 real samples are downloaded from 1000 Genomes Project to confirm the effort of the two additional features based on experience. The dataset contains a total of 5491 breakpoints of inversion and wild-type from simulated data and real data. The comparison of classification results of the 10 features by InvBFM and the 8 features by chi-square test is shown in Table <xref rid="Tab2" ref-type="table">2</xref>, and we just focus on the occurrence of inversion. In this experiment, we consider it is the true inversion and set label 1 of the breakpoints within 3 times ISPE of the benchmark, otherwise set label 0 as wild-type. Then, we extract the 8 features and the 10 features around each breakpoint respectively mentioned above. For 10-fold cross-validation, we random shuffle the whole dataset, doing 100 times of 10-fold cross-validation and evaluating the average results of the validation set. In this part, we only verify the critical SVM process. Our results here are based on the comparison of expected labels. The parameter settings of the SVM in Table <xref rid="Tab2" ref-type="table">2</xref> are the same as those in Table <xref rid="Tab1" ref-type="table">1</xref>. As shown by the mean results of 100 times at 10-fold cross-validations, it is verified that the 10 features selected by InvBFM are better than the 8 features in recall and F1-score, although their precisions are very similar.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Result of 10-fold cross-validation on the 8 features and 10 features</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Feature Version</th><th>TP</th><th>TN</th><th>FP</th><th>FN</th><th>Precision</th><th>Recall</th><th>F1-score</th></tr></thead><tbody><tr><td>Features<sub>8</sub></td><td>111</td><td>366</td><td>19</td><td>51</td><td>85.38%</td><td>68.51%</td><td>76.03%</td></tr><tr><td><bold>InvBFM</bold></td><td>133</td><td>363</td><td>22</td><td>29</td><td>85.81%</td><td>82.10%</td><td>83.91%</td></tr></tbody></table><table-wrap-foot><p>Threshold = 3*ISPE. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
      <p id="Par18">SVM is used by InvBFM to generalize real samples’ features. Different parameters in SVM may lead to different results. Table <xref rid="Tab3" ref-type="table">3</xref> shows the performance about precision, recall and F1-score of InvBFM in SVM with different parameters. Meanwhile, in Radial Basis Function (RBF), the kernel of SVM, penalty factor sets 8 and gamma sets 0.01 give the best result.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Precision, recall and F1-score of InvBFM in SVM with different parameter</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Para.</th><th>Precision</th><th>Recall</th><th>F1-score</th></tr></thead><tbody><tr><td>c:32, g:5</td><td>25.51%</td><td>72.69%</td><td>37.77%</td></tr><tr><td>c:32, g:1</td><td>26.71%</td><td>72.27%</td><td>39.01%</td></tr><tr><td>c:32, g:0.1</td><td>28.32%</td><td>72.27%</td><td>40.69%</td></tr><tr><td>c:32, g:0.01</td><td>29.94%</td><td>72.27%</td><td>42.34%</td></tr><tr><td>c:8, g:0.01</td><td>32.15%</td><td>71.85%</td><td>44.42%</td></tr></tbody></table><table-wrap-foot><p>Threshold = 3*ISPE. The kernel of SVM is RBF, “c” stands for penalty factor and “g” stands for gamma</p></table-wrap-foot></table-wrap></p>
      <p id="Par19">In order to evaluate the impact of different inversion frequencies in tools, we analyze the tools’ sensitivity in different inversion frequencies. The result is shown in Table <xref rid="Tab4" ref-type="table">4</xref>. InvBFM gets the best results than existing inversion callers.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Sensitivity of multiple tools on different frequencies on 102 samples of 1000 Genomes Project</p></caption><table frame="hsides" rules="groups"><thead><tr><th>INV. Freq.</th><th>INV. No.</th><th>Delly</th><th>Lumpy</th><th>LumpyEP</th><th>Pindel</th><th>InvBFM</th></tr></thead><tbody><tr><td>1~10</td><td>10</td><td>85.71%</td><td>35.71%</td><td>35.71%</td><td>50.00%</td><td>89.29%</td></tr><tr><td>11~50</td><td>3</td><td>51.69%</td><td>1.12%</td><td>1.12%</td><td>31.46%</td><td>58.43%</td></tr><tr><td>&gt;  50</td><td>2</td><td>78.51%</td><td>44.63%</td><td>41.32%</td><td>33.06%</td><td>79.34%</td></tr></tbody></table><table-wrap-foot><p>Threshold = 3*ISPE. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
      <p id="Par20">Moreover, the sensitivity of inversion length on the detected results are shown in Table <xref rid="Tab5" ref-type="table">5</xref>. Lumpy and LumpyEP are the most unstable. InvBFM also performs the best.
<table-wrap id="Tab5"><label>Table 5</label><caption><p>Sensitivity of multiple tools on inversion length on 102 samples of the 1000 Genomes Project</p></caption><table frame="hsides" rules="groups"><thead><tr><th>INV. Len. (k)</th><th>INV. No.</th><th>Delly</th><th>Lumpy</th><th>LumpyEP</th><th>Pindel</th><th>InvBFM</th></tr></thead><tbody><tr><td>0.3~0.5</td><td>10</td><td>80%</td><td>90%</td><td>90%</td><td>30%</td><td>90%</td></tr><tr><td>0.5~1</td><td>42</td><td>76.19%</td><td>0</td><td>0</td><td>47.62%</td><td>80.95%</td></tr><tr><td>1~2.5</td><td>73</td><td>86.30%</td><td>65.75%</td><td>60.27%</td><td>61.36%</td><td>87.67%</td></tr><tr><td>2.5~5</td><td>111</td><td>54.05%</td><td>6.31%</td><td>6.31%</td><td>27.93%</td><td>54.95%</td></tr><tr><td>5~10</td><td>2</td><td>100%</td><td>50%</td><td>50%</td><td>50%</td><td>100%</td></tr></tbody></table><table-wrap-foot><p>Threshold = 3*ISPE. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec4">
      <title>Accuracy of inversion calling</title>
      <p id="Par21">The inversion in our study is assumed to be longer than the mean ISPE of the sample. We ignore the case where the inversion length of candidate inversions is less than the sample mean ISPE. In addition, the basis for determining whether a predicted region is a true inversion is to compare the left and right breakpoints of the predicted inversion with those of the benchmark, with the threshold being 1, 2, or 3 times the average ISPE of the corresponding sequence reads. That is, if the distance between the called breakpoints is more than this threshold, we consider that the predicted inversion is not true. Experiments show that all tools perform better when the threshold is 3 times of the sample mean ISPE.</p>
      <p id="Par22">The comparison of the experimental results of different thresholds with different tools of inversion calls is shown in Table <xref rid="Tab6" ref-type="table">6</xref>. The denominator value in the InvBFM row represents the union of the three tools. The numerator is a set of true inversion generalized by the SVM classifier of InvBFM, which is the value involved in the calculation. In addition, LumpyEP is the abbreviation of Lumpy express tool also released by Lumpy. Since LumpyEP results are not exactly the same as Lumpy, its results of calling inversion are also shown in Table <xref rid="Tab6" ref-type="table">6</xref>. TP<sub>0</sub> indicates the number of non-repetitive regions in the reference benchmark that have records and are judged to be true inversion by tools, i.e., regions of TP after removing repeat inversions. F1-score is a comprehensive evaluation indicator combining precision and recall. The relevant indicators in Table <xref rid="Tab6" ref-type="table">6</xref> are calculated by the formulas shown in eq. (<xref rid="Equ1" ref-type="">1</xref>) and (<xref rid="Equ2" ref-type="">2</xref>). In addition, InvBFM represents the training result of 10 features selected by the feature selection method mentioned above.
<table-wrap id="Tab6"><label>Table 6</label><caption><p>Result of different tools with different threshold values (used to determine when a called inversion matches benchmark)</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Thre-shold</th><th>Tool</th><th>No. Calls</th><th>TP</th><th>TP<sub>0</sub></th><th>FP</th><th>FN</th><th>Precision</th><th>Recall</th><th>F1-score</th></tr></thead><tbody><tr><td rowspan="5">ISPE</td><td><bold>Delly</bold></td><td>1142</td><td>183</td><td>150</td><td>959</td><td>88</td><td>16.02%</td><td>63.03%</td><td>25.55%</td></tr><tr><td><bold>Lumpy</bold></td><td>66</td><td>51</td><td>51</td><td>15</td><td>187</td><td>77.27%</td><td>21.42%</td><td>33.55%</td></tr><tr><td><bold>LumpyEP</bold></td><td>62</td><td>47</td><td>47</td><td>15</td><td>191</td><td>75.81%</td><td>19.75%</td><td>31.33%</td></tr><tr><td><bold>Pindel</bold></td><td>649</td><td>84</td><td>79</td><td>565</td><td>159</td><td>12.94%</td><td>33.19%</td><td>18.62%</td></tr><tr><td><bold>InvBFM</bold></td><td><inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{1379}}{\mathbf{1919}} $$\end{document}</tex-math><mml:math id="M2" display="inline"><mml:mfrac><mml:mn mathvariant="bold">1379</mml:mn><mml:mn mathvariant="bold">1919</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq1.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{359}}{\mathbf{365}} $$\end{document}</tex-math><mml:math id="M4" display="inline"><mml:mfrac><mml:mn mathvariant="bold">359</mml:mn><mml:mn mathvariant="bold">365</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq2.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{163}}{\mathbf{166}} $$\end{document}</tex-math><mml:math id="M6" display="inline"><mml:mfrac><mml:mn mathvariant="bold">163</mml:mn><mml:mn mathvariant="bold">166</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq3.gif"/></alternatives></inline-formula></td><td><bold>1020</bold></td><td><bold>75</bold></td><td><bold>26.03%</bold></td><td><bold>68.49%</bold></td><td><bold>37.73%</bold></td></tr><tr><td rowspan="5">ISPE *2</td><td><bold>Delly</bold></td><td>1142</td><td>244</td><td>164</td><td>898</td><td>74</td><td>21.37%</td><td>68.91%</td><td>32.62%</td></tr><tr><td><bold>Lumpy</bold></td><td>66</td><td>65</td><td>65</td><td>1</td><td>173</td><td>98.48%</td><td>27.31%</td><td>42.76%</td></tr><tr><td><bold>LumpyEP</bold></td><td>62</td><td>60</td><td>60</td><td>2</td><td>178</td><td>96.77%</td><td>25.21%</td><td>40.00%</td></tr><tr><td><bold>Pindel</bold></td><td>649</td><td>99</td><td>82</td><td>550</td><td>156</td><td>15.25%</td><td>34.45%</td><td>21.14%</td></tr><tr><td><bold>InvBFM</bold></td><td><inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{1379}}{\mathbf{1919}} $$\end{document}</tex-math><mml:math id="M8" display="inline"><mml:mfrac><mml:mn mathvariant="bold">1379</mml:mn><mml:mn mathvariant="bold">1919</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq4.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{462}}{\mathbf{468}} $$\end{document}</tex-math><mml:math id="M10" display="inline"><mml:mfrac><mml:mn mathvariant="bold">462</mml:mn><mml:mn mathvariant="bold">468</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq5.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{167}}{\mathbf{172}} $$\end{document}</tex-math><mml:math id="M12" display="inline"><mml:mfrac><mml:mn mathvariant="bold">167</mml:mn><mml:mn mathvariant="bold">172</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq6.gif"/></alternatives></inline-formula></td><td><bold>917</bold></td><td><bold>71</bold></td><td><bold>33.50%</bold></td><td><bold>70.17%</bold></td><td><bold>45.35%</bold></td></tr><tr><td rowspan="5">ISPE *3</td><td><bold>Delly</bold></td><td>1142</td><td>258</td><td>165</td><td>884</td><td>73</td><td>22.59%</td><td>69.33%</td><td>34.08%</td></tr><tr><td><bold>Lumpy</bold></td><td>66</td><td>65</td><td>65</td><td>1</td><td>173</td><td>98.48%</td><td>27.31%</td><td>42.76%</td></tr><tr><td><bold>LumpyEP</bold></td><td>62</td><td>61</td><td>61</td><td>1</td><td>177</td><td>98.39%</td><td>25.63%</td><td>40.67%</td></tr><tr><td><bold>Pindel</bold></td><td>649</td><td>101</td><td>82</td><td>548</td><td>156</td><td>15.56%</td><td>34.45%</td><td>21.44%</td></tr><tr><td><bold>InvBFM</bold></td><td><inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{1379}}{\mathbf{1919}} $$\end{document}</tex-math><mml:math id="M14" display="inline"><mml:mfrac><mml:mn mathvariant="bold">1379</mml:mn><mml:mn mathvariant="bold">1919</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq7.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{479}}{\mathbf{485}} $$\end{document}</tex-math><mml:math id="M16" display="inline"><mml:mfrac><mml:mn mathvariant="bold">479</mml:mn><mml:mn mathvariant="bold">485</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq8.gif"/></alternatives></inline-formula></td><td><inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \frac{\mathbf{170}}{\mathbf{173}} $$\end{document}</tex-math><mml:math id="M18" display="inline"><mml:mfrac><mml:mn mathvariant="bold">170</mml:mn><mml:mn mathvariant="bold">173</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="12864_2020_6585_Article_IEq9.gif"/></alternatives></inline-formula></td><td><bold>900</bold></td><td><bold>68</bold></td><td><bold>34.73%</bold></td><td><bold>71.43%</bold></td><td><bold>46.74%</bold></td></tr></tbody></table><table-wrap-foot><p>No.Calls: detected inversion count. <italic>TP</italic> true positive, <italic>TP</italic><sub><bold><italic>0</italic></bold></sub> remove repeats of TP, <italic>FP</italic> false positive, <italic>FN</italic> false negative. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
      <p id="Par23">We can see from the results that Delly’s recall achieves the best results among the three existing tools, regardless of different thresholds. Lumpy is the best in precision of the three existing tools in precision but with recall less than 30%, which is the lowest. Pindel is the worst in the precision and F1-score indicators. The recall and F1-score of InvBFM perform the best with the 10 features. InvBFM improves the F1-score by more than 10% than Delly, which achieves the highest recall among the existing tools. Therefore, InvBFM performs better in inversion calling compared with existing tools.
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ FP= No. Calls- TP, FN= benchmark-{TP}_0 $$\end{document}</tex-math><mml:math id="M20" display="block"><mml:mi mathvariant="italic">FP</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="italic">No</mml:mi><mml:mo>.</mml:mo><mml:mtext mathvariant="italic">Calls</mml:mtext><mml:mo>-</mml:mo><mml:mi mathvariant="italic">TP</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="italic">FN</mml:mi><mml:mo>=</mml:mo><mml:mtext mathvariant="italic">benchmark</mml:mtext><mml:mo>−</mml:mo><mml:msub><mml:mi mathvariant="italic">TP</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><graphic xlink:href="12864_2020_6585_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Precision=\frac{TP}{No. Calls}, Recall=\frac{TP_0}{benchmark},F1- score=\frac{2\ast Precision\ast Recall}{Precision+ Recall} $$\end{document}</tex-math><mml:math id="M22" display="block"><mml:mtext mathvariant="italic">Precision</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mi mathvariant="italic">TP</mml:mi><mml:mrow><mml:mi mathvariant="italic">No</mml:mi><mml:mo>.</mml:mo><mml:mtext mathvariant="italic">Calls</mml:mtext></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mtext mathvariant="italic">Recall</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi mathvariant="italic">TP</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mtext mathvariant="italic">benchmark</mml:mtext></mml:mfrac><mml:mo>,</mml:mo><mml:mi>F</mml:mi><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">score</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mo>∗</mml:mo><mml:mtext mathvariant="italic">Precision</mml:mtext><mml:mo>∗</mml:mo><mml:mtext mathvariant="italic">Recall</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">Precision</mml:mtext><mml:mo>+</mml:mo><mml:mtext mathvariant="italic">Recall</mml:mtext></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2020_6585_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par24">10-fold cross-validation was used to compare the performances of InvBFM and other tools for calling inversion. The dataset we used in this part is the same as the data in Table <xref rid="Tab2" ref-type="table">2</xref> from the simulated data and 204 real samples, which contains a total of 5491 inversion and wild-type breakpoints. The result of detected breakpoints of real data from all the tools are shown in Table <xref rid="Tab7" ref-type="table">7</xref>. Under the threshold of 3 times ISPE, when the breakpoints deviation is within the threshold, it is considered to be a true inversion and we label it as 1; otherwise, it is set to 0. On this basis, we use Delly, Pindel, Lumpy, LumpyEP and InvBFM to call inversions and compare their results with the expected label to calculate various indicators, rather than comparing predicted inversion to the benchmark in Table <xref rid="Tab6" ref-type="table">6</xref>. In each 10-fold cross-validation process, we randomly shuffled all the data, and divided the data set into 10 parts averagely. We used 9 parts for training and 1 part for validation. We repeat the process 10 times to make the validation set fully cover the whole data set. Only InvBFM involves the training process. So, the SVM classifier is trained using the inversion features of the training set for each training step. Since the validation set is used to assess the calling results of each tool, all the tools in Table <xref rid="Tab7" ref-type="table">7</xref> need to verify that each inversion is correctly detected in the validation set. The specific results of mean values in 100 times of 10-fold cross-validation are shown in Table <xref rid="Tab7" ref-type="table">7</xref>. It is worth mentioning that since the InvBFM is based on modelling SVM using features from simulated data, Table <xref rid="Tab7" ref-type="table">7</xref> filters out the breakpoints in simulated data and only verifies the performance of the breakpoints from real data comparing their expected labels. The results in Table <xref rid="Tab7" ref-type="table">7</xref> verify that our InvBFM does perform optimally on the comprehensive performance of F1-score for detecting inversion without overfitting.
<table-wrap id="Tab7"><label>Table 7</label><caption><p>Result of 10-fold cross-validation on the different tools</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Tool</th><th>TP</th><th>TN</th><th>FP</th><th>FN</th><th>Precision</th><th>Recall</th><th>F1-score</th></tr></thead><tbody><tr><td>Delly</td><td>85.30</td><td>124.10</td><td>186.70</td><td>0.90</td><td>31.36%</td><td>98.96%</td><td>47.63%</td></tr><tr><td>Lumpy</td><td>52.70</td><td>289.60</td><td>1.20</td><td>53.50</td><td>97.77%</td><td>49.62%</td><td>65.83%</td></tr><tr><td>LumpyEP</td><td>48.50</td><td>289.80</td><td>1.00</td><td>57.70</td><td>97.98%</td><td>45.67%</td><td>62.30%</td></tr><tr><td>Pindel</td><td>50.30</td><td>146.70</td><td>164.10</td><td>35.90</td><td>23.46%</td><td>58.35%</td><td>33.47%</td></tr><tr><td><bold>InvBFM</bold></td><td><bold>59.72</bold></td><td><bold>288.47</bold></td><td><bold>22.33</bold></td><td><bold>26.47</bold></td><td><bold>72.78</bold>%</td><td><bold>69.29</bold>%</td><td><bold>70.99</bold>%</td></tr></tbody></table><table-wrap-foot><p>Threshold = 3*ISPE. The kernel of SVM is linear, with the penalty factor of 0.1 and the gamma of 20</p></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Conclusions</title>
    <p id="Par25">This paper proposes InvBFM as a new approach to detect inversion. Firstly, InvBFM uses Pindel, Delly, and Lumpy to generate inversion candidates. From the candidate inverting regions, the most significant features of inversions such as read pair orientation, one end unmapped and so on are assigned to specific values, and then the most effective 10 features are selected by combining chi-square test and experience. Finally, we use the SVM classifier to determine candidates as true inversions or not. All the real data in this paper comes from the 1000 Genomics Project. Because the inversions in real data are too few to train the classifiers, we use simulated data for model training and the real data for validation. The results show that our method is better than the existing three tools on recall and F1-score, ranks as second on precision, which is a little lower than Lumpy. In the future work, we will consider further mining the inversion features and exploiting the full use of real data to make inversion calling more effective.</p>
  </sec>
  <sec id="Sec6">
    <title>Methods</title>
    <sec id="Sec7">
      <title>Data</title>
      <p id="Par26">There are only a small number of validated inversions that have been released so far. The 1000 Genomes Project released a number of inversions. However, the number of called inversions from the 1000 Genomes Project is not very large. There are only 238 inversions recorded in Chromosome 11 in 102 samples. This is far from being enough to train the SVM classifier. Therefore, simulated data is used for training.</p>
      <sec id="Sec8">
        <title>Simulated data</title>
        <p id="Par27">In this experiment, the simulated data is used as the training set of SVM classifier. The simulated data uses the reference genome (hs37d5.fa) from the 1000 Genomes Project. SimulateSeq [<xref ref-type="bibr" rid="CR18">18</xref>] is used to simulated BAM files with different length, ISPE, and error rate on the reference genome. In order to avoid overfitting by the specific value of the parameters, we generated 13 sets of parameters in SimulateSeq, each parameter in every set is randomly taken within a range of values. For details, the range of inversion length is 500 to 6000, the ISPE is set in 300 to 500, and the error rate range is set from 0.003 to 0.005. There are also some parameters that affect the SimulateSeq less, we set the read length range from 70 to 150, the offset from 20 to 30, and the depth from 4 to 25. It is worth mentioned that the obvious limitation of SimulateSeq is that even if the error rate is introduced, the inversion area created is relatively clean, unlike the real inversion surrounded repetition or other SVs provided in 1000 Genomes Project. However, the results of cross-validation in the previous paper shown that the clean inversion can also train a better SVM classifier without overfitting, this is the reason why we choose the SimulateSeq. The 10 selected numerical features are extracted from these BAM files. Furthermore, these features from simulated bam are normalized with the candidate features of real bam, the specific approach is to employ scale function from preprocessing of sklearn. And then put scaled simulated features into the SVM classifier for training. This leads to a trained SVM classifier.</p>
      </sec>
      <sec id="Sec9">
        <title>Real data</title>
        <p id="Par28">Real data from the 1000 Genomes Project is used as the test data. Inversions released by the 1000 Genomes Project are used as the benchmark in this paper. There are not many called inversions in the benchmark: the maximum number of inversions recorded in the benchmark for each sample on chromosome 11 is no more than four. There are totally 102 samples (BAM files) as the original data source. Chromosome 11 of the first 100 samples have more frequent inversions and chromosome 11 of the last two samples both have only one inversion according to the benchmark. The BAM files for these real data are low coverage, and they are released by the 1000 Genomes Project. The benchmark used in this paper is from the 8th version of vcf file updated in May 2017. A total of 238 inversions are reported on chromosome 11 of 102 samples. In addition, in order to verify the performance of InvBFM, we added another 102 samples of chromosome 11 (a total of 204 real data samples) also from 1000 Genomes Project to complete the cross-validation.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>High-level idea</title>
      <p id="Par29">InvBFM calls inversions by examining candidate inversions found by multiple inversion calling tools. The inversion calling is model-based. That is, InvBFM trains a classification model using SVM with various sequence-based features. In this paper, we use simulated data for model training. This is because there are only very limited real inversions available in the 1000 Genomes Project data release, and these real inversions are needed for validation. Our experience indicates that the model trained by the simulation data can still be useful when calling inversions in the real data.</p>
    </sec>
    <sec id="Sec11">
      <title>Workflow of InvBFM</title>
      <p id="Par30">Our new method InvBFM takes mapped sequence reads on a given reference genome in the BAM format as input. There are two main parts for using InvBFM.as Fig.<xref rid="Fig2" ref-type="fig">2</xref> shown (i) Training model. InvBFM trains a classification model by SVM on simulated data. This model classifies a candidate inversion site to be either true inversions or wild-type from a set of collected sequence features. The sequence features are collected from the mapped reads near the inversion site. These features are informative about the presence of the inversion. (ii) Calling inversion. InvBFM extracts the same set of sequence features from sequence reads and calls inversion using the trained classification model. For calling, InvBFM runs multiple existing inversion calling tools, including Pindel, Delly and Lumpy. InvBFM then merges inversion calls from these tools to form the candidate inversion sites. InvBFM then calls inversions by examining each candidate site and classifying with the trained model. In order to improve accuracy, InvBFM mines the features of inversions and chooses a subset of more informative features in model training.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Workflow of InvBFM. It includes two major parts: (i) Training model. Bench-mark file is used to locate true inversion regions and non-SV regions, and then InvBFM extracts features from sequence reads around each label region to train a classification model by SVM. (ii) Calling inversion. Results of several tools are integrated as candidate inversion sites, then InvBFM extracts the same set of sequence features from sequence reads and calls inversion using the trained classification model</p></caption><graphic xlink:href="12864_2020_6585_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec12">
      <title>Features</title>
      <p id="Par31">Compared with other genomic variants, inversion has some unique features. For example, read depth has been used as a main signature for calling deletions. Due to inversion is a balanced variation, read depth is not very informative. InvBFM uses some features, including the read pair orientation, one end unmapped, soft-clipped reads, concordance of ISPE and so on. Some of them are shown in Fig.<xref rid="Fig3" ref-type="fig">3</xref>, which is produced by the Integrative Genomics Viewer (IGV) [<xref ref-type="bibr" rid="CR19">19</xref>] on sequence data to visualize the features of inversions. It is important to note that we focus on diploid organisms in this paper. Therefore, an inversion may be presented in one or both copies of the chromosome. Also recall that we assume the sequence data have pairs (i.e. paired-end reads).
<fig id="Fig3"><label>Fig. 3</label><caption><p>Inversion visualization in IGV. <bold>a</bold> Inversion region produces a large number of read pairs with the same orientation. The green read pair means both of the ends are mapped on the forward strand. The blue part means both of the ends are mapped on the reverse strand. <bold>b</bold> One end unmapped with the red line surrounded happens near the inversion, which means that an end mapping to the reference genome fails in the read pair near the inversion breakpoint. <bold>c</bold> When a read is mapped on a breakpoint of inversion, soft-clipped read occurs, in which the continuous bases are unmapped reflection as the color block. <bold>d</bold> ISPE is the distance between two ends in a read pair, ISPE is abnormally called discordant read pair perhaps indicates inversion occurs. <bold>e</bold> The overall effect of inversion on a genomic region</p></caption><graphic xlink:href="12864_2020_6585_Fig3_HTML" id="MO3"/></fig></p>
      <sec id="Sec13">
        <title>Read pair orientation</title>
        <p id="Par32">One of the most important features of inversion is that the two ends of a read pair has the same orientation while they mapped to the reference gene, which is different from the usual paired reads (where the two ends are oriented in the opposite direction). This happens when one end is outside the inversion and the other end is inside the inverted region. When reads are obtained from the paired-end sequencing technology, a read originates from the forward strand, and its mate originates from the reverse strand. In other words, two reads in a read pair usually are mapped on different strand. However, when inversion occurs, a read within the inversion area are mapped on the same strand as its mate. See Fig.<xref rid="Fig3" ref-type="fig">3</xref>a for an illustration, the two reads linked by a straight line represent a read pair. The green reads linked by a straight line indicate that the reads in a read pair are both mapped to the forward strand of the reference and the blue indicates they are both mapped to the reverse strand. It can be observed that multiple reads mapped on the same strand are produced in the inversion region. Therefore, read orientation is an important feature of inversion.</p>
      </sec>
      <sec id="Sec14">
        <title>One end unmapped</title>
        <p id="Par33">One end unmapped means that only one read of a read pair is successfully mapped to the reference. This occurs when one end of a read pair overlaps with the boundary of the inversion and becomes unmapped. As shown in Fig.<xref rid="Fig3" ref-type="fig">3</xref>b, two reads are wrapped by a red line that are not linearly connected to another read. This means the read has a mate that is not mapped to the reference, the occurrence of inversions causes this abnormality. Within the inversion region, there are an increasing number of one end unmapped read pairs, which can be an important feature for inversion.</p>
      </sec>
      <sec id="Sec15">
        <title>Soft-clipped reads</title>
        <p id="Par34">Soft-clipped read refers to a read partly mapped to the reference. Soft-clipped reads occur when one end of a read pair overlaps with the boundaries of the inversion region. Different from the one end unmapped case, the read is partially mapped (i.e. becomes a soft-clipped read). Thus, there tends to be more soft-clipped reads near the inversion boundary. This is shown in Fig.<xref rid="Fig3" ref-type="fig">3</xref>c Color blocks indicate continuous bases that are mismatched with the reference. Each streak represents a mismatched base, and the soft-clipped read contains the color bar blocks.</p>
      </sec>
      <sec id="Sec16">
        <title>ISPE</title>
        <p id="Par35">ISPE stands for the insert size of pair-end reads, indicating the distance between the two ends in a read pair. In a wild-type, ISPE usually has a range, which depends on the sequencing technologies. If the observed ISPE of mapped paired-end reads falls into this normal range, we say the read pair is concordant read pair. Otherwise, we say the read pair is discordant read pair. When one end of a read pair is outside the inversion area and the other end is inside the inversion area, the observed ISPE may be different from the true ISPE and the read becomes discordant. The concordant and discordant read pairs are shown in Fig.<xref rid="Fig3" ref-type="fig">3</xref>d. This is more likely when the inversion is longer.</p>
      </sec>
      <sec id="Sec17">
        <title>Other features</title>
        <p id="Par36">Besides the above features, other features can also be valuable for calling inversions, such as a read is uniquely or multiply mapped to the reference, whether perfectly mapped to reference, mapped quality and so on.</p>
        <p id="Par37">The features described above are specific features of inversions. Figure <xref rid="Fig3" ref-type="fig">3</xref>e shows inversion’s overall performance in IGV. It shows the case of inversion and also the case of wild-type. We can see the inversion features are enriched at the inversion site.</p>
      </sec>
      <sec id="Sec18">
        <title>Feature expression</title>
        <p id="Par38">InvBFM maps the features of inversion mentioned above into numerical features for subsequent processing. Table <xref rid="Tab8" ref-type="table">8</xref> shows more details of these features. The extraction of numerical features is based on the overlapping paired-end reads of the BAM file. Since some inversion features overlap with inversion breakpoints, the scope of the InvBFM fetch features is defined to be the left and right breakpoints of the ISPE of the paired-end reads, as shown in Fig.<xref rid="Fig4" ref-type="fig">4</xref>. We use pysam [<xref ref-type="bibr" rid="CR20">20</xref>] to extract features from the overlapping reads. Regarding the numerical features expressed in inversion, first, we extract the key information of overlapping reads. The information includes the XT value under the XT tag of read, which indicates the read is uniquely or multiply mapped to reference. Cigartuples indicate the specific bases’ mapped situations in reads. We mainly extract the number of bases of total mapped and soft-clip. Both of them contribute to the number of middle mapped quality and the number of clipped reads. We also look for its mate based on the read so that we can get the mapped direction of its mate. In addition, we also extract the length of the read, the mapped quality and its ISPE. The collection of the above information constitutes the set of read information required for the features, and the corresponding 15 numerical feature sets can be obtained by integrating the corresponding quantities of the information in the order of Table <xref rid="Tab8" ref-type="table">8</xref>.
<table-wrap id="Tab8"><label>Table 8</label><caption><p>Features. Each feature is assigned to an ID</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Features</th><th>ID.</th><th>Description of numerical features</th></tr></thead><tbody><tr><td rowspan="2">Uniquely/Multiply mapped</td><td>1</td><td>Number of uniquely mapped reads</td></tr><tr><td>2</td><td>Number of multiply mapped reads</td></tr><tr><td>One end unmapped</td><td>3</td><td>Number of read pairs with one end unmapped</td></tr><tr><td>Soft-clip read</td><td>4</td><td>Number of clipped read</td></tr><tr><td rowspan="2">Mapped with error/error free</td><td>5</td><td>Number of mapped with error free</td></tr><tr><td>6</td><td>Number of mapped with error</td></tr><tr><td rowspan="2">ISPE of read pair</td><td>7</td><td>Number of concordant pair whose ISPE is normal</td></tr><tr><td>8</td><td>Number of discordant pair whose ISPE is abnormal</td></tr><tr><td rowspan="4">Mapping quality</td><td>9</td><td>Sum of mapped quality</td></tr><tr><td>10</td><td>Number of low mapped quality</td></tr><tr><td>11</td><td>Number of middle mapped quality</td></tr><tr><td>12</td><td>Number of high mapped quality</td></tr><tr><td rowspan="3">Read pair orientation</td><td>13</td><td>Both mapped on reverse strand</td></tr><tr><td>14</td><td>Both mapped on forward strand</td></tr><tr><td>15</td><td>Both mapped on same strand</td></tr></tbody></table></table-wrap>
<fig id="Fig4"><label>Fig. 4</label><caption><p>Extracted features in InvBFM. The range of extracted features is defined as the enlargement of ISPE by both left and right breakpoints of inversion area</p></caption><graphic xlink:href="12864_2020_6585_Fig4_HTML" id="MO4"/></fig></p>
      </sec>
    </sec>
    <sec id="Sec19">
      <title>Feature mining</title>
      <p id="Par39">Not all the features are equally informative about finding inversions. In order to mine the most efficient features, InvBFM performs feature selection on the initial extracted numerical features. InvBFM tests the correlation between each feature and its target value by using the chi-square test. The higher chi-square value is, the closer the relationship between the feature and the target is. When calculating the chi-squared value of a feature, we set O to be the observed frequency of features. E is the expected frequency of features. O is calculated from all the features and its output. E is calculated from the mean features and mean output. To estimate the difference between the observation frequency and the expected frequency, we use the chi-square test (3) to calculate the final chi-square value.
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {x}^2=\sum \frac{{\left(O-E\right)}^2}{E} $$\end{document}</tex-math><mml:math id="M24" display="block"><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mo>∑</mml:mo><mml:mfrac><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:mi>O</mml:mi><mml:mo>−</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mi>E</mml:mi></mml:mfrac></mml:math><graphic xlink:href="12864_2020_6585_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par40">The highest 8 chi-square values obtained by the chi-square test are features 2, 4, 6, 8, 11, 13, 14 and 15 in Table <xref rid="Tab8" ref-type="table">8</xref>. These 8 features are reserved as valid features. The reason why only using the 8 features with the highest chi-square value is that the feature whose chi-square value at the 9th indicates discordant pair. It is related to concordant pair which is already selected, and also selecting discordant pair as an effective feature causes feature redundancy. In addition, according to our experience, the number of one end unmapped and the sum of mapping quality are both important features for inversions. These are not included in the above 8 features selected by chi-square test. So, these two features are also added to the list of chosen features. The final feature set selected by InvBFM contains the following 10 features: 2, 3, 4, 6, 8, 9, 11, 13, 14, 15. The 10 features of InvBFM are more effective than the 8 features of chi-square test, which have been verified in previous results.</p>
    </sec>
    <sec id="Sec20">
      <title>Calling inversions</title>
      <p id="Par41">We first collect the called inversions as candidate inversions from existing tools, including Pindel, Delly and Lumpy. We use multiply tools here because existing tools for detecting inversion use different signatures: Pindel only uses split-mapped reads, and both Delly and Lumpy use ISPE of paired-end reads and split-mapped reads. This helps to find candidate inversions that are more likely to contain true inversions.</p>
      <p id="Par42">InvBFM uses the SVM classification to examine each candidate inversion to predict whether inversion occurs to get the final inversion set. Because there are a few validated inversions, the SVM classifier is trained with the simulated inversion. The SVM classifier then treats the generalization candidate inversions’ features from real data to get final inversion set.</p>
      <p id="Par43">In more details, InvBFM sets the number of simulated samples N<sub>s</sub>. Each sample has M<sub>s1</sub> simulated inversions. So InvBFM extracts the number of N<sub>s</sub>*M<sub>s1</sub> numerical features from the simulated inversions. These features from the inversions are set to 1. Similarly, features from the wild-type region are set to 0. The extracted features from the simulated data with the labels constitute the training data, which are scaled to train the SVM classifier. On the other hand, the numerical features of the 10 features are extracted according to the candidate inversion set of the real samples. These real data features are scaled and then put into the SVM classifier modeled by the simulated data to judge whether inversion occurs. The result of 1 indicates that InvBFM determines that the region is a true inversion, and 0 indicates that the region is a wild-type. Finally, InvBFM gets the final inversion set from the candidates with called label 1. The SVM classifier of InvBFM chooses a linear kernel with the penalty factor of 0.1 and the gamma of 20.</p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>IGV</term>
        <def>
          <p id="Par4">Integrative Genomics Viewer</p>
        </def>
      </def-item>
      <def-item>
        <term>ISPE</term>
        <def>
          <p id="Par5">Insert size from mapped paired-end reads</p>
        </def>
      </def-item>
      <def-item>
        <term>LumpyEP</term>
        <def>
          <p id="Par6">Lumpy express</p>
        </def>
      </def-item>
      <def-item>
        <term>PCA</term>
        <def>
          <p id="Par7">Principal component analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>RBF</term>
        <def>
          <p id="Par8">Radial basis function</p>
        </def>
      </def-item>
      <def-item>
        <term>SNPs</term>
        <def>
          <p id="Par9">Single nucleotide polymorphisms</p>
        </def>
      </def-item>
      <def-item>
        <term>SVM</term>
        <def>
          <p id="Par10">Support vector machine</p>
        </def>
      </def-item>
      <def-item>
        <term>SVs</term>
        <def>
          <p id="Par11">Structural variations</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
    <sec id="FPar1">
      <title>About this supplement</title>
      <p id="Par44">This article has been published as part of BMC Genomics, Volume 21 Supplement 1, 2020: Selected articles from the 14th International Symposium on Bioinformatics Research and Applications (ISBRA-18): genomics. The full contents of the supplement are available at <ext-link ext-link-type="uri" xlink:href="https://bmcgenomics.biomedcentral.com/articles/supplements/volume-21-supplement-1">https://bmcgenomics.biomedcentral.com/articles/supplements/volume-21-supplement-1</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>ZJW, YFW and JYG designed this study. ZJW wrote and performed the InvBFM in Python and Shell. YFW, JYG and ZJW wrote the manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Project and publication costs are supported by Beijing Natural Science Foundation (5182018) and the Fundamental Research Funds for the Central Universities (PYBZ1834) of J.G.; Y.W. is partly supported by a grant from US National Science Foundation (III-1526415). The funding body didn’t play any roles in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>All of the data mentioned to support our results in this paper are released by 1000 Genomes Project. For the detail, the reference genome in fa format is available at <ext-link ext-link-type="uri" xlink:href="ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz">ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz</ext-link>, the real data of BAM format file can be downloaded at <ext-link ext-link-type="uri" xlink:href="ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data">ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data</ext-link>, the benchmark is available at <ext-link ext-link-type="uri" xlink:href="ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/integrated_sv_map/ALL.wgs.mergedSV.v8.20130502.svs.genotypes.vcf.gz">ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/integrated_sv_map/ALL.wgs.mergedSV.v8.20130502.svs.genotypes.vcf.gz</ext-link>.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par45">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par46">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par47">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>The Genomes Project Consortium</collab>
        </person-group>
        <article-title>A global reference for human genetic variation</article-title>
        <source>Nature</source>
        <year>2015</year>
        <volume>526</volume>
        <issue>7571</issue>
        <fpage>68</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1038/nature15393</pub-id>
        <pub-id pub-id-type="pmid">26432245</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parikh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Mohiyuddin</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lam</surname>
            <given-names>HY</given-names>
          </name>
          <name>
            <surname>Iyer</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pratt</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Svclassify: a method to establish benchmark structural variant calls</article-title>
        <source>BMC Genomics</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>64</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-016-2366-2</pub-id>
        <pub-id pub-id-type="pmid">26772178</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A statistical framework for SNP calling, mutation discovery, association mapping and population genetical parameter estimation from sequencing data</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>21</issue>
        <fpage>2987</fpage>
        <lpage>2993</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr509</pub-id>
        <pub-id pub-id-type="pmid">21903627</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>FX</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Zheng</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Prioritizing disease genes by using search engine algorithm</article-title>
        <source>Curr Bioinforma</source>
        <year>2016</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>195</fpage>
        <lpage>202</lpage>
        <pub-id pub-id-type="doi">10.2174/157489361102160401164311</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ye</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jayasinghe</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Systematic discovery of complex indels in human cancers</article-title>
        <source>Nat Med</source>
        <year>2016</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>97</fpage>
        <pub-id pub-id-type="doi">10.1038/nm.4002</pub-id>
        <pub-id pub-id-type="pmid">26657142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Geng</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Cui</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Ye</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An improved burden-test pipeline for identifying associations from rare germline and somatic variants</article-title>
        <source>BMC Genomics</source>
        <year>2017</year>
        <volume>753</volume>
        <issue>Suppl 7</issue>
        <fpage>55</fpage>
        <lpage>62</lpage>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Puig</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Casillas</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Villatoro</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cáceres</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Human inversions and their functional consequences</article-title>
        <source>Brief Funct Genomics</source>
        <year>2015</year>
        <volume>14</volume>
        <issue>5</issue>
        <fpage>369</fpage>
        <lpage>379</lpage>
        <pub-id pub-id-type="doi">10.1093/bfgp/elv020</pub-id>
        <pub-id pub-id-type="pmid">25998059</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bagnall</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Waseem</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>PM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recurrent inversion breaking intron 1 of the factor VIII gene is a frequent cause of severe hemophilia a</article-title>
        <source>Blood</source>
        <year>2002</year>
        <volume>99</volume>
        <issue>1</issue>
        <fpage>168</fpage>
        <lpage>174</lpage>
        <pub-id pub-id-type="doi">10.1182/blood.V99.1.168</pub-id>
        <pub-id pub-id-type="pmid">11756167</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bondeson</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Dahl</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Malmgren</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Kleijer</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Tönnesen</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Carlberg</surname>
            <given-names>BM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Inversion of the ids gene resulting from recombination with ids-related sequences is a common cause of the hunter syndrome</article-title>
        <source>Hum Mol Genet</source>
        <year>1995</year>
        <volume>4</volume>
        <issue>4</issue>
        <fpage>615</fpage>
        <pub-id pub-id-type="doi">10.1093/hmg/4.4.615</pub-id>
        <pub-id pub-id-type="pmid">7633410</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arun</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Manipriya</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Aravind</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chandralekha</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Pericentric inversion of chromosome 9 causing infertility and subsequent successful in vitrofertilization</article-title>
        <source>Niger Med J</source>
        <year>2016</year>
        <volume>57</volume>
        <issue>2</issue>
        <fpage>142</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="doi">10.4103/0300-1652.182080</pub-id>
        <pub-id pub-id-type="pmid">27226692</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ye</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Schulz</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Long</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Apweiler</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ning</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>Pindel: a pattern growth approach to detect break points of large deletions and medium sized insertions from paired-end short reads</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>21</issue>
        <fpage>2865</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp394</pub-id>
        <pub-id pub-id-type="pmid">19561018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rausch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zichner</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Schlattl</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stütz</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Benes</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Korbel</surname>
            <given-names>JO</given-names>
          </name>
        </person-group>
        <article-title>Delly: structural variant discovery by integrated paired-end and split-read analysis</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>18</issue>
        <fpage>i333</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts378</pub-id>
        <pub-id pub-id-type="pmid">22962449</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Layer</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Chiang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>Lumpy: a probabilistic framework for structural variant discovery</article-title>
        <source>Genome Biol</source>
        <year>2012</year>
        <volume>15</volume>
        <issue>6</issue>
        <fpage>R84</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-6-r84</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Cai L, Chu C, Zhang X, Wu Y, Gao J. Concod: an effective integration framework of consensus-based calling deletions from next-generation sequencing data. Int J Data Mining Bioinforma. 2017;17(2):153. 10.1109/BIBM.2016.7822495.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cai</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Concod: an effective integration framework of consensus-based calling deletions from next-generation sequencing data</article-title>
        <source>Int J Data Mining Bioinform</source>
        <year>2017</year>
        <volume>17</volume>
        <issue>2</issue>
        <fpage>153</fpage>
        <pub-id pub-id-type="doi">10.1504/IJDMB.2017.084267</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Splicejumper: a classification-based approach for calling splicing junctions from rna-seq data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>S17</issue>
        <fpage>S10</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-16-S17-S10</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Gindel: accurate genotype calling of insertions and deletions from low coverage population sequence reads</article-title>
        <source>PLoS One</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>11</issue>
        <fpage>e113324</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0113324</pub-id>
        <pub-id pub-id-type="pmid">25423315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">NGS Sequence Simulator. <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/simulateseq/files/0.2.2">https://sourceforge.net/projects/simulateseq/files/0.2.2</ext-link>. Accessed 17 Sept 2018.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thorvaldsdóttir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Robinson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Mesirov</surname>
            <given-names>JP</given-names>
          </name>
        </person-group>
        <article-title>Integrative genomics viewer (IGV): high-performance genomics data visualization and exploration</article-title>
        <source>Brief Bioinform</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>2</issue>
        <fpage>178</fpage>
        <lpage>192</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs017</pub-id>
        <pub-id pub-id-type="pmid">22517427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Pysam. <ext-link ext-link-type="uri" xlink:href="https://github.com/pysam-developers/pysam/releases/tag/v0.13.0.%20Accessed%2017%20Sept%202018">https://github.com/pysam-developers/pysam/releases/tag/v0.13.0. Accessed 17 Sept 2018</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7035665</article-id>
    <article-id pub-id-type="pmid">32085724</article-id>
    <article-id pub-id-type="publisher-id">3410</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-020-3410-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>FastMM: an efficient toolbox for personalized constraint-based metabolic modeling</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Gong-Hua</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dai</surname>
          <given-names>Shaoxing</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Han</surname>
          <given-names>Feifei</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Wenxing</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Huang</surname>
          <given-names>Jingfei</given-names>
        </name>
        <address>
          <email>huangjf@mail.kiz.ac.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Xiao</surname>
          <given-names>Wenzhong</given-names>
        </name>
        <address>
          <email>wenzhong.xiao@mgh.harvard.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.9227.e</institution-id><institution-id institution-id-type="ISNI">0000000119573309</institution-id><institution>State Key Laboratory of Genetic Resources and Evolution, Kunming Institute of Zoology, </institution><institution>Chinese Academy of Sciences, </institution></institution-wrap>Kunming, 650223 Yunnan China </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.32224.35</institution-id><institution-id institution-id-type="ISNI">0000 0004 0386 9924</institution-id><institution>Immue and Metabolic Computational Center, </institution><institution>Massachusetts General Hospital, Harvard Medical School, </institution></institution-wrap>Boston, MA 02114 USA </aff>
      <aff id="Aff3"><label>3</label>Collaborative Innovation Center for Natural Products and Biological Drugs of Yunnan, Kunming, 650223 Yunnan China </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.168010.e</institution-id><institution-id institution-id-type="ISNI">0000000419368956</institution-id><institution>Stanford Genome Technology Center, </institution><institution>Stanford University, </institution></institution-wrap>Palo Alto, CA 94304 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>21</day>
      <month>2</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>2</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>67</elocation-id>
    <history>
      <date date-type="received">
        <day>12</day>
        <month>3</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>2</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2020, corrected publication 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Constraint-based metabolic modeling has been applied to understand metabolism related disease mechanisms, to predict potential new drug targets and anti-metabolites, and to identify biomarkers of complex diseases. Although the state-of-art modeling toolbox, COBRA 3.0, is powerful, it requires substantial computing time conducting flux balance analysis, knockout analysis, and Markov Chain Monte Carlo (MCMC) sampling, which may limit its application in large scale genome-wide analysis.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">Here, we rewrote the underlying code of COBRA 3.0 using C/C++, and developed a toolbox, termed FastMM, to effectively conduct constraint-based metabolic modeling. The results showed that FastMM is 2~400 times faster than COBRA 3.0 in performing flux balance analysis and knockout analysis and returns consistent outputs. When applied to MCMC sampling, FastMM is 8 times faster than COBRA 3.0. FastMM is also faster than some efficient metabolic modeling applications, such as Cobrapy and Fast-SL. In addition, we developed a Matlab/Octave interface for fast metabolic modeling. This interface was fully compatible with COBRA 3.0, enabling users to easily perform complex applications for metabolic modeling. For example, users who do not have deep constraint-based metabolic model knowledge can just type one command in Matlab/Octave to perform personalized metabolic modeling. Users can also use the advance and multiple threading parameters for complex metabolic modeling. Thus, we provided an efficient and user-friendly solution to perform large scale genome-wide metabolic modeling. For example, FastMM can be applied to the modeling of individual cancer metabolic profiles of hundreds to thousands of samples in the Cancer Genome Atlas (TCGA).</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">FastMM is an efficient and user-friendly toolbox for large-scale personalized constraint-based metabolic modeling. It can serve as a complementary and invaluable improvement to the existing functionalities in COBRA 3.0. FastMM is under GPL license and can be freely available at GitHub site: <ext-link ext-link-type="uri" xlink:href="https://github.com/GonghuaLi/FastMM">https://github.com/GonghuaLi/FastMM</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FastMM</kwd>
      <kwd>Constraint-based model</kwd>
      <kwd>Metabolic modeling</kwd>
      <kwd>Metabolism</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par7">Constraint-based metabolic models have been developed for over 30 years [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. As one of the most popular and state-of-art toolbox, COBRA 3.0 [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>] can be used to solve a variety of biomedical problems among which are: 1) understanding metabolism related disease mechanisms by Markov Chain Monte Carlo (MCMC) sampling. 2) inferring new potential drug targets by single or multiple gene knockout analysis [<xref ref-type="bibr" rid="CR5">5</xref>], 3) inferring potential biomarkers by flux variability analysis (FVA) [<xref ref-type="bibr" rid="CR6">6</xref>], 4) designing anti-metabolites by single or multiple metabolite knockout analysis [<xref ref-type="bibr" rid="CR7">7</xref>]. The rapid accumulation of genomic and metabolomic data from disease studies, such as TCGA [<xref ref-type="bibr" rid="CR8">8</xref>], provides an unprecedented opportunity for personalized metabolic modeling of large number of patient samples.</p>
    <p id="Par8">However, three core applications in COBRA 3.0, including MCMC sampling, FVA, and whole genome knockout, require significant time-consuming computing [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR9">9</xref>]. For example, the genome wide double gene knockouts of human metabolic model require computing time of more than one day on a computer sever. Recently, several applications have been developed to efficiently perform metabolic modeling, for example, Cobrapy to perform constraint-based metabolic modeling for python [<xref ref-type="bibr" rid="CR9">9</xref>], fastFVA to implement efficient flux variability analysis [<xref ref-type="bibr" rid="CR10">10</xref>], SL-finder [<xref ref-type="bibr" rid="CR11">11</xref>] and Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>] to conduct genome-wide gene knockout analysis. However, the time cost of metabolic modeling still limits the applications of constraint-based metabolic models to large scale studies.</p>
    <p id="Par9">Here, we developed a toolbox, named FastMM, to implement genome-wide personalized analysis of constraint-based metabolic models. The underlying code of FastMM is written in C/C++ and uses GNU Linear Programming Kit (GLPK) and Gurobi to perform flux balance analysis (FBA) in the constraint-based models. FastMM is 2~400 times faster than COBRA 3.0 and returns consistent results. It serves as a valuable tool for personalized genome-scale metabolic modeling in large disease studies.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Efficient flux variability analysis and knockout analysis</title>
      <p id="Par10">The underlying code of flux variability analysis and knockout analysis in FastMM were written in C/C++, and included six core modules: FBA, FVA, singleGeneKO, doubleGeneKO, singleMetKO, and doubleMetKO, which represent flux balance analysis, flux variability analysis, genome wide single gene knockout analysis, genome wide double gene knockout analysis, genome wide single metabolite knockout analysis, and genome wide double metabolite knockout analysis, respectively. All the six core programs call GLPK or Gurobi solver and use a two-phase primal simplex method to iteratively solve the following standard FBA linear programming (LP):
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\displaystyle \begin{array}{c}\mathit{\max}\ \mathrm{or}\;\mathit{\min}\;{C}^TV\\ {}\mathrm{Subject}\ \mathrm{to}:\mathrm{S}\times \mathrm{V}=0\\ {}\mathrm{Vl}&lt;V&lt;\mathrm{Vu}\end{array}} $$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd><mml:mo mathvariant="italic">max</mml:mo><mml:mspace width="0.25em"/><mml:mtext>or</mml:mtext><mml:mspace width="0.12em"/><mml:mo mathvariant="italic">min</mml:mo><mml:mspace width="0.12em"/><mml:msup><mml:mi>C</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>V</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>Subject to</mml:mtext><mml:mo>:</mml:mo><mml:mi mathvariant="normal">S</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="normal">V</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>Vl</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>V</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>Vu</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2020_3410_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par11">Where S is the stoichiometry matrix with m rows and n columns. m and n are the number of metabolites and reactions, respectively. <italic>C</italic><sup><italic>T</italic></sup> is a vector of the coefficient factors of the objective function(s). In most cases, the vector just contains one non-zero element. V<sub>l</sub> and V<sub>u</sub> is the lower and upper bounds of the flux. For knockout analysis, V<sub>l</sub> and V<sub>u</sub> can be different from wide type when there is a gene or a metabolite knockout.</p>
      <p id="Par12">To perform efficient knockout analysis, we employed an algorithm to reduce the number of LPs, which was similar as Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>]. Firstly, we solved a LP to minimize the sum of reaction fluxes while the wild type objective function (<italic>C</italic><sup><italic>T</italic></sup><italic>V</italic>) was optimized, termed as <italic>f</italic>, this LP can be written as following:
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\displaystyle \begin{array}{c}\kern6em \min \sum \mid \mathrm{V}\mid \\ {}\mathrm{S}\mathrm{ubject}\ \mathrm{to}:\kern2em \mathrm{S}\times \mathrm{V}=0\\ {}\kern7em \mathrm{Vl}&lt;V&lt;\mathrm{Vu}\\ {}\kern6em {\mathrm{C}}^TV=f\end{array}} $$\end{document}</tex-math><mml:math id="M4" display="block"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd><mml:mspace width="6em"/><mml:mo>min</mml:mo><mml:mo>∑</mml:mo><mml:mo>∣</mml:mo><mml:mi mathvariant="normal">V</mml:mi><mml:mo>∣</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>Subject to</mml:mtext><mml:mo>:</mml:mo><mml:mspace width="2em"/><mml:mi mathvariant="normal">S</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="normal">V</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="7em"/><mml:mi>Vl</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>V</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>Vu</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mspace width="6em"/><mml:msup><mml:mi mathvariant="normal">C</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mi>V</mml:mi><mml:mo>=</mml:mo><mml:mi>f</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2020_3410_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par13">Then, we can obtain a small set of non-zero flux reactions set <italic>J</italic> in the meanwhile the wild-type objective function (<italic>C</italic><sup><italic>T</italic></sup><italic>V</italic>) was optimized. In knockout analysis, only the genes (or metabolites), taking participated in set <italic>J</italic> reactions, were used to perform further knock out analysis. Other genes (or metabolites) will be considered as invalid since they do not affect the wild-type objective function (<italic>C</italic><sup><italic>T</italic></sup><italic>V</italic>). For example, when we used this algorithm to the consistent general human metabolic model <italic>consistRecon2_v3</italic> (including 5317 reactions, 2960 metabolites and 2194 genes) [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], and set the “biomass_reaction” as the wild-type objective function, we obtained 245 non-zero flux reactions, and only 251 genes take participant in these reactions. In the case of double gene knockout analysis, the number of total LPs was greatly reduced (from 4.8 × 10<sup>6</sup>) to 63,001.</p>
    </sec>
    <sec id="Sec4">
      <title>Efficient MCMC sampling</title>
      <p id="Par14">The underlying code of MCMC sampling was also written in C/C++, and uses the hit and run MCMC algorithm. The detailed information of this algorithm was well document in COBRA 3.0 [<xref ref-type="bibr" rid="CR4">4</xref>]. Briefly, FastMM firstly generated the initial warming up points using GLPK or Gurobi solver, then implemented hit-and-run sampling based on the initial warm points. Since the sampling procedure requires intensive linear algebraic computation, we used the state-of-art basic linear algebra subprograms (BLAS) library, known as Intel® Math Kernel Library (Intel® MKL), to perform large-scale MCMC sampling. While the underlying BLAS of MKL is multiple thread, the MCMC is also automatically multiple threaded base on the computer CPU. By default, the number of MCMC threading is the half of the number of CPU.</p>
    </sec>
    <sec id="Sec5">
      <title>Matlab/octave interface and multiple threading</title>
      <p id="Par15">The Matlab interface was developed to ensure FastMM is fully compatible with the COBRA 3.0. The multiple threading of FVA and knock out analysis in FastMM was developed using the Matlab parallel computational toolbox. Users can define the number of CPU in each FastMM Matlab interface function.</p>
    </sec>
    <sec id="Sec6">
      <title>Development of “one-command” protocol</title>
      <p id="Par16">To ensure that FastMM could be easily and correctly used by users without a strong metabolic modeling background, we developed a “one-command” protocol. This protocol firstly reconstructed the tissue-specific metabolic model using the gene (or protein) expression information via the Fastcore method [<xref ref-type="bibr" rid="CR14">14</xref>] or mCADRE [<xref ref-type="bibr" rid="CR15">15</xref>]. And then, the flux variability analysis and knockout analysis were conducted by employing the precompiled FastMM core modules. The only input is the gene expression matrix, and all of the results are stored in the. /out subdirectory.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Results</title>
    <sec id="Sec8">
      <title>Overall of FastMM</title>
      <p id="Par17">FastMM project (<ext-link ext-link-type="uri" xlink:href="https://github.com/GonghuaLi/FastMM">https://github.com/GonghuaLi/FastMM</ext-link>) is aimed to provide an efficient, compatible, and user-friendly toolbox/package for personalized constraint-based metabolic modeling. FastMM is under GPL license and located at GitHub in order to allow all developers in this field to contribute. In current version (01/30/2020), FastMM supports three LP solvers (GLPK, Gurobi and Cplex), and contains two layers, including core modules layer and the Matlab interface layer.</p>
      <p id="Par18">The core modules layer of FastMM was written in C/C++, and can be compiled and run in nearly all platforms (such as Windows, Mac-OS, and Linux). This layer contains seven applications: FBA, FVA, singleGeneKO, doubleGeneKO, singleMetKO, doubleMetKO and FastMCMC. FastMM uses small memory (20~30 M for FVA and knockout analysis, and ~ 100 M for MCMC sampling) and can be run on different types of computers, such as PC, Mac, server, and supercomputer.</p>
      <p id="Par19">The Matlab interface layer was developed to make FastMM fully compatible with COBRA 3.0 and user-friendly. This interface layer standardizes input datasets, calls executable files in core modules layer, performs multiple threading and generates outputs.</p>
      <p id="Par20">Taken together, unlike the COBRA toolbox design strategy, FastMM separated the constraint-based metabolic modeling procedures into two layers. All time cost procedures, such as FVA and genome-wide knockout analysis, were written in C/C++, making FastMM efficient. On the contrary, other procedures, including multiple threading, model reconstruction, dataset standardization and input/output generation, were wrapped and written in Matlab/Octave, making FastMM compatible with COBRA 3.0 and user-friendly.</p>
    </sec>
    <sec id="Sec9">
      <title>FastMM is efficient</title>
      <p id="Par21">FastMM is efficient for both flux variability and knockout analysis. We applied FastMM and COBRA 3.0 (using Gurobi solver) to analyze the consistent general human metabolic model Recon 2.03 (5317 reactions and 2960 metabolites) [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] on a CPU of Intel Xeon E5–2640 2.60GHz. COBRA 3.0 has made a large improvement on computational efficiency compared with COBRA 2.0 (Table <xref rid="Tab1" ref-type="table">1</xref>). For flux variability analysis, FastMM and COBRA 3.0 spent 80 s, and 183 s, respectively. For genome wide single gene knockout analysis, FastMM and COBRA 3.0 spent 9 s, and 19 s, respectively. For genome wide double gene knockout analysis, FastMM and COBRA 3.0 spent 260, and 118,570 s, respectively. These results showed that FastMM is 2~400 times faster than COBRA 3.0 (Table <xref rid="Tab1" ref-type="table">1</xref>). The results of FVA and single gene knockout analysis using FastMM are also consistent with the results of COBRA 3.0 (Supplementary Table S1-S3).
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of the time cost of metabolic modeling between FastMM and other software using Gurobi solver</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Applications</th><th>COBRA 3.0</th><th>Cobrapy</th><th>fastFVA</th><th>Fast-SL</th><th>FastMM</th></tr></thead><tbody><tr><td>FVA</td><td><sup>$</sup>183 s</td><td>99 s</td><td><sup>**</sup>85 s</td><td>\</td><td><sup>***</sup>80 s</td></tr><tr><td>SingleGeneKO</td><td>19 s</td><td>15 s</td><td>\</td><td>21 s</td><td>9 s</td></tr><tr><td>DoubleGeneKO</td><td>118,570 s</td><td><sup>*</sup>2324 s</td><td>\</td><td>3161 s</td><td>260 s</td></tr><tr><td>SingleMetKO</td><td>\</td><td>\</td><td>\</td><td>\</td><td>8 s</td></tr><tr><td>DoubleMetKO</td><td>\</td><td>\</td><td>\</td><td>\</td><td>578 s</td></tr><tr><td>MCMC</td><td>2185 s</td><td>\</td><td>\</td><td>\</td><td>254 s</td></tr></tbody></table><table-wrap-foot><p><bold>Note:</bold> The consistent general human metabolic model Recon 2.03 (5317 reaction, 2960 metabolites, and 2194 genes) was used in the analyses. The symbols of “s” represents seconds. MCMC sampling uses the parameter of points of 2000, and steps of 1000. All FastMM applications used one CPU cores, other software used default parameters. \: not available for the corresponding applications. $: COBRA 3.0 used 4 CPU cores to perform flux variability analysis. *: Cobrapy used 4 CPU cores to perform double gene knockout. <sup>**</sup>: fastFVA do not support the Gurobi solver, the time cost (85 s) was calculated using GLPK solver. <sup>***</sup>: FastMM consumed 80 and 107 s to conduct flux variability analysis using Gurobi and GLPK solver, respectively</p></table-wrap-foot></table-wrap></p>
      <p id="Par22">We also compared FastMM with recently applications for FVA and knockout analysis, including Cobrapy, fastFVA, SL-finder and Fast-SL. When performing FVA, FastMM is slightly faster than Cobrapy (Table <xref rid="Tab1" ref-type="table">1</xref>). Since fastFVA does not support the Gurobi solver, we compared FastMM and fastFVA using GLPK solver, FastMM and fastFVA spent 107 and 85 s respectively, indicating FastMM is slightly slower than fastFVA. However, when using Gurobi solver, FastMM spend 80 s.</p>
      <p id="Par23">For the knockout analysis, FastMM is significantly faster than the state-of-art efficient applications, including Cobrapy and Fast-SL (Table <xref rid="Tab1" ref-type="table">1</xref>). For example, in double gene knockout analysis, FastMM is 9 and 12 times faster than Cobrapy and Fast-SL, respectively. SL-finder was an application to find synthetic lethal pairs [<xref ref-type="bibr" rid="CR11">11</xref>]. Due to the platform issue (SL-finder was running on General Algebraic Modeling System), we did not directly compare FastMM with SL-finder. However, it was reported that fast-SL is comparable (or similar) efficient with SL-finder [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par24">Design of novel drugs using metabolite analogues have been reported as a promising strategy for metabolism-based drug design [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR16">16</xref>]. Metabolite analogues could competitively bind the enzyme active sites and result to inhibit the corresponding reactions. FastMM provides an efficient solution to find candidate metabolite analogues, while other toolboxes do not (Supplementary Table S4).</p>
      <p id="Par25">FastMM is also efficient for MCMC sampling. We applied FastMM to perform MCMC sampling in consistent Recon 2.03 with the parameters of 2000 points and the 1000 steps. FastMM spent 254 s, while the COBRA 3.0 spent 2185 s. FastMM was 8 times faster than COBRA 3.0 for MCMC sampling. In addition, the MCMC output of FastMM was correct, and the error was small than 1e-7 (Table S5).</p>
      <p id="Par26">FastMM is flexible. Users not only can define one or multiple objective function(s), but also can define additional constraints. For example, users can use singleGeneKO to find which gene knockout changes the status of secretory metabolites (see the user manual in Supplementary Materials).</p>
    </sec>
    <sec id="Sec10">
      <title>FastMM is easy to use</title>
      <p id="Par27">FastMM can be implemented by “one-command” mode. The only requirement for running FastMM is the parameter file. This file defines the following information: i). the path of the gene expression matrix file, ii) the path of objective function(s) file, iii). the cutoff of gene expression, and iv). number of CPU for performing metabolic modeling. After defined these parameters, the users can just type one command in Matlab/Octave:</p>
      <p id="Par28">&gt; &gt; FastMM</p>
      <p id="Par29">Then, all of the metabolic modeling, including FVA, knockout analysis, and MCMC simulation, will be performed, and the results will be stored in the “./out” subdirectory.</p>
    </sec>
    <sec id="Sec11">
      <title>Example and advanced use</title>
      <p id="Par30">Since FastMM is ultra-efficient and user friendly, we can now perform personalized genome wide metabolic modeling in large scale disease studies. As an example, we applied it to 528 individual samples of lung cancer in TCGA to analyze the individual cancer metabolic profiles. The detailed protocol and results are described in the user manual (<ext-link ext-link-type="uri" xlink:href="https://github.com/GonghuaLi/FastMM/tree/master/doc">https://github.com/GonghuaLi/FastMM/tree/master/doc</ext-link>). Briefly, these can be performed by the following five steps (Fig. <xref rid="Fig1" ref-type="fig">1</xref>):
<fig id="Fig1"><label>Fig. 1</label><caption><p>Flowchart of personalized genome-scale knockout analysis of constraint-based metabolic models by FastMM. Shown in gray boxes are the steps of the procedure followed by, in white boxed, the names of the modules of FastMM</p></caption><graphic xlink:href="12859_2020_3410_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par31">i) Model reconstruction. Many methods can be used to reconstruct tissue specific metabolic model, such as MBA [<xref ref-type="bibr" rid="CR17">17</xref>] and fastcore [<xref ref-type="bibr" rid="CR14">14</xref>]. In this study, we used fastcore, since it balances between the time cost of computing and accuracy. In this study, we used one of FastMM matlab function, name “reconstruction_by_fastcore.m”, and obtained 528 individual TCGA lung cancer models. There are 58 normal samples and 470 lung cancer samples. In this procedure, we used the cutoff of RESM as 75, because RESM is about 25 times larger than RPKM [<xref ref-type="bibr" rid="CR18">18</xref>], where RPKM &gt; 3 was consider as expressed or highly expressed [<xref ref-type="bibr" rid="CR19">19</xref>]. Actually, there are about 10,000~12,000 genes with the RESM &gt; 75, which is consistent with Ramskold’s result [<xref ref-type="bibr" rid="CR20">20</xref>]. The reconstruction can be implemented using FastMM:</p>
      <p id="Par32">&gt; &gt; <italic>rxnsmatrix = reconstruction_by_fastcore(consmodel, expr, 75)</italic></p>
      <p id="Par33">Where the Matlab input is the consistent cobra model(consistent recon 2 [<xref ref-type="bibr" rid="CR14">14</xref>]), the gene expression matrix and the gene expression cutoff. The output is the constructed model with the binary format m × n matrix. m is the number of reactions in consistent input cobra model, n is the number of samples (<italic>n</italic> = 528 in this case).</p>
      <p id="Par34">ii) Genome wide single and double gene knockout analysis to identify individual lethal and synergistic lethal genes. Because the program “doubleGeneKO” contains both single and double gene knockout results, we can implement single and double gene knockout analysis by the following Matlab interface function using 8 threading:</p>
      <p id="Par35">
        <italic>&gt; &gt; GeneKOout = FastMM_doubleGeneKO_multi(consmodel, rxnsmatrix, 8)</italic>
      </p>
      <p id="Par36">The results suggested that PEPD, SLC15A1, and SLC5A3 were candidates for individual lethal genes specific to lung cancer, and pairs of CBS-SLC7A11, CBS-SLC3A2, CMPK1-PTDSS1, CMPK1-PLD2 were candidate synergistic lethal genes specific in the tumors. GUK1 is a target for a number of cancer chemotherapeutic agents [<xref ref-type="bibr" rid="CR21">21</xref>]; however among the 528 TCGA samples, while deletions of GUK1 was lethal in 93% of the normal controls, it was not lethal in 71% of the lung cancers.</p>
      <p id="Par37">iii) Large scale FVA to infer cancer-specific secretory metabolites. Identifying the cancer-specific secretory metabolites could be help to understand the cancer environment mechanism and environment-based drug design and can be implemented by flux variability analysis. In FastMM, we can perform multiple threading FVA by the following function (eg, using 8 CPU):</p>
      <p id="Par38">
        <italic>&gt; &gt; [fluxmin,fluxmax] = FastMM_FVA_multi(consmodel,rxnsmatrix,8)</italic>
      </p>
      <p id="Par39">The results suggested that 16 metabolites were specifically secreted in the tumors of lung cancer (5%~ 19%).</p>
      <p id="Par40">iv) Genome-wide gene knockout analysis to identify genes that affect cancer cell secretion. After the identification of the cancer-specific secretory metabolites, we need to know which genes affect the secretion of these metabolite. This procedure could be performed by gene knock out analysis using the user defined objective functions. Here is the Matlab interface function (using 8 threading):</p>
      <p id="Par41">&gt; &gt; <italic>Out = FastMM_singleGeneKO_multi(consmodel,rxnsmatrix,8,’-f secret_rxns.txt’)</italic></p>
      <p id="Par42">Where “secret_rxns.txt” is the user-defined objective function file, containing 55 exchange reactions from last step. The result indicated that 97 genes would be essential for metabolite secretion only in tumor samples. Knockout of these genes, such as SLC35D1 and UGCG, would not directly affect the cancer cell growth, but could alter the micro-environment of cancer cells.</p>
      <p id="Par43">v) Genome wide single and double metabolite knockout analysis to predict lethal and synergistic lethal metabolites. Anti-metabolite drug design is one of the promise anti-cancer strategy [<xref ref-type="bibr" rid="CR7">7</xref>]. Identifying which metabolite is essential for cancer growth but not affect the normal cells could provide novel anti-cancer metabolite targets [<xref ref-type="bibr" rid="CR7">7</xref>]. This procedure can be performed by metabolic knockout analysis. Using FastMM, we can just type one command in the Matlab (using 8 threading):</p>
      <p id="Par44">&gt; &gt; metout = FastMM_doubleMetKO_multi(model, rxnsmatrix,8)</p>
      <p id="Par45">The result suggested that the pair of AMP and 5-Phosphoribosyl diphosphate (PRPP) is synergistic lethal in 93% of the controls but only 29% tumors, suggesting that alternative metabolic pathways are activated in the majority of the tumor samples (71%).</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Discussion</title>
    <p id="Par46">In the past decades, along with the high throughput of “omic” technologies developed, large-scale biochemical and clinical datasets have been available and give us the opportunity to find novel metabolic mechanisms and novel metabolic targets in individual patients. Several toolbox, such as COBRA toolbox [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR22">22</xref>], RAVEN [<xref ref-type="bibr" rid="CR23">23</xref>], have been developed to perform metabolic modeling to study metabolic dysfunction in various diseases [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR24">24</xref>], however, the computational time still limits the large scale application.</p>
    <p id="Par47">In this study, we developed a novel toolbox to efficiently perform metabolic modeling. FastMM is 3~400 times faster than COBRA 3.0 in flux variability analysis and knockout analysis and returned the consistent results. FastMM also had 8 times faster than COBRA in MCMC sampling. FastMM is also faster than the most of other efficient metabolic modeling applications, such as Cobrapy [<xref ref-type="bibr" rid="CR9">9</xref>] and Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>]. Thus, FastMM covered the computation time limitation and can be used in large-scale metabolic modeling.</p>
    <p id="Par48">For flux variability analysis, the state-of-art efficient software is fastFVA [<xref ref-type="bibr" rid="CR10">10</xref>]. Similar as FastMM, the underlying code of fastFVA was also written in C/C++, thus fastFVA and FastMM FVA have similar efficient. FastMM FVA supports both Gurobi and Cplex solvers while fastFVA only supports cplex solver.</p>
    <p id="Par49">For knock out analysis, FastMM is significantly faster than nearly all state-of-art efficient software. For example, in the case of double gene knockout analysis, FastMM is 8 and 12 times faster than Cobrapy [<xref ref-type="bibr" rid="CR9">9</xref>] and Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>]. The ultra-efficiency of FastMM come from the employment of a algorithm similar to Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>] to significantly reduce the number of total LPs. Unlike SL-finder [<xref ref-type="bibr" rid="CR11">11</xref>] and Fast-SL [<xref ref-type="bibr" rid="CR12">12</xref>], the current version (01/31/2020) of FastMM do not support the triple and other high level knockout analysis. Besides gene knockout analysis, FastMM also provides efficient solution for metabolite knockout analysis, which would help to accelerate the anti-metabolite drug design [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
    <p id="Par50">We also wrote a large number of Matlab interface functions to make sure FastMM can fully compatible with the state-of-art metabolic modeling toolbox COBRA 3.0. These Matlab functions not only provide a “one-command” metabolic modeling solution for little background users, but also provide advanced and multiple threading solution for users with strong programming background users.</p>
    <p id="Par51">There is still a limitation in FastMM. In this study, we used the Fasctcore [<xref ref-type="bibr" rid="CR14">14</xref>] as the example. Unfortunately, nearly all published methods, such as MBA [<xref ref-type="bibr" rid="CR17">17</xref>], Fastcore [<xref ref-type="bibr" rid="CR14">14</xref>], GIMME [<xref ref-type="bibr" rid="CR25">25</xref>], just use the Presence/Absence call of gene expression or protein abundance to perform tissue specific metabolic modeling [<xref ref-type="bibr" rid="CR26">26</xref>]. Most of quantitative expression information was lost in reconstruction and would result in fail to identify the metabolic changes. Besides, in recent FastMM release, only Matlab interface was developed, this would be not convenience for the users without Matlab license. We would develop python interface of FastMM in next release.</p>
  </sec>
  <sec id="Sec13">
    <title>Conclusion</title>
    <p id="Par52">FastMM is an efficient toolbox for metabolic modeling in large scale disease studies. FastMM enables the identification of personalized targets of genes and metabolites as new candidates for therapy or biomarkers, by personalized metabolic modeling on each of the hundreds to thousands of samples in a disease study.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p id="Par53">Project name: FastMM</p>
    <p id="Par54">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/GonghuaLi/FastMM">https://github.com/GonghuaLi/FastMM</ext-link></p>
    <p id="Par55">Operating system(s): Platform independent</p>
    <p id="Par56">Programming language: MATLAB and C</p>
    <p id="Par57">Other requirements: COBRA toolbox, Gurobi 5.0 or higer, and Cplex 12.0 or higher</p>
    <p id="Par58">License: GNU AGPLv3</p>
    <p id="Par59">Any restrictions to use by non-academics: license needed</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2020_3410_MOESM1_ESM.xlsx">
            <caption>
              <p><bold>Additional file 1 Table S1.</bold> Comparison of the time cost of metabolic modeling between FastMM and other software using Gurobi solver.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2020_3410_MOESM2_ESM.xlsx">
            <caption>
              <p><bold>Additional file 2 Table S2.</bold> Single gene knockout results between COBRA 3.0 and FastMM.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2020_3410_MOESM3_ESM.xlsx">
            <caption>
              <p><bold>Additional file 3 Table S3.</bold> FVA results between COBRA 3.0 and FASTMM.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12859_2020_3410_MOESM4_ESM.xlsx">
            <caption>
              <p><bold>Additional file 4 Table S4.</bold> Single knockout results of 2960 metabolites in FastMM.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="12859_2020_3410_MOESM5_ESM.xlsx">
            <caption>
              <p><bold>Additional file 5 Table S5.</bold> Maximum MCMC error using FastMM and COBRA 3.0.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>FBA</term>
        <def>
          <p id="Par4">flux balance analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>FVA</term>
        <def>
          <p id="Par5">flux variability analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>MCMC</term>
        <def>
          <p id="Par6">Markov Chain Monte Carlo</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>The original version of this article was revised: the co-author’s name has been updated.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-020-3410-4.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>GHL, WZX and JFH designed the Software. GHL wrote the software and the manuscript. WZX, SXD, WXL and FFH read and edited the manuscript. GHL, SXD, WXL and FFH checked and debugged the software.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the grants from National Basic Research Program of China (2013CB835100), National Natural Science Foundation of China (31401137), and grants from National Institutes of Health (P50-GM021700, P01-HG00205), and Shriners Research Grant (85500-BOS). The funding bodies had no role in the design of the study, collection, analysis and interpretation of data, or in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The software and related data can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/GonghuaLi/FastMM">https://github.com/GonghuaLi/FastMM</ext-link>. The datasets supporting the conclusions of this article are included within article (and its Additional files).</p>
  </notes>
  <notes id="FPar1">
    <title>Ethics approval and consent to participate</title>
    <p id="Par60">Not applicable.</p>
  </notes>
  <notes id="FPar2">
    <title>Consent for publication</title>
    <p id="Par61">Not applicable.</p>
  </notes>
  <notes id="FPar3" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par62">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bordbar</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Monk</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <article-title>Constraint-based models predict metabolic and associated cellular functions</article-title>
        <source>Nat Rev Genet</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>2</issue>
        <fpage>107</fpage>
        <lpage>120</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3643</pub-id>
        <pub-id pub-id-type="pmid">24430943</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Novere</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Quantitative and logic modelling of molecular and gene networks</article-title>
        <source>Nat Rev Genet</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>3</issue>
        <fpage>146</fpage>
        <lpage>158</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3885</pub-id>
        <pub-id pub-id-type="pmid">25645874</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schellenberger</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Que</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>RMT</given-names>
          </name>
          <name>
            <surname>Thiele</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Orth</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Bordbar</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Rahmanian</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Quantitative prediction of cellular metabolism with constraint-based models: the COBRA toolbox v2.0</article-title>
        <source>Nat Protoc</source>
        <year>2011</year>
        <volume>6</volume>
        <issue>9</issue>
        <fpage>1290</fpage>
        <lpage>1307</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2011.308</pub-id>
        <pub-id pub-id-type="pmid">21886097</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heirendt</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Arreckx</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pfau</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mendoza</surname>
            <given-names>SN</given-names>
          </name>
          <name>
            <surname>Richelle</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Heinken</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Haraldsdottir</surname>
            <given-names>HS</given-names>
          </name>
          <name>
            <surname>Wachowiak</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Vlasov</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Creation and analysis of biochemical constraint-based models using the COBRA toolbox v.3.0</article-title>
        <source>Nat Protoc</source>
        <year>2019</year>
        <volume>14</volume>
        <issue>3</issue>
        <fpage>639</fpage>
        <lpage>702</lpage>
        <pub-id pub-id-type="doi">10.1038/s41596-018-0098-2</pub-id>
        <pub-id pub-id-type="pmid">30787451</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Folger O, Jerby L, Frezza C, Gottlieb E, Ruppin E, Shlomi T. Predicting selective drug targets in cancer through metabolic networks. Mol Syst Biol. 2011;7.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Shlomi T, Cabili MN, Ruppin E. Predicting metabolic biomarkers of human inborn errors of metabolism. Mol Syst Biol. 2009;5.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Agren</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mardinoglu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Asplund</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kampf</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Uhlen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Identification of anticancer drugs for hepatocellular carcinoma through personalized genome-scale metabolic modeling</article-title>
        <source>Mol Syst Biol</source>
        <year>2014</year>
        <volume>10</volume>
        <fpage>721</fpage>
        <pub-id pub-id-type="doi">10.1002/msb.145122</pub-id>
        <pub-id pub-id-type="pmid">24646661</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weinstein</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Collisson</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Mills</surname>
            <given-names>GB</given-names>
          </name>
          <name>
            <surname>Shaw</surname>
            <given-names>KRM</given-names>
          </name>
          <name>
            <surname>Ozenberger</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Ellrott</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shmulevich</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Sander</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stuart</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Network</surname>
            <given-names>CGAR</given-names>
          </name>
        </person-group>
        <article-title>The Cancer genome atlas pan-Cancer analysis project</article-title>
        <source>Nat Genet</source>
        <year>2013</year>
        <volume>45</volume>
        <issue>10</issue>
        <fpage>1113</fpage>
        <lpage>1120</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.2764</pub-id>
        <pub-id pub-id-type="pmid">24071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lerman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Hyduke</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>COBRApy: COnstraints-based reconstruction and analysis for Python</article-title>
        <source>BMC Syst Biol</source>
        <year>2013</year>
        <volume>7</volume>
        <fpage>74</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-7-74</pub-id>
        <pub-id pub-id-type="pmid">23927696</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gudmundsson</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Thiele</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Computationally efficient flux variability analysis</article-title>
        <source>BMC bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>489</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-489</pub-id>
        <pub-id pub-id-type="pmid">20920235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Suthers PF, Zomorrodi A, Maranas CD. Genome-scale gene/reaction essentiality and synthetic lethality analysis. Mol Syst Biol. 2009;5.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pratapa</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Balachandran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Raman</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Fast-SL: an efficient algorithm to identify synthetic lethal sets in metabolic networks</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>20</issue>
        <fpage>3299</fpage>
        <lpage>3305</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv352</pub-id>
        <pub-id pub-id-type="pmid">26085504</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thiele</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Swainston</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>RMT</given-names>
          </name>
          <name>
            <surname>Hoppe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sahoo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Aurich</surname>
            <given-names>MK</given-names>
          </name>
          <name>
            <surname>Haraldsdottir</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Mo</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Rolfsson</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Stobbe</surname>
            <given-names>MD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A community-driven global reconstruction of human metabolism</article-title>
        <source>Nat Biotechnol</source>
        <year>2013</year>
        <volume>31</volume>
        <issue>5</issue>
        <fpage>419</fpage>
        <lpage>41+</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.2488</pub-id>
        <pub-id pub-id-type="pmid">23455439</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Vlassis N, Pacheco MP, Sauter T. Fast Reconstruction of Compact Context-Specific Metabolic Network Models. Plos Comput Biol. 2014;10:e1003424.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Price</surname>
            <given-names>ND</given-names>
          </name>
        </person-group>
        <article-title>Reconstruction of genome-scale metabolic models for 126 human tissues using mCADRE</article-title>
        <source>BMC Syst Biol</source>
        <year>2012</year>
        <volume>6</volume>
        <fpage>153</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-6-153</pub-id>
        <pub-id pub-id-type="pmid">23234303</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baughman</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Grutters</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>New treatment strategies for pulmonary sarcoidosis: antimetabolites, biological drugs, and other treatment approaches</article-title>
        <source>Lancet Resp Med</source>
        <year>2015</year>
        <volume>3</volume>
        <issue>10</issue>
        <fpage>813</fpage>
        <lpage>822</lpage>
        <pub-id pub-id-type="doi">10.1016/S2213-2600(15)00199-X</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Jerby L, Shlomi T, Ruppin E. Computational reconstruction of tissue-specific metabolic models: application to human liver metabolism. Mol Syst Biol. 2010;6.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Guo Y, Sheng QH, Li J, Ye F, Samuels DC, Shyr Y. Large Scale Comparison of Gene Expression Levels by Microarrays and RNAseq Using TCGA Data. Plos One. 2013;8(8):e71462.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Mccue</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Schaeffer</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Wold</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Mapping and quantifying mammalian transcriptomes by RNA-Seq</article-title>
        <source>Nat Methods</source>
        <year>2008</year>
        <volume>5</volume>
        <issue>7</issue>
        <fpage>621</fpage>
        <lpage>628</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1226</pub-id>
        <pub-id pub-id-type="pmid">18516045</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Ramskold D, Wang ET, Burge CB, Sandberg R. An Abundance of Ubiquitously Expressed Genes Revealed by Tissue Transcriptome Sequence Data. Plos Comput Biol. 2009;5(12):e1000598.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Overington</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Al-Lazikani</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hopkins</surname>
            <given-names>AL</given-names>
          </name>
        </person-group>
        <article-title>Opinion - how many drug targets are there?</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2006</year>
        <volume>5</volume>
        <issue>12</issue>
        <fpage>993</fpage>
        <lpage>996</lpage>
        <pub-id pub-id-type="doi">10.1038/nrd2199</pub-id>
        <pub-id pub-id-type="pmid">17139284</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Becker</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Mo</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Hannum</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Herrgard</surname>
            <given-names>MJ</given-names>
          </name>
        </person-group>
        <article-title>Quantitative prediction of cellular metabolism with constraint-based models: the COBRA toolbox</article-title>
        <source>Nat Protoc</source>
        <year>2007</year>
        <volume>2</volume>
        <issue>3</issue>
        <fpage>727</fpage>
        <lpage>738</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2007.99</pub-id>
        <pub-id pub-id-type="pmid">17406635</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Agren R, Liu LM, Shoaie S, Vongsangnak W, Nookaew I, Nielsen J. The RAVEN Toolbox and Its Use for Generating a Genome-scale Metabolic Model for Penicillium chrysogenum. Plos Comput Biol. 2013;9:e1002980.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Mardinoglu A, Agren R, Kampf C, Asplund A, Uhlen M, Nielsen J. Genome-scale metabolic modelling of hepatocytes reveals serine deficiency in patients with non-alcoholic fatty liver disease. Nat Commun. 2014;5:3083.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Becker SA, Palsson BO. Context-specific metabolic networks are consistent with experiments. Plos Comput Biol. 2008;4:e1000082.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O'Brien</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Monk</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <article-title>Using genome-scale models to predict biological capabilities</article-title>
        <source>Cell</source>
        <year>2015</year>
        <volume>161</volume>
        <issue>5</issue>
        <fpage>971</fpage>
        <lpage>987</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2015.05.019</pub-id>
        <pub-id pub-id-type="pmid">26000478</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

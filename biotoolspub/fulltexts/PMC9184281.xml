<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nat Methods</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nat Methods</journal-id>
    <journal-title-group>
      <journal-title>Nature Methods</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1548-7091</issn>
    <issn pub-type="epub">1548-7105</issn>
    <publisher>
      <publisher-name>Nature Publishing Group US</publisher-name>
      <publisher-loc>New York</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9184281</article-id>
    <article-id pub-id-type="pmid">35637307</article-id>
    <article-id pub-id-type="publisher-id">1488</article-id>
    <article-id pub-id-type="doi">10.1038/s41592-022-01488-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Brief Communication</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ColabFold: making protein folding accessible to all</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8637-6719</contrib-id>
        <name>
          <surname>Mirdita</surname>
          <given-names>Milot</given-names>
        </name>
        <address>
          <email>milot.mirdita@mpinat.mpg.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3957-412X</contrib-id>
        <name>
          <surname>Schütze</surname>
          <given-names>Konstantin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0448-9790</contrib-id>
        <name>
          <surname>Moriwaki</surname>
          <given-names>Yoshitaka</given-names>
        </name>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3153-2363</contrib-id>
        <name>
          <surname>Heo</surname>
          <given-names>Lim</given-names>
        </name>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2774-2744</contrib-id>
        <name>
          <surname>Ovchinnikov</surname>
          <given-names>Sergey</given-names>
        </name>
        <address>
          <email>so@fas.harvard.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff6">6</xref>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8781-9753</contrib-id>
        <name>
          <surname>Steinegger</surname>
          <given-names>Martin</given-names>
        </name>
        <address>
          <email>martin.steinegger@snu.ac.kr</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff8">8</xref>
        <xref ref-type="aff" rid="Aff9">9</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.4372.2</institution-id><institution-id institution-id-type="ISNI">0000 0001 2105 1091</institution-id><institution>Quantitative and Computational Biology, </institution><institution>Max Planck Institute for Multidisciplinary Sciences, </institution></institution-wrap>Göttingen, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.31501.36</institution-id><institution-id institution-id-type="ISNI">0000 0004 0470 5905</institution-id><institution>School of Biological Sciences, </institution><institution>Seoul National University, </institution></institution-wrap>Seoul, South Korea </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.26999.3d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2151 536X</institution-id><institution>Department of Biotechnology, Graduate School of Agricultural and Life Sciences, </institution><institution>The University of Tokyo, </institution></institution-wrap>Tokyo, Japan </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.26999.3d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2151 536X</institution-id><institution>Collaborative Research Institute for Innovative Microbiology, </institution><institution>The University of Tokyo, </institution></institution-wrap>Tokyo, Japan </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.17088.36</institution-id><institution-id institution-id-type="ISNI">0000 0001 2150 1785</institution-id><institution>Department of Biochemistry and Molecular Biology, </institution><institution>Michigan State University, </institution></institution-wrap>East Lansing, MI USA </aff>
      <aff id="Aff6"><label>6</label><institution-wrap><institution-id institution-id-type="GRID">grid.38142.3c</institution-id><institution-id institution-id-type="ISNI">000000041936754X</institution-id><institution>JHDSF Program, </institution><institution>Harvard University, </institution></institution-wrap>Cambridge, MA USA </aff>
      <aff id="Aff7"><label>7</label><institution-wrap><institution-id institution-id-type="GRID">grid.38142.3c</institution-id><institution-id institution-id-type="ISNI">000000041936754X</institution-id><institution>FAS Division of Science, </institution><institution>Harvard University, </institution></institution-wrap>Cambridge, MA USA </aff>
      <aff id="Aff8"><label>8</label><institution-wrap><institution-id institution-id-type="GRID">grid.31501.36</institution-id><institution-id institution-id-type="ISNI">0000 0004 0470 5905</institution-id><institution>Artificial Intelligence Institute, </institution><institution>Seoul National University, </institution></institution-wrap>Seoul, South Korea </aff>
      <aff id="Aff9"><label>9</label><institution-wrap><institution-id institution-id-type="GRID">grid.31501.36</institution-id><institution-id institution-id-type="ISNI">0000 0004 0470 5905</institution-id><institution>Institute of Molecular Biology and Genetics, </institution><institution>Seoul National University, </institution></institution-wrap>Seoul, South Korea </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>30</day>
      <month>5</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>30</day>
      <month>5</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <year>2022</year>
    </pub-date>
    <volume>19</volume>
    <issue>6</issue>
    <fpage>679</fpage>
    <lpage>682</lpage>
    <history>
      <date date-type="received">
        <day>29</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>4</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">ColabFold offers accelerated prediction of protein structures and complexes by combining the fast homology search of MMseqs2 with AlphaFold2 or RoseTTAFold. ColabFold’s 40−60-fold faster search and optimized model utilization enables prediction of close to 1,000 structures per day on a server with one graphics processing unit. Coupled with Google Colaboratory, ColabFold becomes a free and accessible platform for protein folding. ColabFold is open-source software available at <ext-link ext-link-type="uri" xlink:href="https://github.com/sokrypton/ColabFold">https://github.com/sokrypton/ColabFold</ext-link> and its novel environmental databases are available at <ext-link ext-link-type="uri" xlink:href="https://colabfold.mmseqs.com">https://colabfold.mmseqs.com</ext-link>.</p>
    </abstract>
    <abstract id="Abs2" abstract-type="web-summary">
      <p id="Par2">ColabFold is a free and accessible platform for protein folding that provides accelerated prediction of protein structures and complexes using AlphaFold2 or RoseTTAFold.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Protein structure predictions</kwd>
      <kwd>Computational models</kwd>
      <kwd>Software</kwd>
      <kwd>Protein databases</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/501100002347</institution-id>
            <institution>Bundesministerium für Bildung und Forschung (Federal Ministry of Education and Research)</institution>
          </institution-wrap>
        </funding-source>
        <award-id>horizontal4meta</award-id>
        <principal-award-recipient>
          <name>
            <surname>Mirdita</surname>
            <given-names>Milot</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/100009619</institution-id>
            <institution>Japan Agency for Medical Research and Development (AMED)</institution>
          </institution-wrap>
        </funding-source>
        <award-id>JP21am0101107</award-id>
        <principal-award-recipient>
          <name>
            <surname>Moriwaki</surname>
            <given-names>Yoshitaka</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/100000001</institution-id>
            <institution>National Science Foundation (NSF)</institution>
          </institution-wrap>
        </funding-source>
        <award-id>MCB2032259</award-id>
        <principal-award-recipient>
          <name>
            <surname>Ovchinnikov</surname>
            <given-names>Sergey</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>NIH Grants DP5OD026389 NIH Grants R21AI156595 Moore–Simons 735929LPI</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/501100003725</institution-id>
            <institution>National Research Foundation of Korea (NRF)</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2019R1A6A1A10073437,2020M3A9G7103933,2021R1C1C102065,2021M3A9I4021220</award-id>
        <principal-award-recipient>
          <name>
            <surname>Steinegger</surname>
            <given-names>Martin</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/501100002551</institution-id>
            <institution>Seoul National University</institution>
          </institution-wrap>
        </funding-source>
        <award-id>New Faculty Startup Fund</award-id>
        <award-id>Creative-Pioneering Researchers Program</award-id>
        <principal-award-recipient>
          <name>
            <surname>Steinegger</surname>
            <given-names>Martin</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s), under exclusive licence to Springer Nature America, Inc. 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Main</title>
    <p id="Par3">Predicting the three-dimensional (3D) structure of a protein from its sequence alone remains an unsolved problem. However, by exploiting the information in multiple sequence alignments (MSAs) of related proteins as the raw input features for end-to-end training, AlphaFold2 (ref. <sup><xref ref-type="bibr" rid="CR1">1</xref></sup>) was able to predict the 3D atomic coordinates of folded protein structures at a median global distance test total score (GDT_TS) of 92.4% in the latest round of the protein folding competition by the international community, CASP14 (Critical Assessment of protein Structure Prediction, round 14) (ref. <sup><xref ref-type="bibr" rid="CR2">2</xref></sup>). The accuracy of many of the predicted structures was within the error margin of experimental structure determination methods. Many ideas of AlphaFold2 were independently reproduced and implemented in RoseTTAFold (ref. <sup><xref ref-type="bibr" rid="CR3">3</xref></sup>). In addition to predictions for single chains, RoseTTAFold and, later, AlphaFold, were also shown to generalize to protein complexes. Evans et al.<sup><xref ref-type="bibr" rid="CR4">4</xref></sup> have since released AlphaFold-multimer, a refined version of AlphaFold2 for the prediction of protein complexes. Thus, two highly accurate open-source prediction methods for single chains and one for protein complexes are now publicly available.</p>
    <p id="Par4">To leverage the power of these methods, researchers require powerful computing capabilities. First, to build diverse MSAs, large collections of protein sequences from public reference<sup><xref ref-type="bibr" rid="CR5">5</xref></sup> and environmental<sup><xref ref-type="bibr" rid="CR1">1</xref>,<xref ref-type="bibr" rid="CR6">6</xref></sup> databases are searched using the most sensitive homology detection methods, HMMer<sup><xref ref-type="bibr" rid="CR7">7</xref></sup> and HHblits<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>, both of which use profile hidden Markov models (HMMs). These environmental databases contain billions of proteins extracted from metagenomic and transcriptomic experiments, which often complement databases dominated by isolated genomes. Due to their large size, searches can take up to hours for a single protein while requiring more than 2 TB of storage space alone. Second, to execute the deep neural networks, graphics processing units (GPUs) with a large amount of GPU RAM (random access memory) are required even for relatively common protein sizes of ~1,000 residues. For these, however, the MSA generation dominates the overall run time.</p>
    <p id="Par5">To enable researchers without these resources to use AlphaFold2, independent solutions based on Google Colaboratory were developed. Colaboratory is a proprietary version of Jupyter Notebook hosted by Google. It is accessible for free to logged-in users and includes access to powerful GPUs. Concurrently, Tunyasuvunakool et al.<sup><xref ref-type="bibr" rid="CR9">9</xref></sup> developed an AlphaFold2 Jupyter Notebook for Google Colaboratory (referred to as AlphaFold-Colab), for which the input MSA is built by searching with HMMer against the UniProt Reference Clusters (UniRef90) and an eightfold-reduced environmental database. This results in less accurate predictions while still requiring long search times.</p>
    <p id="Par6">Here, we present ColabFold, a fast and easy-to-use software for the prediction of protein structures and homo- and heteromer complexes, for use as a Jupyter Notebook inside Google Colaboratory, on researchers’ local computers as a notebook or through a command line interface. ColabFold speeds up single predictions by replacing AlphaFold2’s homology search with the 40–60-fold faster MMseqs2 (Many-against-Many sequence searching) (refs. <sup><xref ref-type="bibr" rid="CR10">10</xref>,<xref ref-type="bibr" rid="CR11">11</xref></sup>), and speeds up batch predictions by ~90-fold by avoiding recompilation and adding an early stop criterion. We show that ColabFold outperforms AlphaFold-Colab and matches AlphaFold2 on CASP14 targets and also matches AlphaFold-multimer on the ClusPro<sup><xref ref-type="bibr" rid="CR4">4</xref>,<xref ref-type="bibr" rid="CR12">12</xref></sup> dataset in prediction quality.</p>
    <p id="Par7">ColabFold (Fig. <xref rid="Fig1" ref-type="fig">1</xref>) consists of three parts. The first is an MMseqs2-based homology search server to build diverse MSAs and to find templates. The server efficiently aligns input sequence(s) against the databanks UniRef100, PDB70 and an environmental sequence set. The second part is a Python library that communicates with the MMseqs2 search server, prepares the input features for structure inference (single chains or complexes), and visualizes the results. This library also implements a command line interface. The last part consists of the Jupyter notebooks for basic, advanced and batch use (Methods <xref rid="Sec4" ref-type="sec">2.1.1</xref>) using the Python library.<fig id="Fig1"><label>Fig. 1</label><caption><title>Schematic diagram of ColabFold.</title><p><bold>a</bold>,<bold>b</bold>, ColabFold has a web and a command line interface (<bold>a</bold>) that send FASTA input sequence(s) to an MMseqs2 server (<bold>b</bold>) searching two databases, UniRef100 and a database of environmental sequences, with three profile-search iterations each. The second database is searched using a sequence profile generated from the UniRef100 search as input. The server generates two MSAs in A3M format containing all detected sequences. <bold>c</bold>, For predictions of single structures (i) we filter both A3Ms using a diversity-aware filter and return this to be provided as the MSA input feature to the AlphaFold2 models. For predictions of complexes (ii) we pair the top hits within the same species to resolve the inter-chain contacts and additionally add two unpaired MSAs (same as i) to guide the structure prediction. Single chain predictions are ranked by pLDDT and complexes by predicted TM-score. <bold>d</bold>, To help researchers judge the prediction quality we visualize MSA depth and diversity and show the AlphaFold2 confidence measures (pLDDT and PAE).</p></caption><graphic xlink:href="41592_2022_1488_Fig1_HTML" id="d32e511"/></fig></p>
    <p id="Par8">In ColabFold we replace the sensitive search methods HMMer and HHblits by MMseqs2. We optimized the MSA generation by MMseqs2 to have the following three properties: MSA generation should be fast; the MSA has to capture diversity well; and it has to be small enough to run on computers with limited RAM. Reducing the memory requirement is especially helpful in Google Colaboratory, where the provided system is selected from a pool with widely differing capabilities. While the first requirement is achieved through the fast MMseqs2 prefilter, for the second and third requirements we developed a search workflow to maximize sensitivity (Methods <xref rid="Sec7" ref-type="sec">2.2.1</xref>) and a new filter that samples the sequence space evenly (Methods <xref rid="Sec8" ref-type="sec">2.2.2</xref> and Supplementary Fig. <xref rid="MOESM1" ref-type="media">1</xref>). Prediction quality depends on the input MSA, however, often an MSA with only a few (~30) sufficiently diverse sequences is enough to produce high-quality predictions (see fig. 5a in ref. <sup><xref ref-type="bibr" rid="CR1">1</xref></sup>).</p>
    <p id="Par9">Additionally, we combined the Big Fantastic Database (BFD) and the MGnify database, which are used in AlphaFold2 by HHblits and HMMer, respectively, into a combined redundancy-reduced version that we refer to as BFD/MGnify (Methods <xref rid="Sec11" ref-type="sec">2.3.1</xref>). The environmental search database presented an opportunity to improve structure predictions of non-bacterial sequences given that, for example, eukaryotic protein diversity is not well represented in the databases BFD and MGnify. Limitations in assembly and gene calling due to complex intron and exon structures result in underrepresentation in reference databases. We therefore extended BFD/MGnify with additional metagenomic protein catalogs containing eukaryotic proteins<sup><xref ref-type="bibr" rid="CR13">13</xref>–<xref ref-type="bibr" rid="CR15">15</xref></sup>, phage catalogs<sup><xref ref-type="bibr" rid="CR16">16</xref>,<xref ref-type="bibr" rid="CR17">17</xref></sup> and an updated version of MetaClust<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>. We refer to this database as ColabFoldDB (Methods <xref rid="Sec12" ref-type="sec">2.3.2</xref>). In Supplementary Fig. <xref rid="MOESM1" ref-type="media">2</xref> we show that ColabFoldDB, in comparison with BFD/MGnify, produces more diverse MSAs for domains in the protein families database (Pfam)<sup><xref ref-type="bibr" rid="CR19">19</xref></sup> with &lt;30 members.</p>
    <p id="Par10">To compare the accuracy of predicted structures we compared AlphaFold2 (default settings with templates), AlphaFold-Colab (no templates), ColabFold-RoseTTAFold-BFD/MGnify, ColabFold-AlphaFold2-BFD/MGnify and ColabFold-AlphaFold2-ColabFoldDB on template modeling scores (TM-scores) for all targets from the CASP14 competition (Fig. <xref rid="Fig2" ref-type="fig">2a</xref>). All three ColabFold modes were executed without templates. We show the targets split by free modeling on the left and the remaining ones on the right, given that we used the free-modeling targets for optimization of search workflow parameters. ColabFold is on average fivefold faster for single predictions than AlphaFold2 and AlphaFold-Colab, when taking both MSA generation (Fig. <xref rid="Fig2" ref-type="fig">2b</xref>) and model inference into account.<fig id="Fig2"><label>Fig. 2</label><caption><title>Comparison of predictions for single chains and complexes.</title><p><bold>a</bold>, Structure prediction comparison of AlphaFold2, AlphaFold-Colab and ColabFold-AlphaFold2 with BFD/MGnify and with the ColabFoldDB, and ColabFold-RoseTTAFold with BFD/MGnify using predictions of 91 domains of 65 CASP14 targets. The 28 domains from the 20 free-modeling (FM) targets are shown first. FM targets were used to optimize MMseqs2 search parameters. Each target was evaluated for each individual domain (in total 91 domains). <bold>b</bold>, MSA generation and model inference times for each CASP14 FM target sorted by protein length (same colors as before). Blue shows MSA run times for ColabFold-AlphaFold2-BFD/MGnify and ColabFold-RoseTTAFold-BFD/MGnify. <bold>c</bold>, Comparison of multimeric prediction modes in ColabFold and AlphaFold-multimer. The ColabFold modes include residue-index modification with models originally trained for single-chain predictions and those for multimeric prediction from AlphaFold-multimer, using DockQ (a quality measure for protein–protein docking models). <bold>d</bold>, Run time of colabfold_batch proteome prediction at three optimization levels: always recompile, default, and stop model/recycle evaluation after first prediction with a pLDDT of ≥85. The yellow dashed line represents an extrapolation on the basis of the 50 AlphaFold2 predictions.</p><p><xref rid="MOESM4" ref-type="media">Source data</xref></p></caption><graphic xlink:href="41592_2022_1488_Fig2_HTML" id="d32e593"/></fig></p>
    <p id="Par11">The mean TM-scores for the free-modeling targets are 0.826, 0.818, 0.79, 0.744 and 0.62 for ColabFold-AlphaFold2-BFD/MGnify, ColabFold-AlphaFold2-ColabFoldDB, AlphaFold2, AlphaFold-Colab and ColabFold-RoseTTAFold-BFD/MGnify, respectively. Over all CASP14 targets (excluding AlphaFold-Colab because it cannot be used as a standalone) the TM-scores are 0.887, 0.886, 0.888 and 0.754 for the respective methods. The prediction of target T1084 can be improved from a TM-score of 0.457 to 0.872 by ColabFold if MMseqs2’s compositional filter is disabled (Supplementary Fig. <xref rid="MOESM1" ref-type="media">3</xref>). Supplementary Table <xref rid="MOESM1" ref-type="media">1</xref> lists the additional targets for which ColabFold differed significantly from AlphaFold2.</p>
    <p id="Par12">AlphaFold2 was initially released without the capability to model protein complexes. However, we found that by combining two sequences with a glycine linker<sup><xref ref-type="bibr" rid="CR20">20</xref></sup> it could often successfully model complexes. Shortly afterwards, Baek<sup><xref ref-type="bibr" rid="CR21">21</xref></sup> found that increasing the model's internal parameter, residue-index (the method that was used in RoseTTAFold), could also be done in AlphaFold2.</p>
    <p id="Par13">For high-quality predictions it was shown that sequences should be provided in paired form to AlphaFold2 (ref. <sup><xref ref-type="bibr" rid="CR22">22</xref></sup>). We implemented a similar pairing procedure (Methods <xref rid="Sec16" ref-type="sec">2.4.2</xref>) and show the prediction capabilities of ColabFold for complexes in Fig. <xref rid="Fig2" ref-type="fig">2c</xref>. ColabFold achieves the highest accuracy in the prediction of complexes on the ClusPro<sup><xref ref-type="bibr" rid="CR4">4</xref>,<xref ref-type="bibr" rid="CR12">12</xref></sup> dataset with the AlphaFold-multimer model, however, some targets performed better using the residue-index mode.</p>
    <p id="Par14">Supplementary Fig. <xref rid="MOESM1" ref-type="media">4a,b</xref> show two examples of ColabFold’s prediction capabilities for complexes. Supplementary Fig. <xref rid="MOESM1" ref-type="media">4a</xref> shows a homo-six-mer and Supplementary Fig. <xref rid="MOESM1" ref-type="media">4b</xref> shows a <sc>d</sc>-methionine transport system composed of three different proteins. The inter-chain predicted alignment error (inter-PAE) provided by AlphaFold2 helps to rank the complexes. Plots of PAE and complex conformation are given to help users judge the prediction quality of a complex. An example for heteromer complex prediction is shown in Supplementary Fig. <xref rid="MOESM1" ref-type="media">4c</xref> with its PAE plot. ColabFold complexes were successfully used to aid in the determination of the structure of the 120 MDa human nucleopore complex on cryogenic electron microscopy<sup><xref ref-type="bibr" rid="CR23">23</xref></sup>.</p>
    <p id="Par15">ColabFold exposes many internal parameters of AlphaFold2 such as the recycle count (default 3), which controls the number of times the prediction is repeatedly fed through the model. For difficult targets as well as for designed proteins without known homologs, additional recycling iterations can result in a high-quality prediction (Supplementary Fig. <xref rid="MOESM1" ref-type="media">5</xref>). Rerunning the CASP14 benchmark with a recycle count of 12 resulted in an improvement of targets with little MSA information, resulting in an increased average TM-score of 0.898 (Supplementary Fig. <xref rid="MOESM1" ref-type="media">6</xref>).</p>
    <p id="Par16">For high-throughput structure prediction, we introduced several features in ColabFold. First, MSA generation can be executed in batch mode independently from model batch-inference. Second, we compile only one of the five AlphaFold2 models and reuse weights. Third, we avoid recompilation for sequences of similar length. Fourth, we implement early stop criteria, to avoid additional recycles or models if a sufficiently accurate structure was already found. And last, we developed the command line tool colabfold_batch to predict structures on local machines. All together, we show that the <italic>Methanocaldococcus jannaschii</italic> proteome of 1,762 proteins shorter than 1,000 amino acids can be predicted in 48 h with early stopping at a pLDDT (predicted local distance difference test; a per-residue confidence metric) of ≥85 on one Nvidia Titan RTX (Fig. <xref rid="Fig2" ref-type="fig">2d</xref>), while sacrificing little or no prediction accuracy (Methods <xref rid="Sec31" ref-type="sec">2.7.4</xref>). The average pLDDTs of AlphaFold2 and ColabFold Stop ≥ 85 were 89.75 and 88.78 in a subsampled set of 50 proteins.</p>
    <p id="Par17">ColabFold builds beyond the initial offerings of Alphafold2 by improving its sequence search, providing tools for modeling homo- and heteromer complexes, exposing advanced functionality, expanding the environmental databases and enabling large-scale batch prediction of protein structures, at an approximately 90-fold speed-up over AlphaFold2.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Executing ColabFold</title>
      <p id="Par18">ColabFold is available as a set of Jupyter notebooks that can be used on Google Colaboratory or on users’ local machines, as well as an easily installable command line application.</p>
      <sec id="Sec4">
        <title>ColabFold notebooks</title>
        <p id="Par19">ColabFold has four main Jupyter notebooks<sup><xref ref-type="bibr" rid="CR24">24</xref></sup>. The first is AlphaFold2_mmseqs2 for basic use, which supports protein structure prediction using MSAs generated by MMseqs2 (version edb822), custom MSA upload, use of template information, relaxing of the predicted structures using amber force fields<sup><xref ref-type="bibr" rid="CR25">25</xref></sup>, and prediction of complexes. The second, AlphaFold2_advanced, for advanced users, additionally supports MSA generation using HMMer (same as AlphaFold-Colab), the sampling of diverse structures by iterating through a series of random seeds (num_samples), and control of AlphaFold2 model internal parameters, such as changing the number of recycles (max_recycle), the number of ensembles (num_ensemble), and the is_training option. The use of the is_training option enables dropout during inference. This activates the stochastic part of the model and can result in different predictions. Thus by iterating through different seeds, one can sample different structures predictions from the uncertainty of the model<sup><xref ref-type="bibr" rid="CR26">26</xref></sup> or the ambiguity of co-evolution constraints derived from the input MSA. The third main type of Jupyter notebook is AlphaFold2_batch, for batch prediction of multiple sequences or MSAs. The batch notebook saves time by avoiding recompilation of the AlphaFold2 models (section <xref rid="Sec20" ref-type="sec">2.5.2</xref>) for each individual input sequence. The fourth type is RoseTTAFold, for basic use of RoseTTAFold, and which supports protein structure prediction using MSAs generated by MMseqs2, and custom MSAs, and sidechain prediction using SCWRL4 (ref. <sup><xref ref-type="bibr" rid="CR27">27</xref></sup>). The RoseTTAFold notebook also has an option to use a slower but more accurate PyRosetta<sup><xref ref-type="bibr" rid="CR28">28</xref></sup> folding protocol for structure prediction, using constraints predicted by RoseTTAFold’s neural network.</p>
      </sec>
      <sec id="Sec5">
        <title>ColabFold command line interface</title>
        <p id="Par20">We initially focused on making ColabFold as widely available as possible through our Notebooks running in Google Colaboratory. To meet the demand for a version that runs on local users’ machines, we released ‘LocalColabFold’. LocalColabFold can take command line arguments to specify an input FASTA file, an output directory, and various options to tweak structure predictions. LocalColabFold runs on a wide range of operating systems, such as Windows 10 or later (using Windows Subsystem for Linux 2), macOS and Linux. The structure inference and energy minimization are accelerated if a CUDA 11.1 or later compatible GPU is present. LocalColabFold is available as free open-source software at <ext-link ext-link-type="uri" xlink:href="https://github.com/YoshitakaMo/localcolabfold">https://github.com/YoshitakaMo/localcolabfold</ext-link></p>
        <p id="Par21">Recognizing the limitations of Google Colaboratory, we provide the colabfold_batch command line tool through the colabfold python package. This enables the computing of tasks on the user’s own computer that would have been too large for Google Colab, for example, predicting an entire proteome (Methods <xref rid="Sec31" ref-type="sec">2.7.4</xref>). It can be installed using Python's pip package manager following the instructions at <ext-link ext-link-type="uri" xlink:href="https://github.com/sokrypton/ColabFold">https://github.com/sokrypton/ColabFold</ext-link>. It can be used as colabfold_batch input_file_or_directory output_directory, supporting FASTA, A3M and CSV files as input.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Faster MSA generation with MMseqs2</title>
      <p id="Par22">Generating MSAs for AlphaFold2 and RoseTTAFold is a time-consuming task. To improve their run time while maintaining a high prediction accuracy, we implemented optimized workflows using MMseqs2.</p>
      <sec id="Sec7">
        <title>MSA generation by MMseqs2</title>
        <p id="Par23">ColabFold sends the query sequence to an MMseqs2 server<sup><xref ref-type="bibr" rid="CR11">11</xref></sup>. It searches the sequence(s) with three iterations against the consensus sequences of the UniRef30, a clustered version of the UniRef100 (ref. <sup><xref ref-type="bibr" rid="CR29">29</xref></sup>). We accept hits with an E-value lower than 0.1. For each hit we realign its respective UniRef100 cluster member using the profile generated by the last iterative search, filter them (Methods <xref rid="Sec8" ref-type="sec">2.2.2</xref>) and add these to the MSA. This expanding search results in a speed-up of ~10-fold given that only 29.3 million cluster consensus sequences are searched instead of all 277.5 million UniRef100 sequences. Additionally, it has the advantage of being more sensitive given that the cluster consensus sequences are used. We use the UniRef30 sequence profile to perform an iterative search against the BFD/MGnify or ColabFoldDB using the same parameters, filters and expansion strategy.</p>
      </sec>
      <sec id="Sec8">
        <title>New diversity aware filter</title>
        <p id="Par24">To limit the number of hits in the final MSA we use the HHblits (v3.3.0) diversity filtering algorithm<sup><xref ref-type="bibr" rid="CR8">8</xref></sup> implemented in MMseqs2 in multiple stages. In the first stage, during UniRef cluster expansion, we filter each individual UniRef30 cluster before adding the cluster members to the MSA, such that no cluster pair has a higher maximum sequence identity than 95% (--max-seq-id 0.95). In the second stage, after realignment we enable only the --qsc 0.8 threshold and disable all other thresholds (--qid 0 --diff 0 --max-seq-id 1.0). Additionally, the qsc filtering is used only if at least 100 hits are found (--filter-min-enable 100). In the last stage, during MSA construction we filter again with the following parameters: --filter-min-enable 1000 --diff 3000 --qid 0.0,0.2,0.4,0.6,0.8,1.0 --qsc 0 --max-seq-id 0.95. Here, we extended the HHblits filtering algorithm to filter within a given sequence identity bucket such that it cannot eliminate redundancy across filter buckets. Our filter keeps the 3,000 most diverse sequences in the identity buckets [0.0–0.2], (0.2–0.4], (0.4–0.6], (0.6–0.8] and (0.8–1.0]. In buckets containing less than 1,000 hits we disable the filtering.</p>
      </sec>
      <sec id="Sec9">
        <title>New MMseqs2 pre-computed index to support expanding cluster members</title>
        <p id="Par25">MMseqs2 was initially built to perform fast many-against-many sequence searches. Mirdita et al.<sup><xref ref-type="bibr" rid="CR11">11</xref></sup> improved it to also support fast single-against-many searches. This type of search requires the database to be indexed and stored in memory. mmseqs createindex indexes the sequences and stores all time-consuming-to-compute data structures used for MMseqs2 searches to disk. We load the index into the operating systems cache using vmtouch (<ext-link ext-link-type="uri" xlink:href="https://github.com/hoytech/vmtouch">https://github.com/hoytech/vmtouch</ext-link>) to enable calls to the different MMseqs2 modules to become nearly overhead free. We extended the index to store, in addition to the already present cluster consensus sequences, all member sequences and the pairwise alignments of the cluster representatives to the cluster members. With these resident in cache, we eliminate the overhead of the remaining module calls.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>ColabFold databases</title>
      <p id="Par26">AlphaFold2 requires more than 2 TB of storage space for its databases, which is a significant hurdle for many researchers. We optimized its databases and additionally created another large environmental sequence database.</p>
      <sec id="Sec11">
        <title>Reducing the size of BFD/MGnify</title>
        <p id="Par27">To keep all required sequences and data structures in memory we needed to reduce the size of the environmental databases BFD and MGnify, given that both databases together would have required ~517 GB RAM for headers and sequences alone.</p>
        <p id="Par28">BFD is a clustered protein database consisting of ~2.2 billion proteins organized in 64 million clusters. MGnify (2019_05) contains ~300 million environmental proteins. We merged both databases by searching the MGnify sequences against the BFD cluster-representative sequences using MMseqs2. Each MGnify sequence with a sequence identity of &gt;30% and a local alignment that covers at least 90% of its length is assigned to the respective BFD cluster. All unassigned sequences are clustered at 30% sequence identity and 90% coverage (--min-seq-id 0.3 -c 0.3 --cov-mode 1 -s 3) and merged with the BFD clusters, resulting in 182 million clusters. To reduce the size of the database we filtered each cluster, keeping only the 10 most diverse sequences using mmseqs filterresult --diff 10. This reduced the total number of sequences from 2.5 billion to 513 million, thus requiring only 84 GB RAM for headers and sequences.</p>
      </sec>
      <sec id="Sec12">
        <title>ColabFoldDB</title>
        <p id="Par29">We built ColabFoldDB by expanding BFD/MGnify with metagenomic sequences from various environments. To update the database we searched the proteins from the SMAG (eukaryotes)<sup><xref ref-type="bibr" rid="CR14">14</xref></sup>, MetaEuk (eukaryotes)<sup><xref ref-type="bibr" rid="CR13">13</xref></sup>, TOPAZ (eukaryotes)<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>, MGV (DNA viruses)<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>, GPD (bacteriophages)<sup><xref ref-type="bibr" rid="CR17">17</xref></sup> and an updated version of MetaClust<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> against the BFD/MGnify centroids using MMseqs2 and assigned each sequence to the respective cluster if they have a 30% sequence identity at a 90% sequence overlap (-c 0.9 --cov-mode 1 --min-seq-id 0.3). All remaining sequences were clustered using MMseqs2 cluster -c 0.9 --cov-mode 1 --min-seq-id 0.3 and appended to the database. We remove redundancy per cluster by keeping the most 10 diverse sequences using mmseqs filterresult --diff 10. The final database consists of 209,335,865 million representative sequences and 738,695,580 members (see the Data Availability section for the input files). We provide the MMseqs2 search workflow used in the server (Methods <xref rid="Sec7" ref-type="sec">2.2.1)</xref> as a standalone script (colabfold_search).</p>
      </sec>
      <sec id="Sec13">
        <title>Template information</title>
        <p id="Par30">AlphaFold2 searches with HHsearch through a clustered version of the PDB (PDB70, ref. <sup><xref ref-type="bibr" rid="CR8">8</xref></sup>) to find the 20 top ranked templates. To save time, we use MMseqs2 (ref. <sup><xref ref-type="bibr" rid="CR10">10</xref></sup>) to search against the PDB70 cluster representatives as a prefiltering step to find candidate templates. This search is also done as part of the MMseqs2 API call on our server. Only the top 20 target templates according to E-value are then aligned by HHsearch. The accepted templates are given to AlphaFold2 as input features. This alignment step is done in the ColabFold client and therefore it requires the subset of the PDB70 containing the respective HMMs. The PDB70 subset and the PDB mmCIF files are fetched from our server. For benchmarking, no templates are given to ColabFold.</p>
      </sec>
    </sec>
    <sec id="Sec14">
      <title>Modeling protein complexes with ColabFold</title>
      <p id="Par31">ColabFold offers protein complex folding through the specialized AlphaFold-multimer model and through manipulation of the residue index<sup><xref ref-type="bibr" rid="CR3">3</xref></sup>. Here, we show the steps that we took for ColabFold to produce accurate protein complex predictions.</p>
      <sec id="Sec15">
        <title>Modeling of protein–protein complexes</title>
        <p id="Par32">We implemented two protein complex prediction modes in ColabFold. One is based on AlphaFold-multimer<sup><xref ref-type="bibr" rid="CR4">4</xref></sup> and the other is based on the manipulation of residue index in the original AlphaFold2 model. Baek et al.<sup><xref ref-type="bibr" rid="CR3">3</xref></sup> show that RoseTTAFold is able to model complexes despite being trained only on single chains. This is done by providing a paired alignment and modifying the residue index. The residue index is used as an input to the models to compute positional embedding. In AlphaFold2 we find the same to be true, although surprisingly the paired alignment is often not needed (Fig. <xref rid="Fig2" ref-type="fig">2c</xref>). AlphaFold2 uses relative positional encoding with a cap at <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left|i-j\right|\ge 32$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mfenced close="∣" open="∣"><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced><mml:mo>≥</mml:mo><mml:mn>32</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41592_2022_1488_Article_IEq1.gif"/></alternatives></inline-formula>, meaning that any pair of residues separated by 32 or more are given the same relative positional encoding. By offsetting the residue index between two proteins to be &gt; 32, AlphaFold2 treats them as separate polypeptide chains. ColabFold integrates this for modeling complexes.</p>
        <p id="Par33">For homo-oligomeric complexes (Supplementary Fig. <xref rid="MOESM1" ref-type="media">4a</xref>) the MSA is copied multiple times for each component. Interestingly, it was found that providing a separate MSA copy (padding by gap characters to extend to other copies) works significantly better than concatenating from left to right.</p>
        <p id="Par34">For hetero-oligomeric complexes (Supplementary Fig. <xref rid="MOESM1" ref-type="media">4b</xref>), a separate MSA is generated for each component. The MSA is paired according to the chosen pair_mode (section <xref rid="Sec16" ref-type="sec">2.4.2</xref>). Given that pLDDT is useful only for assessing local structure confidence, we use the fine-tuned model parameters to return the PAE for each prediction. As illustrated in Supplementary Fig. <xref rid="MOESM1" ref-type="media">4c</xref>, the inter-PAE, the predicted TM-score or interface TM-score (both derived from PAE) can be used to rank and assess the confidence of the predicted protein–protein interaction.</p>
      </sec>
      <sec id="Sec16">
        <title>MSA pairing for complex prediction</title>
        <p id="Par35">A paired MSA helps AlphaFold2 to predict complexes more accurately only if orthologous genes are paired with each other. We followed a similar strategy as Bryant et al.<sup><xref ref-type="bibr" rid="CR22">22</xref></sup> to pair sequences according to their taxonomic identifier. For the pairing we search each distinct sequence of a complex against the UniRef100 using the same procedure as described in section <xref rid="Sec7" ref-type="sec">2.2.1</xref>. We return only hits that cover all complex proteins within one species and pair only the best hit (smallest E-value) with an alignment that covers the query to at least 50%. The pairing is implemented in the new MMseqs2 module pairaln.</p>
        <p id="Par36">For prokaryotic protein prediction we additionally implemented the protocol described in ref. <sup><xref ref-type="bibr" rid="CR3">3</xref></sup> to pair sequences based on their distances in the genome as predicted from the UniProt accession numbers.</p>
      </sec>
      <sec id="Sec17">
        <title>Taxonomic labels for MSA pairing</title>
        <p id="Par37">To pair MSAs for complex prediction, we retrieve for each found UniRef100 member sequence the taxonomic identifier from the NCBI (National Center for Biotechnology Information) Taxonomy database<sup><xref ref-type="bibr" rid="CR30">30</xref></sup>. The taxonomic labels are extracted from the lowest common ancestor field (‘common taxon ID’) of each UniRef100 sequence from the uniref100.xml (2021_03) file.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Speeding up AlphaFold2’s model evaluation</title>
      <p id="Par38">Our efforts in speeding up AlphaFold2’s MSA generation yielded large improvements in its run time. However, we discovered multiple opportunities within AlphaFold2 to speed up its model inference without sacrificing (or only sacrificing very little of) its accuracy.</p>
      <sec id="Sec19">
        <title>Avoid recompiling AlphaFold2 models</title>
        <p id="Par39">The AlphaFold2 models are compiled using JAX<sup><xref ref-type="bibr" rid="CR31">31</xref></sup> to optimize the model for specific MSA or template input sizes. When no templates are provided, we compile once and, during inference, replace the weights from the other models, using the configuration of model 5. This saves 7 min of compile time. When templates are enabled, model 1 is compiled and weights from model 2 are used, model 3 is compiled and weights from models 4 and 5 are used. This saves 5 min of compile time. If the user changes the sequence or settings without changing the length or number of sequences in the MSA, the compiled models are reused without triggering recompilation.</p>
      </sec>
      <sec id="Sec20">
        <title>Avoid recompiling during batch computation</title>
        <p id="Par40">To avoid AlphaFold2 model recompilation for every protein AlphaFold2 provides a function to add padding to the input MSA and templates called make_fixed_size. However, this is not exposed in AlphaFold2. We used the function in our batch notebook as well as in our command line tool colabfold_batch, to maximize GPU use and minimize the need for model recompilation. We sort the input queries by sequence length and process them in ascending order. We pad the input features by 10% (by default). All sequences that lie within the query length and an additional 10% margin are not required to be recompiled, resulting in a large speed-up for short proteins.</p>
      </sec>
      <sec id="Sec21">
        <title>Recycle count</title>
        <p id="Par41">AlphaFold2 improves the predicted protein structure by recycling (by default) three times, meaning that the prediction is fed multiple times through the model. We exposed the recycle count as a customizable parameter given that additional recycles can often improve a model (Supplementary Fig. <xref rid="MOESM1" ref-type="media">6</xref>) at the cost of a longer run time. We also implemented an option to specify a tolerance threshold to stop early. For some designed proteins without known homologous sequences, this helped to fold the final protein (Supplementary Fig. <xref rid="MOESM1" ref-type="media">5</xref>).</p>
      </sec>
      <sec id="Sec22">
        <title>Speed-up of predictions through early stop</title>
        <p id="Par42">AlphaFold2 computes five models through multiple recycles. We noted that for prediction of high certainty (pLDDT &gt;85), all five models would often produce structures of very similar confidence, for some even without or with less than three recycles. To speed up the computation we added a parameter to define an early stop criterion that halts additional model inferences and stops recycling if a given pLDDT or (interface) predicted TM-score threshold is reached.</p>
      </sec>
    </sec>
    <sec id="Sec23">
      <title>Advanced features</title>
      <p id="Par43">In our investigation of AlphaFold2’s internal parameters we realized that we could expose many of the internal parameters that might be useful to researchers trying to explore AlphaFold2’s full potential.</p>
      <sec id="Sec24">
        <title>Sampling of diverse structures</title>
        <p id="Par44">To reduce memory requirements, only a subset of the MSA is used as input to the model. Alphafold2, depending on model configuration, subsamples the MSA to a maximum of 512 cluster centers and 1,024 extra sequences. Changing the random seed can result in different cluster centers and thus different structure predictions. ColabFold provides an option to iterate through a series of random seeds, resulting in structure diversity. Further structure diversity can be generated by using the original or fine-tuned (use_ptm) model parameters and/or enabling is_training to activate the stochastic (dropout) part of the model. Enabling the latter can be used to sample an ensemble of models for the uncertain parts of the structure prediction.</p>
      </sec>
      <sec id="Sec25">
        <title>Custom MSAs</title>
        <p id="Par45">ColabFold enables researchers to upload their own MSAs. Any kind of alignment tool can be used to generate the MSA. The uploaded MSA can be provided in aligned FASTA, A3M, STOCKHOLM or Clustal format. We convert the respective MSA format into A3M format using the reformat.pl script from the HH-suite<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>.</p>
      </sec>
      <sec id="Sec26">
        <title>Lightweight 2D structure renderer</title>
        <p id="Par46">For visualization, we developed a matplotlib<sup><xref ref-type="bibr" rid="CR32">32</xref></sup> compatible module for displaying the 3D ribbon diagram of a protein structure or complex. The ribbon can be colored by residue index (N to C terminus) or by a predicted confidence metric (such as pLDDT). For complexes, each protein can be colored by chain ID. Instead of using a 3D renderer, we instead use a 2D line plotting based technique. The lines that make up the ribbon are plotted in the order in which they appear along the z-axis. Furthermore, we add shade to the lines according to the z-axis. This creates the illusion of a 3D rendered graphic. The advantage over a 3D renderer is that the images are very lightweight, can be used in animations and saved as vector graphics for lossless inclusion in documents. Given that the 2D renderer is not interactive, we additionally included a 3D visualization option using py3Dmol<sup><xref ref-type="bibr" rid="CR33">33</xref></sup> in the ColabFold notebooks.</p>
      </sec>
    </sec>
    <sec id="Sec27">
      <title>Benchmarking ColabFold</title>
      <p id="Par47">We show with multiple datasets that ColabFold does not sacrifice accuracy for its much faster run times.</p>
      <sec id="Sec28">
        <title>Benchmark with CASP14 targets</title>
        <p id="Par48">We compared AlphaFold-Colab and AlphaFold2 (commit b88f8da) against ColabFold using all CASP14 (ref. <sup><xref ref-type="bibr" rid="CR2">2</xref></sup>) targets. ColabFold-AlphaFold2 (commit 2b49880) used UniRef30 (2021_03) (ref. <sup><xref ref-type="bibr" rid="CR34">34</xref></sup>) and the BFD/MGnify or ColabFoldDB. ColabFold-RoseTTAFold (commit ae2b519) was executed with papermill (<ext-link ext-link-type="uri" xlink:href="https://github.com/nteract/papermill">https://github.com/nteract/papermill</ext-link>) using the PyRosetta protocol<sup><xref ref-type="bibr" rid="CR28">28</xref></sup>. ColabFold-RoseTTAFold-BFD/MGnify and ColabFold-AlphaFold2-BFD/MGnify used the same MSAs. AlphaFold-Colab used the UniRef90 (2021_03), MGnify (2019_05) and the small BFD. AlphaFold2 used the full_dbs preset and default databases downloaded with the download_all_data.sh script. The 65 targets contain 91 domains, among these are 20 free-modeling targets with 28 domains. We compared the predictions against the experimental structures using TMalign (downloaded on 24 February 2021) (ref. <sup><xref ref-type="bibr" rid="CR35">35</xref></sup>).</p>
      </sec>
      <sec id="Sec29">
        <title>Measuring run times for CASP14 benchmark</title>
        <p id="Par49">To provide more accurate run times we split the MSA generation and model inference measurements. MSA generation was repeated five times and the MSA generation times were averaged.</p>
        <p id="Par50">ColabFold was executed using colabfold_batch. The MMseqs2 server that computes MSAs for ColabFold has 2 × 14 core Intel E5-2680v4 central processing units (CPUs) and 768 GB RAM. Each generated MSA was processed by a single CPU core. Run times were computed from server logs.</p>
        <p id="Par51">AlphaFold2 MSA generation run times were measured by running AlphaFold2 without models (providing an empty string to the --model_names parameter) on the same 2 × 14 core Intel E5-2680v4 CPUs and 768 GB RAM system. The AlphaFold2 databases were stored on a software-RAID5 as implemented in Linux (mdadm) composed of six Samsung 970 EVO Plus 1 TB NVMe drives. Run times for AlphaFold2 were taken from the features entry of the timings.json file. For a fair comparison, AlphaFold2 was modified to allow HMMer and HHblits to access one CPU core.</p>
        <p id="Par52">All ColabFold and AlphaFold2 model inference run-time measurements were done on systems with 2 × 16 core Intel Gold 6242 CPUs with 192 GB RAM and 4x Nvidia Quadro RTX5000 GPUs. Only one GPU was used in each run.</p>
        <p id="Par53">ColabFold-RoseTTAFold-BFD/MGnify and ColabFold-AlphaFold2-BFD/MGnify used the same MSAs, and run times are shown only once.</p>
        <p id="Par54">AlphaFold-Colab was executed in the browser using a Google Colab Pro account. The times for the homology search were taken from the notebook output cell ‘Search against genetic databases’. The JackHMMer search uses eight threads.</p>
      </sec>
      <sec id="Sec30">
        <title>Complex benchmark</title>
        <p id="Par55">We compare predictions of 17 ClusPro<sup><xref ref-type="bibr" rid="CR4">4</xref>,<xref ref-type="bibr" rid="CR12">12</xref></sup> targets to their native structures using DockQ (commit 3735c16) (ref. <sup><xref ref-type="bibr" rid="CR36">36</xref></sup>). We used colabfold_batch (commit 45ad0e9) with BFD/MGnify in residue index manipulation and AlphaFold-multimer mode to predict structures. We use MSA pairing as described in section <xref rid="Sec16" ref-type="sec">2.4.2</xref> and also add unpaired sequences. Models are ranked by predicted interface TM-score as returned by AlphaFold-multimer. The DockQ AlphaFold-multimer reference numbers were provided by R. Evans.</p>
      </sec>
      <sec id="Sec31">
        <title>Proteome benchmark</title>
        <p id="Par56">We predict the proteome of <italic>M.</italic> <italic>jannaschii</italic>. Of the 1,787 proteins, we exclude the 25 proteins longer than 1,000 residues, leaving 1,762 proteins of 268 amino acids in average length. With the colabfold_search wrapper to MMseqs2 we search against the ColabFoldDB (section <xref rid="Sec12" ref-type="sec">2.3.2</xref>) in 113 min on a system with an AMD EPYC 7402P 24-core CPU (no hyperthreading) and 512 GB RAM. MMseqs2 had a maximum resident set size of 308 GB during the search. We then predict the structures on a single Nvidia Titan RTX with 24 GB RAM in 46 h using only MSAs (no templates). For each query we stop early if any recycle iteration reaches a pLDDT of at least 85. Early stopping results in a speed-up of 3.7-fold compared with the default and 4.8-fold compared with always recompiling. AlphaFold2 (reduced_dbs) was run with the reduced_dbs preset and no template information was used. We changed the AlphaFold2 source code to utilize all CPU cores during the homology search.</p>
        <p id="Par57">AlphaFold2 (reduced_dbs, v2.1.1), ColabFold (commit f5d0cec) default and ColabFold Stop ≥ 85 have an average pLDDT of 90.68, 90.22 and 89.33, respectively, for 50 randomly sampled proteins. These are the same proteins that were used to extrapolate the run time of AlphaFold2. Over all predictions, the pLDDTs for the <italic>M.</italic> <italic>jannaschii</italic> proteome downloaded from the AlphaFoldDB, ColabFold default and ColabFold Stop ≥ 85 are 89.75, 89.38 and 88.77, respectively.</p>
      </sec>
      <sec id="Sec32">
        <title>Software used for analysis</title>
        <p id="Par58">Benchmark data analysis and visualization were done with R/4.1.1, ggplot/3.3.5, cowplot/1.1.1 and lubridate/1.7.10. ColabFold-generated plots were made using matplotlib/3.1.3. TM-score analysis was done with TMalign/2021/02/24 and DockQ/3735c16.</p>
      </sec>
    </sec>
    <sec id="Sec33">
      <title>Reporting summary</title>
      <p id="Par59">Further information on research design is available in the <xref rid="MOESM2" ref-type="media">Nature Research Reporting Summary</xref> linked to this article.</p>
    </sec>
  </sec>
  <sec id="Sec34">
    <title>Online content</title>
    <p id="Par60">Any methods, additional references, Nature Research reporting summaries, source data, extended data, supplementary information, acknowledgements, peer review information; details of author contributions and competing interests; and statements of data and code availability are available at 10.1038/s41592-022-01488-1.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec35">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="41592_2022_1488_MOESM1_ESM.pdf">
            <label>Supplementary Information</label>
            <caption>
              <p>Supplementary Figs. 1–6, Supplementary Table 1</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="41592_2022_1488_MOESM2_ESM.pdf">
            <caption>
              <p>Reporting Summary</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="41592_2022_1488_MOESM3_ESM.pdf">
            <caption>
              <p>Peer Review File</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <app-group>
    <app id="App1">
      <sec id="Sec36">
        <title>Source data</title>
        <p id="Par64">
          <media position="anchor" xlink:href="41592_2022_1488_MOESM4_ESM.xlsx" id="MOESM4">
            <label>Source Data Fig. 2</label>
            <caption>
              <p>Raw data for plotting. Each sub-figure is a different sheet</p>
            </caption>
          </media>
        </p>
      </sec>
    </app>
  </app-group>
  <fn-group>
    <fn>
      <p><bold>Publisher’s note</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>These authors contributed equally: Milot Mirdita, Sergey Ovchinnikov and Martin Steinegger.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p>The online version contains supplementary material available at 10.1038/s41592-022-01488-1.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors thank J. Söding for providing computational resources; R. Evans, J. Jumper and T. Green for answering questions regarding AF2; M. Baek for the complex residue trick; D.-Y. Kim for creating the ColabFold logo; P. Wang, J. Kosinski, S. Cha, E. Guerrero-Araya, K. Dalton, K. Pan, Y. Eliaz, J. Kaczmarzyk, A. Ljubetič and J. Bard for contributions and bug fixes; H. Onoda, K. Yamamoto, R. Kojima, Y. Peng and M. Ohue for contributions and bug fixes to localcolabfold; A. Markovich and J. Varga for notifying us about MSA quality issues; and H. Alexander for providing the TOPAZ proteins as a single file to download. The authors also thank all users for using ColabFold and reporting issues. This work used the Scientific Compute Cluster at GWDG, the joint data center of the Max Planck Society for the Advancement of Science (MPG) and University of Göttingen. M.M. acknowledges the BMBF CompLifeSci project horizontal4meta. M.S. acknowledges support from the National Research Foundation of Korea grant [2019R1A6A1A10073437, 2020M3A9G7103933, 2021R1C1C102065, 2021M3A9I4021220]; New Faculty Startup Fund and the Creative-Pioneering Researchers Program through Seoul National University. Y.M. acknowledges support from Platform Project for Supporting Drug Discovery and Life Science Research (Basis for Supporting Innovative Drug Discovery and Life Science Research (BINDS)) from AMED under grant number JP21am0101107. S.O. is supported by NIH grants DP5OD026389 and R21AI156595, NSF grant MCB2032259 and the Moore-Simons Project on the Origin of the Eukaryotic Cell, Simons Foundation 735929LPI (10.46714/735929LPI). Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>M.M., K.S., S.O. and M.S. performed research and programming, M.M., S.O. and M.S. jointly designed the research and wrote the manuscript. Y.M. provided the initial methodology for hetero-complex modeling and created an installer for use on local servers. L.H. provided the initial benchmarking.</p>
  </notes>
  <notes notes-type="peer-review">
    <title>Peer review</title>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par61"><italic>Nature Methods</italic> thanks David Jones and the other, anonymous, reviewer(s) for their contribution to the peer review of this work. Primary Handling Editor: Arunima Singh in collaboration with the <italic>Nature Methods</italic> team. <xref rid="MOESM3" ref-type="media">Peer reviewer reports</xref> are available.</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open access funding provided by Max Planck Society</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data availability</title>
    <p>ColabFold databases are freely (CC-BY-SA 4.0) available at <ext-link ext-link-type="uri" xlink:href="https://colabfold.mmseqs.com">https://colabfold.mmseqs.com</ext-link>. MSAs and structures produced during benchmarking: <ext-link ext-link-type="uri" xlink:href="https://wwwuser.gwdg.de/~compbiol/colabfold/manuscript">https://wwwuser.gwdg.de/~compbiol/colabfold/manuscript</ext-link>. Input databases used for building ColabFold databases: UniRef30, <ext-link ext-link-type="uri" xlink:href="https://uniclust.mmseqs.com">https://uniclust.mmseqs.com</ext-link>; BFD, <ext-link ext-link-type="uri" xlink:href="https://bfd.mmseqs.com">https://bfd.mmseqs.com</ext-link>; MGnify, <ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/2019_05">http://ftp.ebi.ac.uk/pub/databases/metagenomics/peptide_database/2019_05</ext-link>; PDB70, <ext-link ext-link-type="uri" xlink:href="https://wwwuser.gwdg.de/~compbiol/data/hhsuite/databases/hhsuite_dbs">https://wwwuser.gwdg.de/~compbiol/data/hhsuite/databases/hhsuite_dbs</ext-link>; MetaEuk, <ext-link ext-link-type="uri" xlink:href="https://wwwuser.gwdg.de/~compbiol/metaeuk/2019_11/MetaEuk_preds_Tara_vs_euk_profiles_uniqs.fas.gz">https://wwwuser.gwdg.de/~compbiol/metaeuk/2019_11/MetaEuk_preds_Tara_vs_euk_profiles_uniqs.fas.gz</ext-link>; SMAG, <ext-link ext-link-type="uri" xlink:href="https://www.genoscope.cns.fr/tara/localdata/data/SMAGs-v1/SMAGs_v1_concat.faa.tar.gz">https://www.genoscope.cns.fr/tara/localdata/data/SMAGs-v1/SMAGs_v1_concat.faa.tar.gz</ext-link>; TOPAZ, <ext-link ext-link-type="uri" xlink:href="https://osf.io/gm564">https://osf.io/gm564</ext-link>; MGV, <ext-link ext-link-type="uri" xlink:href="https://portal.nersc.gov/MGV/MGV_v1.0_2021_07_08/mgv_proteins.faa">https://portal.nersc.gov/MGV/MGV_v1.0_2021_07_08/mgv_proteins.faa</ext-link>; and GPD, <ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/metagenomics/genome_sets/gut_phage_database/GPD_proteome.faa.gz">http://ftp.ebi.ac.uk/pub/databases/metagenomics/genome_sets/gut_phage_database/GPD_proteome.faa.gz</ext-link>. Further datasets used for benchmarking ColabFold: PFAM (Pfam-A.seed.gz and Pfam-A.full.gz), <ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam34.0">http://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam34.0</ext-link>; and <italic>M.</italic> <italic>jannaschii</italic> proteome, <ext-link ext-link-type="uri" xlink:href="https://uniprot.org/proteomes/UP000000805">https://uniprot.org/proteomes/UP000000805</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://ftp.ebi.ac.uk/pub/databases/alphafold/v1/UP000000805_243232_METJA_v1.tar">https://ftp.ebi.ac.uk/pub/databases/alphafold/v1/UP000000805_243232_METJA_v1.tar</ext-link>. <xref rid="Sec36" ref-type="sec">Source data</xref> are provided with this paper.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Code availability</title>
    <p>ColabFold is free open-source software (MIT) and available at <ext-link ext-link-type="uri" xlink:href="https://github.com/sokrypton/ColabFold">https://github.com/sokrypton/ColabFold</ext-link>. A locally installable version is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/YoshitakaMo/localcolabfold">https://github.com/YoshitakaMo/localcolabfold</ext-link>. The ColabFold development version shown in this manuscript is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/konstin/ColabFold">https://github.com/konstin/ColabFold</ext-link>. The ColabFold server components are free open-source software (GPLv3) and are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/mmseqs2-app">https://github.com/soedinglab/mmseqs2-app</ext-link>. MMseqs2 is free open-source software (GPLv3) and is available at <ext-link ext-link-type="uri" xlink:href="https://mmseqs.com">https://mmseqs.com</ext-link>.</p>
  </notes>
  <notes id="FPar2" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par62">The authors declare no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jumper</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>583</fpage>
        <lpage>589</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>
        <pub-id pub-id-type="pmid">34265844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kryshtafovych</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Schwede</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Topf</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fidelis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Moult</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Critical assessment of methods of protein structure prediction (CASP): round XIV</article-title>
        <source>Proteins</source>
        <year>2021</year>
        <volume>89</volume>
        <fpage>1607</fpage>
        <lpage>1617</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.26237</pub-id>
        <pub-id pub-id-type="pmid">34533838</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baek</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Accurate prediction of protein structures and interactions using a three-track neural network</article-title>
        <source>Science</source>
        <year>2021</year>
        <volume>373</volume>
        <fpage>871</fpage>
        <lpage>876</lpage>
        <pub-id pub-id-type="doi">10.1126/science.abj8754</pub-id>
        <pub-id pub-id-type="pmid">34282049</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Evans, R. et al. Protein complex prediction with AlphaFold-Multimer. Preprint at <italic>bioRxiv</italic>10.1101/2021.10.04.463034 (2021).</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>UniProt Consortium</collab>
        </person-group>
        <article-title>UniProt: a worldwide hub of protein knowledge</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D506</fpage>
        <lpage>D515</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1049</pub-id>
        <pub-id pub-id-type="pmid">30395287</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mitchell</surname>
            <given-names>AL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MGnify: the microbiome analysis resource in 2020</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2020</year>
        <volume>48</volume>
        <fpage>D570</fpage>
        <lpage>D578</lpage>
        <?supplied-pmid 31696235?>
        <pub-id pub-id-type="pmid">31696235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>Accelerated profile HMM searches</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2011</year>
        <volume>7</volume>
        <fpage>e1002195</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1002195</pub-id>
        <pub-id pub-id-type="pmid">22039361</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>HH-suite 3 for fast remote homology detection and deep protein annotation</article-title>
        <source>BMC Bioinformatics</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>473</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-3019-7</pub-id>
        <pub-id pub-id-type="pmid">31521110</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction for the human proteome</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>590</fpage>
        <lpage>596</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03828-1</pub-id>
        <pub-id pub-id-type="pmid">34293799</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Söding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2017</year>
        <volume>35</volume>
        <fpage>1026</fpage>
        <lpage>1028</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3988</pub-id>
        <pub-id pub-id-type="pmid">29035372</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mirdita</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Söding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>MMseqs2 desktop and local web server app for fast, interactive sequence searches</article-title>
        <source>Bioinformatics</source>
        <year>2019</year>
        <volume>35</volume>
        <fpage>2856</fpage>
        <lpage>2858</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty1057</pub-id>
        <pub-id pub-id-type="pmid">30615063</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kozakov</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The ClusPro web server for protein–protein docking</article-title>
        <source>Nat. Protoc.</source>
        <year>2017</year>
        <volume>12</volume>
        <fpage>255</fpage>
        <lpage>278</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2016.169</pub-id>
        <pub-id pub-id-type="pmid">28079879</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Levy Karin</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Mirdita</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Söding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>MetaEuk-sensitive, high-throughput gene discovery, and annotation for large-scale eukaryotic metagenomics</article-title>
        <source>Microbiome</source>
        <year>2020</year>
        <volume>8</volume>
        <fpage>48</fpage>
        <pub-id pub-id-type="doi">10.1186/s40168-020-00808-x</pub-id>
        <pub-id pub-id-type="pmid">32245390</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delmont</surname>
            <given-names>TO</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Functional repertoire convergence of distantly related eukaryotic plankton lineages abundant in the sunlit ocean</article-title>
        <source>Cell Genomics</source>
        <year>2022</year>
        <volume>2</volume>
        <fpage>100123</fpage>
        <pub-id pub-id-type="doi">10.1016/j.xgen.2022.100123</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Alexander, H. et al. Eukaryotic genomes from a global metagenomic dataset illuminate trophic modes and biogeography of ocean plankton. Preprint at <italic>bioRxiv</italic>10.1101/2021.07.25.453713 (2021).</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nayfach</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Metagenomic compendium of 189,680 DNA viruses from the human gut microbiome</article-title>
        <source>Nat. Microbiol.</source>
        <year>2021</year>
        <volume>6</volume>
        <fpage>960</fpage>
        <lpage>970</lpage>
        <pub-id pub-id-type="doi">10.1038/s41564-021-00928-6</pub-id>
        <pub-id pub-id-type="pmid">34168315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Camarillo-Guerrero</surname>
            <given-names>LF</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rangel-Pineros</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Finn</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Lawley</surname>
            <given-names>TD</given-names>
          </name>
        </person-group>
        <article-title>Massive expansion of human gut bacteriophage diversity</article-title>
        <source>Cell</source>
        <year>2021</year>
        <volume>184</volume>
        <fpage>1098</fpage>
        <lpage>1109</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2021.01.029</pub-id>
        <pub-id pub-id-type="pmid">33606979</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Söding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Clustering huge protein sequence sets in linear time</article-title>
        <source>Nat. Commun.</source>
        <year>2018</year>
        <volume>9</volume>
        <fpage>2542</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-04964-5</pub-id>
        <pub-id pub-id-type="pmid">29959318</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mistry</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Pfam: the protein families database in 2021</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2021</year>
        <volume>49</volume>
        <fpage>D412</fpage>
        <lpage>D419</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkaa913</pub-id>
        <pub-id pub-id-type="pmid">33125078</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Moriwaki, Y. AlphaFold2 can also predict heterocomplexes. all you have to do is input the two sequences you want to predict and connect them with a long linker. <italic>Twitter</italic><ext-link ext-link-type="uri" xlink:href="https://twitter.com/Ag_smith/status/1417063635000598528">https://twitter.com/Ag_smith/status/1417063635000598528</ext-link> (2021).</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Baek, M. Adding a big enough number for ‘residue_index’ feature is enough to model hetero-complex using AlphaFold. <italic>Twitter</italic><ext-link ext-link-type="uri" xlink:href="https://twitter.com/minkbaek/status/1417538291709071362">https://twitter.com/minkbaek/status/1417538291709071362</ext-link> (2021).</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bryant</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pozzati</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Elofsson</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Improved prediction of protein–protein interactions using AlphaFold2</article-title>
        <source>Nat. Commun.</source>
        <year>2022</year>
        <volume>13</volume>
        <fpage>1265</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-022-28865-w</pub-id>
        <pub-id pub-id-type="pmid">35273146</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Mosalaganti, S. et al. Artificial intelligence reveals nuclear pore complexity. Preprint at <italic>bioRxiv</italic>10.1101/2021.10.26.465776 (2021).</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Kluyver, T. et al. Jupyter Notebooks: a publishing format for reproducible computational workflows. In <italic>Positioning and Power in Academic Publishing: Players, Agents and Agendas</italic> (eds Loizides, F. &amp; Schmidt, B.) 87–90 (IOS Press, 2016).</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eastman</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>OpenMM7: rapid development of high performance algorithms for molecular dynamics</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2017</year>
        <volume>13</volume>
        <fpage>e1005659</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005659</pub-id>
        <pub-id pub-id-type="pmid">28746339</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Gal, Y. &amp; Ghahramani, Z. Dropout as a Bayesian approximation: representing model uncertainty in deep learning. Preprint at <italic>arXiv</italic>10.48550/arxiv.1506.02142 (2016).</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krivov</surname>
            <given-names>GG</given-names>
          </name>
          <name>
            <surname>Shapovalov</surname>
            <given-names>MV</given-names>
          </name>
          <name>
            <surname>Dunbrack Jr</surname>
            <given-names>RL</given-names>
          </name>
        </person-group>
        <article-title>Improved prediction of protein side-chain conformations with SCWRL4</article-title>
        <source>Proteins</source>
        <year>2009</year>
        <volume>77</volume>
        <fpage>778</fpage>
        <lpage>795</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.22488</pub-id>
        <pub-id pub-id-type="pmid">19603484</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaudhury</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lyskov</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gray</surname>
            <given-names>JJ</given-names>
          </name>
        </person-group>
        <article-title>PyRosetta: a script-based interface for implementing molecular modeling algorithms using Rosetta</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>689</fpage>
        <lpage>691</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq007</pub-id>
        <pub-id pub-id-type="pmid">20061306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Suzek</surname>
            <given-names>BE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>UniRef clusters: a comprehensive and scalable alternative for improving sequence similarity searches</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>926</fpage>
        <lpage>932</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu739</pub-id>
        <pub-id pub-id-type="pmid">25398609</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Federhen</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>The NCBI Taxonomy database</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>D136</fpage>
        <lpage>D143</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkr1178</pub-id>
        <pub-id pub-id-type="pmid">22139910</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Bradbury, J. et al. JAX: composable transformations of Python+NumPy programs. <italic>Github</italic><ext-link ext-link-type="uri" xlink:href="https://github.com/google/jax">https://github.com/google/jax</ext-link> (2018).</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2D graphics environment</article-title>
        <source>Comput. Sci. Eng.</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rego</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Koes</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>3Dmol.js: molecular visualization with WebGL</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>1322</fpage>
        <lpage>1324</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu829</pub-id>
        <pub-id pub-id-type="pmid">25505090</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mirdita</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Uniclust databases of clustered and deeply annotated protein sequences and alignments</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2017</year>
        <volume>45</volume>
        <fpage>D170</fpage>
        <lpage>D176</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkw1081</pub-id>
        <pub-id pub-id-type="pmid">27899574</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Skolnick</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>TM-align: a protein structure alignment algorithm based on the TM-score</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2005</year>
        <volume>33</volume>
        <fpage>2302</fpage>
        <lpage>2309</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gki524</pub-id>
        <pub-id pub-id-type="pmid">15849316</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Basu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wallner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>DockQ: a quality measure for protein–protein docking models</article-title>
        <source>PLoS One</source>
        <year>2016</year>
        <volume>11</volume>
        <fpage>e0161879</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0161879</pub-id>
        <pub-id pub-id-type="pmid">27560519</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Bioinform.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2673-7647</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9580900</article-id>
    <article-id pub-id-type="publisher-id">818619</article-id>
    <article-id pub-id-type="doi">10.3389/fbinf.2022.818619</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
        <subj-group>
          <subject>Technology and Code</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ApE, A Plasmid Editor: A Freely Available DNA Manipulation and Visualization Program</article-title>
      <alt-title alt-title-type="left-running-head">Davis and Jorgensen</alt-title>
      <alt-title alt-title-type="right-running-head">ApE, A Plasmid Editor</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Davis</surname>
          <given-names>M. Wayne</given-names>
        </name>
        <uri xlink:href="https://loop.frontiersin.org/people/1559063/overview"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Jorgensen</surname>
          <given-names>Erik M.</given-names>
        </name>
        <xref rid="c001" ref-type="corresp">*</xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1059436/overview"/>
      </contrib>
    </contrib-group>
    <aff><institution>Howard Hughes Medical Institute and School of Biological Sciences</institution>, <institution>University of Utah</institution>, <addr-line>Salt Lake City</addr-line>, <addr-line>UT</addr-line>, <country>United States</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p><bold>Edited by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1102383/overview" ext-link-type="uri">Raghu Machiraju</ext-link>, The Ohio State University, United States</p>
      </fn>
      <fn fn-type="edited-by">
        <p><bold>Reviewed by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1118771/overview" ext-link-type="uri">Sumana Sharma</ext-link>, University of Oxford, United Kingdom</p>
        <p><ext-link xlink:href="https://loop.frontiersin.org/people/117623/overview" ext-link-type="uri">Chris John Myers</ext-link>, University of Colorado Boulder, United States</p>
      </fn>
      <corresp id="c001">*Correspondence: Erik M. Jorgensen, <email>jorgensen@biology.utah.edu</email>
</corresp>
      <fn fn-type="other">
        <p>This article was submitted to Data Visualization, a section of the journal Frontiers in Bioinformatics</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>04</day>
      <month>2</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>2</volume>
    <elocation-id>818619</elocation-id>
    <history>
      <date date-type="received">
        <day>19</day>
        <month>11</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>1</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2022 Davis and Jorgensen.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <copyright-holder>Davis and Jorgensen</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>A plasmid Editor (ApE) is a free, multi-platform application for visualizing, designing, and presenting biologically relevant DNA sequences. ApE provides a flexible framework for annotating a sequence manually or using a user-defined library of features. ApE can be used in designing plasmids and other constructs <italic>via in silico</italic> simulation of cloning methods such as PCR, Gibson assembly, restriction-ligation assembly and Golden Gate assembly. In addition, ApE provides a platform for creating visually appealing linear and circular plasmid maps. It is available for Mac, PC, and Linux-based platforms and can be downloaded at <ext-link xlink:href="https://jorgensen.biology.utah.edu/wayned/ape/" ext-link-type="uri">https://jorgensen.biology.utah.edu/wayned/ape/</ext-link>.</p>
    </abstract>
    <kwd-group>
      <kwd>plasmid editor</kwd>
      <kwd>DNA visualization</kwd>
      <kwd>molecular biology tools</kwd>
      <kwd>molecular techniques simulator</kwd>
      <kwd>freely available software</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source id="cn001">
          <institution-wrap>
            <institution>National Institute of General Medical Sciences
</institution>
            <institution-id institution-id-type="doi">10.13039/100000057</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source id="cn002">
          <institution-wrap>
            <institution>National Institute of Neurological Disorders and Stroke
</institution>
            <institution-id institution-id-type="doi">10.13039/100000065</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>Introduction</title>
    <p>DNA visualization software must 1) annotate features and depict DNA features graphically, 2) simulate molecular cloning techniques and 3) generate visually appealing output for figures.</p>
    <p>Good DNA visualization software applies meaning to a string of DNA bases. Fundamentally this requires flexible annotation—applying names to a region, and visualization of functional regions—applying pictures to show the spatial relationships between sequence regions. Every piece of the DNA should be annotated with its biologically relevant attributes. In addition, a biologist must be able to identify subsequences such as restriction enzyme recognition sequences, recombinase recognition sequences, and overlapping end sequences that are useful for particular recombinant techniques.</p>
    <p>Good DNA software also provides powerful <italic>in silico</italic> simulation of common DNA manipulations, such as restriction digests or Gibson cloning. By manipulating DNA <italic>in silico</italic>, a biologist can ensure that recombinant constructs include functionally complete pieces that have the DNA in order and in frame. In other words, good software allows a researcher to synthesize a working plan. This might be working backwards <italic>in silico</italic> from a desired product to determine the needed inputs. Conversely, it allows a researcher to start with a given set of available plasmids and work in the virtual laboratory to generate possible products. Finally, visualization software can be invaluable for determining whether an analytic result—a DNA sequence, a diagnostic PCR or restriction digest—has generated the expected product. The scientist can use the software to align sequences or simulate gels of each step to confirm their work.</p>
    <p>Finally, good DNA software can generate visually pleasing output with a flexible level of detail. This representation should be easily exported in an open and widely used text or graphic format. For example, text output can be used generate class reports, student theses, or manuscripts for publication. Similarly, graphical output can be used to generate meeting posters or slides for class reports or conference presentations.</p>
    <p>Because of this critical need for visualization software, many DNA visualization programs have been written. Many of these are written by researchers themselves to solve their own needs in the lab. Among these are Serial Cloner (<xref rid="B15" ref-type="bibr">Perez, 2021</xref>; <xref rid="B1" ref-type="bibr">AcaClone, 2021</xref>; <xref rid="B7" ref-type="bibr">GenBeans, 2016</xref>; <xref rid="B26" ref-type="bibr">York, 2021)</xref>, and DNA Strider (<xref rid="B6" ref-type="bibr">Douglas, 1995</xref>). Often these are very powerful at solving a specific task, but can be lacking in broad application. Similarly, they are often dependent on a single operating system, and can sometimes have limited visual appeal in the graphic outputs. On the other hand, they are usually freely available, and so are very accessible to small groups and teaching labs. At the other extreme, commercial ventures have written very powerful and flexible sequence visualization packages. Popular packages include (<xref rid="B3" ref-type="bibr">Benchling., 2021</xref>; <xref rid="B19" ref-type="bibr">SnapGene., 2021</xref>; <xref rid="B8" ref-type="bibr">Gene Construction Kit., 2021)</xref>. In order to have a wide customer base, they endeavor to have a complete set of analysis procedures and in silico reaction simulations. Because the visual output is usually a major factor in the product literature, the software has been carefully designed to generate visually appealing output. All of this engineering takes programmer and designer time; as such, these packages are often cost prohibitive for individual laboratories, and almost always are out of range of a teaching laboratory. A summary of some of the features in ApE and a selected set of other visualization programs is provided in <xref rid="T1" ref-type="table">Table 1</xref>.</p>
    <table-wrap position="float" id="T1">
      <label>TABLE 1</label>
      <caption>
        <p>Functions available in ApE and other free or commercial software.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead valign="top">
          <tr>
            <th align="left" rowspan="1" colspan="1"/>
            <th align="center" rowspan="1" colspan="1">ApE</th>
            <th align="center" rowspan="1" colspan="1">Benchling</th>
            <th align="center" rowspan="1" colspan="1">SnapGene</th>
            <th align="center" rowspan="1" colspan="1">MacVector</th>
            <th align="center" rowspan="1" colspan="1">Geneious</th>
            <th align="center" rowspan="1" colspan="1">Ugene</th>
            <th align="center" rowspan="1" colspan="1">SerialCloner</th>
            <th align="center" rowspan="1" colspan="1">J5</th>
            <th align="center" rowspan="1" colspan="1">JBEI OpenVectorEditor</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" rowspan="1" colspan="1">Cross-platform</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Feature automatic annotation</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Features visible on sequence</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Formatted text output</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Translation/ORF</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Virtual agarose gel</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Customizable graphic maps</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Alignment to Sanger</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Virtual PCR/primer design</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Restriction-ligation/TA tool</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Gateway/recombination tool</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Gibson/HiFi/InFusion designer/assembler</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Golden gate designer</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Golden gate assembler</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Automated History</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Reverse translation/optimization</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Protein alignment</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">NGS analysis</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">$</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">CRISPR designer</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">+</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Reagent tracking</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Generates robotic handling protocols</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">$</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
          <tr>
            <td align="left" rowspan="1" colspan="1">Automated design</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">X</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">x</td>
            <td align="center" rowspan="1" colspan="1">✓</td>
            <td align="center" rowspan="1" colspan="1">x</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn>
          <p>✓ Yes, + limited, x no, $ for add-on pricing.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>We have taken the long view to solving this problem. ApE is a freely available program written over the last 17 years by a molecular biologist for molecular biologists. Thus, it leverages the insider knowledge of what makes a successful DNA editing program. Further, the long-timeframe approach has allowed the program to become both highly versatile and streamlined—ApE now rivals the commercially available packages in both its diversity of features and its visual outputs. Importantly, unlike commercial packages, its free availability makes it well-suited for use in small labs or teaching labs.</p>
  </sec>
  <sec id="s2">
    <title>Method (Code Description)</title>
    <sec id="s2-1">
      <title>Language and Supported Operating Systems</title>
      <p>ApE is written in Tcl/Tk. Current distribution of ApE is with Tcl/Tk version 8.6.11(Walzer et al.). There are ready-to-run versions of ApE for Windows, MacOS, and Linux systems.</p>
      <p>For Windows, the program is packaged into a self-contained tclkit (<xref rid="B25" ref-type="bibr">Wippler, 2021</xref>) using the Starkit Developer eXtension (sdx) (<xref rid="B21" ref-type="bibr">Thoyts, 2021</xref>). The Tclkit is a compiled binary generated by Ashok P. Nadkarni and contains the Tcl Windows API extension package (TWAPI) (<xref rid="B14" ref-type="bibr">Nadkarni, 2021</xref>).</p>
      <p>The exe file was edited using Resource hacker (<xref rid="B10" ref-type="bibr">Johnson, 2021</xref>) to contain a custom icon set and relevant version and copyright information. Bundled in the virtual filesystem of the exe file are copies of the ApE accessory files (see below). The exe is compiled as an x86-32-bit application, and should run on versions of Windows between 98 and Windows 10.</p>
      <p>For MacOS, ApE is packaged as an application bundle. The executable files in the bundle were generated from Tcl and Tk source (<xref rid="B23" ref-type="bibr">Walzer, 2021</xref>). The current release is targeted to x86 architectures with OS versions 10.11 and above. The executable application bundle includes embedded Tcl and Tk frameworks, the Tcl script, copies of the ApE accessory files, a custom application icon and a MacOS property list file.</p>
      <p>ApE can be run on Unix/Linux systems using the Tcl/Tk windowing shell interpreter, wish, which is available as source code or precompiled binaries for most *nix (<xref rid="B23" ref-type="bibr">Walzer, 2021</xref>). The wish binary is available by apt or apt-get on Debian systems. Of interest for using ApE in educational settings, ApE can also be run using the wish interpreter on low-cost Raspberry pi systems or Chromebooks that have enabled the Linux Beta feature of Chrome OS.</p>
      <p>We have also run ApE within the Android operating system using AndroWish (<xref rid="B24" ref-type="bibr">Werner, 2021</xref>) as the Tcl/Tk interpreter, however the smaller screen size of most Android-supported devices and the single window per app user interface impaired the general usability, and so compiled binaries are not provided.</p>
    </sec>
    <sec id="s2-2">
      <title>File Formats</title>
      <p>The usefulness of a program can be judged on three factors: flexibility of input, flexibility of data processing, and flexibility of output. To make ApE widely usable, we have endeavored to write procedures to read as many DNA sequence file types as possible. ApE reads FASTA or raw ASCII, GenBank (<xref rid="B18" ref-type="bibr">Sayers et al., 2019</xref>), EMBL, GCG, pDraw, GFF3 (<xref rid="B20" ref-type="bibr">Stein, 2021</xref>) DNAStrider (<xref rid="B6" ref-type="bibr">Douglas, 1995</xref>) Serial Cloner (<xref rid="B15" ref-type="bibr">Perez, 2021</xref>; <xref rid="B19" ref-type="bibr">SnapGene., 2021</xref>; <xref rid="B8" ref-type="bibr">Gene Construction Kit., 2021)</xref> (GCK) file formats. ApE can also read Sanger sequencing chromatogram files in either the proprietary abi or open scf format. Sanger data is displayed as a scrollable and scalable graphic window, which can be used for aligning to a reference sequence.</p>
      <p>ApE saves DNA data in a GenBank-like file format that is designed to be understood by most parsers that can parse Genbank files. This format is open and human-readable text, so saved data is not confined to a proprietary, binary format. In addition, many other programs and open-source libraries such as BioPerl or BioPython can read this format easily. Although it is based on GenBank, ApE files contain additional information not specified in the GenBank specification. First, sequence-wide information is stored as a special COMMENT line that begins with the text “ApEinfo:” Second, each feature has additional feature-specific formatting data stored in feature qualifiers that begin with “/ApEinfo_.” Some GenBank parsers require qualifiers to be part of a controlled vocabulary, so ApE has a user-specified option in the preferences window to save files without this information. Only the COMMENT fields of the GenBank header are visible and editable in the ApE interface (<xref rid="F1" ref-type="fig">Figure 1G</xref>), however all of the header records (ex. SOURCE, KEYWORDS, or REFERENCE) are retained in memory and are saved in the ApE formatted file. Future editions of the program could allow viewing and editing these header lines. Users can store base64 encoded versions of abi files as Genbank comment fields within an ApE file. Abi files linked in this way can be extracted and viewed with the standard abi viewer.</p>
      <fig position="float" id="F1">
        <label>FIGURE 1</label>
        <caption>
          <p>The main sequence editing window of ApE. <bold>(A)</bold> The top section of the window shows basic properties of the sequence and selected region. <bold>(B)</bold> The top section also shows the translation of the selected region. <bold>(C)</bold> The next pane shows a table of sequence features. Clicking on the arrowhead expands the description of the feature. <bold>(D)</bold> The next pane shows a list of all features under the mouse pointer (here, hovering over F). <bold>(E)</bold> The central region of the window contains the text of the sequence, with features highlighted in color. To the right is a vertical representation of these features in the currently displayed region and the scrollbar. On the far right is a representation of all of the features in the sequence. <bold>(F)</bold> When activated, the X-ray window shows a floating window containing a graphical representation of the line of text under the mouse pointer. <bold>(G)</bold> The bottom of the window shows an editable sequence comment.</p>
        </caption>
        <graphic xlink:href="fbinf-02-818619-g001" position="float"/>
      </fig>
    </sec>
    <sec id="s2-3">
      <title>Auxiliary Files</title>
      <p>To make ApE as flexible as possible for processing and visualizing user data, ApE stores several data files as human-readable text files. This allows users to store multiple versions of the files for different purposes, or trade useful variants with others. ApE uses this modular framework for the restriction enzyme set, the feature library, gel ladders, graphical arrowheads and user preferences. The restriction enzyme files store recognition and cut sites, methylation specificities, and user specified enzyme “groups,” which can be used in limiting enzyme searches (see below). Included with the distribution is a basic default set of enzymes, as well as several other enzyme database files, such as a set of all commercially available enzymes. DNA ladders for use in virtual agarose gels are stored in a file that can be edited using a ladder editor dialog within ApE. Arrowheads files are available to the user to customize the graphic map window. The “ApE Defaults.txt” file stores over 100 default values for many user-specified parameters between sessions.</p>
      <p>Finally, ApE includes a folder of feature definition library files. Feature definitions are designed to provide a rich and flexible matching paradigm. Definitions include all of the characters of the IUPAC degenerate nucleotide code, with all sequence bases required to be within the degenerate set at each position for a match to be noted. There are two variable length wild-card characters # and +, which match any continuous string of nucleotides. Definitions can contain &lt; and &gt;; any characters before &lt; and after &gt; are not required to match in the search stage, but after a match is found sequences continuous with the match that also match the pre- or post-sequence are included in the final match. Finally, the definitions can contain either uppercase or lowercase characters. Once a match has been found, uppercase characters are noted as part of the feature, while lowercase characters are gaps in the feature. This allows for feature gaps such as introns, as well as searches for specific bases within a given context, for example common or important SNPs. If a definition has only lowercase characters, all of the characters are included in the feature. Currently, ApE ships with default feature libraries for <italic>C. elegans</italic>, mouse, yeast and generic plasmid features, but there is a built-in system for adding new libraries or editing the default libraries.</p>
    </sec>
    <sec id="s2-4">
      <title>Implemented Methods That Could Be Used by Others</title>
      <p>Many of the procedures within ApE could be used as stand-alone, command-line functions or incorporated into other DNA analysis projects. ApE has several basic analysis functions such as reverse complement, complement, translate, reverse-translate, search with IUPAC degeneracy codes, search for amino acid sequences in a translated DNA sequence, and melting temperature calculation. ApE also implements the DNA Strider algorithm for fast hexamer searching for restriction enzyme patterns (<xref rid="B6" ref-type="bibr">Douglas, 1995</xref>), which is faster at finding restriction enzyme sites than a regular expression search. Finally, ApE includes a procedure to search for PCR primer binding sites using a modification of the Strider hexamer lookahead algorithm.</p>
      <p>ApE implements pairwise alignment of two DNA sequences using a Needleman-Wunsch (NW) alignment algorithm with an affine gap penalty. Because this algorithm is processor intensive, the alignment algorithm first uses a simple heuristic algorithm for doing a first-pass, block-based search for locally identical sequence matches, which are then used as boundaries for aligning non-identical blocks by the NW algorithm. If the sequences have no major matching regions, the user can further specify a maximum value for mismatched regions to be aligned by the NW alignment algorithm. If a region between matching blocks has a product of lengths of each mismatched sequence region, the region is not aligned, and will be highlighted in black text in the resulting display. Once a pairwise alignment is made between the reference and each comparison sequence, the alignments are combined into a single alignment by adding gaps to each sequence; no attempt is made at multiple sequence alignment.</p>
    </sec>
    <sec id="s2-5">
      <title>Interchange</title>
      <p>ApE has many ways to output and share data. For text-based visualizations or analysis windows, ApE can save an output file as plain text, or as formatted rich text format (RTF) files, which preserves color background highlighting and other text formatting. On Mac OS, formatted text can also be copied to the clipboard in RTF format. For graphic visualizations of data, for example, graphic maps or virtual agarose gels, ApE can save the data in four formats: encapsulated postscript (eps), scalable vector graphics (svg), OpenXML-based Power Point (pptx) and portable document format (pdf). An additional format, Windows Metafile (wmf), is available on Windows systems. All of these formats retain the information in vector format, so that they can be edited when opened in a vector editing program, such as Inkscape or Adobe Illustrator. For users who use LabArchives to store their laboratory notebook, ApE has a direct interface to the LabArchives internet portal, so that analysis windows can be directly uploaded to a user’s account. For making presentations, pptx files can be read into Power Point, Keynote or Google Slides. Finally, on Mac and Windows, ApE is able to directly output windows to an attached printer with formatting preserved. For DNA Sanger sequencing files, the data are scaled to fit within the printed page, with a user-specified number of lines per page. This wide variety of output formats and modalities should make ApE useful for saving an analysis in a laboratory notebook, for presenting the analysis on slides, for archiving the analysis in a database, or sharing the analysis on the internet.</p>
    </sec>
  </sec>
  <sec id="s3">
    <title>Results (Examples of Use and Limitations)</title>
    <p>ApE has many functions for working with DNA. First, sequences can be annotated, applying names to regions of a sequence. This is described below under “Construct Features.” Second, it can edit DNA, described below under “Basic Editing.” Third, it can generate formatted text or vector graphic representations of the sequence, described in “Sequence Visualization.” Fourth, as described in “Restriction Site Analysis,” it can locate enzyme recognition sites in a sequence and simulate agarose gels of restriction digests. Fifth, are the “Molecular Techniques Simulators,” including simulators for a Restriction ligation reaction, a Golden Gate reaction, a Golden Gate reaction designer, a Gibson Assembly reaction, a Recombinase/Integrase mediated joining reaction, and PCR reactions. Finally, ApE provides several “Analysis Tools,” including alignment of Sanger sequencing to a reference sequence, a dCAPS genotyping designer, direct input into the NCBI BLAST server, and several other minor tools. A video tutorial series describing many of the features of ApE is available at YouTube: <ext-link xlink:href="https://www.youtube.com/playlist?list=PLXd4WouGm92muGl4mJx5EvUFVSWZKdyuA" ext-link-type="uri">https://www.youtube.com/playlist?list=PLXd4WouGm92muGl4mJx5EvUFVSWZKdyuA</ext-link>.</p>
    <sec id="s3-1">
      <title>Construct Features</title>
      <p>A key role of Ape is to locate and highlight functionally important sequences, called “features.” Features can be added to a sequence manually or <italic>via</italic> an automated library search. Features can be visualized in four ways: as text in a table at the top of a sequence, as a text appearing when pointing to a sequence, as a graphical representation when pointing to a sequence line, or as a small graphical summary at the right side of the sequence window.</p>
      <p>In the main sequence window, features are indicated as highlighted text (<xref rid="F1" ref-type="fig">Figure 1E</xref>). In addition to the highlighted text, a tabular view of the features within a sequence is displayed (<xref rid="F1" ref-type="fig">Figure 1C</xref>). The table is sortable by feature name, direction, GenBank feature type and location. If a feature has GenBank qualifiers, those qualifiers are displayed within the table under drop-down rows that can be opened or closed. Features can be added to a file by selecting any region and then using the “Features” menu option “New Feature … .” We’ve endeavored to make the editing of features flexible. The table context menus allow the editing of many aspects of feature display, such as the name, highlight color, and display priority (a.k.a. foreground/background, or z position). A similar context menu is available in the other columns of the table to quickly edit the other properties of each feature. For example, the location of the feature, that is, the range of bases included in the feature, as represented by numbers, can be edited. To edit a feature more extensively, a user can double-click any table row or alternatively right click the sequence text directly.</p>
      <p>An important aspect of ApE is that features can be added to a file by using a predefined or user-defined feature library to scan the entire sequence. Feature libraries consist of lines of text referred to here as feature definitions. Each feature definition includes a name, a sequence of the feature (possibly including undefined bases “N,” variable length of unknown sequence “#,” or introns “-”), and a color to apply to the feature if found. Each feature definition in the library is compared against the entire sequence, one by one, and if a match is found, the feature name and formatting defined in the library are applied to that part of the sequence. Thus, raw sequences can be rapidly converted to a table of feature names and base ranges. This modular approach benefits both the data sharing as well as the data preservation roles of ApE. Feature libraries can be exchanged between lab members or between lab groups. For example, collections of PCR primers can be stored as feature libraries and used to annotate any number of sequence files.</p>
      <p>Because feature visualization is so important, ApE provides three ways to see what features are assigned to a piece of text. First, placing the mouse pointer over any character displays the feature names of all features assigned to that character (<xref rid="F1" ref-type="fig">Figure 1D</xref>). Second, an X-ray window mode shows a semi-transparent overlay of the features and highlighted restriction recognition sites (<xref rid="F1" ref-type="fig">Figure 1F</xref>). This window follows the mouse and updates with scrolling the text. Third, there is a small graphical map of features along the right edge of the sequence (<xref rid="F1" ref-type="fig">Figure 1E</xref>).</p>
      <p>Finally, features can be hidden from the current display without deleting the feature from the feature table. This modular approach allows the user to visualize features in many different contexts.</p>
    </sec>
    <sec id="s3-2">
      <title>Basic Editing</title>
      <p>ApE is a sequence editor, and contains powerful general and DNA specific text editing tools, including basic text input, sequence search, ORF search, specialized copy and paste functions, and brief instantaneous analysis of selected text.</p>
      <p>ApE’s main sequence window resembles many classic text editor windows, except that it is limited to representing DNA bases: either ACGT, ACGTN, or IUPAC degenerate base codes. The sequence can be linear or circular, as specified with a button at the top of the window (<xref rid="F1" ref-type="fig">Figure 1A</xref>). In circular sequences, the sequence can be “rotated” to start at any position within the sequence. Selecting sequences within the editing window can be done with the mouse or by entering numerical position values into the “Start” and “End” boxes at the top of the window (<xref rid="F1" ref-type="fig">Figure 1A</xref>). Sequence-related metadata or user notes or comments can be entered into a text box at the bottom of each sequence window (<xref rid="F1" ref-type="fig">Figure 1G</xref>).</p>
      <p>ApE has a search function specialized for the needs of molecular biologists. The find window, accessible from the main menu “Edit &gt; Find,” or from the magnifying glass icon on the toolbar, has a basic text input. However, the search can be specified to find DNA sequences using the search input as degenerate bases, single letter amino acid codes, or literal bases. Depending on the setting, the character “N” would match any single DNA base, the asparagine codons AAT or AAC, or just the character N, respectively. Further, the search can be specified to match just the top DNA strand, or can search for the match in both strands, and can match the characters in a case-sensitive or case-insensitive search. Finally, for DNA searches, the user can allow a fixed number of mismatches to occur between the search string and the sequence, or can specify only a fixed number of bases at the 3′ end of the search be required to match.</p>
      <p>In addition to a text-matching search function, ApE has an open-reading-frame-based search function. This search can find the next or previous open reading frame relative to the current insertion cursor. A user can filter ORFs requiring a minimum length, requiring starting with a methionine or the next codon after the next stop, and requiring the ORF to be on either the top or bottom DNA strand. These settings are quickly accessed in the “ORFs” menu.</p>
      <p>Along with basic copy and paste functions, ApE also has many other functions that operate through the clipboard <italic>via</italic> the “Edit &gt; Copy Special” menu. First, the function “Copy all as GenBank” will copy the entire sequence together with the associated header and feature records as a plain text version onto the clipboard. This can be used to make a complete record of the sequence in a lab notebook, an email, or a laboratory database, for example. These clipboard files can be re-imported and will open as a new sequence window. Second, the functions “Copy Uppercase” and “Copy Uppercase Rev-Com” allows the user to copy discontinuous regions of interest. Third, the functions “Copy Translated,” “Copy Uppercase Translated,” “Copy Translated Rev-Com,” and “Copy Uppercase Translated Rev-Com” allow the user to translate a continuous or discontinuous region for export into protein analysis software. Fourth, “Copy as FASTA” generates a FASTA version of the selected text, with the file name and selection indices in the FASTA header. Fifth, sequences can be copied as NCBI Bankit tables for submission to the NCBI database.</p>
      <p>Finally, ApE displays four important attributes of user-selected sequence: melting temperature (Tm), %GC, a representation of the open reading frame (<xref rid="F1" ref-type="fig">Figure 1A</xref>) and a translation of the top or bottom strand (<xref rid="F1" ref-type="fig">Figure 1B</xref>). These features are displayed in the top area of the window as the text selection is changed.</p>
    </sec>
    <sec id="s3-3">
      <title>Sequence Visualization</title>
      <p>At times, the user may need other ways of visualizing aspects of a sequence that go beyond the basic feature highlighting in the sequence window. First, the “Text Map” function, available from the menu item “Enzymes &gt; Text Map” or from a toolbar icon, allows the user to generate a customized text formatted representation of the sequence that includes multiple data tracks. Data tracks include restriction enzyme recognition sequences, position index, translation, bottom strand sequence, and feature regions. The user can then copy or save the window as a plain-text or rich-text (RTF) representation for archiving, sharing, or presenting the sequence. The “Translate” function generates a translation of a selected sequence region or CDS-type feature of a sequence. The translation can be formatted as single or three-letter codes, with optional spacing, line numbering and corresponding DNA sequence. The analysis includes the number of translated amino acids and the predicted molecular weight of the protein.</p>
      <p>Second, the “ORF Map” function, available from the menu item “ORFs &gt; ORF Map” generates a simple visualization of ATG start codons and amber, ochre and opal stop codons in all six frames of a sequence region. In order to aid in visualizing the most potentially relevant open reading frames, the user is given the option of specifying a minimum cutoff for highlighting regions between stop and start or between adjacent stop codons. The user can then click on any highlighted region to select the corresponding region of the parent sequence.</p>
      <p>Third, the sequence can be visualized using the “Graphic Map” function, available from “Enzymes &gt; Graphic Map” or from the toolbar. This function converts all of the sequence features and selected enzyme cut sites into a vector map (<xref rid="F2" ref-type="fig">Figure 2</xref>). The map can be either circular (<xref rid="F2" ref-type="fig">Figures 2A,B</xref>) or linear (<xref rid="F2" ref-type="fig">Figures 2C,D</xref>), depending on the nature of the sequence region depicted. Most visual elements of the map are customizable either with a mouse drag or using a “Configure” function within each map window. All feature formatting can be stored in the metadata of the parent sequence file, so subsequent graphical map windows preserve the user’s customizations. Feature and enzyme elements are linked to their parent sequence regions, so that mouse clicks on a graphical element cause the corresponding region to be selected in the parent. The menu function “Graphic Map + U” produces the same analysis, but adds the unique (cutting just one time) restriction enzymes in addition to the selected enzyme set.</p>
      <fig position="float" id="F2">
        <label>FIGURE 2</label>
        <caption>
          <p>Graphical maps of a sequence. <bold>(A)</bold> A circular map of pUC19, with colored features and restriction enzyme sites. <bold>(B)</bold> A different circular map of the same sequence file showing a variety of user-configurable display properties. <bold>(C)</bold> A linear map of a region of the same pUC19 file. <bold>(D)</bold> Another linear map of the same region, showing a variety of user-configurable display properties.</p>
        </caption>
        <graphic xlink:href="fbinf-02-818619-g002" position="float"/>
      </fig>
      <p>Each graphic window can be saved into four vector-based file formats: encapsulated postscript (eps), scalable vector graphics (svg), XML-based Power Point (pptx), and portable document format (pdf). By exporting into four different popular vector-graphic formats, ApE visualizations can be imported into many other programs that can represent vector graphics. For example, sequence maps can be read into Inkscape, Adobe Illustrator, OpenOffice Draw, or LibreOffice Draw for writing papers or lab reports, or posted directly to a website as svg for sharing on the web. Finally, the pptx format can be read into Power Point, Google Slides or Apple Keynote for presentations.</p>
    </sec>
    <sec id="s3-4">
      <title>Restriction Site Selection</title>
      <p>ApE has several tools, described in later sections, that use restriction enzyme sites as input. First, we describe how restriction enzyme sites are selected. The central switchboard for restriction site recognition in ApE is the enzyme selector dialog. Enzymes selected in this dialog become the currently “selected set” of enzymes that can be used in subsequent analysis or visualization tools. The selection dialog presents a central window with a list of enzyme names (<xref rid="F3" ref-type="fig">Figure 3A</xref>). Enzymes can be selected by clicking on each name, while shift-clicking will select the individual site uniquely. Enzyme comments are displayed as the pointer hovers over the list. At the top of the dialog is a window selection area, where the user can select any of the currently open sequence windows, and can elect to analyze either the entire sequence or just the currently selected region. ApE determines the number of recognition sites within the selection, which is displayed next to the enzyme name. Some restriction enzymes do not cut sites that overlap with <italic>E. coli</italic> Dam and Dcm methylase sites. ApE maintains a database of overlapping configurations that are not cut. Thus, the user can choose to calculate the number of enzyme sites as though the DNA is or is not from a methylated source.</p>
      <fig position="float" id="F3">
        <label>FIGURE 3</label>
        <caption>
          <p>The enzyme selector dialog and virtual agarose gels. <bold>(A)</bold> The enzyme selector dialog. <bold>(B)</bold> A simulated agarose gel of pUC19 digested with ApaLI and HindIII. The bands from each lane are shown in a table. <bold>(C)</bold> The same gel window, but showing detailed information for a single ApaLI band highlighted by hovering the mouse over the band.</p>
        </caption>
        <graphic xlink:href="fbinf-02-818619-g003" position="float"/>
      </fig>
      <p>Enzyme sites can be filtered using the “calculator” function below the enzyme selection list. The calculator works by setting a desired number of sites in the current window, as well as membership in an enzyme group. The enzymes that meet both the number and group membership filters are previewed as underlined in the selection list. The user can then choose to apply one of three selection operations: First, “Select” will add all of the underlined enzymes to the current selection. Second, “De-select” will remove all underlined enzymes from the current set. Finally, “AND” will select the intersection of the current set with the filtered set.</p>
      <p>Because the enzyme selector serves as a central place to select enzymes that are used in other tools, the dialog supplies a shortcut to several of these tools as a convenience. These appear at the bottom of the enzyme selection dialog. For example, the “Highlight” function will highlight the recognition sequences of the selected restriction enzyme set in the selection. In the X-ray window, these highlighted enzyme sequences show not only the recognition site, but also the cut sites, as a small tick mark upwards at the position of the top strand cut, and downwards for the bottom strand cut.</p>
      <p>The “Digest” function, available from the “Enzymes” menu or the toolbar, generates a simulated agarose gel that would be produced when the selected sequence is digested with the selected enzymes (<xref rid="F3" ref-type="fig">Figures 3B,C</xref>). Placing the pointer over a gel band brings forward a table in the analysis window and a miniature map of the features and digestion sites in the parental sequence. The table shows each band as the cut site location, band size and approximate mass percent of the total digest that the band represents, and the map highlights the sequence of the band. Clicking on a band will select the region of the sequence represented by the band. Gel bands can be used as inputs in the Gibson reaction dialog by drag-and-drop into the dialog, and can be used as inputs into the ligation dialog by simply clicking a band when the dialog is opened. The function “Digest With All” will generate a multi-lane gel window with each lane being a single digest with each selected enzyme.</p>
      <p>While simple single-lane or multiple-lane-single-digest gels can be generated from the selection dialog, more complex simulated agarose gels can be generated in a single step using the “Digestion Dialog”, available from the “Enzymes” menu or from the toolbar. In this dialog, each gel lane is represented by a row. Each row is either a DNA or ladder. Each DNA row can then be digested with single or multiple enzymes by activating a checkbox representing the specific enzyme column in the row. Partial digests can be accomplished by activating the "%" button in the enzyme selection region. Each enzyme can then be digested between 0 and 100%.</p>
      <p>For some applications it can be useful to identify sequences that can be mutated to generate a new restriction enzyme recognition site. ApE has two functions that do this kind of analysis. First, “Silent Sites” examines the currently selected region and identifies potential sites that maintain the reading frame. Second, “Add Diagnostic Site”. identifies new recognition sties independent of reading frames. Instead, it allows the user to specify a maximum number of base changes allowed for the generation of the site. In both analysis results, the sequence is live-linked to the parent sequence, so that clicking on any base representing a base in the sequence selects that base in the parent window.</p>
    </sec>
    <sec id="s3-5">
      <title>Molecular Techniques Simulators</title>
      <p>ApE includes simulators for the classic restriction-ligation reaction, Golden Gate assembly, Gibson assembly, Recombinase assembly, and PCR. These are available from the main menu “Tools”.</p>
      <sec id="s3-5-1">
        <title>Restriction Ligation</title>
        <p>The classic method for joining DNA fragments is <italic>via</italic> restriction digestion followed by DNA ligase. The ApE tool “Restriction-Ligation Assembler” is able to simulate this reaction with one to three DNA fragments (<xref rid="F4" ref-type="fig">Figure 4</xref>). The tool dialog initially prompts the user for a DNA sequence window or gel band. The information for that DNA populates the dialog with a picture of the overhanging end sequences, and a mini-map of the sequences in the fragment. If the fragments have compatible ends, the user can choose to complete the reaction, which will generate the product of the ligation as a new sequence window. The new sequence will have a comment section that lists all of the input plasmids and digestions used to generate the product. If the ends are not compatible, the dialog will not allow the reaction to be completed. The user can choose to reverse any of the fragments or modify the ends of the fragment with several common modification reactions.</p>
        <fig position="float" id="F4">
          <label>FIGURE 4</label>
          <caption>
            <p>The restriction-ligation assembler tool. <bold>(A)</bold> Graphic maps of the input sequence files for the planned reaction (left) and the product (right). <bold>(B)</bold> The Digestion Dialog is used to generate a virtual agarose gel of the two required DNA fragments: pU19 digested with XbaI and SalI, and a linear DNA fragment containing your favorite gene (YFG) digested with the same enzymes. The two fragments are then dragged into the Restriction-Ligation Assembler tool dialog. The tool then generates the product shown in <bold>(A)</bold>.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g004" position="float"/>
        </fig>
      </sec>
      <sec id="s3-5-2">
        <title>Golden Gate</title>
        <p>The Golden Gate reaction is similar to a basic restriction-ligation reaction; however, the use of type IIS restriction enzymes adds distinct requirements and thus ApE has distinct tools for dealing with this type of reaction. Unlike traditional ligation reactions, Golden Gate reactions can join as many fragments as unique overhanging sequences can be designed. In fact, successful 35-fragment reactions have been demonstrated with empirically validated orthogonal overhangs (<xref rid="B16" ref-type="bibr">Pryor et al., 2020</xref>). ApE has distinct workflows for designing Golden Gate reactions to create a defined construct and assembling a Golden Gate reaction using existing constructs.</p>
        <p>The ApE “Golden Gate Designer” tool assists the user in the design of sequences to join DNA fragments (<xref rid="F5" ref-type="fig">Figure 5</xref>). The dialog gives the user a choice of available type IIS enzymes, and then the option of selecting DNA fragments to be ligated. The algorithm then uses a random walk to search for a set of the most orthogonal overhangs, and presents a set of PCR primers to generate them. Because the algorithm can get caught in local minima, the user is given the option to restart the search with a new random seed if a non-optimal solution was found. A new sequence window is created containing the desired reaction product, including new features containing the primer sequences. These primer sequences are also added to the file comment, both as a list of PCR reactions including primer pairs and templates, as well as a list of primers in a format compatible with online oligonucleotide ordering systems.</p>
        <fig position="float" id="F5">
          <label>FIGURE 5</label>
          <caption>
            <p>The Golden Gate Designer tool. <bold>(A)</bold> Graphic maps of the input sequences (left) and output sequence (right). <bold>(B)</bold> The Golden Gate Designer is first used to specify two PCR products: YFG and pUC19. The tool then designs four PCR primers and the sequence of the Golden Gate reaction, the product sequence shown in <bold>(A)</bold>.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g005" position="float"/>
        </fig>
        <p>The “Golden Gate Assembler” tool simulates the assembly of the fragments once they have been designed (<xref rid="F6" ref-type="fig">Figure 6</xref>). The user chooses one to three type IIS restriction enzymes. Once an enzyme has been selected, the assembler searches open sequences for any fragments that are flanked by oppositely oriented sites and for compatible overhang sequences. The assembler then gives the user a drop-down list of all possible fragments that are in a closed circular assembly. If multiple fragments are possible at a given position, a new dropdown menu is presented to the user. The process is repeated until the circle is closed. The user can choose to generate the conceptual product in a new sequence window. The new window will contain a sequence comment listing all of the plasmid sequence files used in the Golden Gate reaction that generated that sequence.</p>
        <fig position="float" id="F6">
          <label>FIGURE 6</label>
          <caption>
            <p>The Golden Gate Assembler tool. <bold>(A)</bold> A graphic map of two SapI restriction fragments as designed in <xref rid="F5" ref-type="fig">Figure 5</xref> to be used in a Golden Gate reaction (left), and the product of the reaction (right). <bold>(B)</bold> The Golden Gate Assembler shows the chosen SapI restriction enzyme, the selected input fragments and the three-base overhangs of each SapI cut.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g006" position="float"/>
        </fig>
      </sec>
      <sec id="s3-5-3">
        <title>Gibson Assembly</title>
        <p>A third, very flexible and effective, DNA assembly method is based on long homologous end hybridization. This class of methods includes Gibson assembly (<xref rid="B9" ref-type="bibr">Gibson et al., 2009</xref>), sequence- and ligation-independent cloning (SLIC) assembly (<xref rid="B12" ref-type="bibr">Li and Elledge, 2007</xref>), circular polymerase extension cloning (CPEC) assembly (<xref rid="B17" ref-type="bibr">Quan and Tian, 2009</xref>), and SLiCE assembly (<xref rid="B27" ref-type="bibr">Zhang et al., 2012</xref>).</p>
        <p>ApE’s “Gibson Designer” tool has a similar input to the “Golden Gate Designer” tool, with fragments chosen from currently open sequences (<xref rid="F7" ref-type="fig">Figure 7</xref>). Also similar to the “Golden Gate Designer” tool, a gel band can be added as a fragment <italic>via</italic> a drag and drop motion. Each fragment can be designed as a PCR with additional tails, a PCR without additional tails or a stand-alone fragment without PCR primers. Gel bands are automatically set to be non-PCR fragments. Once all of the fragments are selected, the user is prompted to review and modify the homologous overlap at each fragment junction. Each junction is displayed at the top of the review window, showing the new forward and reverse primers, and the template sequences. The overlap is generated by adding bases to the 5′ end of the reverse primer until a minimum melting temperature is reached for the overlap. The user can choose to incorporate new, non-templated bases into the gap between the fragments. If gel bands are used as fragments, the user can select how the reaction will deal with single-stranded overhangs by setting the exonuclease direction to “5′ Exo” or “3′ Exo” in a user defaults option. Like in the “Golden Gate Designer,” the new sequence window will contain all newly designed primers as sequence features and will list all PCR reactions and primers in the file comments section.</p>
        <fig position="float" id="F7">
          <label>FIGURE 7</label>
          <caption>
            <p>The Gibson Designer tool. <bold>(A)</bold> Graphic maps of the two input sequences (left) and the output sequence (right). <bold>(B)</bold> The Gibson Designer is used to specify two PCR products containing YFG and pUC19. The tool then steps through both Gibson junctions, allowing fine-grained design of each. Finally, the tool generates the sequence shown on the right in <bold>(A)</bold>.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g007" position="float"/>
        </fig>
      </sec>
      <sec id="s3-5-4">
        <title>Recombinase Mediated Joining</title>
        <p>A modular assembly method is recombinase-mediated assembly. The most popular of these methods is the Gateway cloning system from Invitrogen (a brand of ThermoFisher). The ApE “Recombination Assembler” tool (<xref rid="F8" ref-type="fig">Figure 8</xref>) functions very similarly to the “Golden Gate Reaction” tool. The user is first asked to choose a reaction prototype, for example a “BP reaction (1–2)” combines a fragment ending with attB1 and attB2 sites with a fragment containing attP1 and attP2 sites. Once a prototype is chosen, the algorithm searches all open windows to find fragments that contain the correct sites in the correct orientation to be a substrate for the chosen reaction. If multiple compatible sequences are found for a fragment, the user can choose between the options <italic>via</italic> the drop-down menu. Once all required sequences are found and selected, the simulated reaction generates a product plasmid. As for other reaction simulators, a list of the input sequences and the reaction performed is added to the sequence comment box of the product.</p>
        <fig position="float" id="F8">
          <label>FIGURE 8</label>
          <caption>
            <p>Gateway reaction. <bold>(A)</bold> Graphic map of the input sequences for a Gateway BP reaction (left) and the product of the recombination (right). <bold>(B)</bold> The Recombination Assembler tool is used to select the two input sequences (Insert and Backbone). The tool then generates the product sequence, represented by the map in <bold>(A)</bold>.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g008" position="float"/>
        </fig>
        <p>Although most users only perform the basic Gateway reactions as described in the product literature, the Gateway recombination reaction is very flexible and has been adapted to specific use cases. For example, the pHELLSGATE plasmid is designed to use a PCR fragment containing attB1 and attB2 ends to recombine simultaneously into two attP1-attP2 sites to generate a hairpin silencing construct for use in Arabidopsis. Similarly, pWormgatePro allows users to build a similar hairpin construct for <italic>C. elegans</italic> RNAi using an LR-recombination reaction. ApE allows users to design new reaction prototypes to accomplish any DNA recombination reaction in silico. The “Recombination Reaction Editor” dialog allows new prototypes to be created If a user wants to design recombination reactions involving a different recombinase or integrase, new recombinase reaction sites can be added using the reaction editor.</p>
      </sec>
      <sec id="s3-5-5">
        <title>PCR</title>
        <p>Amplification by PCR is the most critical method in molecular biology laboratories. The ApE tool “PCR Reaction” uses PCR primer databases, searches sequences for primer binding sites, and simulates a PCR reaction with a given set of primers (<xref rid="F9" ref-type="fig">Figure 9</xref>). A major role of the tool is to use a primer database to search a template sequence for primer binding sites. The database can be loaded from a text file formatted as an ApE feature library file. Alternatively, a user can add primers to the current database by loading “primer_bind” features in a sequence file, or by pasting sequences from the system clipboard. Sequences in the system clipboard can be formatted as simple DNA sequences or as tab delimited name-sequence pairs, each on a new line.</p>
        <fig position="float" id="F9">
          <label>FIGURE 9</label>
          <caption>
            <p>PCR Reaction tool. <bold>(A)</bold> A graphic map of the Golden Gate product from <xref rid="F5" ref-type="fig">Figure 5</xref> (left), which can be used as a PCR template. A graphic map of a PCR product generated with the PCR tool (right) <bold>(B)</bold> The PCR reaction tool shows a map of the template in the center, and a table of possible PCR products at the top. Selecting “Fwd_primer_1” and “Rev_primer_1” then generates a virtual PCR product. A graphic map of this product is shown in <bold>(A)</bold>.</p>
          </caption>
          <graphic xlink:href="fbinf-02-818619-g009" position="float"/>
        </fig>
        <p>Binding is determined by a user-defined minimum annealing length, starting from the 3′ base of the primer. The user can allow up to ten mismatches in the primer while still requiring the minimum number of matching bases, and define the maximum number of bases that can be mismatched specifically at the 3′ end of the sequence. By default, the tool then shows a list of primers that match at a single site within the template. The list has data columns: primer name, primer sequence, binding direction, distance of the 3′ end from the current selection, location of the 3′ end in the template sequence, melting temperature of the template-matching region, melting temperature of the full primer sequence, number of mismatches to the template (not including any 5′ extension), and number of matches to the template. Primers in the list can then be selected or deselected by the user. Selected primers are shown in their approximate location and direction on a mini-map diagram in the center of the window. Finally, the user can activate a “Select Primer Pairs” selection mode, which limits the current selection to two facing primer pairs. These primers can be used to generate a new linear sequence window containing the simulated PCR product.</p>
        <p>In addition to working with existing primer sequences, ApE can assist the user in designing new primers. First, the user can simply select a region of text while noting the melting temperature of the sequence. Alternatively, there is a “Find Primers … ” tool that scans the selection for regions that meet a user-defined minimum and maximum length, melting temperature, percent GC, and 3′ GC clamp. Oligonucleotide primers can be filtered to exclude self-hybridizing sequences, adjacent hybridizing bases and 3′-end hybridization. If the user enters a target primer sequence that the primer should be compatible with, the filter will also apply a cross-hybridization filter on the same parameters as well. While a good first pass filter for primer binding sites, the tool is not as thorough or as flexible as a dedicated primer finding algorithm like Primer3 (<xref rid="B11" ref-type="bibr">Koressaar and Remm, 2007</xref>; <xref rid="B22" ref-type="bibr">Untergasser et al., 2012</xref>).</p>
      </sec>
    </sec>
    <sec id="s3-6">
      <title>Analysis Tools</title>
      <p>In most molecular pipelines DNA must be analyzed to determine if the actual DNA matches the conceptual sequence. ApE can display Sanger sequencing reads and align them to a reference sequence using the “Align Sequences” tool (<xref rid="F10" ref-type="fig">Figure 10A</xref>). The alignment display has several functions to aid in interpreting any mismatches. First, mismatches are highlighted in red text for easy identification. Next, any CDS feature in the reference sequence displays its translation above the reference. For any sequence that is an abi window, the user can place the mouse pointer above any base in the alignment display and a semi-opaque window will appear showing the corresponding region of the abi trace, so that the user can determine whether a mismatch is potentially due to a mixed fluorescence signal that led to a miscalled base (<xref rid="F10" ref-type="fig">Figure 10B</xref>). The trace window additionally shows a translation of the codon centered on the base at the pointer, allowing the user to quickly determine if a mutated base leads to a non-synonymous codon. To assist in documenting the sequencing, ApE can embed abi files into an ApE sequence file to associate a sequence read with its reference sequence. Sanger sequence windows can also be printed or saved to pdf formatted files. Printing reformats the file by breaking it into a user-specified number of lines per page.</p>
      <fig position="float" id="F10">
        <label>FIGURE 10</label>
        <caption>
          <p>Alignment of a reference sequence to a Sanger sequence. <bold>(A)</bold> An alignment of a reference sequence (first line) to an abi output of a Sanger sequencing reaction (second line). The mouse is placed over base 677 in the abi sequence to show a floating window containing the abi data. <bold>(B)</bold> The source abi trace file of the alignment in <bold>(A)</bold>.</p>
        </caption>
        <graphic xlink:href="fbinf-02-818619-g010" position="float"/>
      </fig>
      <p>When working with DNA from a genomic source, users will often want to identify single nucleotide polymorphisms (SNPs). A Derived Cleaved Amplified Polymorphic Sequences (dCAPS) PCR assay is a popular way to genotype SNPs. In simple terms, a dCAPS assay uses a PCR primer that has a small number of base differences from the template near the 3′ end adjacent to the polymorphic base. The primer-induced mutations are designed so that products generated from one allele have a restriction site while the other allele is lacking the site. Typically, one allele generates a 250 bp band, while the other allele generates a pair of 200 and 50 bp fragments. ApE has a “dCAPS calculator” tool to quickly design dCAPS primers. The user simply selects the base in the reference sequence that differs in the polymorphism. The tool asks the user to identify the alternate allele base, and then leads the user through the design of dCAPS primers.</p>
      <p>The National Center for Biotechnology Information (NCBI) is a critical resource to molecular biologists. ApE provides a direct internet link to two NCBI resources: BLAST and Entrez query. The Basic Local Alignment Search Tool (BLAST) (<xref rid="B2" ref-type="bibr">Altschul et al., 1990</xref>), provided by NCBI allows a user to query the NCBI public databases to identify the potential source species of a sequence, to identify relevant features within a sequence, or to find orthologous or paralogous sequences. The “BLAST Sequences at NCBI” tool submits a sequence directly to NCBI <italic>via</italic> the web (<xref rid="B4" ref-type="bibr">BLAST, 2021</xref>) and returns the BLAST result to the default web browser. Alternatively, the “Download Sequences from NCBI” tool retrieves sequences from NCBI using a keyword search.</p>
      <p>Many molecular reactions require DNA in specific molar ratios. For example, bimolecular ligations are often performed at a 3:1 insert to vector ratio. Since the input DNA is usually different lengths and at different concentrations, molecular biologists often need to repeatedly calculate the molarity of different DNA solutions. ApE includes a molecular ratio calculator which can store the molar ratios required in frequently used reactions and can calculate the required volumes of each DNA fragment, given the sequence length and measured concentration.</p>
      <p>Finally, ApE has several tools that provide functions that may be useful to a more limited user base. The “sgRNA Analysis” tool allows a user to screen sequences against a set of rules (<xref rid="B5" ref-type="bibr">Doench et al., 2014</xref>) for improved Cas9-CRISPR guide RNAs. The “Insert Repeat” tool allows a user to quickly insert a given number of exact repeats of a short sequence. The “Multi-Cre Recombination” tool allows a user to simulate the MultiPrime Cre-based recombination system from (<xref rid="B13" ref-type="bibr">Mansouri et al., 2016</xref>). The “Palette Generator” tool generates a set of visually coordinated colors by selecting a set of colors evenly spaced in a circular hue space with random luminance and saturation. The tool includes a filter to limit the color luminance to provide a contrast ratio greater than 3 with both black and white, so that text displayed over the color will be readable. This tool can be used to generate a set of feature background highlight colors that are appealing and functional. The “Speak Text” tool is available on Mac and Windows systems and provides an audio reading of selected text. Finally, there is a simple “Calculator” tool, which evaluates a mathematical expression.</p>
    </sec>
  </sec>
  <sec id="s4">
    <title>Discussion (Scalability and Limitations)</title>
    <p>ApE is distributed free of charge and can be downloaded at <ext-link xlink:href="https://jorgensen.biology.utah.edu/wayned/ape/" ext-link-type="uri">https://jorgensen.biology.utah.edu/wayned/ape/</ext-link>, but it is not distributed as true open-source software. It is distributed with most of the rights of open-source software, including rights to inspect and modify the source code. However, no right is granted to redistribute modified source. The Tcl source code is archived at <ext-link xlink:href="https://github.com/mwdavis2/ApE" ext-link-type="uri">https://github.com/mwdavis2/ApE</ext-link>. In the event that a community member wishes to propose a code addition or bug fix for incorporation into the centrally distributed version, they may initiate a pull request and contact the author to agree to a contributor license agreement. This key distinction from true open-source projects was made consciously to prevent project forking which we feel is inevitable with redistribution of modified versions. For small projects, especially projects lacking a user interface, forking can be a benefit. Each new user can customize the software to meet their needs, and new users not interested in modifying the source can chose from a wide variety of flavors of the code that might meet their needs. However, with a more complex program involving a user interface, forking runs three risks: 1) diluting the user base among multiple incompatible versions; 2) introducing inconsistent and unexpected user interface elements; and 3) having inconsistent quality checks on different versions of the software. With a single distribution source, there are no competing versions. Further, there is a single decision point for any aesthetic choices in the user interface. Finally, all bugs are referenced to a single version and can be corrected without needing to distribute potentially incompatible patch files to fix bugs that may or may not exist in different distributions. However, one of the strong suits of ApE is that many of its features and user interfaces have been inspired by input from users requesting new or modified functionality.</p>
  </sec>
</body>
<back>
  <ack>
    <p>Thanks to Mark Palfreyman, Matthew Rich, David Almanzar, and Matt Schwartz for comments on the manuscript.</p>
  </ack>
  <sec sec-type="data-availability" id="s5">
    <title>Data Availability Statement</title>
    <p>Source code for ApE is archived at <ext-link xlink:href="https://github.com/mwdavis2/ApE" ext-link-type="uri">https://github.com/mwdavis2/ApE</ext-link>. The application can be downloaded from <ext-link xlink:href="https://jorgensen.biology.utah.edu/wayned/ape/" ext-link-type="uri">https://jorgensen.biology.utah.edu/wayned/ape/</ext-link>.</p>
  </sec>
  <sec id="s6">
    <title>Author Contributions</title>
    <p>MWD developed, designed and programmed the software. MWD wrote the manuscript. MWD and EJ revised the manuscript. Funding acquisition: EJ. All authors read and approved the manuscript.</p>
  </sec>
  <sec id="s7">
    <title>Funding</title>
    <p>EJ is an Investigator and MWD is a research scientist of the Howard Hughes Medical Institute (<ext-link xlink:href="http://HHMI.org" ext-link-type="uri">HHMI.org</ext-link>). This work was funded by NIH to EJ (<ext-link xlink:href="http://NIH.gov" ext-link-type="uri">NIH.gov</ext-link>), including grant NIGMS 2R01GM095817 and NINDS 5R01NS034307. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</p>
  </sec>
  <sec sec-type="COI-statement" id="s8">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s9">
    <title>Publisher’s Note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="webpage"><collab>AcaClone</collab> (<year>2021</year>). <article-title>pDRAW32 AcaClone</article-title>. <comment>Available at: <ext-link xlink:href="https://www.acaclone.com/" ext-link-type="uri">https://www.acaclone.com/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S. F.</given-names></name><name><surname>Gish</surname><given-names>W.</given-names></name><name><surname>Miller</surname><given-names>W.</given-names></name><name><surname>Myers</surname><given-names>E. W.</given-names></name><name><surname>Lipman</surname><given-names>D. J.</given-names></name></person-group> (<year>1990</year>). <article-title>Basic Local Alignment Search Tool</article-title>. <source>J. Mol. Biol.</source>
<volume>215</volume>, <fpage>403</fpage>–<lpage>410</lpage>. <pub-id pub-id-type="doi">10.1016/S0022-2836(05)80360-2</pub-id>
<pub-id pub-id-type="pmid">2231712</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="webpage"><collab>Benchling</collab> (<year>2021</year>). <article-title>Benchling</article-title>. <comment>Available at: <ext-link xlink:href="https://www.benchling.com/academic/" ext-link-type="uri">https://www.benchling.com/academic/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="webpage"><collab>BLAST</collab> (<year>2021</year>). <article-title>Common URL API</article-title>. <comment>Available at: <ext-link xlink:href="https://ncbi.github.io/blast-cloud/dev/api.html" ext-link-type="uri">https://ncbi.github.io/blast-cloud/dev/api.html</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Doench</surname><given-names>J. G.</given-names></name><name><surname>Hartenian</surname><given-names>E.</given-names></name><name><surname>Graham</surname><given-names>D. B.</given-names></name><name><surname>Tothova</surname><given-names>Z.</given-names></name><name><surname>Hegde</surname><given-names>M.</given-names></name><name><surname>Smith</surname><given-names>I.</given-names></name><etal/></person-group> (<year>2014</year>). <article-title>Rational Design of Highly Active sgRNAs for CRISPR-Cas9-Mediated Gene Inactivation</article-title>. <source>Nat. Biotechnol.</source>
<volume>32</volume>, <fpage>1262</fpage>–<lpage>1267</lpage>. <pub-id pub-id-type="doi">10.1038/nbt.3026</pub-id>
<pub-id pub-id-type="pmid">25184501</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Douglas</surname><given-names>S. E.</given-names></name></person-group> (<year>1995</year>). <article-title>DNA Strider. An Inexpensive Sequence Analysis Package for the Macintosh</article-title>. <source>Mol. Biotechnol.</source>
<volume>3</volume>, <fpage>37</fpage>–<lpage>45</lpage>. <pub-id pub-id-type="doi">10.1007/BF02821333</pub-id>
<pub-id pub-id-type="pmid">7606503</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="webpage"><collab>GenBeans</collab> (<year>2016</year>). <article-title>Gene Infinity LLC</article-title>. <comment>Available at: <ext-link xlink:href="http://www.genbeans.org/" ext-link-type="uri">http://www.genbeans.org/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="webpage"><collab>Gene Construction Kit</collab> (<year>2021</year>). <article-title>Gene Construction Kit (GCK) Textco BioSoftware</article-title>. <comment>Available at: <ext-link xlink:href="http://www.textco.com/gene-construction-kit.php" ext-link-type="uri">http://www.textco.com/gene-construction-kit.php</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gibson</surname><given-names>D. G.</given-names></name><name><surname>Young</surname><given-names>L.</given-names></name><name><surname>Chuang</surname><given-names>R. Y.</given-names></name><name><surname>Venter</surname><given-names>J. C.</given-names></name><name><surname>Hutchison</surname><given-names>C. A.</given-names></name><name><surname>Smith</surname><given-names>H. O.</given-names></name></person-group> (<year>2009</year>). <article-title>Enzymatic Assembly of DNA Molecules up to Several Hundred Kilobases</article-title>. <source>Nat. Methods</source>
<volume>6</volume>, <fpage>343</fpage>–<lpage>345</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.1318</pub-id>
<pub-id pub-id-type="pmid">19363495</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>A.</given-names></name></person-group> (<year>2021</year>). <article-title>Resource Hacker</article-title>. <comment>Available at: <ext-link xlink:href="http://www.angusj.com/resourcehacker/" ext-link-type="uri">http://www.angusj.com/resourcehacker/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koressaar</surname><given-names>T.</given-names></name><name><surname>Remm</surname><given-names>M.</given-names></name></person-group> (<year>2007</year>). <article-title>Enhancements and Modifications of Primer Design Program Primer3</article-title>. <source>Bioinformatics</source>
<volume>23</volume>, <fpage>1289</fpage>–<lpage>1291</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btm091</pub-id>
<pub-id pub-id-type="pmid">17379693</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>M. Z.</given-names></name><name><surname>Elledge</surname><given-names>S. J.</given-names></name></person-group> (<year>2007</year>). <article-title>Harnessing Homologous Recombination <italic>In Vitro</italic> to Generate Recombinant DNA <italic>via</italic> SLIC</article-title>. <source>Nat. Methods</source>
<volume>4</volume>, <fpage>251</fpage>–<lpage>256</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth1010</pub-id>
<pub-id pub-id-type="pmid">17293868</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mansouri</surname><given-names>M.</given-names></name><name><surname>Bellon-Echeverria</surname><given-names>I.</given-names></name><name><surname>Rizk</surname><given-names>A.</given-names></name><name><surname>Ehsaei</surname><given-names>Z.</given-names></name><name><surname>Cianciolo Cosentino</surname><given-names>C.</given-names></name><name><surname>Silva</surname><given-names>C. S.</given-names></name><etal/></person-group> (<year>2016</year>). <article-title>Highly Efficient Baculovirus-Mediated Multigene Delivery in Primary Cells</article-title>. <source>Nat. Commun.</source>
<volume>7</volume>, <fpage>11529</fpage>. <pub-id pub-id-type="doi">10.1038/ncomms11529</pub-id>
<pub-id pub-id-type="pmid">27143231</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Nadkarni</surname><given-names>A. P.</given-names></name></person-group> (<year>2021</year>). <article-title>Tclkits with TWAPI</article-title>. <comment>Available at: <ext-link xlink:href="https://sourceforge.net/projects/twapi/files/Tcl%20binaries/Tclkits%20with%20TWAPI/" ext-link-type="uri">https://sourceforge.net/projects/twapi/files/Tcl%20binaries/Tclkits%20with%20TWAPI/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Perez</surname><given-names>F.</given-names></name></person-group> (<year>2021</year>). <article-title>Serial Cloner. Serial Basics</article-title>. <comment>Available at: <ext-link xlink:href="http://serialbasics.free.fr/Serial_Cloner.html" ext-link-type="uri">http://serialbasics.free.fr/Serial_Cloner.html</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pryor</surname><given-names>J. M.</given-names></name><name><surname>Potapov</surname><given-names>V.</given-names></name><name><surname>Kucera</surname><given-names>R. B.</given-names></name><name><surname>Bilotti</surname><given-names>K.</given-names></name><name><surname>Cantor</surname><given-names>E. J.</given-names></name><name><surname>Lohman</surname><given-names>G. J. S.</given-names></name></person-group> (<year>2020</year>). <article-title>Enabling One-Pot Golden Gate Assemblies of Unprecedented Complexity Using Data-Optimized Assembly Design</article-title>. <source>PLOS ONE</source>
<volume>15</volume>, <fpage>e0238592</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pone.0238592</pub-id>
<pub-id pub-id-type="pmid">32877448</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Quan</surname><given-names>J.</given-names></name><name><surname>Tian</surname><given-names>J.</given-names></name></person-group> (<year>2009</year>). <article-title>Circular Polymerase Extension Cloning of Complex Gene Libraries and Pathways</article-title>. <source>PLOS ONE</source>
<volume>4</volume>, <fpage>e6441</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pone.0006441</pub-id>
<pub-id pub-id-type="pmid">19649325</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sayers</surname><given-names>E. W.</given-names></name><name><surname>Cavanaugh</surname><given-names>M.</given-names></name><name><surname>Clark</surname><given-names>K.</given-names></name><name><surname>Ostell</surname><given-names>J.</given-names></name><name><surname>Pruitt</surname><given-names>K. D.</given-names></name><name><surname>Karsch-Mizrachi</surname><given-names>I.</given-names></name></person-group> (<year>2019</year>). <article-title>GenBank</article-title>. <source>Nucleic Acids Res.</source>
<volume>47</volume>, <fpage>D94</fpage>–<lpage>D99</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gky989</pub-id>
<pub-id pub-id-type="pmid">30365038</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="webpage"><collab>SnapGene</collab> (<year>2021</year>). <article-title>Snapgene</article-title>. <comment>Available at: <ext-link xlink:href="https://www.snapgene.com/" ext-link-type="uri">https://www.snapgene.com/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Stein</surname><given-names>L.</given-names></name></person-group> (<year>2021</year>). <article-title>gff3 Specification. GitHub</article-title>. <comment>Available at: <ext-link xlink:href="https://github.com/The-Sequence-Ontology/Specifications" ext-link-type="uri">https://github.com/The-Sequence-Ontology/Specifications</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Thoyts</surname><given-names>P.</given-names></name></person-group> (<year>2021</year>). <article-title>Patthoyts/Tclkit</article-title>. <comment>Available at: <ext-link xlink:href="https://github.com/patthoyts/tclkit" ext-link-type="uri">https://github.com/patthoyts/tclkit</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Untergasser</surname><given-names>A.</given-names></name><name><surname>Cutcutache</surname><given-names>I.</given-names></name><name><surname>Koressaar</surname><given-names>T.</given-names></name><name><surname>Ye</surname><given-names>J.</given-names></name><name><surname>Faircloth</surname><given-names>B. C.</given-names></name><name><surname>Remm</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2012</year>). <article-title>Primer3--new Capabilities and Interfaces</article-title>. <source>Nucleic Acids Res.</source>
<volume>40</volume>, <fpage>e115</fpage>. <pub-id pub-id-type="doi">10.1093/nar/gks596</pub-id>
<pub-id pub-id-type="pmid">22730293</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Walzer</surname><given-names>K.</given-names></name></person-group> (<year>2021</year>). <article-title>Tcl Core Team, and Culler, M. Tcl/Tk</article-title>. <comment>Available at: <ext-link xlink:href="https://github.com/tcltk" ext-link-type="uri">https://github.com/tcltk</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Werner</surname><given-names>C.</given-names></name></person-group> (<year>2021</year>). <article-title>AndroWish</article-title>. <comment>Available at: <ext-link xlink:href="https://www.androwish.org/index.html/home" ext-link-type="uri">https://www.androwish.org/index.html/home</ext-link> (Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Wippler</surname><given-names>J.-C.</given-names></name></person-group> (<year>2021</year>). <article-title>TclKit</article-title>. <comment>Available at: <ext-link xlink:href="https://code.google.com/archive/p/tclkit/" ext-link-type="uri">https://code.google.com/archive/p/tclkit/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>York</surname><given-names>I.</given-names></name></person-group> (<year>2021</year>). <article-title>XPlasMap</article-title>. <comment>Available at: <ext-link xlink:href="http://www.iayork.com/XPlasMap/" ext-link-type="uri">http://www.iayork.com/XPlasMap/</ext-link>
</comment>(<comment>Accessed April 21, 2021)</comment>. </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y.</given-names></name><name><surname>Werling</surname><given-names>U.</given-names></name><name><surname>Edelmann</surname><given-names>W.</given-names></name></person-group> (<year>2012</year>). <article-title>SLiCE: a Novel Bacterial Cell Extract-Based DNA Cloning Method</article-title>. <source>Nucleic Acids Res.</source>
<volume>40</volume>, <fpage>e55</fpage>. <pub-id pub-id-type="doi">10.1093/nar/gkr1288</pub-id>
<pub-id pub-id-type="pmid">22241772</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

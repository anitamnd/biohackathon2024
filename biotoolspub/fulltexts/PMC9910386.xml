<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Transl Vis Sci Technol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Transl Vis Sci Technol</journal-id>
    <journal-id journal-id-type="publisher-id">TVST</journal-id>
    <journal-title-group>
      <journal-title>Translational Vision Science &amp; Technology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2164-2591</issn>
    <publisher>
      <publisher-name>The Association for Research in Vision and Ophthalmology</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9910386</article-id>
    <article-id pub-id-type="pmid">36745440</article-id>
    <article-id pub-id-type="doi">10.1167/tvst.12.2.6</article-id>
    <article-id pub-id-type="publisher-id">TVST-22-4965</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Data Science</subject>
      </subj-group>
      <subj-group subj-group-type="category">
        <subject>Data Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyVisualFields: A Python Package for Visual Field Analysis</article-title>
      <alt-title alt-title-type="runhead">PyVisualFields: Package for Visual Field Analysis</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Eslami</surname>
          <given-names>Mohammad</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kazeminasab</surname>
          <given-names>Saber</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sharma</surname>
          <given-names>Vishal</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Yangjiani</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fazli</surname>
          <given-names>Mojtaba</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Mengyu</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zebardast</surname>
          <given-names>Nazlee</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Elze</surname>
          <given-names>Tobias</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
      <aff id="aff1"><label>1</label>Harvard Ophthalmology AI Lab, Schepens Eye Research Institute of Massachusetts Eye and Ear, Harvard Medical School, Boston, MA, USA</aff>
      <aff id="aff2"><label>2</label>Massachusetts Eye and Ear Infirmary, Harvard Medical School, Boston, MA, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label><bold>Correspondence</bold>: Mohammad Eslami, Harvard Ophthalmology AI Lab, Schepens Eye Research Institute of Massachusetts Eye and Ear, Harvard Medical School, 20 Staniford Street, Boston, MA 02114, USA. e-mail: <email>mohammad_eslami@meei.harvard.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>06</day>
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <volume>12</volume>
    <issue>2</issue>
    <elocation-id>6</elocation-id>
    <history>
      <date date-type="accepted">
        <day>24</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="received">
        <day>21</day>
        <month>7</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright 2023 The Authors</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbyncndlicense">https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref>
        <license-p>This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.</license-p>
      </license>
    </permissions>
    <self-uri xlink:title="pdf" xlink:href="tvst-12-2-6.pdf"/>
    <abstract>
      <sec>
        <title>Purpose</title>
        <p>Artificial intelligence (AI) methods are changing all areas of research and have a variety of capabilities of analysis in ophthalmology, specifically in visual fields (VFs) to detect or predict vision loss progression. Whereas most of the AI algorithms are implemented in Python language, which offers numerous open-source functions and algorithms, the majority of algorithms in VF analysis are offered in the R language. This paper introduces <italic toggle="yes">PyVisualFields</italic>, a developed package to address this gap and make available VF analysis in the Python language.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p>For the first version, the R libraries for VF analysis provided by <italic toggle="yes">vfprogression</italic> and <italic toggle="yes">visualFields</italic> packages are analyzed to define the overlaps and distinct functions. Then, we defined and translated this functionality into Python with the help of the wrapper library <italic toggle="yes">rpy2</italic>. Besides maintaining, the subsequent versions’ milestones are established, and the third version will be R-independent.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>The developed Python package is available as open-source software via the GitHub repository and is ready to be installed from <italic toggle="yes">PyPI</italic>. Several <italic toggle="yes">Jupyter</italic> notebooks are prepared to demonstrate and describe the capabilities of the <italic toggle="yes">PyVisualFields</italic> package in the categories of data presentation, normalization and deviation analysis, plotting, scoring, and progression analysis.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>We developed a Python package and demonstrated its functionality for VF analysis and facilitating ophthalmic research in VF statistical analysis, illustration, and progression prediction.</p>
      </sec>
      <sec>
        <title>Translational Relevance</title>
        <p>Using this software package, researchers working on VF analysis can more quickly create algorithms for clinical applications using cutting-edge AI techniques.</p>
      </sec>
    </abstract>
    <kwd-group>
      <kwd>software package</kwd>
      <kwd>visual field</kwd>
      <kwd>python</kwd>
      <kwd>R</kwd>
      <kwd>progression</kwd>
    </kwd-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="sec1">
    <title>Introduction</title>
    <p>Standard automated perimetry visual field (VF) examination is one of the most widely used quantitative methods to evaluate the visual functions of the eyes, to detect and monitor their progress.<xref rid="bib1" ref-type="bibr"><sup>1</sup></xref> Whereas cataract and myopia are more common than glaucoma, glaucoma is the most common cause of irreversible blindness in the world that changes the structure of the optic nerve head (ONH) and causes retinal ganglion cell (RGC) death<xref rid="bib2" ref-type="bibr"><sup>2</sup></xref> which affects the visual function, showing specific defects in VF tests.<xref rid="bib3" ref-type="bibr"><sup>3</sup></xref> It is crucial to detect early glaucoma to prevent irreversible vision loss.</p>
    <p>Artificial intelligence (AI) and deep learning (DL) is an emerging area of science that is revolutionizing the development of almost every field that it touches. The AI algorithms have made the analysis of the data much simpler, and it has also brought new tools for further analysis and understanding of the features behind data. Ophthalmology is one of the areas in which AI can help to enhance better capability in the detection, prediction, and progression prediction of ocular diseases like glaucoma. Most AI algorithms are offered in Python, an open-source programming language. It is expanding extremely fast with the easy contribution of software developers around the world. However, the functions to analyze the VF are mainly offered in the R language. There are some wrapping methodologies for using R scripts and libraries in Python (e.g. pyRserve, rpy2 [comparable to R package <italic toggle="yes">reticulate</italic> for calling Python scripts/commands in R]), however, changing the scripts to make use of them takes time, especially when transferring data and variables between R and Python and addressing several data-structures is required. Hence, it is useful to make available functions to analyze the VF in python to have a broader audience of researchers and help to further develop VF analysis approaches.</p>
    <p>In this paper, we offer a python package with more than 50 functions to make VF analysis available for Python developers. The first version is based on the previously developed collection of tools in R by Elze et al. (so-called: <italic toggle="yes">vfprogression</italic><xref rid="bib4" ref-type="bibr"><sup>4</sup></xref>) and Marin-Franch et al. (so-called: <italic toggle="yes">visualFields</italic>).<xref rid="bib5" ref-type="bibr"><sup>5</sup></xref><sup>,</sup><xref rid="bib6" ref-type="bibr"><sup>6</sup></xref> We present the functions in four categories including predefined data, VF demonstration, scoring, and progression analysis, as well as normalization and deviation analysis.</p>
    <p>This developed library, named <italic toggle="yes">PyVisualFields</italic>, and used in our recent research to investigate the clinical applicability of deep learning models for predicting the ocular VFs while taking into account possible biases and unidentified worsening cases.<xref rid="bib7" ref-type="bibr"><sup>7</sup></xref> The library will be extended by adding DL methods for training and predicting the VFs in the second version. It is intended to decrease our R dependency in each release and the third version will be fully independent to R. Version 4 and above will provide user interfaces (UIs) to make the library easy to use for those people who may not be well versed with programming.</p>
    <sec id="sec1-1">
      <title>Nomenclature and Abbreviations</title>
      <p>The abbreviations used in this report are as follows:</p>
      <p>Artificial intelligence (AI), optic nerve head (ONH), retinal ganglion cell (RGC), visual field (VF), Collaborative Initial Glaucoma Treatment Study (CIGTS), static automated perimetry (SAP), total deviation (TD), total deviation probability (TDP), pattern deviation (PD), pattern deviation map (PDP), Advanced Glaucoma Intervention Study (AGIS), pointwise linear regression (PLR), retinal nerve fiber layer (RFNL), intra-ocular pressure (IOP), open-angle glaucoma (OAG), permutation analyses of pointwise linear regression (PoPLR), global indices (gl), general height (gh), global indices probability (glp), and Normalization Value (NV).</p>
    </sec>
  </sec>
  <sec sec-type="methods" id="sec2">
    <title>Methods</title>
    <sec id="sec2-1">
      <title>Open-Source Languages</title>
      <p>To develop the first version of the package, we used Python and R which are open-source languages. Then with the wrapper library “<italic toggle="yes">rpy2</italic>,” which is a python interface for the R language,<xref rid="bib8" ref-type="bibr"><sup>8</sup></xref> we define new functions to translate and call the corresponding R-written functions into python. In addition, we used the open-source dependencies that are required in python for the associated functions to run. A full list of all dependencies is mentioned in the GitHub repository, and they will be installed by default if <italic toggle="yes">pip</italic> installation is being used. In future releases, the third version of the package will be R and rpy2-independent.</p>
    </sec>
    <sec id="sec2-2">
      <title>Development/Software Iteration Cycles</title>
      <p>Because the <italic toggle="yes">PyVisualFields</italic> package version 1.x was determined to wrap the two available R libraries, a waterfall development model was used. Maintenance and subsequent version developments are based on the Agile methodology.</p>
    </sec>
    <sec id="sec2-3">
      <title>Intended Input Format</title>
      <p>In this package, the VF data need to be in Pandas’ DataFrame format.<xref rid="bib9" ref-type="bibr"><sup>9</sup></xref> Therefore, developers are flexible to have any input file format (e.g. <italic toggle="yes">txt</italic>, <italic toggle="yes">csv</italic>, etc.), but one needs to prepare them as a DataFrame. It should be mentioned that using DataFrame has several required columns (depending on the methods) which are shown by exemplary provided data and functions. Functions based on <italic toggle="yes">vfprogression</italic> library allow 24-2 or 30-2 VF measurements, whereas functions based on <italic toggle="yes">visualFields</italic> library also accept 10-2 measurements.</p>
    </sec>
    <sec id="sec2-4">
      <title>How External Usability of the Library was Assessed</title>
      <p>We examined the functionality of this library by developing test and demo scripts through interactive applications (Jupyter notebook<xref rid="bib10" ref-type="bibr"><sup>10</sup></xref> and Spyder<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref>) with both Linux and Windows operating systems. Because <italic toggle="yes">PyVisualFields</italic> is a development library, usability tests regarding UI and UX are not applicable.</p>
    </sec>
  </sec>
  <sec id="sec3">
    <title>Software Repository</title>
    <p>The source code of the <italic toggle="yes">PyVisualFields</italic> package, and its license declaration is available on GitHub: <ext-link xlink:href="https://github.com/mohaEs/PyVisualField" ext-link-type="uri">https://github.com/mohaEs/PyVisualField</ext-link>.</p>
    <p>This repository also contains demonstration notebooks including examples for introducing functions and arguments.</p>
  </sec>
  <sec id="sec4">
    <title>Software Summary</title>
    <sec id="sec4-1">
      <title>Open-Source License</title>
      <p>The open-source software follows the MIT license.<xref rid="bib12" ref-type="bibr"><sup>12</sup></xref></p>
    </sec>
    <sec id="sec4-2">
      <title>Comparison with Other Open-Source Tools as a Baseline Comparison</title>
      <p>To the best of our knowledge, there is no released Python package for VF analysis in this manner. Another available Python package related to VF is the <italic toggle="yes">hvf-extraction-script</italic> it is used to extract Humphrey visual fields (HVFs) from report files in Dicom and PDF.<xref rid="bib13" ref-type="bibr"><sup>13</sup></xref> We will provide a choice in our library to receive input data that is in line with the output of the <italic toggle="yes">hvf-extraction-script</italic>. <italic toggle="yes">PyVF</italic> is a still-under-development VF extraction and simulation program and there is no released version of it on <italic toggle="yes">PyPI.</italic><xref rid="bib14" ref-type="bibr"><sup>14</sup></xref></p>
      <p>As mentioned before, two available open-source R packages (<italic toggle="yes">vfprogression</italic> and <italic toggle="yes">visualField</italic>) wrapped in our library. There are also more R packages related to VF analysis and simulation, such as <italic toggle="yes">binovisualfields</italic><xref rid="bib15" ref-type="bibr"><sup>15</sup></xref><sup>,</sup><xref rid="bib16" ref-type="bibr"><sup>16</sup></xref> and <italic toggle="yes">spCP</italic><xref rid="bib17" ref-type="bibr"><sup>17</sup></xref><sup>,</sup><xref rid="bib18" ref-type="bibr"><sup>18</sup></xref> and adding their functionalities to our package is a milestone for future developments.</p>
    </sec>
    <sec sec-type="results" id="sec4-3">
      <title>External Usability Results</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="sec4-4">
      <title>Submission to Package Registry (pip, gems, CRAN, CPAN, etc.)</title>
      <p>The developed <italic toggle="yes">PyVisualFields</italic> package is submitted and available on the Python Package Index (PyPI) website, which is the main repository of software for the Python programming language. PyPI helps people to find and install software and libraries: <ext-link xlink:href="https://pypi.org/project/PyVisualFields/" ext-link-type="uri">https://pypi.org/project/PyVisualFields/</ext-link>.</p>
    </sec>
    <sec id="sec4-5">
      <title>Generated Outputs From the Software Library</title>
      <p>The list of functions provided in this library with a short introduction is provided in the <xref rid="tbl1" ref-type="table">Table</xref>. The corresponding source R package is also mentioned for finding further information if it is required. This package can be partitioned into four categories as follows. One part is for restoring the pre-saved data to show exemplary VF samples/series and introducing the required data structure and columns of the DataFrame. <xref rid="fig1" ref-type="fig">Figure 1</xref> shows two exemplary VF data. Normalization and deviation analysis is another part of the package which can be used to calculate deviation values and probabilities as well as compute and set new normalization parameters and setting based on a new population. <xref rid="fig2" ref-type="fig">Figure 2</xref> shows two Jupyter cells for these reasons. The third part of the package is organized to do plotting of the test values and probabilities. Plots can also be saved in different file formats, including PNG, PDF, and SVG formats. <xref rid="fig3" ref-type="fig">Figures 3</xref> and <xref rid="fig4" ref-type="fig">4</xref> show two examples of plotting the values and probabilities by each sub-package. VF evaluation and progression analysis are the last part of the packages. Users can get AGIS and CIGTS defect scores for each VF (<xref rid="fig5" ref-type="fig">Fig. 5</xref>A).<xref rid="bib19" ref-type="bibr"><sup>19</sup></xref> Progression analysis is also provided by five different criteria to determine the worsening, stable, and improving cases. <xref rid="fig5" ref-type="fig">Figure 5</xref>B shows three progression analysis with three different criteria. Linear regression analysis is also available in this module as well as pointwise and permutation-based alternatives. <xref rid="fig6" ref-type="fig">Figure 6</xref> shows an example of linear regression analysis.</p>
      <table-wrap position="float" content-type="5col" id="tbl1">
        <label>Table.</label>
        <caption>
          <p>The Functions Provided in <italic toggle="yes">PyVisualFields</italic> Library</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" span="1"/>
            <col align="left" span="1"/>
            <col align="center" span="1"/>
            <col align="left" span="1"/>
            <col align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">Function</th>
              <th rowspan="1" colspan="1">Source</th>
              <th align="center" rowspan="1" colspan="1">Description</th>
              <th rowspan="1" colspan="1"/>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Pre-defined DATA</td>
              <td rowspan="1" colspan="1">data_vfpwgRetest24d2()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">visualFields</italic>
              </td>
              <td rowspan="1" colspan="1">Exemplary VF data</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">data_vfctrSunyiu24d2() data_vfpwgSunyiu24d2() data_vfctrSunyiu10d2() data_vfctrIowaPC26() data_vfctrIowaPeri() data_vfseries() data_vfi() data_cigts() data_plrnouri2012() data_schell2014()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">vfprogression</italic>
              </td>
              <td rowspan="1" colspan="1">Several pre-saved VF data are available to show the data structure and required columns in DataFrames. Some are a series data, and some are just cross-sectional data.</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Progression Analysis</td>
              <td rowspan="1" colspan="1">get_score_AGIS() get_score_CIGTS()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">vfprogression</italic>
              </td>
              <td rowspan="1" colspan="1">Compute and get AGIS and CIGTS visual field defect scores<xref rid="bib11" ref-type="bibr"><sup>11</sup></xref></td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">progression_cigts() progression_plrnouri2012() progression_vfi() progression_schell2014() progression_agis() gettdp()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">vfprogression</italic>
              </td>
              <td rowspan="1" colspan="1">Progression analysis based on different criteria. The input data is a series of VFs with at least 5 tests. The returned value would be stable, worsening or improving for each eye (left/rights).</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">glr()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">visualFields</italic>
              </td>
              <td rowspan="1" colspan="1">Linear regression</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">plr()</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">pointwise linear regression (PLR)</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">poplr()</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">PoPLR regression analysis (permutation based)</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Plotting</td>
              <td rowspan="1" colspan="1">plotValues() plotProbabilities() vfplot() Vfplotsparklines() Vfsfa()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">vfprogression</italic>
                <italic toggle="yes">visualFields</italic>
              </td>
              <td rowspan="1" colspan="1">Plot/save sensitivity or deviation values Plot/save deviation probability maps (e.g. tdp, pdp) Input is VF sensitivity and can plot and save values and probabilities based on its own design. We also prepared some aliases. Plot and save sparklines of a series data. We also prepared some aliases. Generates one-page report of single field analyses as a pdf file.</td>
              <td rowspan="1" colspan="1">PNG, PDF and SVG can be used as the saving format.</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Deviation Analysis</td>
              <td rowspan="1" colspan="1">getnv() get_info_normvals() getallvalues() gettd() getgl() getpd() gettdp() getgh() getpdp() getglp() setnv() nvgenerate()</td>
              <td rowspan="1" colspan="1">
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
                <italic toggle="yes">visualFields</italic>
              </td>
              <td rowspan="1" colspan="1">Get current normative setting deployed Get all available predefined normalization settings Compute all td, pd, pdp, tdp, gl, gh, glp based on the current normative setting. Input is the VF sensitivity values. alias for <italic toggle="yes">getallvalues</italic> only to compute td alias for <italic toggle="yes">getallvalues</italic> only to compute gl alias for <italic toggle="yes">getallvalues</italic> only to compute pd alias for <italic toggle="yes">getallvalues</italic> only to compute tdp alias for <italic toggle="yes">getallvalues</italic> only to compute gh alias for <italic toggle="yes">getallvalues</italic> only to compute pdp alias for <italic toggle="yes">getallvalues</italic> only to compute glp change and set normalization setting to a predefined or new computed setting Compute new normalization values based on new data and generate a normalization setting</td>
              <td rowspan="1" colspan="1">These functions are helpful to compute deviation values based on some predefined normalization settings. It is also possible to train/generate a new normative setting based on a new set of VF data.</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <fig position="float" id="fig1">
        <label>Figure 1.</label>
        <caption>
          <p>Two exemplary provided VF data.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f001" position="float"/>
      </fig>
      <fig position="float" id="fig2">
        <label>Figure 2.</label>
        <caption>
          <p>(<bold>A</bold>) Compute the deviation values and probabilities. (<bold>B</bold>) Compute, create, and set a new normalization setting based on new data.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f002" position="float"/>
      </fig>
      <fig position="float" id="fig3">
        <label>Figure 3.</label>
        <caption>
          <p>Plotting the values and probabilities using <italic toggle="yes">vfprogression</italic> sub-package.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f003" position="float"/>
      </fig>
      <fig position="float" id="fig4">
        <label>Figure 4.</label>
        <caption>
          <p>Plotting based on <italic toggle="yes">visualFields</italic> sub-package. Up to bottom are sensitivity, total deviation, pattern deviation, and the colormap of the deviation probabilities.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f004" position="float"/>
      </fig>
      <fig position="float" id="fig5">
        <label>Figure 5.</label>
        <caption>
          <p>(<bold>A</bold>) Getting the AGIS and CIGTS defect scores. (<bold>B</bold>) progression analysis of VF series by different criteria.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f005" position="float"/>
      </fig>
      <fig position="float" id="fig6">
        <label>Figure 6.</label>
        <caption>
          <p>Printout of function <italic toggle="yes">glr(*args)</italic> from <italic toggle="yes">visualFields</italic> package that performs learn regression on the mean deviation of VF tests over 1 year.</p>
        </caption>
        <graphic xlink:href="tvst-12-2-6-f006" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="discussion" id="sec5">
    <title>Discussion</title>
    <sec id="sec5-1">
      <title>Potential Uses for the Software</title>
      <p>The developed library is beneficial for the researchers working in the field of ophthalmology, VF analysis, and AI to develop further algorithms in Python language that offer tons of built-in functions in different open-source libraries.</p>
    </sec>
    <sec id="sec5-2">
      <title>Limitations of the Software</title>
      <p>The library calls the functions from the mentioned R libraries and therefore it is still needed that R core and packages, <italic toggle="yes">vfprogression</italic> and <italic toggle="yes">v</italic><italic toggle="yes">i</italic><italic toggle="yes">s</italic><italic toggle="yes">ualFields,</italic> be installed and available on the machine. For this reason, detailed installation and verification procedures are made available at the repository as well as a video demonstration. It is intended to be R-independent in the third version.</p>
    </sec>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>Supported by the National Institutes of Health (NIH: R01 EY030575 and P30 EY003790).</p>
    <p content-type="COI-statement">Disclosure: <bold>M</bold><bold>.</bold>
<bold>Eslami</bold>, None; <bold>S</bold><bold>.</bold>
<bold>Kazeminasab</bold>, None; <bold>V. Sharma</bold>, None, <bold>Y. Li</bold>, None; <bold>M. Fazli</bold>, None; <bold>M. Wang</bold>, None; <bold>N. Zebardast</bold>, None; <bold>T. Elze</bold>, None</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fankhauser</surname><given-names>F</given-names></string-name>, <string-name><surname>Koch</surname><given-names>P</given-names></string-name>, <string-name><surname>Roulier</surname><given-names>A.</given-names></string-name></person-group><article-title>On automation of perimetry</article-title>. <source><italic toggle="yes">Albrecht Von Graefes Arch Klin Exp Ophthalmol</italic></source>. <year>1972</year>; <volume>184</volume>(<issue>2</issue>): <fpage>126</fpage>–<lpage>150</lpage>.<pub-id pub-id-type="pmid">4556291</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yohannan</surname><given-names>J</given-names></string-name>, <string-name><surname>Boland</surname><given-names>MV.</given-names></string-name></person-group><article-title>The Evolving Role of the Relationship between Optic Nerve Structure and Function in Glaucoma</article-title>. <source><italic toggle="yes">Ophthalmology</italic></source>. <year>2017</year>; <volume>124</volume>(<issue>12S</issue>): <fpage>S66</fpage>–<lpage>S70</lpage>.<pub-id pub-id-type="pmid">29157364</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Christopher</surname><given-names>M</given-names></string-name>, <string-name><surname>Bowd</surname><given-names>C</given-names></string-name>, <string-name><surname>Belghith</surname><given-names>A</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Deep Learning Approaches Predict Glaucomatous Visual Field Damage from OCT Optic Nerve Head En Face Images and Retinal Nerve Fiber Layer Thickness Maps</article-title>. <source><italic toggle="yes">Ophthalmology</italic></source>. <year>2020</year>; <volume>127</volume>(<issue>3</issue>): <fpage>346</fpage>–<lpage>356</lpage>.<pub-id pub-id-type="pmid">31718841</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="other"><collab>CRAN - Package vfprogression</collab>. <ext-link xlink:href="https://cran.r-project.org/web/packages/vfprogression/index.html" ext-link-type="uri">https://cran.r-project.org/web/packages/vfprogression/index.html</ext-link>. Accessed February 14, 2022.</mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="other"><collab>CRAN - Package visualFields</collab>. <ext-link xlink:href="https://cran.r-project.org/web/packages/visualFields/index.html" ext-link-type="uri">https://cran.r-project.org/web/packages/visualFields/index.html</ext-link>. Accessed February 14, 2022.</mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marín-Franch</surname><given-names>I</given-names></string-name>, <string-name><surname>Swanson</surname><given-names>WH.</given-names></string-name></person-group><article-title>The visualFields package: a tool for analysis and visualization of visual fields</article-title>. <source><italic toggle="yes">J Vis</italic></source>. <year>2013</year>; <volume>13</volume>(<issue>4</issue>): <fpage>10</fpage>.</mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eslami</surname><given-names>M</given-names></string-name>, <string-name><surname>Kim</surname><given-names>JA</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>M</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Visual Field Prediction: Evaluating the Clinical Relevance of Deep Learning Models</article-title>. <source><italic toggle="yes">Ophthalmol Sci</italic></source>. <year>2022</year>; <volume>3</volume>(<issue>1</issue>): <fpage>100222</fpage>.<pub-id pub-id-type="pmid">36325476</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="other">
rpy2: Python interface to the R language from Python package index (PyPI). Available online at: <ext-link xlink:href="https://pypi.org/project/rpy2/" ext-link-type="uri">https://pypi.org/project/rpy2/</ext-link>. Accessed February 14, 2022.</mixed-citation>
    </ref>
    <ref id="bib9">
      <label>9.</label>
      <mixed-citation publication-type="other">
Pandas: a python package for data structures handling from python package index (PyPI). Available online at: <ext-link xlink:href="https://pypi.org/project/pandas/" ext-link-type="uri">https://pypi.org/project/pandas/</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib10">
      <label>10.</label>
      <mixed-citation publication-type="other">
Project Jupyter: a web-based interactive development environment for notebooks, code, and data. Available online at: <ext-link xlink:href="https://jupyter.org/" ext-link-type="uri">https://jupyter.org/</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib11">
      <label>11.</label>
      <mixed-citation publication-type="other"><collab>Spyder: A Scientific Python Development Environment from Python Package Index (PyPI)</collab>. Available online at: <ext-link xlink:href="https://pypi.org/project/spyder/" ext-link-type="uri">https://pypi.org/project/spyder/</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib12">
      <label>12.</label>
      <mixed-citation publication-type="other"><collab>MIT License: Open-Source Initiative License Copyright</collab>. Available online at: <ext-link xlink:href="https://mit-license.org/" ext-link-type="uri">https://mit-license.org/</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Saifee</surname><given-names>M</given-names></string-name>, <string-name><surname>Wu</surname><given-names>J</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Development and validation of automated visual field report extraction platform using computer vision tools</article-title>. <source><italic toggle="yes">Front Med (Lausanne)</italic></source>. <year>2021</year>; <volume>8</volume>: <fpage>625487</fpage>.<pub-id pub-id-type="pmid">33996848</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <label>14.</label>
      <mixed-citation publication-type="other"><collab>PyVF: Python Visual Field simulation</collab>. Available online at: <ext-link xlink:href="https://github.com/constructor-s/PyVF" ext-link-type="uri">https://github.com/constructor-s/PyVF</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>P</given-names></string-name>, <string-name><surname>McKendrick</surname><given-names>A</given-names></string-name>, <string-name><surname>Ma-Wyatt</surname><given-names>A</given-names></string-name>, <string-name><surname>Turpin</surname><given-names>A.</given-names></string-name></person-group><article-title>A depth-dependent integrated VF simulation for analysis and visualization of glaucomatous VF defects</article-title>. <source><italic toggle="yes">Transl Vis Sci Technol</italic></source>. <year>2020</year>; <volume>9</volume>(<issue>3</issue>): <fpage>8</fpage>.</mixed-citation>
    </ref>
    <ref id="bib16">
      <label>16.</label>
      <mixed-citation publication-type="other"><collab>CRAN - Package binovisualfields</collab>. Available online at: <ext-link xlink:href="https://cran.r-project.org/web/packages/binovisualfields/" ext-link-type="uri">https://cran.r-project.org/web/packages/binovisualfields/</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berchuck</surname><given-names>SI</given-names></string-name>, <string-name><surname>Mwanza</surname><given-names>JC</given-names></string-name>, <string-name><surname>Warren</surname><given-names>JL.</given-names></string-name></person-group><article-title>A spatially varying change points model for monitoring glaucoma progression using visual field data</article-title>. <source><italic toggle="yes">Spat Stat</italic></source>. <year>2019</year>; <volume>30</volume>: <fpage>1</fpage>–<lpage>26</lpage>.<pub-id pub-id-type="pmid">30931247</pub-id></mixed-citation>
    </ref>
    <ref id="bib18">
      <label>18.</label>
      <mixed-citation publication-type="other"><collab>CRAN - Package spCP</collab>. Available online at: <ext-link xlink:href="https://cran.r-project.org/web/packages/spCP" ext-link-type="uri">https://cran.r-project.org/web/packages/spCP</ext-link>. Accessed May 22, 2022.</mixed-citation>
    </ref>
    <ref id="bib19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Naka</surname><given-names>M</given-names></string-name>, <string-name><surname>Kanamori</surname><given-names>A</given-names></string-name>, <string-name><surname>Tatsumi</surname><given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Comparison of mean deviation with AGIS and CIGTS scores in association with structural parameters in glaucomatous eyes</article-title>. <source><italic toggle="yes">J Glaucoma</italic></source>. <year>2009</year>; <volume>18</volume>(<issue>5</issue>): <fpage>379</fpage>–<lpage>384</lpage>.<pub-id pub-id-type="pmid">19525728</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

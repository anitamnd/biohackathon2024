<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9308261</article-id>
    <article-id pub-id-type="publisher-id">4837</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-022-04837-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CMIC: an efficient quality score compressor with random access functionality</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Chen</surname>
          <given-names>Hansen</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3637-2565</contrib-id>
        <name>
          <surname>Chen</surname>
          <given-names>Jianhua</given-names>
        </name>
        <address>
          <email>chenjh@ynu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lu</surname>
          <given-names>Zhiwen</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Rongshu</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.440773.3</institution-id><institution-id institution-id-type="ISNI">0000 0000 9342 2456</institution-id><institution>School of Information, </institution><institution>Yunnan University, </institution></institution-wrap>Chenggong Campus, Kunming, Yunnan China </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>23</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>294</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>1</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>7</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Over the past few decades, the emergence and maturation of new technologies have substantially reduced the cost of genome sequencing. As a result, the amount of genomic data that needs to be stored and transmitted has grown exponentially. For the standard sequencing data format, FASTQ, compression of the quality score is a key and difficult aspect of FASTQ file compression. Throughout the literature, we found that the majority of the current quality score compression methods do not support random access. Based on the above consideration, it is reasonable to investigate a lossless quality score compressor with a high compression rate, a fast compression and decompression speed, and support for random access.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">In this paper, we propose CMIC, an adaptive and random access supported compressor for lossless compression of quality score sequences. CMIC is an acronym of the four steps (classification, mapping, indexing and compression) in the paper. Its framework consists of the following four parts: classification, mapping, indexing, and compression. The experimental results show that our compressor has good performance in terms of compression rates on all the tested datasets. The file sizes are reduced by up to 21.91% when compared with LCQS. In terms of compression speed, CMIC is better than all other compressors on most of the tested cases. In terms of random access speed, the CMIC is faster than the LCQS, which provides a random access function for compressed quality scores.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">CMIC is a compressor that is especially designed for quality score sequences, which has good performance in terms of compression rate, compression speed, decompression speed, and random access speed. The CMIC can be obtained in the following way: <ext-link ext-link-type="uri" xlink:href="https://github.com/Humonex/Cmic">https://github.com/Humonex/Cmic</ext-link>.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-022-04837-1.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FASTQ</kwd>
      <kwd>Quality score</kwd>
      <kwd>Random access</kwd>
      <kwd>Lossless compressor</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61861045</award-id>
        <principal-award-recipient>
          <name>
            <surname>Chen</surname>
            <given-names>Jianhua</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par9">Modern DNA sequencing technology has generated a large amount of genomic data, and with the emergence and maturity of NGS (next-generation sequencing) methods, genome sequencing is becoming less expensive. In 2014, the cost of sequencing a human genome was limited to $1000 [<xref ref-type="bibr" rid="CR1">1</xref>], and the lower cost means that there will be an explosion of genomic data. Today, the latest systems can sequence the equivalent of 48 complete human genomes at once at 30× coverage. These genomes produced approximately 6 TB of FASTQ files [<xref ref-type="bibr" rid="CR2">2</xref>]. Such large-scale sequencing creates challenges for data storage, transmission, and analysis. Therefore, it is necessary for us to develop a genome sequence compressor with high efficiency.</p>
    <p id="Par10">The output of modern DNA sequencing is typically stored in FASTQ format [<xref ref-type="bibr" rid="CR3">3</xref>], as shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, which is a file format containing the following types of data:<list list-type="order"><list-item><p id="Par11">The identifier sequence contains the ID of the reads. It begins with @ followed by an optional description.</p></list-item><list-item><p id="Par12">The base sequence contains bases of a read. It usually has four kinds of bases (A, C, G, T).</p></list-item><list-item><p id="Par13">The quality score sequence contains quality score symbols of a read. It reflects the level of confidence in the readout of each base. Its specific calculation formula is <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = - 10\log_{10} P$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mn>10</mml:mn><mml:msub><mml:mo>log</mml:mo><mml:mn>10</mml:mn></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq1.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P$$\end{document}</tex-math><mml:math id="M4"><mml:mi>P</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq2.gif"/></alternatives></inline-formula> is a reference sequencing error probability. Quality values range from 33 to 73 (or from 64 to 104) and are represented by ASCII symbols.</p></list-item></list><fig id="Fig1"><label>Fig. 1</label><caption><p>The example of FASTQ format</p></caption><graphic xlink:href="12859_2022_4837_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par14">For each read, there is a paired line of scores that is equal in length to the read length. The quality score information is always of the same length as the respective base sequence. Some FASTQ files have a fixed read length, and the length of the quality score lines are also fixed; others have variable read lengths, and therefore, the lengths of the quality score lines are also variable.</p>
    <p id="Par15">Among FASTQ files, the base sequence is highly redundant, with only four possible values of ATCG in the sequence. The quality score sequence is much more difficult to compress than the base sequence due to low redundancy and the fact that there are as many as 71 possible values in the sequence. Additionally, more values in the quality scores also lead to the compression being less efficient. Since the final compression step in the proposed method is completed by ZPAQ, which is a statistical model-based algorithm, a larger alphabet size means more difficulty in learning the context model for a given source sequence, and thus, the compression efficiency is affected. Moreover, in the lossless FASTQ compressed files, the quality scores account for approximately 70% [<xref ref-type="bibr" rid="CR4">4</xref>]. Therefore, the need for an algorithm that can efficiently and losslessly compress quality scores has become critical. In addition, the quality score is important for mutation testing. When retrieving a list of specific protein sequences, we only use a part of the genome data [<xref ref-type="bibr" rid="CR5">5</xref>], which means that only some of the bases and their corresponding quality scores in a FASTQ file need to be retrieved, and the need for random access functionality on the compressed genome data arises. Recently, the biotechnology industry has made substantial progress, and the compression of genomic sequences is close to practical application. However, most previous genome data storage efforts do not have random accessibility, which means that they have to decode the entire compressed file to retrieve a specific segment in a sequence [<xref ref-type="bibr" rid="CR6">6</xref>]. Since quality scores consist of an important part of a FASTQ file, an efficient compression algorithm for them should also implement random access to the compressed quality score information related to a specific base sequence. Obviously, if we want to improve the random access efficiency, we need to divide the genome sequence into blocks, but this requires an appropriate indexing method to quickly find the required quality score sequence and minimize the impact of the index file on the final compression efficiency. However, the block size directly affects the efficiency of compression and random access, so we need to achieve a reasonable balance between the two.</p>
    <p id="Par16">Most current quality score compressors use run-length encoding [<xref ref-type="bibr" rid="CR7">7</xref>] or build complex context models for compression, and they do not support random access. The advantage of using run-length encoding is that the compression speed is fast; however, the compression ratio is relatively low, and the robustness is poor (compression may not perform well for different types of FASTQ files). The benefit of using complex context modeling for compressors is the high compression ratio, but the compression speed is slower than the other compression methods (Conversely, some compressors try to increase the compression speed by building simple probabilistic models, but the compression ratios of these methods are usually poor). It can be seen that the compression speed and the compression ratio are not independent and are mutually constrained. Most compressors weaken one to enhance the other. By improving the parallelism of the algorithm and use more CPU cores, we can improve the compression ratio and speed at the same time.</p>
    <p id="Par17">In this paper, we propose a new quality score compressor, CMIC. To improve the performance of CMIC, we made the following contributions:<list list-type="order"><list-item><p id="Par18">We propose a new mapping method that makes full use of the correlation between adjacent quality scores and improves the efficiency of context modeling entropy encoding.</p></list-item><list-item><p id="Par19">By building a highly effective light weight index, it implements and speeds up the random access.</p></list-item></list></p>
    <p id="Par20">This article is organized as follows. The second section mainly describes the related work. The third section introduces the specific implementation method of CMIC. The fourth section discusses the experimental results. In the fifth section, we provide the conclusion and the directions of future work.</p>
    <p id="Par21">To date, quality score compressors can be divided into two categories: lossy and lossless approaches. Compared with the lossless compressor, a lossy compressor can considerably improve the compression efficiency, but it is still controversial in practical applications [<xref ref-type="bibr" rid="CR8">8</xref>]. Because the quality score represents the quality of each base, the value of the quality score shows the potential error probability of the base. The larger the value is, the smaller the possibility of a sequencing error. Therefore, improper processing may lead to errors in the analysis results of the gene data.</p>
    <p id="Par22">With regard to lossy quality score compressors, in 2016, the MPEG standardization committee proposed a framework to measure the impact on variant calling for human genomes [<xref ref-type="bibr" rid="CR9">9</xref>]. However, long before the previous framework, the lossy quality score compression tools QVZ [<xref ref-type="bibr" rid="CR10">10</xref>], R-Block and P-Block [<xref ref-type="bibr" rid="CR11">11</xref>] could not only maintain variant calling performance but even improve it in some cases. However, considering that the lossy quality score compression technology is still controversial, this paper focuses on solving the related problems of lossless quality score compression.</p>
    <p id="Par23">In terms of lossless quality score compression, Fqzcomp [<xref ref-type="bibr" rid="CR4">4</xref>] uses a hybrid statistical model to compress the sequence and quality scores: the identifier sequence is encoded by delta coding after preprocessing, and the base sequence is compressed based on a limited context model. For DSRC2 [<xref ref-type="bibr" rid="CR12">12</xref>], when compressing the identifier sequence, the same method has been used as the one in Fqzcomp. Huffman encoding is used for base sequence compression. When compressing the quality scores, mixed encoding (Run-Length and Huffman encoding) is used. To date, many professional FASTQ compressors still use the above methods to deal with quality scores. For example, LW-FQzip2 [<xref ref-type="bibr" rid="CR13">13</xref>] preprocesses the quality scores using run-length encoding and then uses the combination of the PPM model and the arithmetic encoder to compress the preprocessed data. LFQC [<xref ref-type="bibr" rid="CR14">14</xref>] divides the quality score file into several parts. It can easily determine whether run-length encoding or Huffman encoding will be used by checking the average run length of each quality score sequence. In addition to the above compression algorithms, there are some general solutions, such as Gzip [<xref ref-type="bibr" rid="CR15">15</xref>] and 7-Zip [<xref ref-type="bibr" rid="CR16">16</xref>]. Most of the public repositories still use them to store FASTQ files due to their simplicity.</p>
    <p id="Par24">Of course, with the continuous improvement of the sequencing speed, some professional quality score compressors have also been developed, such as SCALCE [<xref ref-type="bibr" rid="CR17">17</xref>]. The algorithm uses the core substring as the similarity measure to group similar sequencing short fragments. These core substrings are generated by LCP (locally consistent parsing) [<xref ref-type="bibr" rid="CR18">18</xref>–<xref ref-type="bibr" rid="CR20">20</xref>]. A third-order context model is used for the final compression. In fact, as early as 2016, the CSAM [<xref ref-type="bibr" rid="CR21">21</xref>] algorithm realized the random access function on SAM files. It could process SAM data without decoding the whole compressed file. The AQUa [<xref ref-type="bibr" rid="CR8">8</xref>] algorithm is a quality score compressor based on the AFRESh [<xref ref-type="bibr" rid="CR22">22</xref>] framework. The authors develop and integrate four new encoding tools to make better use of the redundancy in the quality scores and then use the Context-Adaptive Binary Arithmetic Coder to compress the quality scores. CABAC is a tool for lossless entropy coding. It is widely used in the field of compression [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>]. At the same time, AQUa supports random access to quality scores. In addition, the LCQS [<xref ref-type="bibr" rid="CR25">25</xref>] algorithm uses a general compressor libzpaq [<xref ref-type="bibr" rid="CR26">26</xref>] to compress quality scores. By optimizing the source code, the running speed of the algorithm is greatly improved. LCQS uses the packing algorithm to make use of the correlation among the adjacent quality scores. However, they thought that the quality score with the most occurrence was the score with the largest value, so their packing rules only considered part of the combinations of the neighboring quality scores. Nevertheless, the score with the most occurrence is in fact not the one with the largest value. The newly proposed FCLQC [<xref ref-type="bibr" rid="CR27">27</xref>] algorithm uses concurrent programming to greatly improve the running speed of the algorithm, which shows at least 31× of the compression speed improvement, but the compression efficiency is reduced on average by 8.62%.</p>
    <p id="Par25">Through the description of the above algorithms, we find that it is difficult to implement the function of random access if we use the method of context modeling arithmetic encoding for the whole quality score sequence. For the Run-Length and Huffman encoding technology, the compression efficiency is greatly related to the characteristics of the quality scores, and the robustness of the algorithm is generally not satisfactory. In summary, we are interested in designing an algorithm that satisfies the following:<list list-type="order"><list-item><p id="Par26">Context modeling arithmetic encoding is used to improve the compression ratio, but we want to directly use the correlation of adjacent quality scores to improve the modeling efficiency. At the same time, the adaptive context model is used to improve the robustness of the algorithm for different genome sequences.</p></list-item><list-item><p id="Par27">The function of random access on compressed files is implemented; in other words, a specific target quality score line can be accessed without decompressing the whole compressed file (only part of the file is decompressed).</p></list-item></list></p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par28">The framework of the CMIC algorithm is as follows. First, we classify the quality score lines in different reads into various categories according to their statistical characteristics. The objective of this step is to group together the quality score lines with similar statistical characteristics to improve the statistical accuracy of context modeling. Next, CMIC performs the mapping operation on quality scores. Mapping directly utilizes the correlation between the adjacent quality scores (since there are few abrupt changes in adjacent quality scores) and improves the efficiency of context modeling in the compression phase. We use the idea of run length encoding to map multiple quality scores into one symbol. The advantage of this operation is that it improves the efficiency of describing the neighboring quality scores with similar values and greatly speeds up the context model-based compression. Then, we propose a lightweight index building method to support the random access function. We consider both indexing speed and the index directory size to keep the size as small as possible, while the random access efficiency is not apparently affected. Finally, the algorithm uses the general compression library libzpaq, and we use the parallelism of the library to compress multiple blocks at the same time to improve the compression speed.</p>
    <sec id="Sec3">
      <title>Classification</title>
      <p id="Par29">We can find that in a FASTQ file, the content of quality score lines can be very different. Many compression algorithms use this feature, such as CARGO [<xref ref-type="bibr" rid="CR28">28</xref>], which first analyzes and rearranges the data, then aggregates the quality scores with similar properties, and finally compresses the file. In the AQUa algorithm, the authors propose five different coding tools, and select the most efficient coding tools for different quality score lines. The main reasons for classifying the quality score lines are as follows:<list list-type="order"><list-item><p id="Par30">Classification can improve the robustness of the compressor, and get better compression results for different FASTQ files.</p></list-item><list-item><p id="Par31">Classification can improve the efficiency of context modeling and improve the compression speed.</p></list-item></list></p>
      <p id="Par32">The efficiency of context modeling is related to the distribution of data, and data with poor statistical characteristics will affect the modeling of other data. Therefore, we want to separate the quality score lines with different statistical characteristics. Through the classification algorithm, we classify the quality score lines with good statistical characteristics into one class, which can effectively improve the efficiency of context modeling. The other is the quality score line with poor statistical characteristics. Although the efficiency of data context modeling of this class is poor, it does not affect the compression of the other class.</p>
      <p id="Par33">In this paper, we present a statistics-based quality score classification algorithm. It is well-known that before the base sequence is compressed, the bases are usually divided into K-mers. The K-mer contains high-order context information, which can be applied to the compression of quality score lines. We assume that the quality line is <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r$$\end{document}</tex-math><mml:math id="M6"><mml:mi>r</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq3.gif"/></alternatives></inline-formula>, which is a string consisting of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| r \right|$$\end{document}</tex-math><mml:math id="M8"><mml:mfenced close="|" open="|"><mml:mi>r</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq4.gif"/></alternatives></inline-formula> quality scores. Taking a string <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta_{k}^{i}$$\end{document}</tex-math><mml:math id="M10"><mml:msubsup><mml:mi>β</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq5.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M12"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq6.gif"/></alternatives></inline-formula> in <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r$$\end{document}</tex-math><mml:math id="M14"><mml:mi>r</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq7.gif"/></alternatives></inline-formula> starting from the <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M16"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq8.gif"/></alternatives></inline-formula> th position, <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta_{k}^{i} = r\left[ i \right]r\left[ {i + 1\left] { \cdots r} \right[i + k - 1} \right]$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:msubsup><mml:mi>β</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced><mml:mi>r</mml:mi><mml:mfenced close="]" open="["><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mfenced close="[" open="]"><mml:mrow><mml:mo>⋯</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mfenced><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq9.gif"/></alternatives></inline-formula>,<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0 \le i \le \left| r \right| - k + 1$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mfenced close="|" open="|"><mml:mi>r</mml:mi></mml:mfenced><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq10.gif"/></alternatives></inline-formula>, <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta_{k}^{i}$$\end{document}</tex-math><mml:math id="M22"><mml:msubsup><mml:mi>β</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq11.gif"/></alternatives></inline-formula> is referred to as a “K-mer” in <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r$$\end{document}</tex-math><mml:math id="M24"><mml:mi>r</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq12.gif"/></alternatives></inline-formula>. We assume that the sample distribution in a FASTQ file is consistent with the overall distribution. To speed up the classification, we take some quality score lines as the sample (usually the first M lines of the file). We classify each quality score line according to the number of K-mer repetitions in the sample. Suppose there are <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J$$\end{document}</tex-math><mml:math id="M26"><mml:mi>J</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq13.gif"/></alternatives></inline-formula> distinct types of K-mers in the sample; we count the number of their occurrences through <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{K}^{j} , \left( {j = 1, \ldots ,J} \right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>J</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq14.gif"/></alternatives></inline-formula>. If the number of all possible K-mers in <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r$$\end{document}</tex-math><mml:math id="M30"><mml:mi>r</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq15.gif"/></alternatives></inline-formula> is <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{K}^{{}}$$\end{document}</tex-math><mml:math id="M32"><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow/></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq16.gif"/></alternatives></inline-formula>, we can define <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{q}_{k}^{j} = \frac{{N_{K}^{j} }}{{N_{K}^{{}} }}$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:msubsup><mml:mover><mml:mi>q</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow/></mml:msubsup></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq17.gif"/></alternatives></inline-formula>, which reflects the proportion of the <italic>j</italic>th K-mer in all K-mers in the sample. Let <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }} = \mathop \sum \limits_{s} \overline{q}_{k}^{s} ,\left( {l = 1, \ldots ,M;s = 1, \ldots ,S_{l} } \right)$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mi>s</mml:mi></mml:munder><mml:msubsup><mml:mover><mml:mi>q</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>;</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq18.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{l}$$\end{document}</tex-math><mml:math id="M38"><mml:msub><mml:mi>S</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq19.gif"/></alternatives></inline-formula> is the number of different K-mers in the <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M40"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq20.gif"/></alternatives></inline-formula> th quality score line, and <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M42"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq21.gif"/></alternatives></inline-formula> is the sum of proportions of different K-mers in the <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M44"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq22.gif"/></alternatives></inline-formula> th quality score line. Evidently, if all the different K-mers in the <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M46"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq23.gif"/></alternatives></inline-formula> th quality score line are repeated more times in the sample, the value of <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M48"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq24.gif"/></alternatives></inline-formula> will be larger and vice versa. We group the quality score lines that have larger <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M50"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq25.gif"/></alternatives></inline-formula> values, which is advantageous for the entropy encoder based on context modeling to compress quality score lines with K-mers repeated more times. Then, we can find the maximum value of <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M52"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq26.gif"/></alternatives></inline-formula> within the sample by <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m} = \mathop {\max }\limits_{l} \overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">max</mml:mo><mml:mi>l</mml:mi></mml:munder><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq27.gif"/></alternatives></inline-formula>. Finally, <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m}$$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq28.gif"/></alternatives></inline-formula> is used to normalize <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M58"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq29.gif"/></alternatives></inline-formula> for all the quality score lines. In this way, we can use <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq30.gif"/></alternatives></inline-formula> as the classification feature for the quality score lines (<inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx = \frac{{\overline{{e_{l} }} }}{{L_{m} }}$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mi>M</mml:mi><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq31.gif"/></alternatives></inline-formula>). Usually, <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq32.gif"/></alternatives></inline-formula> is a real number between 0 and 1. Because <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m}$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq33.gif"/></alternatives></inline-formula> is obtained for the sample, <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq34.gif"/></alternatives></inline-formula> could be larger than 1 for some quality score lines out of the sample; at this point, we set the value of <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq35.gif"/></alternatives></inline-formula> to 1 (the classification standard is described later).</p>
      <p id="Par34">To facilitate our mapping and indexing, we divide the quality score lines into two categories based on <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq36.gif"/></alternatives></inline-formula>, which is obtained after preprocessing (class A and class B). The classification process is as follows:<list list-type="order"><list-item><p id="Par35">The statistical information <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta_{k}^{i}$$\end{document}</tex-math><mml:math id="M74"><mml:msubsup><mml:mi>β</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq37.gif"/></alternatives></inline-formula> of the first M lines in the sample is collected.</p></list-item><list-item><p id="Par36"><inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{K}^{j}$$\end{document}</tex-math><mml:math id="M76"><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq38.gif"/></alternatives></inline-formula> and <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{q}_{k}^{j}$$\end{document}</tex-math><mml:math id="M78"><mml:msubsup><mml:mover><mml:mi>q</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq39.gif"/></alternatives></inline-formula> are calculated for all distinct K-mers in the sample.</p></list-item><list-item><p id="Par37"><inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{{e_{l} }}$$\end{document}</tex-math><mml:math id="M80"><mml:mover><mml:msub><mml:mi>e</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq40.gif"/></alternatives></inline-formula> is calculated for each quality score line in the sample.</p></list-item></list>
When <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m}$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq41.gif"/></alternatives></inline-formula> is obtained, <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq42.gif"/></alternatives></inline-formula> can be calculated. According to a threshold <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M86"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq43.gif"/></alternatives></inline-formula>, the quality score lines are divided into two categories, depending on whether <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mx$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi mathvariant="italic">Mx</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq44.gif"/></alternatives></inline-formula> is greater than <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M90"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq45.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="Sec4">
      <title>Mapping</title>
      <p id="Par38">The quality scores are saved in FASTQ files with 8-bit ASCII encoding. They usually show the following characteristic: in a quality score line, some quality scores repeat a lot, and adjacent quality scores are similar. This means that in a quality score line, quality scores change slowly in most cases. This characteristic makes quality score lines suitable for compression using a method similar to run-length encoding, and it is reasonable to map some adjacent quality scores into one character. Next, the mapped string is statistically modeled and entropy encoded. In this way, the correlation among the adjacent quality scores can be used directly. Many professional FASTQ compressors adopt the above methods, such as DSRC2, Fqzcomp and LFQC. These methods achieve good compression ratios and compression speeds. The number of encoded characters is reduced by mapping. The compression speed can be improved.</p>
      <p id="Par39">Specifically, we use a one-to-one rule to map more than one original score with values from 33 ~ 104 to one symbol with values from 1 ~ 512. The basic principle of mapping is to represent the substring with a large number of repetitions with a single character. We calculate a quality score C that appears most frequently in quality score lines after classification and then determine the mapping rules according to C. This shows that the possibility of a continuous occurrence of C is high, and C can be combined with other quality scores as much as possible. The more quality scores that satisfy the mapping conditions, the more quality scores can be combined to reduce the number of scores. Once we obtain C, we map the quality score with the value that is close or equal to C.</p>
      <p id="Par40">In LCQS, they only consider the case that the adjacent quality scores are less than or equal to C. In some FASTQ files, the most frequent occurrence of C is indeed the largest quality score, but the distribution of the quality scores in many FASTQ files is uncertain. This means that C can be an intermediate value among quality scores, which has a great negative impact on the compression results. In some extreme cases, the minimum quality score is C, and there is no mapping for the quality scores.</p>
      <p id="Par41">Therefore, we design the following quality score mapping rules:</p>
      <p id="Par42">Assume that <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i}$$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq46.gif"/></alternatives></inline-formula> is the <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M94"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq47.gif"/></alternatives></inline-formula> th quality score in a quality score line.<list list-type="order"><list-item><p id="Par43">When the values of the adjacent quality scores are equal to C, the next quality score <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i + k} (k \le 55$$\end{document}</tex-math><mml:math id="M96"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mn>55</mml:mn></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq48.gif"/></alternatives></inline-formula>) is investigated until <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i + k}$$\end{document}</tex-math><mml:math id="M98"><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq49.gif"/></alternatives></inline-formula> is no longer equal to C, we record the value of <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M100"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq50.gif"/></alternatives></inline-formula>, and map <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1} q_{i + 2} \ldots q_{i + k - 1}$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq51.gif"/></alternatives></inline-formula> to a symbol with value <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {k + 200} \right)$$\end{document}</tex-math><mml:math id="M104"><mml:mfenced close=")" open="("><mml:mrow><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq52.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par44">When the value of the adjacent quality score is not equal to C, it can be divided into the following situations:<list list-type="alpha-lower"><list-item><p id="Par45">First, we discuss the case when the adjacent quality scores are close to C and belong to [C-3, C + 3]. At this time, at most three adjacent quality scores can be mapped to one character. If <inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M106"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq53.gif"/></alternatives></inline-formula> belong to [C, C + 3], then they are mapped to ((<inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {C + 7} \right) - q_{i} )*8 + \left( {\left( {C + 7} \right) - q_{i + 1} } \right) + 255)$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>255</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq54.gif"/></alternatives></inline-formula>; if <inline-formula id="IEq55"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq55.gif"/></alternatives></inline-formula> belong to [C-3, C], then they are mapped to ((<inline-formula id="IEq56"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} - \left( {c - 7} \right)*8 + \left( {q_{i + 1} - \left( {c - 7} \right) + 73} \right)$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>73</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq56.gif"/></alternatives></inline-formula>. If <inline-formula id="IEq57"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1} q_{i + 2}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq57.gif"/></alternatives></inline-formula> all belong to [C, C + 3], then they are mapped to ((<inline-formula id="IEq58"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {C + 3} \right) - q_{i} )*16 + \left( {\left( {\left( {C + 3} \right) - q_{i + 1} } \right)} \right)*4 + \left( {\left( {C + 3) - q_{i + 2} } \right) + 319} \right)$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>16</mml:mn><mml:mo>+</mml:mo></mml:mrow><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mfenced><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>-</mml:mo></mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>319</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq58.gif"/></alternatives></inline-formula>; If <inline-formula id="IEq59"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1} q_{i + 2}$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq59.gif"/></alternatives></inline-formula> all belong to [C-3, C], then they are mapped to ((<inline-formula id="IEq60"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} - \left( {C - 3} \right))*16 + (\left( {q_{i + 1} - \left( {C - 3} \right)} \right)*4 + \left( {\left( {q_{i + 2} - \left( {C - 3} \right)} \right) + 137} \right)$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>-</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfenced><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>16</mml:mn><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>-</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>-</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>137</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq60.gif"/></alternatives></inline-formula>; If one of <inline-formula id="IEq61"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq61.gif"/></alternatives></inline-formula> is a member of [C, C + 3] and the other is a member of [C, C + 7], then they are mapped to ((<inline-formula id="IEq62"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {C + 7} \right) - q_{i} )*8 + \left( {\left( {C + 7} \right) - q_{i + 1} } \right) + 255)$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>255</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq62.gif"/></alternatives></inline-formula>; If one of <inline-formula id="IEq63"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq63.gif"/></alternatives></inline-formula> is a member of [C-3, C] and the other is a member of [C-7, C], then they are mapped to ((<inline-formula id="IEq64"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} - \left( {c - 7} \right)*8 + \left( {q_{i + 1} - \left( {c - 7} \right) + 73} \right)$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>73</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq64.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par46">When the adjacent quality scores are slightly far from C, they do not completely fall within [C-3, C + 3] but still fall within [C-7, C + 7]. At this time, two adjacent quality scores can be mapped to one symbol. We check <inline-formula id="IEq65"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i + 1}$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq65.gif"/></alternatives></inline-formula>. If <inline-formula id="IEq66"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq66.gif"/></alternatives></inline-formula> belong to [C, C + 7], we map them to ((<inline-formula id="IEq67"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {C + 7} \right) - q_{i} )*8 + \left( {\left( {C + 7} \right) - q_{i + 1} } \right) + 255)$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>-</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>255</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq67.gif"/></alternatives></inline-formula>; if <inline-formula id="IEq68"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} q_{i + 1}$$\end{document}</tex-math><mml:math id="M136"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq68.gif"/></alternatives></inline-formula> all belong to [C-7, C], we map them to ((<inline-formula id="IEq69"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i} - \left( {c - 7} \right)*8 + \left( {q_{i + 1} - \left( {c - 7} \right) + 73} \right)$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mi>c</mml:mi><mml:mo>-</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>73</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq69.gif"/></alternatives></inline-formula>.</p></list-item></list></p></list-item><list-item><p id="Par47">If the current quality score <inline-formula id="IEq70"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i}$$\end{document}</tex-math><mml:math id="M140"><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq70.gif"/></alternatives></inline-formula> is far from C, it is obvious that none of the above conditions is true. We directly map <inline-formula id="IEq71"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_{i}$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq71.gif"/></alternatives></inline-formula> to <inline-formula id="IEq72"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(q_{i} - 32)$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>32</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq72.gif"/></alternatives></inline-formula> and continue to check the next quality score until the end of the quality score line.</p></list-item></list></p>
      <p id="Par48">By setting appropriate mapping rules, we consider all the cases of quality scores, and the algorithm is greatly improved and can be more adaptable to different types of FASTQ files. For a better understanding of the algorithm, please refer to the pseudocode shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    </sec>
    <sec id="Sec5">
      <title>Random access and indexing</title>
      <p id="Par49">After the classification step, quality score lines are divided into class A and class B, as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. To support random access, we have to combine these two types of quality score lines into data blocks for the final compression. In this way, the data blocks can be decompressed separately to implement random access. Because it is of little importance to study a specific quality score, the focus of our algorithm is allowing users to randomly access quality score lines in a certain range.<fig id="Fig2"><label>Fig. 2</label><caption><p>The Structure of the random access and index</p></caption><graphic xlink:href="12859_2022_4837_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par50">We set up two containers, A and B (gray and white parts in Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Container A stores the quality score lines of class A with more K-mers repeated frequently to obtain better statistical information and better compression efficiency in the final compression process. We check over the quality score file; if a quality score line is of class A, then its content is added to container A. When a class B line appears, we replace the line with a special character (a character that does not exist in the quality score line) and add that character to container A as well. If there are consecutively occurring quality score lines of class B, we add the corresponding number of special characters to container A. In this way, the order of the quality score lines in container A is consistent with the order of the lines in the original file. However, the contents of the class B quality score lines are not reserved in container A, and thus, container B has to be used to save the contents of the class B quality score lines. Therefore, when a quality score line belonging to class B is found, we first add a special character to replace the line in container A, and then add the content of this class B quality score line to container B. Container B stores the quality score lines with K-mers less frequently repeated. When container A or B is full, the content of the container is sent to the compressor as a data block for compression.</p>
      <p id="Par51">In AQUa, to allow random access, the algorithm must create additional entry points for CABAC, where the byte addresses of the random access points are stored in a separate XML file. As a result, AQUa requires a large index file, and the maximum overhead of the index files is close to 3.5%, which affects the compression efficiency. At the same time, because AQUa cannot compress all kinds of FASTQ files, random access cannot be applied to some datasets (for example, the size of the read length is not fixed).</p>
      <p id="Par52">In CMIC, because quality score lines are stored separately in data blocks of classes A and B, to improve the efficiency of random access, we also need to build an index file to quickly find a specified quality score line. At the same time, to avoid the defects of AQUa, we create a lightweight index and reduce the size of the index file to improve the final compression ratio.</p>
      <p id="Par53">We need to build index tables for A and B (the rounded rectangle in Fig. <xref rid="Fig2" ref-type="fig">2</xref>). For container A, the index table stores the start position <inline-formula id="IEq73"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{i}^{A}$$\end{document}</tex-math><mml:math id="M146"><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>A</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq73.gif"/></alternatives></inline-formula> of the quality score line in container A and the number of special characters <inline-formula id="IEq74"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M148"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq74.gif"/></alternatives></inline-formula>. By querying <inline-formula id="IEq75"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{i}^{A}$$\end{document}</tex-math><mml:math id="M150"><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>A</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq75.gif"/></alternatives></inline-formula>, we can quickly find the data block where the target sequence is located because the special characters in container A represent the position information of the class B quality score lines. Parameter <inline-formula id="IEq76"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M152"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq76.gif"/></alternatives></inline-formula> can help us calculate the end position of the quality score line in container A and the positions of the class B quality score lines in container A. For container B, the index table stores the starting position <inline-formula id="IEq77"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{j}^{B}$$\end{document}</tex-math><mml:math id="M154"><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mi>B</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq77.gif"/></alternatives></inline-formula> and the ending position <inline-formula id="IEq78"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{j}^{B}$$\end{document}</tex-math><mml:math id="M156"><mml:msubsup><mml:mi>E</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mi>B</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq78.gif"/></alternatives></inline-formula> of the quality score line in container B. By querying the information of <inline-formula id="IEq79"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{j}^{B}$$\end{document}</tex-math><mml:math id="M158"><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mi>B</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq79.gif"/></alternatives></inline-formula> and <inline-formula id="IEq80"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{j}^{B}$$\end{document}</tex-math><mml:math id="M160"><mml:msubsup><mml:mi>E</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mi>B</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq80.gif"/></alternatives></inline-formula>, we can rapidly find the data block where the target quality score line is located. The advantage of building a lightweight index is that the size of index files is greatly reduced, while the disadvantage is that a searching operation is needed during the random access process, but it only takes a small amount of time compared with the whole process.</p>
      <p id="Par54">Suppose the user wants to find the quality score lines within the range [a, b] (<inline-formula id="IEq81"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a,b$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq81.gif"/></alternatives></inline-formula> are the quality score line numbers in the quality score file). We first query the index table of container A and locate the target lines in a range of class A data blocks. Thus, we can obtain all class A lines in <inline-formula id="IEq82"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ {a,b} \right]$$\end{document}</tex-math><mml:math id="M164"><mml:mfenced close="]" open="["><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq82.gif"/></alternatives></inline-formula>. For class B lines, the special character stored in container A and the number information in <inline-formula id="IEq83"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M166"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq83.gif"/></alternatives></inline-formula> record its location information. The start line <inline-formula id="IEq84"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_{B}$$\end{document}</tex-math><mml:math id="M168"><mml:msub><mml:mi>a</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq84.gif"/></alternatives></inline-formula> and the end line <inline-formula id="IEq85"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_{B}$$\end{document}</tex-math><mml:math id="M170"><mml:msub><mml:mi>b</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq85.gif"/></alternatives></inline-formula> of class B in <inline-formula id="IEq86"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ {a,b} \right]$$\end{document}</tex-math><mml:math id="M172"><mml:mfenced close="]" open="["><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq86.gif"/></alternatives></inline-formula> are calculated by the information in the index tables:</p>
      <p id="Par55">Assume the number of quality score lines of class A before <inline-formula id="IEq87"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_{B}$$\end{document}</tex-math><mml:math id="M174"><mml:msub><mml:mi>a</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq87.gif"/></alternatives></inline-formula> is <inline-formula id="IEq88"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{a}$$\end{document}</tex-math><mml:math id="M176"><mml:msub><mml:mi>N</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq88.gif"/></alternatives></inline-formula>, <inline-formula id="IEq89"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_{B} = N_{a} + S_{i}^{A}$$\end{document}</tex-math><mml:math id="M178"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>A</mml:mi></mml:msubsup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq89.gif"/></alternatives></inline-formula>. When we find the <inline-formula id="IEq90"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M180"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq90.gif"/></alternatives></inline-formula> th special character, it indicates that this position represents the last class B line in class A data blocks. Assume the number of quality score lines of class A before <inline-formula id="IEq91"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_{B}$$\end{document}</tex-math><mml:math id="M182"><mml:msub><mml:mi>b</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq91.gif"/></alternatives></inline-formula> is <inline-formula id="IEq92"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{b}$$\end{document}</tex-math><mml:math id="M184"><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq92.gif"/></alternatives></inline-formula>, <inline-formula id="IEq93"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_{B} = N_{b} + \mu + S_{i}^{A}$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>μ</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>A</mml:mi></mml:msubsup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq93.gif"/></alternatives></inline-formula>. Then, we query the index table of container B and locate <inline-formula id="IEq94"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ {a_{B} ,b_{B} } \right]$$\end{document}</tex-math><mml:math id="M188"><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>B</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4837_Article_IEq94.gif"/></alternatives></inline-formula> in class B data blocks. Finally, the decompression operation is performed to complete the random access.</p>
      <p id="Par56">Since the index table is ordered, we can use the binary search algorithm to query the index table. Typically, we need to traverse the index table from scratch to locate a block of data. The binary search can effectively reduce the search time. The “Go to Compression Phase” block in Fig. <xref rid="Fig2" ref-type="fig">2</xref> means that the algorithm goes to the compression phase after the index is established. In addition to extracting a specific range of quality score lines through random access, when we decompress the entire file, the order of the decompressed quality score lines is the same as their original order.</p>
    </sec>
    <sec id="Sec6">
      <title>Compression</title>
      <p id="Par57">In the last step of compression, we use libzpaq, an open-source compression library, which is the most advanced back-end compression algorithm. Although libzpaq has high compression performance, its compression speed is very slow. Therefore, optimizing libzpaq code is the focus of this step. In recent years, with the continuous update of the version, the compression speed of libzpaq has been substantially improved.</p>
      <p id="Par58">We combine the characteristics of libzpaq and CMIC (we adopt the strategy of block compression). The algorithm realizes the parallelization of the compression process by using SIMD (single instruction multiple data) technology. Libzpaq has a JIT version and a non-JIT version, and the JIT version is used in CMIC. The advantage of using this strategy is that we can make full use of the advantages of multiple CPU cores in parallel computing and greatly improve the compression speed. Using more CPU cores will improve the compression speed. However, the whole file is segmented and compressed by different threads; then, the compression ratio will be affected, and the CPU and memory occupation running the algorithm is large. However, with the rapid development of hardware, we are no longer limited to the slow speed and the small memory computers of the past. Therefore, we should try to maximize the performance of our algorithm.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Results</title>
    <p id="Par59">In this section, we describe the experimental configuration in details and verify the superiority of CIMC compared with other compressors, mainly in terms of the following aspects: robustness, compression ratio, compression speed, random access speed, and decompression speed.</p>
    <sec id="Sec8">
      <title>Datasets and compared algorithms</title>
      <p id="Par60">In order to ensure that the datasets are fair and reasonable, we have selected some genomic datasets in the MPEG HTS compression working group. On the one hand, with huge demand and rapid development of genomic information compression, the standardization of genomic data benchmark has become an important task. The MPEG HTS compression working group is aware of the need and is building up the genomic data benchmark. They have done a better job on this side, which is the basis for our selection of test data. On the other hand, in order to make the experimental results more accurate, we should pay attention to the selection of test data involving different species, different platforms, different read lengths, and different sizes. Based on the above criteria, we selected the datasets shown in Table <xref rid="Tab1" ref-type="table">1</xref>. They are publicly available from <ext-link ext-link-type="uri" xlink:href="https://trace.ncbi.nlm.nih.gov/Traces/sra/">https://trace.ncbi.nlm.nih.gov/Traces/sra/</ext-link>.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Detailed descriptions of tested genome datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Code</th><th align="left">Datasets</th><th align="left">Platforms</th><th align="left">Organism</th><th align="left">Bases (Mbp)</th><th align="left">Read length</th><th align="left">Size (Quality Score)</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">SRR1284073</td><td align="left">PacBio</td><td align="left">Escherichia coli</td><td align="left">649.4</td><td align="left">(130,10,000)</td><td align="left">476,930,701 bytes</td></tr><tr><td align="left">2</td><td align="left">SRR327342</td><td align="left">Illumina</td><td align="left">S.Cerevisiae</td><td align="left">2100</td><td align="left">75</td><td align="left">2,105,137,860 bytes</td></tr><tr><td align="left">3</td><td align="left">SRR870667</td><td align="left">Illumina</td><td align="left">T.Cacao</td><td align="left">12,600</td><td align="left">74 or 108</td><td align="left">11,455,676,056 bytes</td></tr><tr><td align="left">4</td><td align="left">ERR091571</td><td align="left">Illumina</td><td align="left">Homo sapiens</td><td align="left">42,700</td><td align="left">100</td><td align="left">43,133,335,476 bytes</td></tr><tr><td align="left">5</td><td align="left">SRR003187</td><td align="left">LS454</td><td align="left">Homo sapiens</td><td align="left">803</td><td align="left">(500,1000)</td><td align="left">798,985,944 bytes</td></tr><tr><td align="left">6</td><td align="left">SRR003177</td><td align="left">LS454</td><td align="left">Homo sapiens</td><td align="left">855</td><td align="left">(500,1000)</td><td align="left">850,464,554 bytes</td></tr><tr><td align="left">7</td><td align="left">SRR007215</td><td align="left">ABI Solid</td><td align="left">Homo sapiens</td><td align="left">238.6</td><td align="left">25</td><td align="left">248,099,332 bytes</td></tr><tr><td align="left">8</td><td align="left">SRR010712</td><td align="left">ABI Solid</td><td align="left">Homo sapiens</td><td align="left">431.6</td><td align="left">35</td><td align="left">443,972,736 bytes</td></tr><tr><td align="left">9</td><td align="left">SRR070253</td><td align="left">ABI Solid</td><td align="left">Homo sapiens</td><td align="left">45,600</td><td align="left">50</td><td align="left">12,719,021,580 bytes</td></tr><tr><td align="left">10</td><td align="left">SRR801793</td><td align="left">Illumina</td><td align="left">Legionella pneumophila</td><td align="left">1100</td><td align="left">100</td><td align="left">1,092,105,122 bytes</td></tr><tr><td align="left">11</td><td align="left">SRR14340293</td><td align="left">OXFORD NANOPORE</td><td align="left">Puccinia graminis</td><td align="left">8900</td><td align="left">(1000,10,000)</td><td align="left">7,782,970,748 bytes</td></tr></tbody></table></table-wrap></p>
      <p id="Par61">All tests are performed on a server with Intel Xeon(R) Gold 6240 CPU(2.60 GHz *72) with 251.3 GB of memory, running the CentOS Linux 7 operating system.</p>
      <p id="Par62">To better evaluate the performance of CIMC, we chose two types of lossless compressors, the first type is the general purpose lossless compressor, the second is the professional quality score lossless compressor. We chose LCQS, AQUa and FCLQC as the professional quality score compressors for comparison. For general lossless compressors, we choose 7-Zip and Gzip for comparison.</p>
    </sec>
    <sec id="Sec9">
      <title>Experimental results</title>
      <p id="Par63">The experimental results are shown in Table <xref rid="Tab2" ref-type="table">2</xref>. As we can see, in terms of the compression rate, we achieve the best results for all datasets compared with other compressors (Because FCLQC [<xref ref-type="bibr" rid="CR19">19</xref>] focused on improving the compression speed, so the compression rate is not very ideal, we did not add it to the control group). The compression rate is the value of bits per quality score. The best experimental result is the No.9 dataset with a compression rate of 1.01. In particular, compared with LCQS, 7-Zip, Gzip, the file size is reduced by up to 30.65%, 59.07%, and 94.05% respectively for the No.5 dataset using CMIC. Compared with AQUa, we can also see better compression rates for all of the datasets, with file sizes being 18.78% ~ 28.31% smaller than AQUa. At the same time, AQUa is not good at compressing FASTQ files with variable read lengths. CMIC is apparently effective both in terms of the compression rate and robustness.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Comparison results of compression rates</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" colspan="5">Compression rates (bits per quality score)</th><th align="left" colspan="4">CMIC File Size versus</th></tr><tr><th align="left">CMIC</th><th align="left">LCQS</th><th align="left">AQUa</th><th align="left">7-zip</th><th align="left">Gzip</th><th align="left">LCQS</th><th align="left">AQUa</th><th align="left">7-zip</th><th align="left">Gzip</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">2.10</td><td align="left">2.27</td><td align="left">–</td><td align="left">2.54</td><td align="left">2.79</td><td align="left"> − 8.13%</td><td align="left"> − </td><td align="left"> − 20.99%</td><td align="left"> − 33.17%</td></tr><tr><td align="left">2</td><td align="left">2.75</td><td align="left">3.05</td><td align="left">3.38</td><td align="left">3.37</td><td align="left">3.74</td><td align="left"> − 10.71%</td><td align="left"> − 22.78%</td><td align="left"> − 22.46%</td><td align="left"> − 36.03%</td></tr><tr><td align="left">3</td><td align="left">2.31</td><td align="left">2.38</td><td align="left">–</td><td align="left">2.85</td><td align="left">3.05</td><td align="left"> − 2.96%</td><td align="left"> − </td><td align="left"> − 23.42%</td><td align="left"> − 31.95%</td></tr><tr><td align="left">4</td><td align="left">2.01</td><td align="left">2.04</td><td align="left">2.52</td><td align="left">2.44</td><td align="left">2.86</td><td align="left"> − 1.49%</td><td align="left"> − 25.64%</td><td align="left"> − 21.82%</td><td align="left"> − 42.51%</td></tr><tr><td align="left">5</td><td align="left">1.33</td><td align="left">1.74</td><td align="left">–</td><td align="left">2.12</td><td align="left">2.59</td><td align="left"> − <bold>30.65%</bold></td><td align="left">–</td><td align="left"> − <bold>59.07%</bold></td><td align="left"> − <bold>94.05%</bold></td></tr><tr><td align="left">6</td><td align="left">1.38</td><td align="left">1.70</td><td align="left">–</td><td align="left">2.08</td><td align="left">2.54</td><td align="left"> − 23.34%</td><td align="left">–</td><td align="left"> − 50.52%</td><td align="left"> − 83.91%</td></tr><tr><td align="left">7</td><td align="left">4.13</td><td align="left">4.68</td><td align="left">4.91</td><td align="left">5.09</td><td align="left">5.26</td><td align="left"> − 13.35%</td><td align="left"> − 18.78%</td><td align="left"> − 23.17%</td><td align="left"> − 27.17%</td></tr><tr><td align="left">8</td><td align="left">4.20</td><td align="left">4.75</td><td align="left">5.02</td><td align="left">5.15</td><td align="left">5.32</td><td align="left"> − 13.14%</td><td align="left"> − 19.73%</td><td align="left"> − 22.65%</td><td align="left"> − 26.67%</td></tr><tr><td align="left">9</td><td align="left">1.01</td><td align="left">1.16</td><td align="left">1.30</td><td align="left">1.28</td><td align="left">1.37</td><td align="left"> − 15.08%</td><td align="left"> − <bold>28.31%</bold></td><td align="left"> − 26.43%</td><td align="left"> − 35.45%</td></tr><tr><td align="left">10</td><td align="left">2.47</td><td align="left">2.50</td><td align="left">3.02</td><td align="left">2.96</td><td align="left">3.44</td><td align="left"> − 1.05%</td><td align="left"> − 22.32%</td><td align="left"> − 19.96%</td><td align="left"> − 39.17%</td></tr><tr><td align="left">11</td><td align="left">3.14</td><td align="left">3.82</td><td align="left">–</td><td align="left">4.23</td><td align="left">4.52</td><td align="left"> − 21.91%</td><td align="left"> − </td><td align="left"> − 34.95%</td><td align="left"> − 44.03%</td></tr></tbody></table><table-wrap-foot><p>Bold denotes the best compression rates for compressors</p></table-wrap-foot></table-wrap></p>
      <p id="Par64">Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the average compression rates of the five compressors over the datasets, and it is clear to see that the proposed algorithm has the best averaged compression performance.<fig id="Fig3"><label>Fig. 3</label><caption><p>The averaged compression rates of five compressors over 11 datasets</p></caption><graphic xlink:href="12859_2022_4837_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par65">Through observation on Tables <xref rid="Tab1" ref-type="table">1</xref> and <xref rid="Tab2" ref-type="table">2</xref>, we have found that the compression rates of CIMC have a strong relationship with the read lengths of FASTQ files. The smaller the read length, the lower the compression rate. Generally speaking, for the same read length, the larger the dataset is, the better the compression performance is.</p>
      <p id="Par66">Table <xref rid="Tab3" ref-type="table">3</xref> shows the results of the compression speed of the CMIC compared with other four compressors. Since AQUA is unable to process FASTQ files with variable read lengths, so we do not use AQUa as a comparison compressor from now on. The compression speed is the ratio of the uncompressed file size and the time needed for compression. Compared with LCQS and 7-zip, The compression speed of CMIC is better on all datasets, it improves the compression speed 0.63% ~ 1079.82%. Compared with Gzip, the maximum improvement is 390.47%. But it does not do well on five datasets (No.1, No.7, No.8, NO.9, No.11). In the worst case, CMIC is 86.69% slower than Gzip. However, the averaged compression performance of Gzip is the worst among all six compressors. Compared with FCLQC, CMIC is 20 ~ 60 times slower than it. But the compression is better than FCLQC.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Comparison results of compression speed</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" colspan="5">Compression speed (MB/S)</th><th align="left" colspan="4">CMIC accelerating ratio versus%</th></tr><tr><th align="left">CMIC</th><th align="left">LCQS</th><th align="left">FCLQC</th><th align="left">7-zip</th><th align="left">Gzip</th><th align="left">LCQS</th><th align="left">FCLQC</th><th align="left">7-zip</th><th align="left">Gzip</th></tr></thead><tbody><tr><td align="left">1</td><td char="." align="char">5.592</td><td char="." align="char">5.073</td><td align="left"/><td char="." align="char">1.511</td><td char="." align="char"><bold>6.399</bold></td><td char="." align="char">10.23%</td><td align="left">–</td><td char="." align="char">270.09%</td><td align="left">− 12.61%</td></tr><tr><td align="left">2</td><td char="." align="char">8.796</td><td char="." align="char">8.741</td><td align="left"><bold>303.66</bold></td><td char="." align="char">6.435</td><td char="." align="char">4.523</td><td char="." align="char">0.63%</td><td align="left"> − 3352.25%</td><td char="." align="char">36.69%</td><td align="left">94.47%</td></tr><tr><td align="left">3</td><td char="." align="char">10.556</td><td char="." align="char">9.472</td><td align="left"><bold>329.16</bold></td><td char="." align="char">1.213</td><td char="." align="char">2.292</td><td char="." align="char">11.44%</td><td align="left"> − 3018.23%</td><td char="." align="char">770.24%</td><td align="left">360.56%</td></tr><tr><td align="left">4</td><td char="." align="char">12.86</td><td char="." align="char">11.074</td><td align="left"><bold>290.23</bold></td><td char="." align="char">1.09</td><td char="." align="char">2.622</td><td char="." align="char">16.13%</td><td align="left"> − 2156.84%</td><td char="." align="char">1079.82%</td><td align="left">390.47%</td></tr><tr><td align="left">5</td><td char="." align="char"><bold>8.406</bold></td><td char="." align="char">6.981</td><td align="left">–</td><td char="." align="char">2.822</td><td char="." align="char">2.0538</td><td char="." align="char">20.41%</td><td align="left">–</td><td char="." align="char">197.87%</td><td align="left">309.29%</td></tr><tr><td align="left">6</td><td char="." align="char"><bold>8.012</bold></td><td char="." align="char">6.983</td><td align="left">–</td><td char="." align="char">2.846</td><td char="." align="char">2.768</td><td char="." align="char">14.74%</td><td align="left">–</td><td char="." align="char">181.52%</td><td align="left">189.45%</td></tr><tr><td align="left">7</td><td char="." align="char">2.831</td><td char="." align="char">2.787</td><td align="left"><bold>159.12</bold></td><td char="." align="char">0.986</td><td char="." align="char">21.274</td><td char="." align="char">1.58%</td><td align="left"> − 5520.63%</td><td char="." align="char">187.12%</td><td align="left"> − 86.69%</td></tr><tr><td align="left">8</td><td char="." align="char">3.532</td><td char="." align="char">3.374</td><td align="left"><bold>265,29</bold></td><td char="." align="char">1.882</td><td char="." align="char">9.876</td><td char="." align="char">4.68%</td><td align="left">–</td><td char="." align="char">87.67%</td><td align="left"> − 64.24%</td></tr><tr><td align="left">9</td><td char="." align="char">6.621</td><td char="." align="char">6.126</td><td align="left"><bold>421.58</bold></td><td char="." align="char">3.063</td><td char="." align="char">13.644</td><td char="." align="char">8.08%</td><td align="left"> − 6267.32%</td><td char="." align="char">116.16%</td><td align="left"> − 51.47%</td></tr><tr><td align="left">10</td><td char="." align="char">5.444</td><td char="." align="char">5.389</td><td align="left"><bold>312.74</bold></td><td char="." align="char">2.351</td><td char="." align="char">3.36</td><td char="." align="char">1.02%</td><td align="left"> − 5644.67%</td><td char="." align="char">131.56%</td><td align="left">62.02%</td></tr><tr><td align="left">11</td><td char="." align="char">6.095</td><td char="." align="char">5.274</td><td align="left">–</td><td char="." align="char">2.586</td><td char="." align="char"><bold>23.328</bold></td><td char="." align="char">15.57%</td><td align="left">–</td><td char="." align="char">135.69%</td><td align="left"> − 73.87%</td></tr></tbody></table><table-wrap-foot><p>Bold denotes the fastest compression speed</p></table-wrap-foot></table-wrap></p>
      <p id="Par67">Table <xref rid="Tab4" ref-type="table">4</xref> shows CMIC and LCQS decompression speed. The decompression speed is the number of the quality score lines that the compressor can decompress per second. However, neither Gzip nor 7-zip supports decompressing files by lines. Therefore, the decompression speed of CMIC is only compared with LCQS. CMIC performs well on all of the datasets. Compared with LCQS, CMIC has a maximum improvement of 32.92%.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Comparison results of decompression speed</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" colspan="2">Decompression speed (thousand lines/s)</th><th align="left" rowspan="2">CMIC accelerating ratio versus%</th></tr><tr><th align="left">CMIC</th><th align="left">LCQS</th></tr></thead><tbody><tr><td align="left">1</td><td char="." align="char">2.43</td><td char="." align="char">1.36</td><td char="." align="char">32.92%</td></tr><tr><td align="left">2</td><td char="." align="char">2.51</td><td char="." align="char">2.31</td><td char="." align="char">7.97%</td></tr><tr><td align="left">3</td><td char="." align="char">2.67</td><td char="." align="char">2.10</td><td char="." align="char">21.35%</td></tr><tr><td align="left">4</td><td char="." align="char">2.42</td><td char="." align="char">2.31</td><td char="." align="char">4.55%</td></tr><tr><td align="left">5</td><td char="." align="char">3.13</td><td char="." align="char">2.96</td><td char="." align="char">5.43%</td></tr><tr><td align="left">6</td><td char="." align="char">3.21</td><td char="." align="char">2.85</td><td char="." align="char">11.21%</td></tr><tr><td align="left">7</td><td char="." align="char">2.20</td><td char="." align="char">2.11</td><td char="." align="char">4.27%</td></tr><tr><td align="left">8</td><td char="." align="char">2.67</td><td char="." align="char">2.16</td><td char="." align="char">19.10%</td></tr><tr><td align="left">9</td><td char="." align="char">1.82</td><td char="." align="char">1.73</td><td char="." align="char">4.95%</td></tr><tr><td align="left">10</td><td char="." align="char">2.77</td><td char="." align="char">2.75</td><td char="." align="char">0.72%</td></tr><tr><td align="left">11</td><td char="." align="char">1.63</td><td char="." align="char">1.47</td><td char="." align="char">9.82%</td></tr></tbody></table></table-wrap></p>
      <p id="Par68">Table <xref rid="Tab5" ref-type="table">5</xref> shows CMIC and LCQS random access speed. Here, the random access speed refers to the time required for locating the data blocks that contain the target quality score lines. The experiment design is as follows. We select No.3, No.4, No.9, No.10, and No. 11 datasets as our test data. Since they are larger than other datasets. We select some search ranges for target quality score lines as the test intervals. In each interval, 10,000 lines of data are randomly selected as the access targets. 100 experiments are conducted for each interval, and the averaged random access time is taken at last. It is obvious that CMIC has great advantages in the random access speed. Compared with LCQS, No.11 has achieved the best results. CMIC improves by 396.1%. The larger the size of the quality score file, the more improvement of the averaged random access time of CMIC, since the binary search is apparently superior than the linear search used in LCQS. About the size of the index used, because we use a light wight index building method, the index table takes up only a small amount of space. For example, for the No.4 dataset, the size of the index table accounts for 0.016% of the compressed file, for the No.11 dataset, the size of the index table accounts for 0.013% of the compressed file.<table-wrap id="Tab5"><label>Table 5</label><caption><p>Comparison results of random access speed</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Methods</th><th align="left" colspan="5">Random access speed (ms)</th></tr><tr><th align="left">(No.3) [75200000–75600000]</th><th align="left">(No.4)[300500000–300900000]</th><th align="left">(No.9) [120400000–121000000]</th><th align="left">(No.10) [4300000,4700000]</th><th align="left">(No.11) [700000–1100000]</th></tr></thead><tbody><tr><td align="left">CMIC</td><td align="left"><bold>153.0</bold></td><td align="left"><bold>290.2</bold></td><td align="left"><bold>206.1</bold></td><td align="left"><bold>146.6</bold></td><td align="left"><bold>100.0</bold></td></tr><tr><td align="left">LCQS</td><td align="left">524.4</td><td align="left">869.3</td><td align="left">530.5</td><td align="left">418.0</td><td align="left">496.1</td></tr></tbody></table><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="5">CMIC accelerating ratio versus%</th></tr></thead><tbody><tr><td align="left"/><td align="left">242.7%</td><td align="left">199.6%</td><td align="left">157.4%</td><td align="left">185.1%</td><td align="left">396.1%</td></tr></tbody></table><table-wrap-foot><p>Bold denotes the fastest random access speed</p></table-wrap-foot></table-wrap></p>
      <p id="Par69">As we all know, when the size of the block is small, the compression efficiency will be reduced, and the decompression time by random access will be improved. On the contrary, the compression efficiency will be improved, and the decompression time by random access will slow down. Table <xref rid="Tab6" ref-type="table">6</xref> shows the decompression times by random access for different block sizes (The size of the block is the number of quality score lines). We select a line in the file (such as line 80,000) as our random access object. As can be seen from Table <xref rid="Tab6" ref-type="table">6</xref>, when the block size is large, the decompression time will be significantly longer, and vice versa.<table-wrap id="Tab6"><label>Table 6</label><caption><p>The decompression times by random access for different block sizes</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" colspan="4">The block size</th></tr><tr><th align="left">15,000</th><th align="left">20,000</th><th align="left">25,000</th><th align="left">30,000</th></tr></thead><tbody><tr><td align="left">1</td><td char="." align="char">149.5</td><td char="." align="char">201.2</td><td char="." align="char">242.8</td><td char="." align="char">298.6</td></tr><tr><td align="left">3</td><td char="." align="char">136.8</td><td char="." align="char">176.3</td><td char="." align="char">225.6</td><td char="." align="char">274.5</td></tr><tr><td align="left">4</td><td char="." align="char">145.2</td><td char="." align="char">194.7</td><td char="." align="char">235.7</td><td char="." align="char">289.2</td></tr><tr><td align="left">10</td><td char="." align="char">140.8</td><td char="." align="char">186.4</td><td char="." align="char">230.3</td><td char="." align="char">284.6</td></tr></tbody></table></table-wrap></p>
      <p id="Par70">About the maximum CPU memory usage. Because CMIC algorithm needs to work in parallel, the data is compressed needs to be stored in memory, and each thread needs to occupy the corresponding workspace. For example, for No.5 dataset, its file size is 798985944 bytes, the maximum CPU memory usage in the compression phase is 9.5 GB, the maximum CPU memory usage in the decompression phase is 13.5 GB, and the maximum running memory usage in the random access phase is 0.6976 GB. Especially for the No.4 dataset, its file size is 431333335476 bytes, and its maximum memory usage in the decompression stage is 51.5 GB. Therefore, the memory usage of CMIC depends on the size of compressed data.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Conclusion</title>
    <p id="Par71">This paper presents CMIC, a quality score compressor that supports random access. Experiments show that CMIC has advantages in terms of the compression rate and the random access time over all 11 datasets. Although the compression speed is not as fast as Gzip on some datasets, the compression efficiency is much better than that of Gzip. The proposed quality score compressor can be integrated into other FASTQ file compressors to improve their overall compression performance. However, in order to improve the compression efficiency of base sequences, it is usually necessary to classify base sequences. This will be different from the classification of quality score lines in this algorithm. Therefore, some kind of index has to be built for the base sequence to support random access. About the future work, In the FASTQ file generated by NPS, there is a certain correlation between the base sequence and the quality score sequence of each read. We hope to improve the compression efficiency of the quality score by using this correlation while ensuring the random access performance.</p>
    <p id="Par72">About the future work, In the FASTQ file generated by NPS, there is a certain correlation between the base sequence and the quality score sequence of each read. We hope to improve the compression efficiency of the quality score by using this correlation while ensuring the random access performance.</p>
  </sec>
  <sec id="Sec11">
    <title>Availability and requirements</title>
    <p id="Par73">
      <list list-type="bullet">
        <list-item>
          <p id="Par74">Project name: CMIC.</p>
        </list-item>
        <list-item>
          <p id="Par75">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Humonex/Cmic">https://github.com/Humonex/Cmic</ext-link>.</p>
        </list-item>
        <list-item>
          <p id="Par76">Operating systems: Linux</p>
        </list-item>
        <list-item>
          <p id="Par77">Programming language: C++</p>
        </list-item>
        <list-item>
          <p id="Par78">Other requirements: gcc 5.4.0.</p>
        </list-item>
        <list-item>
          <p id="Par79">License: The MIT License.</p>
        </list-item>
        <list-item>
          <p id="Par80">Any restrictions to use by non-academics: For commercial use, please contact the authors.</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec12">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2022_4837_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1</bold>. The pseudocode of the mapping algorithm.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>MB</term>
        <def>
          <p id="Par4">Megabyte</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par5">Next generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>NPS</term>
        <def>
          <p id="Par6">Nanopore sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>SIMD</term>
        <def>
          <p id="Par7">Single instruction multiple data</p>
        </def>
      </def-item>
      <def-item>
        <term>CABAC</term>
        <def>
          <p id="Par8">Context-adaptive binary arithmetic coder</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>HC implemented the code. HC and JC wrote the manuscript. JC guided the project. ZL completed a part of the experiments and prepared the dataset. The random access and indexing schemes were determined after discussion with RW. RW also helped to modify the manuscript. All authors read and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is funded by National Natural Science Foundation of China under Grant (61861045). The funder had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>This database is public. The datasets (ID: SRR1284073, SRR327342, SRR870667, ERR091571, SRR003187, SRR003177, SRR007215, SRR010712, SRR070253, SRR801793, SRR14340293) supporting the conclusions of this paper are publicly available from <ext-link ext-link-type="uri" xlink:href="https://trace.ncbi.nlm.nih.gov/Traces/sra/">https://trace.ncbi.nlm.nih.gov/Traces/sra/</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par81">The ethic approval is not required since we used publicly available datasets.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par82">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par83">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other"><ext-link ext-link-type="uri" xlink:href="https://www.illumina.com/systems/hiseq-x-sequencing-system.html">https://www.illumina.com/systems/hiseq-x-sequencing-system.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mikel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Dmitri</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genomic data compression</article-title>
        <source>Annu Rev Biomed Data Sci</source>
        <year>2019</year>
        <volume>2</volume>
        <fpage>19</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev-biodatasci-072018-021229</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Metzker</surname>
            <given-names>ML</given-names>
          </name>
        </person-group>
        <article-title>Sequencing technologies the next generation</article-title>
        <source>Nat Rev Genet</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2626</pub-id>
        <pub-id pub-id-type="pmid">20050269</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bonfield</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Mahoney</surname>
            <given-names>MV</given-names>
          </name>
        </person-group>
        <article-title>Compression of FASTQ and SAM format sequencing data</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>e59190</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0059190</pub-id>
        <pub-id pub-id-type="pmid">23533605</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Mount DW. Bioinformatics: sequence and genome analysis. Cold Spring Harbor Laboratory Press;2001.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Organick</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ang</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>YJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Random access in large-scale DNA data storage</article-title>
        <source>Nat Biotechnol</source>
        <year>2018</year>
        <volume>36</volume>
        <fpage>242</fpage>
        <lpage>248</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.4079</pub-id>
        <pub-id pub-id-type="pmid">29457795</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Raffaele</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rombo</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Filippo</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Compressive biological sequence analysis and archival in the era of high-throughput sequencing technologies</article-title>
        <source>Brief Bioinform</source>
        <year>2014</year>
        <volume>3</volume>
        <fpage>390</fpage>
        <lpage>406</lpage>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paridaens</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Van Wallendael</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>De Neve</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Lambert</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>AQUa: an adaptive framework for compression of sequencing quality scores with random access functionality</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>3</issue>
        <fpage>425</fpage>
        <lpage>433</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx607</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Alberti C, Daniels N, Hernaez M, et al. An evaluation framework for lossy compression of genome sequencing quality values. Data Compression Conference. Proc Data Compress Conf, 2016; 221–230.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hernaez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ochoa</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Rao</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ganesan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Weissmans</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Qvz: lossy compression of quality values</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>19</issue>
        <fpage>3122</fpage>
        <lpage>3129</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv330</pub-id>
        <pub-id pub-id-type="pmid">26026138</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodrigo</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Alistair</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Andrew</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Lossy compression of quality scores in genomic data</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>15</issue>
        <fpage>2130</fpage>
        <lpage>2136</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu183</pub-id>
        <pub-id pub-id-type="pmid">24728856</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lukasz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sebastian</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>DSRC2–Industry-oriented compression of FASTQ files</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>15</issue>
        <fpage>2213</fpage>
        <lpage>2215</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu208</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Huang ZA, Wen Z, Deng Q, et al. LW-FQZip 2: a parallelized reference-based compression of FASTQ files. BMC Bioinf 2017;18(1).</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicolae</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pathak</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>LFQC: a lossless compression algorithm for fastq files</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>20</issue>
        <fpage>3276</fpage>
        <lpage>3281</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv384</pub-id>
        <pub-id pub-id-type="pmid">26093148</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other"><ext-link ext-link-type="uri" xlink:href="http://www.gzip.org">http://www.gzip.org</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other"><ext-link ext-link-type="uri" xlink:href="http://www.7-zip.org/sdk.html">http://www.7-zip.org/sdk.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faraz</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SCALCE: boosting sequence compression algorithms using locally consistent encoding</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>23</issue>
        <fpage>3051</fpage>
        <lpage>3057</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Sahinalp SC, Vishkin U. Efficient approximate and dynamic matching of patterns using a labeling paradigm. Symposium on Foundations of Computer Science. IEEE, 1996.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Graham Cormode et al. Communication complexity of document exchange, 2000.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Tuğkan B, Funda E, Cenk S. Oblivious string embeddings and edit distance approximations. Discrete algorithm 2006.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodrigo</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Alistair</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Andrew</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>CSAM: compressed SAM format</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>24</issue>
        <fpage>3709</fpage>
        <lpage>3716</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw543</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paridaens</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>AFRESh: an adaptive framework for compression of reads and assembled sequences with random access functionality</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>1464</fpage>
        <lpage>1472</lpage>
        <?supplied-pmid 28057687?>
        <pub-id pub-id-type="pmid">28057687</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Marpe D, Schwarz H, Wiegand T. Context-based adaptive binary arithmetic coding in the H.264/AVC video compression standard. IEEE Trans Circuits Syst Video Technol 2003;13(7):620–636.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Sze</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Budagavi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sullivan</surname>
            <given-names>GJ</given-names>
          </name>
          <etal/>
        </person-group>
        <source>High efficiency video coding (HEVC): algorithms and architectures</source>
        <year>2014</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer Publishing Company</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Fu J, Ke B, Dong S. LCQS: an efficient lossless compression tool of quality scores with random access functionality. BMC Bioinf 2020;21(1).</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other"><ext-link ext-link-type="uri" xlink:href="http://mattmahoney.net/dc/zpaq.html">http://mattmahoney.net/dc/zpaq.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cho</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>No</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>FCLQC: fast and concurrent lossless quality scores compressor</article-title>
        <source>BMC Bioinf</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>606</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-021-04516-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Łukasz R, Paolo R. CARGO: effective format-free compressed storage of genomic information. Nucleic Acids Research, 201612:e114–e114.</mixed-citation>
    </ref>
  </ref-list>
</back>

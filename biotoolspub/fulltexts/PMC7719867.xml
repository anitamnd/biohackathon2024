<?DTDIdentifier.IdentifierValue -//ES//DTD journal article DTD version 5.6.0//EN//XML?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName art560.dtd?>
<?SourceDTD.Version 5.6.0?>
<?ConverterInfo.XSLTName elsevier2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<?origin publisher?>
<?FILEmeta_CSBJ694 xml ?>
<?FILEmain xml ?>
<?FILEmain pdf ?>
<?FILEgr1 jpg ?>
<?FILEgr2 jpg ?>
<?FILEgr3 jpg ?>
<?FILEgr4 jpg ?>
<?FILEgr5 jpg ?>
<?FILEmmc1 pdf ?>
<?FILEmmc2 zip ?>
<?FILEmmc3 zip ?>
<?properties open_access?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Comput Struct Biotechnol J</journal-id>
    <journal-id journal-id-type="iso-abbrev">Comput Struct Biotechnol J</journal-id>
    <journal-title-group>
      <journal-title>Computational and Structural Biotechnology Journal</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2001-0370</issn>
    <publisher>
      <publisher-name>Research Network of Computational and Structural Biotechnology</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7719867</article-id>
    <article-id pub-id-type="pii">S2001-0370(20)30445-1</article-id>
    <article-id pub-id-type="doi">10.1016/j.csbj.2020.10.023</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ProdMX: Rapid query and analysis of protein functional domain based on compressed sparse matrices</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="au005">
        <name>
          <surname>Wanchai</surname>
          <given-names>Visanu</given-names>
        </name>
        <email>VWanchai@uams.edu</email>
        <email>visanu.wanchai@gmail.com</email>
        <xref rid="cor1" ref-type="corresp">⁎</xref>
      </contrib>
      <contrib contrib-type="author" id="au010">
        <name>
          <surname>Nookaew</surname>
          <given-names>Intawat</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author" id="au015">
        <name>
          <surname>Ussery</surname>
          <given-names>David W.</given-names>
        </name>
      </contrib>
      <aff id="af005">Arkansas Center for Genomic Epidemiology &amp; Medicine and The Department of Biomedical Informatics, University of Arkansas for Medical Sciences, Little Rock, AR 72205, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>⁎</label>Corresponding author. <email>VWanchai@uams.edu</email><email>visanu.wanchai@gmail.com</email></corresp>
    </author-notes>
    <pub-date pub-type="pmc-release">
      <day>24</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on <pub-date
						pub-type="epub">.-->
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>24</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <volume>18</volume>
    <fpage>3890</fpage>
    <lpage>3896</lpage>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>6</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>20</day>
        <month>10</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>10</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <license license-type="CC BY" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).</license-p>
      </license>
    </permissions>
    <abstract id="ab005">
      <p>Large-scale protein analysis has been used to characterize large numbers of proteins across numerous species. One of the applications is to use as a high-throughput screening method for pathogenicity of genomes. Unlike sequence homology methods, protein comparison at a functional level provides us with a unique opportunity to classify proteins, based on their functional structures without dealing with sequence complexity of distantly related species. Protein functions can be abstractly described by a set of protein functional domains, such as PfamA domains; a set of genomes can then be mapped to a matrix, with each row representing a genome, and the columns representing the presence or absence of a given functional domain. However, a powerful tool is needed to analyze the large sparse matrices generated by millions of genomes that will become available in the near future. The ProdMX is a tool with user-friendly utilities developed to facilitate high-throughput analysis of proteins with an ability to be included as an effective module in the high-throughput pipeline. The ProdMX employs a compressed sparse matrix algorithm to reduce computational resources and time used to perform the matrix manipulation during functional domain analysis. The ProdMX is a free and publicly available Python package which can be installed with popular package mangers such as PyPI and Conda, or with a standard installer from source code available on the ProdMX GitHub repository at <ext-link ext-link-type="uri" xlink:href="https://github.com/visanuwan/prodmx" id="ir005">https://github.com/visanuwan/prodmx</ext-link>.</p>
    </abstract>
    <kwd-group id="kg005">
      <title>Keywords</title>
      <kwd>Proteins</kwd>
      <kwd>Protein functional domain</kwd>
      <kwd>Domain architecture</kwd>
      <kwd>Comparative genomics</kwd>
      <kwd>Python</kwd>
      <kwd>Compressed sparse matrix</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="s0005">
    <label>1</label>
    <title>Introduction</title>
    <p id="p0005">The comparison of protein functional domains is an important task in bioinformatics <xref rid="b0005" ref-type="bibr">[1]</xref>. The protein functional domain concept allows researchers to capture common function of proteins from distantly related genomes, which is often seen as a major challenge in traditional sequence-homology based methods <xref rid="b0010" ref-type="bibr">[2]</xref>. A protein functional domain represents a discrete structural unit that can convey a particular function. The different combinations of these functional units, known as domain architectures, which can be used as abstract models to simplify functional complexity in a protein <xref rid="b0015" ref-type="bibr">[3]</xref>. The conservation of residues in each protein functional domain is determined by selective pressure. Base on the amino acid sequence variations of proteins that have common function enables the construction of profile hidden Markov models <xref rid="b0020" ref-type="bibr">[4]</xref> for different functional domains. Pfam <xref rid="b0025" ref-type="bibr">[5]</xref> is a popular database started more than two decades ago, that collects a broad set of protein functional domains using the HMMER tool <xref rid="b0030" ref-type="bibr">[6]</xref>. This database also provides a web-based tool to search for both protein functional domains and domain architectures within a given sequence.</p>
    <p id="p0010">However, the analysis of protein functional domains and domain architectures in large-scale comparisons is a challenging task for web-based applications, especially in the analysis of functional conservation involving the complexity of resource and data management. Such tool requires a critical feature that allow users to quickly customize sets of interesting functions or organisms based on problem sets. Early tools for domain architecture comparison, such as CDART <xref rid="b0035" ref-type="bibr">[7]</xref> are often implemented as a web-based application, and is limited by the number of inputs. That is, comparing millions of proteins will be difficult with these tools. Moreover, standalone tools, such as fungidomDB <xref rid="b0040" ref-type="bibr">[8]</xref>, often require time and effort from non-programmer biologists for installation of dependencies and usages.</p>
    <p id="p0015">Here, we present the ProdMX tool, a standalone Python tool that empowers researchers to explore functional domains and domain architectures of proteins across genomes of interest. With the state-of-the-art matrix compression algorithm, the ProdMX can be applied in the variety of applications including the high throughput screening for pathogenicity of genomes. The tool aims to reduce time and the computational resource used to calculate a large matrix of all-to-all comparison of functional domains or domain architectures. The ProdMX enables researchers familiar with the command prompt or the Python programming language to rapidly analyze specificity or conservation of functional domains or domain architectures. The ProdMX accelerates the protein functional research by offering an intuitive tool that can handle a massive amount of proteins when the computational resource is limited.</p>
  </sec>
  <sec id="s0010">
    <label>2</label>
    <title>Implementation</title>
    <sec id="s0015">
      <label>2.1</label>
      <title>The ProdMX tool design</title>
      <p id="p0020">The ProdMX tool was designed to handle the large-scale analysis of both functional domains and domain architectures across million genomes. Due to the nature of the high complexity in the arrangement of protein functional domains in various genomes, the resulting matrix is both massive (challenging to compute) and sparse (that is, most cells are empty). The Compress Sparse Row (CSR) algorithm <xref rid="b0045" ref-type="bibr">[9]</xref>, <xref rid="b0050" ref-type="bibr">[10]</xref> was introduced to reduce the sparse matrix size. This algorithm can handle both binary and non-binary matrix compression. The algorithm begins with a coordinate transformation of the sparse matrix to abolish zero values and store in row-column vectors and non-zero values. The row compression algorithm reduces the memory used for storing a vector of row by converting it into adjacent pairs of index pointers. In this way, the sparse matrix can be allocated in the computer’s local RAM, eradicating performance limitations due to input/output access boundaries of storage. The algorithms for sparse matrix conversion and row compression are shown in <xref rid="f0005" ref-type="fig">Fig. 1</xref>.<fig id="f0005"><label>Fig. 1</label><caption><p>Algorithms for (1) conversion from a sparse matrix to coordinate form and (2) compression of row coordinates.</p></caption><graphic xlink:href="gr1"/></fig></p>
      <p id="p0025">The data manipulation in the tool was handled with the Pandas package <xref rid="b0055" ref-type="bibr">[11]</xref>. The database was implemented to store protein accessions associated with protein functional domains or domain architectures as an option for users with SQlite <xref rid="b0060" ref-type="bibr">[12]</xref>. Generally, the use of the ProdMX tool starts with constructing the compressed sparse matrix in a command-line environment, using ProdMX as a Python package to load the matrix to the memory, and analyzing the number of conservations of either functional domains or domain architectures across sets of genomes, and generate the report of number or associated protein accessions. A complete description of all commands in the ProdMX is shown in <xref rid="t0005" ref-type="table">Table 1</xref>.<table-wrap position="float" id="t0005"><label>Table 1</label><caption><p>Utilities in the ProdMX tool.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Category/Utility</th><th>Description</th><th>Utility type</th><th>Input</th><th>Output</th></tr></thead><tbody><tr><td colspan="5"><bold>Build matrix</bold></td></tr><tr><td>prodmx-buildDomain</td><td>Build a folder containing a compressed sparse matrix of protein functional domains and index files</td><td>Command-line</td><td>[1]</td><td>[7]</td></tr><tr><td>prodmx-buildArchitecture</td><td>Build a folder containing a compressed sparse matrix of domain architectures and index files</td><td>Command-line</td><td>[1]</td><td>[7]</td></tr><tr><td colspan="5">  </td></tr><tr><td colspan="5"><bold>Load matrix</bold></td></tr><tr><td>loadMatrix</td><td>Load a compressed sparse matrix into an object variable</td><td>Package</td><td>[2]</td><td>[8]</td></tr><tr><td>loadBinMatrix</td><td>Load a binary compressed sparse matrix into an object variable</td><td>Package</td><td>[2]</td><td>[9]</td></tr><tr><td colspan="5">  </td></tr><tr><td colspan="5"><bold>Analysis</bold></td></tr><tr><td>getRow</td><td>Get a list of all row labels of the matrix</td><td>Package</td><td>–</td><td>[10]</td></tr><tr><td>getColumn</td><td>Get a list of all column labels of the matrix</td><td>Package</td><td>–</td><td>[11]</td></tr><tr><td>getProteinId</td><td>Get all protein id associated with given domain functional domains or domain architectures</td><td>Package</td><td>[3] (list_row), [4] (list_col), [5] (output)</td><td>[12]</td></tr><tr><td>sumRow</td><td>Summation of presence and absence values in row wise</td><td>Package</td><td>[3] (list_row), [4] (list_col)</td><td>[13]</td></tr><tr><td>sumColumn</td><td>Summation of presence and absence values in column wise</td><td>Package</td><td>[3] (list_row), [4] (list_col)</td><td>[14]</td></tr><tr><td>calCore</td><td>Calculate core protein functional domains or domain architectures</td><td>Package</td><td>[3] (list_row), [4] (list_col), [6] (counservation)</td><td>[15]</td></tr></tbody></table><table-wrap-foot><fn id="sp0040"><p>[1] a tab-delimited file of unique genome ids and hmmsearch result file paths, [2] a path to folder containing matrices and database from Prodmx's build matrix command,</p></fn><fn id="sp0045"><p>[3] a list of genome ids, [4] a list of functional domains or domain architectures, [5] a result file path, [6] a conservation cut-off with a default at 95%,</p></fn><fn id="sp0050"><p>[7] a folder containing compressed matrices and indexes of functional domains, [8] a ProdMX object for a count matrix, [9] a ProdMX object for a binary matrix,</p></fn><fn id="sp0055"><p>[10] a list variable of all row labels (genome ids), [11] a list variable of all column labels (functional domain or domain architecture ids),</p></fn><fn id="sp0060"><p>[12] a tab-delimited file of genome ids and protein ids,</p></fn><fn id="sp0065"><p>[13] a Pandas dataframe of the count of domains or domain architectures for each genome,</p></fn><fn id="sp0070"><p>[14] a Pandas dataframe of the count of genome for each domain or domain architecture,</p></fn><fn id="sp0075"><p>[15] a pandas dataframe of the genome count for each core functinal domain or domain architecture.</p></fn></table-wrap-foot></table-wrap></p>
      <p id="p0030">For the analysis and report generating parts, we designed the ProdMX tool to work as a Python package. This design allows users to flexibly use the ProdMX tool in the chain of commands with other tools in the user’s pipelines. In addition to this package design, users can quickly test the prototype of code or perform analyses on Jupyter Notebook, Python web-based interactive development environment <xref rid="b0065" ref-type="bibr">[13]</xref>. The overview of the workflow is shown in <xref rid="f0010" ref-type="fig">Fig. 2</xref>.<fig id="f0010"><label>Fig. 2</label><caption><p>Structure and workflow of the ProdMX tool.</p></caption><graphic xlink:href="gr2"/></fig></p>
    </sec>
    <sec id="s0020">
      <label>2.2</label>
      <title>Benchmarking</title>
      <p id="p0035">We performed benchmarking of the ProdMX tool using a set of 6881 high-quality <italic>Escherichia coli</italic> sequences, not derived from single cell nor metagenome project, having 0.8 or more for total and sequence quality scores in the dBBQs database <xref rid="b0070" ref-type="bibr">[14]</xref>, <xref rid="b0075" ref-type="bibr">[15]</xref>, on a single core of MacBook Pro 2.8 Ghz Intel i7, with 16 Gb of RAM. The genomes were run through Prodigal <xref rid="b0080" ref-type="bibr">[16]</xref> for prediction of proteins; the proteins were then searched for functional domains using HMMER 3.1b2 with Pfam version 32 <xref rid="b0085" ref-type="bibr">[17]</xref>, resulting 4950 protein functional domains and 11,574 domain architectures. The HMMER results used in this benchmarking is available in the data availability statement section. To extend the number of genomes in the benchmarking sets, all sets of genomes were sampled from the same 6881 genomes. The compressed sparse matrices for functional domains and domain architectures were constructed for multiple sets of the good quality <italic>E. coli</italic> genomes (100–1000, 1000–10,000, and 10,000–100,000 genomes). These sets of genomes were also implemented in the database with a sparse structure in SQLite for retrieval speed comparison. We examined the average CPU runtime for calculating core functional domains and core domain architectures of 100 replicates for each set of genomes using a calCore utitity in ProdMX and SQLite queries (see <xref rid="s0080" ref-type="sec">supplementary file S2</xref>). Our benchmarking results show that the runtimes from ProdMX are approximately 63-fold faster than SQLite, and scale linearly with input size for functional domains and domain architectures (<xref rid="f0015" ref-type="fig">Fig. 3</xref>). For the compression ratio, we compared the size occupied by the compressed (ProdMX) and non-compressed with the same datasets used for the speed comparison. The results show that compression ratios of at least 8:1 for functional domain matrices and 17:1 for domain architecture matrices are achieved (<xref rid="f0020" ref-type="fig">Fig. 4</xref>). The database schemas representing protein functional domains and domain architectures, database queries, and codes for benchmarking can be found in the <xref rid="s0080" ref-type="sec">Supplementary Materials</xref>.<fig id="f0015"><label>Fig. 3</label><caption><p>Performance benchmark of the average time of 100 replicates on analyses of core protein functional domains and core domain architectures using ProdMX and SQLite. Core functional domains and core domain architectures were retrieved using ProdMX and SQLite on different set of genomes ranging between 100–1000, 1000–10,000, and 10,000–100,000 genomes. The average query execution time of 100 replicates for each data set were collected.</p></caption><graphic xlink:href="gr3"/></fig><fig id="f0020"><label>Fig. 4</label><caption><p>Sizes of storage occupied by protein functional domain and domain architecture matrices using ProdMX and plain text.</p></caption><graphic xlink:href="gr4"/></fig></p>
    </sec>
    <sec id="s0025">
      <label>2.3</label>
      <title>Installation and dependencies</title>
      <p id="p0040">The ProdMX requires an installation of Python 3.5 or newer, which is distributed through the Python Software Foundation <xref rid="b0090" ref-type="bibr">[18]</xref>. Other dependencies can be detected and installed by either the Python Package Index (PyPI) or Conda <xref rid="b0095" ref-type="bibr">[19]</xref>. The automated installation process from PyPI on different computer systems can be activated by executing: pip install prodmx. Also, the latest released version of ProdMX can be installed through conda:</p>
      <p id="p0045">conda install -c visanu prodmx.</p>
      <p id="p0050">Alternatively, the standard installation from ProdMX source code can be initiated via the pip installer:</p>
      <p id="p0055">python -m pip install /path/to/ProdMX_source_code.</p>
      <p id="p0060">We recommend users to take advantage of the automated installation methods from PyPI or Conda since they can precisely handle all different versions of dependencies on different system environments (Linux, Mac, and PC).</p>
    </sec>
  </sec>
  <sec id="s0030">
    <label>3</label>
    <title>Usage and examples</title>
    <sec id="s0035">
      <label>3.1</label>
      <title>Finding and analyzing of conservation of the region 2 domain of primary sigma factor (RpoD) across <italic>Escherichia coli</italic> genomes</title>
      <p id="p0065">Sigma factors are proteins that regulate the transcription process by promoting binding of RNA polymerase to promoter sites of DNA sequence in prokaryotes <xref rid="b0100" ref-type="bibr">[20]</xref>. Different groups of sigma factors are utilized to initiate different gene sets under different environmental conditions. Thus, analysis of diffrent groups of sigma factors allow us to identify types of regulon contributing to multiple functions of microbes, including virulence genes and virulence-associated genes. Here we show how to integrate the ProdMX to a pipeline for analyzing of the region 2 domain of primary σ<sup>70</sup> protein (RpoD) <xref rid="b0105" ref-type="bibr">[21]</xref> across high-quality <italic>E. coli</italic> genomes from the previous section (<xref rid="f0025" ref-type="fig">Fig. 5</xref>A). The following commands for the analysis pipeline of selected functional domain will be demonstrated in a Linux environment. The data used in the demonstration can be found in a test folder in the ProdMX repository.<fig id="f0025"><label>Fig. 5</label><caption><p>Genes and domain architectures for (A) primary sigma factor (RpoD) and (B) toxin genes in <italic>C. difficile</italic> and <italic>C. botulinum</italic>.</p></caption><graphic xlink:href="gr5"/></fig></p>
      <p id="p0070">First, we create a tab-delimited file as an input file for the tool. This input file includes two columns of genome labels and the path to their HMMER results. The output of the utility used in this step is the folder containing the compressed sparse matrix and its index file for the functional domain analysis. Also, a keep option (-k) allows us to store raw results of protein ids and their domains for further analysis. The example of command for building the sparse matrix folder in the command-line environment using the test data of high-quality <italic>E. coli</italic> genomes is shown below:</p>
      <p id="p0075">prodmx-buildDomain -i input_ecoli_id_hmm.tsv -o domain_matrix_fol -k</p>
      <p id="p0080">The ProdMX tool provides analysis utilities in the Python package for regular use and the interactive Python environment. In this demonstration, we choose to analyze our protein functional domain in Jupyter Notebook, the popular interactive Python environment. The binary matrix of presence and absence of each functional domain for each genome is then loaded to the memory by following commands:</p>
      <p id="p0085">import prodmx</p>
      <p id="p0090">import pandas as pd</p>
      <p id="p0095">binary_matrix = prodmx.loadBinMatrix(matrix_fol='domain_matrix_fol')</p>
      <p id="p0100">Further, to check if the region 2 domain of σ<sup>70</sup> proteins (PF04542) is present in core functional domains (95% or more in conservation) across our set of <italic>E. coli</italic> genomes or not, we need to supply the calCore function with the information of list of genome labels and list of available protein functional domains as follows:</p>
      <p id="p0105">df_core_domain = binary_matrix.calCore(list_row=binary_matrix.getRow(), list_col=binary_matrix.getColumn())</p>
      <p id="p0110">Using a Pandas DataFrame command, we can select rows based on condition. The number of <italic>E. coli</italic> genome possessing the region 2 domain of σ<sup>70</sup> (PF04542) can be retrieved by following command:</p>
      <p id="p0115">df_core_domain[df_core_domain['col_name'] == 'PF04542′]</p>
      <p id="p0120">Finally, the command below will be used to write all protein ids associated with the region 2 domain of σ<sup>70</sup> for each genome to the output file in the tab-delimited format (GenomeId, Domain, ProteinId):</p>
      <p id="p0125">binary_matrix.getProteinId(list_row=binary_matrix.getRow(), list_col=['PF04542′], output='ecoli_domain_region2_RpoD_protein_id.txt')</p>
    </sec>
    <sec id="s0040">
      <label>3.2</label>
      <title>Identifying and extracting of toxin genes from <italic>C. difficile</italic> and <italic>C. botulinum</italic> genomes</title>
      <sec id="s0045">
        <label>3.2.1</label>
        <title>Exotoxins from <italic>C. difficile</italic></title>
        <p id="p0130"><italic>Clostridioides difficile</italic> or formerly known as <italic>Clostridium difficile</italic> is a group of bacteria that cause severe damage to the colon with diarrhea symptoms. This gram-positive species is one of the most common bacteria found in healthcare-associated infections (HAIs) in the United States <xref rid="b0110" ref-type="bibr">[22]</xref>. The exotoxin gene cluster in <italic>C. difficile</italic> organize by two toxin genes <italic>TcdA</italic> and <italic>TcdB</italic>
<xref rid="b0115" ref-type="bibr">[23]</xref>. These two exotoxin genes are regulated by the alternative RNA polymerase sigma factor <italic>TcdR</italic> (<xref rid="f0025" ref-type="fig">Fig. 5</xref>A). To demonstrate the potential use case for screening, the ProdMX were employed to the identify the pathogenicity of unknown genome sequences from <italic>Clostridiales</italic> order.</p>
        <p id="p0135">Like the previous example, we need to go through the steps of creating a compress sparse matrix of the HMMER results for all genomes of interest. However, for the protein analysis, we need to construct the matrix of domain architectures since the order of functional domains within a protein can result in different gene function. The code to generate the compressed sparse matrix of domain architectures is as follows.</p>
        <p id="p0140">prodmx-buildArchitecture -i input_clostridiales_id_hmm.tsv -o architecture_matrix_fol -k</p>
        <p id="p0145">To count all virulence factors, the following codes were used to load the non-binary compressed sparse matrix of domain architectures to the python environment.</p>
        <p id="p0150">import prodmx</p>
        <p id="p0155">import pandas as pd</p>
        <p id="p0160">count_matrix = prodmx.loadMatrix(matrix_fol='architecture_matrix_fol')</p>
        <p id="p0165">To check for exotoxin genes, we retrieved the domain architectures from UniProt <xref rid="b0120" ref-type="bibr">[24]</xref> for <italic>TcdA</italic> and <italic>TcdB</italic> protein<italic>.</italic> The dictionary between protein name and domain architectures were created as follows.</p>
        <p id="p0170">dict_tox = {'tcdB':'PF12918_PF12919_PF11713_PF12920_PF19127_PF19127′, 'tcdA':'PF12918_PF12919_PF11713_PF12920_PF19127_PF19127_PF19127_PF19127_PF19127′}</p>
        <p id="p0175">Using Pandas DataFame, we can create the data table for the in silico-screening of exotoxin in the unknown genomes by the code following:</p>
        <p id="p0180">list_result = []</p>
        <p id="p0185">for genome_id in count_matrix.getRow():</p>
        <p id="p0190">x = count_matrix.sumColumn(list_row=[genome_id], list_col=[dict_tox.get('tcdB'), dict_tox.get('tcdA')])['col_sum'].tolist()</p>
        <p id="p0195">list_result.append([genome_id]+x)</p>
        <p id="p0200">header=['genome_id', 'tcdB', 'tcdA']</p>
        <p id="p0205">pd.DataFrame(list_result, columns=header)</p>
        <p id="p0210">The table of genome and protein ids associating with exotoxins can be retrieved as follows:</p>
        <p id="p0215">count_matrix.getProteinId(list_row=count_matrix.getRow(), list_col=[ dict_tox.get('tcdB'), dict_tox.get('tcdA')], output='clostridiales_exotoxin_protein_id.txt')</p>
      </sec>
      <sec id="s0050">
        <label>3.2.2</label>
        <title>Neurotoxins from <italic>C. botulinum</italic></title>
        <p id="p0220">The botulinum neurotoxins (BoNTs) produced by the strains of <italic>Clostridium botulinum</italic> can cause the disease botulism which is a potentially fatal disease in human <xref rid="b0125" ref-type="bibr">[25]</xref>. This neurotoxin gene cluster in <italic>C. botulinum</italic> comprise of <italic>ntnh</italic> and <italic>bont</italic> genes with the alternative sigma factor <italic>botR</italic> to regulate the expression (<xref rid="f0025" ref-type="fig">Fig. 5</xref>B). Referring to the steps in the previous example of exotoxins, we can use the same domain architecture matrix to retrieve the potential genomes and protein ids that might associate with botulinum neurotoxins by following code:</p>
        <p id="p0225">dict_tox = {'bont': 'PF01742_PF07952_PF07953_PF07951′}</p>
        <p id="p0230">count_matrix.getProteinId(list_row=count_matrix.getRow(), list_col=[ dict_tox.get('bont'), output='clostridiales_neurotoxin_protein_id.txt')</p>
        <p id="p0235">The test data and extended versions for example 3.1 and 3.2 in Jupyter Notebook can be downloaded at the ProdMX GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/visanuwan/prodmx" id="PC_link1YIjhwV70q">https://github.com/visanuwan/prodmx</ext-link>).</p>
      </sec>
    </sec>
  </sec>
  <sec id="s0055">
    <label>4</label>
    <title>Conclusion</title>
    <p id="p0240">Here we introduce the ProdMX tool, which provides a native Python environment for analysis of the protein functional domain. While the functional domain analysis can be performed with the web-based applications, analyses of large queries are often limited by the bandwidth required to transfer data over the internet. Analyses with standalone tools are usually found to have insufficient memory issues due to the management of enormous sparse matrices and the complexity of dependencies required for tool installations. Overall results of benchmarking from ProdMX showed remarkably better performance over SQLite with sparse matrix schema implementation. With the provided use cases, ProdMX can be used as an effective tool for the high-throughput screening. We expect that the ProdMX tool will aid the scientific community in performing large queries and accelerate comparative genomics research that relies on accurate and clade-specific measures of protein functions.</p>
  </sec>
  <sec sec-type="data-availability" id="s0060">
    <title>Data availability statement</title>
    <p id="p0245">Publicly available datasets were analyzed in this study. The data for benchmarking, list of genome assembly accessions, and HMMER results associated with the genomes from GenBank are available at <ext-link ext-link-type="uri" xlink:href="https://app.box.com/s/n7chra1me0g5nv6yclzmshzns0drvxzo" id="PC_linkKye7JL7jEd">https://app.box.com/s/n7chra1me0g5nv6yclzmshzns0drvxzo</ext-link>.</p>
  </sec>
  <sec id="s0065">
    <title>Funding</title>
    <p id="p0250">This research was funded in part by the <funding-source id="gp005">College of Medicine and the Department of Biomedical Informatics at UAMS</funding-source>, the <funding-source id="gp010">Helen Adams &amp; Arkansas Research Alliance Endowment</funding-source>. The National Science Foundation under Award No. OIA-1946391. <funding-source id="gp015">National Institute of General Medical Sciences of the National Institutes of Health</funding-source> [P20GM125503] awarded to I.N.</p>
  </sec>
  <sec id="s0070">
    <title>CRediT authorship contribution statement</title>
    <p id="p0255"><bold>Visanu Wanchai:</bold> Conceptualization, Software, Visualization, Writing - original draft, Writing - review &amp; editing. <bold>Intawat Nookaew:</bold> Visualization, Validation, Writing - review &amp; editing, Supervision. <bold>David W. Ussery:</bold> Supervision, Validation, Resources, Writing - review &amp; editing.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of Interest</title>
    <p id="p0260">The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
</body>
<back>
  <ref-list id="bi005">
    <title>References</title>
    <ref id="b0005">
      <label>1</label>
      <element-citation publication-type="journal" id="h0005">
        <person-group person-group-type="author">
          <name>
            <surname>Hollich</surname>
            <given-names>V.</given-names>
          </name>
          <name>
            <surname>Sonnhammer</surname>
            <given-names>E.L.L.</given-names>
          </name>
        </person-group>
        <article-title>PfamAlyzer: domain-centric homology search</article-title>
        <source>Bioinformatics</source>
        <volume>23</volume>
        <issue>24</issue>
        <year>2007</year>
        <fpage>3382</fpage>
        <lpage>3383</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm521</pub-id>
        <pub-id pub-id-type="pmid">17977882</pub-id>
      </element-citation>
    </ref>
    <ref id="b0010">
      <label>2</label>
      <element-citation publication-type="journal" id="h0010">
        <person-group person-group-type="author">
          <name>
            <surname>Kalafus</surname>
            <given-names>K.J.</given-names>
          </name>
          <name>
            <surname>Jackson</surname>
            <given-names>A.R.</given-names>
          </name>
          <name>
            <surname>Milosavljevic</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>Pash: efficient genome-scale sequence anchoring by positional hashing</article-title>
        <source>Genome Res</source>
        <volume>14</volume>
        <year>2004</year>
        <fpage>672</fpage>
        <lpage>678</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.1963804</pub-id>
        <pub-id pub-id-type="pmid">15060009</pub-id>
      </element-citation>
    </ref>
    <ref id="b0015">
      <label>3</label>
      <element-citation publication-type="journal" id="h0015">
        <person-group person-group-type="author">
          <name>
            <surname>Ponting</surname>
            <given-names>C.P.</given-names>
          </name>
          <name>
            <surname>Russell</surname>
            <given-names>R.R.</given-names>
          </name>
        </person-group>
        <article-title>The natural history of protein domains</article-title>
        <source>Annu Rev Biophys Biomol Struct</source>
        <volume>31</volume>
        <issue>1</issue>
        <year>2002</year>
        <fpage>45</fpage>
        <lpage>71</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev.biophys.31.082901.134314</pub-id>
        <pub-id pub-id-type="pmid">11988462</pub-id>
      </element-citation>
    </ref>
    <ref id="b0020">
      <label>4</label>
      <element-citation publication-type="journal" id="h0020">
        <person-group person-group-type="author">
          <name>
            <surname>Eddy</surname>
            <given-names>S.R.</given-names>
          </name>
        </person-group>
        <article-title>Profile hidden Markov models</article-title>
        <source>Bioinformatics</source>
        <volume>14</volume>
        <issue>9</issue>
        <year>1998</year>
        <fpage>755</fpage>
        <lpage>763</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/14.9.755</pub-id>
        <pub-id pub-id-type="pmid">9918945</pub-id>
      </element-citation>
    </ref>
    <ref id="b0025">
      <label>5</label>
      <element-citation publication-type="journal" id="h0025">
        <person-group person-group-type="author">
          <name>
            <surname>Finn</surname>
            <given-names>R.D.</given-names>
          </name>
          <name>
            <surname>Mistry</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Schuster-Böckler</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Griffiths-Jones</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Hollich</surname>
            <given-names>V.</given-names>
          </name>
          <name>
            <surname>Lassmann</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Pfam: clans, web tools and services</article-title>
        <source>Nucleic Acids Res</source>
        <volume>34</volume>
        <year>2006</year>
        <fpage>D247</fpage>
        <lpage>D251</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkj149</pub-id>
        <pub-id pub-id-type="pmid">16381856</pub-id>
      </element-citation>
    </ref>
    <ref id="b0030">
      <label>6</label>
      <mixed-citation publication-type="other" id="h0030">Eddy SR. Accelerated profile HMM searches. PLoS Comput Biol 2011;7:e1002195. https://doi.org/10.1371/journal.pcbi.1002195.</mixed-citation>
    </ref>
    <ref id="b0035">
      <label>7</label>
      <element-citation publication-type="journal" id="h0035">
        <person-group person-group-type="author">
          <name>
            <surname>Geer</surname>
            <given-names>L.Y.</given-names>
          </name>
          <name>
            <surname>Domrachev</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>D.J.</given-names>
          </name>
          <name>
            <surname>Bryant</surname>
            <given-names>S.H.</given-names>
          </name>
        </person-group>
        <article-title>CDART: Protein homology by domain architecture</article-title>
        <source>Genome Res</source>
        <volume>12</volume>
        <year>2002</year>
        <fpage>1619</fpage>
        <lpage>1623</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.278202</pub-id>
        <pub-id pub-id-type="pmid">12368255</pub-id>
      </element-citation>
    </ref>
    <ref id="b0040">
      <label>8</label>
      <mixed-citation publication-type="other" id="h0040">Barrera A, Alastruey-Izquierdo A, Martín MJ, Cuesta I, Vizcaíno JA. Analysis of the Protein Domain and Domain Architecture Content in Fungi and Its Application in the Search of New Antifungal Targets. PLoS Comput Biol 2014;10:e1003733. https://doi.org/10.1371/journal.pcbi.1003733.</mixed-citation>
    </ref>
    <ref id="b0045">
      <label>9</label>
      <element-citation publication-type="journal" id="h0045">
        <person-group person-group-type="author">
          <name>
            <surname>Virtanen</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>T.E.</given-names>
          </name>
          <name>
            <surname>Haberland</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Reddy</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Burovski</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Weckesser</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Bright</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>S.J.</given-names>
          </name>
          <name>
            <surname>Brett</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>K.J.</given-names>
          </name>
          <name>
            <surname>Mayorov</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Nelson</surname>
            <given-names>A.R.J.</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Kern</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Larson</surname>
            <given-names>E.</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>C.J.</given-names>
          </name>
          <name>
            <surname>Polat</surname>
            <given-names>İ.</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Y.u.</given-names>
          </name>
          <name>
            <surname>Moore</surname>
            <given-names>E.W.</given-names>
          </name>
          <name>
            <surname>VanderPlas</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Laxalde</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Perktold</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Cimrman</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Henriksen</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Quintero</surname>
            <given-names>E.A.</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>C.R.</given-names>
          </name>
          <name>
            <surname>Archibald</surname>
            <given-names>A.M.</given-names>
          </name>
          <name>
            <surname>Ribeiro</surname>
            <given-names>A.H.</given-names>
          </name>
          <name>
            <surname>Pedregosa</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>van Mulbregt</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>SciPy 1.0: fundamental algorithms for scientific computing in Python</article-title>
        <source>Nat Methods</source>
        <volume>17</volume>
        <issue>3</issue>
        <year>2020</year>
        <fpage>261</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
        <pub-id pub-id-type="pmid">32015543</pub-id>
      </element-citation>
    </ref>
    <ref id="b0050">
      <label>10</label>
      <element-citation publication-type="journal" id="h0050">
        <person-group person-group-type="author">
          <name>
            <surname>Oliphant</surname>
            <given-names>T.E.</given-names>
          </name>
        </person-group>
        <article-title>Python for Scientific Computing</article-title>
        <source>Comput Sci Eng</source>
        <volume>9</volume>
        <issue>3</issue>
        <year>2007</year>
        <fpage>10</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.58</pub-id>
      </element-citation>
    </ref>
    <ref id="b0055">
      <label>11</label>
      <mixed-citation publication-type="other" id="h0055">McKinney W. Data Structures for Statistical Computing in Python. Proc. 9th Python Sci. Conf., 1697900, 2010, 51–6.</mixed-citation>
    </ref>
    <ref id="b0060">
      <label>12</label>
      <mixed-citation publication-type="other" id="h0060">Hipp DR, Kennedy D, Mistachkin J. SQLite (Version 3.31.1) 2020.</mixed-citation>
    </ref>
    <ref id="b0065">
      <label>13</label>
      <mixed-citation publication-type="other" id="h0065">Anaconda. Anaconda Software Distribution. Comput Softw 2016:Vers. 2-2.4.0.</mixed-citation>
    </ref>
    <ref id="b0070">
      <label>14</label>
      <element-citation publication-type="journal" id="h0070">
        <person-group person-group-type="author">
          <name>
            <surname>Land</surname>
            <given-names>M.L.</given-names>
          </name>
          <name>
            <surname>Hyatt</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Jun</surname>
            <given-names>S.R.</given-names>
          </name>
          <name>
            <surname>Kora</surname>
            <given-names>G.H.</given-names>
          </name>
          <name>
            <surname>Hauser</surname>
            <given-names>L.J.</given-names>
          </name>
          <name>
            <surname>Lukjancenko</surname>
            <given-names>O.</given-names>
          </name>
        </person-group>
        <article-title>Quality scores for 32,000 genomes</article-title>
        <source>Stand Genomic Sci</source>
        <volume>9</volume>
        <year>2014</year>
        <fpage>20</fpage>
        <pub-id pub-id-type="doi">10.1186/1944-3277-9-20</pub-id>
        <pub-id pub-id-type="pmid">25780509</pub-id>
      </element-citation>
    </ref>
    <ref id="b0075">
      <label>15</label>
      <element-citation publication-type="journal" id="h0075">
        <person-group person-group-type="author">
          <name>
            <surname>Wanchai</surname>
            <given-names>V.</given-names>
          </name>
          <name>
            <surname>Patumcharoenpol</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Nookaew</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Ussery</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>dBBQs: DataBase of Bacterial Quality scores</article-title>
        <source>BMC Bioinf</source>
        <volume>18</volume>
        <year>2017</year>
        <fpage>483</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-017-1900-9</pub-id>
      </element-citation>
    </ref>
    <ref id="b0080">
      <label>16</label>
      <element-citation publication-type="journal" id="h0080">
        <person-group person-group-type="author">
          <name>
            <surname>Hyatt</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>G.L.</given-names>
          </name>
          <name>
            <surname>LoCascio</surname>
            <given-names>P.F.</given-names>
          </name>
          <name>
            <surname>Land</surname>
            <given-names>M.L.</given-names>
          </name>
          <name>
            <surname>Larimer</surname>
            <given-names>F.W.</given-names>
          </name>
          <name>
            <surname>Hauser</surname>
            <given-names>L.J.</given-names>
          </name>
        </person-group>
        <article-title>Prodigal: Prokaryotic gene recognition and translation initiation site identification</article-title>
        <source>BMC Bioinf</source>
        <volume>11</volume>
        <year>2010</year>
        <fpage>119</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-119</pub-id>
      </element-citation>
    </ref>
    <ref id="b0085">
      <label>17</label>
      <element-citation publication-type="journal" id="h0085">
        <person-group person-group-type="author">
          <name>
            <surname>El-Gebali</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Mistry</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Bateman</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>S.R.</given-names>
          </name>
          <name>
            <surname>Luciani</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Potter</surname>
            <given-names>S.C.</given-names>
          </name>
        </person-group>
        <article-title>The Pfam protein families database in 2019</article-title>
        <source>Nucleic Acids Res</source>
        <volume>47</volume>
        <year>2019</year>
        <fpage>D427</fpage>
        <lpage>D432</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky995</pub-id>
        <pub-id pub-id-type="pmid">30357350</pub-id>
      </element-citation>
    </ref>
    <ref id="b0090">
      <label>18</label>
      <mixed-citation publication-type="other" id="h0090">Rossum G Van, Drake FL. Python 3 Reference Manual: (Python Documentation Manual Part 2). vol. CreateSpac. Scotts Valley, CA: CreateSpace; 2009.</mixed-citation>
    </ref>
    <ref id="b0095">
      <label>19</label>
      <mixed-citation publication-type="other" id="h0095">Anaconda. Anaconda Software Distribution. Comput Softw 2014.</mixed-citation>
    </ref>
    <ref id="b0100">
      <label>20</label>
      <element-citation publication-type="journal" id="h0100">
        <person-group person-group-type="author">
          <name>
            <surname>Gruber</surname>
            <given-names>T.M.</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>C.A.</given-names>
          </name>
        </person-group>
        <article-title>Multiple Sigma Subunits and the Partitioning of Bacterial Transcription Space</article-title>
        <source>Annu Rev Microbiol</source>
        <volume>57</volume>
        <year>2003</year>
        <fpage>441</fpage>
        <lpage>466</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev.micro.57.030502.090913</pub-id>
        <pub-id pub-id-type="pmid">14527287</pub-id>
      </element-citation>
    </ref>
    <ref id="b0105">
      <label>21</label>
      <element-citation publication-type="journal" id="h0105">
        <person-group person-group-type="author">
          <name>
            <surname>Cook</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Ussery</surname>
            <given-names>D.W.</given-names>
          </name>
        </person-group>
        <article-title>Sigma factors in a thousand E. coli genomes</article-title>
        <source>Environ Microbiol</source>
        <volume>15</volume>
        <year>2013</year>
        <fpage>3121</fpage>
        <lpage>3129</lpage>
        <pub-id pub-id-type="doi">10.1111/1462-2920.12236</pub-id>
        <pub-id pub-id-type="pmid">23992563</pub-id>
      </element-citation>
    </ref>
    <ref id="b0110">
      <label>22</label>
      <element-citation publication-type="journal" id="h0110">
        <person-group person-group-type="author">
          <name>
            <surname>Guh</surname>
            <given-names>A.Y.</given-names>
          </name>
          <name>
            <surname>Kutty</surname>
            <given-names>P.K.</given-names>
          </name>
        </person-group>
        <article-title>Clostridioides difficile infection</article-title>
        <source>Ann Intern Med</source>
        <volume>169</volume>
        <year>2018</year>
        <fpage>ITC49</fpage>
        <lpage>ITC62</lpage>
        <pub-id pub-id-type="doi">10.7326/AITC201810020</pub-id>
        <pub-id pub-id-type="pmid">30285209</pub-id>
      </element-citation>
    </ref>
    <ref id="b0115">
      <label>23</label>
      <element-citation publication-type="journal" id="h0115">
        <person-group person-group-type="author">
          <name>
            <surname>Martin-Verstraete</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Peltier</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Dupuy</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>The regulatory networks that control Clostridium difficile toxin synthesis</article-title>
        <source>Toxins (Basel)</source>
        <volume>8</volume>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.3390/toxins8050153</pub-id>
      </element-citation>
    </ref>
    <ref id="b0120">
      <label>24</label>
      <element-citation publication-type="journal" id="h0120">
        <person-group person-group-type="author">
          <name>
            <surname>Apweiler</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Bairoch</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>C.H.</given-names>
          </name>
          <name>
            <surname>Barker</surname>
            <given-names>W.C.</given-names>
          </name>
          <name>
            <surname>Boeckmann</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>UniProt: the universal protein knowledgebase</article-title>
        <source>Nucleic Acids Res</source>
        <volume>32</volume>
        <year>2004</year>
        <fpage>45</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky092</pub-id>
        <pub-id pub-id-type="pmid">14704342</pub-id>
      </element-citation>
    </ref>
    <ref id="b0125">
      <label>25</label>
      <element-citation publication-type="journal" id="h0125">
        <person-group person-group-type="author">
          <name>
            <surname>Pirazzini</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Rossetto</surname>
            <given-names>O.</given-names>
          </name>
          <name>
            <surname>Eleopra</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Montecucco</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <article-title>Botulinum neurotoxins: biology, pharmacology, and toxicology</article-title>
        <source>Pharmacol Rev</source>
        <volume>69</volume>
        <year>2017</year>
        <fpage>200</fpage>
        <lpage>235</lpage>
        <pub-id pub-id-type="doi">10.1124/pr.116.012658</pub-id>
        <pub-id pub-id-type="pmid">28356439</pub-id>
      </element-citation>
    </ref>
  </ref-list>
  <sec id="s0080" sec-type="supplementary-material">
    <label>Appendix A</label>
    <title>Supplementary data</title>
    <p id="p0275">The following are the Supplementary data to this article:<supplementary-material content-type="local-data" id="m0005"><caption><title>Supplementary Data 1</title></caption><media xlink:href="mmc1.pdf"/></supplementary-material></p>
    <p id="p0280">
      <supplementary-material content-type="local-data" id="m0010">
        <caption>
          <title>Supplementary Data 2</title>
        </caption>
        <media xlink:href="mmc2.zip"/>
      </supplementary-material>
    </p>
    <p id="p0285">
      <supplementary-material content-type="local-data" id="m0015">
        <caption>
          <title>Supplementary Data 3</title>
        </caption>
        <media xlink:href="mmc3.zip"/>
      </supplementary-material>
    </p>
  </sec>
  <ack id="ak005">
    <title>Acknowledgment</title>
    <p id="p0265">The authors acknowledge the high-performance computing facilities of the University of Arkansas for Medical Sciences (UAMS) for providing HCP resources for developing, testing and benchmarking. URL: https://hpc.uams.edu.</p>
  </ack>
  <fn-group>
    <fn id="s0075" fn-type="supplementary-material">
      <label>Appendix A</label>
      <p id="p0270">Supplementary data to this article can be found online at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1016/j.csbj.2020.10.023" id="ir020">https://doi.org/10.1016/j.csbj.2020.10.023</ext-link>.</p>
    </fn>
  </fn-group>
</back>

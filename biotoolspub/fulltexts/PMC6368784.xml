<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Microbiome</journal-id>
    <journal-id journal-id-type="iso-abbrev">Microbiome</journal-id>
    <journal-title-group>
      <journal-title>Microbiome</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2049-2618</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6368784</article-id>
    <article-id pub-id-type="publisher-id">633</article-id>
    <article-id pub-id-type="doi">10.1186/s40168-019-0633-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CAMISIM: simulating metagenomes and microbial communities</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Fritz</surname>
          <given-names>Adrian</given-names>
        </name>
        <address>
          <email>adrian.fritz@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Hofmann</surname>
          <given-names>Peter</given-names>
        </name>
        <address>
          <email>peter.hofmann@uni-duesseldorf.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Majda</surname>
          <given-names>Stephan</given-names>
        </name>
        <address>
          <email>stephan.majda@uni-due.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dahms</surname>
          <given-names>Eik</given-names>
        </name>
        <address>
          <email>eik.dahms@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dröge</surname>
          <given-names>Johannes</given-names>
        </name>
        <address>
          <email>science@fungs.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fiedler</surname>
          <given-names>Jessika</given-names>
        </name>
        <address>
          <email>jessika.fiedler@uni-duesseldorf.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lesker</surname>
          <given-names>Till R.</given-names>
        </name>
        <address>
          <email>tillrobin.lesker@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Belmann</surname>
          <given-names>Peter</given-names>
        </name>
        <address>
          <email>peter.belmann@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>DeMaere</surname>
          <given-names>Matthew Z.</given-names>
        </name>
        <address>
          <email>matt.demaere@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Darling</surname>
          <given-names>Aaron E.</given-names>
        </name>
        <address>
          <email>aaron.darling@uts.edu.au</email>
        </address>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sczyrba</surname>
          <given-names>Alexander</given-names>
        </name>
        <address>
          <email>asczyrba@cebitec.uni-bielefeld.de</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bremges</surname>
          <given-names>Andreas</given-names>
        </name>
        <address>
          <email>andreas.bremges@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2370-3430</contrib-id>
        <name>
          <surname>McHardy</surname>
          <given-names>Alice C.</given-names>
        </name>
        <address>
          <email>alice.mchardy@helmholtz-hzi.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label>Computational Biology of Infection Research, Helmholtz Centre for Infection Research, Braunschweig, 38124 Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2176 9917</institution-id><institution-id institution-id-type="GRID">grid.411327.2</institution-id><institution>Formerly Department of Algorithmic Bioinformatics, </institution><institution>Heinrich-Heine University Düsseldorf, </institution></institution-wrap>Düsseldorf, 40225 Germany </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.452463.2</institution-id><institution>German Center for Infection Research (DZIF), partner site Hannover-Braunschweig, </institution></institution-wrap>Braunschweig, 38124 Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0944 9128</institution-id><institution-id institution-id-type="GRID">grid.7491.b</institution-id><institution>Center for Biotechnology and Faculty of Technology, </institution><institution>Bielefeld University, </institution></institution-wrap>Bielefeld, 33615 Germany </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 7611</institution-id><institution-id institution-id-type="GRID">grid.117476.2</institution-id><institution>The ithree institute, </institution><institution>University of Technology Sydney, </institution></institution-wrap>Sydney NSW, 2007 Australia </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>8</day>
      <month>2</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>8</day>
      <month>2</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>7</volume>
    <elocation-id>17</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>4</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>21</day>
        <month>1</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Shotgun metagenome data sets of microbial communities are highly diverse, not only due to the natural variation of the underlying biological systems, but also due to differences in laboratory protocols, replicate numbers, and sequencing technologies. Accordingly, to effectively assess the performance of metagenomic analysis software, a wide range of benchmark data sets are required.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We describe the CAMISIM microbial community and metagenome simulator. The software can model different microbial abundance profiles, multi-sample time series, and differential abundance studies, includes real and simulated strain-level diversity, and generates second- and third-generation sequencing data from taxonomic profiles or de novo. Gold standards are created for sequence assembly, genome binning, taxonomic binning, and taxonomic profiling. CAMSIM generated the benchmark data sets of the first CAMI challenge. For two simulated multi-sample data sets of the human and mouse gut microbiomes, we observed high functional congruence to the real data. As further applications, we investigated the effect of varying evolutionary genome divergence, sequencing depth, and read error profiles on two popular metagenome assemblers, MEGAHIT, and metaSPAdes, on several thousand small data sets generated with CAMISIM.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>CAMISIM can simulate a wide variety of microbial communities and metagenome data sets together with standards of truth for method evaluation. All data sets and the software are freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/CAMI-challenge/CAMISIM">https://github.com/CAMI-challenge/CAMISIM</ext-link></p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (10.1186/s40168-019-0633-6) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metagenomics software</kwd>
      <kwd>Microbial community</kwd>
      <kwd>Benchmarking</kwd>
      <kwd>Simulation</kwd>
      <kwd>Metagenome assembly</kwd>
      <kwd>Genome binning</kwd>
      <kwd>Taxonomic binning</kwd>
      <kwd>Taxonomic profiling</kwd>
      <kwd>CAMI</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Introduction</title>
    <p>Extensive 16S rRNA gene amplicon and shotgun metagenome sequencing efforts have been and are being undertaken to catalogue the human microbiome in health and disease [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>] and to study microbial communities of medical, pharmaceutical, or biotechnological relevance [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR8">8</xref>]. We have since learned that naturally occurring microbial communities cover a wide range of organismal complexities—with populations ranging from half a dozen to likely tens of thousands of members—can include substantial strain level diversity and vary widely in represented taxa [<xref ref-type="bibr" rid="CR9">9</xref>–<xref ref-type="bibr" rid="CR12">12</xref>]. Analyzing these diverse communities is challenging.</p>
    <p>The problem is exacerbated by use of a wide range of experimental setups in data generation and the rapid evolution of short- and long-read sequencing technologies [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. Owing to the large diversity of generated data, the possibility to generate realistic benchmark data sets for particular experimental setups is essential for assessing computational metagenomics software.</p>
    <p>CAMI, the initiative for the Critical Assessment of Metagenome Interpretation, is a community effort aiming to generate extensive, objective performance overviews of computational metagenomics software [<xref ref-type="bibr" rid="CR15">15</xref>]. CAMI organizes benchmarking challenges and encourages the development of standards and reproducibility in all aspects, such as data generation, software application, and result interpretation [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
    <p>We here describe CAMISIM, which was originally written to generate the simulated metagenome data sets used in the first CAMI challenge. It has since been extended into a versatile and highly modular metagenome simulator. We demonstrate the usability and utility of CAMISIM with several applications. We generated complex, multi-replicate benchmark data sets from taxonomic profiles of human and mouse gut microbiomes [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR17">17</xref>]. We also simulated thousands of small “minimally challenging metagenomes” to characterize the effect of varying sequencing coverage, evolutionary divergence of genomes, and sequencing error profiles on the popular MEGAHIT [<xref ref-type="bibr" rid="CR18">18</xref>] and metaSPAdes [<xref ref-type="bibr" rid="CR19">19</xref>] assemblers.</p>
  </sec>
  <sec id="Sec2">
    <title>The CAMISIM software</title>
    <p>CAMISIM allows customization of many properties of the generated communities and data sets, such as the overall number of genomes (community complexity), strain diversity, the community genome abundance distributions, sample sizes, the number of replicates, and sequencing technology used. For setting these options, a configuration file is needed, which is described in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. Simulation with CAMISIM has three stages (Fig. <xref rid="Fig1" ref-type="fig">1</xref>): 
<list list-type="order"><list-item><p>Design of the community, which includes selection of the community members and their genomes, and assigning them relative abundances,
<fig id="Fig1"><label>Fig. 1</label><caption><p>UML diagram of the CAMISIM workflow. CAMISIM starts with the “community design” step, which can either be de novo, requiring a taxon mapping file and reference genomes or based on a taxonomic profile. This step produces a community genome and taxon profile which is used for the metagenome simulation using one of currently four read simulators (ART, wgsim, PBsim, NanoSim). The resulting reads and bam-files mapping the reads to the original genomes are used to create the gold standards before all the files can be anonymized and shuffled in the post-processing step</p></caption><graphic xlink:href="40168_2019_633_Fig1_HTML" id="MO1"/></fig></p></list-item><list-item><p>Metagenome sequencing data simulation, and</p></list-item><list-item><p>Postprocessing, where the binning and assembly gold standards are produced.</p></list-item></list></p>
    <sec id="Sec3">
      <title>Community design</title>
      <p>In this step, the community genome abundance profiles, called <italic>P</italic><sub>out</sub>, are created. These also represent the gold standard for taxonomic profiling and, from the strain to the superkingdom rank, specify the relative abundances of individual strains (genomes) or their parental taxa in percent. In addition, a genome sequence collection for the strains in <italic>P</italic><sub>out</sub> is generated. Both <italic>P</italic><sub>out</sub> and the genome sequence collection are needed for the metagenome simulation in step 2. The taxonomic composition of the simulated microbial community is either determined by user-specified taxonomic profiles or generated de novo by sampling from available genome sequences.</p>
      <sec id="Sec4">
        <title>Profile-based design</title>
        <p>Taxonomic profiles can be provided in BIOM (Biological Observation Matrix) format [<xref ref-type="bibr" rid="CR20">20</xref>]. With input profiles, the NCBI complete genomes [<xref ref-type="bibr" rid="CR21">21</xref>] are used as the sequence collection for creating metagenome data sets. Optionally, the user can choose to also include genomes marked as “scaffold” or “contig” by the NCBI. Input genomes are split at positions with multiple occurrences of ambiguous bases, such that no reads spanning contig borders within larger scaffolds are simulated.</p>
        <p>Profiles can include bacterial, archaeal, and eukaryotic taxa, as well as viruses. The taxonomic identifiers of BIOM format are interpreted as free text scientific names and are mapped to NCBI taxon IDs (algorithm in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The so generated input profile <italic>P</italic><sub>in</sub> specifies pairs (<italic>t</italic>,<italic>a</italic><italic>b</italic><sub><italic>t</italic></sub>) of taxon IDs <italic>t</italic> and taxon abundances <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$ab_{t} \in \mathbb {R}_{\geq 0}$\end{document}</tex-math><mml:math id="M2"><mml:mi>a</mml:mi><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>ℝ</mml:mi></mml:mrow><mml:mrow><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="40168_2019_633_Article_IEq1.gif"/></alternatives></inline-formula>. The profile taxa are usually defined at higher ranks than strain and thus have to be mapped approximately to the genome sequence collection for creating <italic>P</italic><sub>out</sub>.</p>
        <p>Given an ordered list of ranks <italic>R</italic> = (<italic>species, genus, family, order, class, phylum, superkingdom</italic>), CAMISIM requires as an additional parameter a highest rank <italic>r</italic><sub>max</sub>∈<italic>R</italic>. We define the binary operator ≺ based on the ordering of the ranks in <italic>R</italic>. Given two ranks, <italic>r</italic><sub><italic>i</italic></sub>,<italic>r</italic><sub><italic>j</italic></sub>∈<italic>R</italic>, we write <italic>r</italic><sub><italic>i</italic></sub>≺<italic>r</italic><sub><italic>j</italic></sub>, if <italic>r</italic><sub><italic>i</italic></sub> appears before <italic>r</italic><sub><italic>j</italic></sub> in <italic>R</italic>, and we say <italic>r</italic><sub><italic>i</italic></sub> is below <italic>r</italic><sub><italic>j</italic></sub>. Related complete genomes are searched for all ranks below <italic>r</italic><sub>max</sub>. By default, this is the <italic>family</italic> rank. Another parameter is the maximum number of strains <italic>m</italic> that are included for an input taxon in a simulated sample.</p>
        <p>To create <italic>P</italic><sub>out</sub> from <italic>P</italic><sub>in</sub>, the following steps are performed: let <italic>G</italic><sub><italic>in</italic></sub> be the set of taxon IDs of the genome collection at the lowest annotated taxonomic rank, usually <italic>species</italic> or <italic>strain</italic>. For all <italic>t</italic>∈<italic>G</italic><sub><italic>in</italic></sub>, the reference taxonomy specifies a taxonomic lineage of taxon IDs (or undefined values) across the considered ranks in <italic>R</italic>. We use these to identify a collection of sets <italic>F</italic>={<italic>G</italic><sub><italic>t</italic></sub> | <italic>t</italic>=lineage taxon represented by≥1 complete genome}, which specifies for each lineage taxon the taxon IDs of available genomes from the genome collection. <italic>F</italic> is used as input for Algorithm 1.</p>
        <p>
          <graphic position="anchor" xlink:href="40168_2019_633_Figa_HTML" id="MO2"/>
        </p>
        <p>The algorithm retrieves for each <italic>t</italic> from the tuples (<italic>t</italic>,<italic>a</italic><italic>b</italic><sub><italic>t</italic></sub>)∈<italic>P</italic><sub><italic>in</italic></sub> the lineage path tax<sub><italic>t</italic></sub> across the ranks of <italic>R</italic> (lines 2–3). Moving from the species to the highest considered rank, <italic>r</italic><sub>max</sub>, the algorithm determines whether for a lineage taxon <italic>t</italic><sub><italic>r</italic></sub> at the considered rank <italic>r</italic> a complete genome exists, that is, whether <italic>G</italic><sub><italic>t</italic></sub>≠<italic>∅</italic> for <italic>t</italic>=<italic>t</italic><sub><italic>r</italic></sub> (lines 4–5). If this is the case, the search ends and <italic>t</italic><sub><italic>r</italic></sub> is considered further (line 6). If no complete genome is found for a particular lineage, the lineage is not included in the simulated community, and a warning is issued (line 20). Next, the number of genomes <italic>X</italic> with their taxonomic IDs <italic>t</italic><sub><italic>r</italic></sub> to be added to <italic>P</italic><sub>out</sub> is drawn from a <italic>truncated geometric distribution</italic> (Eq. <xref rid="Equ1" ref-type="">1</xref>, line 8) with a mean of <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mu = \frac {m}{2}$\end{document}</tex-math><mml:math id="M4"><mml:mi>μ</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="40168_2019_633_Article_IEq2.gif"/></alternatives></inline-formula> and the parameter <italic>k</italic> restricted to be less than <italic>m</italic>. 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ P(X = k) = \left(1 - \frac{1}{\mu} \right)^{k} \cdot \frac{1}{\mu}  $$ \end{document}</tex-math><mml:math id="M6"><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>X</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>μ</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>μ</mml:mi></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="40168_2019_633_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>If <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|G_{t_{r}}|$\end{document}</tex-math><mml:math id="M8"><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="40168_2019_633_Article_IEq3.gif"/></alternatives></inline-formula> is less than <italic>X</italic>, <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{t_{r}}$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="40168_2019_633_Article_IEq4.gif"/></alternatives></inline-formula> is used entirely as <italic>G</italic><sub>selected</sub>, the genomes of <italic>t</italic><sub><italic>r</italic></sub> that are to be included in the community. Otherwise <italic>X</italic> genomes are drawn randomly from <inline-formula id="IEq5"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{t_{r}}$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="40168_2019_633_Article_IEq5.gif"/></alternatives></inline-formula> to generate <italic>G</italic><sub>selected</sub> (lines 9–12). It is optional to use genomes multiple times, by default the selected genomes <italic>g</italic>∈<italic>G</italic><sub>selected</sub> are removed from <italic>F</italic>, such that no genome is selected twice (line 17). Based on the taxon abundances <italic>a</italic><italic>b</italic><sub><italic>t</italic></sub> from <italic>P</italic><sub><italic>in</italic></sub>, the abundances <italic>a</italic><italic>b</italic><sub><italic>i</italic></sub> of the selected taxa <italic>i</italic>∈<italic>G</italic><sub>selected</sub> for <italic>t</italic> are then inferred. First, random variables <italic>Y</italic><sub><italic>i</italic></sub> are drawn from a configurable lognormal distribution, with by default normal mean <italic>μ</italic>=1 and normal standard deviation <italic>σ</italic>=2 (Eq. <xref rid="Equ2" ref-type="">2</xref>), and then the <italic>a</italic><italic>b</italic><sub><italic>i</italic></sub> are set (Eq. <xref rid="Equ3" ref-type="">3</xref>; lines 13–15). Finally, the created pairs (<italic>i</italic>,<italic>a</italic><italic>b</italic><sub><italic>i</italic></sub>) are added to <italic>P</italic><sub>out</sub> (line 16) and <italic>P</italic><sub>out</sub> is returned (line 21). 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} Y_{i} &amp;\sim \text{Lognormal}(\mu,\sigma) \\ \Leftrightarrow \frac{d}{dx}P(Y_{i}\leq x) &amp;= \frac{1}{x\sigma\sqrt{2\pi}} \, e^{-\frac{ \left(\ln x - \mu \right)^{2}} {2\sigma^{2}}} \end{aligned}   $$ \end{document}</tex-math><mml:math id="M14"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Lognormal</mml:mtext><mml:mo>(</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⇔</mml:mo><mml:mfrac><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">dx</mml:mtext></mml:mrow></mml:mfrac><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>xσ</mml:mi><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mspace width="0.3em"/><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>ln</mml:mo><mml:mi>x</mml:mi><mml:mo>−</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="40168_2019_633_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>
          <disp-formula id="Equ3">
            <label>3</label>
            <alternatives>
              <tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ ab_{i} = \frac{Y_{i}}{\sum_{j\in G_{\text{selected}}}Y_{j}} \cdot ab_{t}   $$ \end{document}</tex-math>
              <mml:math id="M16">
                <mml:mi>a</mml:mi>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>b</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>i</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>Y</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:munder>
                      <mml:mrow>
                        <mml:mo>∑</mml:mo>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>j</mml:mi>
                        <mml:mo>∈</mml:mo>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi>G</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mtext>selected</mml:mtext>
                          </mml:mrow>
                        </mml:msub>
                      </mml:mrow>
                    </mml:munder>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>Y</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>j</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo>·</mml:mo>
                <mml:mi>a</mml:mi>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>b</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>t</mml:mi>
                  </mml:mrow>
                </mml:msub>
              </mml:math>
              <graphic xlink:href="40168_2019_633_Article_Equ3.gif" position="anchor"/>
            </alternatives>
          </disp-formula>
        </p>
      </sec>
      <sec id="Sec5">
        <title>De novo design</title>
        <p>A genome sequence collection to sample and a mapping file have to be specified. The mapping file defines for each genome a taxonomic ID (per default from the NCBI taxonomy), a novelty category and an operational taxonomic unit (OTU) ID. Grouping genomes into OTUs is required for sampling related genomes, to increase strain-level diversity in the simulated microbial communities. The novelty category reflects how closely a query genome is related to draft or complete genomes in a genome sequence reference collection. This is used to maximize the spread of selected genomes across the range of taxonomic distances to the genome reference collection, such that there are genomes included of “novel” strains, species, or genera. This distinction is relevant for evaluating reference-based taxonomic binners and profilers, which may perform differently across these different categories. The user can manually generate the mapping file as described in Additional file <xref rid="MOESM1" ref-type="media">1</xref> or in [<xref ref-type="bibr" rid="CR15">15</xref>].</p>
        <p>If controlled sampling of strains is not required, every genome can be assigned to a different OTU ID. If no reference-based taxonomic binners or profilers are to be evaluated, or the provided genome sequence collection does not vary much in terms of taxonomic distance to publicly available genomes used as references for these programs, all genomes can be assigned the same novelty category.</p>
        <p>In addition, the number of genomes <italic>g</italic><sub>real</sub> to be drawn from the input genome selection and the total number of genomes <italic>g</italic><sub>tot</sub> for the community genome abundance profile <italic>P</italic><sub>out</sub> have to be specified. The <italic>g</italic><sub>real</sub> real genomes are drawn from the provided genome sampling collection. An equal number of genomes is drawn for every novelty category. If the number of genomes for a category is insufficient, proportionately more are drawn from others. In addition, CAMISIM simulates <italic>g</italic><sub>sim</sub>=<italic>g</italic><sub>tot</sub>−<italic>g</italic><sub>real</sub> genomes of closely related strains from the chosen real genomes in total. These genomes are created with an enhanced version of sgEvolver [<xref ref-type="bibr" rid="CR22">22</xref>] (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Methods) from a subset of randomly selected real genomes. Given <italic>m</italic>, the maximum number of strains per OTU, up to <italic>m</italic>−1 simulated strain genomes are added <italic>per genome</italic>. The exact number of genomes <italic>X</italic> to be simulated for a selected OTU is drawn from a geometric distribution with mean <italic>μ</italic>=0.3<sup>−1</sup> (Eq. <xref rid="Equ1" ref-type="">1</xref>). This procedure is repeated until <italic>g</italic><sub>sim</sub>-related genomes have been added to the community genome collection, comprising <italic>g</italic><sub>tot</sub>=<italic>g</italic><sub>real</sub>+<italic>g</italic><sub>sim</sub> genomes [<xref ref-type="bibr" rid="CR15">15</xref>].</p>
        <p>Next, community genomes are assigned abundances. The relevant user-defined parameters for this step are the sample type and the number of samples <italic>n</italic>. In addition to single samples, multi-sample data sets (with differential abundances, replicates or time series) have become widely used in real sequencing studies [<xref ref-type="bibr" rid="CR23">23</xref>–<xref ref-type="bibr" rid="CR26">26</xref>], also due to their utility for genome recovery using covariance-based genome binners such as CONCOCT [<xref ref-type="bibr" rid="CR27">27</xref>] or MetaBAT [<xref ref-type="bibr" rid="CR28">28</xref>]. Several options for creating multi-sample metagenome data sets with these setups are provided: 
<list list-type="order"><list-item><p>If simulating a <italic>single sample data set</italic>, the relative abundances are drawn from a lognormal distribution, which is commonly used to model microbial communities [<xref ref-type="bibr" rid="CR29">29</xref>–<xref ref-type="bibr" rid="CR32">32</xref>]. The two parameters of the lognormal distribution can be changed. By default, the mean is set to 1 and the standard deviation to 2 (Eq. <xref rid="Equ2" ref-type="">2</xref>). Setting the standard deviation <italic>σ</italic> to 0 results in a uniform distribution.</p></list-item><list-item><p>The <italic>differential abundance mode</italic> models a community sampled multiple times after the environmental conditions or the DNA extraction protocols (and accordingly the community abundance profile) have been altered. This mode creates <italic>n</italic> different lognormally (Eq. <xref rid="Equ2" ref-type="">2</xref>) distributed genome abundance profiles.</p></list-item><list-item><p>Metagenome data sets with multiple samples with very similar genome abundance distributions can be created using the <italic>replicates mode</italic>. Having multiple replicates of the same metagenome has been reported to improve the quality for some metagenome analysis software, such as for genome binners [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR33">33</xref>, <xref ref-type="bibr" rid="CR34">34</xref>]. Based on an initial log-normal distribution <italic>D</italic><sub>0</sub>, <italic>n</italic> samples are created by adding Gaussian noise to this initial distribution (Eq. <xref rid="Equ4" ref-type="">4</xref>). The Gaussian term accounts for all kinds of effects on the genome abundances of the metagenomic replicates including, but not limited to, different experimenters, different place of extraction, or other batch effects. 
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \begin{aligned} D_{i} = D_{0} + \varepsilon \, \text{with} \; \varepsilon &amp; \sim N(0,1) \; \text{and} \\ \varepsilon &amp;\sim N(0,1) \\ \Leftrightarrow \frac{d}{dx}P(\varepsilon \leq x) &amp;= \frac{1}{\sqrt{2\pi}} \cdot e^{-\frac{1}{2}x^{2}} \end{aligned}  $$ \end{document}</tex-math><mml:math id="M18"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>ε</mml:mi><mml:mspace width="0.3em"/><mml:mtext>with</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>ε</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mi>N</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mspace width="2.77626pt"/><mml:mtext>and</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>ε</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mi>N</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⇔</mml:mo><mml:mfrac><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">dx</mml:mtext></mml:mrow></mml:mfrac><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>ε</mml:mi><mml:mo>≤</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:msup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:msup></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="40168_2019_633_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p></list-item><list-item><p><italic>Time series</italic> metagenome data sets with multiple related samples can be created. For these, a Markov model-like simulation is performed, with the distribution of each of the <italic>n</italic> samples (Eq. <xref rid="Equ5" ref-type="">5</xref>) depending on the distribution of the previous sample plus an additional either lognormal (Eq. <xref rid="Equ2" ref-type="">2</xref>) or Gaussian (Eq. <xref rid="Equ4" ref-type="">4</xref>) term. This emulates the natural process of fluctuating abundances over time and ensures that the abundance changes to the previously sampled metagenome do not grow very large. 
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \hfill \begin{aligned} D_{i} &amp;= D_{i-1} + \varepsilon &amp; \text{with} \\ D_{0} &amp;\sim \text{Lognormal}(\mu,\sigma) &amp; \text{and} \\ \varepsilon &amp;\sim N(0,1) &amp; \text{or} \\ D_{i} &amp;= \frac{D_{i-1} + \varepsilon}{2} &amp; \text{with} \\ \varepsilon &amp;\sim \text{Lognormal}(\mu,\sigma) &amp; \\ \end{aligned} \hfill   $$ \end{document}</tex-math><mml:math id="M20"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>ε</mml:mi></mml:mtd><mml:mtd><mml:mtext>with</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Lognormal</mml:mtext><mml:mo>(</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mtext>and</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>ε</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mi>N</mml:mi><mml:mo>(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mtd><mml:mtd><mml:mtext>or</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>ε</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mtd><mml:mtd><mml:mtext>with</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>ε</mml:mi></mml:mtd><mml:mtd><mml:mo>∼</mml:mo><mml:mtext>Lognormal</mml:mtext><mml:mo>(</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:math><graphic xlink:href="40168_2019_633_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list></p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Metagenome simulation</title>
      <p>Metagenome data sets are generated from the genome abundance profiles of the community design step. For each genome-specific taxon <italic>t</italic> and its abundance (<italic>t</italic>,<italic>a</italic><italic>b</italic><sub><italic>t</italic></sub>)∈<italic>P</italic><sub>out</sub>, its genome size <italic>s</italic><sub><italic>t</italic></sub>, together with the total number of reads <italic>n</italic> in the sample, determines the number of generated reads <italic>n</italic><sub><italic>t</italic></sub> (Eq. <xref rid="Equ6" ref-type="">6</xref>). The total number of reads <italic>n</italic> is the overall sequence sample size divided by the mean read-length of the utilized sequencing technology. 
<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ n_{t} = n \cdot \frac{ab_{t} \cdot s_{t}}{\sum_{i \in P_{\text{out}}}ab_{i} \cdot s_{i}}   $$ \end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>a</mml:mi><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mtext>out</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mi>a</mml:mi><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="40168_2019_633_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>By default, ART [<xref ref-type="bibr" rid="CR35">35</xref>] is used to create Illumina 2 × 150 bp paired-end reads with a HiSeq 2500 error profile. The profile has been trained on MBARC-26 [<xref ref-type="bibr" rid="CR36">36</xref>], a defined mock community that has already been used to benchmark bioinformatics software and a full-length 16S rRNA gene amplicon sequencing protocol [<xref ref-type="bibr" rid="CR37">37</xref>, <xref ref-type="bibr" rid="CR38">38</xref>], and is distributed with CAMISIM. Other ART profiles, such as the one used for the first CAMI challenge, can also be used. Further available read simulators are wgsim (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>, originally part of SAMtools [<xref ref-type="bibr" rid="CR39">39</xref>]) for simulating error-free short reads, pbsim [<xref ref-type="bibr" rid="CR40">40</xref>] for simulating Pacific Biosciences data and nanosim [<xref ref-type="bibr" rid="CR41">41</xref>] for simulating Oxford Nanopore Technologies reads. The read lengths and insert sizes can be varied for some simulators.</p>
      <p>For every sample of a data set, CAMISIM generates FASTQ files and a BAM file [<xref ref-type="bibr" rid="CR39">39</xref>]. The BAM file specifies the alignment of the simulated reads to the reference genomes.</p>
    </sec>
    <sec id="Sec7">
      <title>Gold standard creation and postprocessing</title>
      <p>From the simulated metagenome data sets—the FASTQ and BAM files—CAMISIM creates the assembly and binning gold standards. The software extracts the perfect assembly for each individual sample, and a perfect co-assembly of all samples together by identifying all genomic regions with a coverage of at least one using SAMtools’ mpileup and extracting these as error-free contigs. This gold standard does not include all genome sequences available for the simulation, but the best possible assembly of their sampled reads.</p>
      <p>CAMISIM generates the genome and taxon binning gold standards for the reads and assembled contigs, respectively. These specify the genome and taxonomic lineage that the individual sequences belong to. All sequences can be anonymized and shuffled (but tracked throughout the process), to enable their use in benchmarking challenges. Lastly, files are compressed with gzip and written to the specified output location.</p>
    </sec>
  </sec>
  <sec id="Sec8" sec-type="results">
    <title>Results</title>
    <sec id="Sec9">
      <title>Comparison to the state-of-the-art</title>
      <p>We tested seven simulators and compared them to CAMISIM (Table <xref rid="Tab1" ref-type="table">1</xref>). All generate Illumina data and some—NeSSM [<xref ref-type="bibr" rid="CR42">42</xref>], BEAR [<xref ref-type="bibr" rid="CR43">43</xref>], FASTQSim [<xref ref-type="bibr" rid="CR44">44</xref>], and Grinder [<xref ref-type="bibr" rid="CR45">45</xref>]—also use a taxonomic profile. Novel and unique to CAMISIM is the ability to simulate long-read data from Oxford Nanopore, of hybrid data sets with multiple sequencing technologies and multi-sample data sets, such as with replicates, time series, or differential abundances. Grinder [<xref ref-type="bibr" rid="CR45">45</xref>] can also create multiple samples, but only with differential abundances. In addition, CAMISIM creates gold standards for assembly (single sample assemblies and multi-sample co-assemblies), for taxonomic and genome binning of reads or contigs and for taxonomic profiling. Finally, CAMISIM can evolve multiple strains for selected input genomes and allows specification of the degree of real and simulated intra-species heterogeneity within a data set.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Properties of popular metagenome sequence simulators</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Software</th><th align="left">De novo</th><th align="left">Profile</th><th align="left">Multi</th><th align="left">Strains</th><th align="left">Non-Illumina data</th><th align="left">Licensed</th><th align="left">Updated</th></tr></thead><tbody><tr><td align="left">MetaSim [<xref ref-type="bibr" rid="CR62">62</xref>]</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">✓</td><td align="left">454</td><td align="left">P, AU</td><td align="left">03/2009</td></tr><tr><td align="left">iMESS [<xref ref-type="bibr" rid="CR63">63</xref>]</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">X</td><td align="left">454</td><td align="left">–</td><td align="left">07/2014</td></tr><tr><td align="left">BBMap [<xref ref-type="bibr" rid="CR64">64</xref>]</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">X</td><td align="left">–</td><td align="left">LBL</td><td align="left">01/2019</td></tr><tr><td align="left">NeSSM [<xref ref-type="bibr" rid="CR42">42</xref>]</td><td align="left">✓</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">454</td><td align="left">AU</td><td align="left">07/2013</td></tr><tr><td align="left">BEAR [<xref ref-type="bibr" rid="CR43">43</xref>]</td><td align="left">✓</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">–</td><td align="left">AU</td><td align="left">02/2017</td></tr><tr><td align="left">FASTQSim [<xref ref-type="bibr" rid="CR44">44</xref>]</td><td align="left">✓</td><td align="left">✓</td><td align="left">X</td><td align="left">X</td><td align="left">SOLiD, IonTorrent, PacBio</td><td align="left">GPL</td><td align="left">05/2015</td></tr><tr><td align="left">Grinder [<xref ref-type="bibr" rid="CR45">45</xref>]</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">X</td><td align="left">Sanger, 454</td><td align="left">GPL</td><td align="left">04/2016</td></tr><tr><td align="left">CAMISIM</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">PacBio, ONT, …</td><td align="left">Apache 2.0</td><td align="left">01/2019</td></tr></tbody></table><table-wrap-foot><p>Abbreviations: <italic>P</italic>, proprietary software; <italic>AU,</italic> academic use only; <italic>LBL,</italic> Lawrence Berkeley Lab</p><p>The table shows if an abundance profile can be generated by the simulator de novo and if an existing <italic>profile</italic> of a microbial community can be used as input. Further inspected features are the ability to simulate <italic>multi</italic>-sample data sets, <italic>strains</italic>, and <italic>non-Illumina data</italic> (e.g., long reads). Lastly, the table states if and how a software is <italic>licensed</italic>, and the date it was last recently <italic>updated</italic></p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec10">
      <title>Effect of data properties on assemblies</title>
      <p>We created several thousand “minimally challenging” metagenome samples by varying one data property relevant for assembly, while keeping all others the same. Using these, we studied the effect of evolutionary divergence between genomes, different error profiles, and coverage on the popular metaSPAdes [<xref ref-type="bibr" rid="CR19">19</xref>], version 3.12.0, and MEGAHIT [<xref ref-type="bibr" rid="CR18">18</xref>], versions 1.1.2 and 1.0.3, assemblers, to systematically investigate reported performance declines for assemblers in the presence of strain-level diversity, uneven coverage distributions, and abnormal error profiles [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR47">47</xref>]. Both MEGAHIT and metaSPAdes work on de Bruijn graphs, which are created by splitting the input reads into smaller parts, the <italic>k</italic>-mers, and connecting two <italic>k</italic>-mers if they overlap by exactly <italic>k-1</italic> letters. For every sequencing error <italic>k</italic> erroneous <italic>k</italic>-mers are introduced into the de Bruijn graph, which might substantially impact assembly (Fig. <xref rid="Fig2" ref-type="fig">2</xref>).
<fig id="Fig2"><label>Fig. 2</label><caption><p>Assembly graphs become more complex as coverage increases. MEGAHIT assembly graphs (<italic>k</italic> = 41) of an <italic>E. coli</italic> K12 genome for 2 ×, 32 ×, and 512 × per-base coverage, respectively, visualized with Bandage [<xref ref-type="bibr" rid="CR60">60</xref>]. For 2 × coverage, the graph is disconnected and thus the assembly fragmented. With increasing coverage more and more unitigs can be joined, first resulting in a decent assembly for 32 × coverage, but—due to sequencing errors adding erroneous edges to the graph—a fragmented assembly again for 512 × coverage</p></caption><graphic xlink:href="40168_2019_633_Fig2_HTML" id="MO3"/></fig></p>
      <sec id="Sec11">
        <title>Varying genome coverage and sequencing error rates</title>
        <p>We initially simulated samples from <italic>Escherichia coli</italic> K12 MG1655 with varying coverage and different error rates. Reads were generated at 512 × genome coverage and subsampled stepwise by 50% until 2 × coverage was reached, resulting in a sample series with 512, 256, 128, 64, 32, 16, 8, 4, and 2-fold coverage, respectively. Subsampling was employed to control variation in the sampling of different genomic regions. To assess the effect of sequencing errors, four read data sets were simulated: three using wgsim with uniform error rates of 0%, 2%, and 5%, and one using ART with the CAMI challenge error profile (ART CAMI).</p>
        <p>Both assemblers were run on these data sets with default options, except for the phred-offset parameter for metaSPAdes, which was set to 33. Both assemblers performed similar across all error rates and coverages, with assembly quality varying substantially with coverage (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). Performance on the data generated with the 5% error profile was worst throughout. This is an unrealistically high error profile for Illumina data [<xref ref-type="bibr" rid="CR47">47</xref>] that software need not necessarily be adapted to handle well.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Coverage dependent assembly performance for MEGAHIT and metaSPAdes. Shown are the metrics, from top to bottom: genome fraction in %, number of contigs, and NGA50 (as reported by QUAST [<xref ref-type="bibr" rid="CR61">61</xref>]), for 0%, 2%, and 5% uniform error rate, and with the ART CAMI error profile compared to the best possible metrics (gold standard) on the ART CAMI profile (dashed black)</p></caption><graphic xlink:href="40168_2019_633_Fig3_HTML" id="MO4"/></fig></p>
        <p>If coverage was low, assembly failed, generating a large number of small (low NGA50) contigs covering only a small genome portion (genome fraction) across all data sets, because of uncovered regions in the genomes. Sequencing errors (denoted <italic>ε</italic>) do not play a major role (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). The expected per-base error-rate <italic>E</italic><sub><italic>p</italic></sub>=cov·<italic>ε</italic> (disregarding the biased errors in the short-read sequencing technologies) is far below 1 (<italic>E</italic><sub><italic>p</italic></sub>≪1). With increasing coverage, assembly improved consistently across the 0%, 2%, and CAMISIM ART error profile data sets and both assemblers for all metrics (Fig. <xref rid="Fig3" ref-type="fig">3</xref>), and reaching an early plateau by 8–16 × coverage.</p>
        <p>Notably, the performance of an earlier version of MEGAHIT (1.0.3) decreased substantially (declining genome fraction and NGA50) for more than 128 × coverage, except for error-free reads. For instance, at 5% error rate, MEGAHIT, version 1.0.3, generated an exponential number of contigs at high coverages, which keeps the genome fraction artificially high. For these high coverages and error rates, we expect multiple errors at every position of the genome (<italic>E</italic><sub><italic>p</italic></sub>≫10). This creates de Bruijn graphs with many junctions and bubbles (Fig. <xref rid="Fig2" ref-type="fig">2</xref>) which cannot easily be resolved and may lead to breaking the assembly apart and covering the same part of the genome with multiple, short, and erroneous contigs (Fig. <xref rid="Fig3" ref-type="fig">3</xref>).</p>
      </sec>
      <sec id="Sec12">
        <title>Effect of evolutionary relatedness on assembler performances</title>
        <p>We systematically investigated the effect of related strains on assembler performances across a wide range of taxa and evolutionary divergences, using the genomes of 152 species from the interactive tree of life iTol [<xref ref-type="bibr" rid="CR48">48</xref>], which includes bacteria, archaea, and eukaryotes. For each genome, we evolved 19 related genomes without larger insertions and deletions and an average nucleotide identity (ANI) between 90% and 99.5% to the original one using steps of 0.5%. For each of the 152·20=3040 pairs of original and evolved genome sequences, we simulated single sample minimal metagenomes at equal genome abundances, with error-free reads at 50 × coverage using wgsim. This constitutes good coverage for the analyzed assemblers, as shown in the previous section. For the resulting samples, variation in assembler performance should thus primarily be caused by differences in ANI.</p>
        <p>The presence of closely related genomes substantially affected assembly quality (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). For up to 95% ANI, the assemblers restored high quality assemblies for both genomes. Between 95% and 99% ANI, the genome fraction and assembly size dropped substantially and contig numbers increased. This was the case if we allowed contigs to either map uniquely to one reference genome or to both, in case of multiple optimal mappings. For more closely related genomes, the number of contigs increased drastically and the assembly size continued to drop. The genome fraction remained high when considering non-unique mappings, but decreased for unique mappings; the explanation for this observed behavior is that for an ANI of more than 99%, assemblers produced consensus contigs of the two strains that mostly aligned similarly well to both reference genomes. This was the case for all 152 genomes and their evolved counterparts.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Genome fraction calculated using unique or multiple best mappings in case of ties to the community genome collection. Left: genome fraction for the <italic>E. coli</italic> assembly created by MEGAHIT from error-free reads (top) and with ART CAMI error profile (bottom). Right: average genome fraction and standard deviation for all original 152 iTol genomes created by MEGAHIT from error-free reads (top) and with ART CAMI error profile (bottom). Error bars denote 1 × standard deviation</p></caption><graphic xlink:href="40168_2019_633_Fig4_HTML" id="MO5"/></fig></p>
      </sec>
    </sec>
    <sec id="Sec13">
      <title>Simulating environment-specific data sets</title>
      <p>To test the ability to create metagenome data of the human microbiome, we simulated metagenomes from taxonomic profiles of the Human Microbiome Project [<xref ref-type="bibr" rid="CR9">9</xref>] for different body sites with CAMISIM. We selected 49 samples from the airways, gastrointestinal tract, oral cavity, skin and urogenital tract, with whole genome shotgun (WGS) and 16S rRNA gene amplicon sequence data available. We used the published QIIME OTU table (<ext-link ext-link-type="uri" xlink:href="https://hmpdacc.org/hmp/HMQCP/">https://hmpdacc.org/hmp/HMQCP/</ext-link>) to generate 5 Gb of simulated reads per sample with CAMISIM, resulting in a data set of 245 Gb of Illumina data, and of PacBio data, respectively. Only genomes tagged as “complete genomes” in the NCBI were considered in the data set generation. To decrease the chance of OTUs not being represented by a genome, the option of allowing multiple OTUs being represented by a single reference genome was turned on. This can be relevant for instance when due to sequencing errors in 16S rRNA data, individual community genomes are represented by multiple OTUs.</p>
      <p>For a functional comparison of the simulated data with the original metagenome shotgun data, we inferred KEGG Ortholog family abundance profiles from the raw read data sets [<xref ref-type="bibr" rid="CR49">49</xref>]. To this end, all reads were searched with Diamond v0.9.10 using its blastx command with default options [<xref ref-type="bibr" rid="CR50">50</xref>] against the KEGG GENES database (release 77, species_prokaryotes, best-hit approach) and linked to KEGG Orthology (KO) via the KEGG mapping files. KO profile similarity between the simulated and original metagenome samples was calculated with Pearson’s correlation coefficient (PCC) and Spearman rank correlation (SRC), and visualized with non-metric multidimensional scaling (NMDS) [<xref ref-type="bibr" rid="CR51">51</xref>].</p>
      <p>For comparison, we also created functional profiles with PICRUSt [<xref ref-type="bibr" rid="CR52">52</xref>], using a prediction model generated from 3772 KEGG genomes and corresponding 16S rRNA gene sequences according to the PICRUSt “Genome Prediction Tutorial” (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The PCC of the CAMISIM and original samples approached a striking 0.97 for body sites with high bacterial abundances and many sequenced genomes available, such as the GI tract and oral cavity, and still ranged from 0.72 to 0.91 for airways, skin and urogenital tract samples (Fig. <xref rid="Fig5" ref-type="fig">5</xref>b). All PCCs were 7–30% higher than the PCC of PICRUSt with the original metagenome samples. Thus, CAMISIM created metagenome samples functionally even closer to the original metagenome samples than the functional profiles created by PICRUSt. The higher PCC may also partly be due to the fact that the original and CAMISIM data were annotated by “blasting” reads versus KEGG, while the PICRUSt profiles were directly generated from KEGG genome annotations. The Spearman correlation of the simulated CAMISIM samples to the original metagenome samples was slightly lower than the PCC across all body sites, and very similar for CAMISIM and PICRUSt (0–6% improvement of CAMISIM over PICRUSt). These results demonstrate the quality of the CAMISIM samples.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of CAMISIM and PICRUSt functional profiles for different body sites. <bold>a</bold> NMDS ordination of the functional predictions of individual samples by the different methods. The different body sites are color-coded and labeled with their sample number. The original WGS is denoted by squares, the CAMISIM result as circles and the PICRUSt result as triangles. <bold>b</bold> Mean and standard deviation of Pearson and Spearman correlation to original WGS samples per body site. C, CAMISIM; P, PICRUSt</p></caption><graphic xlink:href="40168_2019_633_Fig5_HTML" id="MO6"/></fig></p>
      <p>The NMDS plot (Fig. <xref rid="Fig5" ref-type="fig">5</xref>a) showed a very distinct clustering of the CAMISIM and original WGS samples by body site, more closely than the original samples clustered with the PICRUSt profiles. Even though the urogenital tract samples did not cluster perfectly, the CAMISIM samples still formed a very distinct cluster close to the original one. Even outliers in the original samples were, at least partly, detected and correctly simulated (both original and simulated sample 26 of urogenital tract cluster most closely with the gastrointestinal tract microbiomes).</p>
      <p>We also provide a multi-sample mouse gut data set for software developers to benchmark against. For 64 16S rRNA samples from the mouse gut [<xref ref-type="bibr" rid="CR17">17</xref>], we simulated 5 Gb of Illumina and PacBio reads each. The mice were obtained from 12 different vendors and the samples characterized by 16S V4 amplicon sequencing (OTU mapping file in Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Since for mouse gut only a few complete reference genomes were available, the “scaffold” quality for downloading genomes was chosen.</p>
    </sec>
  </sec>
  <sec id="Sec14">
    <title>Discussion and conclusions</title>
    <p>CAMISIM is a flexible program for simulating a large variety of microbial communities and metagenome samples. To our knowledge, it possesses the most complete feature set for simulating realistic microbial communities and metagenome data sets. This feature set includes simulation from taxonomic profiles as templates, inclusion of both natural and simulated strain level diversity, and modelling multi-sample data sets with different underlying community abundance distributions. Read simulators are included for short-read (Illumina) and long-read (PacBio, ONT) sequencing technologies, allowing the generation of hybrid data sets. This turns CAMISIM into a versatile metagenome simulation pipeline, as modules for new (or updated) sequencing technologies and emerging experimental setups can easily be incorporated.</p>
    <p>We systematically explored the effect of specific data properties on assembler performances on several thousand minimally challenging metagenomes. While low coverage reduced assembly quality for both assemblers, metaSPAdes and MEGAHIT performed generally well for medium to high coverages and different error profiles. Notably, MEGAHIT is computationally very efficient and overall performed well. As noted before [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR53">53</xref>], assemblers had problems with resolving closely related genomes in our experiments. For an in-depth investigation, we systematically analyzed the effect of related strains on MEGAHIT’s performance across a wide range of taxa and evolutionary divergences. The average nucleotide identity (ANI) between two genomes is a robust measure of genome relatedness; an ANI value of 95% roughly corresponds to a 70% DNA-DNA reassociation value—a historical definition of bacterial species [<xref ref-type="bibr" rid="CR54">54</xref>, <xref ref-type="bibr" rid="CR55">55</xref>]. For an pairwise ANI below 95%, the mixture of strains could be separated quite well and assembled into different contigs. For an ANI of more than 99%, consensus contigs of strains were produced that mostly aligned similarly well to either reference genome. In the “twilight zone” of 95–99% nucleotide identity, assembly performance dropped substantially and MEGAHIT’s inability to reliable phase strain variation resulted in many small (and often redundant) contigs. For IDBA-UD [<xref ref-type="bibr" rid="CR56">56</xref>], another <italic>de Bruijn</italic> graph-based metagenome assembler, a similar pattern has been observed [<xref ref-type="bibr" rid="CR57">57</xref>], indicating that such behavior is common to many assemblers.</p>
    <p>Resolving strains from metagenome shotgun data is an open research question, though recently promising computational approaches were proposed [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR58">58</xref>]. The hybrid long- and short-read simulated data sets we are providing for mouse gut and human body sites could enable the development of new approaches for this task. CAMISIM will facilitate the generation of further realistic benchmarking data sets to assess their performances. With the advent of long-read metagenomics, metagenomics software needs to coevolve, e.g., metagenome assemblers should support long-read and hybrid assemblies in the future (metaSPAdes [<xref ref-type="bibr" rid="CR19">19</xref>] is a pioneer in this regard). In fact, hybrid data sets will be key to the second CAMI challenge [<xref ref-type="bibr" rid="CR59">59</xref>].</p>
    <p>CAMISIM can also be used to study the effect of experimental design (e.g., number of replicates, sequencing depth, insert sizes) or intrinsic community properties, such as taxonomic composition, community abundance distributions, and organismal complexities, on program performance. Due to the enormous diversity of naturally occurring microbial communities, experimental and sequencing technology setups used in the field, such explorations are required to determine the most effective combinations for specific research questions.</p>
    <p>While we tried to mimic naturally occurring data sets as close as possible, CAMISIM, especially in the de novo mode and when artificially simulating new strains, requires the user to make choices about the underlying evolutionary and ecological parameters. This includes but is not necessarily limited to the organismal abundance distribution and its parameters, like discussed in [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR32">32</xref>], of microbial communities and the parameters driving strain evolution. When developing metagenome analysis tools, these should not only be entirely optimized to work on individual data sets produced by CAMISIM, but also tested with additional, optimally real world data.</p>
  </sec>
  <sec id="Sec15">
    <title>Availability and requirements</title>
    <p><bold>Project name:</bold> CAMISIM</p>
    <p>
      <bold>Project home page:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://github.com/CAMI-challenge/CAMISIM">https://github.com/CAMI-challenge/CAMISIM</ext-link>
    </p>
    <p><bold>Operating system(s):</bold> UNIX</p>
    <p><bold>Programming language:</bold> Python 2.7</p>
    <p>
      <bold>Other requirements:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://github.com/CAMI-challenge/CAMISIM/wiki">https://github.com/CAMI-challenge/CAMISIM/wiki</ext-link>
    </p>
    <p><bold>License:</bold> Apache 2.0</p>
    <p><bold>Any restrictions to use by non-academics:</bold> None.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec16">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="40168_2019_633_MOESM1_ESM.pdf">
            <label>Additional file 1</label>
            <caption>
              <p>Supplementary information. Taxonomic profile based community design: BIOM format details, Reference database. De novo community design: Creation of the mapping file. Genome assembly metrics. Methods: iTol, Parameters, PICRUST, Configfile. OTU mapping file. (PDF 146 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors thank the Isaac Newton Institute for Mathematical Sciences for its hospitality during the programme MTG, which was supported by EPSRC Grant Number EP/K032208/1, and Victoria Sack for generating Fig. <xref rid="Fig1" ref-type="fig">1</xref>. This research project has been supported by the President’s Initiative and Networking Funds of the Helmholtz Association of German Research Centres (HGF) under contract number VH-GS-202.</p>
    <sec id="d29e2556" sec-type="data-availability">
      <title>Availability of data and materials</title>
      <p>Config files, input genomes, and metadata for the data sets generated and/or analyzed are available on GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/CAMI-challenge/CAMISIM">https://github.com/CAMI-challenge/CAMISIM</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/CAMI-challenge/CAMISIM-DATA">https://github.com/CAMI-challenge/CAMISIM-DATA</ext-link>.</p>
      <p>The large human and mouse gut microbiome data sets (alongside the BIOM and config files from which they were created) are available at: <ext-link ext-link-type="uri" xlink:href="https://data.cami-challenge.org/participate">https://data.cami-challenge.org/participate</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>AF, PH, SM, ED, JD, JF, MZD, AED, and AB implemented CAMISIM. AF and PB tested the software. AF, TRL, and AB performed the experiments. AF, TRL, AS, AB, and ACM interpreted the results. AF, PH, TRL, PB, AB, and ACM wrote the manuscript. AB and ACM conceived the experiments. ACM conceived and supervised the project. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec>
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec>
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <mixed-citation publication-type="other">Turnbaugh PJ, Ley RE, Hamady M, Fraser-Liggett C, Knight R, Gordon JI. The human microbiome project: exploring the microbial part of ourselves in a changing world. Nature. 2007; 449(7164):804–10. 10.1038/nature06244.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <mixed-citation publication-type="other">Proctor LM, Sechi S, DiGiacomo ND, Fettweis JM, Jefferson KK, et al. The integrative human microbiome project: dynamic analysis of microbiome-host omics profiles during periods of human health and disease. Cell Host Microbe. 2014; 16(3):276–89. 10.1016/j.chom.2014.08.014.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <mixed-citation publication-type="other">Warnecke F, Luginbühl P, Ivanova N, Ghassemian M, Richardson TH, et al.Metagenomic and functional analysis of hindgut microbiota of a wood-feeding higher termite. Nature. 2007; 450(7169):560–5. 10.1038/nature06269.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <mixed-citation publication-type="other">Hess M, Sczyrba A, Egan R, Kim TW, Chokhawala H, et al. Metagenomic discovery of biomass-degrading genes and genomes from cow rumen. Science. 2011; 331(6016):463–7. 10.1126/science.1200387.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <mixed-citation publication-type="other">Bremges A, Maus I, Belmann P, Eikmeyer F, Winkler A, et al.Deeply sequenced metagenome and metatranscriptome of a biogas-producing microbial community from an agricultural production-scale biogas plant. GigaScience. 2015; 4:33. 10.1186/s13742-015-0073-6.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <mixed-citation publication-type="other">Sunagawa S, Coelho LP, Chaffron S, Kultima JR, Labadie K, et al. Ocean plankton. Structure and function of the global ocean microbiome. Science. 2015; 348(6237):1261359. 10.1126/science.1261359.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <mixed-citation publication-type="other">Xiao L, Feng Q, Liang S, Sonne SB, Xia Z, et al. A catalog of the mouse gut metagenome. Nat Biotechnol. 2015; 33(10):1103–8. 10.1038/nbt.3353.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <mixed-citation publication-type="other">Kunath BJ, Bremges A, Weimann A, McHardy AC, Pope PB. Metagenomics and CAZyme Discovery. Methods Mol Biol. 2017; 1588:255–77. 10.1007/978-1-4939-6899-2_20.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <mixed-citation publication-type="other">Huttenhower C, Gevers D, Knight R, Abubucker S, Badger JH, et al. Structure, function and diversity of the healthy human microbiome. Nature. 2012; 486(7402):207–14. 10.1038/nature11234.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Scholz M, Ward DV, Pasolli E, Tolio T, Zolfo M, et al. Strain-level microbial epidemiology and population genomics from shotgun metagenomics. Nat Methods. 2016; 13(5):435–8. 10.1038/nmeth.3802.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <mixed-citation publication-type="other">Quince C, Delmont TO, Raguideau S, Alneberg J, Darling AE, et al. DESMAN: a new tool for de novo extraction of strains from metagenomes. Genome Biol. 2017; 18(1):181. 10.1186/s13059-017-1309-9.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">Thompson LR, Sanders JG, McDonald D, Amir A, Ladau J, et al. A communal catalogue reveals earth’s multiscale microbial diversity. Nature. 2017. 10.1038/nature24621.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Quince C, Walker AW, Simpson JT, Loman NJ, Segata N. Shotgun metagenomics, from sampling to analysis. Nat Biotechnol. 2017; 35(9):833–44. 10.1038/nbt.3935.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <mixed-citation publication-type="other">Goodwin S, McPherson JD, McCombie WR. Coming of age: ten years of next-generation sequencing technologies. Nat Rev Genet. 2016; 17(6):333–51. 10.1038/nrg.2016.49.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <mixed-citation publication-type="other">Sczyrba A, Hofmann P, Belmann P, Koslicki D, Janssen S, et al. Critical assessment of metagenome interpretation-a benchmark of metagenomics software. Nat Methods. 2017; 14(11):1063–71. 10.1038/nmeth.4458.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Belmann P, Dröge J, Bremges A, McHardy AC, Sczyrba A, Barton MD. Bioboxes: standardised containers for interchangeable bioinformatics software. GigaScience. 2015; 4:47. 10.1186/s13742-015-0087-0.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <mixed-citation publication-type="other">Roy U, Galvez EJC, Iljazovic A, Lesker TR, Blazejewski AJ, et al. Distinct microbial communities trigger colitis development upon intestinal barrier damage via innate or adaptive immune cells. Cell Rep. 2017; 21(4):994–1008. 10.1016/j.celrep.2017.09.097.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <mixed-citation publication-type="other">Li D, Liu CM, Luo R, Sadakane K, Lam TW. MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph. Bioinformatics. 2015; 31(10):1674–6. 10.1093/bioinformatics/btv033.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <mixed-citation publication-type="other">Nurk S, Meleshko D, Korobeynikov A, Pevzner PA. metaSPAdes: a new versatile metagenomic assembler. Genome Res. 2017;:213959–116. 10.1101/gr.213959.116.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <mixed-citation publication-type="other">McDonald D, Clemente JC, Kuczynski J, Rideout JR, Stombaugh J, et al. The Biological Observation Matrix (BIOM) format or: how I learned to stop worrying and love the ome-ome. GigaScience. 2012; 1:7. 10.1186/2047-217X-1-7.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <mixed-citation publication-type="other">Pruitt KD, Tatusova T, Maglott DR. NCBI reference sequences (RefSeq): a curated non-redundant sequence database of genomes, transcripts and proteins. Nucleic Acids Res. 2007; 35(Database issue):61–5. 10.1093/nar/gkl842.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <mixed-citation publication-type="other">Darling ACE, Mau B, Blattner FR, Perna NT. Mauve: multiple alignment of conserved genomic sequence with rearrangements. Genome Res. 2004; 14(7):1394–403. 10.1101/gr.2289704.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <mixed-citation publication-type="other">Albertsen M, Hugenholtz P, Skarshewski A, Nielsen KL, Tyson GW, Nielsen PH. Genome sequences of rare, uncultured bacteria obtained by differential coverage binning of multiple metagenomes. Nat Biotechnol. 2013; 31(6):533–8. 10.1038/nbt.2579.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <mixed-citation publication-type="other">Bendall ML, Stevens SL, Chan LK, Malfatti S, Schwientek P, et al. Genome-wide selective sweeps and gene-specific sweeps in natural bacterial populations. The ISME J. 2016; 10(7):1589–601. 10.1038/ismej.2015.241.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <mixed-citation publication-type="other">Stolze Y, Bremges A, Rumming M, Henke C, Maus I, et al. Identification and genome reconstruction of abundant distinct taxa in microbiomes from one thermophilic and three mesophilic production-scale biogas plants. Biotechnol Biofuels. 2016; 9:156. 10.1186/s13068-016-0565-3.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <mixed-citation publication-type="other">Roux S, Chan LK, Egan R, Malmstrom RR, McMahon KD, Sullivan MB. Ecogenomics of virophages and their giant virus hosts assessed through time series metagenomics. Nat Commun. 2017;8(1). 10.1038/s41467-017-01086-2.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <mixed-citation publication-type="other">Alneberg J, Bjarnason BS, de Bruijn I, Schirmer M, Quick J, et al.Binning metagenomic contigs by coverage and composition. Nat Methods. 2014; 11(11):1144–6. 10.1038/nmeth.3103.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <mixed-citation publication-type="other">Kang DD, Froula J, Egan R, Wang Z. MetaBAT, an efficient tool for accurately reconstructing single genomes from complex microbial communities. PeerJ. 2015; 3:1165. 10.7717/peerj.1165.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <mixed-citation publication-type="other">Curtis TP, Sloan WT, Scannell JW. Estimating prokaryotic diversity and its limits. Proc Natl Acad Sci. 2002; 99(16):10494–9. 10.1073/pnas.142680199.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <mixed-citation publication-type="other">Ofiţeru ID, Lunn M, Curtis TP, Wells GF, Criddle CS, et al.Combined niche and neutral effects in a microbial wastewater treatment community. Proc Natl Acad Sci. 2010; 107(35):15345–50. 10.1073/pnas.1000604107.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <mixed-citation publication-type="other">Ulrich W, Ollik M, Ugland KI. A meta-analysis of species–abundance distributions. Oikos. 2010; 119(7):1149–55. 10.1111/j.1600-0706.2009.18236.x.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <mixed-citation publication-type="other">Unterseher M, Jumpponen A, Opik M, Tedersoo L, Moora M, et al. Species abundance distributions and richness estimations in fungal metagenomics–lessons learned from community ecology. Mol Ecol. 2011; 20(2):275–85. 10.1111/j.1365-294X.2010.04948.x.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <mixed-citation publication-type="other">Nielsen HB, Almeida M, Juncker AS, Rasmussen S, Li J, et al. Identification and assembly of genomes and genetic elements in complex metagenomic samples without using reference genomes. Nat Biotechnol. 2014; 32(8):822–8. 10.1038/nbt.2939.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <mixed-citation publication-type="other">Imelfort M, Parks D, Woodcroft BJ, Dennis P, Hugenholtz P, Tyson GW. GroopM: an automated tool for the recovery of population genomes from related metagenomes. PeerJ. 2014; 2:603. 10.7717/peerj.603.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <mixed-citation publication-type="other">Huang W, Li L, Myers JR, Marth GT. ART: a next-generation sequencing read simulator. Bioinformatics. 2012; 28(4):593–4. 10.1093/bioinformatics/btr708.</mixed-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <mixed-citation publication-type="other">Singer E, Andreopoulos B, Bowers RM, Lee J, Deshpande S, et al.Next generation sequencing data of a defined microbial mock community. Sci Data. 2016; 3:160081. 10.1038/sdata.2016.81.</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <mixed-citation publication-type="other">Bremges A, Singer E, Woyke T, Sczyrba A. MeCorS: Metagenome-enabled error correction of single cell sequencing reads. Bioinformatics. 2016; 32(14):2199–201. 10.1093/bioinformatics/btw144.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <mixed-citation publication-type="other">Singer E, Bushnell B, Coleman-Derr D, Bowman B, Bowers RM, et al.High-resolution phylogenetic microbial community profiling. ISME J. 2016; 10(8):2020–032. 10.1038/ismej.2015.249.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39</label>
      <mixed-citation publication-type="other">Li H, Handsaker B, Wysoker A, Fennell T, Ruan J, et al.The Sequence Alignment/Map format and SAMtools. Bioinformatics. 2009; 25(16):2078–9. 10.1093/bioinformatics/btp352.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40</label>
      <mixed-citation publication-type="other">Ono Y, Asai K, Hamada M. PBSIM: PacBio reads simulator–toward accurate genome assembly. Bioinformatics. 2013; 29(1):119–21. 10.1093/bioinformatics/bts649.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41</label>
      <mixed-citation publication-type="other">Yang C, Chu J, Warren RL, Birol I. NanoSim: nanopore sequence read simulator based on statistical characterization. GigaScience. 2017. 10.1093/gigascience/gix010.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42</label>
      <mixed-citation publication-type="other">Jia B, Xuan L, Cai K, Hu Z, Ma L, Wei C. NeSSM: a next-generation sequencing simulator for metagenomics. PLoS ONE. 2013; 8(10):75448. 10.1371/journal.pone.0075448.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43</label>
      <mixed-citation publication-type="other">Johnson S, Trost B, Long JR, Pittet V, Kusalik A. A better sequence-read simulator program for metagenomics. BMC Bioinformatics. 2014; 15(Suppl 9):14. 10.1186/1471-2105-15-s9-s14.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44</label>
      <mixed-citation publication-type="other">Shcherbina A. FASTQSim: platform-independent data characterization and in silico read generation for NGS datasets. BMC Res Notes. 2014; 7(1):533. 10.1186/1756-0500-7-533.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45</label>
      <mixed-citation publication-type="other">Angly FE, Willner D, Rohwer F, Hugenholtz P, Tyson GW. Grinder: a versatile amplicon and shotgun sequence simulator. Nucleic Acids Res. 2012; 40(12):94–4. 10.1093/nar/gks251.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46</label>
      <mixed-citation publication-type="other">Rinke C, Schwientek P, Sczyrba A, Ivanova NN, Anderson IJ, et al. Insights into the phylogeny and coding potential of microbial dark matter. Nature. 2013; 499(7459):431–7. 10.1038/nature12352.</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47</label>
      <mixed-citation publication-type="other">Laehnemann D, Borkhardt A, McHardy AC. Denoising DNA deep sequencing data-high-throughput sequencing errors and their correction. Brief Bioinformatics. 2016; 17(1):154–79. 10.1093/bib/bbv029.</mixed-citation>
    </ref>
    <ref id="CR48">
      <label>48</label>
      <mixed-citation publication-type="other">Letunic I, Bork P. Interactive Tree Of Life (iTOL): an online tool for phylogenetic tree display and annotation. Bioinformatics. 2007; 23(1):127–8. 10.1093/bioinformatics/btl529.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49</label>
      <mixed-citation publication-type="other">Kanehisa M, Sato Y, Kawashima M, Furumichi M, Tanabe M. KEGG as a reference resource for gene and protein annotation. Nucleic Acids Res. 2015; 44(D1):457–62. 10.1093/nar/gkv1070.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50</label>
      <mixed-citation publication-type="other">Buchfink B, Xie C, Huson DH. Fast and sensitive protein alignment using DIAMOND. Nat Methods. 2014; 12(1):59–60. 10.1038/nmeth.3176.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51</label>
      <mixed-citation publication-type="other">Kruskal JB. Multidimensional scaling by optimizing goodness of fit to a nonmetric hypothesis. Psychometrika. 1964; 29(1):1–27. 10.1007/bf02289565.</mixed-citation>
    </ref>
    <ref id="CR52">
      <label>52</label>
      <mixed-citation publication-type="other">Langille MGI, Zaneveld J, Caporaso JG, McDonald D, Knights D, et al. Predictive functional profiling of microbial communities using 16s rrna marker gene sequences. Nat Biotech. 2013; 31(9):814–21. 10.1038/nbt.2676.</mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53</label>
      <mixed-citation publication-type="other">Awad S, Irber L, Brown CT. Evaluating metagenome assembly on a simple defined community with many strain variants. bioRxiv. 2017. 10.1101/155358.</mixed-citation>
    </ref>
    <ref id="CR54">
      <label>54</label>
      <mixed-citation publication-type="other">Konstantinidis KT, Tiedje JM. Genomic insights that advance the species definition for prokaryotes. Proc Natl Acad Sci USA. 2005. 10.1073/pnas.0409727102.</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55</label>
      <mixed-citation publication-type="other">Varghese NJ, Mukherjee S, Ivanova N, Konstantinidis KT, Mavrommatis K, et al. Microbial species delineation using whole genome sequences. Nucleic Acids Res. 2015. 10.1093/nar/gkv657.</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56</label>
      <mixed-citation publication-type="other">Peng Y, Leung HCM, Yiu SM, Chin FYL. IDBA-UD: a de novo assembler for single-cell and metagenomic sequencing data with highly uneven depth. Bioinformatics. 2012; 28(11):1420–8. 10.1093/bioinformatics/bts174.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57</label>
      <mixed-citation publication-type="other">DeMaere MZ, Darling AE. Deconvoluting simulated metagenomes: the performance of hard- and soft- clustering algorithms applied to metagenomic chromosome conformation capture (3c). PeerJ. 2016; 4:2676. 10.7717/peerj.2676.</mixed-citation>
    </ref>
    <ref id="CR58">
      <label>58</label>
      <mixed-citation publication-type="other">Cleary B, Brito IL, Huang K, Gevers D, Shea T, et al. Detection of low-abundance bacterial strains in metagenomic datasets by eigengenome partitioning. Nat Biotechnol. 2015; 33(10):1053–60. 10.1038/nbt.3329.</mixed-citation>
    </ref>
    <ref id="CR59">
      <label>59</label>
      <mixed-citation publication-type="other">Bremges A, McHardy AC. Critical Assessment of Metagenome Interpretation Enters the Second Round. mSystems. 2018;3(4). 10.1128/mSystems.00103-18.</mixed-citation>
    </ref>
    <ref id="CR60">
      <label>60</label>
      <mixed-citation publication-type="other">Wick RR, Schultz MB, Zobel J, Holt KE. Bandage: interactive visualization ofde novogenome assemblies. Bioinformatics. 2015; 31(20):3350–2. 10.1093/bioinformatics/btv383.</mixed-citation>
    </ref>
    <ref id="CR61">
      <label>61</label>
      <mixed-citation publication-type="other">Gurevich A, Saveliev V, Vyahhi N, Tesler G. QUAST: quality assessment tool for genome assemblies. Bioinformatics. 2013; 29(8):1072–5. 10.1093/bioinformatics/btt086.</mixed-citation>
    </ref>
    <ref id="CR62">
      <label>62</label>
      <mixed-citation publication-type="other">Richter DC, Ott F, Auch AF, Schmid R, Huson DH. MetaSim —a sequencing simulator for genomics and metagenomics. PLoS ONE. 2008; 3(10):3373. 10.1371/journal.pone.0003373.</mixed-citation>
    </ref>
    <ref id="CR63">
      <label>63</label>
      <mixed-citation publication-type="other">Mende DR, Waller AS, Sunagawa S, Järvelin AI, Chan MM, et al. Assessment of metagenomic assembly using simulated next generation sequencing data. PLoS ONE. 2012; 7(2):31386. 10.1371/journal.pone.0031386.</mixed-citation>
    </ref>
    <ref id="CR64">
      <label>64</label>
      <mixed-citation publication-type="other">Bushnell B. BBMap: A fast, accurate, splice-aware aligner; 2014. <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/bbmap">https://sourceforge.net/projects/bbmap</ext-link>. Accessed 30 Jan 2019.</mixed-citation>
    </ref>
  </ref-list>
</back>

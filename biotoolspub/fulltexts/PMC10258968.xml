<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10258968</article-id>
    <article-id pub-id-type="publisher-id">5329</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-023-05329-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>kboolnet</italic>: a toolkit for the verification, validation, and visualization of reaction-contingency (<italic>rxncon</italic>) models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Carretero Chavez</surname>
          <given-names>Willow</given-names>
        </name>
        <address>
          <email>carreter@mit.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krantz</surname>
          <given-names>Marcus</given-names>
        </name>
        <address>
          <email>marcus.krantz@oru.se</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Klipp</surname>
          <given-names>Edda</given-names>
        </name>
        <address>
          <email>edda.klipp@rz.hu-berlin.de</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-9083-7039</contrib-id>
        <name>
          <surname>Kufareva</surname>
          <given-names>Irina</given-names>
        </name>
        <address>
          <email>ikufareva@ucsd.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.266100.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2107 4242</institution-id><institution>Skaggs School of Pharmacy and Pharmaceutical Sciences, </institution><institution>University of California San Diego, </institution></institution-wrap>9500 Gilman Dr, La Jolla, CA 92093 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Present Address: Massachusetts Institute of Technology, </institution></institution-wrap>77 Massachusetts Ave, Cambridge, MA 02139 USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.7468.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2248 7639</institution-id><institution>Theoretical Biophysics, </institution><institution>Humboldt-Universität zu Berlin, </institution></institution-wrap>Invalidenstr. 42, 10115 Berlin, Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.15895.30</institution-id><institution-id institution-id-type="ISNI">0000 0001 0738 8966</institution-id><institution>Present Address: School of Medical Sciences and Inflammatory Response and Infection Susceptibility Centre (iRiSC), Faculty of Medicine and Health, </institution><institution>Örebro University, </institution></institution-wrap>Örebro, Sweden </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>246</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Computational models of cell signaling networks are extremely useful tools for the exploration of underlying system behavior and prediction of response to various perturbations. By representing signaling cascades as executable Boolean networks, the previously developed <italic>rxncon</italic> (“reaction-contingency”) formalism and associated Python package enable accurate and scalable modeling of signal transduction even in large (thousands of components) biological systems. The models are split into reactions, which generate states, and contingencies, that impinge on reactions; this avoids the so-called “combinatorial explosion” of system size. Boolean description of the biological system compensates for the poor availability of kinetic parameters which are necessary for quantitative models. Unfortunately, few tools are available to support <italic>rxncon</italic> model development, especially for large, intricate systems.
</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We present the <italic>kboolnet</italic> toolkit (<ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet">https://github.com/Kufalab-UCSD/kboolnet</ext-link>, complete documentation at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/wiki">https://github.com/Kufalab-UCSD/kboolnet/wiki</ext-link>), an R package and a set of scripts that seamlessly integrate with the python-based <italic>rxncon</italic> software and collectively provide a complete workflow for the verification, validation, and visualization of <italic>rxncon</italic> models. The verification script <italic>VerifyModel.R</italic> checks for responsiveness to repeated stimulations as well as consistency of steady state behavior. The validation scripts <italic>TruthTable.R</italic>, <italic>SensitivityAnalysis.R</italic>, and <italic>ScoreNet.R</italic> provide various readouts for the comparison of model predictions to experimental data. In particular, <italic>ScoreNet.R</italic> compares model predictions to a cloud-stored <italic>MIDAS</italic>-format experimental database to provide a numerical score for tracking model accuracy. Finally, the visualization scripts allow for graphical representations of model topology and behavior. The entire <italic>kboolnet</italic> toolkit is cloud-enabled, allowing for easy collaborative development; most scripts also allow for the extraction and analysis of individual user-defined “modules”.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">The <italic>kboolnet</italic> toolkit provides a modular, cloud-enabled workflow for the development of <italic>rxncon</italic> models, as well as their verification, validation, and visualization. This will enable the creation of larger, more comprehensive, and more rigorous models of cell signaling using the <italic>rxncon</italic> formalism in the future.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-023-05329-6.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Computational modeling</kwd>
      <kwd>Cell signaling</kwd>
      <kwd>Network biology</kwd>
      <kwd>
        <italic>Rxncon</italic>
      </kwd>
      <kwd>Boolean networks</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000060</institution-id>
            <institution>National Institute of Allergy and Infectious Diseases</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R21 AI149369</award-id>
        <award-id>R21 AI156662</award-id>
        <principal-award-recipient>
          <name>
            <surname>Kufareva</surname>
            <given-names>Irina</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01 GM136202</award-id>
        <principal-award-recipient>
          <name>
            <surname>Kufareva</surname>
            <given-names>Irina</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par7">Modeling of cell signaling networks is a crucial tool in the development of the understanding of how said networks operate both normally and pathogenically, providing information which can be used to identify possible therapeutic targets. To this end, a variety of formalisms for describing and simulating these signaling networks have been developed [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>]. Among these formalisms is <italic>rxncon</italic> (“reaction-contingency”) [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], which seeks to overcome two major challenges in cell signaling modeling: the poor availability of kinetic parameters for reactions, and the “combinatorial explosion”, the phenomenon in which the enumeration of all potential states of complexes containing multiple proteins with several possible post-translational modifications results in unwieldy and computationally expensive models [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR8">8</xref>].</p>
    <p id="Par8">The <italic>rxncon</italic> formalism separates biological signaling networks into two parts: elemental states, which represent information about the status of the system components and reactions, which produce and consume states (see [<xref ref-type="bibr" rid="CR9">9</xref>] for a detailed explanation of <italic>rxncon’s</italic> model structure and syntax). The bipartite nature of the resulting network solves the problem of the “combinatorial explosion” by eliminating the need for enumeration of all combinations of microstates. The first problem, sparse knowledge of kinetic parameters, is addressed by allowing compilation of <italic>rxncon</italic> models into purely qualitative Boolean networks. Alternatively, <italic>rxncon</italic> models can be compiled into agent- and rule-based models, allowing for pseudo-quantitative simulation of the system [<xref ref-type="bibr" rid="CR10">10</xref>]; however, compilation into Boolean networks allows for fast and parameter-free evaluation of model dynamics.</p>
    <p id="Par9">In Boolean networks, a system is represented as a set of nodes which can be ON or OFF; the Boolean vector of values of all nodes represents a <italic>state</italic> of the network. The system’s state is updated in discrete synchronous steps where the new value of each node is calculated as a Boolean function of existing values of other nodes. As a result of the finite nature the state space, any simulation of a Boolean network will eventually fall into a finite-size (one or more) loop of Boolean states that the network will indefinitely visit in order; such loop is called an <italic>attractor</italic> and represents a steady state of a Boolean network. Importantly, most Boolean networks have more than one attractor that the system can reach, in a deterministic manner, from different initial states. Due to the enormous size of the state space (2<sup><italic>n</italic></sup> where <italic>n</italic> is the number of states and reactions in a system), the assessment of all possible system trajectories through this space is poorly scalable; however, it can provide great insight into model behavior.</p>
    <p id="Par10">The use of parameter-free Boolean logic and a bipartite network structure makes <italic>rxncon</italic> models efficiently scalable and allows for iterative simulations of extremely large and complex systems (e.g. the previous published <italic>rxncon</italic> model of the cell division cycle of <italic>Saccharomyces cerevisiae</italic> involved 357 unique components, 790 reactions, and 598 contingencies [<xref ref-type="bibr" rid="CR9">9</xref>]).</p>
    <p id="Par11">Maintaining <italic>rxncon</italic> models of this size presents its own host of challenges. Using currently available software, consistency checks of the model behavior under various combinations of perturbations must be performed manually. A previously developed interface which provided tools for exploration of a model’s topology and Boolean state space is unfortunately no longer available [<xref ref-type="bibr" rid="CR4">4</xref>]. The published versions of the <italic>rxncon</italic> software provide only limited means for visualizing the model behavior, and no tools to verify it automatically [<xref ref-type="bibr" rid="CR6">6</xref>]. Furthermore, there is no systematic method of comparing simulation output to pre-existing experimental data or of generating predictions and targets for experimental validation once a final model has been developed. Inspired by <italic>CellNOptR</italic> [<xref ref-type="bibr" rid="CR11">11</xref>], we present <italic>kboolnet,</italic> a collection of R and Python scripts which serve as a toolkit for the verification, validation, and visualization (VVV) of <italic>rxncon</italic> models. The <italic>kboolnet</italic> toolkit enables separation of full models into smaller, more easily analyzable modules, iterative and collaborative development, and comparison to a manually curated database of responses to various combinations of experimental stimuli and inhibitors.
</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Recap of <italic>rxncon</italic></title>
      <p id="Par12">The <italic>rxncon</italic> (“reaction-contingency”) formalism [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>] describes a signaling network as a bipartite directed network with nodes of two types: states and reactions. States represent the specific state of a protein at a certain domain or residue level (i.e. what other protein is bound at said domain or a specific covalent modification applied at said residue). Reactions represent uni- or bi-molecular interactions which produce and/or consume states (indicated by directed edges of respective types in the network). States in turn serve as contingencies which either positively or negatively regulate reactions, also indicated by directed edges. By creating a bipartite structure that separates reactions from states, as well as making the states of individual domains/residues on a protein independent of each other, <italic>rxncon</italic> avoids the “combinatorial explosion” often found in rule-based models.</p>
      <p id="Par13">The reactions and states are entered, usually semi-manually, in an MS Excel spreadsheet (the primary input format accepted by the <italic>rxncon</italic> software) in accordance with syntactic rules specified in the original publication [<xref ref-type="bibr" rid="CR5">5</xref>]. Published software [<xref ref-type="bibr" rid="CR7">7</xref>], written in Python, then parses the spreadsheet and generates either a Boolean model in a format compatible with the Boolean network-based BoolNet simulator [<xref ref-type="bibr" rid="CR12">12</xref>] or the agent- and rule-based pseudo-quantitative NFsim simulator [<xref ref-type="bibr" rid="CR10">10</xref>]. Published software [<xref ref-type="bibr" rid="CR5">5</xref>] also offers several ways of visualizing the network and the resulting simulation trajectories. For example, the so-called <italic>regulatory graph</italic> is a static representation of the bipartite network with nodes and edges color-coded by their types (a small prototype is shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>). Following a Boolean simulation, the trajectory (including the attractor) can be visualized as a matrix where nodes are listed vertically and time ticks horizontally; at each tick, the node can be either on or off as illustrated by the color of the matrix entry (an example in Fig. <xref rid="Fig1" ref-type="fig">1</xref>).<fig id="Fig1"><label>Fig. 1</label><caption><p>Overall workflow of <italic>ScoreNet.R</italic>. The <italic>ScoreNet.R</italic> script’s workflow takes two main inputs: a <italic>rxncon</italic> model, here pictured by its regulatory graph (reactions [light-red nodes] produce [blue arrows] states [light-blue nodes]; these states serve as positive [green arrow] or negative [red arrows, not shown] regulators of reactions, and as inputs [black arrows] to Boolean gates [white diamonds]) and a database of experimental data. The model is compiled to a Boolean network and simulated under the same stimulus/inhibitor combinations as applied in the experiments in the database. This produces a set of response predictions which is then compared to the experimental database to give a score for the model</p></caption><graphic xlink:href="12859_2023_5329_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title><italic>Kboolnet</italic> implementation overview</title>
      <p id="Par14"><italic>kboolnet</italic> is a system of independent scripts; each script performs a single standalone task and relies on user-provided arguments. Most of the scripts are developed in R (v4.0.2) [<xref ref-type="bibr" rid="CR13">13</xref>] with RStudio (v1.2.5001) [<xref ref-type="bibr" rid="CR14">14</xref>], to capitalize on R’s versatile network and data analysis tools. However, the extract_modules.py and reaction_mapping.py scripts are developed in Python (v3.8.3) to provide an interface with the original implementation of <italic>rxncon</italic> [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR15">15</xref>].</p>
      <p id="Par15">The R scripts require the packages ggplot2 (v3.3.2) [<xref ref-type="bibr" rid="CR16">16</xref>], dplyr (v1.0.5) [<xref ref-type="bibr" rid="CR17">17</xref>], openxlsx (v4.2.3) [<xref ref-type="bibr" rid="CR18">18</xref>], googledrive (v1.0.1) [<xref ref-type="bibr" rid="CR19">19</xref>], tidyr (v1.1.3) [<xref ref-type="bibr" rid="CR20">20</xref>], numbers (v0.7.5) [<xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR21">21</xref>], xml2 (v1.3.2) [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR22">22</xref>], BoolNet (v2.1.5) [<xref ref-type="bibr" rid="CR12">12</xref>], egg (v0.4.5) [<xref ref-type="bibr" rid="CR23">23</xref>], optparse (v1.6.6) [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>], igraph (v1.4.2) [<xref ref-type="bibr" rid="CR25">25</xref>], rappdirs (v0.3.3) [<xref ref-type="bibr" rid="CR26">26</xref>], and RCy3 (v2.8.0) [<xref ref-type="bibr" rid="CR27">27</xref>]. The Python scripts require the packages rxncon (v2.0b18) [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR15">15</xref>], and openpyxl (v3.0.2). Visualizations were generated using Cytoscape (v3.7.1) [<xref ref-type="bibr" rid="CR28">28</xref>]. The package and its documentation can be found in a GitHub repository located at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link>. Installation instructions are located in the repository wiki. Once the <italic>kboolnet</italic> R package is installed, the setupKboolnet() function must be run from an interactive R terminal. Afterward the scripts (and accompanying example files) will be available in a user-determined directory, and can be executed using RStudio’s built-in “sourcing” functionality or from the system command line. A summary of the available scripts can be found in Table <xref rid="Tab1" ref-type="table">1</xref>. Further details of the implementation for <italic>VerifyModel.R</italic>, <italic>TruthTable.R,</italic> and <italic>ScoreNet.R</italic> can be found below.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Description of <italic>kboolnet</italic> toolkit scripts, their inputs, and their outputs</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Type</th><th align="left">Name</th><th align="left">Description</th><th align="left">Inputs</th><th align="left">Outputs</th></tr></thead><tbody><tr><td align="left">Simulation engine</td><td align="left">BoolNetSim.R</td><td align="left">Used by all the VVV modules below. Simulates a model using the BoolNet package [<xref ref-type="bibr" rid="CR21">21</xref>] given an initial state and set of nodes to inhibit/activate</td><td align="left">Model file, initial state, on-list, off-list</td><td align="left">Resulting simulation trajectory and attractor as a CSV and a PDF</td></tr><tr><td align="left">Verification</td><td align="left">VerifyModel.R</td><td align="left">Simulates a model under a set of activators and inhibitors while repeatedly toggling a given ligand on and off to check consistency of the resulting attractors</td><td align="left">Model file, set of runs with list including initial state, on-list, off-list, and toggled ligand for each run</td><td align="left">RData file holding trajectories and attractors for all rounds of simulation, CSVs and PDFs of consolidated trajectories, and XGMML graphs of the state spaces</td></tr><tr><td align="left" rowspan="3">Validation</td><td align="left">TruthTable.R</td><td align="left">Simulates a model under all possible combinations of given inhibitors and activators and sees their effect on a set of output nodes</td><td align="left">Model file, nodes to activate or inhibit, output nodes, initial state</td><td align="left">Truth table PDF/CSV</td></tr><tr><td align="left">ScoreNet.R</td><td align="left">Simulates a model under the perturbations encoded in a database of experimental data and sees how closely the simulation reflects real-world observations</td><td align="left">MIDAS-format experimental database, model file</td><td align="left">Mean square error for model, PDFs for experimental results, simulation results, and comparison of the two</td></tr><tr><td align="left">SensitivityAnalysis.R</td><td align="left">Measures effect of individually inhibiting every node on the effect a ligand has on a set of output nodes</td><td align="left">Model file, ligand to toggle, initial state, outputs to monitor</td><td align="left">PDF showing semi-quantitative effect of inhibition on ligand to output signal</td></tr><tr><td align="left" rowspan="4">Visualization</td><td align="left">AnimatePath.R</td><td align="left">Animates the regulatory graph of a model using a given trajectory CSV</td><td align="left">Regulatory graph, trajectory CSV</td><td align="left">Animation GIF</td></tr><tr><td align="left">PlotModules.R</td><td align="left">Makes individual regulatory graphs of each of modules stored in a model file</td><td align="left">Model file, list of modules to plot</td><td align="left">Regulatory graph XGMML for each module</td></tr><tr><td align="left">PlotPath.R</td><td align="left">Plots a trajectory CSV</td><td align="left">Trajectory CSV</td><td align="left">Plot as PDF</td></tr><tr><td align="left">PlotPathComparison.R</td><td align="left">Aligns two trajectories/attractors and plots an overlay of the two showing (dis)similarities between the two</td><td align="left">Two trajectory/attractor CSVs</td><td align="left">Comparison plot as PDF</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec5">
      <title>Evaluation of the attractor space of a <italic>rxncon</italic> model in the presence and absence of stimuli and perturbations: <italic>VerifyModel.R</italic></title>
      <p id="Par16">The <italic>VerifyModel.R</italic> script enables visualization and exploration of the attractors in the state space that the <italic>rxncon</italic> model visits in response to the addition and removal of ligands, starting from a specified initial state and with an option of forcing selected nodes (states and reactions) to be permanently on or off (to simulate the effect of inhibitors, gene knockdowns, etc.). The script follows a three-step workflow:</p>
      <p id="Par17"><bold><italic>1. Initial simulation round.</italic></bold> The network is first simulated from the provided initial state, with all ligand nodes off, until reaching an initial “no-ligand” attractor. If no initial state is provided, the default “neutral” state as defined by <italic>rxncon</italic> (all reactions off, all components in their unbound and unmodified states) is used as a starting point. Once the “no-ligand” attractor is reached, its first state is selected, modified such that the ligand is present in its unbound state, and then simulated until reaching an initial “with-ligand” attractor.</p>
      <p id="Par18"><bold><italic>2. Attractor simulation rounds.</italic></bold> Subsequent “no-ligand” and “with-ligand” attractors are determined as follows: each state within the “with-ligand” attractor (or the only state in the case of a single-state attractor) is modified such that all ligand nodes are off (if the ligand was in a complex with another component, the second component’s unbound state is also turned on to ensure that said component remains within the system). The network is then simulated using these initial states until reaching their corresponding attractors. If these attractors are not identical (which may occur if the “with-ligand” attractor was cyclic), the simulation rounds are stopped and several outputs representing the inconsistent attractors and traversed state space are written to file along with a warning to the user. Attractor identity/similarity is measured using the Hamming distance, accounting for potential phase shifts between the cyclic attractors as described in [<xref ref-type="bibr" rid="CR29">29</xref>]. If all “no-ligand” attractors reached from the initial states of the “with-ligand” attractor are identical, this process is repeated to determine the next “with-ligand” attractor(s). Each state within the new “no-ligand” attractor is modified such that the ligand is present in its unbound state, and the corresponding “with-ligand” attractors and their similarities are determined.</p>
      <p id="Par19"><bold><italic>3. Meta-attractor determination.</italic></bold> After each round of attractor simulation, the newly generated “with-ligand” and “no-ligand” attractors are compared to those generated in previous simulation rounds. If both attractors are identical to previously determined attractors, the simulation rounds end as a meta-attractor has been found: this is because the simulation is deterministic. All trajectories and attractors are written to file in both CSV and RData formats for inspection by the user, and a graph representing the trajectory through state space traversed during simulation is written in XGMML format (see <italic>Results</italic> for examples).</p>
    </sec>
    <sec id="Sec500">
      <title>(Pseudo-)quantitative comparison of a <italic>rxncon</italic> model to experimental data: <italic>ScoreNet.R</italic></title>
      <p id="Par21"><italic>ScoreNet.R</italic> is the heart of the <italic>rxncon</italic> model validation pipeline in <italic>kboolnet</italic>. Its goal is to systematically compare the outputs of the model to experimental data obtained with different sets of stimuli and perturbations. The overall workflow of <italic>ScoreNet.R</italic> is shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, and the key components described below.</p>
      <p id="Par22"><bold><italic>Cloud-enabled MIDAS-formatted experimental database. </italic></bold>To facilitate the storage of experimental data in a single cloud-enabled database, we defined a modified version of the MIDAS (Minimum information for data analysis in systems biology) format originally created for <italic>DataRail</italic> [<xref ref-type="bibr" rid="CR30">30</xref>]. This modified format is machine- and human-readable and allows for the storage of experimental data from heterogeneous sources in a single Excel or Google Sheets file. In our implementation, data is organized into “sub-tables”, each of which describes an experiment, including the treatments applied, data acquisition timepoints, and responses. Mapping of treatments to <italic>rxncon</italic> network nodes is accomplished through a <italic>TreatmentDefs</italic> sheet, which defines the name of a treatment, the effect of the treatment (stimulation, inhibition, or knockout/knockdown), and the <italic>rxncon</italic> nodes affected by the treatment. As the database is intended to include data from various sources, it must be normalized so that data values lie between 0 and 1; such normalization is the responsibility of the user.</p>
      <p id="Par23"><bold><italic>Experimental data pre-processing. </italic></bold><italic>ScoreNet.R</italic> first merges all “sub-tables” in the provided experimental data file into a single table of all experimental perturbations and the resulting data measurements. To enable comparison with <italic>rxncon</italic> Boolean networks that are not time-resolved and can only predict the (pseudo-)steady state of a system, the merged data must then be collapsed to two timepoints: pre- and post-stimulation. It is assumed that all data values acquired at t = 0 are pre-stimulation. The user can select all other data points (i.e. t &gt; 0) as post-stimulation data points or only data points lying within specific time bins via the script configuration file. After this, all pre-stimulation data values and post-stimulation data values for each output and combinations of stimuli/inhibitor are averaged, resulting in two data points for each output/perturbation combination.</p>
      <p id="Par24"><bold><italic>Generating rxncon predictions and quantifying their agreement with experiments. </italic></bold>A table of corresponding simulation predictions for each combination of perturbations is then generated as follows: the system is simulated starting from a user-provided initial state (or if not provided, the <italic>rxncon</italic>-generated “neutral” state), with all knocked out and stimulated nodes for the perturbation forced off, until it reaches the “pre-stimulation” attractor. This attractor is then quantified for all outputs by dividing the number of states the output is “on” in the attractor by the total number of states in the attractor, resulting in a value between 0 (always “off”) and 1 (always “on”). An arbitrary state from the pre-stimulation attractor (if the model behavior is internally consistent as determined by <italic>VerifyModel.R</italic>, state choice within the attractor does not affect the outcome) is used as the initial state for another simulation, with all inhibited nodes forced off and all stimulated nodes forced on. The resulting attractor is again quantified and used as the post-stimulation data point. These data points are used to calculate the mean square error (MSE<sub><italic>p,o</italic></sub>) for each perturbation combination <italic>p</italic> and output <italic>o</italic><disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{MSE}}_{p,o} = \frac{{\sum\limits_{t = 0}^{1} {\left( {{\text{experiment}}_{p,o} - {\text{simulation}}_{p,o} } \right)^{2} } }}{2}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mn>1</mml:mn></mml:munderover><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mtext>experiment</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mtext>simulation</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="12859_2023_5329_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>where <italic>t</italic> = 0 is the pre-stimulation time point and <italic>t</italic> = 1 is the post-stimulation time point. The overall mean square error MSE<sub><italic>tot</italic></sub> is calculated as<disp-formula id="Equb"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{MSE}}_{tot} = \frac{1}{nm}\sum\limits_{p = 1}^{n} {\sum\limits_{o = 1}^{m} {{\text{MSE}}_{p,o} } }$$\end{document}</tex-math><mml:math id="M4" display="block"><mml:mrow><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi mathvariant="italic">tot</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi mathvariant="italic">nm</mml:mi></mml:mrow></mml:mfrac><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>o</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math><graphic xlink:href="12859_2023_5329_Article_Equb.gif" position="anchor"/></alternatives></disp-formula>where <italic>n</italic> and <italic>m</italic> are the number of perturbation combinations and measured outputs, respectively.</p>
    </sec>
    <sec id="Sec9">
      <title>Dynamic visualization of <italic>rxncon</italic> model trajectories in Boolean state space: <italic>AnimatePath.R</italic></title>
      <p id="Par25">Animations of the paths generated using <italic>VerifyModel.R</italic> or <italic>BoolNetSim.R</italic> can be made using <italic>AnimatePath.R</italic>. This script functions by automatically creating stills of a regulatory graph of the network (nodes are colored by their ON/OFF status) using the RCy3 [<xref ref-type="bibr" rid="CR27">27</xref>] API to control Cytoscape [<xref ref-type="bibr" rid="CR28">28</xref>]. These stills are then joined into a single GIF with numbered frames using the ImageMagick library. An example of such an animation may be found in the Additional File <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Results</title>
    <sec id="Sec11">
      <title>A cloud-enabled <italic>rxncon</italic> modeling workflow</title>
      <p id="Par26">The <italic>kboolnet</italic> package is designed to provide a variety of verification, validation, and visualization (VVV) tools that together form a cloud-enabled workflow for the development of <italic>rxncon</italic> models (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). The workflow extends and automates existing <italic>rxncon</italic> functionality and is centered on analysis of the model once converted to a <italic>BoolNet</italic> Boolean network.<fig id="Fig2"><label>Fig. 2</label><caption><p>Overall workflow for the <italic>kboolnet</italic> package. A cloud-stored <italic>rxncon</italic> model can be iteratively developed using the three portions of the <italic>kboolnet</italic> workflow: verification of the model’s behavior (responsiveness to ligands and consistency between attractors representing the same biological state), validation against experimental data, and visualization of model trajectories and topology</p></caption><graphic xlink:href="12859_2023_5329_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">The verification part of the workflow consists of <italic>VerifyModel.R,</italic> a script which can identify and report a variety of model behaviors and responses to stimuli and perturbations. The script performs formal verification of the model by checking the responsiveness of the system to repeated applications of stimuli, outputting the resulting trajectory and a graph visualizing the space of states and attractors reached.</p>
      <p id="Par28">The model validation, which involves the assessment of the model’s agreement with either experimental data or general (experimentally-informed) expectations about the behaviors of its components, is implemented in the form of three scripts: <italic>TruthTable.R</italic>, <italic>SensitivityAnalysis.R</italic>, and <italic>ScoreNet.R</italic>. <italic>TruthTable.R</italic> can be used for quick analysis of the behavior of the model (or portions thereof) by outputting a “truth-table” like graph which shows the response of the system to all possible combinations of a given set of stimuli and inhibitors. <italic>SensitivityAnalysis.R</italic> examines the effect of inhibiting all reactions and knocking out all components individually on a certain set of output nodes under with- and no-ligand conditions. The final script, <italic>ScoreNet.R</italic>, compares behavior of the model to a (modified) <italic>MIDAS</italic>-format experimental database, outputting both visual and numerical metrics that can serve as benchmarks of model quality.</p>
      <p id="Par29">Model visualization is handled by four scripts: <italic>PlotPath.R</italic>, <italic>PlotPathComparison.R</italic>, <italic>PlotModules.R</italic>, and <italic>AnimatePath.R</italic>. <italic>PlotPath.R</italic> outputs a 2D plot of a trajectory where columns represent timepoints and rows represent nodes in the Boolean network, with blue squares indicating “on” states and white squares indicating “off” states. <italic>PlotPathComparison.R</italic> generates a similar visualization after aligning and overlaying two such trajectories, showing their similarities and differences. <italic>PlotModules.R</italic> extracts all user-defined modules from a <italic>rxncon</italic> model file and outputs reaction-contingency graphs for each of them in the XGMML format, allowing for fast visualization of the topology of each module. Finally, <italic>AnimatePath.R</italic> can animate regulatory or state graphs of a <italic>rxncon</italic> network using a trajectory or attractor produced by <italic>VerifyModel.R</italic> or <italic>BoolNetSim.R</italic>. This provides a dynamic representation of the flow of information through the model, potentially providing novel insights about model behavior (an example animation may be found in the Additional File <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p id="Par30">This workflow is cloud enabled, allowing for the storage of the <italic>rxncon</italic> model and modified <italic>MIDAS</italic>-format experimental data as a Google Sheets file. The above verification and validation scripts, as well as <italic>PlotModules.R</italic>, download the latest version of the model (and experimental database, if necessary). This simplifies iterative and collaborative development of the model.</p>
    </sec>
    <sec id="Sec12">
      <title>Modular tagging and validation of <italic>rxncon</italic> rules</title>
      <p id="Par31">The model-building process can often result in the definition of large numbers of reaction rules and contingencies (e.g. a model of <italic>Saccharomyces cerevisiae</italic>’s cell cycle included 790 reaction rules and 598 contingencies [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]). This can lead to challenges when attempting to maintain, visualise, and evaluate a large-scale model, prompting us to implement tagging of <italic>rxncon</italic> reactions and contingencies by user-defined module and a numerical quality score. This allows for the extraction of modules for easier analysis as well as inclusion and exclusion of individual reactions/contingencies on the fly (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, <xref rid="Fig3" ref-type="fig">B</xref>). To implement module tagging, we expanded the format of the original MS Excel (the primary input format for <italic>rxncon</italic> scripts) by adding a new “!Module” column; tagging is implemented using a comma-separated list of module names in this column. Quality tagging exploits the existing “!Quality” column and filters out any reaction or contingency below a given score threshold.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example of module extraction and qualitative assessment. The full model of EGFR signaling in colorectal cancer cells, a bird’s-eye view of which is presented in (<bold>A</bold>), is broken down into several modules: EGFR-Src (green), PI3K-Akt (red), Ras-Raf-Mek-Erk (blue), and S6K (yellow). Nodes shared between two or more modules are left uncolored. Each of these modules can be extracted for independent visualization and evaluation, as shown for the S6K module in (<bold>B</bold>) and (<bold>C</bold>), using the <italic>PlotModules.R</italic> and <italic>TruthTable.R</italic> scripts, respectively</p></caption><graphic xlink:href="12859_2023_5329_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par32">To rapidly and comprehensively characterize the behavior of the extracted modules under various combinations of stimuli and inhibitors, we created the <italic>TruthTable.R</italic> utility. It is inspired by <italic>capso</italic>’s “global truth tables” [<xref ref-type="bibr" rid="CR31">31</xref>], validation figures presented in previous versions of <italic>rxncon</italic> [<xref ref-type="bibr" rid="CR6">6</xref>], and truth tables from propositional logic. Given a list of <italic>n</italic> stimuli and inhibitors, the chosen module is simulated for all 2<sup>n</sup> stimulus/inhibitor combinations beginning from an initial user-provided state (or the <italic>rxncon</italic>-defined “neutral” state). This approach would be impractical for the entire model due to the large number of inputs and output; however, it is very beneficial for the small-size modules. In each simulation, selected stimuli nodes are fixed “on” and all inhibited nodes fixed “off”, the simulation is performed until reaching an attractor, and the output node values are averaged across the attractor states. This results in a score between 0 (always off) and 1 (always on) for each output node; these scores are combined in a matrix-type visualization (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C). The output can be used to quickly identify which combinations of stimuli are necessary to activate certain output nodes and which inhibitors abrogate said outputs. The script attempts to “compress” the visualization vertically; that is, if addition of a certain stimulus or inhibitor results in insensitivity of the model to other perturbations, all combinations with said stimulus or inhibitor are combined into a single row. To summarize, <italic>TruthTable.R</italic> facilitates validation of a module against existing knowledge of responses of selected output nodes to combinatorial perturbations.</p>
    </sec>
    <sec id="Sec600">
      <title>Whole-model formal verification</title>
      <p id="Par33">The <italic>VerifyModel.R</italic> script has been designed to facilitate evaluation of dynamic properties of the model as a whole, especially when it is complex and involves elements such as feedback loops. The properties in question are loosely related to those formulated for Petri Nets (a different type of discrete event dynamic systems [<xref ref-type="bibr" rid="CR32">32</xref>]): reachability and liveliness. Through <italic>VerifyModel.R</italic>, we empirically evaluate attractor reachability for the subgraph of the state graph that is reachable from the given initial state(s) upon the addition and removal of the given set of stimuli or inhibitors.</p>
      <p id="Par34">We conceptualize a “meta-attractor” as a certain cyclic trajectory through the space of all possible attractors of a Boolean network, with transitions between attractors being achieved by either removal or addition of the ligand (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). For many signaling systems (cascades) the addition of the ligand produces changes that are reversible, i.e. the system returns back to its original steady state upon the removal of the ligand. For such systems, the meta-attractor should be simple (Fig. <xref rid="Fig4" ref-type="fig">4</xref>A, <xref rid="Fig4" ref-type="fig">C</xref>): adding the ligand will shift the system into a “with-ligand” attractor, and removing the ligand will shift the system into a “no-ligand” attractor. By contrast, more complex, irreversible behaviors may be encountered e.g. when studying cell division or apoptosis (illustrated by Fig. <xref rid="Fig4" ref-type="fig">4</xref>B, <xref rid="Fig4" ref-type="fig">D</xref>). Finally, some implementations may lead to an unwanted “branching “ behavior where the “with-ligand” attractor is dependent on the specific state within a “no-ligand” attractor at which the ligand is applied, or vice versa. For these scenarios, the “meta-attractor” cannot be defined at all because it is no longer deterministic. In all cases, the ability to detect that a network model becomes “stuck” within a certain attractor or displays a more complex meta-attractor than expected can be helpful in model design and optimization.<fig id="Fig4"><label>Fig. 4</label><caption><p>State and attractor spaces for two hypothetical boolean networks. State transition graphs of two <italic>rxncon</italic> networks (<bold>A</bold>, <bold>B</bold>) and their corresponding attractor spaces (<bold>C</bold>, <bold>D</bold>). In (<bold>A</bold>) and (<bold>B</bold>), simulation of the network from intermediate states (blue nodes) according to Boolean state transitions (black edges) causes the system to fall into a cyclic attractor (purple nodes). Addition of the ligand (green edges) or removal of the ligand (red edges) can cause the network to fall into a new attractor. In (<bold>A</bold>) and (<bold>C</bold>), addition of the ligand causes the system to fall into a single “with-ligand” attractor, and removal of the ligand causes the system to return to a single “no-ligand” attractor. This meta-attractor is visualized in the attractor space <bold>C</bold> as a self-consistent and reversible transition between two attractor nodes. In (<bold>B</bold>) and (<bold>D</bold>), removal of the ligand at different timepoints in the “with-ligand” attractor causes the system to fall into two distinct “no-ligand” attractors; this “branching” behavior is visualized in the attractor space (<bold>D)</bold> as a possible transition from a single attractor node to two different (a.k.a. Inconsistent with each other) attractor nodes both corresponding to the same “no-ligand” biological state of the system</p></caption><graphic xlink:href="12859_2023_5329_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par35">Previously, this kind of formal verification had only been possible in <italic>rxncon</italic> by manually adding and removing the ligand in repeated rounds of simulation and comparing the resulting (pseudo-)steady-states/attractors to ensure that the desired system behavior was achieved [<xref ref-type="bibr" rid="CR15">15</xref>]. Performing verification in this manner is time consuming as it requires repetitive sets of steps (edit initial state, simulate, copy files, edit initial state, etc.). Furthermore, this method of verification only selects a single state within each attractor as the initial state for the next round, leaving open the possibility that undesired “branching” behaviors remain hidden. An improved, automated version of this verification process is available in <italic>VerifyModel.R</italic> (see Fig. <xref rid="Fig5" ref-type="fig">5</xref> for example application, see <italic>Implementation</italic> for more details).<fig id="Fig5"><label>Fig. 5</label><caption><p>Trap detection with VerifyModel.R. <bold>A</bold> A representative <italic>rxncon</italic> model flagged by <italic>VerifyModel.R</italic> as having inconsistent attractors upon repeated addition and removal of the ligand. <bold>B</bold> This is confirmed by plots of the full paths the network traverses upon the addition and removal of the ligand (attractors are striped, substrate states colored purple). <bold>C</bold> Automatically generated comparison plots reveal that the substrate remains phosphorylated in the first “no-ligand”attractor, but not in the second. <bold>D</bold> This “trap” behaviour is corrected by addition of a dephosphorylation reaction to produce a network (<bold>D</bold>) with consistent no-ligand attractors as shown in (<bold>E</bold>) and (<bold>F</bold>)</p></caption><graphic xlink:href="12859_2023_5329_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec14">
      <title>Model validation through a comparison to database of experimental data</title>
      <p id="Par36">Once the model has passed formal verification, it is ready for comparison to experimental data. The <italic>ScoreNet.R</italic> script simulates the network under all combinations of stimuli, inhibitors, and knockouts present in a cloud-stored experimental database. The predicted responses and experimental data are compared and the mean square error (MSE) between the two is calculated (see <italic>Implementation</italic> for details). The calculated MSE ranges from 0 (perfect agreement) to 1 (perfect disagreement) and provides an easily interpretable metric to track progress as a model is iteratively developed. For example, comparing the model presented in Fig. <xref rid="Fig3" ref-type="fig">3</xref>A to experimental data collected in SW48 and HT-29 colorectal adenocarcinoma cells [<xref ref-type="bibr" rid="CR33">33</xref>, <xref ref-type="bibr" rid="CR34">34</xref>] resulted in an MSE of 0.092. After the addition of a putative Akt→Cot→RSK edge [<xref ref-type="bibr" rid="CR35">35</xref>], the MSE dropped to 0.081, a small but measurable improvement (Fig. <xref rid="Fig6" ref-type="fig">6</xref> shows the full output from <italic>ScoreNet.R</italic>).<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison to experimental data with <italic>ScoreNet.R</italic>. Columns on the left represent output nodes, columns on the right represent combinations of stimuli (green) and inhibitors (red). Cells are colored according to the MSE between experimental data points (black, solid line) and predicted response (grey, dotted line). Cells with no experimental data available are colored grey</p></caption><graphic xlink:href="12859_2023_5329_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
    <sec id="Sec15">
      <title>A note on performance and scalability</title>
      <p id="Par37">Because <italic>kboolnet</italic> is designed to facilitate the exploration of the overall behavior and state space of a <italic>rxncon</italic> model, its speed and performance are strongly dependent on the size and connectivity of the model. By design, <italic>kboolnet</italic> fully utilizes the performance improvement mechanisms of the <italic>rxncon</italic> formalism (the bipartite graph representation of the network) and its published implementation [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] that compiles models into Boolean networks and takes advantage of the C-accelerated simulation engine of the <italic>BoolNet</italic> R package [<xref ref-type="bibr" rid="CR12">12</xref>]. Despite these optimizations, we recognize the possibility of decreased scalability when explicitly exploring the state space of the resulting Boolean network, as the number of possible states grows exponentially with the number of nodes. For this reason, <italic>kboolnet</italic> focuses on analyzing only the subset of the model’s state space that is reachable from biologically-relevant initial states. Furthermore, the module tagging, module extraction, and modular validation functionality of <italic>kboolnet</italic> are specifically designed to facilitate the development of large models through a divide-and-conquer approach.</p>
    </sec>
  </sec>
  <sec id="Sec300">
    <title>Conclusion</title>
    <p id="Par38">The <italic>kboolnet</italic> toolkit provides a systematic workflow for the development of <italic>rxncon</italic> models supplemented by a suite of verification, validation, and visualization (VVV) tools. By emphasizing modularity, <italic>kboolnet</italic> simplifies the process of building large and comprehensive models of cell signaling networks spanning multiple biological subunits which can be individually constructed, validated, and visualized. The <italic>kboolnet</italic> suite allows for both qualitative assessments of model integrity and (pseudo-)quantitative comparisons to real biological data. These features are centralized around a cloud-hosted version of both the <italic>rxncon</italic> model and an experimental database, collectively allowing for fast, iterative, and collaborative development of any kind of <italic>rxncon</italic> model. Future development of the <italic>kboolnet</italic> toolkit will expand its capabilities to include pseudo-quantitative modes of simulation supported by the <italic>rxncon</italic> formalism, namely the network-free stochastic simulator <italic>NFsim </italic>[<xref ref-type="bibr" rid="CR10">10</xref>], as well as expand existing tools for the generation of novel hypotheses and identification of potential drug targets.
</p>
  </sec>
  <sec id="Sec17" sec-type="data-availability">
    <title>Availability of Data and Materials</title>
    <p id="Par39">The code described and example models analysed in the paper are available on the project GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link>. </p>
    <p>Project name: kboolnet.</p>
    <p id="Par40">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link></p>
    <p id="Par41">Operating system(s): Windows, Mac, Linux.</p>
    <p id="Par42">Programming language: R, Python.</p>
    <p id="Par43">Other requirements: See implementation for package dependencies.</p>
    <p id="Par44">License: This software is Copyright © 2023 The Regents of the University of California. All Rights Reserved. Permission to copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes by non-profit organizations, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies. Permission for for-profit organizations to make commercial use of this software may be obtained by contacting: Office of Innovation and Commercialization, 9500 Gilman Drive, Mail Code 0910, University of California La Jolla, CA 92093-0910, (858) 534-5815, innovation@ucsd.edu. This software program and documentation are copyrighted by The Regents of the University of California. The software program and documentation are supplied “as is”, without any accompanying services from The Regents. The Regents does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason. IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN “AS IS” BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. Restrictions to use by non-academics: Permission for commercial use by non-profit organizations must be acquired from the UC San Diego Office of Innovation and Commercialization (see license for more information).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec18">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2023_5329_MOESM1_ESM.gif">
            <caption>
              <p><bold>Additional file 1</bold>. An example of an <italic>rxncon</italic> model path animation, generated by the <italic>AnimatePath.R</italic> script.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>VVV</term>
        <def>
          <p id="Par4">Verification, validation, and visualization</p>
        </def>
      </def-item>
      <def-item>
        <term>MIDAS</term>
        <def>
          <p id="Par5">Minimum information for data analysis in systems biology</p>
        </def>
      </def-item>
      <def-item>
        <term>MSE</term>
        <def>
          <p id="Par6">Mean square error</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Dr. Weijun Xu for providing initial motivation for the toolkit, and Alexis Lona and other members of the Kufareva lab for useful feedback and for testing the software. We acknowledge Prof. Tracy Handel (UC San Diego) and members of her lab for valuable discussions. We also thank Prof. Nils Blüthgen and Bertram Klinger (Charité Universitätsmedizin &amp; Humboldt University, Berlin) for providing access to data on EGFR- and RAS-mediated signaling in colorectal cancer.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>IK devised the project and supervised its implementation. WCC and IK jointly designed the software specifications with input and help from MK. WCC wrote the software. WCC, MK, and IK tested the software. WCC and IK wrote the manuscript with input from EK and MK. All authors approved the manuscript in its present form.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by NIH grants R01 GM136202, R21 AI149369, and R21 AI156662 to IK. The funders had no role in the design of the study, in collection, analysis, or interpretation of data, or in preparation of the manuscript.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par45">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par46">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par47">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Samaga</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Klamt</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Modeling approaches for qualitative and semi-quantitative analysis of cellular signaling networks</article-title>
        <source>Cell Commun Signal</source>
        <year>2013</year>
        <volume>11</volume>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/1478-811X-11-43</pub-id>
        <pub-id pub-id-type="pmid">23289948</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mi</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The systems biology graphical notation</article-title>
        <source>Nat Biotechnol</source>
        <year>2009</year>
        <volume>27</volume>
        <fpage>735</fpage>
        <lpage>741</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1558</pub-id>
        <?supplied-pmid 19668183?>
        <pub-id pub-id-type="pmid">19668183</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Narat</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Eungdamrong</surname>
            <given-names>RI</given-names>
          </name>
        </person-group>
        <article-title>Modeling cell signaling networks</article-title>
        <source>Biol Cell</source>
        <year>2004</year>
        <volume>96</volume>
        <fpage>355</fpage>
        <pub-id pub-id-type="doi">10.1111/j.1768-322X.2004.tb01426.x</pub-id>
        <pub-id pub-id-type="pmid">15207904</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Flöttmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Krause</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Reaction-contingency based bipartite Boolean modelling</article-title>
        <source>BMC Syst Biol</source>
        <year>2013</year>
        <volume>7</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-7-58</pub-id>
        <pub-id pub-id-type="pmid">23280066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tiger</surname>
            <given-names>C-F</given-names>
          </name>
          <name>
            <surname>Krause</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cedersund</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Palmér</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hohmann</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kitano</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A framework for mapping, visualisation and automatic model creation of signal-transduction networks</article-title>
        <source>Mol Syst Biol</source>
        <year>2012</year>
        <volume>8</volume>
        <fpage>578</fpage>
        <pub-id pub-id-type="doi">10.1038/msb.2012.12</pub-id>
        <?supplied-pmid 22531118?>
        <pub-id pub-id-type="pmid">22531118</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Romers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thieme</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Münzner</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A scalable method for parameter-free simulation and validation of mechanistic cellular signal transduction network models</article-title>
        <source>NPJ Syst Biol Appl</source>
        <year>2020</year>
        <volume>6</volume>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1038/s41540-019-0120-5</pub-id>
        <pub-id pub-id-type="pmid">32001719</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Romers JC, Krantz M. rxncon 2.0: a language for executable molecular systems biology. bioRxiv. 2017;107136</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hlavacek</surname>
            <given-names>WS</given-names>
          </name>
          <name>
            <surname>Faeder</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Blinov</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Perelson</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The complexity of complexes in signal transduction</article-title>
        <source>Biotechnol Bioeng</source>
        <year>2003</year>
        <pub-id pub-id-type="doi">10.1002/bit.10842</pub-id>
        <?supplied-pmid 14708119?>
        <pub-id pub-id-type="pmid">14708119</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Münzner</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A comprehensive, mechanistically detailed, and executable model of the cell division cycle in <italic>Saccharomyces cerevisiae</italic></article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-08903-w</pub-id>
        <pub-id pub-id-type="pmid">30602773</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sneddon</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Faeder</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Emonet</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Efficient modeling, simulation and coarse-graining of biological complexity with NFsim</article-title>
        <source>Nat Methods</source>
        <year>2010</year>
        <volume>8</volume>
        <fpage>177</fpage>
        <lpage>183</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1546</pub-id>
        <?supplied-pmid 21186362?>
        <pub-id pub-id-type="pmid">21186362</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Terfve</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cokelaer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Henriques</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>MacNamara</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goncalves</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Morris</surname>
            <given-names>MK</given-names>
          </name>
          <name>
            <surname>van Iersel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lauffenburger</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>CellNOptR: a flexible toolkit to train protein signaling networks to data using multiple logic formalisms</article-title>
        <source>BMC Syst Biol</source>
        <year>2012</year>
        <volume>6</volume>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-6-133</pub-id>
        <pub-id pub-id-type="pmid">22222070</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Müssel</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hopfensitz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kestler</surname>
            <given-names>HA</given-names>
          </name>
        </person-group>
        <article-title>BoolNet–an R package for generation, reconstruction and analysis of Boolean networks</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq124</pub-id>
        <?supplied-pmid 20378558?>
        <pub-id pub-id-type="pmid">20378558</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">R Core Team. The R project for statistical computing. 2020.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">RStudio Team. RStudio. 2020.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Romers J, Thieme S, Münzner U, Krantz M. Using rxncon to develop rule-based models. In: Hlavacek WS, editor. Modeling biomolecular site dynamics. New York: Humana Press; 2019. p. 71–118.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Wickham</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>ggplot2: elegant graphics for data analysis</source>
        <year>2016</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Wickham H, François R, Henry L, Müller K. dplyr: a grammar of data manipulation. 2021.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Schauberger P, Walker A. openxlsx: read, write and edit xlsx files. 2020.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">D’Agostino McGowan L, Bryan J. Googledrive: an interface to google drive. 2020.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Wickham H. Tidyr: tidy messy data. 2021.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Borchers HW. Numbers: number-theoretic functions. 2019.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Wickham H, Hester J, Ooms J. xml2: parse XML. 2020.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Auguie B. Egg: extensions for “ggplot2”: custom geom, custom themes, plot alignment, labelled panels, symmetric scales, and fixed panel size. 2019.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Davis TL. optparse: command line option parser. 2020.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Csardi G, Nepusz T. The igraph software package for complex network research. InterJ Complex Syst. 2006;1695:1–9.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Application directories: determine where to save data, caches, and logs [R package rappdirs version 0.3.3]. 2021.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gustavsen</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Pai</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Isserlin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Demchak</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Pico</surname>
            <given-names>AR</given-names>
          </name>
        </person-group>
        <article-title>RCy3: network biology using Cytoscape from within R</article-title>
        <source>F1000Research</source>
        <year>2019</year>
        <volume>8</volume>
        <fpage>1774</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.20887.2</pub-id>
        <?supplied-pmid 31819800?>
        <pub-id pub-id-type="pmid">31819800</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shannon</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Markiel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ozier</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Baliga</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Ramage</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Amin</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Schwikowski</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ideker</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id>
        <?supplied-pmid 14597658?>
        <pub-id pub-id-type="pmid">14597658</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trinh</surname>
            <given-names>H-C</given-names>
          </name>
          <name>
            <surname>Kwon</surname>
            <given-names>Y-K</given-names>
          </name>
        </person-group>
        <article-title>RMut: R package for a Boolean sensitivity analysis against various types of mutations</article-title>
        <source>PLoS ONE</source>
        <year>2019</year>
        <volume>14</volume>
        <fpage>e0213736</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0213736</pub-id>
        <?supplied-pmid 30889216?>
        <pub-id pub-id-type="pmid">30889216</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Goldsipe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Muhlich</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Alexopoulos</surname>
            <given-names>LG</given-names>
          </name>
          <name>
            <surname>Millard</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lauffenburger</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Sorger</surname>
            <given-names>PK</given-names>
          </name>
        </person-group>
        <article-title>Flexible informatics for linking experimental data to mathematical models via <italic>DataRail</italic></article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>840</fpage>
        <lpage>847</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn018</pub-id>
        <?supplied-pmid 18218655?>
        <pub-id pub-id-type="pmid">18218655</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guziolowski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Videla</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Eduati</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Thiele</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cokelaer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Siegel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Exhaustively characterizing feasible logic models of a signaling network using answer set programming</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>2320</fpage>
        <lpage>2326</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt393</pub-id>
        <?supplied-pmid 23853063?>
        <pub-id pub-id-type="pmid">23853063</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Reisig</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <source>Petri nets: an introduction</source>
        <year>2012</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer Science &amp; Business Media</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stelniec-Klotz</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Legewie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tchernitsa</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Witzel</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Klinger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sers</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Herzel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Blüthgen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Schäfer</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Reverse engineering a hierarchical regulatory network downstream of oncogenic KRAS</article-title>
        <source>Mol Syst Biol</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1038/msb.2012.32</pub-id>
        <?supplied-pmid 22864383?>
        <pub-id pub-id-type="pmid">22864383</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hood</surname>
            <given-names>FE</given-names>
          </name>
          <name>
            <surname>Klinger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Newlaczyl</surname>
            <given-names>AU</given-names>
          </name>
          <name>
            <surname>Sieber</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Dorel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Oliver</surname>
            <given-names>SP</given-names>
          </name>
          <name>
            <surname>Coulson</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Blüthgen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Prior</surname>
            <given-names>IA</given-names>
          </name>
        </person-group>
        <article-title>Isoform-specific Ras signaling is growth factor dependent</article-title>
        <source>Mol Biol Cell</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1091/mbc.E18-10-0676</pub-id>
        <?supplied-pmid 30785867?>
        <pub-id pub-id-type="pmid">30785867</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kane</surname>
            <given-names>LP</given-names>
          </name>
          <name>
            <surname>Mollenauer</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Turck</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Weiss</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Akt-dependent phosphorylation specifically regulates Cot induction of NF-kappa B-dependent transcription</article-title>
        <source>Mol Cell Biol</source>
        <year>2002</year>
        <volume>22</volume>
        <fpage>5962</fpage>
        <lpage>5974</lpage>
        <pub-id pub-id-type="doi">10.1128/MCB.22.16.5962-5974.2002</pub-id>
        <?supplied-pmid 12138205?>
        <pub-id pub-id-type="pmid">12138205</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10258968</article-id>
    <article-id pub-id-type="publisher-id">5329</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-023-05329-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>kboolnet</italic>: a toolkit for the verification, validation, and visualization of reaction-contingency (<italic>rxncon</italic>) models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Carretero Chavez</surname>
          <given-names>Willow</given-names>
        </name>
        <address>
          <email>carreter@mit.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krantz</surname>
          <given-names>Marcus</given-names>
        </name>
        <address>
          <email>marcus.krantz@oru.se</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Klipp</surname>
          <given-names>Edda</given-names>
        </name>
        <address>
          <email>edda.klipp@rz.hu-berlin.de</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-9083-7039</contrib-id>
        <name>
          <surname>Kufareva</surname>
          <given-names>Irina</given-names>
        </name>
        <address>
          <email>ikufareva@ucsd.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.266100.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2107 4242</institution-id><institution>Skaggs School of Pharmacy and Pharmaceutical Sciences, </institution><institution>University of California San Diego, </institution></institution-wrap>9500 Gilman Dr, La Jolla, CA 92093 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Present Address: Massachusetts Institute of Technology, </institution></institution-wrap>77 Massachusetts Ave, Cambridge, MA 02139 USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.7468.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2248 7639</institution-id><institution>Theoretical Biophysics, </institution><institution>Humboldt-Universität zu Berlin, </institution></institution-wrap>Invalidenstr. 42, 10115 Berlin, Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.15895.30</institution-id><institution-id institution-id-type="ISNI">0000 0001 0738 8966</institution-id><institution>Present Address: School of Medical Sciences and Inflammatory Response and Infection Susceptibility Centre (iRiSC), Faculty of Medicine and Health, </institution><institution>Örebro University, </institution></institution-wrap>Örebro, Sweden </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>246</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Computational models of cell signaling networks are extremely useful tools for the exploration of underlying system behavior and prediction of response to various perturbations. By representing signaling cascades as executable Boolean networks, the previously developed <italic>rxncon</italic> (“reaction-contingency”) formalism and associated Python package enable accurate and scalable modeling of signal transduction even in large (thousands of components) biological systems. The models are split into reactions, which generate states, and contingencies, that impinge on reactions; this avoids the so-called “combinatorial explosion” of system size. Boolean description of the biological system compensates for the poor availability of kinetic parameters which are necessary for quantitative models. Unfortunately, few tools are available to support <italic>rxncon</italic> model development, especially for large, intricate systems.
</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We present the <italic>kboolnet</italic> toolkit (<ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet">https://github.com/Kufalab-UCSD/kboolnet</ext-link>, complete documentation at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/wiki">https://github.com/Kufalab-UCSD/kboolnet/wiki</ext-link>), an R package and a set of scripts that seamlessly integrate with the python-based <italic>rxncon</italic> software and collectively provide a complete workflow for the verification, validation, and visualization of <italic>rxncon</italic> models. The verification script <italic>VerifyModel.R</italic> checks for responsiveness to repeated stimulations as well as consistency of steady state behavior. The validation scripts <italic>TruthTable.R</italic>, <italic>SensitivityAnalysis.R</italic>, and <italic>ScoreNet.R</italic> provide various readouts for the comparison of model predictions to experimental data. In particular, <italic>ScoreNet.R</italic> compares model predictions to a cloud-stored <italic>MIDAS</italic>-format experimental database to provide a numerical score for tracking model accuracy. Finally, the visualization scripts allow for graphical representations of model topology and behavior. The entire <italic>kboolnet</italic> toolkit is cloud-enabled, allowing for easy collaborative development; most scripts also allow for the extraction and analysis of individual user-defined “modules”.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">The <italic>kboolnet</italic> toolkit provides a modular, cloud-enabled workflow for the development of <italic>rxncon</italic> models, as well as their verification, validation, and visualization. This will enable the creation of larger, more comprehensive, and more rigorous models of cell signaling using the <italic>rxncon</italic> formalism in the future.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-023-05329-6.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Computational modeling</kwd>
      <kwd>Cell signaling</kwd>
      <kwd>Network biology</kwd>
      <kwd>
        <italic>Rxncon</italic>
      </kwd>
      <kwd>Boolean networks</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000060</institution-id>
            <institution>National Institute of Allergy and Infectious Diseases</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R21 AI149369</award-id>
        <award-id>R21 AI156662</award-id>
        <principal-award-recipient>
          <name>
            <surname>Kufareva</surname>
            <given-names>Irina</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01 GM136202</award-id>
        <principal-award-recipient>
          <name>
            <surname>Kufareva</surname>
            <given-names>Irina</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par7">Modeling of cell signaling networks is a crucial tool in the development of the understanding of how said networks operate both normally and pathogenically, providing information which can be used to identify possible therapeutic targets. To this end, a variety of formalisms for describing and simulating these signaling networks have been developed [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>]. Among these formalisms is <italic>rxncon</italic> (“reaction-contingency”) [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], which seeks to overcome two major challenges in cell signaling modeling: the poor availability of kinetic parameters for reactions, and the “combinatorial explosion”, the phenomenon in which the enumeration of all potential states of complexes containing multiple proteins with several possible post-translational modifications results in unwieldy and computationally expensive models [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR8">8</xref>].</p>
    <p id="Par8">The <italic>rxncon</italic> formalism separates biological signaling networks into two parts: elemental states, which represent information about the status of the system components and reactions, which produce and consume states (see [<xref ref-type="bibr" rid="CR9">9</xref>] for a detailed explanation of <italic>rxncon’s</italic> model structure and syntax). The bipartite nature of the resulting network solves the problem of the “combinatorial explosion” by eliminating the need for enumeration of all combinations of microstates. The first problem, sparse knowledge of kinetic parameters, is addressed by allowing compilation of <italic>rxncon</italic> models into purely qualitative Boolean networks. Alternatively, <italic>rxncon</italic> models can be compiled into agent- and rule-based models, allowing for pseudo-quantitative simulation of the system [<xref ref-type="bibr" rid="CR10">10</xref>]; however, compilation into Boolean networks allows for fast and parameter-free evaluation of model dynamics.</p>
    <p id="Par9">In Boolean networks, a system is represented as a set of nodes which can be ON or OFF; the Boolean vector of values of all nodes represents a <italic>state</italic> of the network. The system’s state is updated in discrete synchronous steps where the new value of each node is calculated as a Boolean function of existing values of other nodes. As a result of the finite nature the state space, any simulation of a Boolean network will eventually fall into a finite-size (one or more) loop of Boolean states that the network will indefinitely visit in order; such loop is called an <italic>attractor</italic> and represents a steady state of a Boolean network. Importantly, most Boolean networks have more than one attractor that the system can reach, in a deterministic manner, from different initial states. Due to the enormous size of the state space (2<sup><italic>n</italic></sup> where <italic>n</italic> is the number of states and reactions in a system), the assessment of all possible system trajectories through this space is poorly scalable; however, it can provide great insight into model behavior.</p>
    <p id="Par10">The use of parameter-free Boolean logic and a bipartite network structure makes <italic>rxncon</italic> models efficiently scalable and allows for iterative simulations of extremely large and complex systems (e.g. the previous published <italic>rxncon</italic> model of the cell division cycle of <italic>Saccharomyces cerevisiae</italic> involved 357 unique components, 790 reactions, and 598 contingencies [<xref ref-type="bibr" rid="CR9">9</xref>]).</p>
    <p id="Par11">Maintaining <italic>rxncon</italic> models of this size presents its own host of challenges. Using currently available software, consistency checks of the model behavior under various combinations of perturbations must be performed manually. A previously developed interface which provided tools for exploration of a model’s topology and Boolean state space is unfortunately no longer available [<xref ref-type="bibr" rid="CR4">4</xref>]. The published versions of the <italic>rxncon</italic> software provide only limited means for visualizing the model behavior, and no tools to verify it automatically [<xref ref-type="bibr" rid="CR6">6</xref>]. Furthermore, there is no systematic method of comparing simulation output to pre-existing experimental data or of generating predictions and targets for experimental validation once a final model has been developed. Inspired by <italic>CellNOptR</italic> [<xref ref-type="bibr" rid="CR11">11</xref>], we present <italic>kboolnet,</italic> a collection of R and Python scripts which serve as a toolkit for the verification, validation, and visualization (VVV) of <italic>rxncon</italic> models. The <italic>kboolnet</italic> toolkit enables separation of full models into smaller, more easily analyzable modules, iterative and collaborative development, and comparison to a manually curated database of responses to various combinations of experimental stimuli and inhibitors.
</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Recap of <italic>rxncon</italic></title>
      <p id="Par12">The <italic>rxncon</italic> (“reaction-contingency”) formalism [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>] describes a signaling network as a bipartite directed network with nodes of two types: states and reactions. States represent the specific state of a protein at a certain domain or residue level (i.e. what other protein is bound at said domain or a specific covalent modification applied at said residue). Reactions represent uni- or bi-molecular interactions which produce and/or consume states (indicated by directed edges of respective types in the network). States in turn serve as contingencies which either positively or negatively regulate reactions, also indicated by directed edges. By creating a bipartite structure that separates reactions from states, as well as making the states of individual domains/residues on a protein independent of each other, <italic>rxncon</italic> avoids the “combinatorial explosion” often found in rule-based models.</p>
      <p id="Par13">The reactions and states are entered, usually semi-manually, in an MS Excel spreadsheet (the primary input format accepted by the <italic>rxncon</italic> software) in accordance with syntactic rules specified in the original publication [<xref ref-type="bibr" rid="CR5">5</xref>]. Published software [<xref ref-type="bibr" rid="CR7">7</xref>], written in Python, then parses the spreadsheet and generates either a Boolean model in a format compatible with the Boolean network-based BoolNet simulator [<xref ref-type="bibr" rid="CR12">12</xref>] or the agent- and rule-based pseudo-quantitative NFsim simulator [<xref ref-type="bibr" rid="CR10">10</xref>]. Published software [<xref ref-type="bibr" rid="CR5">5</xref>] also offers several ways of visualizing the network and the resulting simulation trajectories. For example, the so-called <italic>regulatory graph</italic> is a static representation of the bipartite network with nodes and edges color-coded by their types (a small prototype is shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>). Following a Boolean simulation, the trajectory (including the attractor) can be visualized as a matrix where nodes are listed vertically and time ticks horizontally; at each tick, the node can be either on or off as illustrated by the color of the matrix entry (an example in Fig. <xref rid="Fig1" ref-type="fig">1</xref>).<fig id="Fig1"><label>Fig. 1</label><caption><p>Overall workflow of <italic>ScoreNet.R</italic>. The <italic>ScoreNet.R</italic> script’s workflow takes two main inputs: a <italic>rxncon</italic> model, here pictured by its regulatory graph (reactions [light-red nodes] produce [blue arrows] states [light-blue nodes]; these states serve as positive [green arrow] or negative [red arrows, not shown] regulators of reactions, and as inputs [black arrows] to Boolean gates [white diamonds]) and a database of experimental data. The model is compiled to a Boolean network and simulated under the same stimulus/inhibitor combinations as applied in the experiments in the database. This produces a set of response predictions which is then compared to the experimental database to give a score for the model</p></caption><graphic xlink:href="12859_2023_5329_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title><italic>Kboolnet</italic> implementation overview</title>
      <p id="Par14"><italic>kboolnet</italic> is a system of independent scripts; each script performs a single standalone task and relies on user-provided arguments. Most of the scripts are developed in R (v4.0.2) [<xref ref-type="bibr" rid="CR13">13</xref>] with RStudio (v1.2.5001) [<xref ref-type="bibr" rid="CR14">14</xref>], to capitalize on R’s versatile network and data analysis tools. However, the extract_modules.py and reaction_mapping.py scripts are developed in Python (v3.8.3) to provide an interface with the original implementation of <italic>rxncon</italic> [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR15">15</xref>].</p>
      <p id="Par15">The R scripts require the packages ggplot2 (v3.3.2) [<xref ref-type="bibr" rid="CR16">16</xref>], dplyr (v1.0.5) [<xref ref-type="bibr" rid="CR17">17</xref>], openxlsx (v4.2.3) [<xref ref-type="bibr" rid="CR18">18</xref>], googledrive (v1.0.1) [<xref ref-type="bibr" rid="CR19">19</xref>], tidyr (v1.1.3) [<xref ref-type="bibr" rid="CR20">20</xref>], numbers (v0.7.5) [<xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR21">21</xref>], xml2 (v1.3.2) [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR22">22</xref>], BoolNet (v2.1.5) [<xref ref-type="bibr" rid="CR12">12</xref>], egg (v0.4.5) [<xref ref-type="bibr" rid="CR23">23</xref>], optparse (v1.6.6) [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>], igraph (v1.4.2) [<xref ref-type="bibr" rid="CR25">25</xref>], rappdirs (v0.3.3) [<xref ref-type="bibr" rid="CR26">26</xref>], and RCy3 (v2.8.0) [<xref ref-type="bibr" rid="CR27">27</xref>]. The Python scripts require the packages rxncon (v2.0b18) [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR15">15</xref>], and openpyxl (v3.0.2). Visualizations were generated using Cytoscape (v3.7.1) [<xref ref-type="bibr" rid="CR28">28</xref>]. The package and its documentation can be found in a GitHub repository located at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link>. Installation instructions are located in the repository wiki. Once the <italic>kboolnet</italic> R package is installed, the setupKboolnet() function must be run from an interactive R terminal. Afterward the scripts (and accompanying example files) will be available in a user-determined directory, and can be executed using RStudio’s built-in “sourcing” functionality or from the system command line. A summary of the available scripts can be found in Table <xref rid="Tab1" ref-type="table">1</xref>. Further details of the implementation for <italic>VerifyModel.R</italic>, <italic>TruthTable.R,</italic> and <italic>ScoreNet.R</italic> can be found below.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Description of <italic>kboolnet</italic> toolkit scripts, their inputs, and their outputs</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Type</th><th align="left">Name</th><th align="left">Description</th><th align="left">Inputs</th><th align="left">Outputs</th></tr></thead><tbody><tr><td align="left">Simulation engine</td><td align="left">BoolNetSim.R</td><td align="left">Used by all the VVV modules below. Simulates a model using the BoolNet package [<xref ref-type="bibr" rid="CR21">21</xref>] given an initial state and set of nodes to inhibit/activate</td><td align="left">Model file, initial state, on-list, off-list</td><td align="left">Resulting simulation trajectory and attractor as a CSV and a PDF</td></tr><tr><td align="left">Verification</td><td align="left">VerifyModel.R</td><td align="left">Simulates a model under a set of activators and inhibitors while repeatedly toggling a given ligand on and off to check consistency of the resulting attractors</td><td align="left">Model file, set of runs with list including initial state, on-list, off-list, and toggled ligand for each run</td><td align="left">RData file holding trajectories and attractors for all rounds of simulation, CSVs and PDFs of consolidated trajectories, and XGMML graphs of the state spaces</td></tr><tr><td align="left" rowspan="3">Validation</td><td align="left">TruthTable.R</td><td align="left">Simulates a model under all possible combinations of given inhibitors and activators and sees their effect on a set of output nodes</td><td align="left">Model file, nodes to activate or inhibit, output nodes, initial state</td><td align="left">Truth table PDF/CSV</td></tr><tr><td align="left">ScoreNet.R</td><td align="left">Simulates a model under the perturbations encoded in a database of experimental data and sees how closely the simulation reflects real-world observations</td><td align="left">MIDAS-format experimental database, model file</td><td align="left">Mean square error for model, PDFs for experimental results, simulation results, and comparison of the two</td></tr><tr><td align="left">SensitivityAnalysis.R</td><td align="left">Measures effect of individually inhibiting every node on the effect a ligand has on a set of output nodes</td><td align="left">Model file, ligand to toggle, initial state, outputs to monitor</td><td align="left">PDF showing semi-quantitative effect of inhibition on ligand to output signal</td></tr><tr><td align="left" rowspan="4">Visualization</td><td align="left">AnimatePath.R</td><td align="left">Animates the regulatory graph of a model using a given trajectory CSV</td><td align="left">Regulatory graph, trajectory CSV</td><td align="left">Animation GIF</td></tr><tr><td align="left">PlotModules.R</td><td align="left">Makes individual regulatory graphs of each of modules stored in a model file</td><td align="left">Model file, list of modules to plot</td><td align="left">Regulatory graph XGMML for each module</td></tr><tr><td align="left">PlotPath.R</td><td align="left">Plots a trajectory CSV</td><td align="left">Trajectory CSV</td><td align="left">Plot as PDF</td></tr><tr><td align="left">PlotPathComparison.R</td><td align="left">Aligns two trajectories/attractors and plots an overlay of the two showing (dis)similarities between the two</td><td align="left">Two trajectory/attractor CSVs</td><td align="left">Comparison plot as PDF</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec5">
      <title>Evaluation of the attractor space of a <italic>rxncon</italic> model in the presence and absence of stimuli and perturbations: <italic>VerifyModel.R</italic></title>
      <p id="Par16">The <italic>VerifyModel.R</italic> script enables visualization and exploration of the attractors in the state space that the <italic>rxncon</italic> model visits in response to the addition and removal of ligands, starting from a specified initial state and with an option of forcing selected nodes (states and reactions) to be permanently on or off (to simulate the effect of inhibitors, gene knockdowns, etc.). The script follows a three-step workflow:</p>
      <p id="Par17"><bold><italic>1. Initial simulation round.</italic></bold> The network is first simulated from the provided initial state, with all ligand nodes off, until reaching an initial “no-ligand” attractor. If no initial state is provided, the default “neutral” state as defined by <italic>rxncon</italic> (all reactions off, all components in their unbound and unmodified states) is used as a starting point. Once the “no-ligand” attractor is reached, its first state is selected, modified such that the ligand is present in its unbound state, and then simulated until reaching an initial “with-ligand” attractor.</p>
      <p id="Par18"><bold><italic>2. Attractor simulation rounds.</italic></bold> Subsequent “no-ligand” and “with-ligand” attractors are determined as follows: each state within the “with-ligand” attractor (or the only state in the case of a single-state attractor) is modified such that all ligand nodes are off (if the ligand was in a complex with another component, the second component’s unbound state is also turned on to ensure that said component remains within the system). The network is then simulated using these initial states until reaching their corresponding attractors. If these attractors are not identical (which may occur if the “with-ligand” attractor was cyclic), the simulation rounds are stopped and several outputs representing the inconsistent attractors and traversed state space are written to file along with a warning to the user. Attractor identity/similarity is measured using the Hamming distance, accounting for potential phase shifts between the cyclic attractors as described in [<xref ref-type="bibr" rid="CR29">29</xref>]. If all “no-ligand” attractors reached from the initial states of the “with-ligand” attractor are identical, this process is repeated to determine the next “with-ligand” attractor(s). Each state within the new “no-ligand” attractor is modified such that the ligand is present in its unbound state, and the corresponding “with-ligand” attractors and their similarities are determined.</p>
      <p id="Par19"><bold><italic>3. Meta-attractor determination.</italic></bold> After each round of attractor simulation, the newly generated “with-ligand” and “no-ligand” attractors are compared to those generated in previous simulation rounds. If both attractors are identical to previously determined attractors, the simulation rounds end as a meta-attractor has been found: this is because the simulation is deterministic. All trajectories and attractors are written to file in both CSV and RData formats for inspection by the user, and a graph representing the trajectory through state space traversed during simulation is written in XGMML format (see <italic>Results</italic> for examples).</p>
    </sec>
    <sec id="Sec500">
      <title>(Pseudo-)quantitative comparison of a <italic>rxncon</italic> model to experimental data: <italic>ScoreNet.R</italic></title>
      <p id="Par21"><italic>ScoreNet.R</italic> is the heart of the <italic>rxncon</italic> model validation pipeline in <italic>kboolnet</italic>. Its goal is to systematically compare the outputs of the model to experimental data obtained with different sets of stimuli and perturbations. The overall workflow of <italic>ScoreNet.R</italic> is shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, and the key components described below.</p>
      <p id="Par22"><bold><italic>Cloud-enabled MIDAS-formatted experimental database. </italic></bold>To facilitate the storage of experimental data in a single cloud-enabled database, we defined a modified version of the MIDAS (Minimum information for data analysis in systems biology) format originally created for <italic>DataRail</italic> [<xref ref-type="bibr" rid="CR30">30</xref>]. This modified format is machine- and human-readable and allows for the storage of experimental data from heterogeneous sources in a single Excel or Google Sheets file. In our implementation, data is organized into “sub-tables”, each of which describes an experiment, including the treatments applied, data acquisition timepoints, and responses. Mapping of treatments to <italic>rxncon</italic> network nodes is accomplished through a <italic>TreatmentDefs</italic> sheet, which defines the name of a treatment, the effect of the treatment (stimulation, inhibition, or knockout/knockdown), and the <italic>rxncon</italic> nodes affected by the treatment. As the database is intended to include data from various sources, it must be normalized so that data values lie between 0 and 1; such normalization is the responsibility of the user.</p>
      <p id="Par23"><bold><italic>Experimental data pre-processing. </italic></bold><italic>ScoreNet.R</italic> first merges all “sub-tables” in the provided experimental data file into a single table of all experimental perturbations and the resulting data measurements. To enable comparison with <italic>rxncon</italic> Boolean networks that are not time-resolved and can only predict the (pseudo-)steady state of a system, the merged data must then be collapsed to two timepoints: pre- and post-stimulation. It is assumed that all data values acquired at t = 0 are pre-stimulation. The user can select all other data points (i.e. t &gt; 0) as post-stimulation data points or only data points lying within specific time bins via the script configuration file. After this, all pre-stimulation data values and post-stimulation data values for each output and combinations of stimuli/inhibitor are averaged, resulting in two data points for each output/perturbation combination.</p>
      <p id="Par24"><bold><italic>Generating rxncon predictions and quantifying their agreement with experiments. </italic></bold>A table of corresponding simulation predictions for each combination of perturbations is then generated as follows: the system is simulated starting from a user-provided initial state (or if not provided, the <italic>rxncon</italic>-generated “neutral” state), with all knocked out and stimulated nodes for the perturbation forced off, until it reaches the “pre-stimulation” attractor. This attractor is then quantified for all outputs by dividing the number of states the output is “on” in the attractor by the total number of states in the attractor, resulting in a value between 0 (always “off”) and 1 (always “on”). An arbitrary state from the pre-stimulation attractor (if the model behavior is internally consistent as determined by <italic>VerifyModel.R</italic>, state choice within the attractor does not affect the outcome) is used as the initial state for another simulation, with all inhibited nodes forced off and all stimulated nodes forced on. The resulting attractor is again quantified and used as the post-stimulation data point. These data points are used to calculate the mean square error (MSE<sub><italic>p,o</italic></sub>) for each perturbation combination <italic>p</italic> and output <italic>o</italic><disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{MSE}}_{p,o} = \frac{{\sum\limits_{t = 0}^{1} {\left( {{\text{experiment}}_{p,o} - {\text{simulation}}_{p,o} } \right)^{2} } }}{2}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mn>1</mml:mn></mml:munderover><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mtext>experiment</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mtext>simulation</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math><graphic xlink:href="12859_2023_5329_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>where <italic>t</italic> = 0 is the pre-stimulation time point and <italic>t</italic> = 1 is the post-stimulation time point. The overall mean square error MSE<sub><italic>tot</italic></sub> is calculated as<disp-formula id="Equb"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{MSE}}_{tot} = \frac{1}{nm}\sum\limits_{p = 1}^{n} {\sum\limits_{o = 1}^{m} {{\text{MSE}}_{p,o} } }$$\end{document}</tex-math><mml:math id="M4" display="block"><mml:mrow><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi mathvariant="italic">tot</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi mathvariant="italic">nm</mml:mi></mml:mrow></mml:mfrac><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>o</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:msub><mml:mtext>MSE</mml:mtext><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math><graphic xlink:href="12859_2023_5329_Article_Equb.gif" position="anchor"/></alternatives></disp-formula>where <italic>n</italic> and <italic>m</italic> are the number of perturbation combinations and measured outputs, respectively.</p>
    </sec>
    <sec id="Sec9">
      <title>Dynamic visualization of <italic>rxncon</italic> model trajectories in Boolean state space: <italic>AnimatePath.R</italic></title>
      <p id="Par25">Animations of the paths generated using <italic>VerifyModel.R</italic> or <italic>BoolNetSim.R</italic> can be made using <italic>AnimatePath.R</italic>. This script functions by automatically creating stills of a regulatory graph of the network (nodes are colored by their ON/OFF status) using the RCy3 [<xref ref-type="bibr" rid="CR27">27</xref>] API to control Cytoscape [<xref ref-type="bibr" rid="CR28">28</xref>]. These stills are then joined into a single GIF with numbered frames using the ImageMagick library. An example of such an animation may be found in the Additional File <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Results</title>
    <sec id="Sec11">
      <title>A cloud-enabled <italic>rxncon</italic> modeling workflow</title>
      <p id="Par26">The <italic>kboolnet</italic> package is designed to provide a variety of verification, validation, and visualization (VVV) tools that together form a cloud-enabled workflow for the development of <italic>rxncon</italic> models (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). The workflow extends and automates existing <italic>rxncon</italic> functionality and is centered on analysis of the model once converted to a <italic>BoolNet</italic> Boolean network.<fig id="Fig2"><label>Fig. 2</label><caption><p>Overall workflow for the <italic>kboolnet</italic> package. A cloud-stored <italic>rxncon</italic> model can be iteratively developed using the three portions of the <italic>kboolnet</italic> workflow: verification of the model’s behavior (responsiveness to ligands and consistency between attractors representing the same biological state), validation against experimental data, and visualization of model trajectories and topology</p></caption><graphic xlink:href="12859_2023_5329_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">The verification part of the workflow consists of <italic>VerifyModel.R,</italic> a script which can identify and report a variety of model behaviors and responses to stimuli and perturbations. The script performs formal verification of the model by checking the responsiveness of the system to repeated applications of stimuli, outputting the resulting trajectory and a graph visualizing the space of states and attractors reached.</p>
      <p id="Par28">The model validation, which involves the assessment of the model’s agreement with either experimental data or general (experimentally-informed) expectations about the behaviors of its components, is implemented in the form of three scripts: <italic>TruthTable.R</italic>, <italic>SensitivityAnalysis.R</italic>, and <italic>ScoreNet.R</italic>. <italic>TruthTable.R</italic> can be used for quick analysis of the behavior of the model (or portions thereof) by outputting a “truth-table” like graph which shows the response of the system to all possible combinations of a given set of stimuli and inhibitors. <italic>SensitivityAnalysis.R</italic> examines the effect of inhibiting all reactions and knocking out all components individually on a certain set of output nodes under with- and no-ligand conditions. The final script, <italic>ScoreNet.R</italic>, compares behavior of the model to a (modified) <italic>MIDAS</italic>-format experimental database, outputting both visual and numerical metrics that can serve as benchmarks of model quality.</p>
      <p id="Par29">Model visualization is handled by four scripts: <italic>PlotPath.R</italic>, <italic>PlotPathComparison.R</italic>, <italic>PlotModules.R</italic>, and <italic>AnimatePath.R</italic>. <italic>PlotPath.R</italic> outputs a 2D plot of a trajectory where columns represent timepoints and rows represent nodes in the Boolean network, with blue squares indicating “on” states and white squares indicating “off” states. <italic>PlotPathComparison.R</italic> generates a similar visualization after aligning and overlaying two such trajectories, showing their similarities and differences. <italic>PlotModules.R</italic> extracts all user-defined modules from a <italic>rxncon</italic> model file and outputs reaction-contingency graphs for each of them in the XGMML format, allowing for fast visualization of the topology of each module. Finally, <italic>AnimatePath.R</italic> can animate regulatory or state graphs of a <italic>rxncon</italic> network using a trajectory or attractor produced by <italic>VerifyModel.R</italic> or <italic>BoolNetSim.R</italic>. This provides a dynamic representation of the flow of information through the model, potentially providing novel insights about model behavior (an example animation may be found in the Additional File <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p id="Par30">This workflow is cloud enabled, allowing for the storage of the <italic>rxncon</italic> model and modified <italic>MIDAS</italic>-format experimental data as a Google Sheets file. The above verification and validation scripts, as well as <italic>PlotModules.R</italic>, download the latest version of the model (and experimental database, if necessary). This simplifies iterative and collaborative development of the model.</p>
    </sec>
    <sec id="Sec12">
      <title>Modular tagging and validation of <italic>rxncon</italic> rules</title>
      <p id="Par31">The model-building process can often result in the definition of large numbers of reaction rules and contingencies (e.g. a model of <italic>Saccharomyces cerevisiae</italic>’s cell cycle included 790 reaction rules and 598 contingencies [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]). This can lead to challenges when attempting to maintain, visualise, and evaluate a large-scale model, prompting us to implement tagging of <italic>rxncon</italic> reactions and contingencies by user-defined module and a numerical quality score. This allows for the extraction of modules for easier analysis as well as inclusion and exclusion of individual reactions/contingencies on the fly (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, <xref rid="Fig3" ref-type="fig">B</xref>). To implement module tagging, we expanded the format of the original MS Excel (the primary input format for <italic>rxncon</italic> scripts) by adding a new “!Module” column; tagging is implemented using a comma-separated list of module names in this column. Quality tagging exploits the existing “!Quality” column and filters out any reaction or contingency below a given score threshold.<fig id="Fig3"><label>Fig. 3</label><caption><p>Example of module extraction and qualitative assessment. The full model of EGFR signaling in colorectal cancer cells, a bird’s-eye view of which is presented in (<bold>A</bold>), is broken down into several modules: EGFR-Src (green), PI3K-Akt (red), Ras-Raf-Mek-Erk (blue), and S6K (yellow). Nodes shared between two or more modules are left uncolored. Each of these modules can be extracted for independent visualization and evaluation, as shown for the S6K module in (<bold>B</bold>) and (<bold>C</bold>), using the <italic>PlotModules.R</italic> and <italic>TruthTable.R</italic> scripts, respectively</p></caption><graphic xlink:href="12859_2023_5329_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par32">To rapidly and comprehensively characterize the behavior of the extracted modules under various combinations of stimuli and inhibitors, we created the <italic>TruthTable.R</italic> utility. It is inspired by <italic>capso</italic>’s “global truth tables” [<xref ref-type="bibr" rid="CR31">31</xref>], validation figures presented in previous versions of <italic>rxncon</italic> [<xref ref-type="bibr" rid="CR6">6</xref>], and truth tables from propositional logic. Given a list of <italic>n</italic> stimuli and inhibitors, the chosen module is simulated for all 2<sup>n</sup> stimulus/inhibitor combinations beginning from an initial user-provided state (or the <italic>rxncon</italic>-defined “neutral” state). This approach would be impractical for the entire model due to the large number of inputs and output; however, it is very beneficial for the small-size modules. In each simulation, selected stimuli nodes are fixed “on” and all inhibited nodes fixed “off”, the simulation is performed until reaching an attractor, and the output node values are averaged across the attractor states. This results in a score between 0 (always off) and 1 (always on) for each output node; these scores are combined in a matrix-type visualization (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C). The output can be used to quickly identify which combinations of stimuli are necessary to activate certain output nodes and which inhibitors abrogate said outputs. The script attempts to “compress” the visualization vertically; that is, if addition of a certain stimulus or inhibitor results in insensitivity of the model to other perturbations, all combinations with said stimulus or inhibitor are combined into a single row. To summarize, <italic>TruthTable.R</italic> facilitates validation of a module against existing knowledge of responses of selected output nodes to combinatorial perturbations.</p>
    </sec>
    <sec id="Sec600">
      <title>Whole-model formal verification</title>
      <p id="Par33">The <italic>VerifyModel.R</italic> script has been designed to facilitate evaluation of dynamic properties of the model as a whole, especially when it is complex and involves elements such as feedback loops. The properties in question are loosely related to those formulated for Petri Nets (a different type of discrete event dynamic systems [<xref ref-type="bibr" rid="CR32">32</xref>]): reachability and liveliness. Through <italic>VerifyModel.R</italic>, we empirically evaluate attractor reachability for the subgraph of the state graph that is reachable from the given initial state(s) upon the addition and removal of the given set of stimuli or inhibitors.</p>
      <p id="Par34">We conceptualize a “meta-attractor” as a certain cyclic trajectory through the space of all possible attractors of a Boolean network, with transitions between attractors being achieved by either removal or addition of the ligand (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). For many signaling systems (cascades) the addition of the ligand produces changes that are reversible, i.e. the system returns back to its original steady state upon the removal of the ligand. For such systems, the meta-attractor should be simple (Fig. <xref rid="Fig4" ref-type="fig">4</xref>A, <xref rid="Fig4" ref-type="fig">C</xref>): adding the ligand will shift the system into a “with-ligand” attractor, and removing the ligand will shift the system into a “no-ligand” attractor. By contrast, more complex, irreversible behaviors may be encountered e.g. when studying cell division or apoptosis (illustrated by Fig. <xref rid="Fig4" ref-type="fig">4</xref>B, <xref rid="Fig4" ref-type="fig">D</xref>). Finally, some implementations may lead to an unwanted “branching “ behavior where the “with-ligand” attractor is dependent on the specific state within a “no-ligand” attractor at which the ligand is applied, or vice versa. For these scenarios, the “meta-attractor” cannot be defined at all because it is no longer deterministic. In all cases, the ability to detect that a network model becomes “stuck” within a certain attractor or displays a more complex meta-attractor than expected can be helpful in model design and optimization.<fig id="Fig4"><label>Fig. 4</label><caption><p>State and attractor spaces for two hypothetical boolean networks. State transition graphs of two <italic>rxncon</italic> networks (<bold>A</bold>, <bold>B</bold>) and their corresponding attractor spaces (<bold>C</bold>, <bold>D</bold>). In (<bold>A</bold>) and (<bold>B</bold>), simulation of the network from intermediate states (blue nodes) according to Boolean state transitions (black edges) causes the system to fall into a cyclic attractor (purple nodes). Addition of the ligand (green edges) or removal of the ligand (red edges) can cause the network to fall into a new attractor. In (<bold>A</bold>) and (<bold>C</bold>), addition of the ligand causes the system to fall into a single “with-ligand” attractor, and removal of the ligand causes the system to return to a single “no-ligand” attractor. This meta-attractor is visualized in the attractor space <bold>C</bold> as a self-consistent and reversible transition between two attractor nodes. In (<bold>B</bold>) and (<bold>D</bold>), removal of the ligand at different timepoints in the “with-ligand” attractor causes the system to fall into two distinct “no-ligand” attractors; this “branching” behavior is visualized in the attractor space (<bold>D)</bold> as a possible transition from a single attractor node to two different (a.k.a. Inconsistent with each other) attractor nodes both corresponding to the same “no-ligand” biological state of the system</p></caption><graphic xlink:href="12859_2023_5329_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par35">Previously, this kind of formal verification had only been possible in <italic>rxncon</italic> by manually adding and removing the ligand in repeated rounds of simulation and comparing the resulting (pseudo-)steady-states/attractors to ensure that the desired system behavior was achieved [<xref ref-type="bibr" rid="CR15">15</xref>]. Performing verification in this manner is time consuming as it requires repetitive sets of steps (edit initial state, simulate, copy files, edit initial state, etc.). Furthermore, this method of verification only selects a single state within each attractor as the initial state for the next round, leaving open the possibility that undesired “branching” behaviors remain hidden. An improved, automated version of this verification process is available in <italic>VerifyModel.R</italic> (see Fig. <xref rid="Fig5" ref-type="fig">5</xref> for example application, see <italic>Implementation</italic> for more details).<fig id="Fig5"><label>Fig. 5</label><caption><p>Trap detection with VerifyModel.R. <bold>A</bold> A representative <italic>rxncon</italic> model flagged by <italic>VerifyModel.R</italic> as having inconsistent attractors upon repeated addition and removal of the ligand. <bold>B</bold> This is confirmed by plots of the full paths the network traverses upon the addition and removal of the ligand (attractors are striped, substrate states colored purple). <bold>C</bold> Automatically generated comparison plots reveal that the substrate remains phosphorylated in the first “no-ligand”attractor, but not in the second. <bold>D</bold> This “trap” behaviour is corrected by addition of a dephosphorylation reaction to produce a network (<bold>D</bold>) with consistent no-ligand attractors as shown in (<bold>E</bold>) and (<bold>F</bold>)</p></caption><graphic xlink:href="12859_2023_5329_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec14">
      <title>Model validation through a comparison to database of experimental data</title>
      <p id="Par36">Once the model has passed formal verification, it is ready for comparison to experimental data. The <italic>ScoreNet.R</italic> script simulates the network under all combinations of stimuli, inhibitors, and knockouts present in a cloud-stored experimental database. The predicted responses and experimental data are compared and the mean square error (MSE) between the two is calculated (see <italic>Implementation</italic> for details). The calculated MSE ranges from 0 (perfect agreement) to 1 (perfect disagreement) and provides an easily interpretable metric to track progress as a model is iteratively developed. For example, comparing the model presented in Fig. <xref rid="Fig3" ref-type="fig">3</xref>A to experimental data collected in SW48 and HT-29 colorectal adenocarcinoma cells [<xref ref-type="bibr" rid="CR33">33</xref>, <xref ref-type="bibr" rid="CR34">34</xref>] resulted in an MSE of 0.092. After the addition of a putative Akt→Cot→RSK edge [<xref ref-type="bibr" rid="CR35">35</xref>], the MSE dropped to 0.081, a small but measurable improvement (Fig. <xref rid="Fig6" ref-type="fig">6</xref> shows the full output from <italic>ScoreNet.R</italic>).<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison to experimental data with <italic>ScoreNet.R</italic>. Columns on the left represent output nodes, columns on the right represent combinations of stimuli (green) and inhibitors (red). Cells are colored according to the MSE between experimental data points (black, solid line) and predicted response (grey, dotted line). Cells with no experimental data available are colored grey</p></caption><graphic xlink:href="12859_2023_5329_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
    <sec id="Sec15">
      <title>A note on performance and scalability</title>
      <p id="Par37">Because <italic>kboolnet</italic> is designed to facilitate the exploration of the overall behavior and state space of a <italic>rxncon</italic> model, its speed and performance are strongly dependent on the size and connectivity of the model. By design, <italic>kboolnet</italic> fully utilizes the performance improvement mechanisms of the <italic>rxncon</italic> formalism (the bipartite graph representation of the network) and its published implementation [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] that compiles models into Boolean networks and takes advantage of the C-accelerated simulation engine of the <italic>BoolNet</italic> R package [<xref ref-type="bibr" rid="CR12">12</xref>]. Despite these optimizations, we recognize the possibility of decreased scalability when explicitly exploring the state space of the resulting Boolean network, as the number of possible states grows exponentially with the number of nodes. For this reason, <italic>kboolnet</italic> focuses on analyzing only the subset of the model’s state space that is reachable from biologically-relevant initial states. Furthermore, the module tagging, module extraction, and modular validation functionality of <italic>kboolnet</italic> are specifically designed to facilitate the development of large models through a divide-and-conquer approach.</p>
    </sec>
  </sec>
  <sec id="Sec300">
    <title>Conclusion</title>
    <p id="Par38">The <italic>kboolnet</italic> toolkit provides a systematic workflow for the development of <italic>rxncon</italic> models supplemented by a suite of verification, validation, and visualization (VVV) tools. By emphasizing modularity, <italic>kboolnet</italic> simplifies the process of building large and comprehensive models of cell signaling networks spanning multiple biological subunits which can be individually constructed, validated, and visualized. The <italic>kboolnet</italic> suite allows for both qualitative assessments of model integrity and (pseudo-)quantitative comparisons to real biological data. These features are centralized around a cloud-hosted version of both the <italic>rxncon</italic> model and an experimental database, collectively allowing for fast, iterative, and collaborative development of any kind of <italic>rxncon</italic> model. Future development of the <italic>kboolnet</italic> toolkit will expand its capabilities to include pseudo-quantitative modes of simulation supported by the <italic>rxncon</italic> formalism, namely the network-free stochastic simulator <italic>NFsim </italic>[<xref ref-type="bibr" rid="CR10">10</xref>], as well as expand existing tools for the generation of novel hypotheses and identification of potential drug targets.
</p>
  </sec>
  <sec id="Sec17" sec-type="data-availability">
    <title>Availability of Data and Materials</title>
    <p id="Par39">The code described and example models analysed in the paper are available on the project GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link>. </p>
    <p>Project name: kboolnet.</p>
    <p id="Par40">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Kufalab-UCSD/kboolnet/">https://github.com/Kufalab-UCSD/kboolnet/</ext-link></p>
    <p id="Par41">Operating system(s): Windows, Mac, Linux.</p>
    <p id="Par42">Programming language: R, Python.</p>
    <p id="Par43">Other requirements: See implementation for package dependencies.</p>
    <p id="Par44">License: This software is Copyright © 2023 The Regents of the University of California. All Rights Reserved. Permission to copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes by non-profit organizations, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies. Permission for for-profit organizations to make commercial use of this software may be obtained by contacting: Office of Innovation and Commercialization, 9500 Gilman Drive, Mail Code 0910, University of California La Jolla, CA 92093-0910, (858) 534-5815, innovation@ucsd.edu. This software program and documentation are copyrighted by The Regents of the University of California. The software program and documentation are supplied “as is”, without any accompanying services from The Regents. The Regents does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason. IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN “AS IS” BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS. Restrictions to use by non-academics: Permission for commercial use by non-profit organizations must be acquired from the UC San Diego Office of Innovation and Commercialization (see license for more information).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec18">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2023_5329_MOESM1_ESM.gif">
            <caption>
              <p><bold>Additional file 1</bold>. An example of an <italic>rxncon</italic> model path animation, generated by the <italic>AnimatePath.R</italic> script.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>VVV</term>
        <def>
          <p id="Par4">Verification, validation, and visualization</p>
        </def>
      </def-item>
      <def-item>
        <term>MIDAS</term>
        <def>
          <p id="Par5">Minimum information for data analysis in systems biology</p>
        </def>
      </def-item>
      <def-item>
        <term>MSE</term>
        <def>
          <p id="Par6">Mean square error</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Dr. Weijun Xu for providing initial motivation for the toolkit, and Alexis Lona and other members of the Kufareva lab for useful feedback and for testing the software. We acknowledge Prof. Tracy Handel (UC San Diego) and members of her lab for valuable discussions. We also thank Prof. Nils Blüthgen and Bertram Klinger (Charité Universitätsmedizin &amp; Humboldt University, Berlin) for providing access to data on EGFR- and RAS-mediated signaling in colorectal cancer.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>IK devised the project and supervised its implementation. WCC and IK jointly designed the software specifications with input and help from MK. WCC wrote the software. WCC, MK, and IK tested the software. WCC and IK wrote the manuscript with input from EK and MK. All authors approved the manuscript in its present form.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by NIH grants R01 GM136202, R21 AI149369, and R21 AI156662 to IK. The funders had no role in the design of the study, in collection, analysis, or interpretation of data, or in preparation of the manuscript.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par45">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par46">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par47">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Samaga</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Klamt</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Modeling approaches for qualitative and semi-quantitative analysis of cellular signaling networks</article-title>
        <source>Cell Commun Signal</source>
        <year>2013</year>
        <volume>11</volume>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/1478-811X-11-43</pub-id>
        <pub-id pub-id-type="pmid">23289948</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mi</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The systems biology graphical notation</article-title>
        <source>Nat Biotechnol</source>
        <year>2009</year>
        <volume>27</volume>
        <fpage>735</fpage>
        <lpage>741</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1558</pub-id>
        <?supplied-pmid 19668183?>
        <pub-id pub-id-type="pmid">19668183</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Narat</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Eungdamrong</surname>
            <given-names>RI</given-names>
          </name>
        </person-group>
        <article-title>Modeling cell signaling networks</article-title>
        <source>Biol Cell</source>
        <year>2004</year>
        <volume>96</volume>
        <fpage>355</fpage>
        <pub-id pub-id-type="doi">10.1111/j.1768-322X.2004.tb01426.x</pub-id>
        <pub-id pub-id-type="pmid">15207904</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Flöttmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Krause</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Reaction-contingency based bipartite Boolean modelling</article-title>
        <source>BMC Syst Biol</source>
        <year>2013</year>
        <volume>7</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-7-58</pub-id>
        <pub-id pub-id-type="pmid">23280066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tiger</surname>
            <given-names>C-F</given-names>
          </name>
          <name>
            <surname>Krause</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cedersund</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Palmér</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hohmann</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kitano</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A framework for mapping, visualisation and automatic model creation of signal-transduction networks</article-title>
        <source>Mol Syst Biol</source>
        <year>2012</year>
        <volume>8</volume>
        <fpage>578</fpage>
        <pub-id pub-id-type="doi">10.1038/msb.2012.12</pub-id>
        <?supplied-pmid 22531118?>
        <pub-id pub-id-type="pmid">22531118</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Romers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thieme</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Münzner</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A scalable method for parameter-free simulation and validation of mechanistic cellular signal transduction network models</article-title>
        <source>NPJ Syst Biol Appl</source>
        <year>2020</year>
        <volume>6</volume>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1038/s41540-019-0120-5</pub-id>
        <pub-id pub-id-type="pmid">32001719</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Romers JC, Krantz M. rxncon 2.0: a language for executable molecular systems biology. bioRxiv. 2017;107136</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hlavacek</surname>
            <given-names>WS</given-names>
          </name>
          <name>
            <surname>Faeder</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Blinov</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Perelson</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The complexity of complexes in signal transduction</article-title>
        <source>Biotechnol Bioeng</source>
        <year>2003</year>
        <pub-id pub-id-type="doi">10.1002/bit.10842</pub-id>
        <?supplied-pmid 14708119?>
        <pub-id pub-id-type="pmid">14708119</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Münzner</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Klipp</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Krantz</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A comprehensive, mechanistically detailed, and executable model of the cell division cycle in <italic>Saccharomyces cerevisiae</italic></article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-08903-w</pub-id>
        <pub-id pub-id-type="pmid">30602773</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sneddon</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Faeder</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Emonet</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Efficient modeling, simulation and coarse-graining of biological complexity with NFsim</article-title>
        <source>Nat Methods</source>
        <year>2010</year>
        <volume>8</volume>
        <fpage>177</fpage>
        <lpage>183</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1546</pub-id>
        <?supplied-pmid 21186362?>
        <pub-id pub-id-type="pmid">21186362</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Terfve</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cokelaer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Henriques</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>MacNamara</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goncalves</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Morris</surname>
            <given-names>MK</given-names>
          </name>
          <name>
            <surname>van Iersel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lauffenburger</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>CellNOptR: a flexible toolkit to train protein signaling networks to data using multiple logic formalisms</article-title>
        <source>BMC Syst Biol</source>
        <year>2012</year>
        <volume>6</volume>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-6-133</pub-id>
        <pub-id pub-id-type="pmid">22222070</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Müssel</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hopfensitz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kestler</surname>
            <given-names>HA</given-names>
          </name>
        </person-group>
        <article-title>BoolNet–an R package for generation, reconstruction and analysis of Boolean networks</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq124</pub-id>
        <?supplied-pmid 20378558?>
        <pub-id pub-id-type="pmid">20378558</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">R Core Team. The R project for statistical computing. 2020.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">RStudio Team. RStudio. 2020.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Romers J, Thieme S, Münzner U, Krantz M. Using rxncon to develop rule-based models. In: Hlavacek WS, editor. Modeling biomolecular site dynamics. New York: Humana Press; 2019. p. 71–118.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Wickham</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>ggplot2: elegant graphics for data analysis</source>
        <year>2016</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Wickham H, François R, Henry L, Müller K. dplyr: a grammar of data manipulation. 2021.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Schauberger P, Walker A. openxlsx: read, write and edit xlsx files. 2020.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">D’Agostino McGowan L, Bryan J. Googledrive: an interface to google drive. 2020.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Wickham H. Tidyr: tidy messy data. 2021.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Borchers HW. Numbers: number-theoretic functions. 2019.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Wickham H, Hester J, Ooms J. xml2: parse XML. 2020.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Auguie B. Egg: extensions for “ggplot2”: custom geom, custom themes, plot alignment, labelled panels, symmetric scales, and fixed panel size. 2019.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Davis TL. optparse: command line option parser. 2020.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Csardi G, Nepusz T. The igraph software package for complex network research. InterJ Complex Syst. 2006;1695:1–9.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Application directories: determine where to save data, caches, and logs [R package rappdirs version 0.3.3]. 2021.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gustavsen</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Pai</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Isserlin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Demchak</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Pico</surname>
            <given-names>AR</given-names>
          </name>
        </person-group>
        <article-title>RCy3: network biology using Cytoscape from within R</article-title>
        <source>F1000Research</source>
        <year>2019</year>
        <volume>8</volume>
        <fpage>1774</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.20887.2</pub-id>
        <?supplied-pmid 31819800?>
        <pub-id pub-id-type="pmid">31819800</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shannon</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Markiel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ozier</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Baliga</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Ramage</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Amin</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Schwikowski</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ideker</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id>
        <?supplied-pmid 14597658?>
        <pub-id pub-id-type="pmid">14597658</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trinh</surname>
            <given-names>H-C</given-names>
          </name>
          <name>
            <surname>Kwon</surname>
            <given-names>Y-K</given-names>
          </name>
        </person-group>
        <article-title>RMut: R package for a Boolean sensitivity analysis against various types of mutations</article-title>
        <source>PLoS ONE</source>
        <year>2019</year>
        <volume>14</volume>
        <fpage>e0213736</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0213736</pub-id>
        <?supplied-pmid 30889216?>
        <pub-id pub-id-type="pmid">30889216</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Goldsipe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Muhlich</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Alexopoulos</surname>
            <given-names>LG</given-names>
          </name>
          <name>
            <surname>Millard</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lauffenburger</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Sorger</surname>
            <given-names>PK</given-names>
          </name>
        </person-group>
        <article-title>Flexible informatics for linking experimental data to mathematical models via <italic>DataRail</italic></article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>840</fpage>
        <lpage>847</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn018</pub-id>
        <?supplied-pmid 18218655?>
        <pub-id pub-id-type="pmid">18218655</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guziolowski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Videla</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Eduati</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Thiele</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cokelaer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Siegel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saez-Rodriguez</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Exhaustively characterizing feasible logic models of a signaling network using answer set programming</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>2320</fpage>
        <lpage>2326</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt393</pub-id>
        <?supplied-pmid 23853063?>
        <pub-id pub-id-type="pmid">23853063</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Reisig</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <source>Petri nets: an introduction</source>
        <year>2012</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer Science &amp; Business Media</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stelniec-Klotz</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Legewie</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tchernitsa</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Witzel</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Klinger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sers</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Herzel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Blüthgen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Schäfer</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Reverse engineering a hierarchical regulatory network downstream of oncogenic KRAS</article-title>
        <source>Mol Syst Biol</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1038/msb.2012.32</pub-id>
        <?supplied-pmid 22864383?>
        <pub-id pub-id-type="pmid">22864383</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hood</surname>
            <given-names>FE</given-names>
          </name>
          <name>
            <surname>Klinger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Newlaczyl</surname>
            <given-names>AU</given-names>
          </name>
          <name>
            <surname>Sieber</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Dorel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Oliver</surname>
            <given-names>SP</given-names>
          </name>
          <name>
            <surname>Coulson</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Blüthgen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Prior</surname>
            <given-names>IA</given-names>
          </name>
        </person-group>
        <article-title>Isoform-specific Ras signaling is growth factor dependent</article-title>
        <source>Mol Biol Cell</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1091/mbc.E18-10-0676</pub-id>
        <?supplied-pmid 30785867?>
        <pub-id pub-id-type="pmid">30785867</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kane</surname>
            <given-names>LP</given-names>
          </name>
          <name>
            <surname>Mollenauer</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Turck</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Weiss</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Akt-dependent phosphorylation specifically regulates Cot induction of NF-kappa B-dependent transcription</article-title>
        <source>Mol Cell Biol</source>
        <year>2002</year>
        <volume>22</volume>
        <fpage>5962</fpage>
        <lpage>5974</lpage>
        <pub-id pub-id-type="doi">10.1128/MCB.22.16.5962-5974.2002</pub-id>
        <?supplied-pmid 12138205?>
        <pub-id pub-id-type="pmid">12138205</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

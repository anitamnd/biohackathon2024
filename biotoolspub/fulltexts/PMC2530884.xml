<?properties open_access?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1460-2059</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2530884</article-id>
    <article-id pub-id-type="pmid">18689808</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btn397</article-id>
    <article-id pub-id-type="publisher-id">btn397</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group>
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BioJava: an open-source framework for bioinformatics</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Holland</surname>
          <given-names>R. C. G.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Down</surname>
          <given-names>T. A.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pocock</surname>
          <given-names>M.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Prlić</surname>
          <given-names>A.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>4</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Huen</surname>
          <given-names>D.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>5</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>James</surname>
          <given-names>K.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Foisy</surname>
          <given-names>S.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>6</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dräger</surname>
          <given-names>A.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>7</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yates</surname>
          <given-names>A.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Heuer</surname>
          <given-names>M.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>8</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schreiber</surname>
          <given-names>M. J.</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>9</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup>European Bioinformatics Institute (EMBL-EBI), Genome Campus, Hinxton, Cambridgeshire CB10 1SD, <sup>2</sup>Gurdon Institute and Department of Genetics, Cambridge CB2 1QN, <sup>3</sup>University Newcaste Upon Tyne, Newcastle Upon Tyne, NE1 7RU, <sup>4</sup>Wellcome Trust Sanger Institute, Genome Campus, Hinxton, Cambridgeshire CB10 1SA, <sup>5</sup>Department of Genetics, University of Cambridge, Cambridge CB2 3EH, UK, <sup>6</sup>Laboratory in Genetics and Genomic Medicine of Inflammation, Montreal Heart Institute, Montreal, Canada H1T 1C8, <sup>7</sup>Eberhard Karls University Tübingen, Center for Bioinformatics (ZBIT), Tübingen, Germany, <sup>8</sup>Harbinger Partners, Inc. St. Paul, MN, USA and <sup>9</sup>Novartis Institute for Tropical Diseases, 10 Biopolis Road, Chromos #05-01, Singapore 138670</aff>
    <author-notes>
      <corresp id="COR1"><sup>*</sup>To whom correspondence should be addressed.</corresp>
      <fn>
        <p>Associate Editor: Anna Tromontano</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>9</month>
      <year>2008</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>8</day>
      <month>8</month>
      <year>2008</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>8</day>
      <month>8</month>
      <year>2008</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>24</volume>
    <issue>18</issue>
    <fpage>2096</fpage>
    <lpage>2097</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>5</month>
        <year>2008</year>
      </date>
      <date date-type="rev-recd">
        <day>30</day>
        <month>6</month>
        <year>2008</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>7</month>
        <year>2008</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2008 The Author(s)</copyright-statement>
      <copyright-year>2008</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">http://creativecommons.org/licenses/by-nc/2.0/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Summary:</bold> BioJava is a mature open-source project that provides a framework for processing of biological data. BioJava contains powerful analysis and statistical routines, tools for parsing common file formats and packages for manipulating sequences and 3D structures. It enables rapid bioinformatics application development in the Java programming language.</p>
      <p><bold>Availability:</bold> BioJava is an open-source project distributed under the Lesser GPL (LGPL). BioJava can be downloaded from the BioJava website (<ext-link ext-link-type="uri" xlink:href="http://www.biojava.org">http://www.biojava.org</ext-link>). BioJava requires Java 1.5 or higher.</p>
      <p><bold>Contact:</bold><email>andreas.prlic@gmail.com</email>. All queries should be directed to the BioJava mailing lists. Details are available at <ext-link ext-link-type="uri" xlink:href="http://biojava.org/wiki/BioJava:MailingLists">http://biojava.org/wiki/BioJava:MailingLists</ext-link>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>BioJava was conceived in 1999 by Thomas Down and Matthew Pocock as an Application Programming Interface (API) to simplify bioinformatics software development using Java (Pocock, <xref ref-type="bibr" rid="B3">2003</xref>; Pocock <italic>et al.</italic>, <xref ref-type="bibr" rid="B4">2000</xref>). It has since then evolved to become a fully featured framework with modules for performing many common bioinformatics tasks. The goal of BioJava is to facilitate code reuse and to provide standard implementations that are easy to link to external scripts and applications.</p>
    <p>BioJava is an open-source project that is developed by volunteers and coordinated by the Open Bioinformatics Foundation (OBF). It is one of several Bio* toolkits (Mangalam, <xref ref-type="bibr" rid="B7">2002</xref>). All code is distributed under the LGPL license and can be freely used and reused in any form.</p>
    <p>BioJava is a mature project and has been employed in a number of real-world applications and over 50 published studies. A list of these can be found on the BioJava website. According to the project tracking web site Ohloh (<ext-link ext-link-type="uri" xlink:href="http://www.ohloh.net/projects/biojava">http://www.ohloh.net/projects/biojava</ext-link>), the BioJava code-base represents an estimated 47 person-years worth of effort.</p>
  </sec>
  <sec id="SEC2">
    <title>2 FEATURES</title>
    <p>BioJava contains a number of mature APIs. The 10 most frequently used are: (1) nucleotide and amino acid alphabets, (2) BLAST parser, (3) sequence I/O, (4) dynamic programming, (5) structure I/O and manipulation, (6) sequence manipulation, (7) genetic algorithms, (8) statistical distributions, (9) graphical user interfaces and (10) serialization to databases. Below follows a short discussion of some of these modules.</p>
    <p>At the core of BioJava is a symbolic alphabet API which represents sequences as a list of references to singleton symbol objects that are derived from an alphabet. Lists of symbols are stored whenever possible in a compressed form of up to four symbols per byte of memory.</p>
    <p>In addition to the fundamental symbols of a given alphabet (A, C, G and T in the case of DNA), all BioJava alphabets implicitly contain extra symbol objects representing all possible combinations of the fundamental symbols.</p>
    <p>The symbol approach allows the construction of higher order alphabets and symbols that represent the multiplication of one or more alphabets. An example is the codon ‘alphabet’ which is the cubed product of the DNA alphabet, each codon ‘symbol’ comprising three DNA symbols. Such an alphabet allows construction of views over sequences without modifying the underlying sequence which is useful for tasks such as translation. Other complex alphabets which can be described include conditional alphabets for the construction of conditional probability distributions, and heterogeneous alphabets such as the combination of the codon and protein alphabets for use with a DNA–protein aligning hidden Markov model (HMM). Other interesting applications of the alphabet API include chromosomes for genetic algorithms using, but not limited to, integer or binary symbol lists, and the representation of Phred quality scores (Ewing <italic>et al.</italic>, <xref ref-type="bibr" rid="B5">1998</xref>) as a multiplication of the DNA and integer alphabets.</p>
    <p>The typical user would most likely start out by using the sequence input/output API and the sequence/feature object model. These allow sequences to be loaded from a number of common file formats such as FASTA, GenBank and EMBL, optionally manipulated in memory, then saved again or converted into a different format. The simplicity of this process is demonstrated in <xref ref-type="fig" rid="F1">Figure 1</xref>.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Loading a GenBank file with BioJava and writing it out as FASTA. The example demonstrates the use of several convenience methods that hide the bulk of the implementation. If the developer desires a more flexible parser it is possible to make use of the interfaces hidden behind the convenience methods to expose a fully customizable, multi-component, event-based parsing model.</p></caption><graphic xlink:href="btn397f1"/></fig></p>
    <p>Another useful API is the feature/annotation object model which associates sequences with located features and unlocated annotations. Features can be found either by keyword or by defining a location query from which all overlapping or contained features are returned, while annotations can be retrieved by keyword. The location model handles circular and stranded locations, split locations and multi-sequence locations allowing features to span complex sets of coordinates.</p>
    <p>The protein structure API contains tools for parsing and manipulating PDB files (Berman <italic>et al.</italic>, <xref ref-type="bibr" rid="B2">2000</xref>). It contains utility methods to perform linear algebra calculations on atomic coordinates and can calculate 3D structure alignments. A simple interface to the 3D visualization library Jmol (<ext-link ext-link-type="uri" xlink:href="http://www.jmol.org">http://www.jmol.org</ext-link>) is contained as well. An add-on allows the serialization of the content of a PDB file to a database using Hibernate (<ext-link ext-link-type="uri" xlink:href="http://www.hibernate.org">http://www.hibernate.org</ext-link>).</p>
    <p>Other APIs include those for working with chromatograms, sequence alignments, proteomics and ontologies. Parsers are provided for reading, amongst others, Blast reports (Altschul <italic>et al.</italic>, <xref ref-type="bibr" rid="B1">1997</xref>), ABI chromatograms and NCBI taxonomy definitions.</p>
    <p>Recently the BioJavaX module was added which provides more detailed parsing of the common file formats and improved storing of sequence data into BioSQL databases (<ext-link ext-link-type="uri" xlink:href="http://www.biosql.org">http://www.biosql.org</ext-link>). This allows to incorporate BioJava into existing data processing pipelines which use alternative OBF toolkits such as BioPerl (Stajich <italic>et al.</italic>, <xref ref-type="bibr" rid="B8">2002</xref>).</p>
    <p>The BioJava web site provides detailed manuals on how to use the different components. In particular, the ‘CookBook’ section provides a quick introduction into solving many problems by demonstrating solutions with documented source code. There is also a section to demonstrate the performance of a few selected tasks via Java WebStart examples. To mention just one: the FASTA-formatted release 4 Drosophila genome sequence can be parsed in &lt;20 s on a 1.80 GHz Core Duo processor.</p>
  </sec>
  <sec id="SEC3">
    <title>3 FUTURE DEVELOPMENT</title>
    <p>BioJava aims to provide an API that is of use to anyone using Java to develop bioinformatics software, regardless of which specialization they may work in. Genomic features currently must be manipulated with reference to the underlying genomic sequence, which can make working with post-genomic datasets, such as microarray results, overly complex. Phylogenetics tools are already in development which will allow users to work with NEXUS tree files (Maddison <italic>et al.</italic>, <xref ref-type="bibr" rid="B6">1997</xref>).</p>
    <p>Although the Blast parsing API is widely used, it does not support all of the existing blast-family output formats. We will continue the ongoing effort to add parsers for PSI-Blast and other currently unsupported formats.</p>
    <p>Users are welcome to identify further areas of need and their suggestions will be incorporated into future developments.</p>
    <p>BioJava is written entirely in the Java programming language, and will run on any platform for which a Java 1.5 run-time environment is available. Java 5 and 6 provide advanced language features, and we shall be taking advantage of these in the next major release, both to aid in maintenance of the library and to make it even easier for novice Java developers to make use of the BioJava APIs.</p>
  </sec>
  <sec sec-type="conclusions" id="SEC4">
    <title>4 CONCLUSIONS</title>
    <p>BioJava is one of the largest open-source APIs for bioinformatics software development. It is a mature project with a large user and support community. It offers a wide range of tools for common bioinformatics tasks. The BioJava homepage provides access to the source code and detailed documentation.</p>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We want to thank everybody who made code or documentation contribution during the project's life. Each of these contribution is appreciated, though the total list of contributors is too long to be reproduced here. BioJava is not formally funded by any grants. Through the OBF we have received sponsorship from Sun Microsystems, Apple Computers and NESCent. The initial development of the phylogenetics module was undertaken as a Google Summer of Code 2007 project in collaboration with NESCent.</p>
    <p><italic>Funding</italic>: Funding for open access charge: Wellcome Trust.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>
        <source>Nucleic Acids Res.</source>
        <year>1997</year>
        <volume>25</volume>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Protein Data Bank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pocock</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Computational analysis of genomes</article-title>
        <source>PhD thesis.</source>
        <year>2003</year>
        <publisher-loc>Cambridge, UK</publisher-loc>
        <publisher-name>University of Cambridge</publisher-name>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pocock</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioJava: open source components for bioinformatics</article-title>
        <source>ACM SIGBIO Newsl.</source>
        <year>2000</year>
        <volume>20</volume>
        <fpage>10</fpage>
        <lpage>12</lpage>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ewing</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Base-calling of automated sequencer traces using phred</article-title>
        <source>Genome Res.</source>
        <year>1998</year>
        <volume>8</volume>
        <fpage>175</fpage>
        <lpage>185</lpage>
        <pub-id pub-id-type="pmid">9521921</pub-id>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maddison</surname>
            <given-names>DR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>NEXUS: an extensible file format for systematic information</article-title>
        <source>Syst. Biol.</source>
        <year>1997</year>
        <volume>46</volume>
        <fpage>590</fpage>
        <lpage>621</lpage>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mangalam</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>The Bio* toolkits - a brief overview</article-title>
        <source>Brief. Bioinform.</source>
        <year>2002</year>
        <volume>3</volume>
        <fpage>396</fpage>
        <lpage>302</lpage>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stajich</surname>
            <given-names>JE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Bioperl toolkit: Perl modules for the life sciences</article-title>
        <source>Genome Res.</source>
        <year>2002</year>
        <volume>12</volume>
        <fpage>1611</fpage>
        <lpage>1618</lpage>
        <pub-id pub-id-type="pmid">12368254</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

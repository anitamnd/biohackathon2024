<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group UK</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7804095</article-id>
    <article-id pub-id-type="publisher-id">80757</article-id>
    <article-id pub-id-type="doi">10.1038/s41598-020-80757-5</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scalable long read self-correction and assembly polishing with multiple sequence alignment</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Morisse</surname>
          <given-names>Pierre</given-names>
        </name>
        <address>
          <email>pierre.morisse@inria.fr</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marchet</surname>
          <given-names>Camille</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Limasset</surname>
          <given-names>Antoine</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lecroq</surname>
          <given-names>Thierry</given-names>
        </name>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lefebvre</surname>
          <given-names>Arnaud</given-names>
        </name>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.420225.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2298 7270</institution-id><institution>Univ Rennes, Inria, CNRS, IRISA, </institution></institution-wrap>35000 Rennes, France </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.503422.2</institution-id><institution-id institution-id-type="ISNI">0000 0001 2242 6780</institution-id><institution>Univ. Lille, CNRS, UMR 9189 - CRIStAL, </institution></institution-wrap>59000 Lille, France </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.462945.8</institution-id><institution>Normandie Univ, UNIROUEN, LITIS, </institution></institution-wrap>76000 Rouen, France </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>1</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>1</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>11</volume>
    <elocation-id>761</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>22</day>
        <month>12</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Third-generation sequencing technologies allow to sequence long reads of tens of kbp, that are expected to solve various problems. However, they display high error rates, currently capped around 10%. Self-correction is thus regularly used in long reads analysis projects. We introduce CONSENT, a new self-correction method that relies both on multiple sequence alignment and local de Bruijn graphs. To ensure scalability, multiple sequence alignment computation benefits from a new and efficient segmentation strategy, allowing a massive speedup. CONSENT compares well to the state-of-the-art, and performs better on real Oxford Nanopore data. Specifically, CONSENT is the only method that efficiently scales to ultra-long reads, and allows to process a full human dataset, containing reads reaching up to 1.5 Mbp, in 10 days. Moreover, our experiments show that error correction with CONSENT improves the quality of Flye assemblies. Additionally, CONSENT implements a polishing feature, allowing to correct raw assemblies. Our experiments show that CONSENT is 2-38x times faster than other polishing tools, while providing comparable results. Furthermore, we show that, on a human dataset, assembling the raw data and polishing the assembly is less resource consuming than correcting and then assembling the reads, while providing better results. CONSENT is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/morispi/CONSENT">https://github.com/morispi/CONSENT</ext-link>.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Computational biology and bioinformatics</kwd>
      <kwd>Genome informatics</kwd>
      <kwd>Software</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par2">Third-generation sequencing technologies Pacific Biosciences (PacBio) and Oxford Nanopore Technologies (ONT) have become widely used since their inception in 2011. In contrast to second-generation technologies, producing reads reaching lengths of a few hundreds base pairs, they allow the sequencing of much longer reads (10 kbp on average<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>, and up to <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&gt;1$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq1.gif"/></alternatives></inline-formula> million bps<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>). These long reads are expected to solve various problems, such as contig and haplotype assembly<sup><xref ref-type="bibr" rid="CR3">3</xref>,<xref ref-type="bibr" rid="CR4">4</xref></sup>, scaffolding<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>, and structural variant calling<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>. However, they are very noisy. More precisely, basic ONT and non-CCS PacBio reads can reach error rates of 10 to 30%, whereas second-generation short reads usually display error rates of 1%. The error profiles of these long reads are also much more complex than those of the short reads. Indeed, they are mainly composed of insertions and deletions, whereas short reads mostly contain substitutions. As a result, error correction is often required, as the first step of projects dealing with long reads. As the error profiles and error rates of the long reads are much different from those of the short reads, correcting long reads requires specific algorithmic developments.</p>
    <p id="Par3">The error correction of long reads has thus been tackled by two main approaches. The first approach, hybrid correction, makes use of additional short reads data to perform correction. The second approach, self-correction, aims at correcting the long reads solely based on the information contained in their sequences.</p>
    <p id="Par4">Hybrid correction methods rely on different techniques such as: 1. Alignment of short reads to the long reads (CoLoRMAP<sup><xref ref-type="bibr" rid="CR7">7</xref></sup>, HECiL<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>) ; 2. Exploration of de Bruijn graphs, built from short reads <italic>k</italic>-mers (LoRDEC<sup><xref ref-type="bibr" rid="CR9">9</xref></sup>, Jabba<sup><xref ref-type="bibr" rid="CR10">10</xref></sup>, FMLRC<sup><xref ref-type="bibr" rid="CR11">11</xref></sup>) ; 3. Alignment of the long reads to contigs built from the short reads (MiRCA<sup><xref ref-type="bibr" rid="CR12">12</xref></sup>, HALC<sup><xref ref-type="bibr" rid="CR13">13</xref></sup>) ; 4. Hidden Markov Models, initialized from the long reads sequences and trained using the short reads (Hercules<sup><xref ref-type="bibr" rid="CR14">14</xref></sup>) ; 5. Combination of different strategies (NaS<sup><xref ref-type="bibr" rid="CR15">15</xref></sup> (1 + 3), HG-CoLoR<sup><xref ref-type="bibr" rid="CR16">16</xref></sup> (1 + 2)).</p>
    <p id="Par5">Self-correction methods usually build around the alignment of the long reads against each other (PBDAGCon<sup><xref ref-type="bibr" rid="CR17">17</xref></sup>, PBcR<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>). We give further details on the state-of-the-art of self-correction in the “<xref rid="Sec2" ref-type="sec">Related works</xref> ”.</p>
    <p id="Par6">As first long reads sequencing experiments resulted in highly erroneous long reads (15–30% error rates on average), most methods relied on the additional use of short reads data. As a result, hybrid correction used to be much more widespread. Indeed, in 2014, for five hybrid correction tools, only two self-correction tools were available.</p>
    <p id="Par7">However, third-generation sequencing technologies evolve fast, and now manage to produce long reads reaching error rates of 10–12%. Moreover, the evolution of long-read sequencing technologies also allows to produce higher throughputs of data, at a reduced cost. Consequently, such data became more widely available. As a result, self-correction can now efficiently be used in place of hybrid correction in data analysis projects dealing with long reads.</p>
    <sec id="Sec2">
      <title>Related works</title>
      <p id="Par8">Since third-generation sequencing technologies evolve fast, and now reach lower error rates, various efficient self-correction methods have recently been developed. Most of them share a common first step of computing overlaps between the long reads, which can be performed in two different ways. First, a mapping approach can be used, to simply provide the positions of similar regions of the long reads (Canu<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>, MECAT<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>, FLAS<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>). Second, an alignment approach can be used, to provide the positions of similar regions, but also their actual base to base correspondence in terms of matches, mismatches, insertions, and deletions (PBDAGCon, PBcR, Daccord<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>). A directed acyclic graph (DAG) is then usually built, in order to summarize the 1V1 alignments and compute consensus, after recomputing actual alignments of mapped regions, if necessary. Other methods rely on de Bruijn graphs, either built from small windows of the alignments (Daccord), or directly from the long reads sequences with no prior overlapping step (LoRMA<sup><xref ref-type="bibr" rid="CR23">23</xref></sup>). These graphs are explored, using the solid <italic>k</italic>-mers (<italic>i.e.</italic>
<italic>k</italic>-mers occurring more frequently than a given threshold) from the reads as anchor points, in order to correct low quality, weak <italic>k</italic>-mers regions.</p>
      <p id="Par9">However, methods relying on direct alignment of the long reads are prohibitively time and memory consuming, and current implementations thus do not scale to large genomes. Methods solely relying on de Bruijn graphs, and avoiding the overlapping step altogether, usually require deep long reads coverage, since the graphs are usually built from large, solid <italic>k</italic>-mers. As a result, methods relying on a mapping strategy constitute the core of the current state-of-the-art for long read self-correction.</p>
    </sec>
    <sec id="Sec3">
      <title>Contribution</title>
      <p id="Par10">We present CONSENT, a new self-correction method that combines different efficient approaches from the state-of-the-art. CONSENT indeed starts by computing multiple sequence alignments (MSA) between overlapping regions of the long reads, in order to compute consensus sequences. These consensus sequences are then polished with local de Bruijn graphs, in order to correct remaining errors, and further reduce the final error rate. Moreover, unlike current state-of-the-art methods, CONSENT computes actual MSA, using a method based on partial order graphs<sup><xref ref-type="bibr" rid="CR24">24</xref></sup>. We also introduce an efficient segmentation strategy based on <italic>k</italic>-mer chaining, which allows to reduce the time footprint of the MSA. This segmentation strategy thus allows to compute scalable MSA. In particular, it allows CONSENT to efficiently scale to ONT ultra-long reads.</p>
      <p id="Par11">Our experiments show that CONSENT compares well to the latest state-of-the-art self-correction methods, and outperforms them on real ONT datasets. In particular, they show that CONSENT is the only method able to efficiently scale to ONT ultra-long reads, allowing to perform correction of a full human dataset, containing reads reaching up to 1.5 Mbp in 10 days.</p>
      <p id="Par12">Additionally, CONSENT is also able to polish assemblies generated from raw long reads. Our experiment on a full human dataset shows that assembling the raw data and polishing the assembly is less resource consuming than correcting and then assembling the data, while offering better results. Our experiments also show that CONSENT outperforms state-of-the-art assembly polishing tools in terms of resource consumption, while providing comparable results.</p>
    </sec>
  </sec>
  <sec id="Sec4">
    <title>Results</title>
    <sec id="Sec5">
      <title>Impact of the segmentation strategy</title>
      <p id="Par13">Before comparing CONSENT to state-of-the-art self-correction tools, we first validate our segmentation strategy. To this aim, we simulated a 50x coverage of long reads from <italic>E.coli</italic>, with a 12% error rate, using SimLoRD<sup><xref ref-type="bibr" rid="CR25">25</xref></sup>. The following parameters were used for the simulation: –probability-threshold 0.3 –prob-ins 0.145 –prob-del 0.06, and –prob-sub 0.02. We then ran the CONSENT pipeline, with, and without the segmentation strategy. Results of this experiment are given in Supplementary Table <xref rid="MOESM1" ref-type="media">1</xref>. We obtained these results using ELECTOR<sup><xref ref-type="bibr" rid="CR26">26</xref></sup>, a tool specifically designed to precisely measure correction accuracy on simulated data. In particular, ELECTOR reports metrics such as recall (number of modified bases among erroneous bases in the original data), precision (number of properly corrected bases among bases modified by the error-correction tool), and error rate before and after correction. These results show that, compared to the regular MSA implementation, our segmentation strategy allows a 47x speedup, reducing the runtime from 5 h 31 min to 7 min. Moreover, our segmentation strategy also allows to reach lower memory consumption and higher quality. In particular, the post-correction error rate is decreased by 1.77x, and the precision increases by almost 0.15%. This gain in quality can be explained by the fact that our segmentation strategy allows to get rid of spurious sequences and thus to compute more accurate alignments and consensus.</p>
    </sec>
    <sec id="Sec6">
      <title>Comparison to the state-of-the-art</title>
      <p id="Par14">We compare CONSENT against state-of-the-art error correction methods. We include the following tools in the benchmark: Canu, Daccord, FLAS, and MECAT. We voluntarily exclude LoRMA from the comparison, as it tends to aggressively split the reads, and thus produce reads that are usually shorter than 900 bp. We however report LoRMA’s result in Supplementary Tables <xref rid="MOESM1" ref-type="media">S3</xref> and <xref rid="MOESM1" ref-type="media">S4</xref>. We also exclude hybrid error correction tools from the benchmark, as we believe it makes more sense to only compare self-correction tools. We performed experiments both on simulated and real data. We ran all tools with default or recommended parameters, and with a number of threads corresponding to the maximum number of cores available on the systems experiments were performed on. For CONSENT, we set the minimum support to define a window to 3, the window size to 500, the overlap size between consecutive windows to 50, the <italic>k</italic>-mer size used for chaining and polishing to 9, the solidity threshold for <italic>k</italic>-mers to 4, and the solidity threshold for the anchors chain computation to 8. Additionally, only windows for which at least two anchors could be found during the segmentation algorithm were processed.</p>
      <sec id="Sec7">
        <title>Datasets</title>
        <p id="Par15">For our experiments, we used simulated PacBio long reads, as well as real PacBio and ONT long reads. PacBio simulated reads were generated with SimLoRD, using the previously mentioned parameters. We generated two datasets with a 12% error rate for <italic>E. coli</italic>, <italic>S. cerevisiae</italic> and <italic>C. elegans</italic>: one with a 30x coverage, and one with a 60x coverage, corresponding to typical sequencing depths in current long reads experiments. As for the real data, we used a 89x coverage dataset from <italic>S. cerevisiae</italic>, a 63x coverage dataset from <italic>D. melanogaster</italic>, and a 29x coverage from <italic>H. sapiens</italic> chr 1, containing ultra-long reads, reaching lengths up to 340 kbp. Human data were sequenced by<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>] and are publicly available with accession number PRJEB23027 (release 4). <italic>D. melanogaster</italic> data are publicly available with accession number SRX3676783. Real <italic>S. cerevisiae</italic> data are publicly available with accession number SRR9617898. Further details for all the datasets are given in Supplementary Table <xref rid="MOESM1" ref-type="media">S1</xref>. We used the reference genomes K-12 substr. MG1655 for <italic>E. coli</italic>, S288C for <italic>S. cerevisiae</italic>, Bristol N2 for <italic>C. elegans</italic>, BDGP Release 6 for <italic>D. melanogaster</italic>, and GRCh38 for <italic>H. sapiens</italic>. Further details on the reference sequences are given in Supplementary Table <xref rid="MOESM1" ref-type="media">S2</xref>.</p>
      </sec>
      <sec id="Sec8">
        <title>Comparison on simulated data</title>
        <p id="Par16">To precisely assess the accuracy of the different correction methods, we first tested them on the simulated PacBio datasets. ELECTOR was used to evaluate the correction accuracy of each method. Correction statistics of all the aforementioned tools on the different datasets, along with their runtime and memory consumption, are given in Table <xref rid="Tab1" ref-type="table">1</xref>. For methods having distinct, easily identifiable, steps for overlapping and correction (<italic>i.e.</italic> Daccord, MECAT and CONSENT), we additionally report runtime and memory consumption of these two processes apart. We ran all the correction experiments on a computer equipped with 16 2.39 GHz cores and 32 GB of RAM. All tools were thus run with 16 threads.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Metrics output by ELECTOR on the simulated PacBio datasets.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" rowspan="2">Corrector</th><th align="left" rowspan="2">Number of bases (Mbp)</th><th align="left" rowspan="2">Error rate (%)</th><th align="left" rowspan="2">Recall (%)</th><th align="left" rowspan="2">Precision (%)</th><th align="left" colspan="2">Overlapping</th><th align="left" colspan="2">Correction</th><th align="left" colspan="2">Total</th></tr><tr><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th></tr></thead><tbody><tr><td align="left" rowspan="6"><italic>E. coli</italic> 30x</td><td align="left">Original</td><td align="left">140</td><td align="left">12.2862</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">130</td><td align="left">0.4156</td><td align="left">99.7647</td><td align="left">99.5887</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">19 min</td><td align="left">4613</td></tr><tr><td align="left">Daccord</td><td align="left"><bold>131</bold></td><td align="left"><bold>0.0248</bold></td><td align="left"><bold>99,9965</bold></td><td align="left"><bold>99,9757</bold></td><td align="left">1 min</td><td align="left">6813</td><td align="left">13 min</td><td align="left">639</td><td align="left">14 min</td><td align="left">6813</td></tr><tr><td align="left">FLAS</td><td align="left">130</td><td align="left">0.2720</td><td align="left">99.9291</td><td align="left">99.7385</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">12 min</td><td align="left">1639</td></tr><tr><td align="left">MECAT</td><td align="left">107</td><td align="left">0.2569</td><td align="left">99.9302</td><td align="left">99.7533</td><td align="left">25 s</td><td align="left"><bold>1600</bold></td><td align="left"><bold>1 min 14 s</bold></td><td align="left">1083</td><td align="left"><bold>1 min 39 s</bold></td><td align="left"><bold>1600</bold></td></tr><tr><td align="left">CONSENT</td><td align="left">130</td><td align="left">0.3111</td><td align="left">99.9328</td><td align="left">99.6934</td><td align="left"><bold>18 s</bold></td><td align="left">2345</td><td align="left">7 min 16 s</td><td align="left"><bold>532</bold></td><td align="left">7 min 34 s</td><td align="left">2345</td></tr><tr><td align="left" rowspan="6"><italic>E. coli</italic> 60x</td><td align="left">Original</td><td align="left">279</td><td align="left">12.2788</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">219</td><td align="left">0.7404</td><td align="left">99.4781</td><td align="left">99.2658</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">24 min</td><td align="left">3674</td></tr><tr><td align="left">Daccord</td><td align="left"><bold>261</bold></td><td align="left"><bold>0.0214</bold></td><td align="left"><bold>99.9971</bold></td><td align="left"><bold>99.9790</bold></td><td align="left">3 min</td><td align="left">18,450</td><td align="left">51 min</td><td align="left">1191</td><td align="left">54 min</td><td align="left">18,450</td></tr><tr><td align="left">FLAS</td><td align="left">260</td><td align="left">0.1547</td><td align="left">99.9546</td><td align="left">99.8526</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">38 min</td><td align="left">2428</td></tr><tr><td align="left">MECAT</td><td align="left">233</td><td align="left">0.1714</td><td align="left">99.9547</td><td align="left">99.8362</td><td align="left"><bold>1 min</bold></td><td align="left"><bold>2387</bold></td><td align="left"><bold>4 min</bold></td><td align="left"><bold>1553</bold></td><td align="left"><bold>5 min</bold></td><td align="left"><bold>2387</bold></td></tr><tr><td align="left">CONSENT</td><td align="left">259</td><td align="left">0.1833</td><td align="left">99.9771</td><td align="left">99.8196</td><td align="left"><bold>1 min</bold></td><td align="left">4693</td><td align="left">25 min</td><td align="left">1757</td><td align="left">26 min</td><td align="left">4693</td></tr><tr><td align="left" rowspan="6"><italic>S. cerevisiae</italic> 30x</td><td align="left">Original</td><td align="left">371</td><td align="left">12.283</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">226</td><td align="left">1.1052</td><td align="left">99.1766</td><td align="left">98.9036</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">29 min</td><td align="left">3681</td></tr><tr><td align="left">Daccord</td><td align="left"><bold>348</bold></td><td align="left"><bold>0.1259</bold></td><td align="left"><bold>99.9874</bold></td><td align="left"><bold>99.8762</bold></td><td align="left">7 min</td><td align="left">31,798</td><td align="left">1 h 12 min</td><td align="left">3487</td><td align="left">1 h 19 min</td><td align="left">31,798</td></tr><tr><td align="left">FLAS</td><td align="left">344</td><td align="left">0.3272</td><td align="left">99.9131</td><td align="left">99.6843</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">29 min</td><td align="left">2935</td></tr><tr><td align="left">MECAT</td><td align="left">285</td><td align="left">0.3040</td><td align="left">99.9160</td><td align="left">99.7072</td><td align="left"><bold>1 min</bold></td><td align="left"><bold>2907</bold></td><td align="left"><bold>4 min</bold></td><td align="left">1612</td><td align="left"><bold>5 min</bold></td><td align="left"><bold>2907</bold></td></tr><tr><td align="left">CONSENT</td><td align="left">344</td><td align="left">0.4102</td><td align="left">99.9192</td><td align="left">99.5956</td><td align="left"><bold>1 min</bold></td><td align="left">5519</td><td align="left">21 min</td><td align="left"><bold>1503</bold></td><td align="left">22 min</td><td align="left">5519</td></tr><tr><td align="left" rowspan="6"><italic>S. cerevisiae</italic> 60x</td><td align="left">Original</td><td align="left">742</td><td align="left">12.2886</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">599</td><td align="left">0.7919</td><td align="left">99.4488</td><td align="left">99.2148</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">1 h 11 min</td><td align="left"><bold>3710</bold></td></tr><tr><td align="left">Daccord</td><td align="left"><bold>695</bold></td><td align="left"><bold>0.0400</bold></td><td align="left"><bold>99.9928</bold></td><td align="left"><bold>99.9606</bold></td><td align="left">10 min</td><td align="left">32,190</td><td align="left">2 h 16 min</td><td align="left">1160</td><td align="left">2 h 26 min</td><td align="left">32,190</td></tr><tr><td align="left">FLAS</td><td align="left">689</td><td align="left">0.2034</td><td align="left">99.9418</td><td align="left">99.8049</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">1 h 30 min</td><td align="left">4984</td></tr><tr><td align="left">MECAT</td><td align="left">616</td><td align="left">0.2088</td><td align="left">99.9428</td><td align="left">99.7996</td><td align="left">4 min</td><td align="left"><bold>4954</bold></td><td align="left"><bold>12 min</bold></td><td align="left"><bold>2412</bold></td><td align="left"><bold>16 min</bold></td><td align="left">4954</td></tr><tr><td align="left">CONSENT</td><td align="left">688</td><td align="left">0.2897</td><td align="left">99.9532</td><td align="left">99.7145</td><td align="left"><bold>2 min</bold></td><td align="left">11,378</td><td align="left">1 h 11 min</td><td align="left">4754</td><td align="left">1 h 13 min</td><td align="left">11,378</td></tr><tr><td align="left" rowspan="6"><italic>C. elegans</italic> 30x</td><td align="left">Original</td><td align="left">3006</td><td align="left">12.2806</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">2773</td><td align="left">0.5008</td><td align="left">99.7103</td><td align="left">99.5040</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">9 h 09 min</td><td align="left"><bold>6921</bold></td></tr><tr><td align="left">Daccord</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">2729</td><td align="left">0.7613</td><td align="left">99.8613</td><td align="left">99.2541</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">3 h 07 min</td><td align="left">10,565</td></tr><tr><td align="left">MECAT</td><td align="left">2084</td><td align="left"><bold>0.3908</bold></td><td align="left"><bold>99.8903</bold></td><td align="left"><bold>99.6212</bold></td><td align="left">27 min</td><td align="left"><bold>10,535</bold></td><td align="left"><bold>21 min</bold></td><td align="left"><bold>2603</bold></td><td align="left"><bold>48 min</bold></td><td align="left">10,535</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>2789</bold></td><td align="left">0.6495</td><td align="left">99.8846</td><td align="left">99.3596</td><td align="left"><bold>16 min</bold></td><td align="left">16,711</td><td align="left">3 h 40 min</td><td align="left">5338</td><td align="left">3 h 56 min</td><td align="left">16,711</td></tr><tr><td align="left" rowspan="6"><italic>C. elegans 60x</italic></td><td align="left">Original</td><td align="left">6024</td><td align="left">12.2825</td><td align="left">_</td><td align="left">_</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">5112</td><td align="left">0.7934</td><td align="left">99.4573</td><td align="left">99.2131</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">9 h 30 min</td><td align="left"><bold>7050</bold></td></tr><tr><td align="left">Daccord</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">5584</td><td align="left">0.3997</td><td align="left">99.9175</td><td align="left">99.6104</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">10 h 45 min</td><td align="left">13,682</td></tr><tr><td align="left">MECAT</td><td align="left">4938</td><td align="left"><bold>0.2675</bold></td><td align="left"><bold>99.9258</bold></td><td align="left"><bold>99.7415</bold></td><td align="left">1 h 28 min</td><td align="left"><bold>10,563</bold></td><td align="left"><bold>1 h 15 min</bold></td><td align="left"><bold>3775</bold></td><td align="left"><bold>2 h 43 min</bold></td><td align="left">10,563</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>5587</bold></td><td align="left">0.3858</td><td align="left">99.9428</td><td align="left">99.6201</td><td align="left"><bold>56 min</bold></td><td align="left">15,732</td><td align="left">12 h 50 min</td><td align="left">7921</td><td align="left">13 h 46 min</td><td align="left">15,732</td></tr></tbody></table><table-wrap-foot><p>Daccord results are missing for the two <italic>C. elegans</italic> datasets, as DALIGNER failed to perform alignment, reporting an error upon start, even when ran on a cluster node with 28 2.4 GHz cores and 128 GB of RAM. Recall and precision are not reported for original reads, since they cannot be computed from uncorrected reads.</p><p>Best results for each metric is highlighted in bold.</p></table-wrap-foot></table-wrap></p>
        <p id="Par17">Daccord clearly performed the best in terms of number of bases and quality, outperforming all the other methods on the <italic>E. coli</italic> and the <italic>S. cerevisiae</italic> datasets. However, the overlapping step, relying on actual alignment of the long reads against each other, consumed high amounts of memory, 3x to 11x more than CONSENT or MECAT mapping strategies. As a result, Daccord could not scale to the <italic>C. elegans</italic> datasets, DALIGNER reporting an error upon start, even when run on a cluster node equipped with 128 GB of RAM. On the contrary, Canu displayed the highest error rates on all the datasets, except on the <italic>C. elegans</italic> dataset with a 30x coverage, but consumed relatively stable, low amounts of memory. In particular, on the two <italic>C. elegans</italic> datasets, it displayed the lowest memory consumption among all the other methods.</p>
        <p id="Par18">MECAT performed the best in terms of runtime, outperforming all the other tools on all the datasets. Its overlapping strategy was also highly efficient, and displayed the lowest memory consumption among all the other strategies, on all the datasets. However, compared to Minimap2 (the overlapping strategy adopted in CONSENT) MECAT’s overlapping strategy displayed higher runtimes, although it remained faster than Daccord’s DALIGNER. Minimap2’s memory consumption, however, was larger than that of MECAT’s overlapping strategy, on all the datasets. The memory consumption of Minimap2 can nonetheless easily be reduced, at the expense of a slightly larger runtime, by decreasing the size of the index used for computing the overlaps, which CONSENT sets to 1 Gbp by default.</p>
        <p id="Par19">Compared to both FLAS and CONSENT, MECAT displayed lower number of bases on all the datasets. As for FLAS, this can be explained by the fact that it is a MECAT wrapper, allowing to retrieve additional overlaps, and thus correct a greater number long reads. As a result, since it relies on MECAT’s error correction strategy, FLAS displayed highly similar memory consumption. Runtime was however higher, due to the additional steps allowing to retrieve supplementary overlaps, and to the resulting higher number of reads to correct. Numbers of bases and error rates of FLAS and CONSENT were highly similar on all the datasets, varying by 0.12% at most, on the <italic>S. cerevisiae</italic> dataset with a 30x coverage. CONSENT was also faster than FLAS on the <italic>E. coli</italic> and <italic>S. cerevisiae</italic> datasets. However, on the <italic>C. elegans</italic> datasets, CONSENT displayed slightly higher runtimes.</p>
        <p id="Par20">As for the memory consumption of the error correction step, CONSENT was less efficient than MECAT on most datasets. This can be explained by the fact that CONSENT loads the correction jobs into a queue of default size 100,000. This queue thus loads the necessary data for 100,000 correction tasks into memory at once. We then iteratively allocate new tasks to threads as they become available. Reducing the size of this queue would allow CONSENT to consume less memory, at the expense of a slightly higher runtime, since the queue would have to be repopulated more often.</p>
      </sec>
      <sec id="Sec9">
        <title>Comparison on real data</title>
        <p id="Par21">We then evaluated the different correction methods on a real PacBio <italic>S. cerevisiae</italic> dataset, as well as on larger, real ONT datasets from <italic>D. melanogaster</italic> and <italic>H. sapiens</italic> (chr 1). For these datasets, we not only evaluate how well the corrected long reads realign to the reference genome, but also how well they assemble. For the alignment assessment, we report how many reads were corrected, their total number of bases, their N50, the proportion of corrected reads that could be aligned, the average identity of the alignments, as well as the genome coverage, that is, the percentage of bases of the reference genome to which at least a nucleotide aligned. For the assembly assessment, we report the overall number of contigs, the number of contigs that could be aligned, the NGA50 and NGA75, and, once again, the genome coverage. We obtained alignment statistics using ELECTOR’s second module, which performs alignment to the reference genome with Minimap2. We performed assemblies using Minimap2 and Miniasm<sup><xref ref-type="bibr" rid="CR27">27</xref></sup>. Moreover, for the <italic>H. sapiens</italic> (chr 1) dataset, we performed additional assembly experiments using the more modern and sophisticated assembler Flye<sup><xref ref-type="bibr" rid="CR28">28</xref></sup>. Assembly statistics were obtained with QUAST-LG<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>. Results are given in Table <xref rid="Tab2" ref-type="table">2</xref> for the alignment assessment, and in Table <xref rid="Tab3" ref-type="table">3</xref> for the assembly assessment. Runtimes and memory consumption of the different methods are also given in Table <xref rid="Tab2" ref-type="table">2</xref>. As for the simulated data, we report runtime and memory consumption of the overlapping and correction steps apart, when possible. We ran all the correction experiments on a cluster node equipped with 28 2.39 GHz cores and 128 GB of RAM. All tools were thus run with 28 threads.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Statistics of the real long reads, before and after correction with the different methods.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" rowspan="2">Corrector</th><th align="left" rowspan="2">Number of reads</th><th align="left" rowspan="2">Number of bases (Mbp)</th><th align="left" rowspan="2">N50 (bp)</th><th align="left" rowspan="2">Aligned reads (%)</th><th align="left" rowspan="2">Alignment identity (%)</th><th align="left" rowspan="2">Genome coverage (%)</th><th align="left" colspan="2">Overlapping</th><th align="left" colspan="2">Correction</th><th align="left" colspan="2">Total</th></tr><tr><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th></tr></thead><tbody><tr><td align="left" rowspan="6"><italic>S. cerevisiae</italic></td><td align="left">Original</td><td align="left">121,640</td><td align="left">1083</td><td align="left">12,048</td><td align="left">96.27</td><td align="left">84.63</td><td align="left">99.65</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">74,658</td><td align="left">644</td><td align="left">11,171</td><td align="left">99.67</td><td align="left">96.67</td><td align="left">99.18</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">1 h 24 min</td><td align="left">3870</td></tr><tr><td align="left">Daccord<inline-formula id="IEq4"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M4"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq4.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">80,087</td><td align="left">665</td><td align="left">10,815</td><td align="left">99.78</td><td align="left">97.65</td><td align="left">99.16</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">1 h 02 min</td><td align="left">6195</td></tr><tr><td align="left">MECAT</td><td align="left">46,614</td><td align="left">477</td><td align="left">11,123</td><td align="left"><bold>99.84</bold></td><td align="left"><bold>97.91</bold></td><td align="left">98.21</td><td align="left"><bold>2 min</bold></td><td align="left"><bold>7176</bold></td><td align="left"><bold>4 min</bold></td><td align="left"><bold>3023</bold></td><td align="left"><bold>6 min</bold></td><td align="left"><bold>7176</bold></td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>116,391</bold></td><td align="left"><bold>965</bold></td><td align="left"><bold>11,331</bold></td><td align="left">99.60</td><td align="left">95.47</td><td align="left"><bold>99.52</bold></td><td align="left">4 min</td><td align="left">19,828</td><td align="left">1 h 13 min</td><td align="left">3108</td><td align="left">1 h 17 min</td><td align="left">19,828</td></tr><tr><td align="left" rowspan="6"><italic>D. melanogaster</italic></td><td align="left">Original</td><td align="left">1,327,569</td><td align="left">9064</td><td align="left">11,853</td><td align="left">85.52</td><td align="left">85.43</td><td align="left">98.47</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">829,965</td><td align="left">6993</td><td align="left"><bold>12,694</bold></td><td align="left">98.05</td><td align="left">95.20</td><td align="left">97.89</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">14 h 04 min</td><td align="left"><bold>10,295</bold></td></tr><tr><td align="left">Daccord<inline-formula id="IEq5"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M6"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq5.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">855,275</td><td align="left">7866</td><td align="left">11,742</td><td align="left">95.65</td><td align="left">94.99</td><td align="left">98.09</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">10 h 18 min</td><td align="left">18,820</td></tr><tr><td align="left">MECAT</td><td align="left">827,490</td><td align="left">7288</td><td align="left">11,676</td><td align="left"><bold>99.87</bold></td><td align="left">96.52</td><td align="left">97.34</td><td align="left"><bold>28 min</bold></td><td align="left"><bold>13,443</bold></td><td align="left"><bold>1 h 26 min</bold></td><td align="left">7724</td><td align="left"><bold>1 h 54 min</bold></td><td align="left">13,443</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>1,096,046</bold></td><td align="left"><bold>8308</bold></td><td align="left">12,181</td><td align="left">98.66</td><td align="left"><bold>97.17</bold></td><td align="left"><bold>98.20</bold></td><td align="left">1 h 07 min</td><td align="left">31,282</td><td align="left">8 h 53 min</td><td align="left"><bold>5639</bold></td><td align="left">10 h 00 min</td><td align="left">31,282</td></tr><tr><td align="left" rowspan="6"><italic>H. sapiens</italic> (chr 1)</td><td align="left">Original</td><td align="left">1,075,867</td><td align="left">7256</td><td align="left">10,568</td><td align="left">88.24</td><td align="left">82.40</td><td align="left">92.46</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">Canu</td><td align="left">717,436</td><td align="left">5605</td><td align="left"><bold>11,002</bold></td><td align="left">97.60</td><td align="left">90.40</td><td align="left">92.33</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">22 h 06 min</td><td align="left">12,802</td></tr><tr><td align="left">Daccord<inline-formula id="IEq6"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^{1,2}$$\end{document}</tex-math><mml:math id="M8"><mml:msup><mml:mrow/><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq6.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS<inline-formula id="IEq7"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M10"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq7.gif"/></alternatives></inline-formula></td><td align="left">670,708</td><td align="left">5695</td><td align="left">10,198</td><td align="left">99.06</td><td align="left">91.00</td><td align="left">92.37</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">4 h 57 min</td><td align="left">14,957</td></tr><tr><td align="left">MECAT<inline-formula id="IEq8"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M12"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq8.gif"/></alternatives></inline-formula></td><td align="left">655,314</td><td align="left">5479</td><td align="left">10,343</td><td align="left"><bold>99.95</bold></td><td align="left">91.69</td><td align="left">91.44</td><td align="left">26 min</td><td align="left"><bold>11,075</bold></td><td align="left"><bold>1 h 27 min</bold></td><td align="left"><bold>4591</bold></td><td align="left"><bold>1 h 53 min</bold></td><td align="left"><bold>11,075</bold></td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>893,738</bold></td><td align="left"><bold>6502</bold></td><td align="left">10,870</td><td align="left">98.89</td><td align="left"><bold>93.15</bold></td><td align="left"><bold>92.38</bold></td><td align="left"><bold>23 min</bold></td><td align="left">17,290</td><td align="left">2 h 47 min</td><td align="left">4645</td><td align="left">3 h 10 min</td><td align="left">17,290</td></tr></tbody></table><table-wrap-foot><p>Best results for each metric is highlighted in bold.</p><p><inline-formula id="IEq2"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M14"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq2.gif"/></alternatives></inline-formula>Reads longer than 50 kbp were filtered out, as ultra-long reads caused the programs to stop with an error. There were 1824 such reads in the original dataset, accounting for a total number of 135,364,312 bp.</p><p><inline-formula id="IEq3"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M16"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq3.gif"/></alternatives></inline-formula>Daccord could not be run on these two datasets, due to errors reported by DALIGNER.</p></table-wrap-foot></table-wrap><table-wrap id="Tab3"><label>Table 3</label><caption><p>Statistics of the assemblies generated from the raw and corrected real long reads.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Dataset</th><th align="left">Corrector</th><th align="left">Contigs</th><th align="left">Aligned contigs (%)</th><th align="left">NGA50 (bp)</th><th align="left">NGA75 (bp)</th><th align="left">Genome coverage (%)</th><th align="left">Errors / 100 kbp</th><th align="left">Misassemblies</th></tr></thead><tbody><tr><td align="left" rowspan="6"><italic>S. cerevisiae</italic></td><td align="left">Original</td><td align="left">29</td><td align="left">93.10</td><td align="left">408,751</td><td align="left">179,653</td><td align="left">84.67</td><td align="left">10,514</td><td align="left">45</td></tr><tr><td align="left">Canu</td><td align="left">27</td><td align="left"><bold>100.00</bold></td><td align="left">549,622</td><td align="left">426,490</td><td align="left"><bold>96.64</bold></td><td align="left">1291</td><td align="left">53</td></tr><tr><td align="left">Daccord<inline-formula id="IEq11"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M18"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq11.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left"><bold>21</bold></td><td align="left"><bold>100.00</bold></td><td align="left">542,516</td><td align="left"><bold>447,884</bold></td><td align="left">95.63</td><td align="left">1423</td><td align="left">43</td></tr><tr><td align="left">MECAT</td><td align="left">22</td><td align="left"><bold>100.00</bold></td><td align="left"><bold>550,249</bold></td><td align="left">305,358</td><td align="left">95.81</td><td align="left"><bold>1154</bold></td><td align="left"><bold>38</bold></td></tr><tr><td align="left">CONSENT</td><td align="left">37</td><td align="left">97.30</td><td align="left">524,568</td><td align="left">419,018</td><td align="left">94.68</td><td align="left">1548</td><td align="left">60</td></tr><tr><td align="left" rowspan="6"><italic>D. melanogaster</italic></td><td align="left">Original</td><td align="left">423</td><td align="left">96.45</td><td align="left">864,011</td><td align="left">159,590</td><td align="left">83.22</td><td align="left">10,690</td><td align="left">810</td></tr><tr><td align="left">Canu</td><td align="left">410</td><td align="left">92.93</td><td align="left">2,757,690</td><td align="left">822,577</td><td align="left"><bold>92.95</bold></td><td align="left">1896</td><td align="left">845</td></tr><tr><td align="left">Daccord<inline-formula id="IEq12"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M20"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq12.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">407</td><td align="left">98.53</td><td align="left">1,123,346</td><td align="left">363,017</td><td align="left">92.16</td><td align="left">2736</td><td align="left">838</td></tr><tr><td align="left">MECAT</td><td align="left">310</td><td align="left"><bold>99.68</bold></td><td align="left">1,414,076</td><td align="left">480,297</td><td align="left">92.02</td><td align="left">1731</td><td align="left"><bold>554</bold></td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>287</bold></td><td align="left">98.61</td><td align="left"><bold>5,906,563</bold></td><td align="left"><bold>1,143,682</bold></td><td align="left">92.26</td><td align="left"><bold>1502</bold></td><td align="left">804</td></tr><tr><td align="left" rowspan="6"><italic>H. sapiens</italic> (chr 1)</td><td align="left">Original<inline-formula id="IEq13"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M22"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq13.gif"/></alternatives></inline-formula></td><td align="left">201</td><td align="left">93.53</td><td align="left">1,008,692</td><td align="left">_</td><td align="left">77.52</td><td align="left">11,318</td><td align="left">98</td></tr><tr><td align="left">Canu</td><td align="left">361</td><td align="left">98.61</td><td align="left">946,029</td><td align="left">245,015</td><td align="left">94.85</td><td align="left">4689</td><td align="left">49</td></tr><tr><td align="left">Daccord<inline-formula id="IEq14"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M24"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq14.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">259</td><td align="left"><bold>100.00</bold></td><td align="left">1,378,242</td><td align="left">287,113</td><td align="left">94.89</td><td align="left">4413</td><td align="left">50</td></tr><tr><td align="left">MECAT</td><td align="left">237</td><td align="left">100.00</td><td align="left">1,698,601</td><td align="left">289,968</td><td align="left"><bold>94.97</bold></td><td align="left"><bold>4404</bold></td><td align="left"><bold>44</bold></td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>154</bold></td><td align="left">92.21</td><td align="left"><bold>2,777,701</bold></td><td align="left"><bold>736,664</bold></td><td align="left">92.30</td><td align="left">4486</td><td align="left">78</td></tr><tr><td align="left" rowspan="6"><italic>H. sapiens</italic> (chr 1) (Flye)</td><td align="left">Original</td><td align="left">319</td><td align="left">97.81</td><td align="left">11,231,592</td><td align="left">2,893,011</td><td align="left"><bold>96.24</bold></td><td align="left">2204</td><td align="left">44</td></tr><tr><td align="left">Canu</td><td align="left">181</td><td align="left">98.90</td><td align="left">3,022,928</td><td align="left">1,237,577</td><td align="left">95.69</td><td align="left">2521</td><td align="left"><bold>27</bold></td></tr><tr><td align="left">Daccord<inline-formula id="IEq15"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M26"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq15.gif"/></alternatives></inline-formula></td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td><td align="left">_</td></tr><tr><td align="left">FLAS</td><td align="left">169</td><td align="left"><bold>99.41</bold></td><td align="left">7,733,334</td><td align="left">2,298,510</td><td align="left">95.73</td><td align="left">2677</td><td align="left">33</td></tr><tr><td align="left">MECAT</td><td align="left">170</td><td align="left">98.82</td><td align="left">7,625,451</td><td align="left">1,475,937</td><td align="left">95.61</td><td align="left">2732</td><td align="left">36</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>153</bold></td><td align="left">98.69</td><td align="left"><bold>12,088,173</bold></td><td align="left"><bold>3,089,752</bold></td><td align="left">95.71</td><td align="left"><bold>2057</bold></td><td align="left">28</td></tr></tbody></table><table-wrap-foot><p>Best results for each metric is highlighted in bold.</p><p><inline-formula id="IEq9"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M28"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq9.gif"/></alternatives></inline-formula>As previously mentioned, Daccord results on the three datasets are absent, since it could not be run. <inline-formula id="IEq10"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M30"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq10.gif"/></alternatives></inline-formula>For the assembly of the original reads on the <italic>H. sapiens</italic> (chr 1) dataset, QUAST-LG did not provide a metric for the NGA75.</p></table-wrap-foot></table-wrap></p>
        <p id="Par22">On these three datasets, Daccord failed to run, as DALIGNER could not perform alignment, for the same reason as for the simulated <italic>C. elegans</italic> datasets. For all the datasets, CONSENT corrected the largest number of reads, output the largest number of bases, and reached the largest genome coverage. On the <italic>S. cerevisiae</italic> dataset, CONSENT reached slightly lower alignment identity than the other tools. However, on the two more complex ONT datasets, CONSENT displayed the highest alignment identity. Additionally, the N50 of CONSENT was the highest on the <italic>S. cerevisiae</italic> dataset, and was higher than that of all the others methods, except Canu, on the two ONT datasets.</p>
        <p id="Par23">When it comes to runtime and memory consumption, MECAT outperformed all the other methods, as in the experiments on simulated data. However, it is worth noting that the runtime was comparable to other methods, and that CONSENT was the second fasted tool after MECAT on the two ONT datasets. Finally, MECAT reached the highest proportion of aligned reads, on all datasets, although CONSENT was close, since only 0.24–1.21% fewer reads could be aligned.</p>
        <p id="Par24">Moreover, on the <italic>H. sapiens</italic> (chr 1) dataset, CONSENT and Canu were the only tools able to deal with ultra-long reads. Indeed, other methods reported errors when attempting to correct the original dataset. As a result, in order to allow these methods to perform correction, we had to manually remove the reads longer than 50 kbp. There were 1,824 such reads, accounting for a total number of 135,364,312 bp. However, even if it managed to scale to the correction of ultra-long reads, Canu was almost seven times slower than CONSENT, making CONSENT the only tool to efficiently scale to ultra-long reads.</p>
        <p id="Par25">On the <italic>S. cerevisiae</italic> dataset, the assembly yielded from FLAS corrected reads outperformed all the other assemblies in terms of number of contigs. Oppositely, the assembly yielded from CONSENT corrected reads displayed the largest number of contigs. It also displayed more errors per 100 kbp and a slightly higher number of misassemblies compared to other assemblies. Canu corrected reads yielded the assembly covering the largest proportion of the reference genome, whereas MECAT corrected reads yielded the assembly displaying the lowest number of misassemblies and errors per 100 kbp. However, all assemblies were comparable in terms of NGA50 and NGA75, and CONSENT even outperformed MECAT in terms of NGA75.</p>
        <p id="Par26">On the <italic>D. melanogaster</italic> dataset, the assembly yielded from CONSENT corrected reads outperformed all the other assemblies in terms of number of contigs, NGA50, NGA75, as well as error rate per 100 kbp. In particular, the NGA50 of the CONSENT assembly was 2.1-6.8 times larger than that of other assemblies. The assembly yielded from Canu corrected reads outperformed all the other assemblies in terms of genome coverage, but was composed of the highest number of contigs, after the assembly obtained from the raw reads. However, the genome coverage of the CONSENT assembly was slightly larger than that of FLAS and MECAT. Finally, in terms of misassemblies, the assembly generated from MECAT corrected reads outperformed the other assemblies, although they all remained comparable on this metric.</p>
        <p id="Par27">On the <italic>H. sapiens</italic> (chr 1) dataset, the assembly obtained from CONSENT corrected reads once again outperformed all the other assemblies in terms of number of contigs, NGA50, and NGA75. In particular, the NGA50 of the CONSENT assembly was almost 1.6-4.3 times larger than that of other assemblies. However, 12 contigs of the CONSENT assembly could not be aligned to the reference. As a result, compared to the assemblies obtained from FLAS and MECAT corrected reads, the assembly yielded from the CONSENT corrected reads covered 2.6% less of the reference sequence, and displayed a higher error rate per 100 kbp. These unaligned contigs and differences could likely be reduced by further adapting both CONSENT and Miniasm parameters. Moreover, the assembly yielded from CONSENT corrected reads displayed a slightly higher number of misassemblies, although it remained comparable to that of other assemblies. On this metric, the assembly generated from MECAT corrected reads once again slightly outperformed other assemblies.</p>
        <p id="Par28">In addition, as we previously mentioned, we also performed additional assembly experiments using the more modern and sophisticated assembler Flye on the <italic>H. sapiens</italic> (chr 1) dataset. Here, the assembly yielded from CONSENT corrected reads displayed the smallest number of contigs, and the lowest number of errors per 100 kbp. Its number of misassemblies was also smaller than that of all other assemblies, except the one generated from Canu corrected reads. Morever, the proportion of aligned contigs and the genome coverage were highly similar for all assemblies. Interestingly, only the assembly generated from CONSENT corrected reads allowed to reach larger NGA50 and NGA75 than the assembly generated from the raw reads. Compared to other correction tools, CONSENT is the only method allowing to enhance the quality of the Flye assembly in such a way. Indeed, all the other assemblies, despite displaying a smaller number of contigs than the assembly generated from raw reads, reached smaller NGA50 and NGA75. These results thus underline the fact that Flye can benefit from CONSENT correction to generate higher quality assemblies.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Assembly polishing</title>
      <p id="Par29">As an additional feature, CONSENT also allows to perform assembly polishing. The process is pretty straightforward. Indeed, instead of computing overlaps between the long reads, as presented in the previous sections, overlaps are simply computed between the assembled contigs and the long reads used for the assembly. The rest of the pipeline remains the same. We present assembly polishing results on the simulated <italic>E. coli</italic>, <italic>S. cerevisiae</italic>, and <italic>C. elegans</italic> datasets with a 60x coverage, as well as on the real <italic>S. cerevisiae</italic>, <italic>D. melanogaster</italic> and <italic>H. sapiens</italic> (chr 1) datasets. We compare CONSENT to RACON<sup><xref ref-type="bibr" rid="CR30">30</xref></sup>, a state-of-the-art assembly polishing method. Results are presented in Table <xref rid="Tab4" ref-type="table">4</xref>. We ran all the polishing experiments on a cluster node equipped with 28 2.39 GHz cores and 128 GB of RAM. All tools were thus run with 28 threads. Moreover, we only compare the runtimes of the actual polishing steps of the tools. Thus, the runtime of Minimap2, and the runtime of CONSENT pre-processing steps (sorting and reformatting the overlaps file) are not taken into account in the comparisons. Although these pre-processing steps can be slow for large datasets and large overlaps files, and are not required by RACON, we would like to underline that they allow to avoid the burden of loading the full overlaps file into memory, as required by RACON. The benefits of these pre-processing steps can be confirmed by comparing the memory consumption of CONSENT and RACON, as commented below. Moreover, to further emphasize the interest of these pre-processing steps, additional experiments on another human dataset (accession number NA12878, release 6), which are not presented here, have shown RACON could require more than 2 TB of RAM, while CONSENT displayed a peak of 39 GB.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Statistics of the assemblies, before and after polishing with RACON and CONSENT.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Dataset</th><th align="left">Method</th><th align="left">Contigs</th><th align="left">Aligned contigs (%)</th><th align="left">NGA50 (bp)</th><th align="left">NGA75 (bp)</th><th align="left">Genome coverage (%)</th><th align="left">Errors / 100 kbp</th><th align="left">Misassemblies</th><th align="left">Runtime</th><th align="left">Memory (MB)</th></tr></thead><tbody><tr><td align="left" rowspan="3"><italic>E. coli 60x</italic></td><td align="left">Original</td><td align="left"><bold>1</bold></td><td align="left"><bold>100.00</bold></td><td align="left"><bold>4,939,014</bold></td><td align="left"><bold>4,939,014</bold></td><td align="left"><bold>99.91</bold></td><td align="left">10,721</td><td align="left"><bold>0</bold></td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left"><bold>1</bold></td><td align="left"><bold>100.00</bold></td><td align="left">4,663,914</td><td align="left">4,663,914</td><td align="left">99.90</td><td align="left">499</td><td align="left"><bold>0</bold></td><td align="left">5 min 55 sec</td><td align="left"><bold>643</bold></td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>1</bold></td><td align="left"><bold>100.00</bold></td><td align="left">4,638,842</td><td align="left">4,638,842</td><td align="left"><bold>99.91</bold></td><td align="left"><bold>117</bold></td><td align="left"><bold>0</bold></td><td align="left"><bold>30 sec</bold></td><td align="left">786</td></tr><tr><td align="left" rowspan="3"><italic>S. cerevisiae 60x</italic></td><td align="left">Original</td><td align="left"><bold>29</bold></td><td align="left"><bold>100.00</bold></td><td align="left"><bold>579,247</bold></td><td align="left"><bold>456,470</bold></td><td align="left"><bold>96.14</bold></td><td align="left">10,694</td><td align="left"><bold>5</bold></td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left"><bold>29</bold></td><td align="left"><bold>100.00</bold></td><td align="left">539,472</td><td align="left">346,116</td><td align="left">96.09</td><td align="left">637</td><td align="left"><bold>5</bold></td><td align="left">15 min 47 sec</td><td align="left">1703</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>29</bold></td><td align="left"><bold>100.00</bold></td><td align="left">532,189</td><td align="left">332,977</td><td align="left">96.05</td><td align="left"><bold>217</bold></td><td align="left">7</td><td align="left"><bold>1 min 49 sec</bold></td><td align="left"><bold>1052</bold></td></tr><tr><td align="left" rowspan="3"><italic>C. elegans 60x</italic></td><td align="left">Original</td><td align="left"><bold>47</bold></td><td align="left"><bold>100.00</bold></td><td align="left">5,201,998</td><td align="left">2,511,520</td><td align="left"><bold>99.78</bold></td><td align="left">10,974</td><td align="left">5</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left"><bold>47</bold></td><td align="left">97.87</td><td align="left"><bold>6,405,523</bold></td><td align="left"><bold>2,726,529</bold></td><td align="left">99.74</td><td align="left">819</td><td align="left"><bold>2</bold></td><td align="left">2 h 24 min</td><td align="left">14,288</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>47</bold></td><td align="left"><bold>100.00</bold></td><td align="left">6,340,451</td><td align="left">2,699,930</td><td align="left">99.73</td><td align="left"><bold>375</bold></td><td align="left">3</td><td align="left"><bold>11 min</bold></td><td align="left"><bold>3648</bold></td></tr><tr><td align="left" rowspan="3"><italic>S. cerevisiae</italic> real</td><td align="left">Original</td><td align="left"><bold>29</bold></td><td align="left">93.10</td><td align="left">408,751</td><td align="left">179,653</td><td align="left">84.67</td><td align="left">10,514</td><td align="left"><bold>45</bold></td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left"><bold>29</bold></td><td align="left"><bold>100.00</bold></td><td align="left">518,943</td><td align="left">330,455</td><td align="left">93.74</td><td align="left"><bold>1193</bold></td><td align="left">52</td><td align="left">1 h 17 min</td><td align="left">3708</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>29</bold></td><td align="left"><bold>100.00</bold></td><td align="left"><bold>522,799</bold></td><td align="left"><bold>411,537</bold></td><td align="left"><bold>94.23</bold></td><td align="left">1400</td><td align="left"><bold>50</bold></td><td align="left"><bold>2 min</bold></td><td align="left"><bold>1667</bold></td></tr><tr><td align="left" rowspan="3"><italic>D. melanogaster</italic></td><td align="left">Original</td><td align="left"><bold>423</bold></td><td align="left">96.45</td><td align="left">864,011</td><td align="left">159,590</td><td align="left">83.20</td><td align="left">10,690</td><td align="left"><bold>810</bold></td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left">422</td><td align="left">98.34</td><td align="left"><bold>1,446,703</bold></td><td align="left"><bold>552,532</bold></td><td align="left"><bold>93.03</bold></td><td align="left"><bold>961</bold></td><td align="left">1013</td><td align="left">3 h 29 min</td><td align="left">19,508</td></tr><tr><td align="left">CONSENT</td><td align="left">422</td><td align="left"><bold>98.82</bold></td><td align="left">1,235,999</td><td align="left">465,133</td><td align="left">92.00</td><td align="left">2213</td><td align="left">1024</td><td align="left"><bold>1 h 14 min</bold></td><td align="left"><bold>5358</bold></td></tr><tr><td align="left" rowspan="3"><italic>H. sapiens</italic> (chr 1)</td><td align="left">Original<inline-formula id="IEq17"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M32"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq17.gif"/></alternatives></inline-formula></td><td align="left"><bold>201</bold></td><td align="left">93.53</td><td align="left">1,008,692</td><td align="left">_</td><td align="left">77.52</td><td align="left">11,318</td><td align="left">98</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">RACON</td><td align="left"><bold>201</bold></td><td align="left">97.01</td><td align="left"><bold>3,481,900</bold></td><td align="left"><bold>1,282,763</bold></td><td align="left"><bold>95.69</bold></td><td align="left"><bold>2393</bold></td><td align="left"><bold>57</bold></td><td align="left">2 h 30 min</td><td align="left">16,202</td></tr><tr><td align="left">CONSENT</td><td align="left"><bold>201</bold></td><td align="left"><bold>97.51</bold></td><td align="left">3,295,244</td><td align="left">924,899</td><td align="left">94.16</td><td align="left">4727</td><td align="left">65</td><td align="left"><bold>31 min</bold></td><td align="left"><bold>5399</bold></td></tr></tbody></table><table-wrap-foot><p>The missing contig for the CONSENT and RACON polishings on the <italic>D. melanogaster</italic> dataset is 428 bp long, and could not be polished, due to the window size of the two methods being larger (500).</p><p>Best results for each metric is highlighted in bold.</p><p><inline-formula id="IEq16"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M34"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq16.gif"/></alternatives></inline-formula>For the assembly of the original reads on the <italic>H. sapiens</italic> (chr 1) dataset, QUAST-LG did not provide a metric for the NGA75.</p></table-wrap-foot></table-wrap></p>
      <p id="Par30">These results show that CONSENT outperformed RACON in terms of quality of the results, especially dealing better with errors, and thus greatly reducing the error rate per 100 kbp, on the <italic>E. coli</italic>, <italic>S. cerevisiae</italic>, and <italic>C. elegans</italic> datasets. RACON outperformed CONSENT in terms of NGA50, NGA75, genome coverage, and number of misassemblies, but the two methods were highly comparable on these three datasets. Oppositely, RACON outperformed CONSENT in terms of errors per 100 kbp on the <italic>S. cerevisiae</italic> real dataset, but CONSENT outperformed RACON in terms of number of misassemblies NGA50, NGA75, and genome coverage.</p>
      <p id="Par31">For the larger, eukaryotic <italic>D. melanogaster</italic> dataset, RACON outperformed CONSENT in terms of number of errors per 100 kbp, and genome coverage, but the NGA50, NGA75 of the two methods remained comparable. On the <italic>H. sapiens</italic> (chr 1) dataset, RACON once again outperformed CONSENT in terms of error rate and genome coverage, and also displayed larger NGA50 and NGA75. However, polishing the assembly with CONSENT allowed to align a greater proportion of contigs, compared to both the raw and the RACON polished assembly. On these two datasets, RACON slightly outperformed CONSENT in terms of number of misassemblies, although the two methods remained highly comparable. 2Additionally, on all the datasets, the polishing step of CONSENT was 3x to 38x faster than RACON, and also consumed up to four times less memory, thanks to its pre-processing steps.</p>
    </sec>
    <sec id="Sec11">
      <title>Results on a full human dataset</title>
      <p id="Par32">To further validate the scalability of CONSENT, we present results on a full ONT human dataset. This dataset is composed of 113 Gbp, displays an error rate of 17%, and contains ultra-long reads reaching lengths up to 1.5 Mbp. Data were sequenced by<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>] and are publicly available with accession number PRJEB23027. Further details are given in Supplementary Table <xref rid="MOESM1" ref-type="media">S1</xref>.</p>
      <p id="Par33">In this experiment, we not only evaluate how CONSENT behaves on such a large dataset, but also study the impact of the correction / assembly order on the quality of the results. We thus correct the raw data with CONSENT, and then assemble the corrected long reads, but also assemble the raw long reads first, and then polish the assembly with CONSENT. Alignment statistics of the raw and corrected long reads are presented in Table <xref rid="Tab5" ref-type="table">5</xref>, while statistics of the different assemblies are presented in Table <xref rid="Tab6" ref-type="table">6</xref>. We only report CONSENT results, since other tools could not scale to this dataset. Indeed, Daccord crashed upon start due to memory limitations, while FLAS and MECAT reported errors during correction, owing to the presence of ultra-long reads, as reported in previous experiments. Canu, on the other hand, did not crash, but required an unreasonable amount of time to run. We ran all the experiments on a cluster node equipped with 28 2.39 GHz cores and 128 GB of RAM. Tools were thus run with 28 threads.<table-wrap id="Tab5"><label>Table 5</label><caption><p>Statistics of the full <italic>H. sapiens</italic> dataset, before and after correction with CONSENT.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Corrector</th><th align="left" rowspan="2">Number of reads</th><th align="left" rowspan="2">Number of bases (Mbp)</th><th align="left" rowspan="2">N50 (bp)</th><th align="left" rowspan="2">Aligned reads (%)</th><th align="left" rowspan="2">Alignment identity (%)</th><th align="left" rowspan="2">Genome coverage (%)</th><th align="left" colspan="2">Overlapping</th><th align="left" colspan="2">Correction</th><th align="left" colspan="2">Total</th></tr><tr><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th><th align="left">Runtime</th><th align="left">Memory (MB)</th></tr></thead><tbody><tr><td align="left">Original</td><td align="left"><bold>15,243,243</bold></td><td align="left"><bold>112,970</bold></td><td align="left">12,196</td><td align="left">80.57</td><td align="left">82.74</td><td align="left"><bold>93.56</bold></td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td><td align="left">N/A</td></tr><tr><td align="left">CONSENT</td><td align="left">11,913,704</td><td align="left">102,543</td><td align="left"><bold>12,880</bold></td><td align="left"><bold>98.44</bold></td><td align="left"><bold>93.86</bold></td><td align="left">93.35</td><td align="left">3 days 21 h</td><td align="left">98,332</td><td align="left">6 days 11 h</td><td align="left">45,296</td><td align="left">10 days 8 h</td><td align="left">98,332</td></tr></tbody></table><table-wrap-foot><p>Best results for each metric is highlighted in bold.</p></table-wrap-foot></table-wrap></p>
      <p id="Par34">Alignment statistics of Table <xref rid="Tab5" ref-type="table">5</xref> show that CONSENT managed to process the whole dataset in 10 days, and required less than 100 GB of RAM. More precisely, the more computationally expensive step, in terms of memory consumption, was actually the overlaps computation, and not the error correction itself. The corrected reads displayed a higher N50 than the raw reads, the longest read reaching 929 kbp. Moreover, almost 99% of the reads could be realigned to the reference genome. The average identity of the alignments reached more than 93.5%, which is slightly higher, but consistent with the results on chr 1, presented in Table <xref rid="Tab2" ref-type="table">2</xref>. Moreover, CONSENT managed to correct a large number of reads, and thus barely reduced the genome coverage of the original dataset.<table-wrap id="Tab6"><label>Table 6</label><caption><p>Statistics of the different assemblies for the full <italic>H. sapiens</italic> dataset.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly</th><th align="left">Contigs</th><th align="left">Aligned contigs (%)</th><th align="left">NGA50 (bp)</th><th align="left">NGA75 (bp)</th><th align="left">Genome coverage (%)</th><th align="left">Errors / 100 kbp</th><th align="left">Misassemblies</th><th align="left">Runtime</th><th align="left">Memory (MB)</th></tr></thead><tbody><tr><td align="left">Raw</td><td align="left">750</td><td align="left">95.47</td><td align="left">534,347</td><td align="left">_</td><td align="left">69.83</td><td align="left">11,175</td><td align="left">3,414</td><td align="left"><bold>2 days 20 h</bold></td><td align="left"><bold>382,191</bold></td></tr><tr><td align="left">Corrected</td><td align="left">780</td><td align="left"><bold>98.08</bold></td><td align="left">2,103,452</td><td align="left">_</td><td align="left">78.76</td><td align="left">5,652</td><td align="left"><bold>1,919</bold></td><td align="left">17 days 9 h</td><td align="left">1,097,627</td></tr><tr><td align="left">Polished</td><td align="left"><bold>749</bold></td><td align="left">97.86</td><td align="left"><bold>2,964,053</bold></td><td align="left"><bold>232,884</bold></td><td align="left"><bold>83.83</bold></td><td align="left"><bold>4,591</bold></td><td align="left">2,290</td><td align="left">7 days 12 h</td><td align="left"><bold>382,191</bold></td></tr></tbody></table><table-wrap-foot><p>Raw corresponds to the assembly generated from raw reads. Corrected corresponds to the assembly generated from corrected reads. Polished corresponds to the assembly generated from raw reads, and polished with CONSENT. Runtime and memory consumption are reported for the whole correction + assembly or assembly + polishing pipelines. QUAST-LG did not provide a metric for the NGA75 of the assembly generated from corrected reads.</p><p>Best results for each metric is highlighted in bold.</p></table-wrap-foot></table-wrap></p>
      <p id="Par35">Assemblies statistics of Table <xref rid="Tab6" ref-type="table">6</xref> are particularly interesting. Indeed, they show that, in addition to being extremely more computationally expensive, correcting the reads before assembling them produces less satisfying results than assembling the raw reads first, and then polishing the assembly. Indeed, the correction + assembly pipeline required more than 17 days and 1 TB of RAM, while the assembly + polishing pipeline ran in 7.5 days, and consumed less than 400 GB of RAM. In addition, the polished assembly displayed better metrics than the assembly generated from corrected reads, reaching higher NGA50, NGA75, and genome coverage, and lower error rate per 100 kbp. These results underline the fact that, for large datasets and complex genomes, assembling the raw data first, and then polishing the assembly is much more efficient than correcting the reads and then performing assembly.</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Discussion</title>
    <p id="Par36">Experimental results on the human datasets are particularly promising. Indeed, they show that CONSENT is the only method able to efficiently scale to the ultra-long reads they contain. More precisely, on the human chr 1 dataset, CONSENT is almost four times faster than Canu, the only other method able to scale to the correction of ultra-long reads. Moreover, it also produces more accurate results, and thus allows to yield a more contiguous assembly. As such reads are expected to become more widely available in the future, being able to deal with them will soon become a necessity. In addition, results on the complete human dataset show that CONSENT manages to efficiently process such large datasets in 10 days, using less than 100 GB of RAM. Moreover, this memory consumption could easily be reduced by adapting the parameters of Minimap2, and reducing the size of the jobs queue used during the actual correction step. At the expense of an increased runtime, CONSENT could thus process a full human dataset on a simple laptop. Using 8 threads, setting Minimap2 parameter -I 900M, and reducing the size of the jobs queue to 50,000, we indeed estimate CONSENT would run in a month, consume at most 16 GB of RAM, and require 5 TB of disk space to process a full human dataset. The 5 TB disk space requirement comes from the overlaps file, which can easily be stored on a external hard drive. Further experiments should therefore focus on the correction of larger and more complex organisms. However, the runtime of CONSENT’s correction step tends to be higher than that of other state-of-the-art methods. We discuss how to further reduce these computational costs below.</p>
    <p id="Par37">Our experiments show that the runtime of the correction step tends to rise according to the complexity of the genome. This can be explained by the highest proportion of repeated regions in more complex genomes. Such repeated regions indeed impact the alignment piles coverages, and could therefore lead to the processing of piles having very deep coverages. For such piles, our strategy of only selecting the <italic>N</italic> highest identity overlaps might prove inefficient, especially when the length of the repeated regions grows longer. To further refine the overlaps selection, we could use a validation strategy similar to that of HALC. Such a strategy would allow us to only consider sequences from the pile that actually come from the same genomic region as the long read we are attempting to correct. This would, in turn, allow us to ensure the selected sequences display low divergence, which would speed up the MSA computation, while allowing to produce higher quality consensus.</p>
    <p id="Par38">Moreover, further optimization of the parameters shall also be considered. In particular, the window size and the minimum number of anchors to allow the processing of a window significantly impact the runtime. Running various experiments with different sets of parameters could therefore allow us to find a satisfying compromise between runtime and quality of the results. The fact that the CONSENT assembly covers a smaller proportion of the reference sequence also gives us further room for improvement. In particular, looking to the unaligned contigs more into details could help us further improve the mechanisms and principles of CONSENT. Another possible improvement would be to consider multiple <italic>k</italic>-mer size for the <italic>k</italic>-mer chaining strategy. By selecting the best possible chaining according to the coverage or the repetitive elements of a given window, the method could be more robust and more efficient by computing smaller MSA.</p>
    <p id="Par39">Finally, it is essential to note that CONSENT uses Minimap2 as its default overlapper, but does not depend on this tool. As a result, CONSENT will benefit from the progress of future overlapping strategies, and will therefore allow to propose better correction quality as the overlapping methods evolve.</p>
  </sec>
  <sec id="Sec13">
    <title>Material and methods</title>
    <sec id="Sec14">
      <title>Overview</title>
      <p id="Par40">CONSENT takes as input a FASTA file of long reads, and returns a set of corrected long reads, reporting corrected bases in uppercase, and uncorrected bases in lowercase. Like most efficient methods, CONSENT starts by computing overlaps between the long reads using a mapping approach. These overlaps are computed using an external program, and not by CONSENT itself. This way, only matched regions need to be further aligned in order to compute consensus. These matched regions are then divided into smaller windows, that are aligned independently. The alignment of these windows is performed via a MSA strategy based on partial order graphs. This MSA is computed by iteratively constructing and adding sequences to a DAG. It also benefits from an efficient heuristic, based on <italic>k</italic>-mer chaining, allowing to reduce the time footprint of computing MSA between noisy sequences. The DAG is then used to compute the consensus of the window it originates from. Once the consensus is computed, a second correction step makes use of a local de Bruijn graph. This allows to correct weakly supported regions, that are, regions containing weak <italic>k</italic>-mers, and thus reduce the final error rate of the consensus. Finally, the consensus is realigned to the read, and correction is performed for each window. CONSENT’s workflow is summarized in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Figure 1</label><caption><p>Overview of CONSENT’s workflow for long read error correction.</p></caption><graphic xlink:href="41598_2020_80757_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec15">
      <title>Definitions</title>
      <p id="Par41">Before presenting the CONSENT pipeline, we recall the notions of alignment piles and windows on such piles, as proposed in Daccord, since we rely on them throughout the rest of the paper.</p>
      <sec id="Sec16">
        <title>Alignment piles</title>
        <p id="Par42">An alignment pile represents a set of reads that overlap with a given read <italic>A</italic>. More formally, it can be defined as follows. For any given read <italic>A</italic>, an alignment pile for <italic>A</italic> is a set of alignment tuples (<italic>A</italic>, <italic>R</italic>, <italic>Ab</italic>, <italic>Ae</italic>, <italic>Rb</italic>, <italic>Re</italic>, <italic>S</italic>) where <italic>R</italic> is a long read id, <italic>Ab</italic> and <italic>Ae</italic> represent respectively the start and the end positions of the alignment on <italic>A</italic>, <italic>Rb</italic> and <italic>Re</italic> represent respectively the start and the end positions of the alignment on <italic>R</italic>, and <italic>S</italic> indicates whether <italic>R</italic> aligns forward (<inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = 0$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq18.gif"/></alternatives></inline-formula>) or reverse-complement (<inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = 1$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq19.gif"/></alternatives></inline-formula>) to <italic>A</italic>. One can remark that this definition is slightly different from that of Daccord. In particular, Daccord adds an edit script to each tuple, representing the sequence of edit operations needed to transform <italic>A</italic>[<italic>Ab</italic>..<italic>Ae</italic>] into <italic>R</italic>[<italic>Rb</italic>..<italic>Re</italic>] if <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = 0$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq20.gif"/></alternatives></inline-formula>, or into <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{R}[Rb..Re]$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mover><mml:mi>R</mml:mi><mml:mo>¯</mml:mo></mml:mover><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>R</mml:mi><mml:mi>b</mml:mi><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mi>R</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq21.gif"/></alternatives></inline-formula> if <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S = 1$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq22.gif"/></alternatives></inline-formula> (where <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\overline{R}$$\end{document}</tex-math><mml:math id="M46"><mml:mover><mml:mi>R</mml:mi><mml:mo>¯</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq23.gif"/></alternatives></inline-formula> represents the reverse-complement of read <italic>R</italic>). This edit script can easily be retrieved by Daccord, as it relies on DALIGNER<sup><xref ref-type="bibr" rid="CR31">31</xref></sup> to compute actual alignments between the reads. However, as CONSENT relies on a mapping strategy, it does not have access to such information. We thus chose to exclude the edit script from our definition of a tuple. In its alignment pile, we call <italic>A</italic> the <italic>template</italic> read. The alignment pile of a given template read <italic>A</italic> thus contains all the information needed for its correction. An example of an alignment pile is given in Fig. <xref rid="Fig2" ref-type="fig">2</xref> (left).<fig id="Fig2"><label>Figure 2</label><caption><p><italic>Left:</italic> An alignment pile for a template read <italic>A</italic>. The pile is delimited by vertical lines at the extremities of <italic>A</italic>. Prefixes and suffixes of reads overlapping <italic>A</italic> outside of the pile are not considered during the next steps, as the data they contain will not be useful for correcting <italic>A</italic>. <italic>Right:</italic> When fixing the length to <italic>L</italic> and the minimum coverage threshold to 3, the window <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(W_b, W_e)$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq24.gif"/></alternatives></inline-formula> will be processed by CONSENT. With these same parameters, the window <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(F_b, F_e)$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq25.gif"/></alternatives></inline-formula> will not be processed by CONSENT, as <italic>A</italic>[<italic>i</italic>] is not supported by at least 3 reads <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\forall \, F_b \le i \le F_e$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mo>∀</mml:mo><mml:mspace width="0.166667em"/><mml:msub><mml:mi>F</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq26.gif"/></alternatives></inline-formula>.</p></caption><graphic xlink:href="41598_2020_80757_Fig2_HTML" id="MO2"/></fig></p>
      </sec>
      <sec id="Sec17">
        <title>Windows on alignment piles</title>
        <p id="Par43">In addition to the notion of alignment piles, Daccord also underlined the interest of processing windows from these piles instead of processing them as a whole. A window from an alignment pile is defined as follows. Given an alignment pile for a template read <italic>A</italic>, a window of this pile is a couple <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(W_b, W_e)$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq27.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W_b$$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq28.gif"/></alternatives></inline-formula> and <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W_e$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq29.gif"/></alternatives></inline-formula> represent respectively the start and the end positions of the window on <italic>A</italic>, and are such as <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0 \le W_b \le W_e &lt; |A|$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>A</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq30.gif"/></alternatives></inline-formula> (<italic>i.e.</italic> the start and end positions of the window define a factor of the template read <italic>A</italic>). We refer to this factor as the <italic>window’s template</italic>. Additionally, in CONSENT, only windows having the two following properties are processed for correction:<list list-type="bullet"><list-item><p id="Par44"><inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W_e - W_b + 1 = L$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq31.gif"/></alternatives></inline-formula> (<italic>i.e.</italic> windows have a fixed size);</p></list-item><list-item><p id="Par45"><inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\forall i$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq32.gif"/></alternatives></inline-formula>, <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W_b \le i \le W_e$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq33.gif"/></alternatives></inline-formula>, <italic>A</italic>[<italic>i</italic>] is supported by at least <italic>C</italic> reads of the pile, excluding <italic>A</italic> (<italic>i.e.</italic> windows have a minimum coverage threshold).</p></list-item></list>This second property allows to ensure that CONSENT has sufficient evidence to compute a reliable consensus for each window it processes. Examples of windows CONSENT does and does not process are given in Fig. <xref rid="Fig2" ref-type="fig">2</xref> (right).</p>
        <p id="Par46">In the case of Daccord, this window strategy allows to build local de Bruijn graphs with small values of <italic>k</italic>, and overcome the high error rates of the long reads, which cause issues when using large values of <italic>k</italic><sup><xref ref-type="bibr" rid="CR32">32</xref></sup>. More generally, processing windows instead of whole alignment piles allows to divide the correction problem into smaller subproblems that can be solved faster. Specifically, in our case, as we seek to correct long reads by computing MSA, working with windows allows to save both time and memory, since the sequences that need to be aligned are significantly shorter.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Overlapping</title>
      <p id="Par47">To avoid prohibitive computation time and memory consuming full alignments, CONSENT starts by overlapping the long reads using a mapping approach. By default, this step is performed with the help of Minimap2<sup><xref ref-type="bibr" rid="CR33">33</xref></sup>. However, CONSENT is not dependent on Minimap2, and the user can compute the overlaps with any other method, as long as the overlaps file follows the PAF format. We included Minimap2 as the default overlapper for CONSENT, since it offers good performances, and is thus able to scale to large organisms on reasonable setups.</p>
    </sec>
    <sec id="Sec19">
      <title>Alignment piles and windows computation</title>
      <p id="Par48">The alignment piles are computed by parsing the PAF file generated by the overlapper during the previous step. Each line indeed contains all the necessary information to define a tuple from an alignment pile. It includes the identifiers of the two long reads, the start and the end positions of their overlap, as well as the orientation of the second read relatively to the first. Moreover, for each alignment pile, CONSENT only includes the <italic>N</italic> highest identity overlaps (<inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N = 150$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>150</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq34.gif"/></alternatives></inline-formula> by default, although it can be user-specified), in order to reduce the time footprint, and avoid computing costly MSA of numerous sequences.</p>
      <p id="Par49">Given an alignment pile for a read <italic>A</italic>, we can then compute its set of windows. To this aim, we use an array of length |<italic>A</italic>|, which counts how many times each nucleotide of <italic>A</italic> is supported. We initialize the array with 0s at each position, and for each tuple (<italic>A</italic>, <italic>R</italic>, <italic>Ab</italic>, <italic>Ae</italic>, <italic>Rb</italic>, <italic>Re</italic>, <italic>S</italic>), we increment values at positions <italic>i</italic> such as <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Ab \le i \le Ae$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:mi>A</mml:mi><mml:mi>b</mml:mi><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>A</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq35.gif"/></alternatives></inline-formula>. After processing all the tuples, we retrieve the positions of the piles by finding, in the array, sketches of length <italic>L</italic> of values <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ge C$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mo>≥</mml:mo><mml:mi>C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq36.gif"/></alternatives></inline-formula>. We search for such sketches because CONSENT only processes windows of fixed length and with a minimum coverage threshold. In practice, we extract overlapping windows instead of partitioning the pile into a set of non-overlapping windows. Indeed, since it is usually harder to exploit alignments located on sequences extremities, consensus sequence might be missing at the extremities of some windows. Such events would thus cause a lack of correction on the reads, and using overlapping windows allows to overcome the issue. Each window is then processed independently during the next steps. Moreover, the reads are loaded into memory to support random access and thus accelerate the correction process. Each base is encoded using 2 bits in order to reduce memory usage. The memory consumption is thus roughly 1/4 of the total size of the reads.</p>
    </sec>
    <sec id="Sec20">
      <title>Window consensus</title>
      <p id="Par50">We process each window in two distinct steps. First, we align the sequences from the window using a MSA strategy based on partial order graphs, in order to compute consensus. This MSA strategy benefits from an efficient heuristic, based on <italic>k</italic>-mer chaining, allowing to decompose the global problem into smaller instances, thus reducing both time and memory consumption. Second, after computing the window’s consensus, we further polish it with the help of a local de Bruijn graph, at the scale of the window, in order to get rid of the few errors that might remain.</p>
      <sec id="Sec21">
        <title>Consensus computation</title>
        <p id="Par51">In order to compute the consensus of a window, CONSENT uses POAv2<sup><xref ref-type="bibr" rid="CR24">24</xref></sup>, an implementation of a MSA strategy based on partial order graphs. These DAGs, store all the information of the MSA. This way, at each step (<italic>i.e.</italic> at each alignment of a new sequence), the graph contains the current MSA result. To add a new sequence to the MSA, the sequence is aligned to the DAG, using a generalization of the Smith-Waterman algorithm.</p>
        <p id="Par52">Other methods usually compute 1V1 alignments between the read to be corrected and other reads overlapping with it, and then build a result DAG to summarize the alignments, and represent the MSA. In contrast, CONSENT’s strategy allows to compute actual MSA, and to directly build the DAG, during the alignment computation. Indeed, the DAG is first initialized with the sequence of the window’s template, and is then iteratively enriched by aligning the other sequences from the window, until it becomes the final, result graph. We then extract a matrix, representing the MSA, from the graph, and compute consensus by performing a majority vote. When a tie occurs, we chose the nucleotide from the window’s template as the consensus base.</p>
        <p id="Par53">However, even on small windows, computing MSA on hundreds of bases from dozens of sequences is computationally expensive, especially when the divergence among sequences is high. To avoid the burden of building a consensus by computing full MSA, we search for collinear regions shared by these sequences, in order to split the global task into smaller instances. We thus build several consensus on regions delimited by anchors shared among the sequences, and reconstruct the global consensus from the distinct, smaller consensus sequences obtained. The rationale is to benefit from the knowledge that all the sequences come from the same genomic area. This way, on the one hand, we can compute MSA of shorter sequences, which greatly reduces the computational costs. On the other hand, we only use related sequences to build the consensus, and therefore exclude spurious sequences. This behavior allows a massive speedup along with an improvement in the global consensus quality.</p>
        <p id="Par54">To find such collinear regions, we first select <italic>k</italic>-mers that are non-repeated in their respective sequences, and shared by multiple sequences. We then rely on dynamic programming to compute the longest anchors chain <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${a_1,\ldots ,a_n}$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq37.gif"/></alternatives></inline-formula> such as: <list list-type="order"><list-item><p id="Par55"><inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\forall i,j$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq38.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \le i &lt; j \le n$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq39.gif"/></alternatives></inline-formula>, <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_i$$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq40.gif"/></alternatives></inline-formula> appears before <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_j$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>a</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq41.gif"/></alternatives></inline-formula> in every sequence containing <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_i$$\end{document}</tex-math><mml:math id="M84"><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq42.gif"/></alternatives></inline-formula> and <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_j$$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mi>a</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq43.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par56"><inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\forall i$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq44.gif"/></alternatives></inline-formula>, <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \le i &lt; n$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq45.gif"/></alternatives></inline-formula>, there are at least <italic>T</italic> reads containing <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_i$$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq46.gif"/></alternatives></inline-formula> and <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_{i+1}$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq47.gif"/></alternatives></inline-formula> (with <italic>T</italic> a solidity threshold equal to 8 by default).</p></list-item></list>We therefore compute multiple, local consensus, using substrings bordered by consecutive anchors, in sequences that contain them, and are then able to reconstruct the global consensus of the window: <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ consensus (prefix)+a_1+ consensus (]a_1,a_2[)+a_2+\cdots + consensus (]a_{n-1},a_n[)+a_n+ consensus (suffix)$$\end{document}</tex-math><mml:math id="M96"><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:mi>i</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>⋯</mml:mo><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mi>u</mml:mi><mml:mi>f</mml:mi><mml:mi>f</mml:mi><mml:mi>i</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq48.gif"/></alternatives></inline-formula>. We illustrate this segmentation strategy in Supplementary Fig. <xref rid="MOESM1" ref-type="media">S1</xref> (longest anchors chain computation) and <xref rid="MOESM1" ref-type="media">S2</xref> (local consensus computation and global consensus reconstruction).</p>
      </sec>
      <sec id="Sec22">
        <title>Consensus polishing</title>
        <p id="Par57">After processing a given window, a few erroneous bases might remain on the computed consensus. This might happen in cases where the coverage depth of the window is relatively low, and thus cannot yield a high-quality consensus. Consequently, we propose an additional, second correction phase, that aims at polishing the consensus obtained during the previous step. This allows CONSENT to further enhance its quality, by correcting weakly supported <italic>k</italic>-mers. This feature is related to Daccord’s local de Bruijn graph correction strategy.</p>
        <p id="Par58">First, a local de Bruijn graph is built from the window’s sequences, using only small, solid, <italic>k</italic>-mers. The rationale is that small <italic>k</italic>-mers allows CONSENT to overcome the classical issues encountered due to the high error rate of the long reads, when using large <italic>k</italic> values. CONSENT then searches for regions only composed of weak <italic>k</italic>-mers, flanked by sketches of <italic>n</italic> (usually, <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n = 3$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq49.gif"/></alternatives></inline-formula>) solid <italic>k</italic>-mers. Afterwards, CONSENT attempts to find a path allowing to link a solid <italic>k</italic>-mer from the left flanking region to a solid <italic>k</italic>-mer from the right flanking region. We call these solid <italic>k</italic>-mers <italic>anchors</italic>. The graph is thus traversed, in order to find a path between two anchors, using backtracking if necessary. If a path between two anchors is found, the region containing the weak <italic>k</italic>-mers is replaced by the sequence dictated by this path. If none of the anchors pairs can be linked, the region is left unpolished. To polish sketches of weak <italic>k</italic>-mers located at the left (respectively right) extremity of the consensus, highest weighted edges of the graph are followed, until the length of the path reaches the length of the region to polish, or no edge can be followed out of the current node.</p>
      </sec>
    </sec>
    <sec id="Sec23">
      <title>Read correction via window consensus alignment</title>
      <p id="Par59">Once the consensus of a window has been computed and polished, we need to realign it to the template, in order to actually perform correction. To this aim, we use an optimized library of the Smith-Waterman algorithm<sup><xref ref-type="bibr" rid="CR34">34</xref></sup>. To avoid time-costly alignment, we locally align the consensus around the positions of the window it originates from. This way, given a window <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(W_b, W_e)$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq50.gif"/></alternatives></inline-formula> of the alignment pile of the read <italic>A</italic>, its consensus will be aligned to <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A[W_b - O..W_e + O]$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mi>A</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi>O</mml:mi><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>W</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq51.gif"/></alternatives></inline-formula>, where <italic>O</italic> represents the length of the overlap between consecutive windows processed by CONSENT (<inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O = 50$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:mi>O</mml:mi><mml:mo>=</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq52.gif"/></alternatives></inline-formula> by default, although it can be user-specified). Aligning the consensus outside of the original window’s extremities as such allows to take into account the error profile of the long reads. Indeed, as insertions and deletions are predominant in long reads, it is likely that a consensus could be longer than the window it originates from, thus spanning outside of this window’s extremities.</p>
      <p id="Par60">In the case alignment positions of the consensus from the <italic>i</italic>th window overlap with alignment positions of the consensus from the (<inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i+1$$\end{document}</tex-math><mml:math id="M106"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq53.gif"/></alternatives></inline-formula>)th window, we compute the overlapping sequences of the two consensus. The one containing the largest number of solid <italic>k</italic>-mers (where the <italic>k</italic>-mer frequencies of each sequence are computed from the window their consensus originate from) is chosen and kept as the correction. In the case of a tie, we arbitrarily chose the sequence from the (<inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i+1$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="41598_2020_80757_Article_IEq54.gif"/></alternatives></inline-formula>)th consensus as the correction. We then correct the aligned factor of the long read by replacing it with the aligned factor of the consensus.</p>
    </sec>
  </sec>
  <sec id="Sec24">
    <title>Conclusion</title>
    <p id="Par61">We presented CONSENT, a new self-correction method for long reads that combines different efficient strategies from the state-of-the-art. CONSENT starts by computing overlaps between the long reads to correct. It then divides the overlapping regions into smaller windows, in order to compute MSA, and consensus sequences of each window independently. These MSA are performed using a method based on partial order graphs, allowing to perform actual MSA. This method is combined to an efficient <italic>k</italic>-mer chaining strategy, which allows to further divide the MSA into smaller instances, and thus significantly reduce computation times. After computing the consensus of a given window, it is further polished with the help of a local de Bruijn graph, at the scale of the window, in order to further reduce the final error rate. Finally, the polished consensus is locally realigned to the read, in order to correct it.</p>
    <p id="Par62">Our experiments show that CONSENT compares well to, or even outperforms, other state-of-the-art self-correction methods in terms of quality of the results. In particular, CONSENT is the only method able to efficiently scale to the correction of ONT ultra-long reads, and is able to process a full human dataset containing reads reaching lengths up to 1.5 Mbp in 10 days. Although very recent, such reads are expected to further develop, and thus become more widely available in the near future. Being able to deal with them will thus soon become a necessity. CONSENT could therefore be the first self-correction method able to be applied to such ultra-long reads on a greater scale.</p>
    <p id="Par63">CONSENT’s assembly polishing feature also offers promising results. In particular, our experiment on a full human dataset shows that assembling the raw reads and then polishing the assembly allows to greatly reduce the computational costs, but also provides better results than correcting and then assembling the reads. This conclusion raises the question of the interest of long-read error correction in assembly projects. Moreover, as the processes of long read correction and assembly polishing are not much different from one another, one can also wonder why more error correction tools do not offer such a feature. It indeed seems to be affordable at the expense of minimal additional work, while providing satisfying results. We believe that CONSENT could open the doors to more error correction tools offering such a feature in the future. Finally, it would also be interesting to evaluate already published correction tools on their ability to polish assemblies, at the expense of minimal modifications to their workflows.</p>
    <p id="Par64">The segmentation strategy introduced in CONSENT also shows that actual MSA techniques are applicable to long, noisy sequences. In addition to being useful for error correction, this could also be applied to various other problems. For instance, it could be used during the consensus steps of assembly tools, for haplotyping, and for quantification problems. The literature about MSA is vast, but lacks application on noisy sequences. We believe that CONSENT could be a first work in that direction.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec163">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="41598_2020_80757_MOESM1_ESM.pdf">
            <caption>
              <p>Supplementary Information.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary Information</title>
    <p>The online version contains supplementary material available at 10.1038/s41598-020-80757-5.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>Part of this work was performed using computing resources of CRIANN (Normandy, France), project 2017020. The authors would like to thank Pierre Marijon for his help with the Bioconda release. P.M. would also like to thank Pierre Marijon for his helpful advice with assemblers parameters.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>P.M., C.M. and A.Li. designed and carried out research and wrote the manuscript. A.Le. and T.L. carried out research. All authors reviewed the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data availability</title>
    <p>CONSENT is implemented in C++, wrapped in Python and Bash scripts, open source, supported on Linux platforms and available at <ext-link ext-link-type="uri" xlink:href="https://github.com/morispi/CONSENT">https://github.com/morispi/CONSENT</ext-link>.</p>
  </notes>
  <notes id="FPar1" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par68">The authors declare no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sedlazeck</surname>
            <given-names>FJ</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Darby</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
        </person-group>
        <article-title>Piercing the dark matter: Bioinformatics of long-range sequencing and mapping</article-title>
        <source>Nat. Rev. Genet.</source>
        <year>2018</year>
        <volume>39</volume>
        <fpage>329</fpage>
        <lpage>346</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-018-0003-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2018</year>
        <volume>36</volume>
        <fpage>338</fpage>
        <pub-id pub-id-type="doi">10.1038/nbt.4060</pub-id>
        <?supplied-pmid 29431738?>
        <pub-id pub-id-type="pmid">29431738</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patterson</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Whatshap: Weighted haplotype assembly for future-generation sequencing reads</article-title>
        <source>J. Comput. Biol.</source>
        <year>2015</year>
        <volume>22</volume>
        <fpage>498</fpage>
        <lpage>509</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2014.0157</pub-id>
        <?supplied-pmid 25658651?>
        <pub-id pub-id-type="pmid">25658651</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kamath</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Shomorony</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Xia</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Courtade</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>David</surname>
            <given-names>NT</given-names>
          </name>
        </person-group>
        <article-title>Hinge: long-read assembly achieves optimal repeat resolution</article-title>
        <source>Genome Res.</source>
        <year>2017</year>
        <volume>27</volume>
        <fpage>747</fpage>
        <lpage>756</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.216465.116</pub-id>
        <?supplied-pmid 28320918?>
        <pub-id pub-id-type="pmid">28320918</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cao</surname>
            <given-names>MD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scaffolding and completing genome assemblies in real-time with nanopore sequencing</article-title>
        <source>Nat. Commun.</source>
        <year>2017</year>
        <volume>8</volume>
        <fpage>14515</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms14515</pub-id>
        <?supplied-pmid 28218240?>
        <pub-id pub-id-type="pmid">28218240</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sedlazeck</surname>
            <given-names>FJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Accurate detection of complex structural variations using single-molecule sequencing</article-title>
        <source>Nat. Methods</source>
        <year>2018</year>
        <volume>15</volume>
        <fpage>461</fpage>
        <lpage>468</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0001-7</pub-id>
        <?supplied-pmid 29713083?>
        <pub-id pub-id-type="pmid">29713083</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haghshenas</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hach</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Sahinalp</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Chauve</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>CoLoRMap: Correcting long reads by mapping short reads</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <fpage>i545</fpage>
        <lpage>i551</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw463</pub-id>
        <?supplied-pmid 27587673?>
        <pub-id pub-id-type="pmid">27587673</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Choudhury</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Chakrabarty</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Emrich</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>HECIL: A hybrid error correction algorithm for long reads with iterative learning</article-title>
        <source>Sci. Rep.</source>
        <year>2018</year>
        <volume>8</volume>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-017-17765-5</pub-id>
        <pub-id pub-id-type="pmid">29311619</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salmela</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Rivals</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>LoRDEC: Accurate and efficient long read error correction</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>3506</fpage>
        <lpage>3514</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu538</pub-id>
        <?supplied-pmid 25165095?>
        <pub-id pub-id-type="pmid">25165095</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miclotte</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Jabba: hybrid error correction for long sequencing reads</article-title>
        <source>Algorithms Mol. Biol.</source>
        <year>2016</year>
        <volume>11</volume>
        <fpage>10</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-016-0075-7</pub-id>
        <?supplied-pmid 27148393?>
        <pub-id pub-id-type="pmid">27148393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Holt</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>McMillan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>FMLRC: Hybrid long read error correction using an FM-index</article-title>
        <source>BMC Bioinform.</source>
        <year>2018</year>
        <volume>19</volume>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-017-2006-0</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kchouk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Elloumi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>An error correction and DeNovo assembly approach for nanopore reads using short reads</article-title>
        <source>Curr. Bioinform.</source>
        <year>2018</year>
        <volume>13</volume>
        <fpage>241</fpage>
        <lpage>252</lpage>
        <pub-id pub-id-type="doi">10.2174/1574893612666170530073736</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bao</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Lan</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>HALC: High throughput algorithm for long read error correction</article-title>
        <source>BMC Bioinform.</source>
        <year>2017</year>
        <volume>18</volume>
        <fpage>204</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-017-1610-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Firtina</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bar-joseph</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Alkan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Cicek</surname>
            <given-names>AE</given-names>
          </name>
        </person-group>
        <article-title>Hercules: a profile HMM-based hybrid error correction algorithm for long reads</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2018</year>
        <volume>46</volume>
        <fpage>e125</fpage>
        <?supplied-pmid 30124947?>
        <pub-id pub-id-type="pmid">30124947</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Madoui</surname>
            <given-names>M-A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genome assembly using Nanopore-guided long and error-free DNA reads</article-title>
        <source>BMC Genomics</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>327</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1519-z</pub-id>
        <?supplied-pmid 25927464?>
        <pub-id pub-id-type="pmid">25927464</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morisse</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lecroq</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Lefebvre</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Hybrid correction of highly noisy long reads using a variable-order de Bruijn graph</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>4213</fpage>
        <lpage>4222</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty521</pub-id>
        <?supplied-pmid 29955770?>
        <pub-id pub-id-type="pmid">29955770</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chin</surname>
            <given-names>C-S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Nonhybrid, finished microbial genome assemblies from long-read SMRT sequencing data</article-title>
        <source>Nat. Methods</source>
        <year>2013</year>
        <volume>10</volume>
        <fpage>563</fpage>
        <lpage>569</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2474</pub-id>
        <?supplied-pmid 23644548?>
        <pub-id pub-id-type="pmid">23644548</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reducing assembly complexity of microbial genomes with single-molecule sequencing</article-title>
        <source>Genome Biol.</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>R101</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2013-14-9-r101</pub-id>
        <?supplied-pmid 24034426?>
        <pub-id pub-id-type="pmid">24034426</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Canu: Scalable and accurate long-read assembly via adaptive k-mer weighting and repeat separation</article-title>
        <source>Genome Res.</source>
        <year>2017</year>
        <volume>27</volume>
        <fpage>722</fpage>
        <lpage>736</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.215087.116</pub-id>
        <?supplied-pmid 28298431?>
        <pub-id pub-id-type="pmid">28298431</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xiao</surname>
            <given-names>CL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MECAT: Fast mapping, error correction, and de novo assembly for single-molecule sequencing reads</article-title>
        <source>Nat. Methods</source>
        <year>2017</year>
        <volume>14</volume>
        <fpage>1072</fpage>
        <lpage>1074</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.4432</pub-id>
        <?supplied-pmid 28945707?>
        <pub-id pub-id-type="pmid">28945707</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bao</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dandan</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>HALS: Fast and high throughput algorithm for PacBio long read self-correction</article-title>
        <source>RECOMB-SEQ</source>
        <year>2019</year>
        <volume>35</volume>
        <fpage>3953</fpage>
        <lpage>3960</lpage>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Tischler, G. &amp; Myers, E. W. Non hybrid long read consensus using local de Bruijn graph assembly. <italic>bioRxiv</italic> (2017).</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salmela</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Walve</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rivals</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Ukkonen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Accurate selfcorrection of errors in long reads using de Bruijn graphs</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>799</fpage>
        <lpage>806</lpage>
        <?supplied-pmid 27273673?>
        <pub-id pub-id-type="pmid">27273673</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Grasso</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sharlow</surname>
            <given-names>MF</given-names>
          </name>
        </person-group>
        <article-title>Multiple sequence alignment using partial order graphs</article-title>
        <source>Bioinformatics</source>
        <year>2002</year>
        <volume>18</volume>
        <fpage>452</fpage>
        <lpage>464</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/18.3.452</pub-id>
        <?supplied-pmid 11934745?>
        <pub-id pub-id-type="pmid">11934745</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stöcker</surname>
            <given-names>BK</given-names>
          </name>
          <name>
            <surname>Köster</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rahmann</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>SimLoRD: Simulation of long read data</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <fpage>2704</fpage>
        <lpage>2706</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw286</pub-id>
        <?supplied-pmid 27166244?>
        <pub-id pub-id-type="pmid">27166244</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchet</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ELECTOR: evaluator for long reads correction methods</article-title>
        <source>NAR Genom. Bioinform.</source>
        <year>2019</year>
        <volume>2</volume>
        <fpage>lqz015</fpage>
        <pub-id pub-id-type="doi">10.1093/nargab/lqz015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap and miniasm: Fast mapping and de novo assembly for noisy long sequences</article-title>
        <source>arXiv</source>
        <year>2015</year>
        <volume>25</volume>
        <fpage>1</fpage>
        <lpage>7</lpage>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>Assembly of long, error-prone reads using repeat graphs</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2019</year>
        <volume>37</volume>
        <fpage>540</fpage>
        <lpage>546</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0072-8</pub-id>
        <?supplied-pmid 30936562?>
        <pub-id pub-id-type="pmid">30936562</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mikheenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Prjibelski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Antipov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Saveliev</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Versatile genome assembly evaluation with QUAST-LG</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>i142</fpage>
        <lpage>i150</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty266</pub-id>
        <?supplied-pmid 29949969?>
        <pub-id pub-id-type="pmid">29949969</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vaser</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sovic</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sikic</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate de novo genome assembly from long uncorrected reads</article-title>
        <source>Genome Res.</source>
        <year>2017</year>
        <volume>27</volume>
        <fpage>727</fpage>
        <lpage>736</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.214270.116</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Myers</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Brown</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Morgenstern</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Efficient local alignment discovery amongst noisy long reads</article-title>
        <source>Algorithms in Bioinformatics</source>
        <year>2014</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>52</fpage>
        <lpage>67</lpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaisson</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Tesler</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Mapping single molecule sequencing reads using basic local alignment with successive refinement (BLASR): application and theory</article-title>
        <source>BMC Bioinform.</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>238</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: Pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <?supplied-pmid 6137996?>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>WP</given-names>
          </name>
          <name>
            <surname>Garrison</surname>
            <given-names>EP</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>SSW library: An SIMD Smith-Waterman C/C++ library for use in genomic applications</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <fpage>1</fpage>
        <lpage>7</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Source Code Biol Med</journal-id>
    <journal-title-group>
      <journal-title>Source Code for Biology and Medicine</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1751-0473</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3298538</article-id>
    <article-id pub-id-type="publisher-id">1751-0473-7-1</article-id>
    <article-id pub-id-type="pmid">22333270</article-id>
    <article-id pub-id-type="doi">10.1186/1751-0473-7-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Yabi: An online research environment for grid, high performance and cloud computing</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Hunter</surname>
          <given-names>Adam A</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>ahunter@ccg.murdoch.edu.au</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Macgregor</surname>
          <given-names>Andrew B</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>amacgregor@ccg.murdoch.edu.au</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Szabo</surname>
          <given-names>Tamas O</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>tszabo@ccg.murdoch.edu.au</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Wellington</surname>
          <given-names>Crispin A</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>cwellington@ccg.murdoch.edu.au</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A5">
        <name>
          <surname>Bellgard</surname>
          <given-names>Matthew I</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>mbellgard@ccg.murdoch.edu.au</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Centre for Comparative Genomics, Murdoch, Western Australia, 6150</aff>
    <pub-date pub-type="collection">
      <year>2012</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>2</month>
      <year>2012</year>
    </pub-date>
    <volume>7</volume>
    <fpage>1</fpage>
    <lpage>1</lpage>
    <history>
      <date date-type="received">
        <day>12</day>
        <month>12</month>
        <year>2011</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>2</month>
        <year>2012</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â©2012 Hunter et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2012</copyright-year>
      <copyright-holder>Hunter et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.scfbm.org/content/7/1/1"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>There is a significant demand for creating pipelines or workflows in the life science discipline that chain a number of discrete compute and data intensive analysis tasks into sophisticated analysis procedures. This need has led to the development of general as well as domain-specific workflow environments that are either complex desktop applications or Internet-based applications. Complexities can arise when configuring these applications in heterogeneous compute and storage environments if the execution and data access models are not designed appropriately. These complexities manifest themselves through limited access to available HPC resources, significant overhead required to configure tools and inability for users to simply manage files across heterogenous HPC storage infrastructure.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>In this paper, we describe the architecture of a software system that is adaptable to a range of both pluggable execution and data backends in an open source implementation called Yabi. Enabling seamless and transparent access to heterogenous HPC environments at its core, Yabi then provides an analysis workflow environment that can create and reuse workflows as well as manage large amounts of both raw and processed data in a secure and flexible way across geographically distributed compute resources. Yabi can be used via a web-based environment to drag-and-drop tools to create sophisticated workflows. Yabi can also be accessed through the Yabi command line which is designed for users that are more comfortable with writing scripts or for enabling external workflow environments to leverage the features in Yabi. Configuring tools can be a significant overhead in workflow environments. Yabi greatly simplifies this task by enabling system administrators to configure as well as manage running tools via a web-based environment and without the need to write or edit software programs or scripts. In this paper, we highlight Yabi's capabilities through a range of bioinformatics use cases that arise from large-scale biomedical data analysis.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>The Yabi system encapsulates considered design of both execution and data models, while abstracting technical details away from users who are not skilled in HPC and providing an intuitive drag-and-drop scalable web-based workflow environment where the same tools can also be accessed via a command line. Yabi is currently in use and deployed at multiple institutions and is available at <ext-link ext-link-type="uri" xlink:href="http://ccg.murdoch.edu.au/yabi">http://ccg.murdoch.edu.au/yabi</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group>
      <kwd>Bioinformatics</kwd>
      <kwd>workflows</kwd>
      <kwd>Internet</kwd>
      <kwd>high performance computing</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Chaining a number of analysis tools together to form domain-specific analysis pipelines or workflows is essential in many scientific disciplines [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>]. For some scientists access to a command line login is all that is required for them to write custom scripts and programs to link these tasks. For instance, workflows can be implemented in programming languages such as Perl (<ext-link ext-link-type="uri" xlink:href="http://www.perl.org">http://www.perl.org</ext-link>/), Python (<ext-link ext-link-type="uri" xlink:href="http://www.python.org">http://www.python.org</ext-link>/) or Java (<ext-link ext-link-type="uri" xlink:href="http://java.sun.com">http://java.sun.com</ext-link>/), utilising extensive libraries such as Bioperl [<xref ref-type="bibr" rid="B4">4</xref>] and Biojava [<xref ref-type="bibr" rid="B5">5</xref>] and BioPython (<ext-link ext-link-type="uri" xlink:href="http://biopython.org">http://biopython.org</ext-link>). More recently tools and data can be accessed via web services [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B7">7</xref>]. However, constructing analysis workflows in this manner requires a level of programming proficiency that typically presents a barrier to many scientists [<xref ref-type="bibr" rid="B8">8</xref>-<xref ref-type="bibr" rid="B10">10</xref>]. In addition, the amount of data and the compute intensive nature of the tasks demand the need to run these tasks on large-scale high performance computing (HPC) infrastructure. Unfortunately, existing tools for interacting with the Grid or HPC resources such as Globus [<xref ref-type="bibr" rid="B11">11</xref>] and super computer scheduling systems are often too "low level" and require computing knowledge that is also outside the expertise of many scientists.</p>
    <p>Simple, transparent access to High Performance Computing (HPC) and Grid resources for non-technical users is a significant challenge that must be overcome to facilitate widespread adoption of large-scale compute and data resources [<xref ref-type="bibr" rid="B8">8</xref>-<xref ref-type="bibr" rid="B10">10</xref>]. In trying to address this, significant work has been undertaken to develop workflow environments that attempt to alleviate the need of having scientists write their own scripts or programs. These are either desktop applications or more recently Internet-based applications [<xref ref-type="bibr" rid="B12">12</xref>-<xref ref-type="bibr" rid="B16">16</xref>]. Two examples are now provided.</p>
    <p>Taverna is a powerful desktop workflow management system [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>]. However, to fully exploit the power of this system requires a high level of programming competence. Firstly, users are provided a desktop application that offers extreme flexibility and configurability but can be complex and difficult to uptake by users that simply want to quickly chain a core set of tools together. Secondly, the application has an execution model that either runs executables on the user's local machine or submits data to web services for execution. A typical Taverna installation does not have a data model other than to manage local files. Thirdly, scientists must incorporate error handling for any tools they wish to incorporate in each workflow. For example, the error messages from a failed web service call in a given workflow can be quite daunting to non-HPC trained scientists.</p>
    <p>In other words, scientists using Taverna must manage the complexity of the workflow, the tools to be administered, and the error handling of the tools. The end users of the system cannot hide these exposed details of the compute infrastructure or manage the tools in a simplified way. For many users this is sufficient, but for many other users who desire an intuitive browser-based workflow environment, systems such as Taverna may not be appropriate.</p>
    <p>Galaxy is a rich domain-specific Internet-based environment tailored to bioinformatics genomics data anlaysis [<xref ref-type="bibr" rid="B14">14</xref>]. The interface is considerably simplified for scientists to use compared to Taverna. In Galaxy, the role of maintaining tools is separated from the user, although it requires the skills of a software developer to add new tools to the system. For instance, XML scripts are required to be edited for both tool configuration and to notify Galaxy of the tool's existence [<xref ref-type="bibr" rid="B17">17</xref>]. While this is manageable in some instances, configuring a large number of tools for a range of different user groups would demand significant overhead. While Galaxy is specifically designed for genomics analysis, more recently Galaxy is being extended to introduce proteomics data types [<xref ref-type="bibr" rid="B18">18</xref>].</p>
    <p>As highlighted by the previous two examples, there exists a need for scientific workflow environments that have the following necessary features: Internet-based and intuitive to use; tool management abstracted from users; defined process for expanding the list of available tools and custom scripts that do not require software development expertise; scientists are not tied to the workflow environment to access data and results (prevent data lock in); provide comprehensive configuration for execution and data access models to leverage existing compute and data infrastructure.</p>
    <p>In this paper, we introduce Yabi, an Internet-based interface to a workflow engine that solves the problem of workflow deployment across disparate legacy HPC resources. Yabi abstracts the complexity involved in accessing multiple HPC resources and data stores from the scientific researcher. In this way Yabi enables researchers access to HPC power without requiring specialised computing knowledge.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <sec>
      <title>1 Overview</title>
      <p>Yabi uses a three-tier architecture to enable flexibility and reuse [<xref ref-type="bibr" rid="B19">19</xref>]. The first layer is the frontend web application that provides the main user interface; the second layer is the middleware that is responsible for process management, tool configuration, analysis audit trails [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B20">20</xref>] and user management; the third layer is the Resource Manager that exposes data and compute resources to the middleware. The core components are shown in Figure <xref ref-type="fig" rid="F1">1</xref>.</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Yabi Architecture</bold>. The YABI architecture outlining the key components including Frontend Application, Middleware Appliance and the Resource Manager.</p>
        </caption>
        <graphic xlink:href="1751-0473-7-1-1"/>
      </fig>
      <p>Yabi simplifies the visual representation of the workflow to the scientist by highlighting the files and parameters that are relevant while hiding from the scientist the computational structures such as branching, looping, conditionals, dependency resolution and fault recovery. Yabi shifts the complexities of managing the infrastructure away from the end user and onto the system administrator responsible for managing the HPC resources. Yabi allows a scientist to submit, run, and monitor jobs from multiple operating systems and both desktop and mobile environments. It provides a domain-agnostic environment with a comprehensive suite of compute and data access models utilising SSH, GridFTP, Torque [<xref ref-type="bibr" rid="B21">21</xref>], PBS Pro [<xref ref-type="bibr" rid="B22">22</xref>], SFTP, S3 and others. This enables the Yabi system to leverage compute and data resources beyond those that are available on a local server or network. Yabi separates the roles of user, system administrator and software developer. This allows a system administrator to add tools to the environment using the Yabi administration web application without the need to undertake software development (see Section 3.1).</p>
    </sec>
    <sec>
      <title>2 Yabi frontend application</title>
      <p>User interaction with Yabi is via a web-based application written in Python and built around the Django Framework (<ext-link ext-link-type="uri" xlink:href="https://www.djangoproject.com">https://www.djangoproject.com</ext-link>/). From a user's perspective the Yabi frontend application provides methods for creating, naming, submitting and monitoring workflows, and for accessing data on external storage systems. The Yabi frontend is designed to provide a REST [<xref ref-type="bibr" rid="B23">23</xref>] style web service to allow different client interfaces to interact with it. In the current implementation two user interfaces have been built: a web-based client and a command line client.</p>
      <sec>
        <title>2.1 Web-based client</title>
        <p>Typically, users would interact with Yabi through the Web-based client by establishing a session through an initial log in and authentication. The user is then presented with an interface consisting of three views: the design view, the jobs view and the files view, shown in Figure <xref ref-type="fig" rid="F2">2</xref>. In this example, Yabi is configured to invoke a simple sequence similarity search using web services running on remote services, in this case, the European Bioinformatics Institute (<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/Tool/webservices">http://www.ebi.ac.uk/Tool/webservices</ext-link>).</p>
        <fig id="F2" position="float">
          <label>Figure 2</label>
          <caption>
            <p><bold>Yabi web-based client</bold>. Screenshot of the Yabi web-based client in the "design view" accessing a tool available from the European Bioinformatics Institute via a webservice (<ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/Tools/webservices">http://www.ebi.ac.uk/Tools/webservices</ext-link>/).</p>
          </caption>
          <graphic xlink:href="1751-0473-7-1-2"/>
        </fig>
        <p>The design view allows a user to construct a workflow by selecting each tool they wish to use and completing the tool's mandatory and optional inputs. The workflow may then be optionally named before it is submitted for execution. All workflows are stored as part of a complete audit trail and are available to be reused. Additional workflows may be run concurrently. Included in this design view are enhancements to the workflow construction such as automatic filters to highlight appropriate tools at a particular stage and providing visual cues to users of potential dependencies that cannot be resolved.</p>
        <p>Previously submitted workflows are accessed via a jobs view. Comprehensive provenance for each workflow is kept including input files, all tools and each tool's parameters. Searching by name, date, and arbitrary metadata is also available.</p>
        <p>Resulting files produced by workflows may be viewed either directly through the workflow representation in the jobs view, or via a files view which is a representation of the external data resources accessible by the user allowing typical file management tasks such as copying, deleting and renaming.</p>
        <p>The design, jobs and files views provide drag-and-drop interfaces that abstract away the complexities of process management and interfacing with HPC environments.</p>
        <p>Technically, to present the interface to the user, the client browser makes Ajax (<ext-link ext-link-type="uri" xlink:href="http://www.adaptivepath.com/ideas/essays/archives/000385.php">http://www.adaptivepath.com/ideas/essays/archives/000385.php</ext-link>, 2011) calls to the frontend application. When information about tools and the state of workflows is required the frontend establishes a secure, authenticated connection to the middleware and retrieves the relevant information. For example, to display a list of tools for a user, an Ajax call is made from the web browser to the frontend application. The frontend application in turn makes a request to the middleware. The middleware then returns a JavaScript Object Notation (JSON) (<ext-link ext-link-type="uri" xlink:href="http://tools.ietf.org/html/rfc4627">http://tools.ietf.org/html/rfc4627</ext-link>, Oct 2011) list of tools, which is returned by the frontend to the client interface. An important point to note is the distinction drawn between each of the components. The HTML/JavaScript interface only communicates with the frontend application. The frontend then makes all connections with the middleware. Similarly, if the web client requires a file listing, a request is sent via the frontend to the middleware, which then requests a listing from the Resource Manager.</p>
      </sec>
      <sec>
        <title>2.2 Command line client</title>
        <p>For users that prefer command line access, a command line client for Yabi, Yabish is provided. Yabish communicates with the frontend application to authenticate and establish a session. Once this is done it is possible for users to construct and submit jobs to Yabi via the command line. In addition, Yabish includes commands to list running jobs. Using Yabish enables users familiar with scripting languages to incorporate Yabi into their work environment or legacy systems. Results may then be fetched using Yabish or alternatively by logging into the web-based client and viewing them in a web browser. This enables groups of researchers with varying computing skills to share common tools. In this way, external workflow environments that have naÃ¯ve execution and data access models can also be configured to utilise Yabish tools and then have access to a sophisticated execution and data access environment.</p>
      </sec>
    </sec>
    <sec>
      <title>3 Yabi middleware</title>
      <p>The second layer of the Yabi three-tier architecture is the Yabi middleware. The middleware consists of two modules; the first is referred to as "Yabi Administration" and is a web-enabled application that handles the description of all tools, users, data services and compute services; the second is referred to as the "Yabi Engine" and is an event driven system tasked with accepting and processing workflow requests.</p>
      <sec>
        <title>3.1 Yabi administration</title>
        <p>The Yabi administration module allows a system administrator to manage all aspects of the Yabi system using a web browser. Tools are added by creating a tool record and filling in all necessary details. This includes the name of the program to be run, the compute resource that will perform the task, and where resulting files should be stored. Further to this, the system allows full specification of all parameters and file types used by a tool. Later, the Yabi Resource Manager uses these details when it executes a task and the frontend uses these details when it presents a visual representation of the tool to users.</p>
        <p>The Yabi administration also controls user access to compute and data services. It maintains records of users and optionally caches their credentials to access compute and data services. When the Yabi frontend requests a file listing for a particular data service a request is made to the Resource Manager with the correct credentials to retrieve that listing. Similarly, when a task needs to be run on a compute resource, a task is served to the Yabi Resource Manager along with the correct credentials. Figure <xref ref-type="fig" rid="F3">3</xref> shows a section of the implemented Yabi administration interface. Specifically, this figure shows a summary of a running workflow including: i) workflow details including name, user and start and end times; ii) jobs that will be executed with a description of each command; iii) individual tasks with the actual command that will be executed and the files that will be staged in; iv) status of the workflow and each job and task; and v) a "Syslog" link for each task to view the system logging received from the Yabi Resource Manager.</p>
        <fig id="F3" position="float">
          <label>Figure 3</label>
          <caption>
            <p><bold>Yabi Admin</bold>. Screenshot of a completed workflow from a system administration perspective.</p>
          </caption>
          <graphic xlink:href="1751-0473-7-1-3"/>
        </fig>
      </sec>
      <sec>
        <title>3.2 Yabi engine</title>
        <p>The second module of the Yabi middleware appliance is the "Yabi Engine". This module is responsible for accepting and processing workflow requests originating from the Yabi frontend, creating descriptions of the processing required for the individual workflow steps ("jobs") and submitting them to the Yabi Resource Manager for execution on local or external compute resources. External resources include existing HPC, Grid and Cloud.</p>
        <p>When the user creates or chooses to reuse a workflow, and then executes it, the Yabi frontend submits a high level description of the entire workflow to the workflow engine. This description includes the following information for each step of the workflow: the tool, the parameters of that tool and their settings, the related input and output filenames for individual files and descriptions of any dependent file input requirements. This allows the Yabi engine to resolve any file dependencies dynamically as a workflow executes. For example, a particular tool may require the output from a previous tool in a workflow. The description for the latter tool will contain a pointer specifying that it requires the output from a previous tool, even though the specific files output from that tool are not yet known.</p>
        <p>The Yabi engine processes incoming workflows in a separate thread using an external message queue. The benefit of this strategy is that it allows a timely response to the Yabi frontend by detaching the processing of incoming workflows from the frontend request. Once processed the workflow is stored in an SQL database prior to the workflow being executed.</p>
        <p>At each step through the workflow execution, the Yabi Engine examines the workflow, resolving dependencies. If all the dependencies for a job are resolved, that is, all the required input files are present and all the parent jobs have finished executing, then the required execution tasks are created for the job. Each task represents an execution process on an execution backend that is associated with the tool being used in that job. When all the tasks of a job are finished, the next step in the workflow is processed. Processing of the workflow continues until all the jobs in the workflow are complete or in an error state, at which point the workflow is marked as complete, or with an error flag respectively.</p>
        <p>To determine whether a job's dependencies have been satisfied, the Yabi Engine utilises the concept of "file types". One or more of a tool's input parameters may be marked as accepting a certain file type. These file types are specified in the database as a unix-style filename matching pattern. Any files that match the pattern for the tool's input parameter are able to satisfy the requirements of that input parameter. For instance, if in the workflow there is a job that requires the output of a previous step in the workflow, then any appropriate files from that previous step are used to generate the tasks for this job.</p>
        <p>If a tool has multiple input parameters that take different file types, and these parameters are both specified as coming from previous jobs in the workflow, then once the previous jobs are complete their corresponding output files are grouped together to create a batch of tasks for that job. To match up an input file of one type for one parameter with the correct input file of another type for another parameter, then the files with minimum Levenshtein distance [<xref ref-type="bibr" rid="B24">24</xref>] are grouped together to create each task.</p>
      </sec>
    </sec>
    <sec>
      <title>4 Yabi resource manager</title>
      <p>The third layer of the YABI three-tier architecture is the YABI Resource Manager. The Yabi Resource Manager handles all the tasks involved in using different network protocols to access compute resources and in the streaming of data between different data resources. The Yabi Resource Manager can perform any execution submission task on any execution backend. Likewise it can perform any file system operation on, or between, any file system backend. The Yabi Resource Manager takes commands and credentials from the Yabi Middleware and does so over a secure authenticated connection.</p>
      <p>The Resource Manager is not a job scheduler, scheduling is handled by each external compute resource. The various aspects of the Yabi Resource Manager are outlined in the following sections.</p>
      <sec>
        <title>4.1 Design</title>
        <p>The Yabi Resource Manager is programmed in Python (<ext-link ext-link-type="uri" xlink:href="http://www.python.org">http://www.python.org</ext-link>/) and makes use of gevent (<ext-link ext-link-type="uri" xlink:href="http://www.gevent.org">http://www.gevent.org</ext-link>/) and greenlet (<ext-link ext-link-type="uri" xlink:href="http://pypi.python.org/pypi/greenlet">http://pypi.python.org/pypi/greenlet</ext-link>) for more advanced features like co-routines [<xref ref-type="bibr" rid="B25">25</xref>] and micro-threads. It also uses the Twisted framework (<ext-link ext-link-type="uri" xlink:href="http://twistedmatrix.com">http://twistedmatrix.com</ext-link>/), an event driven network engine.</p>
        <p>The structure of the Yabi Resource Manager is based around the Twisted Python approach of using a small number of threads (typically one per CPU core) but handling a large number of network connections simultaneously. When a connection is made, existing threads handle the connection rather than starting a new thread, as is the case in typical threaded server architecture. Each thread manages its time in an event-driven manner while handling all the connections allocated to it. This has the advantage of being able to handle an extremely large number of connections simultaneously.</p>
        <p>The Yabi Resource Manager provides two types of services that we will discuss: data services and compute services (Section 4.4).</p>
      </sec>
      <sec>
        <title>4.2 Data services</title>
        <p>This service has a plug-in architecture that allows it to talk to a variety of different file storage systems. It uses a Uniform Resource Identifier (URI) (<ext-link ext-link-type="uri" xlink:href="http://www.w3.org/TR/uri-clarification">http://www.w3.org/TR/uri-clarification</ext-link>/) style path descriptor to define file system locations and the protocols the resource manager should employ to access them.</p>
        <p>The data services exposed by the Yabi Resource Manager are: directory listings; file copying (between the same or different data resources); file deletions; and directory creation. These are exposed as web service calls with the requested files or directories being passed in as HTTP parameters in the form of a URI. An example of such a URI is ssh://username@hostname.domain/path/to/file. By specifying different schema in the URI, the Resource Manager can utilise different protocols to transfer the data or perform the operation.</p>
        <p>The Yabi Resource Manager performs file system operations by spawning helper processes that perform the task and keep a handle on its standard out and standard error streams. By using these streams in conjunction with the exit code of the process, the Yabi Resource Manager can determine if a task succeeded or failed and the reasons for this. For copy operations the system is designed to always stream the data and no data is written to disk when copying data from one data service to another.</p>
        <p>Every copy task is comprised of a subtask that writes to a FIFO (<ext-link ext-link-type="uri" xlink:href="http://www.kernel.org/doc/man-pages/online/pages/man7/fifo.7.html">http://www.kernel.org/doc/man-pages/online/pages/man7/fifo.7.html</ext-link>), and a subtask that reads from the same FIFO. A FIFO is a special file that may be accessed as part of the file system. When passed data using a FIFO, the operating system kernel handles it internally in memory rather than writing it to disk. In this way the transfer of the data is performed by the underlying operating system in a very efficient manner. As long as a file system service has a command line tool or application programming interface (API) then it can be integrated into the Yabi Resource Manager.</p>
      </sec>
      <sec>
        <title>4.3 Credentials</title>
        <p>Yabi has a comprehensive model for managing the credentials required to access external compute and data environments. The credential model allows the requirements of two competing use cases to be satisfied. Firstly, users can choose to let the application securely store encrypted credentials on their behalf or secondly users can exercise fine grained control of the storage and expiry of credentials from the system.</p>
        <p>Credentials may be stored, encrypted, in the database to be utilised by the application as required. In this case, the credential is encrypted with the Advanced Encryption Standard (AES) using the user's password to generate an encryption key. When a user logs into the frontend, the encrypted credentials for the user are taken from the database and decrypted using their password based key. Once decrypted the credentials are cached in RAM for use by the system.</p>
        <p>In the case where the system asks for a credential that is not available in a decrypted form, the running job is placed into a blocking state so that the user can resume the job once they provide the necessary credential.</p>
      </sec>
      <sec>
        <title>4.4 Compute services</title>
        <p>The compute service uses a plug-in architecture to submit jobs to a variety of different execution resources. The Yabi Resource Manager periodically connects to a web service exposed by the Yabi middleware application and requests any tasks that are ready for execution. The Yabi middleware returns a snippet of JSON that describes the task including URIs for the Yabi Resource Manager to call to report status and log messages. The Yabi Resource Manager then handles each task as a greenlet tasklet. When executing tasks the Yabi Resource Manager performs all necessary operations such as creating relevant directories, staging in and out the requested data, executing the remote task, monitoring the task until it is finished and cleaning up temporary files.</p>
        <p>As it does this, the Yabi Resource Manager returns any task status changes to the Yabi middleware, which can in turn provide these to the Yabi frontend for display to the user. The Yabi Resource Manager also allows for task resumption, a feature that assists in stopping and starting the application.</p>
      </sec>
      <sec>
        <title>4.5 Shutdown and startup</title>
        <p>It is essential that the Yabi Resource Manager can be restarted without affecting any running jobs. For this reason the Yabi Resource Manager serialises all tasklets to disk during shutdown. When it starts up again it deserialises the tasklets from disk and attempts to resume them. Any stale connections that fail will be retried by the tasklet. If this fails the tasklet will attempt to continue the task by retrying the last action.</p>
      </sec>
      <sec>
        <title>4.6 Fault tolerance &amp; error handling</title>
        <p>To facilitate fault tolerance and error handling of external transient events, such as credential errors, file permission errors or unavailability of execution resources, there is a subset of exceptions in Yabi that are descended from a special "BlockingException" object. This exception reports a "blocked" rather than an "error" state in running tasklets. In this way, temporary failures that need user or administrator intervention can return this blocking exception. Tasks that enter a blocked state can be resumed once the temporary failure has been addressed rather than failing permanently.</p>
      </sec>
    </sec>
    <sec>
      <title>5 Summary features of yabi architecture</title>
      <p>The design of the system lends Yabi to have a number of desirable features, summarized by: i) Internet-based application; ii) provides transparent HPC access and flexible across multiple protocols (Eg. GridFTP, Globus, SSH via pluggable backends); iii) able to link analysis tools together across resources; iv) error handling (e.g. retry, block, fail and report); v) web-based comprehensive administration of tools; vi) abstract complexities from users; vii) can incorporate any command line analysis tool (E.g. Java, Perl, Python, C, R, etc.); viii) credential handling; ix) simplified access to web services; x) batch processing; and xi) command line access of Yabi tools.</p>
      <p>The features of the Yabi user interface can be summarized by: i) ease of use; ii) design/reuse workflows; iii) audit trails/provenance; iv) data/results not locked into system (results stored on existing file storage resources, and not within Yabi itself); v) mix and match tools from multiple execution environments in any given workflow; vi) analysis tools integrated can either be open source or proprietary; vii) meta data capture of workflows and search (available analysis tools or previous workflows); and viii) file management between disparate storage resources.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and discussion</title>
    <p>The power and flexibility of Yabi is outlined by presenting three typical use cases. In the first use case [<xref ref-type="bibr" rid="B26">26</xref>] analysis for high throughput genomic analysis is conducted on a relatively large molecular sequence (approximately 500 kbp in length). In Step 1 (select file) is used to select the input file. In Step 2 an analysis tool (repeatmasker - <ext-link ext-link-type="uri" xlink:href="http://www.repeatmasker.org">http://www.repeatmasker.org</ext-link>/) is used to identify and "mask out" the known repetitive molecular sequence elements from the sequence. In step 3, a prediction tool (genscan [<xref ref-type="bibr" rid="B27">27</xref>]) is used to predict candidate genes within this sequence and step 4 (genscan2gff [<xref ref-type="bibr" rid="B4">4</xref>]) formats the output from Step 3 into standard GFF (<ext-link ext-link-type="uri" xlink:href="http://www.sanger.ac.uk/resources/software/gff/spec.html">http://www.sanger.ac.uk/resources/software/gff/spec.html</ext-link>) file format for uploading into genome browser visualization tool. The screenshot of the workflow is shown in Figure <xref ref-type="fig" rid="F4">4a</xref>.</p>
    <fig id="F4" position="float">
      <label>Figure 4</label>
      <caption>
        <p><bold>HTP Genomic and Automated annotation workflows</bold>. Screenshots of (a) a high throughput genomic analysis workflow; and (b) a bioinformatics workflow to predict candidate G-Protein coupling receptor proteins batched over 14,000 molecular sequences.</p>
      </caption>
      <graphic xlink:href="1751-0473-7-1-4"/>
    </fig>
    <p>Figures <xref ref-type="fig" rid="F4">4a</xref> and <xref ref-type="fig" rid="F4">4b</xref> show the execution status of example workflows using the jobs view. Additional workflows can be run concurrently by returning to the design view. The jobs view also provides access to previously completed workflows. Comprehensive details of each workflow are kept in an audit trail database including all tools, parameters and input files used. A files view provides direct access to the underlying file system for each user. Other workflow examples include: sequence assembly, large scale similarity searches and sequence manipulation.</p>
    <p>In the second use case [<xref ref-type="bibr" rid="B26">26</xref>], the workflow analyses a large number of DNA molecular sequences (14,000 sequences) and conducts a predictive analysis for candidate G-Protein coupling receptor proteins, shown in Figure <xref ref-type="fig" rid="F4">4b</xref>.</p>
    <p>In step 1 (select file) a file is selected containing the 14,000 sequences. The file can be selected from any file system resource made available by the administrator to this user. In this example the file system selected is attached to the local HPC. Step 2 (getorf [<xref ref-type="bibr" rid="B28">28</xref>]) predicts the translations of each of the 14,000 sequences to the equivalent amino acid sequences and finally in step 3 (gpcrhmm [<xref ref-type="bibr" rid="B29">29</xref>]) candidate G-Protein coupling receptor proteins are predicted.</p>
    <p>In the third use case, core Trans-Proteomic Pipeline TPP tools [<xref ref-type="bibr" rid="B30">30</xref>] have been made accessible to enable user level workflow creation within Yabi rather than using the inbuilt web interface Petunia which can only be customized by systems administrators. The majority of tools contained within TPP can run on a command line which means that incorporation into the YABI environment is possible. Having tools within Yabi enables researchers to use different search engines or quantitative tools that might not be available in TPP or accessed through the Petunia web interface. To demonstrate this feature, Figure <xref ref-type="fig" rid="F5">5</xref> shows a screenshot of a typical proteomics workflow within Yabi linking tools from TPP (MzXML2Search, Peptide Prophet [<xref ref-type="bibr" rid="B31">31</xref>]), as well as the Mascot [<xref ref-type="bibr" rid="B32">32</xref>] search engine.</p>
    <fig id="F5" position="float">
      <label>Figure 5</label>
      <caption>
        <p><bold>Proteomics Analysis Workflow</bold>. Screenshot of Proteomics workflow combining tools from TPP and Mascot.</p>
      </caption>
      <graphic xlink:href="1751-0473-7-1-5"/>
    </fig>
    <p>Within each of these use cases, most of the tools selected as part of the workflows are computationally intensive and require running on HPC infrastructure. However, there are other tools/scripts that can be configured to run on a standalone Linux machine (for example genscan2gff). These examples demonstrate that the Yabi environment is able to "mix and match" tools configured on HPC resources and regular servers and made available transparently to users. Yabi has also been recently used in the analysis of metagenome data [<xref ref-type="bibr" rid="B33">33</xref>] (figure not shown).</p>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p>The main aim of the Yabi project is to provide transparent access to existing HPC resources. This has been achieved by the development of a three tier architecture that separates the roles of end user, system administrator and software developer. Yabi has a plug-in architecture that allows the system to interface to a variety of different storage and compute systems. This architecture prevents data lock-in as Yabi facilitates seamless access to existing storage resources. Yabi is currently in production use for a number of research communities in the life sciences in genomics, transcriptomics and proteomics. Yabi is complementary to existing workflow environments as it targets the non-technical audience with a rich and intuitive web-based user interface that allows the uptake of HPC by a broader audience. Yabi enables other workflow systems, that possess limited functionality to access multiple existing HPC systems, to leverage Yabi's data and access models via its command line client. The system is designed to be domain-agnostic which means Yabi can service many life science domains as well as enable cross-disciplinary research such as systems biology and marine science. The Yabi project is open source and can be downloaded or accessed at the project website <ext-link ext-link-type="uri" xlink:href="http://ccg.murdoch.edu.au/yabi">http://ccg.murdoch.edu.au/yabi</ext-link>.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p><bold>Project name: </bold>Yabi</p>
    <p>
      <bold>Project home page: </bold>
      <ext-link ext-link-type="uri" xlink:href="http://ccg.murdoch.edu.au/yabi/">http://ccg.murdoch.edu.au/yabi/</ext-link>
    </p>
    <p><bold>Operating system(s): </bold>Linux</p>
    <p><bold>Programming language: </bold>Python</p>
    <p><bold>Other requirements: </bold>memcached, sqlite</p>
    <p><bold>License: </bold>GNU GPL v3</p>
    <p><bold>Any restrictions to use by non-academics: </bold>No</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>Original concept and design: MB and AH; Architecture: AH; Lead design: AH, CW, AM; Implementation: AH, CW, AM, TS; Wrote manuscript: MB, AH, AM, CW. All authors read and approved the final manuscript.</p>
  </sec>
  <sec>
    <title>Authors' information</title>
    <p><bold>Adam Hunter</bold>: Adam Hunter completed a BSc Honours in Computer Science at Murdoch University. Adam has over 10 years experience in ICT including software development in C and Java. He leads the CCG software development and infrastructure team. Current areas of focus include continuous integration, agile programming and high performance and cloud computing.</p>
    <p><bold>Andrew Macgregor</bold>: Andrew Macgregor has a BA in English from the University of Otago and has also studied Computer Science at Massey University. He is a software developer focusing on Internet Application development using Python. Previously, Andrew contributed the UniGene module to the Bioperl project.</p>
    <p><bold>Tamas Szabo</bold>: Tamas Szabo has a Bachelor of Science in Computer Engineering, Gabor Dennis College, Budapest. He is a software developer who has worked in Australia and overseas in many sectors including banking, health, entertainment, government, travel, mining and research. Tamas has an interest in programming languages, development methodologies, open source development, operating systems and networks.</p>
    <p><bold>Crispin Wellington</bold>: Crispin Wellington completed a BSc in Physics at Curtin University. He is a software engineer who utilises Python and he also has an interest in functional languages such as Lisp. Crispin is interested in the human factors that affect the development of architecturally consistent systems.</p>
    <p><bold>Matthew Bellgard</bold>: Professor Matthew Bellgard completed a BSc Honours and PhD in Computer Science from The University of Western Australia. He is Murdoch University's Bioinformatics Chair and the Director of the Western Australian State Government Centre of Excellence, the Centre for Comparative Genomics. His scientific work has resulted in developments in the areas of pairwise sequence alignment and artificial intelligence, early detection of base composition differences in closely related bacterial species, whole genome sequence analysis and advances in the development of web-based integrated systems utilising high performance computing.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>The authors wish to acknowledge the contributions of: Adam Harvey, Nick Takayama, Paula Moolhuijzen, David Schibeci, Mark O'Shea and Brett Chapman. This project is supported by the Australian Research Collaboration Service, the Australian National Data Service and Bioplatforms Australia through the National Collaborative Research Infrastructure Strategy Program and the Education Investment Fund Super Science Initiative, as well as by iVEC.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Goble</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Stevens</surname>
          <given-names>R</given-names>
        </name>
        <article-title>State of the nation in the data integration for bioinformatics</article-title>
        <source>Journal of Biomedical Informatics</source>
        <year>2008</year>
        <volume>41</volume>
        <issue>5</issue>
        <fpage>687</fpage>
        <lpage>693</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jbi.2008.01.008</pub-id>
        <pub-id pub-id-type="pmid">18358788</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="book">
        <name>
          <surname>Louys</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Bonnarel</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Schaaff</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Claudon</surname>
          <given-names>J-J</given-names>
        </name>
        <name>
          <surname>Pestel</surname>
          <given-names>C</given-names>
        </name>
        <person-group person-group-type="editor">van der Hucht KA</person-group>
        <article-title>Implementing astronomical image analysis pipelines using VO standards</article-title>
        <source>Highlights of Astronomy, XXVIth IAU General Assembly</source>
        <year>2006</year>
        <volume>14</volume>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Walton</surname>
          <given-names>NA</given-names>
        </name>
        <name>
          <surname>Brenton</surname>
          <given-names>JD</given-names>
        </name>
        <name>
          <surname>Caldas</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Irwin</surname>
          <given-names>MJ</given-names>
        </name>
        <name>
          <surname>Akram</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Gonzalez-Solares</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Lewis</surname>
          <given-names>JR</given-names>
        </name>
        <name>
          <surname>Maccallum</surname>
          <given-names>PH</given-names>
        </name>
        <name>
          <surname>Morris</surname>
          <given-names>LJ</given-names>
        </name>
        <name>
          <surname>Rixon</surname>
          <given-names>GT</given-names>
        </name>
        <article-title>PathGrid: a service-orientated architecture for microscopy image analysis</article-title>
        <source>Philos Transact A Math Phys Eng Sci</source>
        <year>2010</year>
        <volume>368</volume>
        <fpage>3937</fpage>
        <lpage>3952</lpage>
        <pub-id pub-id-type="doi">10.1098/rsta.2010.0158</pub-id>
        <pub-id pub-id-type="pmid">20643686</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Stajich</surname>
          <given-names>JE</given-names>
        </name>
        <name>
          <surname>Block</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Boulez</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Brenner</surname>
          <given-names>SE</given-names>
        </name>
        <name>
          <surname>Chervitz</surname>
          <given-names>SA</given-names>
        </name>
        <name>
          <surname>Dagdigian</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Fuellen</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Gilbert</surname>
          <given-names>JG</given-names>
        </name>
        <name>
          <surname>Korf</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Lapp</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>LehvÃ¤slaiho</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Matsalla</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Mungall</surname>
          <given-names>CJ</given-names>
        </name>
        <name>
          <surname>Osborne</surname>
          <given-names>BI</given-names>
        </name>
        <name>
          <surname>Pocock</surname>
          <given-names>MR</given-names>
        </name>
        <name>
          <surname>Schattner</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Senger</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Stein</surname>
          <given-names>LD</given-names>
        </name>
        <name>
          <surname>Stupka</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Wilkinson</surname>
          <given-names>MD</given-names>
        </name>
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <article-title>The Bioperl toolkit: Perl modules for the life sciences</article-title>
        <source>Genome Res</source>
        <year>2002</year>
        <volume>12</volume>
        <issue>10</issue>
        <fpage>1611</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.361602</pub-id>
        <pub-id pub-id-type="pmid">12368254</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Pocock</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Down</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Hubbard</surname>
          <given-names>T</given-names>
        </name>
        <article-title>BioJava: open source components for bioinformatics</article-title>
        <source>ACM SIGBIO Newsletter</source>
        <year>2000</year>
        <volume>20</volume>
        <issue>2</issue>
        <fpage>10</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1145/360262.360266</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="other">
        <name>
          <surname>Taylor</surname>
          <given-names>IJ</given-names>
        </name>
        <article-title>From P2P to Web Services and Grids - Peers in a Client/Server World</article-title>
        <source>Springer</source>
        <year>2005</year>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wilkinson</surname>
          <given-names>MD</given-names>
        </name>
        <name>
          <surname>Links</surname>
          <given-names>M</given-names>
        </name>
        <article-title>BioMOBY: an open source biological web services proposal</article-title>
        <source>Brief Bioinform</source>
        <year>2002</year>
        <volume>3</volume>
        <issue>4</issue>
        <fpage>331</fpage>
        <lpage>41</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/3.4.331</pub-id>
        <pub-id pub-id-type="pmid">12511062</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hunter</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Schibeci</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Hiew</surname>
          <given-names>HL</given-names>
        </name>
        <name>
          <surname>Bellgard</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Grendel: A bioinformatics Web Service-based architecture for accessing HPC resources</article-title>
        <source>Proceedings of the 2005 Australasian workshop on Grid computing and e-research</source>
        <year>2005</year>
        <volume>44</volume>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bellgard</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Hiew</surname>
          <given-names>HL</given-names>
        </name>
        <name>
          <surname>Hunter</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Wiebrands</surname>
          <given-names>M</given-names>
        </name>
        <article-title>ORBIT: and integrated environment for user-customised bioinformatics tools</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>1</volume>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="other">
        <name>
          <surname>Bellgard</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Bioinformatics from comparative genomic analysis through to integrated systems</article-title>
        <source>Mammalian Genomics</source>
        <year>2005</year>
        <fpage>393</fpage>
        <lpage>409</lpage>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Foster</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Kesselman</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Globus: A Metacomputing Infrastructure Toolkit</article-title>
        <source>Intl J Supercomputer Applications</source>
        <year>1997</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>115</fpage>
        <lpage>128</lpage>
        <pub-id pub-id-type="doi">10.1177/109434209701100205</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <name>
          <surname>Hull</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Wolstencroft</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Stevens</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Goble</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pocock</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Oinn</surname>
          <given-names>T</given-names>
        </name>
        <article-title>Taverna: a tool for building and running workflows of services</article-title>
        <source>Nucleic Acids Research</source>
        <year>2006</year>
        <issue>34 Web Server</issue>
        <fpage>729</fpage>
        <lpage>732</lpage>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Oinn</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Greenwood</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Addis</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Alpdemir</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Ferris</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Glover</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Goble</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Goderis</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Hull</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Marvin</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Lord</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Pocock</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Senger</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Stevens</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Wipat</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Wroe</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Taverna: lessons in creating a workflow environment for the life sciences</article-title>
        <source>Concurrency and Computation: Practice and Experience</source>
        <year>2006</year>
        <volume>18</volume>
        <issue>10</issue>
        <fpage>1067</fpage>
        <lpage>1100</lpage>
        <pub-id pub-id-type="doi">10.1002/cpe.993</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Giardine</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Riemer</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Hardison</surname>
          <given-names>RC</given-names>
        </name>
        <name>
          <surname>Burhans</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Elnitski</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Shah</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Blankenberg</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Albert</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Taylor</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Miller</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Kent</surname>
          <given-names>WJ</given-names>
        </name>
        <name>
          <surname>Nekrutenko</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Galaxy: a platform for interactive large-scale genome analysis</article-title>
        <source>Genome Research</source>
        <year>2005</year>
        <volume>15</volume>
        <issue>10</issue>
        <fpage>1451</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.4086505</pub-id>
        <pub-id pub-id-type="pmid">16169926</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <name>
          <surname>Altintas</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Berkley</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Jaeger</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Jones</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Ludascher</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Mock</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Kepler: an extensible system for design and execution of scientific workflows</article-title>
        <source>Proceedings. 16th International Conference on Scientific and Statistical Database Management</source>
        <year>2004</year>
        <fpage>423</fpage>
        <lpage>424</lpage>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Deelman</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Singh</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Su</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Blythe</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Gil</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Kesselman</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Mehta</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Vahi</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Berriman</surname>
          <given-names>GB</given-names>
        </name>
        <name>
          <surname>Good</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Laity</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Jacob</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Katz</surname>
          <given-names>DS</given-names>
        </name>
        <article-title>Pegasus: a Framework for Mapping Complex Scientific Workflows onto Distributed Systems</article-title>
        <source>Scientific Programming Journal</source>
        <year>2005</year>
        <volume>13</volume>
        <issue>3</issue>
        <fpage>219</fpage>
        <lpage>237</lpage>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="http://wiki.g2.bx.psu.edu/Admin/Tools/Add%20Tool%20Tutorial">http://wiki.g2.bx.psu.edu/Admin/Tools/Add%20Tool%20Tutorial</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="http://hg.notalon.org/iracooke/galaxy-proteomics">http://hg.notalon.org/iracooke/galaxy-proteomics</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Eckerson</surname>
          <given-names>WW</given-names>
        </name>
        <article-title>Three Tier Client/Server Architecture: Achieving Scalability, Performance, and Efficiency in Client Server Applications</article-title>
        <source>Open Information Systems</source>
        <year>1995</year>
        <volume>3</volume>
        <issue>20</issue>
        <fpage>10</fpage>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bellgard</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Kenworthy</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Hunter</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Microarray Analysis Using Bioinformatics Analysis Audit Trails (BAATs)</article-title>
        <source>C R Biol</source>
        <year>2003</year>
        <volume>326</volume>
        <fpage>1083</fpage>
        <lpage>1087</lpage>
        <pub-id pub-id-type="doi">10.1016/j.crvi.2003.09.005</pub-id>
        <pub-id pub-id-type="pmid">14744117</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="http://www.adaptivecomputing.com/products/torque.php">http://www.adaptivecomputing.com/products/torque.php</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="http://www.pbsworks.com/Product.aspx?id=1">http://www.pbsworks.com/Product.aspx?id = 1</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fielding</surname>
          <given-names>RT</given-names>
        </name>
        <name>
          <surname>Taylor</surname>
          <given-names>RN</given-names>
        </name>
        <article-title>Principled Design of the Modern Web Architecture</article-title>
        <source>ACM Transactions on Internet Technology</source>
        <year>2002</year>
        <volume>2</volume>
        <issue>2</issue>
        <fpage>115</fpage>
        <lpage>150</lpage>
        <pub-id pub-id-type="doi">10.1145/514183.514185</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname> ÐÐµÐ²ÐµÐ½ÑÑÐµÐ¹Ð½</surname>
          <given-names>ÐÐ</given-names>
        </name>
        <article-title>ÐÐ²Ð¾Ð¸ÑÐ½ÑÐµ ÐºÐ¾Ð´Ñ Ñ Ð¸ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸ÐµÐ¼ Ð²ÑÐ¿Ð°Ð´ÐµÐ½Ð¸Ð¹, Ð²ÑÑÐ°Ð²Ð¾Ðº Ð¸ Ð·Ð°Ð¼ÐµÑÐµÐ½Ð¸Ð¹ ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð²</article-title>
        <source>ÐÐ¾ÐºÐ»Ð°Ð´Ñ ÐÐºÐ°Ð´ÐµÐ¼Ð¸Ð¹ ÐÐ°ÑÐº CCCP</source>
        <year>1965</year>
        <volume>163</volume>
        <issue>4</issue>
        <fpage>845</fpage>
        <lpage>8</lpage>
        <comment>Appeared in English as: Levenshtein VI (1966). <bold>Binary codes capable of correcting deletions, insertions, and reversals</bold>. <italic>Soviet Physics Doklady </italic>1966, 10: 707-10</comment>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Conway</surname>
          <given-names>ME</given-names>
        </name>
        <article-title>Design of a Separable Transition-Diagram Compiler</article-title>
        <source>Communications of the ACM</source>
        <year>1963</year>
        <volume>6</volume>
        <issue>7</issue>
        <fpage>396</fpage>
        <lpage>408</lpage>
        <pub-id pub-id-type="doi">10.1145/366663.366704</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="other">
        <name>
          <surname>Bellgard</surname>
          <given-names>MI</given-names>
        </name>
        <name>
          <surname>Moolhuijzen</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Guerrero</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Schibeci</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Rodriguez-Valle</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Peterson</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Dowd</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Barrero</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Hunter</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Miller</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lew-Tabor</surname>
          <given-names>A</given-names>
        </name>
        <article-title>CattleTickBase: An integrated Internet-based bioinformatics resource for Rhipicephalus (Boophilus) microplus</article-title>
        <source>International Journal for Parasitology</source>
        <volume>42</volume>
        <issue>2</issue>
        <fpage>161</fpage>
        <lpage>169</lpage>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Burge</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Karlin</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Prediction of complete gene structures in human genomic DNA</article-title>
        <source>J Mol Biol</source>
        <year>1997</year>
        <volume>268</volume>
        <issue>1</issue>
        <fpage>78</fpage>
        <lpage>94</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1997.0951</pub-id>
        <pub-id pub-id-type="pmid">9149143</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rice</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Longden</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Bleasby</surname>
          <given-names>A</given-names>
        </name>
        <article-title>EMBOSS: the European Molecular Biology Open Software Suite</article-title>
        <source>Trends Genet</source>
        <year>2000</year>
        <volume>16</volume>
        <issue>6</issue>
        <fpage>276</fpage>
        <lpage>277</lpage>
        <pub-id pub-id-type="doi">10.1016/S0168-9525(00)02024-2</pub-id>
        <pub-id pub-id-type="pmid">10827456</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wistrand</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Kall</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Sonnhammer</surname>
          <given-names>EL</given-names>
        </name>
        <article-title>A general model of G protein-coupled receptor sequences and its application to detect remote homologs</article-title>
        <source>Protein Sci</source>
        <year>2006</year>
        <volume>15</volume>
        <issue>3</issue>
        <fpage>509</fpage>
        <lpage>521</lpage>
        <pub-id pub-id-type="doi">10.1110/ps.051745906</pub-id>
        <pub-id pub-id-type="pmid">16452613</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Keller</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Eng</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Aebersold</surname>
          <given-names>R</given-names>
        </name>
        <article-title>A uniform proteomics MS/MS analysis platform utilizing open XML file formats</article-title>
        <source>Molecular Systems Biology</source>
        <year>2005</year>
        <volume>1</volume>
        <fpage>2005.0017</fpage>
      </mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Nesvizhskii</surname>
          <given-names>AI</given-names>
        </name>
        <name>
          <surname>Keller</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Kolker</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Aebersold</surname>
          <given-names>R</given-names>
        </name>
        <article-title>A statistical model for identifying proteins by tandem mass spectrometry</article-title>
        <source>Analytical Chemistry</source>
        <year>2003</year>
        <volume>75</volume>
        <issue>17</issue>
        <fpage>4646</fpage>
        <lpage>4658</lpage>
        <pub-id pub-id-type="doi">10.1021/ac0341261</pub-id>
        <pub-id pub-id-type="pmid">14632076</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Perkins</surname>
          <given-names>DN</given-names>
        </name>
        <name>
          <surname>Pappin</surname>
          <given-names>DJ</given-names>
        </name>
        <name>
          <surname>Creasy</surname>
          <given-names>DM</given-names>
        </name>
        <name>
          <surname>Cottrell</surname>
          <given-names>JS</given-names>
        </name>
        <article-title>Probability-based protein identification by searching sequence databases using mass spectrometry data</article-title>
        <source>Electrophoresis</source>
        <year>1999</year>
        <volume>20</volume>
        <fpage>3551</fpage>
        <lpage>3567</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1522-2683(19991201)20:18&lt;3551::AID-ELPS3551&gt;3.0.CO;2-2</pub-id>
        <pub-id pub-id-type="pmid">10612281</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Murray</surname>
          <given-names>DC</given-names>
        </name>
        <name>
          <surname>Bunce</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Cannell</surname>
          <given-names>BL</given-names>
        </name>
        <name>
          <surname>Oliver</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Houston</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>White</surname>
          <given-names>NE</given-names>
        </name>
        <name>
          <surname>Barrero</surname>
          <given-names>RA</given-names>
        </name>
        <name>
          <surname>Bellgard</surname>
          <given-names>MI</given-names>
        </name>
        <name>
          <surname>Haile</surname>
          <given-names>J</given-names>
        </name>
        <article-title>DNA-Based Faecal Dietary Analysis: A Comparison of qPCR and High Throughput Sequencing Approaches</article-title>
        <source>PLoS One</source>
        <year>2011</year>
        <volume>6</volume>
        <issue>10</issue>
        <fpage>e25776</fpage>
        <comment>Epub 2011 Oct 6. PubMed PMID: 21998697; PubMed Central PMCID: PMC3188572</comment>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0025776</pub-id>
        <pub-id pub-id-type="pmid">21998697</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6612893</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz360</article-id>
    <article-id pub-id-type="publisher-id">btz360</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2019 Conference Proceedings</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology and Networks</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Reconstructing signaling pathways using regular language constrained paths</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wagner</surname>
          <given-names>Mitchell J</given-names>
        </name>
        <xref ref-type="aff" rid="btz360-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pratapa</surname>
          <given-names>Aditya</given-names>
        </name>
        <xref ref-type="aff" rid="btz360-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Murali</surname>
          <given-names>T M</given-names>
        </name>
        <xref ref-type="corresp" rid="btz360-cor1"/>
        <!--<email>murali@cs.vt.edu</email>-->
        <xref ref-type="aff" rid="btz360-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="btz360-aff1">Department of Computer Science, Virginia Tech, Blacksburg, VA, USA</aff>
    <author-notes>
      <corresp id="btz360-cor1">To whom correspondence should be addressed. <email>murali@cs.vt.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-07-05">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>05</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>14</issue>
    <fpage>i624</fpage>
    <lpage>i633</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz360.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>High-quality curation of the proteins and interactions in signaling pathways is slow and painstaking. As a result, many experimentally detected interactions are not annotated to any pathways. A natural question that arises is whether or not it is possible to automatically leverage existing pathway annotations to identify new interactions for inclusion in a given pathway.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We present <sc>RegLinker</sc>, an algorithm that achieves this purpose by computing multiple short paths from pathway receptors to transcription factors within a background interaction network. The key idea underlying <sc>RegLinker</sc> is the use of regular language constraints to control the number of non-pathway interactions that are present in the computed paths. We systematically evaluate <sc>RegLinker</sc> and five alternative approaches against a comprehensive set of 15 signaling pathways and demonstrate that <sc>RegLinker</sc> recovers withheld pathway proteins and interactions with the best precision and recall. We used <sc>RegLinker</sc> to propose new extensions to the pathways. We discuss the literature that supports the inclusion of these proteins in the pathways. These results show the broad potential of automated analysis to attenuate difficulties of traditional manual inquiry.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><ext-link ext-link-type="uri" xlink:href="https://github.com/Murali-group/RegLinker">https://github.com/Murali-group/RegLinker</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Science Foundation</named-content>
          <named-content content-type="funder-identifier">10.13039/100000001</named-content>
        </funding-source>
        <award-id>CCF-1617678</award-id>
        <award-id>DBI-1759858</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institute of General Medical Sciences</named-content>
          <named-content content-type="funder-identifier">10.13039/100000057</named-content>
        </funding-source>
        <award-id>R01-GM095955</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Signaling pathways are widely studied in systems biology. While several databases record the proteins and interactions within a diverse set of signaling pathways (<xref rid="btz360-B6" ref-type="bibr">Fabregat <italic>et al.</italic>, 2016</xref>; <xref rid="btz360-B12" ref-type="bibr">Kanehisa <italic>et al.</italic>, 2016</xref>), high-quality curation is slow and painstaking. Moreover, the vast majority of interactions in large-scale physical and signaling interactomes are not annotated with information on the signaling pathways to which they belong. This dichotomy raises the following interesting question: given the proteins and interactions in a specific curated signaling pathway, can we automatically determine which interactions in the interactome are likely to be members of that pathway?</p>
    <p>The typical formulation of pathway reconstruction in the literature is as follows (<xref rid="btz360-B7" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>; <xref rid="btz360-B16" ref-type="bibr">Mohammadi <italic>et al.</italic>, 2013</xref>; <xref rid="btz360-B17" ref-type="bibr">Navlakha <italic>et al.</italic>, 2012</xref>; <xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>; <xref rid="btz360-B23" ref-type="bibr">Steffen <italic>et al.</italic>, 2002</xref>; <xref rid="btz360-B25" ref-type="bibr">Supper <italic>et al.</italic>, 2009</xref>; <xref rid="btz360-B27" ref-type="bibr">Tuncbag <italic>et al.</italic>, 2013</xref>; <xref rid="btz360-B31" ref-type="bibr">Yeger-Lotem <italic>et al.</italic>, 2009</xref>; <xref rid="btz360-B33" ref-type="bibr">Yosef <italic>et al.</italic>, 2011</xref>): given the receptors (or sources) and transcription factors (TFs or targets) in a specific signaling pathway <italic>P</italic> and a directed, weighted interaction network <italic>G</italic> of signaling and physical interactions among proteins, compute a subnetwork of <italic>G</italic> that connects the sources to the targets and has high overlap with <italic>P</italic>. In this model, the interactions in the pathway <italic>P</italic> are also present in <italic>G</italic> (i.e. <italic>P</italic> is a subnetwork of <italic>G</italic>) but these interactions are not labeled as being members of <italic>P</italic>. Clearly, this formulation does not leverage the curated information on interactions that is present in pathway databases.</p>
    <p>In this work, we seek to address what we call the <italic>curation-aware</italic> signaling pathway reconstruction problem. Here, we take as input the network <italic>G</italic>, the set <italic>S</italic> of sources, the set <italic>T</italic> of targets, and, in addition, the signaling pathway <italic>P</italic> also represented as a directed graph (<xref ref-type="fig" rid="btz360-F1">Fig. 1a</xref>). This graph represents the current state of knowledge of the proteins and interactions in the signaling pathway. Informally, our goal is to compute a subgraph <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> of the network <italic>G</italic> such that <inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:mi>P</mml:mi><mml:mo>⊆</mml:mo><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>, with the proteins and interactions in <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo><mml:mo>−</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula> serving as candidates for inclusion in the pathway. We would like to rank the elements of <inline-formula id="IE4"><mml:math id="IM4"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo><mml:mo>−</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula> so that we may quantitatively evaluate the accuracy of <inline-formula id="IE5"><mml:math id="IM5"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> using approaches akin to cross-validation.
</p>
    <fig id="btz360-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Overview of <sc>RegLinker</sc>. (<bold>a</bold>) The curated pathway <italic>P</italic> is a subgraph of the interactome <italic>G</italic>. (<bold>b</bold>) Each edge in <italic>P</italic> has the label <italic>p</italic> and each edge in <italic>G</italic>–<italic>P</italic> has the label <italic>x</italic>. The figure displays <italic>P</italic> and a subset of edges in <italic>G</italic>–<italic>P</italic>. Paths start at receptors (triangles) and end at TFs (rectangles). See the text for a discussion of the four colored paths. (<bold>c</bold>) The output pathway <inline-formula id="IE6"><mml:math id="IM6"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is the union of <italic>P</italic> and a subset of edges from <italic>G</italic>–<italic>P</italic>. Each such edge belongs to a receptor–TF path that satisfies the regular expression <inline-formula id="IE7"><mml:math id="IM7"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. There are four such paths</p>
      </caption>
      <graphic xlink:href="btz360f1"/>
    </fig>
    <p>We use the following intuition to guide our algorithm development. First, we model the process of signal transduction as a path in <italic>G</italic> that starts at a receptor and ends at a TF, as is common in the literature (<xref rid="btz360-B7" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>; <xref rid="btz360-B17" ref-type="bibr">Navlakha <italic>et al.</italic>, 2012</xref>; <xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>; <xref rid="btz360-B22" ref-type="bibr">Silverbush and Sharan, 2014</xref>; <xref rid="btz360-B23" ref-type="bibr">Steffen <italic>et al.</italic>, 2002</xref>; <xref rid="btz360-B33" ref-type="bibr">Yosef <italic>et al.</italic>, 2011</xref>) (<xref ref-type="fig" rid="btz360-F1">Fig. 1</xref>). Second, we prefer high-scoring paths (when edge weights mean confidence or reliability) in analogy with cellular mechanisms to transmit signals efficiently. Finally, and most importantly, when <italic>P</italic> is partially known, we can partition a receptor-to-TF path in <italic>G</italic> into subpaths with the following structure: each subpath contains only interactions in <italic>P</italic> or only interactions not in <italic>P</italic> and these two types alternate. The challenge is that we do not know <italic>a priori</italic> how many edges each of these subpaths contains, especially when we also want to compute high-scoring paths.</p>
    <p>In this article, we present the <sc>RegLinker</sc> algorithm for curation-aware reconstruction of signaling pathways (Sections 3.1–3.3). It labels every edge in <italic>G</italic> as ‘positive’ if it is in <italic>P</italic> or as ‘unknown’ otherwise (labels <italic>p</italic> and <italic>x</italic> in <xref ref-type="fig" rid="btz360-F1">Fig. 1b</xref>). It then computes, for every edge in <italic>G</italic>, the shortest path through that edge that satisfies a provided regular expression, i.e. the edge labels along the path form a string in the corresponding regular language. The output is the union of these paths as <inline-formula id="IE8"><mml:math id="IM8"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> (<xref ref-type="fig" rid="btz360-F1">Fig. 1c</xref>). Our primary technical contribution is an algorithm to compute all these paths (i.e. one through each edge and constrained by the regular expression) in the same asymptotic time as taken to compute one such path.</p>
    <p>Our key insight is that a regular language acts as a constraint that allows us to control the number of and structure by which new edges and nodes are considered for addition to <italic>P</italic>. For example, the blue path in <xref ref-type="fig" rid="btz360-F1">Figure 1b</xref> satisfies the regular expression <inline-formula id="IE9"><mml:math id="IM9"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, i.e. the path starts with zero or more edges with label <italic>p</italic>, followed by two consecutive edges with label <italic>x</italic>, and ends in zero or more edges with label <italic>p</italic>. The pink path also satisfies this regular expression, since the labels along this path form the string <italic>xxpp</italic>. To see that this regular expression constrains the allowed paths, note that the green path on the left of <xref ref-type="fig" rid="btz360-F1">Figure 1b</xref> does not satisfy <inline-formula id="IE10"><mml:math id="IM10"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> since it contains four edges with label <italic>x</italic>. The yellow path on the right also violates this expression since its edge labels form the string <italic>xpp</italic>. In the output network <inline-formula id="IE11"><mml:math id="IM11"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> (<xref ref-type="fig" rid="btz360-F1">Fig. 1c</xref>), there are two additional paths (light blue and light pink) that satisfy <inline-formula id="IE12"><mml:math id="IM12"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>.</p>
    <p>Informally, a regular language is a set of strings with the property that an algorithm that uses a fixed amount of memory can examine the letters in the string sequentially to determine if it is a member of the language. For example, for the alphabet {<italic>p</italic>, <italic>x</italic>}, regular languages are expressive enough to represent strings with an even number of occurrences of <italic>p</italic> or strings where <italic>p</italic> and <italic>x</italic> strictly alternate an arbitrary number of times.</p>
    <p>To further facilitate pathway reconstruction, we present a novel technique for weighting the interactome, which we call random walk with edge restarts (RWER, Section 3.4). Weighting edges according to our confidence in the curation or experimental method (<xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>; <xref rid="btz360-B31" ref-type="bibr">Yeger-Lotem <italic>et al.</italic>, 2009</xref>; <xref rid="btz360-B33" ref-type="bibr">Yosef <italic>et al.</italic>, 2011</xref>) is not specific to any given pathway. RWER addresses this issue with a random walk whose transitions favor the interactions in a specific curated pathway that we want to reconstruct.</p>
    <p>We evaluate <sc>RegLinker</sc> and five other algorithms (Section 3.4) in their ability to reconstruct signaling pathways in the NetPath database. We develop three different models of withholding information (Section 4.2), inspired by the process by which knowledge about a pathway accumulates in the literature. In our first model, we derive a subnetwork of a curated pathway by withholding a random subset of pathway interactions. This approach tests the ability of algorithms to discover the interactions in a pathway where all or most of its proteins are known. Our second model makes the more realistic assumption that we do not know all the proteins in a pathway. Therefore, we derive a subnetwork of the pathway that does not contain a random selection of proteins or any of the pathway interactions involving them. The third model combines the first two.</p>
    <p>In Section 4, we demonstrate that <sc>RegLinker</sc>, in combination with RWER, offers a flexible and superior approach for pathway reconstruction. In particular, this approach achieves the highest or close to highest AUPRC values in all models, ranging from 0.69 for the interaction withholding model and 0.35 for protein recovery and 0.36 for interaction recovery in the combined model. We used <sc>RegLinker</sc> to propose new extensions to the pathways. Following enrichment analysis, we discuss the literature that supports the inclusion of these suggested proteins in the brain-derived neurotrophic factor (BDNF), Wnt and TNF<italic>α</italic> pathways.</p>
  </sec>
  <sec>
    <title>2 Related research</title>
    <p>Several algorithms exist to compute a compact subnetwork that connects a set of sources with a set of targets in an interaction network (<xref rid="btz360-B7" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>; <xref rid="btz360-B16" ref-type="bibr">Mohammadi <italic>et al.</italic>, 2013</xref>; <xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>; <xref rid="btz360-B22" ref-type="bibr">Silverbush and Sharan, 2014</xref>; <xref rid="btz360-B23" ref-type="bibr">Steffen <italic>et al.</italic>, 2002</xref>; <xref rid="btz360-B25" ref-type="bibr">Supper <italic>et al.</italic>, 2009</xref>; <xref rid="btz360-B27" ref-type="bibr">Tuncbag <italic>et al.</italic>, 2013</xref>; <xref rid="btz360-B31" ref-type="bibr">Yeger-Lotem <italic>et al.</italic>, 2009</xref>; <xref rid="btz360-B33" ref-type="bibr">Yosef <italic>et al.</italic>, 2011</xref>). An example is the <sc>PathLinker</sc> algorithm (<xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>) from which <sc>RegLinker</sc> takes inspiration. Given a user-defined parameter <italic>k</italic>, <sc>PathLinker</sc> computes the <italic>k</italic> shortest paths in the interactome that connect any receptor in <italic>P</italic> to any TF in <italic>P</italic>. <sc>PathLinker</sc> achieves efficiency by integrating Yen’s algorithm (<xref rid="btz360-B32" ref-type="bibr">Yen, 1971</xref>) with the <inline-formula id="IE13"><mml:math id="IM13"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> heuristic. Several of these algorithms were not originally developed to explicitly solve the problem of pathway reconstruction. They share a common characteristic: like <sc>PathLinker</sc> they do not require or exploit any knowledge of the intermediate proteins or interactions in <italic>P</italic>. Hence, they cannot be directly applied to curation-aware pathway reconstruction.</p>
    <p><xref rid="btz360-B17" ref-type="bibr">Navlakha <italic>et al.</italic> (2012)</xref> developed a method to solve a problem similar to ours. They computed the shortest paths between all pairs of receptors and TFs in <italic>P</italic>. They searched for disconnected pairs of nodes in <italic>P</italic> such that connecting the nodes by an edge yielded a shorter path between at least one receptor and one TF. They added to <italic>P</italic> the edge that yielded the greatest decrease in the sum of shortest paths costs between all pairs of receptors and TFs, and repeated the process until no such pair of nodes could be found. Their algorithm did not add new proteins to <italic>P</italic>.</p>
    <p>Note that other papers have considered related problems, e.g. determining the orientations of interactions (<xref rid="btz360-B7" ref-type="bibr">Gitter <italic>et al.</italic>, 2011</xref>; <xref rid="btz360-B22" ref-type="bibr">Silverbush and Sharan, 2014</xref>) or determining which proteins should be annotated to a specific pathway or a biological process (<xref rid="btz360-B10" ref-type="bibr">Jiang <italic>et al.</italic>, 2017</xref>). These algorithms cannot be directly applied to the problem we consider.</p>
  </sec>
  <sec>
    <title>3 Algorithms</title>
    <p>We first introduce the notion of paths in a directed graph that satisfy a regular language and describe an existing algorithm that computes shortest paths under this constraint (Section 3.1). Next, we present an approach that adds another criterion: compute the shortest regular language constrained path through every edge in the graph. We then describe the <sc>RegLinker</sc> algorithm (Section 3.3) as well as other algorithms that we compare to <sc>RegLinker</sc> (Section 3.4).</p>
    <sec>
      <title>3.1 Regular language constrained paths</title>
      <p>Suppose we are given a directed graph <inline-formula id="IE14"><mml:math id="IM14"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>V</italic> is the set of nodes, <italic>E</italic> is the set of directed edges, <inline-formula id="IE15"><mml:math id="IM15"><mml:mrow><mml:mi>c</mml:mi><mml:mo>:</mml:mo><mml:mi>E</mml:mi><mml:mo>→</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is a function that maps every edge in <italic>E</italic> to a positive, real-valued weight and <inline-formula id="IE16"><mml:math id="IM16"><mml:mrow><mml:mi>l</mml:mi><mml:mo>:</mml:mo><mml:mi>E</mml:mi><mml:mo>→</mml:mo><mml:mo>Σ</mml:mo></mml:mrow></mml:math></inline-formula> is a function that maps every edge to a label in an alphabet Σ. Given a regular language <inline-formula id="IE17"><mml:math id="IM17"><mml:mrow><mml:mi>L</mml:mi><mml:mo>⊆</mml:mo><mml:msup><mml:mrow><mml:mo>Σ</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, we say that a path <italic>π</italic> in <italic>G satisfies L</italic> if the concatenation of the labels of the edges in <italic>π</italic> forms a string that is a member of <italic>L</italic>.</p>
      <p>Given a source node <inline-formula id="IE18"><mml:math id="IM18"><mml:mrow><mml:mi>s</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> and a target node <inline-formula id="IE19"><mml:math id="IM19"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula>, <xref rid="btz360-B4" ref-type="bibr">Barrett <italic>et al.</italic> (2000)</xref> provide an algorithm to compute a shortest <italic>s</italic>–<italic>t</italic> path in <italic>G</italic> that satisfies <italic>L</italic>. Briefly, they (a) construct a new graph <italic>H </italic>=<italic> G </italic>×<italic> M</italic> that is an appropriately defined cross-product of <italic>G</italic> and the deterministic finite automaton (DFA) <italic>M</italic> that recognizes <italic>L</italic> and (b) compute a shortest path in <italic>H</italic> using Dijkstra’s algorithm (<xref ref-type="fig" rid="btz360-F2">Fig. 2</xref>). Intuitively, as we traverse an <italic>s</italic>–<italic>t</italic> path <italic>π</italic> in <italic>G</italic>, we can use the labels of the edges in <italic>π</italic> to traverse a path <italic>π<sub>M</sub></italic> in <italic>M</italic>. If <italic>π<sub>M</sub></italic> begins at the start state and terminates at a final state in <italic>M</italic>, then <italic>π</italic> satisfies <italic>L</italic>. The cross-product graph <italic>H</italic> permits us to record both traversals simultaneously. In <xref ref-type="fig" rid="btz360-F2">Figure 2c</xref>, the dark edges form two source to target paths in <italic>H</italic>, each corresponding to one of the <italic>s</italic>–<italic>t</italic> paths in <xref ref-type="fig" rid="btz360-F2">Figure 2b</xref> that has a label sequence recognized by the DFA in <xref ref-type="fig" rid="btz360-F2">Figure 2a</xref>. The running time of their algorithm is <inline-formula id="IE20"><mml:math id="IM20"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.
</p>
      <fig id="btz360-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>An illustration of paths that satisfy a regular language. (<bold>a</bold>) The DFA <italic>M</italic> for the regular expression <inline-formula id="IE21"><mml:math id="IM21"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. The start state is <italic>q</italic>. The final state has a double border. (<bold>b</bold>) A graph <italic>G</italic> with edge labels from the alphabet {<italic>p</italic>, <italic>x</italic>}. (<bold>c</bold>) The product graph <inline-formula id="IE22"><mml:math id="IM22"><mml:mrow><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mi>G</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula>. Node colors and shapes indicate how we pair nodes in <italic>G</italic> with states in <italic>M</italic>, while the color of an edge indicates whether it is possible (dark pink) or not possible (light pink) to find a source–target path through that edge. A path of light pink edges in <italic>H</italic> corresponds to a path in <italic>G</italic> whose labels form a string that the DFA will not recognize</p>
        </caption>
        <graphic xlink:href="btz360f2"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Regular language constrained shortest paths through each edge</title>
      <p>There are several ways in which we could use the approach of Barrett <italic>et al.</italic> to solve the curation-aware pathway reconstruction problem. We start with an observation made in earlier work on curation-<italic>unaware</italic> pathway reconstruction (<xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>): methods that computed compact source-to-target subnetworks, e.g. based on shortest paths between every source-target pair, network flow (<xref rid="btz360-B31" ref-type="bibr">Yeger-Lotem <italic>et al.</italic>, 2009</xref>), Steiner trees (<xref rid="btz360-B33" ref-type="bibr">Yosef <italic>et al.</italic>, 2011</xref>) and prize-collecting Steiner forests (<xref rid="btz360-B27" ref-type="bibr">Tuncbag <italic>et al.</italic>, 2013</xref>), achieved high precision but only low recall (10% or less). The <sc>PathLinker</sc> algorithm proposed by Ritz <italic>et al.</italic> computed the <italic>k</italic> shortest paths from any source to any target. Increasing <italic>k</italic> permitted the smooth expansion of the computed network. However, <sc>PathLinker</sc> had diminishing returns: several paths computed for larger values of <italic>k</italic> were composed entirely of edges in earlier paths.</p>
      <p>Based on these considerations, we adopt the following approach in this article. As in Section 3.1, we are given a directed, weighted, edge-labeled graph <italic>G</italic>, a source node <italic>s</italic>, a target node <italic>t</italic> and a regular language <italic>L</italic>. For each edge in <italic>G</italic>, we compute a shortest <italic>s</italic>–<italic>t</italic> path that passes through that edge and satisfies <italic>L</italic>. We output the union of these at most <inline-formula id="IE23"><mml:math id="IM23"><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> paths.</p>
      <p>Consider solving this problem for a single edge (<italic>u</italic>, <italic>v</italic>). The problem is NP-complete if we require the path to be simple (<xref rid="btz360-B4" ref-type="bibr">Barrett <italic>et al.</italic>, 2000</xref>). Therefore, we compute a <italic>non-simple path</italic> through (<italic>u</italic>, <italic>v</italic>) that satisfies <italic>L</italic> by exploiting two observations. First, if we assign a new set of labels to the edges in <italic>G</italic>, say the label <italic>λ</italic> to (<italic>u</italic>, <italic>v</italic>) and <italic>μ</italic> to every other edge, then the label sequence of every path that passes through (<italic>u</italic>, <italic>v</italic>) will satisfy the regular expression <inline-formula id="IE24"><mml:math id="IM24"><mml:mrow><mml:msup><mml:mrow><mml:mo>μ</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo>λ</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>λ</mml:mo><mml:mo>|</mml:mo><mml:mo>μ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Second, the intersection of two regular expressions is also regular. Therefore, to compute the desired path, we can utilize the algorithm of Barrett <italic>et al.</italic> by computing an appropriate shortest path in the cross-product graph <inline-formula id="IE25"><mml:math id="IM25"><mml:mrow><mml:mi>G</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>M</italic> is the DFA that recognizes <italic>L</italic> and <inline-formula id="IE26"><mml:math id="IM26"><mml:mrow><mml:mi>M</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is the DFA for <inline-formula id="IE27"><mml:math id="IM27"><mml:mrow><mml:msup><mml:mrow><mml:mo>μ</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo>λ</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>λ</mml:mo><mml:mo>|</mml:mo><mml:mo>μ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Since <inline-formula id="IE28"><mml:math id="IM28"><mml:mrow><mml:mi>M</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> has only two nodes, the running time of this algorithm is <inline-formula id="IE29"><mml:math id="IM29"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>H </italic>=<italic> G </italic>×<italic> M</italic>, as in Section 3.1.</p>
      <p>As we iterate over the edges of <italic>G</italic>, the DFA <inline-formula id="IE30"><mml:math id="IM30"><mml:mrow><mml:mi>M</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> remains the same but the product graph <inline-formula id="IE31"><mml:math id="IM31"><mml:mrow><mml:mi>G</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi><mml:mo>×</mml:mo><mml:mi>M</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> changes since the edge with the label <italic>λ</italic> also changes. Thus, a naive application of the above approach to each edge in <italic>G</italic> will yield a running time of <inline-formula id="IE32"><mml:math id="IM32"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, which is quadratic in the size of <italic>G</italic>. This running time is undesirable in practice.</p>
      <p>We have developed an algorithm that can compute all the desired shortest paths using only the cross-product <italic>H</italic> in <inline-formula id="IE33"><mml:math id="IM33"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time, thus saving a factor of <inline-formula id="IE34"><mml:math id="IM34"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. We present only the intuition here. If we did not have to satisfy the constraint imposed by <italic>L</italic>, then a shortest non-simple path through (<italic>u</italic>, <italic>v</italic>) in <italic>G</italic> is the concatenation of a shortest <italic>s</italic>–<italic>u</italic> path, the edge (<italic>u</italic>, <italic>v</italic>), and a shortest <italic>v</italic>–<italic>t</italic> path. We can compute the shortest paths from <italic>s</italic> to every node in <italic>G</italic> and from every node in <italic>G</italic> to <italic>t</italic> using two invocations of Dijkstra’s algorithm. Thus, we can compute all the shortest <italic>s</italic>–<italic>t</italic> paths through each edge of <italic>G</italic> in <inline-formula id="IE35"><mml:math id="IM35"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time. When we also have to satisfy the constraint imposed by the regular language <italic>L</italic>, we show that we can generalize this idea to <italic>H</italic>. We describe this algorithm in detail, prove its correctness, and analyze its running time in <xref ref-type="supplementary-material" rid="sup1">Supplementary Section S1</xref>. In addition, we illustrate the steps of <sc>RegLinker</sc> on a toy example in <xref ref-type="supplementary-material" rid="sup1">Supplementary Section S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Figure S5</xref>.</p>
    </sec>
    <sec>
      <title>3.3 RegLinker</title>
      <p>We are now ready to present the <sc>RegLinker</sc> algorithm for reconstructing signaling pathways, which will use the algorithm of Section 3.2 as a subroutine. Recall that the inputs to this problem are a weighted, directed graph <italic>G</italic> representing the interactome, a directed graph <italic>P</italic> representing a curated pathway, a set <italic>S</italic> of sources and a set <italic>T</italic> of targets. We assume that <italic>P</italic> is a subgraph of <italic>G</italic>.</p>
      <sec>
        <title>3.3.1 Multiple sources and targets</title>
        <p>The algorithm of Section 3.2 permits only a single source and a single target in the input, whereas <sc>RegLinker</sc> allows multiple sources and targets. Therefore, in order to use the algorithm of Section 3.2 in <sc>RegLinker</sc>, we add a supersource <italic>s</italic> to <italic>G</italic> and an edge from <italic>s</italic> to every node in the set <italic>S</italic> of sources. Analogously, we add a supertarget <italic>t</italic> to <italic>G</italic> and an edge from every node in the set <italic>T</italic> of targets to <italic>t</italic>. All these edges have unit weight. For each edge in <italic>G</italic> – {<italic>s</italic>, <italic>t</italic>}, we use the algorithm in Section 3.2 to compute <italic>s</italic>–<italic>t</italic> paths in <italic>G</italic> that satisfy the input regular language. We delete <italic>s</italic> and <italic>t</italic> from these paths.</p>
      </sec>
      <sec>
        <title>3.3.2 Regular-language constraints</title>
        <p>We use an alphabet <inline-formula id="IE36"><mml:math id="IM36"><mml:mrow><mml:mo>Σ</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> that contains three labels, standing for ‘positive’, ‘negative’ and ‘unknown’, respectively. Our choice of regular expressions depends on how we apply <sc>RegLinker</sc>. (i) When we evaluate the accuracy of <sc>RegLinker</sc> in reconstructing a specific curated pathway, we take <italic>P</italic> to be a subnetwork of this pathway. We create this subnetwork through a random sampling process. Since it is necessary to explain this process before we can motivate the different types of regular languages we use during evaluation, we present them in later sections (Sections 4.2 and 4.3). (ii) In contrast, when we use <sc>RegLinker</sc> to suggest new interactions for inclusion in a specific signaling pathway <italic>P</italic> (Section 4.7), we assign the label <italic>p</italic> to every edge in <italic>P</italic> and <italic>x</italic> to every edge in <italic>G</italic>–<italic>P</italic>; we do not use the label <italic>n</italic> in this analysis. We use the regular expression <inline-formula id="IE37"><mml:math id="IM37"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, i.e. we compute paths that contain zero or more edges in <italic>P</italic>, followed by two consecutive edges not in the pathway, and ending in zero or more edges in <italic>P</italic>.</p>
      </sec>
      <sec>
        <title>3.3.3 Multiple regular languages</title>
        <p>It may be desirable to specify many regular languages and to prioritize them. Our implementation can take an ordered list of regular languages in the input. We run <sc>RegLinker</sc> for each language in this order and concatenate the resulting ranked lists of nodes and edges. If an edge appears in multiple lists, we retain it only in the earliest one.</p>
      </sec>
      <sec>
        <title>3.3.4 Ranking edges and nodes in the output</title>
        <p>We order the edges in <italic>G</italic> in increasing order of weight. Then, for each edge <italic>e</italic> with a rank <italic>r</italic> (edges may be tied in weight), we assign a rank of <italic>r</italic> to every edge in the shortest <italic>s</italic>–<italic>t</italic> path via <italic>e</italic>, provided the edge has not already received a rank. For each <italic>r</italic>, the desired reconstruction <inline-formula id="IE38"><mml:math id="IM38"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is the union of <italic>P</italic> and all edges of rank <italic>r</italic> or better. We assign each node the smallest rank of any edge incident upon it.</p>
      </sec>
    </sec>
    <sec>
      <title>3.4 Other algorithms</title>
      <p>Here, we sketch five algorithms that we compare to <sc>RegLinker</sc>. For each method, we describe how we compute <inline-formula id="IE39"><mml:math id="IM39"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> and rank its edges for the purpose of evaluation; we rank nodes just as we do for <sc>RegLinker</sc>.</p>
      <sec>
        <title>3.4.1 PathLinker and EdgeLinker</title>
        <p><sc>PathLinker</sc> (<xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic>, 2016</xref>), which does not accept <italic>P</italic> as an input, computes the <italic>k</italic> shortest <italic>S</italic>–<italic>T</italic> paths in <italic>G</italic> in <inline-formula id="IE40"><mml:math id="IM40"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>E</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time. We used <italic>k </italic>=<italic> </italic>10 000 for our results.</p>
        <p>Inspired by <sc>RegLinker</sc>, we implemented a method we call <sc>EdgeLinker</sc> that finds the shortest (non-simple) <italic>S</italic>–<italic>T</italic> path through each edge in <italic>G</italic>. It computes these paths in <inline-formula id="IE41"><mml:math id="IM41"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>|</mml:mo><mml:mi>G</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time in the same way as <sc>RegLinker</sc>, i.e. for each edge (<italic>u</italic>, <italic>v</italic>), it concatenates the shortest <italic>S</italic>–<italic>u</italic> path, the edge, and the shortest <italic>v</italic>–<italic>T</italic> path. We define <inline-formula id="IE42"><mml:math id="IM42"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> to be the union of these paths. To allow <sc>EdgeLinker</sc> to take advantage of curated interactions, we set the cost of each edge in <italic>P</italic> to zero, allowing paths to use these edges for free. For both methods, we sort the paths in increasing order of length and assign to each edge the index of the first path in which it appears.</p>
      </sec>
      <sec>
        <title>3.4.2 Extended subgraph</title>
        <p>This method extends the idea of an induced subgraph. We iteratively compute the <italic>r</italic>-neighborhood <italic>H</italic>(<italic>r</italic>) of <italic>P</italic> in <italic>G</italic>, as follows: we set <inline-formula id="IE43"><mml:math id="IM43"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math></inline-formula>. For every <italic>i</italic> &gt;0, we set <italic>H</italic>(<italic>i</italic>) to be the union of all paths of length <italic>i</italic> in <italic>G</italic> – <italic>P</italic>, where every edge has label <italic>x</italic> and each path connects two nodes in <italic>P</italic>. To compute <italic>H</italic>(<italic>i</italic>), we add to <italic>G</italic> a source node <italic>s</italic>, a target node <italic>t</italic>, and for every node <italic>u</italic> in <italic>P</italic>, the edges (<italic>s</italic>, <italic>u</italic>) and (<italic>u</italic>, <italic>t</italic>). We then compute all simple paths between <italic>s</italic> and <italic>t</italic> consisting of <italic>i </italic>+<italic> </italic>2 edges (adding two to account for the edges incident on <italic>s</italic> and <italic>t</italic>) using a modified depth-first search (<xref rid="btz360-B20" ref-type="bibr">Sedgewick, 2001</xref>). We define <inline-formula id="IE44"><mml:math id="IM44"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> to be the union of all computed <italic>r</italic>-neighbourhoods. We rank the edges in <inline-formula id="IE45"><mml:math id="IM45"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> in decreasing order of weight. We use <italic>r </italic>=<italic> </italic>3 in our evaluations, i.e. <inline-formula id="IE46"><mml:math id="IM46"><mml:mrow><mml:mi>P</mml:mi><mml:mo>′</mml:mo><mml:mo>=</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>∪</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>∪</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>∪</mml:mo><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
      </sec>
      <sec>
        <title>3.4.3 Shortcuts</title>
        <p>This method considers only pairs of proteins in <italic>P</italic> that are not connected by an edge in <italic>P</italic> (<xref rid="btz360-B17" ref-type="bibr">Navlakha <italic>et al.</italic>, 2012</xref>). For each such pair, it computes to what extent an edge connecting them can be used as a ‘shortcut’ to decrease the cost of the sum of shortest <italic>s</italic>–<italic>t</italic> paths in <italic>P</italic>, for each (<italic>s</italic>, <italic>t</italic>) pair in <italic>S </italic>×<italic> T</italic>. The algorithm adds to <italic>P</italic> the edge that decreases this sum the most, and iterates until no further edge additions will lead to a decrease in the sum. We modified this algorithm to consider only pairs of nodes in <italic>P</italic> connected by an edge in <italic>G</italic> – <italic>P</italic>.</p>
      </sec>
      <sec>
        <title>3.4.4 Random walk with edge restarts</title>
        <p>Here, we describe a modified random walk with restarts that we use to compute a new set of edge weights for <italic>G</italic> that take into account the nodes and edges in the pathway <italic>P</italic> (<xref ref-type="fig" rid="btz360-F3">Fig. 3</xref>). For each edge <italic>e</italic> = (<italic>u</italic>, <italic>v</italic>) in <italic>P</italic>, we add an artificial node <italic>w<sub>e</sub></italic> and the directed edge (<italic>w<sub>e</sub></italic>, <italic>v</italic>). Given a probability <inline-formula id="IE47"><mml:math id="IM47"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>q</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, at any node <italic>u</italic>, the walker has two choices: move to an outgoing neighbor <italic>v</italic> of <italic>u</italic> with a probability of <inline-formula id="IE48"><mml:math id="IM48"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> or move to one of the artificial nodes created above with a probability of <inline-formula id="IE49"><mml:math id="IM49"><mml:mrow><mml:mi>q</mml:mi><mml:mo>/</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:msub><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>E<sub>P</sub></italic> denotes the set of edges in <italic>P</italic>. This approach forces a random walker that has transitioned to an artificial node (through a ‘restart’ step) to take its next step along an edge in <italic>P</italic>. To ensure that the transition matrix of this random walk is irreducible in practice, we add an edge from each node in <italic>G</italic> to every other node with a teleportation probability of <inline-formula id="IE50"><mml:math id="IM50"><mml:mrow><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>/</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>6</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>, as was done by <xref rid="btz360-B19" ref-type="bibr">Ritz <italic>et al.</italic> (2016</xref>); here, <italic>V</italic> is the set of nodes in <italic>G</italic>. In practice, <italic>G</italic> contains at least one cycle of length two and one cycle of length three. Therefore, this random walk has a stationary distribution, which we compute using power iteration. Finally, we compute a new weight <italic>c</italic>(<italic>e</italic>) for each edge <italic>e</italic> = (<italic>u</italic>, <italic>v</italic>) in <italic>G</italic> as follows: (i) we set <italic>c</italic>(<italic>e</italic>) to be the probability of traversing <italic>e</italic> during RWER, and (ii) we increment <italic>c</italic>(<italic>e</italic>) by <italic>c</italic>(<italic>w<sub>e</sub></italic>, <italic>v</italic>), the probability of traversing the corresponding artificial edge.
</p>
        <fig id="btz360-F3" orientation="portrait" position="float">
          <label>Fig. 3.</label>
          <caption>
            <p>An illustration of RWER. (<bold>a</bold>) Example interactome. Orange edges are in <italic>P</italic> and black edges in <italic>G</italic> – <italic>P</italic>. (<bold>b</bold>) Addition of one artificial node and edge for each edge in <italic>P</italic>. (<bold>c</bold>) At each step, the random walker can either transition along an edge in <italic>G</italic> (solid) that is incident on the current node, or follow a ‘restart’ edge (dashed) to an artificial node</p>
          </caption>
          <graphic xlink:href="btz360f3"/>
        </fig>
        <p>We use RWER in two ways: (a) to solve the curation-aware pathway reconstruction problem by ranking the edges in <italic>G</italic> – <italic>P</italic> in decreasing order of the edge weights computed by this method and (b) as a preprocessing step to reweight <italic>G</italic> before applying the other algorithms (including <sc>RegLinker</sc>).</p>
        <p>We adapt the approach of <xref rid="btz360-B16" ref-type="bibr">Mohammadi <italic>et al.</italic> (2013</xref>) to select <italic>q</italic> such that (1 − <italic>q</italic>)/<italic>q</italic>, the expected number of consecutive transitions along edges in <italic>G</italic> (before a restart), is the median distance from a node in <italic>P</italic> to a target in <italic>P</italic>. Since we measured this distance to be five in the NetPath pathways that we sought to reconstruct, we set <italic>q </italic>=<italic> </italic>0.1667 when we performed RWER.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <sec>
      <title>4.1 Datasets</title>
      <p>To construct a directed human protein interactome, we used the PSICQUIC server for protein-protein interactions (<xref rid="btz360-B3" ref-type="bibr">Aranda <italic>et al.</italic>, 2011</xref>) in combination with the PhosphoSitePlus (<xref rid="btz360-B9" ref-type="bibr">Hornbeck <italic>et al.</italic>, 2012</xref>) and NetPath databases (<xref rid="btz360-B11" ref-type="bibr">Kandasamy <italic>et al.</italic>, 2010</xref>). The resulting network contains 16 636 nodes and 286 561 interactions. We assigned interaction direction based on evidence of a directed enzymatic reaction (e.g., phosphorylation and dephosphorylation) from any of the source databases. We had sufficient evidence to assign a direction for 7922 of the interactions. We considered the remaining 286 561 interactions as undirected and represent each of these as two directed edges in the interactome. Thus, our interactome <italic>G</italic> has total of 565 200 edges, many of which are supported by multiple types of evidence. We weighted each edge in the network using a Bayesian approach that computes interaction probabilities based on the sources of evidence (<xref rid="btz360-B31" ref-type="bibr">Yeger-Lotem <italic>et al.</italic>, 2009</xref>). We provide more details on how we constructed the interactome and computed weights for its edges in Supplementary Section S3.</p>
      <p>We identified the signaling receptors and TFs from previously published lists of human receptors (<xref rid="btz360-B1" ref-type="bibr">Almen <italic>et al.</italic>, 2009</xref>) and TFs (<xref rid="btz360-B26" ref-type="bibr">Ravasi <italic>et al.</italic>, 2010</xref>; <xref rid="btz360-B28" ref-type="bibr">Vaquerizas <italic>et al.</italic>, 2009</xref>). We selected 15 NetPath pathways (<xref rid="btz360-B11" ref-type="bibr">Kandasamy <italic>et al.</italic>, 2010</xref>) that each contained at least one receptor, at least one TF, and had at least three <italic>S</italic>–<italic>T</italic> paths. We deleted every protein and interaction from the pathway that did not lie on a receptor-to-TF path in the directed graph representing the pathway. <xref rid="btz360-T1" ref-type="table">Table 1</xref> displays the number of proteins and interactions in each pathway.</p>
      <table-wrap id="btz360-T1" orientation="portrait" position="float">
        <label>Table 1.</label>
        <caption>
          <p>Sizes of 15 NetPath pathways and of the number of new proteins and interactions in their proposed extensions</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" rowspan="1">Original<hr/></th>
              <th colspan="3" rowspan="1">Proposed extension<hr/></th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">Pathway</th>
              <th rowspan="1" colspan="1">P</th>
              <th rowspan="1" colspan="1">I</th>
              <th rowspan="1" colspan="1">P</th>
              <th rowspan="1" colspan="1">I</th>
              <th rowspan="1" colspan="1">Proteins annotated to a significant GO term (%)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">BDNF</td>
              <td rowspan="1" colspan="1">35</td>
              <td rowspan="1" colspan="1">81</td>
              <td rowspan="1" colspan="1">24</td>
              <td rowspan="1" colspan="1">78</td>
              <td rowspan="1" colspan="1">21 (87.5)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">EGFR1</td>
              <td rowspan="1" colspan="1">184</td>
              <td rowspan="1" colspan="1">1327</td>
              <td rowspan="1" colspan="1">134</td>
              <td rowspan="1" colspan="1">466</td>
              <td rowspan="1" colspan="1">112 (83.58)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">IL-1</td>
              <td rowspan="1" colspan="1">35</td>
              <td rowspan="1" colspan="1">154</td>
              <td rowspan="1" colspan="1">29</td>
              <td rowspan="1" colspan="1">75</td>
              <td rowspan="1" colspan="1">26 (89.66)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">IL-2</td>
              <td rowspan="1" colspan="1">44</td>
              <td rowspan="1" colspan="1">168</td>
              <td rowspan="1" colspan="1">32</td>
              <td rowspan="1" colspan="1">97</td>
              <td rowspan="1" colspan="1">27 (84.38)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">IL-3</td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">126</td>
              <td rowspan="1" colspan="1">25</td>
              <td rowspan="1" colspan="1">91</td>
              <td rowspan="1" colspan="1">20 (80.00)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">IL-6</td>
              <td rowspan="1" colspan="1">45</td>
              <td rowspan="1" colspan="1">144</td>
              <td rowspan="1" colspan="1">28</td>
              <td rowspan="1" colspan="1">81</td>
              <td rowspan="1" colspan="1">27 (96.43)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">IL-7</td>
              <td rowspan="1" colspan="1">13</td>
              <td rowspan="1" colspan="1">42</td>
              <td rowspan="1" colspan="1">11</td>
              <td rowspan="1" colspan="1">31</td>
              <td rowspan="1" colspan="1">9 (81.82)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">KitReceptor</td>
              <td rowspan="1" colspan="1">52</td>
              <td rowspan="1" colspan="1">159</td>
              <td rowspan="1" colspan="1">46</td>
              <td rowspan="1" colspan="1">124</td>
              <td rowspan="1" colspan="1">38 (82.61)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Leptin</td>
              <td rowspan="1" colspan="1">35</td>
              <td rowspan="1" colspan="1">105</td>
              <td rowspan="1" colspan="1">23</td>
              <td rowspan="1" colspan="1">61</td>
              <td rowspan="1" colspan="1">12 (52.17)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Prolactin</td>
              <td rowspan="1" colspan="1">52</td>
              <td rowspan="1" colspan="1">160</td>
              <td rowspan="1" colspan="1">44</td>
              <td rowspan="1" colspan="1">141</td>
              <td rowspan="1" colspan="1">39 (88.64)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">RANKL</td>
              <td rowspan="1" colspan="1">30</td>
              <td rowspan="1" colspan="1">101</td>
              <td rowspan="1" colspan="1">21</td>
              <td rowspan="1" colspan="1">67</td>
              <td rowspan="1" colspan="1">18 (85.71)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">TCR</td>
              <td rowspan="1" colspan="1">106</td>
              <td rowspan="1" colspan="1">403</td>
              <td rowspan="1" colspan="1">63</td>
              <td rowspan="1" colspan="1">251</td>
              <td rowspan="1" colspan="1">55 (87.30)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">TGF<italic>β</italic></td>
              <td rowspan="1" colspan="1">170</td>
              <td rowspan="1" colspan="1">769</td>
              <td rowspan="1" colspan="1">131</td>
              <td rowspan="1" colspan="1">387</td>
              <td rowspan="1" colspan="1">99 (75.57)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">TNF<italic>α</italic></td>
              <td rowspan="1" colspan="1">195</td>
              <td rowspan="1" colspan="1">836</td>
              <td rowspan="1" colspan="1">161</td>
              <td rowspan="1" colspan="1">512</td>
              <td rowspan="1" colspan="1">130 (80.75)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Wnt</td>
              <td rowspan="1" colspan="1">90</td>
              <td rowspan="1" colspan="1">397</td>
              <td rowspan="1" colspan="1">75</td>
              <td rowspan="1" colspan="1">194</td>
              <td rowspan="1" colspan="1">57 (76.00)</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic>Note:</italic> In the final column, we consider only GO terms that are significant at the <italic>P </italic>&lt;<italic> </italic>0.001 level.</p>
          </fn>
          <fn id="tblfn2">
            <p>P, proteins; I, interactions.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>4.2 Evaluation</title>
      <p>To evaluate <sc>RegLinker</sc> and the other algorithms on the problem of reconstructing signaling pathways, we sought to develop a method akin to cross-validation. We decided against using <italic>k</italic>-fold cross-validation since partitioning the nodes and edges into multiple groups did not appear a realistic way to mimic the state of knowledge about a signaling pathway.</p>
      <p>Therefore, we consider three more natural models based on different assumptions about how the knowledge on a given signaling pathway accumulates in the literature. The <italic>interaction withholding</italic> model represents a scenario where we are confident that all the proteins in a pathway have been identified, but not all the interactions among them. Accordingly, we select a fraction <italic>α</italic> (uniformly at random) of the interactions in the pathway and give each selected interaction a label of <italic>x</italic> in <italic>G</italic>. We then assign the remaining interactions in the pathway the label <italic>p</italic> and present this subgraph as <italic>P</italic> to each algorithm. Similarly, we select a fraction <italic>α</italic> of edges from <italic>G</italic> – <italic>P</italic> to derive a set of negatives, i.e. we give each sampled interaction the label <italic>x</italic> and every other interaction in <italic>G</italic> the label <italic>n</italic>. Thus, every interaction in <italic>G</italic> has the label <italic>p</italic>, <italic>x</italic> or <italic>n</italic>.</p>
      <p>We also evaluate a second and more realistic <italic>protein withholding</italic> model, where we assume that both proteins and their incident interactions in the pathway are not completely known. Accordingly, we select a fraction <italic>β</italic> (uniformly at random) of proteins from the curated pathway. In <italic>G</italic>, we assign the label of <italic>x</italic> to every edge in the pathway that is incident on at least one of the selected nodes. As before, we assign the label of <italic>p</italic> to every other edge in the pathway. To derive negative edges, we select a fraction <italic>β</italic> of nodes in <italic>G</italic> that are not in the curated pathway and assign a label of <italic>x</italic> to every edge in <italic>G</italic> that is incident on at least one selected node. We evaluate each algorithm on its ability to recover withheld interactions as well as withheld proteins.</p>
      <p>Finally, we consider a <italic>combined</italic> model that withholds edges based on <italic>α</italic> and nodes (and their incident edges) through <italic>β</italic>. In this work, we present the results for the three models using <italic>α</italic> = 0.1 and for <italic>β</italic> = 0.1. We repeat the sampling process ten times for each pathway under each model. For each algorithm, we compute its precision-recall curve, aggregated over each random sample per pathway and then aggregated over each pathway.</p>
    </sec>
    <sec>
      <title>4.3 Selecting pre-processing strategy and regular languages</title>
      <p>We used the following intuition to guide our selection of regular language constraints. In the interaction withholding model, the more the number of <italic>x</italic>-labeled edges in a path, the less likely they are to be members of the pathway. Therefore, we allowed a small number (≤3) of <italic>x</italic>-labeled edges in a path, namely, <inline-formula id="IE51"><mml:math id="IM51"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE52"><mml:math id="IM52"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. We use ‘flex-<italic>a</italic>’ to denote expressions of this form, where ‘<italic>a</italic>’ refers to the number of <italic>x</italic>-labeled interactions permitted by the expression. When we combine many such expressions, we refer to them as ‘flex-<italic>a</italic>-<italic>b</italic>-<italic>c</italic>’, i.e. we prefer paths with <italic>a x</italic>-labeled interactions, before paths with <italic>b</italic> such interactions and so on. Note that we are effectively using regular expressions to count the number of <italic>x</italic>-labeled interactions in a path.</p>
      <p>Similarly, under the protein withholding model, every path must pass through at least two <italic>x</italic>-labeled interactions consecutively in order to recover a withheld pathway protein. Therefore, we used regular expressions of the form <inline-formula id="IE53"><mml:math id="IM53"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE54"><mml:math id="IM54"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi mathvariant="italic">xx</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, which allow only paths with two or three <italic>x</italic>-labeled interactions appearing in succession. We use ‘consec-<italic>a</italic>’ to denote such expressions. These regular expressions restrict the number of proteins in the path that are not members of the pathway to be at most one and two, respectively.</p>
      <p>The preprocessing strategy used for <sc>RegLinker</sc> also bears consideration. <xref ref-type="fig" rid="btz360-F4">Figure 4a</xref> displays the results for edge recovery with the flex-1 and consec-2 regular expressions under the combined withholding model (<inline-formula id="IE55"><mml:math id="IM55"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>β</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>) for <sc>RegLinker</sc> using different interactome preprocessing strategies (RWER, RWR and the evidence-based weights). For RWR, we restart to nodes that are tails of edges in <italic>P</italic>. We see that RWER offers a significant advantage over the competing preprocessing methods. The results also emphasize the non-specificity of evidence-based weighting: a large number of interactions (both within and outside curated pathways) have a high weight. Consequently, the corresponding precision-recall curves begin at a high recall and moderate precision. In light of this result, we henceforth apply <sc>RegLinker</sc> on the RWER-weighted interactome, referring to this approach as ‘<sc>RegLinker</sc>+ RWER’. We do the same for <sc>Extended Subgraph</sc>. We do not apply the preprocessing for <sc>EdgeLinker</sc>, as the reweighting conflicts how we input <italic>P</italic> to it.
</p>
      <fig id="btz360-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>Precision–recall curves of <sc>RegLinker</sc> for edge recovery in the combined withholding model for different (<bold>a</bold>) interactome weighting methods and (<bold>b</bold>) regular language constraints</p>
        </caption>
        <graphic xlink:href="btz360f4"/>
      </fig>
      <p><xref ref-type="fig" rid="btz360-F4">Figure 4b</xref> demonstrates the importance of selecting the appropriate regular languages to provide as constraints for <sc>RegLinker</sc> + RWER. The constraint flex-1 (red curve) offers the best precision but much lower recall than other curves. In contrast, flex-2 (orange) and flex-3 (green) offer successively higher recall; however, their precision is lower. Prioritizing these constraints (flex-1-2, light green and flex-1-2-3, blue) combines the higher precision of flex-1 with the higher recall of flex-2 and flex-3. These results indicate that we do not incur a precision penalty for including expressions successively in this manner. The consec-a constraints, whether individual or combined (purple, pink and brown) have lower precision than flex-1-2-3. Therefore, we subsequently elect to show the results obtained when providing <sc>RegLinker</sc> + RWER the constraints ‘flex-1-2-3’ (in the case of edge recovery) and the constraints ‘consec-2-3’ (in the case of node recovery). In Supplementary Section S4.2, we present DFA sizes (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>) and the product graph sizes and running times (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>).</p>
    </sec>
    <sec>
      <title>4.4 Interaction withholding model</title>
      <p>This model offers a simple test of the reconstruction capabilities of an algorithm. In practice, most proteins in the pathway will still be connected to at least one of the interactions labeled <italic>p</italic>. Algorithms like <sc>RegLinker</sc> can potentially use these labels to greatly prune the search space. <sc>RegLinker</sc> + RWER with the flex-1-2-3 constraint (brown curve in <xref ref-type="fig" rid="btz360-F5">Fig. 5</xref>) and <sc>Extended Subgraph</sc> + RWER (green) achieves the highest AUPRC values (0.69), clearly dominating the others. <sc>PathLinker’</sc>s performance (red) achieves an AUPRC of only 0.18. On the other hand, <sc>EdgeLinker</sc> (blue) has a precision-recall curve that starts with recall almost at one, an artifact of the Bayesian weighting as previously discussed in Section 4.3. With an AUPRC of 0.26, RWER (orange) is superior to <sc>PathLinker</sc> but considerably worse than <sc>RegLinker</sc> + RWER and <sc>Extended Subgraph</sc> + RWER. The Shortcuts algorithm (purple) achieves moderate to low precision but very low recall since it adds only a few edges in the induced subgraph of <italic>P</italic>. We do not consider it further. We provide statistics on the running time of all methods for this model in <xref ref-type="supplementary-material" rid="sup1">Supplementary Section S4.2</xref> (<xref ref-type="supplementary-material" rid="sup1">Table S3</xref>).
</p>
      <fig id="btz360-F5" orientation="portrait" position="float">
        <label>Fig. 5.</label>
        <caption>
          <p>Precision-recall curves under the interaction withholding model (<inline-formula id="IE56"><mml:math id="IM56"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>)</p>
        </caption>
        <graphic xlink:href="btz360f5"/>
      </fig>
    </sec>
    <sec>
      <title>4.5 Protein withholding model</title>
      <p>The protein withholding model presents a more realistic challenge by removing any knowledge of the withheld proteins from the pathway <italic>P</italic> presented to the reconstruction algorithms. Thus, to achieve high recall of withheld proteins and the interactions involving them, algorithms such as <sc>Extended Subgraph</sc> and <sc>RegLinker</sc> must recover consecutive pairs of interactions, e.g. (<italic>u</italic>, <italic>v</italic>) and (<italic>v</italic>, <italic>w</italic>), where <italic>v</italic> is the protein withheld.</p>
      <sec>
        <title>4.5.1 Protein recovery</title>
        <p>RWER (orange curve, AUPRC = 0.37, <xref ref-type="fig" rid="btz360-F6">Fig. 6a</xref>) compares favorably to the other algorithms, including <sc>RegLinker</sc> + RWER (consec-2-3) (brown curve, AUPRC = 0.34). Note that RWER is not guaranteed to produce pathway-like subnetworks since it does not explicitly compute source-to-target paths. The difficulty presented by this model is also readily apparent. Notably, <sc>Extended Subgraph</sc> (green) performs much more poorly in this evaluation, achieving an AUPRC of just 0.25. Indeed, at points, the precision of <sc>PathLinker</sc> (red, AUPRC = 0.18), which serves as a control, surpasses that of <sc>Extended Subgraph</sc>. <sc>EdgeLinker</sc> (blue) also does very poorly.
</p>
        <fig id="btz360-F6" orientation="portrait" position="float">
          <label>Fig. 6.</label>
          <caption>
            <p>Precision-recall curves under the protein withholding model (<inline-formula id="IE57"><mml:math id="IM57"><mml:mrow><mml:mo>β</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>) for (<bold>a</bold>) protein recovery and (<bold>b</bold>) interaction recovery</p>
          </caption>
          <graphic xlink:href="btz360f6"/>
        </fig>
      </sec>
      <sec>
        <title>4.5.2 Interaction recovery</title>
        <p>The increased challenge of this model is also reflected in <xref ref-type="fig" rid="btz360-F6">Figure 6b</xref>, which shows that all algorithms except <sc>PathLinker</sc> suffer a significant performance decrease in interaction recovery compared to the interaction withholding model (<xref ref-type="fig" rid="btz360-F5">Fig. 5</xref>). Once again, <sc>RegLinker</sc> + RWER (consec-2-3) (brown, AUPRC = 0.22) and <sc>Extended Subgraph</sc> (green, AUPRC = 0.19) offer the best performance. However, RWER (orange, AUPRC = 0.16) displays comparable performance to both methods as recall increases beyond 0.4.</p>
      </sec>
    </sec>
    <sec>
      <title>4.6 Combined withholding model</title>
      <p><xref ref-type="fig" rid="btz360-F7">Figure 7</xref> shows the performance attained by algorithms under the combined withholding model. When recovering withheld proteins, <sc>RegLinker</sc> + RWER (flex-1-2-3, purple and consec-2-3, brown) obtained a similar AUPRC (0.35); RWER (orange curve) and <sc>Extended Subgraph</sc> + RWER (green curve) achieved AUPRCs of 0.37 and 0.29, respectively (<xref ref-type="fig" rid="btz360-F7">Fig. 7a</xref>). For edge recovery, <sc>RegLinker</sc> + RWER (flex-1-2-3) had an AUPRC of 0.36 and <sc>RegLinker</sc> + RWER (consec-2-3) had an AUPRC of 0.27, while RWER had an AUPRC of 0.21 and <sc>Extended Subgraph</sc> + RWER had an AUPRC of 0.37 (<xref ref-type="fig" rid="btz360-F7">Fig. 7b</xref>). Considering both sets of plots together, <sc>RegLinker</sc> + RWER flex-1-2-3 offers the most consistent performance.
</p>
      <fig id="btz360-F7" orientation="portrait" position="float">
        <label>Fig. 7.</label>
        <caption>
          <p>Precision-recall curves under the combined withholding model (<inline-formula id="IE58"><mml:math id="IM58"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>β</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>) for (<bold>a</bold>) protein recovery and (<bold>b</bold>) interaction recovery. In (a), we show the plot for flex-1-2-3 (purple) as a thick curve to indicate that it is almost identical to the consec-2-3 curve (brown)</p>
        </caption>
        <graphic xlink:href="btz360f7"/>
      </fig>
      <p>The curves for protein recovery (<xref ref-type="fig" rid="btz360-F7">Fig. 7a</xref>) closely mirror those seen in <xref ref-type="fig" rid="btz360-F6">Figure 6a</xref>, while the trends for interaction recovery (<xref ref-type="fig" rid="btz360-F7">Fig. 7b</xref>) for each algorithm generally fall between edge recovery under the node and edge withholding models (<xref ref-type="fig" rid="btz360-F5">Figs 5 and 6b</xref>, respectively). With <italic>α</italic> = 0.1 and <italic>β</italic> = 0.1, we withhold nearly 20% of interactions in an average pathway. Withheld interactions are nevertheless easier for the algorithm to identify in the combined model than the protein withholding model.</p>
    </sec>
    <sec>
      <title>4.7 RegLinker + RWER interaction recovery across individual pathways</title>
      <p>So far, we have been studying precision-recall curves aggregated over all pathways. However, some pathways may be more amenable to reconstruction than others. To investigate this possibility, for each pathway, we examined the distribution of AUPRC scores (over the 10 runs for each pathway) of <sc>RegLinker</sc> + RWER using the flex-1-2-3 expressions. The median AUPRC for interaction recovery in the combined withholding model varied from 0.25 to 0.6 (<xref ref-type="fig" rid="btz360-F8">Fig. 8</xref>).
</p>
      <fig id="btz360-F8" orientation="portrait" position="float">
        <label>Fig. 8.</label>
        <caption>
          <p>Distribution of AUPRC values for each pathway for <sc>RegLinker</sc> + RWER (flex-1-2-3) for interaction recovery in the combined withholding model (<inline-formula id="IE59"><mml:math id="IM59"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mo>β</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>)</p>
        </caption>
        <graphic xlink:href="btz360f8"/>
      </fig>
      <p>Many of the smaller pathways (e.g. BDNF, IL-7 and RANKL) had a large variation in the AUPRC values. Smaller pathways may be more sensitive to randomized withholding in our models. For example, the IL-7 pathway has 13 proteins and 42 interactions with Janus Kinase (JAK) connected to nine proteins while the tyrosine-protein kinase Fyn (FYN) is connected to only two; hence, removal of even a single protein in this pathway can have widely varying results, depending on the protein removed. In contrast, larger pathways, such as EGFR, TGF-<italic>β</italic> and Wnt, display less variance. These results reflect the challenge in creating reconstruction methods that work robustly across a range of pathways.</p>
    </sec>
    <sec>
      <title>4.8 Proposing pathway extensions using RegLinker</title>
      <p>We applied <sc>RegLinker</sc> to propose extensions to the 15 NetPath pathways under consideration. To this end, for each pathway <italic>P</italic>, we assigned the label <italic>p</italic> to every interaction in <italic>P</italic> and the label <italic>x</italic> to every other interaction in the interactome <italic>G</italic>, i.e. to every edge in <italic>G</italic> – <italic>P</italic>. We noted that paths constrained by the ‘flex–a’ type of regular expression do not always suggest any proteins for inclusion in the pathway. Therefore, we focused our attention on ‘consec-a’ type of regular expressions that we used in the protein withholding model. Specifically, we used the ‘consec-2’ regular expression i.e. <inline-formula id="IE60"><mml:math id="IM60"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. We removed every <italic>x</italic>-labeled interaction in <italic>G</italic> that connected two proteins in <italic>P</italic>; this step ensured that the node incident on both <italic>x</italic>-labeled edges in every path that satisfied <inline-formula id="IE61"><mml:math id="IM61"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> was not already be a member of <italic>P</italic>. We then computed the shortest path through every edge labeled <italic>p</italic> that satisfied <inline-formula id="IE62"><mml:math id="IM62"><mml:mrow><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>x</mml:mi><mml:mi>x</mml:mi><mml:msup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. We proposed the union of these paths as the extension of <italic>P</italic>. For each pathway, <xref rid="btz360-T1" ref-type="table">Table 1</xref> summarizes its size and that of the proposed extension. We also considered computing these paths through every edge in <italic>G</italic>. We did not analyze these results since the resulting extensions contained thousands of nodes and edges.</p>
      <p>In order to investigate the cellular functions of the proposed proteins and the relevance to their respective pathways, we used Enrichr (<xref rid="btz360-B15" ref-type="bibr">Kuleshov <italic>et al.</italic>, 2016</xref>) to compute their enrichment in gene ontology (GO) biological process (BP) terms and in other biological pathway databases. For as many as 14 of the 15 pathways, we observed that over 75% of the proposed proteins were annotated to at least one significant GO BP term (<italic>P </italic>&lt;<italic> </italic>0.001) (final column of <xref rid="btz360-T1" ref-type="table">Table 1</xref>). Due to the hierarchical structure of the GO, several enriched terms were closely related to each other. Therefore, we used REVIGO (<xref rid="btz360-B24" ref-type="bibr">Supek <italic>et al.</italic>, 2011</xref>) in order to summarize the significant GO terms.</p>
      <p>Here, we focus our attention on three pathways of different sizes: BDNF [35 proteins, 81 interactions, Wnt (90 and 395) and TNF<italic>α</italic> (195 and 386)]. We observed that a large fraction of the new proteins proposed by <sc>RegLinker</sc> had functions corresponding to the biological role of the ligand involved in the respective pathway. <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref> summarizes the GO terms and pathways we discuss below.</p>
      <sec>
        <title>4.8.1 BDNF pathway</title>
        <p>BDNF is a protein that promotes the survival of neurons. Its neuroprotective and anti-apoptotic effects are well known (<xref rid="btz360-B5" ref-type="bibr">Chen <italic>et al.</italic>, 2017</xref>). We observed that 11 out of 24 proteins proposed by <sc>RegLinker</sc> for this pathway are annotated to the term ‘negative regulation of apoptotic process’ (GO: 0043066, <italic>P </italic>&lt;<italic> </italic>10<sup>−</sup><sup>8</sup>). Furthermore, recent work has implicated BDNF in promoting angiogenesis in endothelial cells (ECs) (<xref rid="btz360-B13" ref-type="bibr">Kermani and Hempstead, 2007</xref>). However, the mechanism by which BDNF maintains the angiogenetic potential of ECs is still unknown (<xref rid="btz360-B29" ref-type="bibr">Wang <italic>et al.</italic>, 2019</xref>). We observed that four out of 24 proposed proteins for BDNF are annotated to ‘regulation of angiogenesis’ (GI: 0045765, <italic>P </italic>&lt;<italic> </italic>10<sup>−</sup><sup>3</sup>); in contrast, only one protein (NTF4) in the original BDNF pathway is annotated to this term. Therefore, our proposed extension to the current BDNF pathway may help to shed light on the role of BDNF in angiogenesis.</p>
      </sec>
      <sec>
        <title>4.8.2 Wnt pathway</title>
        <p><sc>RegLinker</sc> identified 75 new proteins to add to the Wnt signaling pathway. Of these, 12 proteins are annotated to ‘negative regulation of Wnt signaling’ (GO: 0030178, <italic>P </italic>&lt;<italic> </italic>10<sup>−8</sup>). Thus, all these proteins are ideal candidates for inclusion in the pathway. Moreover, the interactions that connect them to proteins that are already in the NetPath-curated Wnt pathway may suggest mechanisms of negative regulation. A second relevant GO term was ‘macrophage differentiation’ (GO: 0030225). Three of the proposed proteins are annotated to this term (<italic>P </italic>&lt;<italic> </italic>10<sup>−3</sup>). A recent study reported the activation of Wnt signaling during monocyte-to-macrophage differentiation (<xref rid="btz360-B30" ref-type="bibr">Yang <italic>et al.</italic>, 2018</xref>). Enrichr also reported that seven proteins were annotated to Adherens junction pathway in the KEGG database (hsa04520, <italic>P </italic>&lt;<italic> </italic>10<sup>−7</sup>), which is a well-known non-canonical Wnt pathway (<xref rid="btz360-B2" ref-type="bibr">Amin and Vincan, 2012</xref>). Interestingly, six of the proteins suggested by <sc>RegLinker</sc> are annotated to the Wnt pathway in the KEGG database (hsa04310, <italic>P </italic>&lt;<italic> </italic>10<sup>−3</sup>).</p>
      </sec>
      <sec>
        <title>4.8.3 TNF<italic>α</italic> pathway</title>
        <p>TNF<italic>α</italic> is implicated in apoptosis (<xref rid="btz360-B18" ref-type="bibr">Rath and Aggarwal, 1999</xref>), and 39 out of 161 proposed proteins for TNF<italic>α</italic> pathway are annotated to the term ‘regulation of apoptotic process’ (GO: 0042981, <italic>P </italic>&lt;<italic> </italic>10<sup>−15</sup>). Enrichr found that 16 proposed proteins are members of the KEGG Influenza A pathway (hsa05164, <italic>P </italic>&lt;<italic> </italic>10<sup>−9</sup>) and 11 additional proteins are in the KEGG NF-<italic>κ</italic>B signaling pathway (hsa04064, <italic>P </italic>&lt;<italic> </italic>10<sup>−7</sup>). Studies have shown that TNF<italic>α</italic> has an anti-influenza virus activity (<xref rid="btz360-B21" ref-type="bibr">Seo and Webster, 2002</xref>) and that it has anti-rotavirus activity via the activation of NF-<italic>κ</italic>B signaling pathway (<xref rid="btz360-B8" ref-type="bibr">Hakim <italic>et al.</italic>, 2018</xref>).</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>5 Discussion and conclusions</title>
    <p>In this article, we have formulated the curation-aware pathway reconstruction problem and developed <sc>RegLinker</sc> as a solution. The key idea at the heart of <sc>RegLinker</sc> is using regular expressions to control the relative proportion of novel interactions in the reconstructed pathway. Regular expressions offer considerable flexibility. For instance, if we are given information on whether a (directed) edge indicates activation or inhibition, we can use regular expressions to compute paths where the total effect of all interactions in the path is activating or inhibitory (record whether the number of inhibitory edges is even or odd). We can also integrate other types of data, e.g. consider only paths where a certain number of genes is differentially expressed in an RNA-seq dataset. Another possibility is to encode cellular location of proteins, e.g. to compute paths whose proteins are located in a specific sequence of organelles.</p>
    <p>We evaluated <sc>RegLinker</sc> and five competing algorithms on three models for withholding information on a curated pathway. <sc>PathLinker</sc> and <sc>EdgeLinker</sc> took no or imperfect advantage of the pathway, leading them to recover pathway proteins and interactions poorly. The different facets of <sc>Extended Subgraph</sc> and RWER revealed their different strengths. Neighborhood constraints enabled <sc>Extended Subgraph</sc> to significantly reduce the edges it considers when recovering interactions; as a result, it performs better than RWER at this task. However, RWER displays better protein recovery performance, indicating that that the constraints that aid <sc>Extended Subgraph</sc> in filtering interactions force it to make mistakes when ranking proteins. By using receptor–to–TF shortest paths that are constrained by regular languages, <sc>RegLinker</sc> + RWER presents a compromise between these approaches, proving capable in each evaluation.</p>
    <p>These results also underscore the greatly increased difficulty of pathway reconstruction under the protein and combined withholding models. Our results reveal that evidence-based weighting procedures and reconstruction approaches rooted in graph topology are alone insufficient to reliably distinguish withheld pathway interactions. In contrast, we have demonstrated that <sc>RegLinker</sc> + RWER produces competitive reconstructions under various hypothetical models of pathway knowledge, guided by the flexibility afforded by regular languages. Our results offer insights into the promise of these automated techniques for pathway reconstruction, and the obstacles they must overcome if they are to generalize well across multiple signaling pathways.</p>
    <p>Methods such as <sc>RegLinker</sc> are appropriate for signaling pathways and other biological processes where sources and targets can be readily identified. The vast majority of interactions are unlikely to be related to signaling. Developing approaches to annotate interactions to non-signaling related processes is an important open problem.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btz360_Supplementary_Data</label>
      <media xlink:href="btz360_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank Jeff Law for providing the interaction network.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by grants from the National Science Foundation [CCF-1617678, DBI-1759858] and the National Institute of General Medical Sciences [R01-GM095955] to T. M. M. We also acknowledge support from the Computational Tissue Engineering interdisciplinary graduate education program at Virginia Tech.</p>
      <p><italic>Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz360-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Almen</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Mapping the human membrane proteome: a majority of the human membrane proteins can be classified according to function and evolutionary origin</article-title>. <source>BMC Biol</source>., <volume>7</volume>, <fpage>50.</fpage><pub-id pub-id-type="pmid">19678920</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Amin</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Vincan</surname><given-names>E.</given-names></name></person-group> (<year>2012</year>) 
<article-title>The Wnt signaling pathways and cell adhesion</article-title>. <source>Front. Biosci</source>., <volume>17</volume>, <fpage>784</fpage>–<lpage>804</lpage>.</mixed-citation>
    </ref>
    <ref id="btz360-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aranda</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>PSICQUIC and PSISCORE: accessing and scoring molecular interactions</article-title>. <source>Nat. Methods</source>, <volume>8</volume>, <fpage>528</fpage>–<lpage>529</lpage>.<pub-id pub-id-type="pmid">21716279</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Barrett</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2000</year>) 
<article-title>Formal-language-constrained path problems</article-title>. <source>SIAM J. Comput</source>., <volume>30</volume>, <fpage>809</fpage>–<lpage>837</lpage>.</mixed-citation>
    </ref>
    <ref id="btz360-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>S.-D.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>More insight into BDNF against neurodegeneration: anti-apoptosis, anti-oxidation, and suppression of autophagy</article-title>. <source>Int. J. Mol. Sci</source>., <volume>18</volume>, <fpage>545</fpage>.</mixed-citation>
    </ref>
    <ref id="btz360-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fabregat</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>The Reactome pathway Knowledgebase</article-title>. <source>Nucleic Acids Res</source>., <volume>44</volume>, <fpage>D481</fpage>–<lpage>D487</lpage>.<pub-id pub-id-type="pmid">26656494</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gitter</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Discovering pathways by orienting edges in protein interaction networks</article-title>. <source>Nucleic Acids Res</source>., <volume>39</volume>, <fpage>e22.</fpage><pub-id pub-id-type="pmid">21109539</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hakim</surname><given-names>M.S.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>TNF-α exerts potent anti-rotavirus effects via the activation of classical NF-<italic>κ</italic>B pathway</article-title>. <source>Virus Res</source>., <volume>253</volume>, <fpage>28</fpage>–<lpage>37</lpage>.<pub-id pub-id-type="pmid">29859235</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hornbeck</surname><given-names>P.V.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>PhosphoSitePlus: a comprehensive resource for investigating the structure and function of experimentally determined post-translational modifications in man and mouse</article-title>. <source>Nucleic Acids Res</source>., <volume>40</volume>, <fpage>D261</fpage>–<lpage>D270</lpage>.<pub-id pub-id-type="pmid">22135298</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jiang</surname><given-names>B.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>AptRank: an adaptive PageRank model for protein function prediction on bi-relational graphs</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>1829</fpage>–<lpage>1836</lpage>.<pub-id pub-id-type="pmid">28200073</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kandasamy</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>NetPath: a public resource of curated signal transduction pathways</article-title>. <source>Genome Biol</source>., <volume>11</volume>, <fpage>R3.</fpage><pub-id pub-id-type="pmid">20067622</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>KEGG as a reference resource for gene and protein annotation</article-title>. <source>Nucleic Acids Res</source>., <volume>44</volume>, <fpage>D457</fpage>–<lpage>D462</lpage>.<pub-id pub-id-type="pmid">26476454</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kermani</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Hempstead</surname><given-names>B.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Brain-derived neurotrophic factor: a newly described mediator of angiogenesis</article-title>. <source>Trends Cardiovasc. Med</source>., <volume>17</volume>, <fpage>140</fpage>–<lpage>143</lpage>.<pub-id pub-id-type="pmid">17482097</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kuleshov</surname><given-names>M.V.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Enrichr: a comprehensive gene set enrichment analysis web server 2016 update</article-title>. <source>Nucleic Acids Res</source>., <volume>44</volume>, <fpage>W90</fpage>–<lpage>W97</lpage>.<pub-id pub-id-type="pmid">27141961</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mohammadi</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Inferring the effective TOR-dependent network: a computational study in yeast</article-title>. <source>BMC Syst. Biol</source>., <volume>7</volume>, <fpage>84.</fpage><pub-id pub-id-type="pmid">24005029</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Navlakha</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>A network-based approach for predicting missing pathway interactions</article-title>. <source>PLoS Comput. Biol</source>., <volume>8</volume>, <fpage>e1002640.</fpage><pub-id pub-id-type="pmid">22916002</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rath</surname><given-names>P.C.</given-names></name>, <name name-style="western"><surname>Aggarwal</surname><given-names>B.B.</given-names></name></person-group> (<year>1999</year>) 
<article-title>TNF-induced signaling in apoptosis</article-title>. <source>J. Clin. Immunol</source>., <volume>19</volume>, <fpage>350</fpage>–<lpage>364</lpage>.<pub-id pub-id-type="pmid">10634209</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ritz</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Pathways on demand: automated reconstruction of human signaling networks</article-title>. <source>NPJ Syst. Biol. Appl</source>., <volume>2</volume>, <fpage>16002</fpage>.<pub-id pub-id-type="pmid">28725467</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B20">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Sedgewick</surname><given-names>R.</given-names></name></person-group> (<year>2001</year>) <source>Algorithms in C, Part 5: Graph Algorithms</source>, <edition>3</edition>rd edn. 
<publisher-name>Addison-Wesley</publisher-name>, 
<publisher-loc>Boston, MA</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btz360-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Seo</surname><given-names>S.H.</given-names></name>, <name name-style="western"><surname>Webster</surname><given-names>R.G.</given-names></name></person-group> (<year>2002</year>) 
<article-title>Tumor necrosis factor alpha exerts powerful anti-influenza virus effects in lung epithelial cells</article-title>. <source>J. Virol</source>., <volume>70</volume>, <fpage>7388</fpage>–<lpage>7397</lpage>.</mixed-citation>
    </ref>
    <ref id="btz360-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Silverbush</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Sharan</surname><given-names>R.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Network orientation via shortest paths</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>1449</fpage>–<lpage>1455</lpage>.<pub-id pub-id-type="pmid">24470573</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Steffen</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2002</year>) 
<article-title>Automated modelling of signal transduction networks</article-title>. <source>BMC Bioinformatics</source>, <volume>3</volume>, <fpage>34.</fpage><pub-id pub-id-type="pmid">12413400</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Supek</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>REVIGO summarizes and visualizes long lists of gene ontology terms</article-title>. <source>PLoS One</source>, <volume>6</volume>, <fpage>e21800.</fpage><pub-id pub-id-type="pmid">21789182</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Supper</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>BowTieBuilder: modeling signal transduction pathways</article-title>. <source>BMC Syst. Biol</source>., <volume>3</volume>, <fpage>67</fpage>.<pub-id pub-id-type="pmid">19566957</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ravasi</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>An atlas of combinatorial transcriptional regulation in mouse and man</article-title>. <source>Cell</source>, <volume>140</volume>, <fpage>744</fpage>–<lpage>752</lpage>.<pub-id pub-id-type="pmid">20211142</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tuncbag</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Simultaneous reconstruction of multiple signaling pathways via the prize-collecting Steiner forest problem</article-title>. <source>J. Comput. Biol</source>., <volume>20</volume>, <fpage>124</fpage>–<lpage>136</lpage>.<pub-id pub-id-type="pmid">23383998</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Vaquerizas</surname><given-names>J.M.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>A census of human transcription factors: function, expression and evolution</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>252</fpage>–<lpage>263</lpage>.<pub-id pub-id-type="pmid">19274049</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Z.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>The TrkB-T1 receptor mediates BDNF-induced migration of aged cardiac microvascular endothelial cells by recruiting Willin</article-title>. <source>Aging Cell</source>, <volume>18</volume>, <fpage>e12881.</fpage><pub-id pub-id-type="pmid">30667167</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Crosstalk between hepatic tumor cells and macrophages via Wnt/β-catenin signaling promotes M2-like macrophage polarization and reinforces tumor malignant behaviors</article-title>. <source>Cell Death Dis</source>., <volume>9</volume>, <fpage>793.</fpage><pub-id pub-id-type="pmid">30022048</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yeger-Lotem</surname><given-names>E.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Bridging high-throughput genetic and transcriptional data reveals cellular responses to alpha-synuclein toxicity</article-title>. <source>Nat. Genet</source>., <volume>41</volume>, <fpage>316</fpage>–<lpage>323</lpage>.<pub-id pub-id-type="pmid">19234470</pub-id></mixed-citation>
    </ref>
    <ref id="btz360-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yen</surname><given-names>J.Y.</given-names></name></person-group> (<year>1971</year>) 
<article-title>Finding the k shortest loopless paths in a network</article-title>. <source>Manage. Sci</source>., <volume>17</volume>, <fpage>712</fpage>–<lpage>716</lpage>.</mixed-citation>
    </ref>
    <ref id="btz360-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yosef</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>ANAT: a tool for constructing and analyzing functional protein networks</article-title>. <source>Sci. Signal</source>., <volume>4</volume>, <fpage>pl1.</fpage><pub-id pub-id-type="pmid">22028466</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

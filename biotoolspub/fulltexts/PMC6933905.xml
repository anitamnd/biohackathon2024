<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6933905</article-id>
    <article-id pub-id-type="publisher-id">6386</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-019-6386-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PaCBAM: fast and scalable processing of whole exome and targeted sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Valentini</surname>
          <given-names>Samuel</given-names>
        </name>
        <address>
          <email>samuel.valentini@unitn.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fedrizzi</surname>
          <given-names>Tarcisio</given-names>
        </name>
        <address>
          <email>tarcisio.fedrizzi@unitn.it</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Demichelis</surname>
          <given-names>Francesca</given-names>
        </name>
        <address>
          <email>f.demichelis@unitn.it</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4855-8620</contrib-id>
        <name>
          <surname>Romanel</surname>
          <given-names>Alessandro</given-names>
        </name>
        <address>
          <email>alessandro.romanel@unitn.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 0351</institution-id><institution-id institution-id-type="GRID">grid.11696.39</institution-id><institution>Laboratory of Bioinformatics and Computational Genomics, Department of Cellular, Computational and Integrative Biology (CIBIO), </institution><institution>University of Trento, </institution></institution-wrap>Trento, Italy </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1937 0351</institution-id><institution-id institution-id-type="GRID">grid.11696.39</institution-id><institution>Laboratory of Computational and Functional Oncology, Department of Cellular, Computational and Integrative Biology (CIBIO), </institution><institution>University of Trento, </institution></institution-wrap>Trento, Italy </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>26</day>
      <month>12</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>12</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>1018</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>3</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>12</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Interrogation of whole exome and targeted sequencing NGS data is rapidly becoming a preferred approach for the exploration of large cohorts in the research setting and importantly in the context of precision medicine. Single-base and genomic region level data retrieval and processing still constitute major bottlenecks in NGS data analysis. Fast and scalable tools are hence needed.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">PaCBAM is a command line tool written in C and designed for the characterization of genomic regions and single nucleotide positions from whole exome and targeted sequencing data. PaCBAM computes depth of coverage and allele-specific pileup statistics, implements a fast and scalable multi-core computational engine, introduces an innovative and efficient <italic>on-the-fly</italic> read duplicates filtering strategy and provides comprehensive text output files and visual reports. We demonstrate that PaCBAM exploits parallel computation resources better than existing tools, resulting in important reductions of processing time and memory usage, hence enabling an efficient and fast exploration of large datasets.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PaCBAM is a fast and scalable tool designed to process genomic regions from NGS data files and generate coverage and pileup comprehensive statistics for downstream analysis. The tool can be easily integrated in NGS processing pipelines and is available from Bitbucket and Docker/Singularity hubs.</p>
      </sec>
    </abstract>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par8">Genomic region and single-base level data retrieval and processing, which represent fundamental steps in genomic analyses such as copy number estimation, variant calling and quality control, still constitute one of the major bottlenecks in NGS data analysis. To deal with the computationally intensive task of calculating depth of coverage and pileup statistics at specific chromosomal regions and/or positions, different tools have been developed. Most of them, including specific modules of SAMtools [<xref ref-type="bibr" rid="CR1">1</xref>] and BEDTools [<xref ref-type="bibr" rid="CR2">2</xref>] and the most recent Mosdepth [<xref ref-type="bibr" rid="CR3">3</xref>], only measure and optimize the computation of depth of sequencing coverage. Few others, like the <italic>pileup</italic> modules of SAMtools, Sambamba [<xref ref-type="bibr" rid="CR4">4</xref>], GATK [<xref ref-type="bibr" rid="CR5">5</xref>] and ASEQ [<xref ref-type="bibr" rid="CR6">6</xref>] provide instead statistics at single-base resolution, which is essential to perform variant calling, allele-specific analyses and exhaustive quality control. Although most of these tools offer parallel computation options, scalability in terms of memory and multiple processes/threads usage is still limited. To enable an efficient exploration of large scale NGS datasets, here we introduce PaCBAM, a tool that provides fast and scalable processing of targeted re-sequencing data of varying sizes, from WES to small gene panels. Specifically, PaCBAM computes depth of coverage and allele-specific pileup statistics at regions and single-base resolution levels and provides data summary visual reporting utilities. PaCBAM introduces also an innovative and efficient <italic>on-the-fly</italic> read duplicates filtering approach. While most tools for read duplicates filtering work on SAM/BAM files sorted by read name [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] or read position (Tarasov et al., 2015, <ext-link ext-link-type="uri" xlink:href="http://broadinstitute.github.io/picard">broadinstitute.github.io/picard</ext-link>) and generate new SAM/BAM files, PACBAM performs the filtering directly during the processing, not requiring the creation of intermediate BAM/SAM files and fully exploiting parallel resources.</p>
    <sec id="Sec2">
      <title>Implementation</title>
      <p id="Par9">PaCBAM is a command line tool written in C programming language that combines multi-threaded computation, SAMTools APIs, and an ad-hoc data structures implementation. PaCBAM expects as input a sorted and indexed BAM file, a sorted BED file with the coordinates of genomic regions (namely the <italic>target</italic>, e.g. captured regions of a WES experiment), a VCF file specifying a list of SNPs of interest within the <italic>target</italic> and a reference genome in FASTA format. PaCBAM implements a multi-threaded solution that optimizes the execution time when multiple cores are available. The tool splits the list of regions provided in the BED file and spawns different threads to execute parallel computations using a shared and optimized data structure. The shared data structure collects both region and single-base level information and statistics which are processed and finally exposed through four different output options. Each output mode provides the user with only the statistics of interest, generating a combination of the following text output files: a) <italic>depth of coverage of all genomic regions</italic>, which for each region provides the mean depth of coverage, the GC content and the mean depth of coverage of the sub-region (user specified, default 0.5 fraction) that maximizes the coverage peak signal, to account for the reduced coverage depth due to incomplete match of reads to the captured regions (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1); b) <italic>single-base resolution pileup</italic>, which provides for each genomic position in the target the read depth for the 4 possible bases (A, C, G and T), the total depth of coverage, the variants allelic fraction (VAF), the strand bias information for each base; c) <italic>pileup of positions with alternative base support</italic>, which extracts the pileup statistics only for positions with positive VAF, computed using the alternative base with highest coverage (if any); d) <italic>pileup of SNPs positions</italic>, which extracts the pileup statistics for all SNPs specified in the input VCF file and uses the alternative alleles specified in the VCF file for the VAF calculation and the genotype assignment (Additional file <xref rid="MOESM1" ref-type="media">1</xref> for details). All output files are tab-delimited text files and their format details are provided in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p id="Par10">PaCBAM allows the user to specify the minimum base quality score and the minimum read mapping quality to filter out reads during the pileup processing.</p>
      <p id="Par11">In addition, we implemented an efficient <italic>on-the-fly</italic> duplicated reads filtering strategy which implements an approach that is similar to the Picard MarkDuplicates method but that applies the filter during region and single-base level information retrieval and processing without the need of creating new BAM files (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The filtering strategy, which fully exploits multi-core capabilities, uses single or paired read alignment positions (corrected for soft-clipping at the 5′ end) and total mapping size information to identify duplicates and implements ad-hoc data structures to obtain computational efficiency.</p>
      <p id="Par12">PaCBAM package also includes a Python script to generate visual data reports which can be directly used for quality control. Reports include plots summarizing distributions of regions and per-base depth of coverage, SNPs VAF distribution and genotyping, strand bias distribution, substitutions spectra, regions GC content (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S2-S8).</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Results</title>
    <p id="Par13">PaCBAM performances were tested on an AMD Opteron 6380 32-cores machine with 256 GB RAM. To mimic different application scenarios, we measured the execution time and memory used by PaCBAM to compute pileups from multiple input BAM files spanning different depth of coverage and different target sizes (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1) using an increasing number of threads. We compared PACBAM performances against pileup modules of SAMtools, Sambamba and GATK (SAMtools offer no parallel pileup option).</p>
    <p id="Par14">In terms of runtime, as shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>a and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S9-S11, PaCBAM and Sambamba are the only tools that scale with the number of threads used. PaCBAM outperforms all other tools in all tested conditions. Of note, while PaCBAM pileup output files are of constant size, output files of SAMtools, Sambamba and GATK have a size that is function of the coverage; among all the experiments we run in the performance analyses, PaCBAM output is up to 17.5x smaller with respect to outputs generated by the other tested tools.
<fig id="Fig1"><label>Fig. 1</label><caption><p>PaCBAM performances. Time (<bold>a</bold>) and memory (<bold>b</bold>) required by PaCBAM to perform a pileup compared to SAMtools, GATK and Sambamba, using increasing number of threads. The figure focuses on the analysis of a BAM file with ~300X mean coverage and ~30Mbp target size using 30 threads. Note that parallel pileup option is not available for SAMtools and red lines in panel <bold>a</bold> and <bold>b</bold> refer to the average of single thread executions</p></caption><graphic xlink:href="12864_2019_6386_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par15">While GATK and PaCBAM, as shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S12-S14, have a memory usage that depends only on the target size, Sambamba usage depends on both target size and number of threads and SAMtools usage is constant. Above 8 cores, PaCBAM beats both GATK and Sambamba in all tested conditions in memory usage.</p>
    <p id="Par16">As an example of performance comparison, when analyzing a BAM file with ~300X mean coverage and ~30Mbp target size using 30 threads (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a-b), PaCBAM improves execution time of 4.9x/5.27x and requires 80%/82% less memory compared to Sambamba/GATK.</p>
    <p id="Par17">Of note, in the sequencing scenarios here considered, PaCBAM demonstrates up to 100x execution time improvement and up to 90% less memory usage with respect to the single-base pileup module of our previous tool ASEQ (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S15).</p>
    <p id="Par18">Depth of coverage and pileup statistics of PaCBAM pileup were compared to GATK results on a BAM file with ~300X average coverage and ~64Mbp target size observing almost perfect concordance (Fig. <xref rid="Fig2" ref-type="fig">2</xref>a-b).
<fig id="Fig2"><label>Fig. 2</label><caption><p>Comparison of PaCBAM results with other tools. <bold>a</bold> Comparison of PaCBAM and GATK depth of coverage (left) with zoom in the coverage range [0,500] (right); number of positions considered in the analysis and correlation results are reported. <bold>b</bold> Comparison of allelic fraction of ~ 40 K positions annotated as SNPs in dbSNP database v144 and having an allelic fraction &gt; 0.2 in both PaCBAM and GATK pileup output. <bold>c</bold> Single-base coverage obtained by running either <italic>Picard MarkDuplicates + PaCBAM pileup</italic> or <italic>PaCBAM pileup with duplicates filtering</italic> option active (left) with zoom in the coverage range [0,500] (right). <bold>d</bold> Regional mean depth of coverage obtained by running either <italic>Picard MarkDuplicates + PaCBAM pileup</italic> or <italic>PaCBAM pileup with duplicates filtering</italic> option active</p></caption><graphic xlink:href="12864_2019_6386_Fig2_HTML" id="MO2"/></fig></p>
    <p id="Par19">PaCBAM duplicates removal strategy was tested by comparing PaCBAM pileups obtained from a paired-end BAM file first processed with Picard MarkDuplicates or parallel Sambamba markdup, to PaCBAM pileups obtained from the same initial BAM file but using the embedded on-the-fly duplicates filtering. As shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>c-d and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S16, both single-base and region level statistics results are strongly concordant, with single-base total coverage difference (with respect to Picard) that in 99.94% of positions is &lt; 10X, single-base allelic fraction difference that in 99.95% of positions is &lt; 1% and region mean coverage difference that in 99.96% of regions is &lt;10X (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S17). In addition, PaCBAM strategy improves overall execution time of 2.5x/1.7x with a single thread and of 25x/3x with 30 threads compared to Picard and parallel Sambamba, respectively (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2, Fig. <xref rid="Fig2" ref-type="fig">2</xref>c, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S16A).</p>
    <p id="Par20">Overall, these analyses demonstrate that PaCBAM exploits parallel computation resources better than existing tools, resulting in evident reductions of processing time and memory usage, that enable a fast and efficient coverage and allele-specific characterization of large WES and targeted sequencing datasets. The performance analysis is completely reproducible using an ad-hoc Debian-based Singularity container (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S3).</p>
  </sec>
  <sec id="Sec4">
    <title>Conclusion</title>
    <p id="Par21">We presented PaCBAM, a fast and scalable tool to process genomic regions from NGS data files and generate coverage and pileup statistics for downstream analysis such as copy number estimation, variant calling and data quality control. Although designed for targeted re-sequencing data, PaCBAM can be used to characterize any set of genomic regions of interest from NGS data. PaCBAM generates both region and single-base level statistics and provides a fast and innovative <italic>on-the-fly</italic> read duplicates filtering strategy. The tool is easy to use, can be integrated in any NGS pipeline and is available in source/binary version on Bitbucket and containerized from Docker and Singularity hubs.</p>
  </sec>
  <sec id="Sec5">
    <title>Availability and requirements</title>
    <p id="Par22">Project name: PaCBAM</p>
    <p id="Par23">Project home page: <ext-link ext-link-type="uri" xlink:href="http://bcglab.cibio.unitn.it/PaCBAM">bcglab.cibio.unitn.it/PaCBAM</ext-link></p>
    <p id="Par24">Operating system(s): Platform independent</p>
    <p id="Par25">Programming language: C, Python</p>
    <p id="Par26">License: MIT</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec6">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12864_2019_6386_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1: Figure S1.</bold> Genomic region mean coverage computation. <bold>Figure S2.</bold> Cumulative coverage distribution report. <bold>Figure S3.</bold> Variant allelic fraction distribution report. <bold>Figure S4.</bold> SNP allelic fraction distribution report. <bold>Figure S5.</bold> Alternative bases distribution report. <bold>Figure S6.</bold> Strand bias distribution report. <bold>Figure S7.</bold> Genomic regions depth of coverage distribution report. <bold>Figure S8.</bold> Genomic regions GC content distribution report. <bold>Figure S9.</bold> Run time comparison at 150X depth of coverage. <bold>Figure S10.</bold> Run time comparison at 230X depth of coverage. <bold>Figure S11.</bold> Run time comparison at 300X depth of coverage. <bold>Figure S12.</bold> Memory usage comparison at 150X depth of coverage. <bold>Figure S13.</bold> Memory usage comparison at 230X depth of coverage. <bold>Figure S14.</bold> Memory usage comparison at 300X depth of coverage. <bold>Figure S15.</bold> Memory usage comparison among PaCBAM pileup and pileup module of ASEQ. <bold>Figure S16.</bold> Comparison of PaCBAM duplicates filtering strategy to Sambamba markdup and Picard MarkDuplicates modules. <bold>Figure S17.</bold> Performance of PaCBAM duplicated reads filtering. <bold>Table S1.</bold> Mean depth of coverage and target sizes of all BAM files used to test PaCBAM performance.<bold>Table S2.</bold> Time and memory usage of duplicates filtering performance analyses. <bold>Table S3.</bold> Versions of the tools used in performance evaluation analysis.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par4">Next-Generation Sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>SNP</term>
        <def>
          <p id="Par5">Single Nucleotide Polymorphism</p>
        </def>
      </def-item>
      <def-item>
        <term>VAF</term>
        <def>
          <p id="Par6">Variant(s) Allele Frequency</p>
        </def>
      </def-item>
      <def-item>
        <term>WES</term>
        <def>
          <p id="Par7">Whole-Exome Sequencing</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12864-019-6386-6.</p>
  </sec>
  <ack>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>AR designed and implemented PaCBAM. SV designed and implemented visual reporting scripts and performed all performance analyses. TF and FD contributed with tool testing, access to computational resources and performance analyses. AR supervised the project. All authors contributed to the writing and editing of the manuscript and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>The research leading to these results has received funding from AIRC under MFAG 2017 - ID. 20621 project - P.I. Romanel Alessandro - for the design, implementation and performance analyses and from NCI P50 CA211024-01 Weill Cornell Medicine Prostate Cancer SPORE - Demichelis Francesca - for testing and performance analyses.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>All data and analysis scripts supporting the results of this article are available at bcglab.cibio.unitn.it/PaCBAM_Performance_Analysis.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par27">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par28">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par29">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fennell</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Homer</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The sequence alignment/map format and SAMtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>841</fpage>
        <lpage>842</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq033</pub-id>
        <pub-id pub-id-type="pmid">20110278</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedersen</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
        </person-group>
        <article-title>Mosdepth: quick coverage calculation for genomes and exomes</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>867</fpage>
        <lpage>868</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx699</pub-id>
        <pub-id pub-id-type="pmid">29096012</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tarasov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vilella</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Cuppen</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Nijman</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Prins</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Sambamba: fast processing of NGS alignment formats</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>2032</fpage>
        <lpage>2034</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv098</pub-id>
        <pub-id pub-id-type="pmid">25697820</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>KV</given-names>
          </name>
          <name>
            <surname>Maguire</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat Genet</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.806</pub-id>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Romanel A, Lago S, Prandi D, Sboner A, Demichelis F. ASEQ: fast allele-specific studies from next-generation sequencing data. BMC Med Genet. 2015;8. 10.1186/s12920-015-0084-2.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faust</surname>
            <given-names>GG</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>SAMBLASTER: fast duplicate marking and structural variant read extraction</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>2503</fpage>
        <lpage>2505</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu314</pub-id>
        <pub-id pub-id-type="pmid">24812344</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5260120</article-id>
    <article-id pub-id-type="publisher-id">1328</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-016-1328-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Multi-CAR: a tool of contig scaffolding using multiple references</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Chen</surname>
          <given-names>Kun-Tze</given-names>
        </name>
        <address>
          <email>holystu@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Chen</surname>
          <given-names>Cheih-Jung</given-names>
        </name>
        <address>
          <email>urostigma@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Shen</surname>
          <given-names>Hsin-Ting</given-names>
        </name>
        <address>
          <email>m800914@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Chia-Liang</given-names>
        </name>
        <address>
          <email>john14728@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Huang</surname>
          <given-names>Shang-Hao</given-names>
        </name>
        <address>
          <email>huangtim30@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Lu</surname>
          <given-names>Chin Lung</given-names>
        </name>
        <address>
          <email>cllu@cs.nthu.edu.tw</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0532 0580</institution-id><institution-id institution-id-type="GRID">grid.38348.34</institution-id><institution>Department of Computer Science, </institution><institution>National Tsing Hua University, </institution></institution-wrap>Hsinchu, 30013 Taiwan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>12</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>23</day>
      <month>12</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2016</year>
    </pub-date>
    <volume>17</volume>
    <issue>Suppl 17</issue>
    <issue-sponsor>Publication of this supplement has not been supported by sponsorship. Information about the source of funding for publication charges can be found in the individual articles. The articles have undergone the journal's standard peer review process for supplements. The Supplement Editors declare that they have no competing interests.</issue-sponsor>
    <elocation-id>469</elocation-id>
    <permissions>
      <copyright-statement>© The Author(s) 2016</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>A draft genome assembled by current next-generation sequencing techniques from short reads is just a collection of contigs, whose relative positions and orientations along the genome being sequenced are unknown. To further obtain its complete sequence, a contig scaffolding process is usually applied to order and orient the contigs in the draft genome. Although several single reference-based scaffolding tools have been proposed, they may produce erroneous scaffolds if there are rearrangements between the target and reference genomes or their phylogenetic relationship is distant. This may suggest that a single reference genome may not be sufficient to produce correct scaffolds of a draft genome.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>In this study, we design a simple heuristic method to further revise our single reference-based scaffolding tool CAR into a new one called Multi-CAR such that it can utilize multiple complete genomes of related organisms as references to more accurately order and orient the contigs of a draft genome. In practical usage, our Multi-CAR does not require prior knowledge concerning phylogenetic relationships among the draft and reference genomes and libraries of paired-end reads. To validate Multi-CAR, we have tested it on a real dataset composed of several prokaryotic genomes and also compared its accuracy performance with other multiple reference-based scaffolding tools Ragout and MeDuSa. Our experimental results have finally shown that Multi-CAR indeed outperforms Ragout and MeDuSa in terms of sensitivity, precision, genome coverage, scaffold number and scaffold N50 size.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>Multi-CAR serves as an efficient tool that can more accurately order and orient the contigs of a draft genome based on multiple reference genomes. The web server of Multi-CAR is freely available at <ext-link ext-link-type="uri" xlink:href="http://genome.cs.nthu.edu.tw/Multi-CAR/">http://genome.cs.nthu.edu.tw/Multi-CAR/</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Bioinformatics</kwd>
      <kwd>Next-generation sequencing</kwd>
      <kwd>Contigs</kwd>
      <kwd>Scaffolding</kwd>
      <kwd>Multiple references</kwd>
    </kwd-group>
    <conference>
      <conf-name>The 27th International Conference on Genome Informatics</conf-name>
      <conf-loc>Shanghai, China</conf-loc>
      <conf-date>3-5 October 2016</conf-date>
      <string-conf>
        <uri>http://admis.fudan.edu.cn/giw2016/</uri>
      </string-conf>
    </conference>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2016</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>In the past decade, the techniques of next-generation sequencing (NGS) have advanced greatly so that an increasing number of genome sequences can be produced rapidly at a moderate cost [<xref ref-type="bibr" rid="CR1">1</xref>]. Nevertheless, most of the genomes sequenced by currently NGS techniques are just <italic>draft</italic> (or <italic>unfinished</italic>) genomes with collections of independent contigs whose relative positions and orientations along the genome being sequenced are unknown [<xref ref-type="bibr" rid="CR2">2</xref>]. To address this issue, a process called <italic>scaffolding</italic> is then used to order and orient the contigs in a draft genome [<xref ref-type="bibr" rid="CR3">3</xref>]. After that, the subsequent finishing process utilizes a so-called primer walking technique to closing the gaps between ordered and oriented contigs [<xref ref-type="bibr" rid="CR4">4</xref>]. Currently, however, the primer walking procedure is still expensive and work-intensive. Therefore, the accuracy of the scaffolding process can be very helpful to obtain a complete genome of an organism in the finishing process, because given <italic>n</italic> ordered and oriented contigs, only <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n)$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2016_1328_Article_IEq1.gif"/></alternatives></inline-formula>, instead of <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n^{2})$\end{document}</tex-math><mml:math id="M4"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2016_1328_Article_IEq2.gif"/></alternatives></inline-formula>, primer walking procedures are needed to close the gaps between them, greatly reducing the cost and time for completely sequencing genomes.</p>
    <p>Actually, in addition to paired-end read mapping approaches [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], resequencing is another commonly used approach in the scaffolding process [<xref ref-type="bibr" rid="CR7">7</xref>]. Usually, the resequencing approaches require a complete genome of a related organism to serve as a reference. Basically, given a target draft genome and its reference genome, the resequencing methods first map the contigs onto the reference genome and then infer the ordering and orientations of the contigs according to their positions on the reference genome. Currently, several scaffolding tools based on the resequencing approach have been proposed. However, most of them use only one reference genome to derive the order and orientations of contigs, such as OSLay [<xref ref-type="bibr" rid="CR8">8</xref>], ABACAS [<xref ref-type="bibr" rid="CR9">9</xref>], Mauve Aligner [<xref ref-type="bibr" rid="CR10">10</xref>], fillScaffolds [<xref ref-type="bibr" rid="CR11">11</xref>], r2cat [<xref ref-type="bibr" rid="CR12">12</xref>], SIS [<xref ref-type="bibr" rid="CR13">13</xref>] and CAR [<xref ref-type="bibr" rid="CR14">14</xref>]. As evaluated in our previous study [<xref ref-type="bibr" rid="CR14">14</xref>], CAR we implemented based on a rearrangement-based algorithm [<xref ref-type="bibr" rid="CR15">15</xref>] has a better performance among all these single reference-based scaffolding tools in terms of average sensitivity, precision and genome coverage. However, all these single reference-based scaffolding tools may produce erroneous scaffolds (i.e., ordered and oriented contigs) if there are rearrangements between the target and reference genomes or their phylogenetic relationship is distant. This may suggest that a single reference genome may not be sufficient to produce correct scaffolds of a target draft genome.</p>
    <p>Ragout [<xref ref-type="bibr" rid="CR16">16</xref>] and MeDuSa [<xref ref-type="bibr" rid="CR17">17</xref>] are recently developed scaffolding tools based on the resequencing approach using multiple reference genomes. Given a target of draft genome, multiple reference genomes, and a phylogenetic tree of them, Ragout represents all the target and reference genomes as sequences of synteny blocks (or lists of signed numbers). It then creates a so-called incomplete multi-color breakpoint graph, in which vertices represent the ends of synteny blocks and edges denote adjacencies of two synteny blocks occurring in the target and reference genomes. In addition, each edge is colored by using the color of the genome in which its corresponding adjacency occurs. Basically, the target genome is fragmented into contigs and hence some adjacencies of synteny blocks in the target genome are missing. Next, Ragout tries to recover these missing adjacencies by utilizing other existing adjacencies from the reference genomes. In this process, it requires to calculate the parsimony costs of all possible missing adjacencies by solving a so-called half-breakpoint state parsimony problem on the given phylogenetic tree, which is already known to be NP-hard. Hence, Ragout instead utilizes a heuristic method to obtain the approximate parsimony costs of all possible missing adjacencies. After that, it finds a perfect matching with minimum cost from a graph constructed by all possible missing adjacencies to order and orient the contigs of the target genome. In fact, Ragout repeats the above procedure several times with different synteny block sizes and then combines the scaffolds returned in all the iterations into a single set of scaffolds. In addition, Ragout performs a refinement step to insert some small and repetitive contigs back to the resulting scaffolds.</p>
    <p>As for MeDuSa, it constructs a so-called scaffolding graph from the given target and reference genomes (without requiring a given phylogenetic tree), in which vertices represent contigs in the target genome and weighted edges denote adjacencies of two contigs if they can be mapped to the reference genomes, where the weight of an edge indicates how many reference genomes support the existence of such contig adjacency. Next, since a path in the scaffolding graph corresponds to an order of some contigs, MeDuSa tries to find a path cover with maximum weight from the scaffolding graph. However, the path cover problem is known as NP-hard. In the above process, MeDuSa hence utilizes a 2-approximation algorithm to find an approximate path cover from the scaffolding graph. Finally, MeDuSa applies a majority rule to determine the orientations of contigs on each path of the approximate path cover.</p>
    <p>In this study, we revise our single reference-based scaffolding tool CAR [<xref ref-type="bibr" rid="CR14">14</xref>] into a new web server called Multi-CAR (multiple-reference version of CAR) by a simple heuristic method such that it can utilize multiple complete genomes of related organisms as references to more accurately order and orient the contigs of a draft genome. Like MeDuSa, our Multi-CAR does not require prior knowledge concerning phylogenetic relationships among target and reference genomes and libraries of paired-end reads. However, in contrast to Ragout and MeDuSa, both attempting to solve an NP-hard problem, the algorithm behind our Multi-CAR involves only polynomially solvable problems. To validate Multi-CAR, we have tested it on a real dataset composed of several prokaryotic genomes and also compared its performance with Ragout and MeDuSa. As a consequence, our experimental results have shown that Multi-CAR indeed performs better than Ragout and MeDuSa in terms of many metrics like sensitivity, precision, genome coverage, scaffold number and scaffold N50 size.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Overview of CAR</title>
      <p>In the study of CAR [<xref ref-type="bibr" rid="CR14">14</xref>], we formulated the single reference-based scaffolding problem as follows: Given a target genome <italic>π</italic> with a set of contigs and a reference genome <italic>σ</italic>, the goal of the problem is to order and orient the contigs of the target genome in a way that minimizes the rearrangement distance between the ordered and oriented target genome and the reference genome. Basically, there are many rearrangement operations to measure the distance between two genomes. In CAR, we used reversals and block-interchanges with weight ratio 1:2 to measure such rearrangement distance and moreover utilized the techniques of permutation groups in algebra to compute it. To apply the permutation groups on <italic>π</italic> and <italic>σ</italic>, we needed to represent them as two permutations of <italic>n</italic> signed integers between 1 and <italic>n</italic>, where each integer denotes a conserved genetic marker between <italic>π</italic> and <italic>σ</italic> and its sign represents the strandedness of the corresponding genetic marker. For this purpose, we used the program NUCmer or PROmer from MUMmer’s package [<xref ref-type="bibr" rid="CR18">18</xref>] to detect conserved genetic markers between <italic>π</italic> and <italic>σ</italic>. Note that in this process, NUCmer was performed on nucleotide sequences of <italic>π</italic> and <italic>σ</italic>, while PROmer was performed on amino acid sequences of <italic>π</italic> and <italic>σ</italic> translated from their nucleotide sequences in all six reading frames. After that, we applied an efficient algorithm we designed based on the permutation groups in [<xref ref-type="bibr" rid="CR15">15</xref>] on the signed permutations of <italic>π</italic> and <italic>σ</italic> to order and orient the contigs of <italic>π</italic> according to the reference genome <italic>σ</italic>. Basically, we considered a contig as a linear chromosome and the job of scaffolding two contigs as a <italic>fusion</italic> of their corresponding chromosomes. Suppose that there are <italic>m</italic> contigs in <italic>π</italic>. Then our algorithm in [<xref ref-type="bibr" rid="CR15">15</xref>] can find <italic>m</italic>−1 fusions to join these <italic>m</italic> contigs in <italic>π</italic> in linear time such that the resulting <italic>π</italic> has the minimum rearrangement distance from <italic>σ</italic>. We refer the reader to our paper [<xref ref-type="bibr" rid="CR15">15</xref>] for the details of the above algorithm.</p>
    </sec>
    <sec id="Sec4">
      <title>Method of Multi-CAR</title>
      <p>The method we used to implement Multi-CAR is as follows (see Fig. <xref rid="Fig1" ref-type="fig">1</xref> for its procedure flowchart). First, given a target genome <italic>T</italic>={1,2,…,<italic>n</italic>} with a set of <italic>n</italic> contigs and <italic>k</italic> references of complete genomes <italic>R</italic>
<sub>1</sub>,<italic>R</italic>
<sub>2</sub>,…,<italic>R</italic>
<sub><italic>k</italic></sub> with weights <italic>W</italic>
<sub>1</sub>,<italic>W</italic>
<sub>2</sub>,…,<italic>W</italic>
<sub><italic>k</italic></sub>, respectively, we apply CAR to order and orient the contigs of the target genome based on each reference genome. Note that the output returned by CAR is a list of scaffolds, with each consisting of the ordered and oriented contigs. Basically, a contig <italic>c</italic>∈<italic>T</italic> represents an oriented linear sequence of DNA starting with a <italic>tail</italic> and ending with a <italic>head</italic>. The tail and head of <italic>c</italic> are also called <italic>extremities</italic> and denoted by <italic>c</italic>
<sub><italic>t</italic></sub> and <italic>c</italic>
<sub><italic>h</italic></sub>, respectively, in this study. By reading the contigs of a scaffold in the left-to-right direction, if the tail of a contig <italic>c</italic> precedes its head, then we write this contig as +<italic>c</italic> in the scaffold; otherwise, we write it as −<italic>c</italic>. Second, we utilize all the scaffolds returned by CAR to build a <italic>contig adjacency graph</italic>
<italic>G</italic>=(<italic>V,E</italic>) as follows. For each contig <italic>c</italic>∈<italic>T</italic>, there are two vertices <italic>c</italic>
<sub><italic>t</italic></sub> and <italic>c</italic>
<sub><italic>h</italic></sub> in <italic>V</italic>, that is, <italic>V</italic>={<italic>c</italic>
<sub><italic>t</italic></sub>,<italic>c</italic>
<sub><italic>h</italic></sub>|<italic>c</italic>∈<italic>T</italic>}. In <italic>E</italic>, there is an edge to connect two vertices if they are adjacent extremities from two different contigs that are ordered consecutively in a scaffold returned by applying CAR to <italic>T</italic> and <italic>R</italic>
<sub><italic>i</italic></sub>, where 1≤<italic>i</italic>≤<italic>k</italic> (i.e., the reference genome <italic>R</italic>
<sub><italic>i</italic></sub> supports that these two contigs should be ordered and linked together in the target genome). If there are multiple reference genomes to support this edge connection, then this edge will be assigned a weight that equals to the sum of the weights of the supporting reference genomes. In addition, to guarantee the existence of a perfect matching in <italic>G</italic>, we add a dummy edge with zero weight into <italic>G</italic> to connect any two vertices that are from two different contigs and not supported to be connected by any reference genome. Note that in <italic>G</italic>, there is no edge between any two vertices that come from the same contig. For example, suppose that <italic>S</italic>
<sub>1</sub>=(+1,+2,+3), <italic>S</italic>
<sub>2</sub>=(+2,+3,+4), <italic>S</italic>
<sub>3</sub>=(−1,−4,−3,−2) and <italic>S</italic>
<sub>4</sub>=(+1,−4,+2,−3) are the scaffolding results respectively obtained by applying CAR on a target genome of four contigs <italic>T</italic>={1,2,3,4} and four reference genomes <italic>R</italic>
<sub>1</sub>,<italic>R</italic>
<sub>2</sub>,<italic>R</italic>
<sub>3</sub> and <italic>R</italic>
<sub>4</sub> with equal weight of one. Then the contig adjacency graph constructed by <italic>S</italic>
<sub>1</sub>,<italic>S</italic>
<sub>2</sub>,<italic>S</italic>
<sub>3</sub> and <italic>S</italic>
<sub>4</sub> is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Third, we apply a perfect matching program Blossom V [<xref ref-type="bibr" rid="CR19">19</xref>], whose running time is <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n^{4})$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2016_1328_Article_IEq3.gif"/></alternatives></inline-formula>, to the contig adjacency graph <italic>G</italic> for finding a perfect matching <italic>M</italic> with maximum weight, where a <italic>perfect matching</italic> is a subset of edges such that each node in the graph is incident to exactly one edge in the subset. Note that if there are multiple perfect matchings with maximum weight in the contig adjacency graph <italic>G</italic>, then we choose one arbitrarily. Finally, we order and orient the contigs of the target genome into scaffolds according to the edge connections in <italic>M</italic>
<sup>′</sup>, where by letting <italic>C</italic>={(<italic>c</italic>
<sub><italic>t</italic></sub>,<italic>c</italic>
<sub><italic>h</italic></sub>)|<italic>c</italic>∈<italic>T</italic>}, <italic>M</italic>
<sup>′</sup> is a subset of <italic>M</italic> obtained by removing some edges with minimum total weight (i.e., with the fewest support from reference genomes) from <italic>M</italic> such that <italic>C</italic>∪<italic>M</italic>
<sup>′</sup> does not contain any cycles. For instance, consider the contig adjacency graph constructed in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. It is not hard to see that <italic>M</italic>={(1<sub><italic>t</italic></sub>,4<sub><italic>h</italic></sub>),(1<sub><italic>h</italic></sub>,2<sub><italic>t</italic></sub>),(2<sub><italic>h</italic></sub>,3<sub><italic>t</italic></sub>),(3<sub><italic>h</italic></sub>,4<sub><italic>t</italic></sub>)} is a maximum weighted perfect matching in this contig adjacency graph. By removing the edge (1<sub><italic>t</italic></sub>,4<sub><italic>h</italic></sub>) with minimum weight from <italic>M</italic>, we have <italic>M</italic>
<sup>′</sup>={(1<sub><italic>h</italic></sub>,2<sub><italic>t</italic></sub>),(2<sub><italic>h</italic></sub>,3<sub><italic>t</italic></sub>),(3<sub><italic>h</italic></sub>,4<sub><italic>t</italic></sub>)} and <italic>C</italic>∪<italic>M</italic>
<sup>′</sup> contains no cycles. As a result, we can obtain a scaffold (+1,+2,+3,+4) from <italic>M</italic>
<sup>′</sup> for the target genome <italic>T</italic>={1,2,3,4}.
<fig id="Fig1"><label>Fig. 1</label><caption><p>The procedure flowchart of multi-CAR</p></caption><graphic xlink:href="12859_2016_1328_Fig1_HTML" id="MO1"/></fig>
<fig id="Fig2"><label>Fig. 2</label><caption><p>A contig adjacency graph constructed by four scaffolds <italic>S</italic>
<sub>1</sub>=(+1,+2,+3), <italic>S</italic>
<sub>2</sub>=(+2,+3,+4), <italic>S</italic>
<sub>3</sub>=(−1,−4,−3,−2) and <italic>S</italic>
<sub>4</sub>=(+1,−4,+2,−3), where the dummy edges with zero weight are omitted</p></caption><graphic xlink:href="12859_2016_1328_Fig2_HTML" id="MO2"/></fig>
</p>
    </sec>
    <sec id="Sec5">
      <title>Usage of Multi-CAR</title>
      <p>Multi-CAR is now available online at <ext-link ext-link-type="uri" xlink:href="http://genome.cs.nthu.edu.tw/Multi-CAR/">http://genome.cs.nthu.edu.tw/Multi-CAR/</ext-link> with a user interface that is intuitive and easy to operate. It takes as input a set of contigs of a target chromosome in multi-FASTA format and one or more reference chromosomes in FASTA format. Meanwhile, the user can assign a weight (positive real number) to each reference chromosome, where the weight reflects the phylogenetic closeness between the target and reference genomes. Basically, the larger the phylogenetic distance, the smaller the weight. In fact, the user can use the default weight of 1 for each reference chromosome if its phylogenetic relationship to the target chromosome is not clear to the user. In addition, it requires the user to choose either “nucleotides” (default) or “translated amino acids” for our Multi-CAR to identify conserved genetic markers between the target and reference chromosomes, which are then utilized by the rearrangement-based algorithm in Multi-CAR to order and orient the contigs of the target chromosome. In the output page, Multi-CAR shows its contig scaffolding results, including total running time, a set of scaffolds and its corresponding multi-FASTA file, dot-plot graphs between the scaffolds of the target chromosome and the reference chromosome, and comparison of dot-plot graphs between before and after contig scaffolding. Basically, for the size of prokaryotic chromosomes, Multi-CAR can finish its contig scaffolding job in several seconds up to a couple of minutes. As to larger chromosomes, the user can choose to run Multi-CAR in a batch mode by providing an email address (optional), via which Multi-CAR can return its scaffolding result to the user when it finishes its job later.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results and discussion</title>
    <sec id="Sec7">
      <title>Testing dataset</title>
      <p>For validation, we used a real dataset composed of several prokaryotic draft genomes to test Multi-CAR and compared its performance to Ragout [<xref ref-type="bibr" rid="CR16">16</xref>] and MeDuSa [<xref ref-type="bibr" rid="CR17">17</xref>] in terms of sensitivity, precision, genome coverage, scaffold number, scaffold N50 size and running time. This real dataset was prepared by Dias et al. [<xref ref-type="bibr" rid="CR13">13</xref>], containing 19 draft genomes of phylogenetically diverse prokaryotes. Four among these 19 prokaryotic draft genomes have two chromosomes and the others have only one, thus giving a total of 23 chromosomes in this testing dataset (see Table <xref rid="Tab1" ref-type="table">1</xref>). The draft sequences of each such chromosome was then considered as a target and processed separately by each contig scaffolding tool. In this process, we also adopted 20 completely sequenced chromosomes (excluding the target chromosome itself) to serve as the references. These references were chosen by Dias et al. [<xref ref-type="bibr" rid="CR13">13</xref>] from phylogenetically related prokaryotes deposited in the NCBI database.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Draft chromosomes used in the testing dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Organism</th><th align="left">Accession No.</th><th align="left">Size (bp)</th><th align="left">#CON</th><th align="left">COV (%)</th></tr></thead><tbody><tr><td align="left"><italic>Aciduliprofundum boonei</italic> T469</td><td align="left">NC_013926</td><td align="left">1,486,778</td><td align="left">35</td><td align="left">98.63</td></tr><tr><td align="left"><italic>Bacillus subtilis</italic> 168</td><td align="left">NC_000964</td><td align="left">4,215,606</td><td align="left">5</td><td align="left">99.97</td></tr><tr><td align="left"><italic>Bifidobacterium longum</italic> DJO10A</td><td align="left">NC_010816</td><td align="left">2,375,792</td><td align="left">58</td><td align="left">85.47</td></tr><tr><td align="left"><italic>Brucella melitensis</italic> bv 1 16M (I)</td><td align="left">NC_003317</td><td align="left">2,117,144</td><td align="left">41</td><td align="left">90.83</td></tr><tr><td align="left"><italic>Brucella melitensis</italic> bv 1 16M (II)</td><td align="left">NC_003318</td><td align="left">1,177,787</td><td align="left">12</td><td align="left">99.77</td></tr><tr><td align="left"><italic>Brucella pinnipedialis</italic> B2 94 (I)</td><td align="left">NC_015857</td><td align="left">2,138,342</td><td align="left">55</td><td align="left">87.47</td></tr><tr><td align="left"><italic>Brucella pinnipedialis</italic> B2 94 (II)</td><td align="left">NC_015858</td><td align="left">1,260,926</td><td align="left">34</td><td align="left">84.38</td></tr><tr><td align="left"><italic>Burkholderia thailandensis</italic> E264 (II)</td><td align="left">NC_007650</td><td align="left">2,914,771</td><td align="left">15</td><td align="left">70.34</td></tr><tr><td align="left"><italic>Burkholderia thailandensis</italic> E264 (I)</td><td align="left">NC_007651</td><td align="left">3,809,201</td><td align="left">28</td><td align="left">89.90</td></tr><tr><td align="left"><italic>Chlamydia muridarum</italic> Nigg</td><td align="left">NC_002620</td><td align="left">1,072,950</td><td align="left">4</td><td align="left">99.09</td></tr><tr><td align="left"><italic>Clostridium cellulovorans</italic> 743B</td><td align="left">NC_014393</td><td align="left">5,262,222</td><td align="left">297</td><td align="left">96.54</td></tr><tr><td align="left"><italic>Corynebacterium aurimucosum</italic> ATCC 700975</td><td align="left">NC_012590</td><td align="left">2,790,189</td><td align="left">90</td><td align="left">92.94</td></tr><tr><td align="left"><italic>Corynebacterium efficiens</italic> YS 314</td><td align="left">NC_004369</td><td align="left">3,147,090</td><td align="left">118</td><td align="left">95.09</td></tr><tr><td align="left"><italic>Micrococcus luteus</italic> NCTC 2665</td><td align="left">NC_012803</td><td align="left">2,501,097</td><td align="left">126</td><td align="left">86.25</td></tr><tr><td align="left"><italic>Mycobacterium tuberculosis</italic> H37Ra</td><td align="left">NC_009525</td><td align="left">4,419,977</td><td align="left">220</td><td align="left">76.84</td></tr><tr><td align="left"><italic>Mycoplasma genitalium</italic> G37</td><td align="left">NC_000908</td><td align="left">580,076</td><td align="left">24</td><td align="left">78.54</td></tr><tr><td align="left"><italic>Saccharopolyspora erythraea</italic> NRRL 2338</td><td align="left">NC_009142</td><td align="left">8,212,805</td><td align="left">238</td><td align="left">97.10</td></tr><tr><td align="left"><italic>Selenomonas sputigena</italic> ATCC 35185</td><td align="left">NC_015437</td><td align="left">2,568,361</td><td align="left">53</td><td align="left">94.01</td></tr><tr><td align="left"><italic>Stigmatella aurantiaca</italic> DW4 3 1</td><td align="left">NC_014623</td><td align="left">10,260,756</td><td align="left">470</td><td align="left">99.05</td></tr><tr><td align="left"><italic>Streptococcus pneumoniae</italic> TIGR4</td><td align="left">NC_003028</td><td align="left">2,160,842</td><td align="left">209</td><td align="left">90.31</td></tr><tr><td align="left"><italic>Vibrio</italic> Ex25 (I)</td><td align="left">NC_013456</td><td align="left">3,259,580</td><td align="left">176</td><td align="left">91.43</td></tr><tr><td align="left"><italic>Vibrio</italic> Ex25 (II)</td><td align="left">NC_013457</td><td align="left">1,829,445</td><td align="left">33</td><td align="left">95.31</td></tr><tr><td align="left"><italic>Yersinia pestis</italic> Nepal516</td><td align="left">NC_008149</td><td align="left">4,534,590</td><td align="left">17</td><td align="left">83.86</td></tr></tbody></table><table-wrap-foot><p>Column “#CON” contains the number of contigs selected for contig scaffolding experiments by excluding, for example, those contigs not mapped to reference chromosome. Column “COV” gives the fraction of each chromosome covered by selected contigs</p></table-wrap-foot></table-wrap>
</p>
      <p>In our experiments on this real prokaryotic dataset, we randomly shuffled the input orders of the contigs and the reference chromosomes for each target to eliminate the potential effect of their relative orders on scaffolding results. Moreover, according to the randomly shuffled order of the 20 reference chromosomes, we tested each contig scaffolding tool on the target chromosome by using the first <italic>k</italic> reference chromosomes with <italic>k</italic> varying from 1 to 20. This test was repeated 10 times for each target chromosome, with each time randomly varying the relative order of the 20 reference chromosomes, because the relative order of the references was able to influence the scaffolding results. Next, the evaluation metrics to measure the quality of the scaffolding results returned from these 10 different runs were averaged. Finally, such evaluation metrics obtained from the 23 target chromosomes were further averaged and used for comparing the accuracy performance of all the contig scaffolding tools. In fact, all the draft genomes in our testing dataset are already finished completely and also available from the NCBI database. Therefore, we can utilize these completely finished sequences to derive a <italic>reference order</italic> for the contigs in each draft genome to serve as the standard of truth in our evaluation. Basically, this reference order was derived by mapping all the contigs to their corresponding complete genome and placing them on the positions where they gained the most matches. Moreover, for those contigs that were not matched at all, they were excluded in the reference order.</p>
    </sec>
    <sec id="Sec8">
      <title>Comparisons on sensitivity and precision</title>
      <p>Basically, the main quality measure for a scaffolding result is the number of correct contig joins. A join of two contigs in a scaffold is said to be <italic>correct</italic> if they appear consecutively in the reference order (i.e., no other contig in between) and also in the correct orientation. Given the scaffolds of a target chromosome returned by a contig scaffolding tool, we call the number of their correct contig joins as <italic>true positive</italic> (denoted by <italic>TP</italic>) and the number of the others as <italic>false positive</italic> (denoted by <italic>FP</italic>). The <italic>sensitivity</italic> of the scaffolding tool is then defined as <italic>TP</italic>/<italic>P</italic> and its <italic>precision</italic> as <italic>TP</italic>/(<italic>TP</italic>+<italic>FP</italic>), where <italic>P</italic> denotes the number of all contig joins in the reference order. In the following, we compare the performance of Multi-CAR, MeDuSa and Ragout in terms of average sensitivity and precision.</p>
      <p>In our experiments, we run Multi-CAR (using both NUCmer and PROmer) and MeDuSa (version 1.6) with their default parameters. As for Ragout (version 1.0), however, we run it by using all default parameters, except for utilizing a star tree as the phylogenetic tree and setting the synteny block size to 50, because the phylogenetic tree for each instance was unknown and Ragout returned no or poor results on several instances when the default synteny block sizes (i.e., 5000, 500 and 100) were used. As a result, Fig. <xref rid="Fig3" ref-type="fig">3</xref>
<xref rid="Fig3" ref-type="fig">a</xref> and <xref rid="Fig3" ref-type="fig">b</xref> show the average sensitivity and precision, respectively, of the three evaluated scaffolding tools over 23 target chromosomes with respect to the increasing number of references from 1 to 20. Clearly, as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>
<xref rid="Fig3" ref-type="fig">a</xref> and <xref rid="Fig3" ref-type="fig">b</xref>, all the three scaffolding tools have an initial rapid improvement on both their average sensitivity and precision (i.e., when the number of references varies from 1 to 7), followed by a much slower performance improvement. In particular, upon using PROmer to identify conserved genetic markers, Multi-CAR gives the best average sensitivity and precision as compared to Multi-CAR running with NUCmer, MeDuSa and Ragout. Note that the reason why Multi-CAR running with PROmer outperforms Multi-CAR running with NUCmer is that PROmer can identify more conserved genetic markers between target and reference genomes to correctly join the contigs than NUCmer, especially when the target and reference genomes are more distantly related. In fact, our Multi-CAR running with NUCmer still performs better than MeDuSa and Ragout in terms of average sensitivity and precision. As for Ragout and MeDuSa, the former has a better performance than the latter in terms of both average sensitivity and precision when the number of the references is between 2 and 7. For the other cases, however, the opposite result that MeDuSa is better than Ragout is observed.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Performance variation of <bold>a</bold> average sensitivity and <bold>b</bold> average precision with respect to the number of reference genomes</p></caption><graphic xlink:href="12859_2016_1328_Fig3_HTML" id="MO3"/></fig>
</p>
    </sec>
    <sec id="Sec9">
      <title>Comparison on coverage, scaffold number and N50</title>
      <p>Genome coverage is another quality metric to measure how much of the genome being sequenced is actually covered by the scaffolds generated by a contig scaffolding tool [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. Below, we followed the procedure used in [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] to compute the genome coverage of each scaffolding tool. Basically, a correct contig join in a scaffolding result can be considered as a correct contig adjacency. Given a contig, if its both ends have correct adjacencies, its whole length is thus counted as contributing to the genome coverage. If only one end of this contig has a correct adjacency, its half length is counted. If its both ends has no correct adjacencies, this contig is not considered. The <italic>genome coverage</italic> of a scaffolding result for a target chromosome is then defined as the ratio of the sum of contig lengths that are counted according to the aforementioned rules and the sum of all contig lengths. After an initial rapid improvement, as shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>
<xref rid="Fig4" ref-type="fig">a</xref>, all the three scaffolding tools reach a somewhat stable average genome coverage. In addition, Multi-CAR running with PROmer (or NUCmer) outperforms MeDuSa and Ragout regarding average genome coverage. On the other hand, Ragout shows a much better performance than MeDuSa in terms of average genome coverage when the number of the references varies between 2 to 8 and for the other cases, their performances are competitive.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Performance variation of <bold>a</bold> average genome coverage and <bold>b</bold> average scaffold number with respect to the number of reference genomes</p></caption><graphic xlink:href="12859_2016_1328_Fig4_HTML" id="MO4"/></fig>
</p>
      <p>Figure <xref rid="Fig4" ref-type="fig">4</xref>
<xref rid="Fig4" ref-type="fig">b</xref> displays the average scaffold number obtained by each scaffolding tool with respect to the increasing number of reference genomes. Clearly, Multi-CAR running with PROmer performs much better than Multi-CAR running with NUCmer, MeDuSa and Ragout, since it produces the fewest average numbers of scaffolds in all cases. In addition, Multi-CAR with NUCmer still has a better performance than MeDuSa and Ragout in almost all cases. In fact, the results of Fig. <xref rid="Fig4" ref-type="fig">4</xref>
<xref rid="Fig4" ref-type="fig">a</xref> and <xref rid="Fig4" ref-type="fig">b</xref> together suggest that the average scaffold N50 size of Multi-CAR should be longer than those of MeDuSa and Ragout, where the N50 value is defined as the size of the largest scaffold such that 50% of the genome being sequenced is contained in scaffolds of size N50 or larger [<xref ref-type="bibr" rid="CR20">20</xref>]. As expected, Multi-CAR running with PROmer (and even with NUCmer) indeed performs much better than MeDuSa and Ragout in terms of average scaffold N50 size as shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>
<xref rid="Fig5" ref-type="fig">a</xref>. As for Ragout and MeDuSa, the average N50 performance of the former is slightly better than that of the latter in almost all cases.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Performance variation of <bold>a</bold> average scaffold N50 size and <bold>b</bold> average running time with respect to the number of reference genomes</p></caption><graphic xlink:href="12859_2016_1328_Fig5_HTML" id="MO5"/></fig>
</p>
    </sec>
    <sec id="Sec10">
      <title>Comparison on running time</title>
      <p>Figure <xref rid="Fig5" ref-type="fig">5</xref>
<xref rid="Fig5" ref-type="fig">b</xref> shows the average running time required by each scaffolding tool to finish its job when the number of reference genomes varies from 1 to 20. Basically, the average running time of each tool increases with respect to the increasing number of the references. As a result, Multi-CAR running with NUCmer performs better than the other tools in terms of required average running time. As mentioned before, however, its average performances on other five metrics (sensitivity, precision, genome coverage, scaffold number and scaffold N50 size) are still inferior to those obtained by Multi-CAR running with PROmer. Although the average running time of Multi-CAR running with PROmer is the longest among all the evaluated scaffolding tools, as shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>
<xref rid="Fig5" ref-type="fig">b</xref>, it can still finish its scaffolding job in a few up to ten minutes for the size of prokaryotic chromosomes.</p>
    </sec>
  </sec>
  <sec id="Sec11" sec-type="conclusion">
    <title>Conclusions</title>
    <p>Contig scaffolding is a process of ordering and orienting contigs of a draft genome, which is important and helpful to the finishing of a genome sequencing project. In this study, we introduced a multiple reference-based tool Multi-CAR that can produce more accurate scaffolds of a draft genome based on multiple reference genomes of related organisms. Moreover, it does not require a phylogenetic tree about the draft and reference genomes. In contrast to other similar tools Ragout and MeDuSa, both of which require to solve an NP-hard problem, the algorithm behind our Multi-CAR involves only polynomially solvable problems. By testing on a real dataset composed of several prokaryotic genomes, Multi-CAR exhibited the best average performance in terms of many metrics, such as sensitivity, precision, genome coverage, scaffold number and scaffold N50 size, as compared to Ragout and MeDuSa.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>This work was supported in part by Ministry of Science and Technology of Taiwan under grant MOST104-2221-E-007-027-MY2.</p>
    <sec id="d29e1739">
      <title>Declarations</title>
      <p>This article has been published as part of <italic>BMC Bioinformatics</italic> Volume 17 Supplement 17, 2016: Proceedings of the 27th International Conference on Genome Informatics: bioinformatics. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement-17">http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement-17</ext-link>.</p>
    </sec>
    <sec id="d29e1752">
      <title>Funding</title>
      <p>The publication costs for this article were funded by Ministry of Science and Technology of Taiwan under grant MOST104-2221-E-007-027-MY2.</p>
    </sec>
    <sec id="d29e1757">
      <title>Availability of data and materials</title>
      <p>The datasets supporting the conclusions of this article are included within the article.</p>
    </sec>
    <sec id="d29e1762">
      <title>Authors’ contributions</title>
      <p>CLL conceived of the study, designed the algorithm and drafted the manuscript. KTC, CJC, HTS and CLL implemented the software, conducted the experiments and participated in the analysis of experimental results. SHH carried out the experiments and participated in the analysis of experimental results. All authors read and approved the final manuscript.</p>
    </sec>
    <sec id="d29e1767">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e1772">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e1777">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Dijk</surname>
            <given-names>EL</given-names>
          </name>
          <name>
            <surname>Auger</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jaszczyszyn</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Thermes</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Ten years of next-generation sequencing technology</article-title>
        <source>Trends Genet</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>418</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tig.2014.07.001</pub-id>
        <?supplied-pmid 25108476?>
        <pub-id pub-id-type="pmid">25108476</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reddy</surname>
            <given-names>TBK</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Stamatis</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bertsch</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Isbandi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jansson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mallajosyula</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pagani</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lobos</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Kyrpides</surname>
            <given-names>NC</given-names>
          </name>
        </person-group>
        <article-title>The Genomes Online Database (GOLD) v.5: a metadata management system based on a four level (meta)genome project classification</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <fpage>1099</fpage>
        <lpage>1106</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku950</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Genome assembly reborn: recent computational challenges</article-title>
        <source>Brief Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>354</fpage>
        <lpage>66</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbp026</pub-id>
        <?supplied-pmid 19482960?>
        <pub-id pub-id-type="pmid">19482960</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Cook</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Di Bonaventura</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Richards</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Bishop-Lilly</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>DeSalle</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Read</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Finishing genomes with limited resources: lessons from an ensemble of microbial genomes</article-title>
        <source>BMC Genomics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>242</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-11-242</pub-id>
        <?supplied-pmid 20398345?>
        <pub-id pub-id-type="pmid">20398345</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dayarian</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michael</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Sengupta</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>SOPRA: scaffolding algorithm for paired reads via statistical optimization</article-title>
        <source>BMC Bioinforma</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>345</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-345</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boetzer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>CV</given-names>
          </name>
          <name>
            <surname>Jansen</surname>
            <given-names>HJ</given-names>
          </name>
          <name>
            <surname>Butler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pirovano</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Scaffolding pre-assembled contigs using SSPACE</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>578</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq683</pub-id>
        <?supplied-pmid 21149342?>
        <pub-id pub-id-type="pmid">21149342</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bentley</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Whole-genome re-sequencing</article-title>
        <source>Curr Opin Genet Dev</source>
        <year>2006</year>
        <volume>16</volume>
        <fpage>545</fpage>
        <lpage>52</lpage>
        <pub-id pub-id-type="doi">10.1016/j.gde.2006.10.009</pub-id>
        <?supplied-pmid 17055251?>
        <pub-id pub-id-type="pmid">17055251</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Richter</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Schuster</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Huson</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>OSLay: optimal syntenic layout of unfinished assemblies</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <fpage>1573</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm153</pub-id>
        <?supplied-pmid 17463020?>
        <pub-id pub-id-type="pmid">17463020</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Assefa</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Keane</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Otto</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Newbold</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Berriman</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>ABACAS: algorithm-based automatic contiguation of assembled sequences</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1968</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp347</pub-id>
        <?supplied-pmid 19497936?>
        <pub-id pub-id-type="pmid">19497936</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rissman</surname>
            <given-names>AI</given-names>
          </name>
          <name>
            <surname>Mau</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Biehl</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>Darling</surname>
            <given-names>AE</given-names>
          </name>
          <name>
            <surname>Glasner</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Perna</surname>
            <given-names>NT</given-names>
          </name>
        </person-group>
        <article-title>Reordering contigs of draft genomes using the Mauve Aligner</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2071</fpage>
        <lpage>073</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp356</pub-id>
        <?supplied-pmid 19515959?>
        <pub-id pub-id-type="pmid">19515959</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muñoz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zheng</surname>
            <given-names>CF</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>QA</given-names>
          </name>
          <name>
            <surname>Albert</surname>
            <given-names>VA</given-names>
          </name>
          <name>
            <surname>Rounsley</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Scaffold filling, contig fusion and comparative gene order inference</article-title>
        <source>BMC Bioinforma</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>304</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-304</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Husemann</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>r2cat: synteny plots and comparative assembly</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>570</fpage>
        <lpage>1</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp690</pub-id>
        <?supplied-pmid 20015948?>
        <pub-id pub-id-type="pmid">20015948</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dias</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Dias</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Setubal</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>SIS: a program to generate draft genome sequence scaffolds for prokaryotes</article-title>
        <source>BMC Bioinforma</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>96</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-96</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>SY</given-names>
          </name>
          <name>
            <surname>Chiu</surname>
            <given-names>HT</given-names>
          </name>
        </person-group>
        <article-title>CAR: contig assembly of prokaryotic draft genomes using rearrangements</article-title>
        <source>BMC Bioinforma</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>381</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-014-0381-3</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>CL</given-names>
          </name>
        </person-group>
        <article-title>Assembling contigs in draft genomes using reversals and block-interchanges</article-title>
        <source>BMC Bioinforma</source>
        <year>2013</year>
        <volume>14 Suppl 5</volume>
        <fpage>9</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-S5-S9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Raney</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Paten</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Pham</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Ragout-a reference-assisted assembly tool for bacterial genomes</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>302</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu280</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bosi</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Donati</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Galardini</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Brunetti</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sagot</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Lio</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Crescenzi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Fani</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fondi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>MeDuSa: a multi-draft based scaffolder</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>2443</fpage>
        <lpage>451</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv171</pub-id>
        <?supplied-pmid 25810435?>
        <pub-id pub-id-type="pmid">25810435</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kurtz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Smoot</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shumway</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Antonescu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Versatile and open software for comparing large genomes</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>12</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2004-5-2-r12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Blossom V: a new implementation of a minimum cost perfect matching algorithm</article-title>
        <source>Math Prog Comput</source>
        <year>2009</year>
        <volume>1</volume>
        <fpage>43</fpage>
        <lpage>67</lpage>
        <pub-id pub-id-type="doi">10.1007/s12532-009-0002-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Zimin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Puiu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Magoc</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Marcais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>GAGE: a critical evaluation of genome assemblies and assembly algorithms</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <fpage>557</fpage>
        <lpage>67</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.131383.111</pub-id>
        <?supplied-pmid 22147368?>
        <pub-id pub-id-type="pmid">22147368</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

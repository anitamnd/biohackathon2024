<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Mol Biosci</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Mol Biosci</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Mol. Biosci.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Molecular Biosciences</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2296-889X</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9538479</article-id>
    <article-id pub-id-type="publisher-id">990846</article-id>
    <article-id pub-id-type="doi">10.3389/fmolb.2022.990846</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Molecular Biosciences</subject>
        <subj-group>
          <subject>Technology and Code</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Stmol: A component for building interactive molecular visualizations within streamlit web-applications</article-title>
      <alt-title alt-title-type="left-running-head">Nápoles-Duarte et al.</alt-title>
      <alt-title alt-title-type="right-running-head">
        <ext-link xlink:href="https://doi.org/10.3389/fmolb.2022.990846" ext-link-type="uri">10.3389/fmolb.2022.990846</ext-link>
      </alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Nápoles-Duarte</surname>
          <given-names>J.M.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="c001" ref-type="corresp">*</xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1843598/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Biswas</surname>
          <given-names>Avratanu</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1907884/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Parker</surname>
          <given-names>Mitchell I.</given-names>
        </name>
        <xref rid="aff4" ref-type="aff">
          <sup>4</sup>
        </xref>
        <xref rid="aff5" ref-type="aff">
          <sup>5</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/2008031/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Palomares-Baez</surname>
          <given-names>J.P.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1911475/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chávez-Rojo</surname>
          <given-names>M. A.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1921947/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rodríguez-Valdez</surname>
          <given-names>L. M.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1640326/overview"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><sup>1</sup><institution>Laboratorio de Química Computacional</institution>, <institution>Facultad de Ciencias Químicas</institution>, <institution>Universidad Autónoma de Chihuahua</institution>, <institution>Nuevo Campus Universitario</institution>, <addr-line>Chihuahua</addr-line>, <country>Mexico</country></aff>
    <aff id="aff2"><sup>2</sup><institution>Doctoral School of Biology</institution>, <institution>University of Szeged</institution>, <addr-line>Szeged</addr-line>, <country>Hungary</country></aff>
    <aff id="aff3"><sup>3</sup><institution>Biological Research Centre</institution>, <addr-line>Szeged</addr-line>, <country>Hungary</country></aff>
    <aff id="aff4"><sup>4</sup><institution>Molecular and Cell Biology and Genetics (MCBG) Program</institution>, <institution>Drexel University College of Medicine</institution>, <addr-line>Philadelphia</addr-line>, <addr-line>PA</addr-line>, <country>United States</country></aff>
    <aff id="aff5"><sup>5</sup><institution>Program in Molecular Therapeutics</institution>, <institution>Fox Chase Cancer Center</institution>, <addr-line>Philadelphia</addr-line>, <addr-line>PA</addr-line>, <country>United States</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p><bold>Edited by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1126425/overview" ext-link-type="uri">Jessica Andreani</ext-link>, UMR9198 Institut de Biologie Intégrative de la Cellule (I2BC), France</p>
      </fn>
      <fn fn-type="edited-by">
        <p><bold>Reviewed by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1836996/overview" ext-link-type="uri">Isman Kurniawan</ext-link>, Telkom University, Indonesia</p>
        <p><ext-link xlink:href="https://loop.frontiersin.org/people/224253/overview" ext-link-type="uri">Stéphane Téletchéa</ext-link>, Université de Nantes, France</p>
        <p><ext-link xlink:href="https://loop.frontiersin.org/people/1922857/overview" ext-link-type="uri">Robert Hanson</ext-link>, St. Olaf College, United States</p>
      </fn>
      <corresp id="c001">*Correspondence: J.M. Nápoles-Duarte, <email>jnapoles@uach.mx</email>
</corresp>
      <fn fn-type="other">
        <p>This article was submitted to Biological Modeling and Simulation, a section of the journal Frontiers in Molecular Biosciences</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>990846</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>8</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2022 Nápoles-Duarte, Biswas, Parker, Palomares-Baez, Chávez-Rojo and Rodríguez-Valdez.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <copyright-holder>Nápoles-Duarte, Biswas, Parker, Palomares-Baez, Chávez-Rojo and Rodríguez-Valdez</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Streamlit is an open-source Python coding framework for building web-applications or “web-apps” and is now being used by researchers to share large data sets from published studies and other resources. Here we present Stmol, an easy-to-use component for rendering interactive 3D molecular visualizations of protein and ligand structures within Streamlit web-apps. Stmol can render protein and ligand structures with just a few lines of Python code by utilizing popular visualization libraries, currently Py3DMol and Speck. On the user-end, Stmol does not require expertise to interactively navigate. On the developer-end, Stmol can be easily integrated within structural bioinformatic and cheminformatic pipelines to provide a simple means for user-end researchers to advance biological studies and drug discovery efforts. In this paper, we highlight a few examples of how Stmol has already been utilized by scientific communities to share interactive molecular visualizations of protein and ligand structures from known open databases. We hope Stmol will be used by researchers to build additional open-sourced web-apps to benefit current and future generations of scientists.</p>
    </abstract>
    <kwd-group>
      <kwd>python package</kwd>
      <kwd>streamlit</kwd>
      <kwd>protein visualization</kwd>
      <kwd>open source</kwd>
      <kwd>stmol</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source id="cn001">
          <institution-wrap>
            <institution>Universidad Autónoma de Chihuahua
</institution>
            <institution-id institution-id-type="doi">10.13039/100016215</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>1 Introduction</title>
    <p>Scientific web-applications or “web-apps” are powerful tools for sharing computational methods and large datasets exploration with other researchers who may or may not have scientific programming expertise. Creating such web-apps has become increasingly common with many recent studies producing new computational methods for analyzing results from large-scale experimental campaigns, such as high-throughput drug screens or development of machine learning algorithms aiding biomedical sciences. This fundamental breakthroughs can then be easily leveraged by other researchers to make further scientific advancements. However, building user-friendly web-apps can be difficult, since it can be time-consuming and not all researchers possess the front-end coding expertise (e.g., HTML, Javascript, React, Typescript) required to make simple, interactive user interfaces.</p>
    <p>Streamlit (<ext-link xlink:href="https://github.com/streamlit/streamlit" ext-link-type="uri">https://github.com/streamlit/streamlit</ext-link>) is an open-source library that allows researchers to create web-apps with just a few lines of Python code without any need for front-end coding skills. Already, Streamlit has been extensively used by researchers to make scientific web-apps (<xref rid="B10" ref-type="bibr">Parker et al. (2022)</xref>; <xref rid="B5" ref-type="bibr">Kui et al. (2022)</xref>; <xref rid="B1" ref-type="bibr">Absar et al. (2022)</xref>; <xref rid="B8" ref-type="bibr">Li et al. (2022b)</xref>; <xref rid="B7" ref-type="bibr">Li et al. (2022a)</xref>). These web applications allow an easy and intuitive way that researchers gain novel scientific insights by enabling easy exploration of large data sets. For this, it is easy to deploy basic charts (bar, scatter, etc.) or tabular forms (data frame, tables, etc.). Recently, <xref rid="B6" ref-type="bibr">Lee et al. (2022)</xref>, published a web-app called “StarGazer,” a hybrid intelligence platform for drug target prioritization and digital drug repositioning using Streamlit front-end, developed by the AstraZeneca team (<ext-link xlink:href="https://github.com/AstraZeneca/StarGazer).This" ext-link-type="uri">https://github.com/AstraZeneca/StarGazer).This</ext-link> platform works with multi-source and multi-omics data and is based on a target prioritization scoring system which displays scores for genes related to phenotypic traits in a Streamlit dashboard. Likewise, in the field of biomedical sciences, <xref rid="B4" ref-type="bibr">Kiss et al. (2022)</xref> built a web-application for early prediction of acute necrotizing pancreatitis by artificial intelligence, which uses XGBoost machine learning algorithm for the prediction of pancreatic necrosis. The model relies on data from 2,387 patients with acute pancreatitis and was deployed as an online app using Streamlit (<ext-link xlink:href="http://necro-app.org/" ext-link-type="uri">http://necro-app.org/</ext-link>). Another recent contribution in the field of computational biology with Streamlit based web-app, is the “iCarboxE-Deep”, a server to identify carboxy-glutamate post-translational modification (PTM) sites <xref rid="B9" ref-type="bibr">Naseer et al. (2022)</xref>. iCarboxE-Deep web-app, using Deep Convolutional Neural Network (CNN) based classifier can predict the 4-carboxyglutamate sites in protein sequences with increased accuracy and F1-score of 0.874 (<ext-link xlink:href="https://share.streamlit.io/sheraz-n/carboxyglutamate/app.py" ext-link-type="uri">https://share.streamlit.io/sheraz-n/carboxyglutamate/app.py</ext-link>). In sum, Streamlit serves as a powerful tool which democratizes the creation of web-apps for sharing scientific software and data.</p>
    <p>Structural bioinformatics and cheminformatics have been early adopters of Streamlit for building web-apps to share computational methods and large data sets analysis. However, these fields rely heavily on interactive 3D and 2D molecular visualizations of protein and ligand structures, which is not supported by out-of-the-box Streamlit. Therefore, we created Stmol (<ext-link xlink:href="https://github.com/napoles-uach/stmol" ext-link-type="uri">https://github.com/napoles-uach/stmol</ext-link>), a component for rendering interactive 3D molecular visualizations of protein and ligand structures within Streamlit web-apps. Stmol utilizes libraries, such as Py3DMol <xref rid="B11" ref-type="bibr">Rego and Koes (2014)</xref>, and Speck <ext-link xlink:href="https://github.com/wwwtyro/speck" ext-link-type="uri">https://github.com/wwwtyro/speck</ext-link>. In <xref rid="F1" ref-type="fig">Figure 1</xref>, we can see the star history for the GitHub repository of stmol project, which shows the constant growing interest of the scientific community towards the component.</p>
    <fig position="float" id="F1">
      <label>FIGURE 1</label>
      <caption>
        <p>Star history plot of the stmol GitHub repository (<italic>untill July, 2022</italic>).</p>
      </caption>
      <graphic xlink:href="fmolb-09-990846-g001" position="float"/>
    </fig>
    <p>In this paper, we demonstrate how to create Stmol rendered molecular visualizations within Streamlit web-apps, introduce how to contribute to the project, and present some use cases of Stmol to give a glimpse how its capabilities.</p>
  </sec>
  <sec id="s2">
    <title>2 Methods</title>
    <p>The fundamental aspect of the Stmol package to render 3D molecular visualization at the Streamlit frontend, is highly dependent on the showmol()function. Its value resides in the simplicity that it offers to convert the HTML objects behind py3Dmol. This makes it possible to build a WebGL-based view object structured entirely around Py3Dmol Python package and further calling the Stmol function showmol(), to display a 3D structure in the Streamlit web-app. For instance, an object defined as, obj = py3Dmol.view(query=′pdb:1ubq′), can be easily visualized and interacted at the frontend using, showmol(obj). Albeit, the simplicity of the showmol()function, it offers tremendous extensibility to build more complex visualizations. Furthermore, with the intend to make visualization and handling of 3Dmol/py3DMol objects easier, Stmol package offers several intuitive functions for the user to build web apps using extremely simple Python scripts. Stmol functions can be organized in two broad categories—1) building py3Dmol molecular objects and 2) post-processing molecular objects.</p>
    <sec id="s2-1">
      <title>2.1 Building py3Dmol objects</title>
      <p>Stmol in its current state offers three functions to build py3Dmol objects, each of which returns a py3Dmol object. Functions, with their usage are as follows.<list list-type="simple"><list-item><p>• makeobj—Building the molecular visualization from a file with a valid extension (e.g., pdb,xyz, etc.). Thereby, allowing users to upload and visualize the data</p></list-item><list-item><p>• render_pdb—Quick visualization of structures from the Protein Data Bank (PDB) based on their associated four letter identifier</p></list-item><list-item><p>• obj_upload—Useful to work with Streamlit widget st.file_upload(). Returns the corresponding py3Dmol object from the uploaded file</p></list-item></list>
</p>
      <p>Each of the above functions, can be easily implemented for building py3Dmol objects and visualized using the showmol() function as shown in <xref rid="F2" ref-type="fig">Figure 2</xref>.</p>
      <fig position="float" id="F2">
        <label>FIGURE 2</label>
        <caption>
          <p>Schematic representation of a typical workflow to create py3Dmol objects and visualize using Stmol package at the user-end.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g002" position="float"/>
      </fig>
    </sec>
    <sec id="s2-2">
      <title>2.2 Post-processing py3Dmol objects</title>
      <p>Likewise, the py3Dmol objects can be further customized. In the context of making Stmol, a tool to leverage this processes at ease, we added few post-processing functions which are enlisted below:<list list-type="simple"><list-item><p>• add_hover—Viewing atom’s labels on mouse hovering</p></list-item><list-item><p>• render_pdb_resn,render_pdb_resi—Labelling residues within a protein</p></list-item><list-item><p>• add_box,add_sphere,add_cylinder—Adding basic geometries</p></list-item><list-item><p>• add_model—Aggregate a new model to an existing py3Dmol object</p></list-item></list>
</p>
      <p><xref rid="F3" ref-type="fig">Figure 3</xref>, demonstrates the flow of work for some of these functions. These functions add new features to existing py3Dmol objects.</p>
      <fig position="float" id="F3">
        <label>FIGURE 3</label>
        <caption>
          <p>Schematic representation of post-processing utilities offered by Stmol. <bold>(A)</bold> Hover function to obtain atom’s information. <bold>(B)</bold> Rendering residue to add residue labels. <bold>(C)</bold> Adding simple geometries.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g003" position="float"/>
      </fig>
      <p>The Stmol package aims to broaden the molecule rendering functionalities. We are open for contributions to the Stmol project repository in GitHub (<ext-link xlink:href="https://github.com/napoles-uach/stmol" ext-link-type="uri">https://github.com/napoles-uach/stmol</ext-link>). Two possible ways to contribute to the stmol library are, with the static HTML components and with the bidirectional components, the latter which sends and receives information to/from the backend. The tree of the directories is shown below:<list list-type="simple"><list-item><p>stmol/</p></list-item><list-item><p> __init__.py</p></list-item><list-item><p> utils.py</p></list-item><list-item><p> example.py</p></list-item><list-item><p> front-end/</p></list-item><list-item><p>  public/</p></list-item><list-item><p>  src/</p></list-item><list-item><p>   MyComponent.tsx</p></list-item></list>
</p>
      <p>The relevant folders for the purpose of making contributions are included in the tree.</p>
      <p>Here we briefly explain how to proceed if new features are going to be contributed to the project using simple examples.</p>
    </sec>
    <sec id="s2-3">
      <title>2.3 Static contributions</title>
      <p>A recent addition in a form of static HTML wrapper is the speck_plot function, which helps in rendering Speck structures (<ext-link xlink:href="https://github.com/wwwtyro/speck" ext-link-type="uri">https://github.com/wwwtyro/speck</ext-link>) within the Streamlit web-application. In brief, Speck is an open-source browser based WebGL molecule renderer written primarily in the JavaScript programming language, that produce attractive high quality molecular figures displaying salient features such as ambient occlusion, pixel-perfect atoms and bonds, depth-aware outlines, and depth of field. The speck_plot static wrapper incorporates the Python packages such as ipyspeck and ipywidgets. An HTML string is passed at the front-end using Streamlit’s components.html() API.<list list-type="simple"><list-item><p># Modules</p></list-item><list-item><p>import streamlit.components.v1 as components</p></list-item><list-item><p>import ipywidgets as widgets</p></list-item><list-item><p>from ipywidgets import embed</p></list-item><list-item><p>import ipyspeck</p></list-item><list-item><p># Static wrapper function</p></list-item><list-item><p>def speck_plot(_xyz, wbox_height="700px",</p></list-item><list-item><p> wbox_width="800px”, component_h = 700,</p></list-item><list-item><p> component_w = 800, scroll = False):</p></list-item><list-item><p># Read the xyz file</p></list-item><list-item><p>spec_xyz = ipyspeck.speck.Speck(data = _xyz)</p></list-item><list-item><p># Create the widget box</p></list-item><list-item><p>widg = widgets.Box([spec_xyz],</p></list-item><list-item><p>layout=widgets.Layout(height=wbox_height,width=wbox_width))</p></list-item><list-item><p># Embed the widget box in the streamlit html component</p></list-item><list-item><p>sc = embed.embed_snippet(widg)</p></list-item><list-item><p>html = embed.html_template.format(title="", snippet=sc)</p></list-item><list-item><p>components.html(html,height =</p></list-item><list-item><p>component_h, width = component_w,scrolling=scroll)</p></list-item><list-item><p>return spec_xyz</p></list-item></list>
</p>
      <p>Thus, importing the speck_plot function from the stmol module along with a few simple Streamlit syntaxes can be used to build and deploy a minimalist Streamlit web-app (<xref rid="F4" ref-type="fig">Figure 4</xref>).</p>
      <fig position="float" id="F4">
        <label>FIGURE 4</label>
        <caption>
          <p>Screen-capture of the Streamlit web-app demonstrating the speck-plot rendering function.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g004" position="float"/>
      </fig>
    </sec>
    <sec id="s2-4">
      <title>2.4 Bidirectional contributions</title>
      <p>The Bidirectional component inclusion, requires implementation of both back and front-end–commonly written using HTML, Javascript, React, Typescript, etc. A bidirectional Component in Streamlit has two parts, the front-end and a python API. The frontend, is build in HTML, plus React or Typescript code, and it is possible to incorporate other packages using the npm package manager. On the other hand, the Python API is used to instantiate and communicate to the front end. Stmol currently does not have this kind of functionality which could have some advantages like retrieving the atoms or ligands information by clicking on the atoms. We are still exploring this possibility, and it is part of the plan for Stmol in the near future. Further information on bidirectional components can be found in the Streamlit documentation (<ext-link xlink:href="https://docs.streamlit.io/library/components" ext-link-type="uri">https://docs.streamlit.io/library/components</ext-link>).</p>
      <p>Currently, there are a few known limitations of Stmol. First, Stmol does not provide in-built highlighting option for the protein structure (e.g., drug binding sites). Second, the present static Stmol wrapper lacks bidirectional functionality. Third, the speck_plot function is currently only compatible with. xyz format of proteins and lacks argument to tweak with the visualized protein structure. Therefore, we plan to include such functionalities in future releases of Stmol. Further, we call the community to participate and contribute to the improvement of this open-source project.</p>
    </sec>
  </sec>
  <sec id="s3">
    <title>3 Results</title>
    <p>As discussed previously, the development of any web-app with Streamlit front-end, requires only the knowledge of Python programming. In this section, we will be implementing the stmol Streamlit component and build a demo Streamlit web-app. Stmol depends on following Python libraries, streamlit, py3Dmol, ipyspeck and ipywidgets which are installed together with the package. The pip python package manager can be used for the installation of the mentioned packages with the following command,<list list-type="simple"><list-item><p>pip install stmol</p></list-item></list>
</p>
    <p>The root folder consists of the python file app.py (refer to the <italic>GitHub folder</italic>) consisting of following few lines of code.<list list-type="simple"><list-item><p>#Importing the installed libraries</p></list-item><list-item><p>import streamlit as st</p></list-item><list-item><p>from stmol import showmol</p></list-item><list-item><p>import py3Dmol</p></list-item><list-item><p>#1.Calling Streamlit widgets</p></list-item><list-item><p>st.sidebar.title(′Demo app′)</p></list-item><list-item><p>style = st.sidebar.selectbox(′style′, [′cartoon′, ′stick′, ′sphere′])</p></list-item><list-item><p>#2.Using Py3Dmol methods</p></list-item><list-item><p>xyzview = py3Dmol.view(query=′pdb:1A2C′)</p></list-item><list-item><p>xyzview.setStyle({style:{′color′:′spectrum′}})</p></list-item><list-item><p>xyzview.setBackgroundColor(′white′)</p></list-item><list-item><p>#3.Calling the stmol function called showmol</p></list-item><list-item><p>showmol(xyzview, height = 500,width=800)</p></list-item></list>
</p>
    <p>The above code is almost self-explanatory. The sections to emphasize can be well divided into:<list list-type="simple"><list-item><p>1) Calling Streamlit widgets</p></list-item><list-item><p>2) Using Py3Dmol methods</p></list-item><list-item><p>3) Calling the stmol function called showmol to render the resulting protein</p></list-item></list>
</p>
    <p>The app.py file, can run locally from the command terminal with the following command,<list list-type="simple"><list-item><p>streamlit run app.py</p></list-item></list>
</p>
    <p>The resulting web-app on running successfully should appear in a new tab of the default internet browser window as a localhost (<xref rid="F5" ref-type="fig">Figure 5</xref>).</p>
    <fig position="float" id="F5">
      <label>FIGURE 5</label>
      <caption>
        <p>Streamlit web-app running on the browser on local server on executing the app.py Python file.</p>
      </caption>
      <graphic xlink:href="fmolb-09-990846-g005" position="float"/>
    </fig>
    <p>In order to deploy the web-app for external usage and global availability over internet, a requirements.txt file needs to be created, which consists of the dependencies crucial for running the web application. The common practice in creating requirements.txt file is by using Python libraries, such as pipreqs. In the above demo app, the content of the requirements.txt file consists of streamlit, stmol and py3Dmol. The application can be hosted over Streamlit Cloud (<ext-link xlink:href="https://streamlit.io/cloud" ext-link-type="uri">https://streamlit.io/cloud</ext-link>), which utilizes code pushed to a Github repository. With future Streamlit Cloud pulls, any changes in the code alteration from the GitHub path will be automatically (or can be manually) rebooted. Demo application and examples can be accessed through this link (See <xref rid="F6" ref-type="fig">Figure 6</xref> for a Screenshoot).</p>
    <fig position="float" id="F6">
      <label>FIGURE 6</label>
      <caption>
        <p>Demo application. This is a more advanced example where residues are highlighted and molecular surface is included with transparency. In this case, the user experience is enriched with Streamlit widgets.</p>
      </caption>
      <graphic xlink:href="fmolb-09-990846-g006" position="float"/>
    </fig>
    <sec id="s3-1">
      <title>3.1 Use cases of STMOL</title>
      <p>In this section we aim to briefly highlight few significant implementations of Stmol package in development of scientific web-apps.</p>
      <p><bold>Example 1—Rascore.</bold> Rascore (<xref rid="B10" ref-type="bibr">Parker et al., 2022</xref>) is a Streamlit based web-app for analyzing the 3D structure of the tumor-associated RAS proteins (KRAS, NRAS, and HRAS—the most common cancer drivers). Rascore allows researchers to quickly benchmark candidate RAS inhibitors (through structure-based and ligand-based approaches) with other RAS directed inhibitors previously tested, providing a data-driven approach for accelerating RAS drug discovery. Rascore helps scientists to explore and compare published structural models of RAS proteins in the Protein Data Bank (PDB) in ways that simplify biological study of these proteins and facilitate RAS drug discovery. The code can be found at <ext-link xlink:href="https://github.com/mitch-parker/rascore" ext-link-type="uri">https://github.com/mitch-parker/rascore</ext-link>. The Rascore server utilizes py3Dmol for residue annotation and finally renders the molecular object to the Streamlit frontend using the showmol() function, shown in <xref rid="F7" ref-type="fig">Figure 7</xref>. In the latest release of Stmol, render_pdb_resn() function can be used for the same purpose. Implementation of this similar feature has been added as an example application here—<ext-link xlink:href="https://napoles-uach-stmol-home-pom051.streamlitapp.com/Examples" ext-link-type="uri">https://napoles-uach-stmol-home-pom051.streamlitapp.com/Examples</ext-link>.</p>
      <fig position="float" id="F7">
        <label>FIGURE 7</label>
        <caption>
          <p>Screen-captures showing use case of the Stmol package for the development of the Rascore Web-app. Among its options are “Main Menu”, “Database Overview” and “Explore Conformation” sections where Stmol is used to visualize the structures.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g007" position="float"/>
      </fig>
      <p><bold>Example 2</bold>—<bold>RMG web based input file generator.</bold> RMG Input File Generator is an user interface developed by the creators of RMG <xref rid="B2" ref-type="bibr">Briggs et al. (1996)</xref>, a Density Functional Theory code for electronic structure calculations for the modeling of materials and molecules. It allows to build the input files, by following provided examples or by upload of atomic structure files, shown in <xref rid="F8" ref-type="fig">Figure 8</xref>. The code can be found at <ext-link xlink:href="https://github.com/RMGDFT/rmgwebinterface" ext-link-type="uri">https://github.com/RMGDFT/rmgwebinterface</ext-link>. The molecular rendering of the <italic>.xyz</italic> file format can be further simplified using the obj_upload() function of Stmol package. This example makes evident that Stmol is being also used in the field of Computational Materials Science, where visualization of 3D structures is also of importance.</p>
      <fig position="float" id="F8">
        <label>FIGURE 8</label>
        <caption>
          <p>Screen-captures of RMG web-app. The <italic>showmol</italic>() function was called for the purpose of rendering crystalline structures. The end user can select the options accepted by the RMG code and visualize the crystal using repetition cells.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g008" position="float"/>
      </fig>
      <p><bold>Example 3</bold>—<bold>TIMED user interface.</bold> TIMED (Three-dimensional Inference Method for Efficient Design) is a Convolutional Neural Network model trained to solve the “Inverse Folding Problem” (<xref rid="B3" ref-type="bibr">Castorina et al. (2022)</xref>). The input for TIMED is a 3D shape (empty backbone) and the output are the subunits at the positions of the backbone. The Streamlit user interface for TIMED allows to select a given protein by the PDB code or uploading a backbone/PDB file and run the model to get probabilities at specific positions. The code can be accessed at <ext-link xlink:href="https://github.com/wells-wood-research/timed-design" ext-link-type="uri">https://github.com/wells-wood-research/timed-design</ext-link>, shown in <xref rid="F9" ref-type="fig">Figure 9</xref>.</p>
      <fig position="float" id="F9">
        <label>FIGURE 9</label>
        <caption>
          <p>Screen-captures of TIMED web app. Images courtesy of Leonardo V. Castorina who is one of the contributors of the TIMED project. TIMED tackle the “Inverse Folding Problem” aiming to identify the residue sequence that will reliably fold into a given structure.</p>
        </caption>
        <graphic xlink:href="fmolb-09-990846-g009" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec id="s4">
    <title>4 Discussion</title>
    <p>We present an open-source python package, stmol, which serves as a plugin to render 3D molecular visualization of protein within Streamlit web-apps. The Stmol component enables researchers from different scientific backgrounds with varying front-end programming expertise to quickly and easily deploy interactive web applications to serve several purposes, such as visualization of experimental or simulated data among several scientific communities working on similar projects. This tool has been well embraced by the science enthusiasts within the Streamlit community, as evident from the constant growth of users since its first release.</p>
    <p>Stmol provides an easy way for bioinformatic and cheminformatic researchers to create web-apps that guide structure-based and ligand-based drug design through molecular visualizations. In this paper, we highlighted Rascore (<xref rid="F7" ref-type="fig">Figure 7</xref>) a Streamlit web-app which utilizes Stmol for visualization of drug-bound (and unbound) structures of a high-priority cancer target called RAS proteins. Since the launch of Rascore in April, this web-app has accrued over 3,000 users from academia and the pharmaceutical industry who are using the app to guide development of the next generation of RAS inhibitors. Similarly, we envision other researchers will use Stmol to quickly build Streamlit web-apps for the purpose of streamlining drug discovery related to other therapeutic targets. In other scenarios, due to its nature, the contribution of Stmol to drug discovery is limited to the task of visualization, and in this sense it has the potential to be used in conjunction with other packages (e.g., Rdkit, ProLIF, Vina) to build molecular docking interfaces on the browser with all the benefits that this implies, being the reduction of costs in specialized software one of them. We envision other possible applications, but some will require improvements in the library that are for now in the future plans for this project, like improving the interactivity and retrieval of information e.g. displaying atom distances, and also features more oriented to drug discovery.</p>
    <p>Although there are many possible improvements to Stmol, we believe that this is a project that deserves attention, and that its use along with Streamlit will be more common in future publications by the bioinformatics community. Nowadays, for Stmol the main objective is to make it simpler for scientist to get through the process related to visualization of molecular structures in the deployment of web apps with Streamlit.</p>
  </sec>
</body>
<back>
  <ack>
    <p>We want to thank Ted Ricks and Tim Conkling of the Streamlit team for useful discussions in the development of the component.We want to thank the Faculty of Chemical Sciences of the Autonomous University of Chihuahua for supporting this project, in its development and publishing.</p>
  </ack>
  <sec sec-type="data-availability" id="s5">
    <title>Data availability statement</title>
    <p>Publicly available datasets were analyzed in this study. This data can be found here: <ext-link xlink:href="https://github.com/napoles-uach/stmol" ext-link-type="uri">https://github.com/napoles-uach/stmol</ext-link>.</p>
  </sec>
  <sec id="s6">
    <title>Author contributions</title>
    <p>All authors contributed to the writing and correction of the article. JN-D, MIP and AB contributed with the code. JN-D supervised the project.</p>
  </sec>
  <sec id="s7">
    <title>Funding</title>
    <p>Scholarship for AB was provided by the “Stipendium Hungaricum” program of the Hungarian Ministry of Foreign Affairs and Trade and the Tempus Public Foundation. Fellowship funding provided to MIP by NIH NIGMS grant F30 GM142263.</p>
  </sec>
  <sec sec-type="COI-statement" id="s8">
    <title>Conflict of interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s9">
    <title>Publisher’s note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Absar</surname><given-names>N.</given-names></name><name><surname>Das</surname><given-names>E. K.</given-names></name><name><surname>Shoma</surname><given-names>S. N.</given-names></name><name><surname>Khandaker</surname><given-names>M. U.</given-names></name><name><surname>Miraz</surname><given-names>M. H.</given-names></name><name><surname>Faruque</surname><given-names>M. R. I.</given-names></name><etal/></person-group> (<year>2022</year>). <article-title>The efficacy of machine-learning-supported smart system for heart disease prediction</article-title>. <source>Healthcare</source>
<volume>10</volume>, <fpage>1137</fpage>. <pub-id pub-id-type="doi">10.3390/healthcare10061137</pub-id>
<pub-id pub-id-type="pmid">35742188</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Briggs</surname><given-names>E. L.</given-names></name><name><surname>Sullivan</surname><given-names>D. J.</given-names></name><name><surname>Bernholc</surname><given-names>J.</given-names></name></person-group> (<year>1996</year>). <article-title>Real-space multigrid-based approach to large-scale electronic structure calculations</article-title>. <source>Phys. Rev. B Condens. Matter</source>
<volume>54</volume>, <fpage>14362</fpage>–<lpage>14375</lpage>. <pub-id pub-id-type="doi">10.1103/PhysRevB.54.14362</pub-id>
<pub-id pub-id-type="pmid">9985442</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Castorina</surname><given-names>L. V.</given-names></name><name><surname>Subr</surname><given-names>K.</given-names></name><name><surname>Wood</surname><given-names>C. W.</given-names></name></person-group> (<year>2022</year>). <article-title>TIMED-Design: Efficient protein sequence design with deep learning</article-title>. <source>Zenodo</source>
<volume>2022</volume>, <fpage>6997495</fpage>. <pub-id pub-id-type="doi">10.5281/zenodo.6997495</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kiss</surname><given-names>S.</given-names></name><name><surname>Pintér</surname><given-names>J.</given-names></name><name><surname>Molontay</surname><given-names>R.</given-names></name><name><surname>Nagy</surname><given-names>M.</given-names></name><name><surname>Farkas</surname><given-names>N.</given-names></name><name><surname>Sipos</surname><given-names>Z.</given-names></name><etal/></person-group> (<year>2022</year>). <article-title>Early prediction of acute necrotizing pancreatitis by artificial intelligence: A prospective cohort-analysis of 2387 cases</article-title>. <source>Sci. Rep.</source>
<volume>12</volume>, <fpage>7827</fpage>. <pub-id pub-id-type="doi">10.1038/s41598-022-11517-w</pub-id>
<pub-id pub-id-type="pmid">35552440</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kui</surname><given-names>B.</given-names></name><name><surname>Pintér</surname><given-names>J.</given-names></name><name><surname>Molontay</surname><given-names>R.</given-names></name><name><surname>Nagy</surname><given-names>M.</given-names></name><name><surname>Farkas</surname><given-names>N.</given-names></name><name><surname>Gede</surname><given-names>N.</given-names></name><etal/></person-group> (<year>2022</year>). <article-title>Easy-app: An artificial intelligence model and application for early and easy prediction of severity in acute pancreatitis</article-title>. <source>Clin. Transl. Med.</source>
<volume>12</volume>, <fpage>e842</fpage>. <pub-id pub-id-type="doi">10.1002/ctm2.842</pub-id>
<pub-id pub-id-type="pmid">35653504</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>C.</given-names></name><name><surname>Lin</surname><given-names>J.</given-names></name><name><surname>Prokop</surname><given-names>A.</given-names></name><name><surname>Gopalakrishnan</surname><given-names>V.</given-names></name><name><surname>Hanna</surname><given-names>R. N.</given-names></name><name><surname>Papa</surname><given-names>E.</given-names></name><etal/></person-group> (<year>2022</year>). <article-title>Stargazer: A hybrid intelligence platform for drug target prioritization and digital drug repositioning using streamlit</article-title>. <source>Front. Genet.</source>
<volume>13</volume>, <fpage>868015</fpage>. <pub-id pub-id-type="doi">10.3389/fgene.2022.868015</pub-id>
<pub-id pub-id-type="pmid">35711912</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>W.</given-names></name><name><surname>Hong</surname><given-names>T.</given-names></name><name><surname>Liu</surname><given-names>W.</given-names></name><name><surname>Dong</surname><given-names>S.</given-names></name><name><surname>Wang</surname><given-names>H.</given-names></name><name><surname>Tang</surname><given-names>Z.-R.</given-names></name><etal/></person-group> (<year>2022a</year>). <article-title>Development of a machine learning-based predictive model for lung metastasis in patients with ewing sarcoma</article-title>. <source>Front. Med.</source>
<volume>9</volume>, <fpage>807382</fpage>. <pub-id pub-id-type="doi">10.3389/fmed.2022.807382</pub-id>
</mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>W.</given-names></name><name><surname>Zhou</surname><given-names>Q.</given-names></name><name><surname>Liu</surname><given-names>W.</given-names></name><name><surname>Xu</surname><given-names>C.</given-names></name><name><surname>Tang</surname><given-names>Z.-R.</given-names></name><name><surname>Dong</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2022b</year>). <article-title>A machine learning-based predictive model for predicting lymph node metastasis in patients with ewing’s sarcoma</article-title>. <source>Front. Med. (Lausanne).</source>
<volume>9</volume>. <pub-id pub-id-type="doi">10.3389/fmed.2022.832108</pub-id>
</mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naseer</surname><given-names>S.</given-names></name><name><surname>Ali</surname><given-names>R. F.</given-names></name><name><surname>Fati</surname><given-names>S. M.</given-names></name><name><surname>Muneer</surname><given-names>A.</given-names></name></person-group> (<year>2022</year>). <article-title>Computational identification of 4-carboxyglutamate sites to supplement physiological studies using deep learning</article-title>. <source>Sci. Rep.</source>
<volume>12</volume>, <fpage>128</fpage>. <pub-id pub-id-type="doi">10.1038/s41598-021-03895-4</pub-id>
<pub-id pub-id-type="pmid">34996975</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Parker</surname><given-names>M. I.</given-names></name><name><surname>Meyer</surname><given-names>J. E.</given-names></name><name><surname>Golemis</surname><given-names>E. A.</given-names></name><name><surname>Dunbrack</surname><given-names>J.</given-names></name><name><surname>Roland</surname><given-names>L.</given-names></name></person-group> (<year>2022</year>). <article-title>Delineating the RAS conformational landscape</article-title>. <source>Cancer Res.</source>
<volume>82</volume>, <fpage>2485</fpage>–<lpage>2498</lpage>. <pub-id pub-id-type="doi">10.1158/0008-5472.CAN-22-0804</pub-id>
<pub-id pub-id-type="pmid">35536216</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rego</surname><given-names>N.</given-names></name><name><surname>Koes</surname><given-names>D.</given-names></name></person-group> (<year>2014</year>). <article-title>3Dmol.js: Molecular visualization with WebGL</article-title>. <source>Bioinformatics</source>
<volume>31</volume>, <fpage>1322</fpage>–<lpage>1324</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu829</pub-id>
<pub-id pub-id-type="pmid">25505090</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

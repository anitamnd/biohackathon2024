<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Bioeng Biotechnol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Bioeng Biotechnol</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Bioeng. Biotechnol.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Bioengineering and Biotechnology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2296-4185</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7644802</article-id>
    <article-id pub-id-type="doi">10.3389/fbioe.2020.568318</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioengineering and Biotechnology</subject>
        <subj-group>
          <subject>Methods</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Elfin UI: A Graphical Interface for Protein Design With Modular Building Blocks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Yeh</surname>
          <given-names>Chun-Ting</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/1027297/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Obendorf</surname>
          <given-names>Leon</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/1027250/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Parmeggiani</surname>
          <given-names>Fabio</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff3">
          <sup>3</sup>
        </xref>
        <xref ref-type="corresp" rid="c001">
          <sup>*</sup>
        </xref>
        <uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/819337/overview"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><sup>1</sup><institution>School of Chemistry and School of Biochemistry, University of Bristol</institution>, <addr-line>Bristol</addr-line>, <country>United Kingdom</country></aff>
    <aff id="aff2"><sup>2</sup><institution>Institute of Chemistry and Biochemistry, Freie Universität Berlin</institution>, <addr-line>Berlin</addr-line>, <country>Germany</country></aff>
    <aff id="aff3"><sup>3</sup><institution>Bristol Biodesign Institute and BrisSynBio, a BBSRC/EPSRC Synthetic Biology Research Centre, University of Bristol</institution>, <addr-line>Bristol</addr-line>, <country>United Kingdom</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p>Edited by: Jose Ruben Morones-Ramirez, Autonomous University of Nuevo León, Mexico</p>
      </fn>
      <fn fn-type="edited-by">
        <p>Reviewed by: Mario Andrea Marchisio, Tianjin University, China; Thomas Dandekar, Julius Maximilian University of Würzburg, Germany; Jean Vanderdonckt, Catholic University of Louvain, Belgium</p>
      </fn>
      <corresp id="c001">*Correspondence: Fabio Parmeggiani, <email>fabio.parmeggiani@bristol.ac.uk</email></corresp>
      <fn fn-type="other" id="fn004">
        <p>This article was submitted to Synthetic Biology, a section of the journal Frontiers in Bioengineering and Biotechnology</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>10</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>8</volume>
    <elocation-id>568318</elocation-id>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>02</day>
        <month>10</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2020 Yeh, Obendorf and Parmeggiani.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Yeh, Obendorf and Parmeggiani</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Molecular models have enabled understanding of biological structures and functions and allowed design of novel macro-molecules. Graphical user interfaces (GUIs) in molecular modeling are generally focused on atomic representations, but, especially for proteins, do not usually address designs of complex and large architectures, from nanometers to microns. Therefore, we have developed Elfin UI as a Blender add-on for the interactive design of large protein architectures with custom shapes. Elfin UI relies on compatible building blocks to design single- and multiple-chain protein structures. The software can be used: (1) as an interactive environment to explore building blocks combinations; and (2) as a computer aided design (CAD) tool to define target shapes that guide automated design. Elfin UI allows users to rapidly build new protein shapes, without the need to focus on amino acid sequence, and aims to make design of proteins and protein-based materials intuitive and accessible to researchers and members of the general public with limited expertise in protein engineering.</p>
    </abstract>
    <kwd-group>
      <kwd>protein design</kwd>
      <kwd>blender</kwd>
      <kwd>GUI</kwd>
      <kwd>repeat proteins</kwd>
      <kwd>computational modeling</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source id="cn001">Engineering and Physical Sciences Research Council<named-content content-type="fundref-id">10.13039/501100000266</named-content></funding-source>
        <award-id rid="cn001">EP/S017542/1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="7"/>
      <table-count count="0"/>
      <equation-count count="0"/>
      <ref-count count="42"/>
      <page-count count="11"/>
      <word-count count="0"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="S1">
    <title>Introduction</title>
    <p>Visualization and simulation of macromolecules have enabled our understanding of biological structures and have led to the development of a variety of tools for research, teaching and outreach, working at multiple scales (<xref rid="B20" ref-type="bibr">Johnson and Hertig, 2014</xref>).</p>
    <p>Visualizing structures made also possible to design them, by taking into account the spatial relationship between different parts of the molecules. Dedicated software packages have emerged over the years for protein design, reviewed by <xref rid="B12" ref-type="bibr">Gainza et al. (2016)</xref>, and popular viewers such as Chimera (<xref rid="B32" ref-type="bibr">Pettersen et al., 2004</xref>), PyMOL (The PyMOL Molecular Graphics System, Version 2.0 Schrödinger, LLC) (<xref rid="B8" ref-type="bibr">DeLano, 2002</xref>), and VMD (<xref rid="B17" ref-type="bibr">Humphrey et al., 1996</xref>) have now integrated design capabilities.</p>
    <p>Protein design tools focus largely on atomic models and sequence design from a given backbone structure. Additionally, several approaches allow to build completely new structures by relying on secondary structure description and fragments assembly, like Rosetta remodel and blueprint builder (<xref rid="B16" ref-type="bibr">Huang et al., 2011</xref>; <xref rid="B24" ref-type="bibr">Koga et al., 2012</xref>), parametric design, as in Isambard (<xref rid="B39" ref-type="bibr">Wood et al., 2017</xref>), idealized secondary structures, e.g., CoCoPOD (<xref rid="B29" ref-type="bibr">Ljubetič et al., 2017</xref>) and TopoBuilder (<xref rid="B35" ref-type="bibr">Sesterhenn et al., 2020</xref>), or building blocks with super-secondary structures, as in SEWING (<xref rid="B18" ref-type="bibr">Jacobs et al., 2016</xref>) and Elfin (<xref rid="B41" ref-type="bibr">Yeh et al., 2018</xref>). Protein complexes have been successfully designed for symmetric systems, e.g., point group symmetry (<xref rid="B26" ref-type="bibr">Lai et al., 2012</xref>; <xref rid="B22" ref-type="bibr">King et al., 2014</xref>; <xref rid="B15" ref-type="bibr">Hsia et al., 2016</xref>) and lattices (<xref rid="B27" ref-type="bibr">Lanci et al., 2012</xref>; <xref rid="B13" ref-type="bibr">Gonen et al., 2015</xref>), but large, precise and asymmetric assemblies are still a challenge. However, such scaffolds could prove particularly interesting in modulating cell surface receptor clustering and signaling via precise ligand organization and placement (<xref rid="B14" ref-type="bibr">Grochmal et al., 2013</xref>; <xref rid="B21" ref-type="bibr">Jost et al., 2013</xref>; <xref rid="B36" ref-type="bibr">Shaw et al., 2014</xref>; <xref rid="B30" ref-type="bibr">Mohan et al., 2019</xref>).</p>
    <p>To address the challenge of building large structures, both symmetric and non-symmetric, DNA nanotechnology groups have led the way in developing Computer Aided Design (CAD) software, e.g., Tiamat (<xref rid="B38" ref-type="bibr">Williams et al., 2009</xref>), cadnano (<xref rid="B9" ref-type="bibr">Douglas et al., 2009</xref>), CanDo (<xref rid="B37" ref-type="bibr">Veneziano et al., 2016</xref>), vHelix (<xref rid="B3" ref-type="bibr">Benson et al., 2015</xref>), taking advantage of base pairing and regularity of DNA double helix structure.</p>
    <p>Graphical User interfaces (GUI) have indeed a key role in making software accessible to a broad group of users, who are not necessarily expert, by enabling work on design principles, rather than biochemical details. While CAD tools for DNA nanostructures allow users to work purely on intuitive geometric concepts, e.g., shapes to achieve, protein design tools often require a more in-depth programming and biochemical knowledge. GUIs have been developed for the Rosetta modeling suite to improve usability (<xref rid="B1" ref-type="bibr">Adolf-Bryfogle and Dunbrack, 2013</xref>; <xref rid="B34" ref-type="bibr">Schenkelberg and Bystroff, 2015</xref>) and the protein folding game Foldit (<xref rid="B7" ref-type="bibr">Cooper et al., 2010</xref>) has successfully attracted a broad base of users from the general public. Its standalone interface (<xref rid="B23" ref-type="bibr">Kleffner et al., 2017</xref>) has become an instrument to interactively design new proteins, although designs are effectively limited to a few hundred amino acids, if systems are not symmetric.</p>
    <p>Size is one of the major limitations in interactive protein design using atomic models, as the number of atoms quickly becomes the computational bottleneck. However, it is possible to take a more coarse-grained approach to design large and complex protein architectures, akin to DNA nanostructure designs.</p>
    <p>In this work we have developed a user interface to allow design of protein structures using modular structural building blocks. Elfin user interface (Elfin UI) was developed as a graphical interface and an interactive editor to the Elfin software package (<xref rid="B41" ref-type="bibr">Yeh et al., 2018</xref>) for design of custom protein architectures (<xref ref-type="fig" rid="F1">Figure 1</xref>). Elfin uses structural compatible building blocks (referred to as modules) derived from experimentally validated structures of repeat proteins to build large and complex architectures. The goals were to provide (1) a CAD-like environment for design of user-defined shapes, to which Elfin could find solutions in terms of protein sequence and structures, and (2) a sandbox framework to interactively explore potential protein architectures. We envision Elfin UI to be used in the design of protein origami, custom shaped nanoparticles and scaffolds for organization of enzymes and signaling molecules.</p>
    <fig id="F1" position="float">
      <label>FIGURE 1</label>
      <caption>
        <p>Elfin UI is a Blender (<ext-link ext-link-type="uri" xlink:href="https://www.blender.org/">blender.org</ext-link>) add-on that enables interactive coarse-grained design of proteins using combinations of pre-existing and validated building blocks. The shaded orange area indicates the functionalities of Elfin UI within the design process. Designs can be built by defining the desired shape and searching for matching building blocks combinations, by manually placing the building blocks, or by a combination of the two methods. Coarse grained representations are then converted to atomic model outputs in mmCIF format.</p>
      </caption>
      <graphic xlink:href="fbioe-08-568318-g001"/>
    </fig>
    <p>We have implemented Elfin UI as a Blender add-on. Blender is a popular free, open source and cross-platform 3D modeling application, which has been successfully extended with add-ons to integrate molecular viewers, like BlendMol (<xref rid="B10" ref-type="bibr">Durrant, 2019</xref>), BioBlender (<xref rid="B2" ref-type="bibr">Andrei et al., 2012</xref>), ePMV (<xref rid="B19" ref-type="bibr">Johnson et al., 2011</xref>), Pyrite (<xref rid="B33" ref-type="bibr">Rajendiran and Durrant, 2018</xref>).</p>
    <p>By using modular compatible building blocks and a coarse-grained representation, we aim to provide a tool accessible to scientists, both expert and novice in protein design, and a new way to engage the public with the concepts of modular design and manufacturing using biological macromolecules.</p>
  </sec>
  <sec id="S2">
    <title>Methods</title>
    <p>The Elfin software package is built around the Elfin solver, a genetic algorithm for the assembly of modular structures matching a user defined shape (<xref rid="B41" ref-type="bibr">Yeh et al., 2018</xref>), and contains an updated database with information about modular building blocks, a graphical user interface (Elfin UI) built as Blender add-on, and ancillary utility scripts (e.g., for installation, database preparation, file conversion). Code, documentation, installation scripts and tutorials are available on <ext-link ext-link-type="uri" xlink:href="https://github.com/Parmeggiani-Lab/elfin">https://github.com/Parmeggiani-Lab/elfin</ext-link>.</p>
    <p>Elfin UI’s approach to protein design is similar to the idea of Model-Based UI Design (<xref rid="B6" ref-type="bibr">Calvary et al., 2003</xref>). In this framework, Elfin UI uses a database of individual proteins and termini compatibility matrix as the domain model. The task of protein design is undertaken by arranging and joining two or more protein modules to form the shape desired by the user. Each protein module is abstractly represented by attributes such as its center-of-mass, collision radius, and module pairwise transformation matrices. A design assembled by the user is converted into an atomic model by projecting atomic coordinates of each protein module onto their respective position and adding capping modules to each “free” termini to protect the otherwise exposed hydrophobic core and improve solubility (<xref ref-type="supplementary-material" rid="DS1">Supplementary Figure S1</xref>). Finally, if the designed protein’s atomic structure passes third party verification (e.g., Rosetta, see <xref ref-type="supplementary-material" rid="DS1">Supplementary Materials</xref>), it is considered suitable to be produced and characterized experimentally.</p>
    <sec id="S2.SS1">
      <title>Database</title>
      <p>Elfin builds protein architectures using combinations of structural building blocks. Building blocks are stored as collection of atomic coordinates in The Protein Data Bank (PDB) format and used to precompute: (1) a JSON database, which includes, for each module, the center of mass and radius, a list of compatible modules and relative orientation of the pairs, expressed as rigid body transforms; (2) a Blender database that stores meshes of each module with cartoon representations of secondary structure elements.</p>
      <p>Modules are classified as: core, when they are extracted from designed repeat proteins (<xref rid="B31" ref-type="bibr">Parmeggiani and Huang, 2017</xref>) and contain repeated super-secondary structure (e.g., helix-loop-helix-loop); junction, if they contain two contiguous and merged super-secondary structures typical of core modules (so that the module acts as a junction between core modules); or hub, if they are formed by multiple interacting chains. Core and junction modules are single chains that can be extended by adding a further module to the chain either at the N- or C- terminus. Some hubs’ chains can be extended only at one terminus, if the other is involved in binding another chain.</p>
      <p>Core modules have a specific name, like D4, proA, darp. Junctions include the name of the core modules that they bridge with a j (for junction) followed by a number, since there can be multiple junctions between two core modules: e.g., D14_j1_D79, D14_j2_D79. The name indicates that they are compatible at the N-term with modules that possess a C-term interface of the same kind (anything ending in D14 in this case). Same for the C-term. Core modules are compatible, by definition, with themselves and with junctions with compatible ends. Hub names indicate the type of core module that they contain and eventually information about the number of subunits and type of symmetry, e.g., D4_C4 is a cyclic homo-tetramer of D4-derived units.</p>
      <p>Modules form a continuous hydrophobic core that runs through each chain. As for repeat proteins (<xref rid="B31" ref-type="bibr">Parmeggiani and Huang, 2017</xref>), the core needs to be sealed off at the termini by modified repeating units, called capping repeats or caps, with the same structural unit of the last module: e.g., a D14 and a D49_j1_D14 module, placed at the C-term, require capping by Ccap_D14. Caps are added only at the final stage when a JSON file from Elfin UI or Elfin solver is converted into an atomic model in mmCIF format by the stitch.py script. mmCIF is the standard format for the Worldwide Protein Data Bank (wwPDB) and removes limitations on the number of atoms and chains present in the previous PDB format. Modules in the database are still stored as PDB files, as the number of atoms is limited and within the capacity of the format.</p>
      <p>Current modules are derived from published and experimentally verified structures. Core modules are extracted from designed helical repeats (DHRs) (<xref rid="B5" ref-type="bibr">Brunette et al., 2015</xref>), designed ankyrin repeats proteins (darpins) (<xref rid="B25" ref-type="bibr">Kramer et al., 2010</xref>) and protein A (<xref rid="B42" ref-type="bibr">Youn et al., 2017</xref>). Junctions were designed using either an helix fusion method (<xref rid="B40" ref-type="bibr">Wu et al., 2017</xref>; <xref rid="B42" ref-type="bibr">Youn et al., 2017</xref>) or <italic>de novo</italic> connecting helices (<xref rid="B4" ref-type="bibr">Brunette et al., 2020</xref>). Hubs were derived from oligomeric repeat proteins (<xref rid="B11" ref-type="bibr">Fallas et al., 2017</xref>). <xref ref-type="supplementary-material" rid="DS1">Supplementary Table S1</xref> contains a detailed list of modules and sources. Custom databases can be created using the scripts provided with the Elfin source code. The workflow is described in the <xref ref-type="supplementary-material" rid="DS1">Supplementary Figure S2</xref>.</p>
    </sec>
    <sec id="S2.SS2">
      <title>Blender Add-On Implementation</title>
      <p>Elfin UI was developed in python 2.7 as an add-on to blender 2.79. Currently it is not yet compatible with Blender 2.8. As Blender add-on, Elfin UI creates a context menu and adds sections in the side panel, but primarily interacts with objects in the scene by defining “operators” that apply some routine on selected objects. These operators can be invoked using shortcuts, by clicking context menu buttons, or looked up and called from the search menu. Elfin UI plugin defines many such operators to facilitate two main design processes: (1) path guide building, and (2) manual module placement (see results for description). Whenever objects (either protein modules or path guide components) are created through Elfin UI’s operators, the object is spawned with a property group dedicated to storing Elfin’s information. It stores the object type (module or path guide), link occupancy (who are the neighbors), and helper attributes such as a flag to indicate whether the object needs to be cleaned up by Elfin’s object lifetime watcher. Other than object-specific information, data such as module compatibility and 3D models are loaded only once and stored in a singleton object until either Blender is closed, the add-on is reloaded, or when the user explicitly calls the reload operator.</p>
      <p>Module compatibility is explicitly embedded in the prototype naming convention for module operators. Place Module and Extrude Module operators prompt the user with a filtered list of actionable module names (<italic>filtered prototypes</italic>). There could be many modules in a scene, but modules with the same name (e.g., D4.001, D4.002) are of the same prototype (D4). For extrusion, prototypes are filtered by compatibility and also terminus occupancy (i.e., is the N and/or C terminus already occupied?).</p>
      <p>For Place Module, the name of each module is bounded by two period marks. These marks make it easy to search the exact module the user is looking for: e.g., a search for.D4 will return all modules with a name starting in D4.</p>
      <p>For Extrude Module, names are in the form:</p>
      <p>: &lt; chain1 &gt; (&lt; term1 &gt;) - &gt; (&lt; term2 &gt;) &lt; chain2 &gt; : &lt; name2 &gt;.</p>
      <p>The chain1 and term1 are chain ID and terminus type of the module being extruded from. The term2, chain2, and name2 are corresponding attributes of the new module to be extruded into. For instance: when D49 is selected and extrusion on the N terminus is chosen, one of the items in the list could be:A(N) - &gt; (C)A:D49_aC2_24. This means the terminus N of chain A of D49 can be extruded and connected to a yet-to-be-added D49_aC2_24 hub. In the latter, terminus C of chain A would be used for this connection. The first letter, if there is one, denotes the C-Terminus chain ID of the extrusion. This is needed because hub modules have more than one chain to extrude to and from. The last letter is therefore the N-Terminus chain ID in the to-be-extruded module.</p>
      <p>Groups of modules or path guide primitives are organized in networks that keep track of which modules or path guides are “connected.” Networks are displayed in Blender outliner view. While individual path guide “joints” can be freely rotated and translated, Elfin UI locks individual modules. However, whole networks can be rotated and translated because they preserve the interface relationship of each connected group of modules. Creation and splitting of networks are automatic, and ease processing when exporting. Joining of two networks is also possible, subject to termini compatibility.</p>
      <p>When designing using Elfin UI, live collision detection between protein modules can be turned on or off from the left side pane (default shortcut is T). When it is turned on, newly placed protein objects that result in collision will raise a clear warning on screen.</p>
      <p>Since Elfin UI supports “partial design”—a design specification consisting of a network of path guide components overlapping manually placed modules, sanity checks such as overlap intention and link availability are conducted behind the scenes.</p>
    </sec>
  </sec>
  <sec id="S3">
    <title>Results</title>
    <p>Elfin UI is part of the Elfin tool set that allows the user to design proteins with complex 3D shapes protein designs. In Elfin, a three-dimensional structure, defined as a network of nodes and edges, is translated into a protein structure using a combination of compatible structural building blocks, referred to as modules. Different module databases can be used and users can build their own, as described in the <xref ref-type="supplementary-material" rid="DS1">Supplementary Materials.</xref></p>
    <p>As an add-on, Elfin UI borrows Blender’s graphical interface to enable the generation of 3D structures to facilitate two main design processes: (1) path guide building, and (2) manual module placement.</p>
    <p>Path guides are 3D objects, formed by nodes and edges, that describe the geometry of a three-dimensional shape. Path guides can be exported to Elfin Solver (the core algorithm in Elfin), which generates a protein structure to fit, as close as possible, the defined 3D shape.</p>
    <p>Alternatively, protein modules, which correspond to super-secondary structural elements (e.g., sets of alpha helices and beta sheets), can be manually placed. The protein chain can be then extended by adding compatible modules, allowing for a stepwise and interactive building of protein structures.</p>
    <p>Elfin UI introduces a new panel of options in Blender and new import and export features that enable path guide building, manual module placement and hybrid designs.</p>
    <sec id="S3.SS1">
      <title>Blender Interface</title>
      <p>Elfin UI specific controls are located in an “elfin” panel in the Blender interface (<xref ref-type="fig" rid="F2">Figure 2</xref>). The commands, called operators, allow paths guide building and module placement. Depending on current selected objects, only allowed operators can be used. Operators are also available in the search menu, accessible using the spacebar, in Blender 2.79. Every operator has a hashtag-three-letters-shortcut that, when entered in the search menu, immediately brings up that operator, speeding up the design process. E.g., the module extrusion operator is “#exm.” Operators’ detailed descriptions are available in the Elfin UI tutorial: <ext-link ext-link-type="uri" xlink:href="https://github.com/Parmeggiani-Lab/elfin-ui/blob/master/resources/tutorial/README.md">https://github.com/Parmeggiani-Lab/elfin-ui/blob/master/resources/tutorial/README.md</ext-link>. Blender operators, like delete, work on these objects.</p>
      <fig id="F2" position="float">
        <label>FIGURE 2</label>
        <caption>
          <p>The Elfin UI Blender add-on interface. The Elfin panel on the left shows the accessible operators. On the Blender scene, on the left is a path guide composed of three joints (blue icospheres) and two bridges (red), and on the right a protein formed by three modules, in different colors.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g002"/>
      </fig>
      <p>Modules are represented by meshes, derived from PyMol (<xref rid="B8" ref-type="bibr">DeLano, 2002</xref>) that depict protein secondary structures (helices, beta sheets and loops) and have been scaled appropriately: each square in the reference plane of the default Blender working space is 1 nm long. Interactions and relative positions are precomputed and stored in a database file, therefore, to preserve the relationships, module scaling is not allowed.</p>
      <p>Elfin UI allows export of path guides and designed proteins as JSON files, which contain information about connectivity, type of modules (if present) and three-dimensional coordinates. Elfin solutions, produced as JSON files, contain a network of modules and can be imported in Elfin UI for visualization. JSON was chosen for its human-readability (which facilitates debugging and easy extension), ease to parse, and because there is not a large amount of data to justify size-efficient formats, such as binary formats.</p>
      <p>Elfin UI is a module-centric interface and does not support atom or residue level views. Atomic models, in mmCIF format, are generated from json files by a script (stitch.py) in the Elfin tool set (see <xref ref-type="supplementary-material" rid="DS1">Supplementary Figure S1</xref> for details). Output files can be then visualized using molecular viewers (e.g., PyMol, Chimera, VMD) or loaded in any program that supports mmCIF files for energy minimization, molecular dynamics simulations or further design. After conversion from the modular coarse-grained representation to atomic coordinates, we perform energy minimization and relaxation in Rosetta (<xref rid="B28" ref-type="bibr">Leman et al., 2020</xref>) to ensure that the design shape is maintained (see <xref ref-type="supplementary-material" rid="DS1">Supplementary Materials</xref>).</p>
    </sec>
    <sec id="S3.SS2">
      <title>Path Guide Building</title>
      <p>Path guides are the objects that guide Elfin Solver to build a protein that most resembles the user’s design intent. Path guides are not protein modules; they are simple geometry specifications expressed as “joints” and “bridges.” These are synonymous to “nodes” and “edges” in mathematical terms, and in Blender, they are represented with premade icosphere and elongated cubes respectively (<xref ref-type="fig" rid="F2">Figure 2</xref>).</p>
      <p>The main path guide operators are:</p>
      <list list-type="simple">
        <list-item>
          <label>•</label>
          <p>Add joint: place a new joint in space</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Extrude joint: create a new joint in the desired position connected to the current joint with a bridge</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Bridge two joints: create a new bridge between joints</p>
        </list-item>
      </list>
      <p>When connecting between joints, bridges will stretch and contract visually according to the actual distance between the joints. Joints and bridges can be used to define complex networks. Since the distance between joints can be arbitrarily defined, there may not always be a solution in which protein modules can satisfy the path guide design, but Elfin Solver always tries to optimize.</p>
      <p>After a design has been drawn out by the user, it can be exported into a JSON format that Elfin Solver reads and processes. The optimized solution is saved into a JSON file that Elfin UI can read back into Blender and display as a 3D model (<xref ref-type="fig" rid="F3">Figure 3</xref>).</p>
      <fig id="F3" position="float">
        <label>FIGURE 3</label>
        <caption>
          <p>Path guide building. Elfin UI allows to define a network of joints and bridges that can be used as input for Elfin solver. The designed output can be superimposed on the initial path guide. The colors indicate the different building blocks highlighted in the sequence at the bottom.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g003"/>
      </fig>
      <p>Path guides are used to define arbitrary shapes that the user is interested in. If the goal is a precise geometry in 2D or 3D, the coordinates for each node can be inputted directly in Blender.</p>
    </sec>
    <sec id="S3.SS3">
      <title>Manual Module Placement</title>
      <p>Elfin UI can be used as a sandbox environment to interactively explore the construction of complex protein architectures. Users can select modules and place them directly into the scene, growing chains progressively by addition of new compatible modules (<xref ref-type="fig" rid="F4">Figure 4</xref>). When a new module is placed the color can be changed. If a new module causes clashes with the existing chains, an error box is raised, preventing the addition. This check can be disabled by toggling the auto_collision_check box in the elfin panel.</p>
      <fig id="F4" position="float">
        <label>FIGURE 4</label>
        <caption>
          <p>Manual module placement. The single chain protein is built as a sequence of compatible modules, depicted in different colors.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g004"/>
      </fig>
      <p>The main module operators are:</p>
      <list list-type="simple">
        <list-item>
          <label>•</label>
          <p>Place modules: place a new module in the scene</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Extrude module: place a new module next to the current one extending the protein chain; the new module is selected among the compatible ones</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Link by mirror: associate two or more identical modules; when one of these modules is extruded, all the linked ones are extruded accordingly, if the extrusion is possible. Added modules are considered linked to each other</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p>Unlink mirror: remove the mirror linkage, so that extrusion can be performed independently.</p>
        </list-item>
      </list>
      <p>Modules are derived from existing experimental structures (<xref rid="B25" ref-type="bibr">Kramer et al., 2010</xref>; <xref rid="B5" ref-type="bibr">Brunette et al., 2015</xref>, <xref rid="B4" ref-type="bibr">2020</xref>; <xref rid="B40" ref-type="bibr">Wu et al., 2017</xref>; <xref rid="B42" ref-type="bibr">Youn et al., 2017</xref>) and connected through peptide bonds. The interfaces between modules and their relative orientation are also derived from crystal structures and SAXS-confirmed models, ensuring a correct module placement. This information is stored in the elfin and Blender databases (see section “Methods”).</p>
      <p>Mirror linking is used to build symmetric structures or structures containing only some symmetric parts (<xref ref-type="fig" rid="F5">Figure 5</xref>). Mirror-linked modules need to be of the same type. Modules derived from experimentally validated oligomers (<xref rid="B11" ref-type="bibr">Fallas et al., 2017</xref>) contain multiple chains that can potentially grow in a symmetric fashion, when the same module is added to each chain. Symmetric hubs are automatically mirror-linked. Modules extruded from mirror-linked modules are automatically mirror-linked.</p>
      <fig id="F5" position="float">
        <label>FIGURE 5</label>
        <caption>
          <p>Symmetric structures. <bold>(A,B)</bold> Show respectively two and four chain architectures. The oligomeric module (hub) is indicated by the repeated vertical and horizontal dashes.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g005"/>
      </fig>
    </sec>
    <sec id="S3.SS4">
      <title>Hybrid Design</title>
      <p>Manual module placement can be used in conjunction with path guides to partially define a design, if the user already knows what protein module needs to be positioned (e.g., predefined binding sites) and in which orientation (<xref ref-type="fig" rid="F6">Figure 6</xref>). The user places modules directly into the scene and translates and rotates them.</p>
      <fig id="F6" position="float">
        <label>FIGURE 6</label>
        <caption>
          <p>Hybrid design. Elfin UI allows users to build shapes that include selected modules in specific positions. The path guide parts are solved by Elfin solver and merged in Elfin UI. <bold>(A,B)</bold> Show single-chain and two-chains hybrid designs, respectively.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g006"/>
      </fig>
      <p>When a protein module is placed directly on a path guide joint, Elfin UI infers that the bridges connecting to that joint are intended to be “extrusions” from the protein module. The “move joint to module” operator allows to place an existing joint on a module, after selecting both.</p>
      <p>Hybrid design can be used when the position and orientation of specific modules of the desired protein are known. By building a guide path from them, elfin will search for a compatible solution to connect the modules. The initial input and the design output should be then combined in a single network, using the “join network” operator to obtain the combined structure. This approach can be used, for example, to build multivalent ligands to engage multiple cell receptors at the same time, by placing binding interfaces in the desired positions and orientation and searching for structures that can accommodate them.</p>
    </sec>
    <sec id="S3.SS5">
      <title>Designing With Elfin UI: Multivalent Erythropoietin Receptor Ligands</title>
      <p>Elfin UI can be used to rapidly design rigid protein scaffolds to control the display of ligands for cell surface receptors. Dimeric ankyrin-based ligands for the erythropoietin receptor (EpoR) have been shown to induce receptor dimerization and modulate the signaling output as a function of the distance and orientation of binding sites (<xref rid="B30" ref-type="bibr">Mohan et al., 2019</xref>). We have used this system as a test case to assess the ability of Elfin UI to rapidly design models for alternative geometries and increased valency through manual module placement.</p>
      <p>The first design has been generated by choosing a central tetrameric hub, extending it progressively, and ending with an ankyrin module that hosts the EpoR ligand, while avoiding clashes with the receptors (<xref ref-type="fig" rid="F7">Figure 7A</xref>). The second model has been designed to provide multiple specificities. The scaffold contains two EpoR binding sites and two protein A domains able to bind a conserved region of a Fab antibody fragment, which can provide additional specificity for a desired cell surface target (<xref ref-type="fig" rid="F7">Figure 7B</xref>). The designed structures are preserved after cycles of minimization and side chain repacking.</p>
      <fig id="F7" position="float">
        <label>FIGURE 7</label>
        <caption>
          <p>Design of multivalent ligands. <bold>(A)</bold> Tetramer binder for epoR, top and side view. The receptor is in green, the elfin UI design in cyan and the repacked and energy minimized model in magenta, showing only small deviation from the coarse-grained design. <bold>(B)</bold> Bispecific binder, top and side view. In orange is the dimeric design, in green epoR and in cyan and magenta the Fab fragment. Each design chain binds one copy of the receptor and one Fab fragment, orienting the antibody binding site toward the plasma membrane (bottom, gray) where it could engage with a target receptor of interest.</p>
        </caption>
        <graphic xlink:href="fbioe-08-568318-g007"/>
      </fig>
      <p>Each design with Elfin UI required about 1 h of work, including energy minimization and side chain repacking with Rosetta. In the second case, the Elfin UI design was used as a starting point for further engineering, shortening the proA module and moving the binding site to allow the placement of FAB in a position more compatible with multivalent binding. The output files are provided in the <xref ref-type="supplementary-material" rid="DS1">Supplementary Materials.</xref></p>
    </sec>
  </sec>
  <sec id="S4">
    <title>Discussion</title>
    <p>Elfin UI is a dedicated tool for coarse-grained design of custom protein architectures through building blocks combinations. Modular units are connected to form a single or multiple chains structure, depending on the modules used. The process is much faster than other backbone building methods, but it requires a highly curated database containing already all the possible pairs of modules in the correct orientation. Because of the nature of the database, interfaces between modules are already defined and further sequence design is not needed, contributing to improve the design speed, both in terms of automated solutions and feedback to users that build structures interactively. However, repacking and energy minimization are recommended to eliminate small discrepancies at the connection points between modules. External software tools (e.g. Rosetta) are required for modifications at atomic level, including repacking, energy minimization and point mutations.</p>
    <p>Elfin UI represents a new type of interactive design software for protein design. While other tools traditionally operate directly on atomic models, Elfin UI allows the user to act at a higher level, enabling a rapid design for a desired shape which is not arbitrary, but it is connected to the information in the module database. Quality, size and fit to the design task of the database are key factors for successful designs. The precomputed database is one of the factors influencing design speed, together with the visualization of our modules, which are represented by rigid meshes, appearing in blender as full-fledged secondary structures. Moreover, all calculations (e.g., collision detection, partial overlap, distance) are performed with each module considered as a sphere with defined radius, therefore drastically reducing the computational costs.</p>
    <p>This setup allows for rapid prototyping of potential structures of interest, exploring sequences with different lengths and shape. The option to generate custom databases allows for greater flexibility in cases where only specific types of modules could be used, e.g., peptide or protein binding domains.</p>
    <p>Elfin UI’s intuitive approach makes protein design of novel protein structures, and in particular large custom scaffolds, accessible to non-experts and to the general public, and represents a new educational and outreach tool.</p>
    <p>Precise and reliable design of biological systems is one of the goals of synthetic biology. With Elfin, custom structures with functional domains in specific positions and orientations can be easily and rapidly designed, bringing proteins into the realm of DNA nanotechnology.</p>
  </sec>
  <sec sec-type="data-availability" id="S5">
    <title>Data Availability Statement</title>
    <p>Publicly available datasets were analyzed in this study. This data can be found here: <ext-link ext-link-type="uri" xlink:href="https://github.com/Parmeggiani-Lab/elfin">https://github.com/Parmeggiani-Lab/elfin</ext-link>.</p>
  </sec>
  <sec id="S6">
    <title>Author Contributions</title>
    <p>C-TY wrote the software. LO tested and optimized the software. FP devised and supervised the project and wrote the manuscript. All the authors read and commented on the manuscript.</p>
  </sec>
  <sec id="conf1">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn fn-type="financial-disclosure">
      <p><bold>Funding.</bold> The project and FP were supported by the EPSRC Early Career fellowship EP/S017542/1 and BBSRC/EPSRC BrisSynBio grant BB/L01386X/1.</p>
    </fn>
  </fn-group>
  <ack>
    <p>We would like to thank the Advanced Computing Research Centre (ACRC) and the Bristol Biodesign Institute (BBI) at the University of Bristol for support and access to the BlueCrystal and Bluegem supercomputers.</p>
  </ack>
  <sec id="S9" sec-type="supplementary material">
    <title>Supplementary Material</title>
    <p>The Supplementary Material for this article can be found online at: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fbioe.2020.568318/full#supplementary-material">https://www.frontiersin.org/articles/10.3389/fbioe.2020.568318/full#supplementary-material</ext-link></p>
    <supplementary-material content-type="local-data" id="DS1">
      <media xlink:href="Data_Sheet_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="DS2">
      <media xlink:href="Data_Sheet_2.ZIP">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Adolf-Bryfogle</surname><given-names>J.</given-names></name><name><surname>Dunbrack</surname><given-names>R. L.</given-names><suffix>Jr.</suffix></name></person-group> (<year>2013</year>). <article-title>The pyrosetta toolkit: a graphical user interface for the rosetta software suite.</article-title>
<source><italic>PLoS One</italic></source>
<volume>8</volume>:<issue>e66856</issue>. <pub-id pub-id-type="doi">10.1371/journal.pone.0066856</pub-id>
<?supplied-pmid 23874400?><pub-id pub-id-type="pmid">23874400</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Andrei</surname><given-names>R. M.</given-names></name><name><surname>Callieri</surname><given-names>M.</given-names></name><name><surname>Zini</surname><given-names>M. F.</given-names></name><name><surname>Loni</surname><given-names>T.</given-names></name><name><surname>Maraziti</surname><given-names>G.</given-names></name><name><surname>Pan</surname><given-names>M. C.</given-names></name><etal/></person-group> (<year>2012</year>). <article-title>Intuitive representation of surface properties of biomolecules using BioBlender.</article-title>
<source><italic>BMC Bioinformatics</italic></source>
<volume>13</volume>:<issue>S16</issue>. <pub-id pub-id-type="doi">10.1186/1471-2105-13-S4-S16</pub-id>
<?supplied-pmid 22536962?><pub-id pub-id-type="pmid">22536962</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Benson</surname><given-names>E.</given-names></name><name><surname>Mohammed</surname><given-names>A.</given-names></name><name><surname>Gardell</surname><given-names>J.</given-names></name><name><surname>Masich</surname><given-names>S.</given-names></name><name><surname>Czeizler</surname><given-names>E.</given-names></name><name><surname>Orponen</surname><given-names>P.</given-names></name><etal/></person-group> (<year>2015</year>). <article-title>DNA rendering of polyhedral meshes at the nanoscale.</article-title>
<source><italic>Nature</italic></source>
<volume>523</volume>
<fpage>441</fpage>–<lpage>444</lpage>. <pub-id pub-id-type="doi">10.1038/nature14586</pub-id>
<?supplied-pmid 26201596?><pub-id pub-id-type="pmid">26201596</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brunette</surname><given-names>T. J.</given-names></name><name><surname>Bick</surname><given-names>M. J.</given-names></name><name><surname>Hansen</surname><given-names>J. M.</given-names></name><name><surname>Chow</surname><given-names>C. M.</given-names></name><name><surname>Kollman</surname><given-names>J. M.</given-names></name><name><surname>Baker</surname><given-names>D.</given-names></name></person-group> (<year>2020</year>). <article-title>Modular repeat protein sculpting using rigid helical junctions.</article-title>
<source><italic>PNAS</italic></source>
<volume>117</volume>
<fpage>8870</fpage>–<lpage>8875</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1908768117</pub-id>
<?supplied-pmid 32245816?><pub-id pub-id-type="pmid">32245816</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brunette</surname><given-names>T. J.</given-names></name><name><surname>Parmeggiani</surname><given-names>F.</given-names></name><name><surname>Huang</surname><given-names>P.-S.</given-names></name><name><surname>Bhabha</surname><given-names>G.</given-names></name><name><surname>Ekiert</surname><given-names>D. C.</given-names></name><name><surname>Tsutakawa</surname><given-names>S. E.</given-names></name><etal/></person-group> (<year>2015</year>). <article-title>Exploring the repeat protein universe through computational protein design.</article-title>
<source><italic>Nature</italic></source>
<volume>528</volume>
<fpage>580</fpage>–<lpage>584</lpage>. <pub-id pub-id-type="doi">10.1038/nature16162</pub-id>
<?supplied-pmid 26675729?><pub-id pub-id-type="pmid">26675729</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Calvary</surname><given-names>G.</given-names></name><name><surname>Coutaz</surname><given-names>J.</given-names></name><name><surname>Thevenin</surname><given-names>D.</given-names></name><name><surname>Limbourg</surname><given-names>Q.</given-names></name><name><surname>Bouillon</surname><given-names>L.</given-names></name><name><surname>Vanderdonckt</surname><given-names>J.</given-names></name></person-group> (<year>2003</year>). <article-title>A unifying reference framework for multi-target user interfaces.</article-title>
<source><italic>Interact. Comput.</italic></source>
<volume>15</volume>
<fpage>289</fpage>–<lpage>308</lpage>. <pub-id pub-id-type="doi">10.1016/S0953-5438(03)00010-9</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cooper</surname><given-names>S.</given-names></name><name><surname>Khatib</surname><given-names>F.</given-names></name><name><surname>Treuille</surname><given-names>A.</given-names></name><name><surname>Barbero</surname><given-names>J.</given-names></name><name><surname>Lee</surname><given-names>J.</given-names></name><name><surname>Beenen</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2010</year>). <article-title>Predicting protein structures with a multiplayer online game.</article-title>
<source><italic>Nature</italic></source>
<volume>466</volume>
<fpage>756</fpage>–<lpage>760</lpage>. <pub-id pub-id-type="doi">10.1038/nature09304</pub-id>
<?supplied-pmid 20686574?><pub-id pub-id-type="pmid">20686574</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>DeLano</surname><given-names>W. L.</given-names></name></person-group> (<year>2002</year>). <article-title>Pymol: An open-source molecular graphics tool.</article-title>
<source><italic>CCP4 Newsletter on Protein Crystallography.</italic></source>
<volume>40</volume>, <fpage>82</fpage>–<lpage>92</lpage>.</mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Douglas</surname><given-names>S. M.</given-names></name><name><surname>Marblestone</surname><given-names>A. H.</given-names></name><name><surname>Teerapittayanon</surname><given-names>S.</given-names></name><name><surname>Vazquez</surname><given-names>A.</given-names></name><name><surname>Church</surname><given-names>G. M.</given-names></name><name><surname>Shih</surname><given-names>W. M.</given-names></name></person-group> (<year>2009</year>). <article-title>Rapid prototyping of 3D DNA-origami shapes with caDNAno.</article-title>
<source><italic>Nucleic Acids Res.</italic></source>
<volume>37</volume>
<fpage>5001</fpage>–<lpage>5006</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkp436</pub-id>
<?supplied-pmid 19531737?><pub-id pub-id-type="pmid">19531737</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Durrant</surname><given-names>J. D.</given-names></name></person-group> (<year>2019</year>). <article-title>BlendMol: advanced macromolecular visualization in Blender.</article-title>
<source><italic>Bioinformatics</italic></source>
<volume>35</volume>
<fpage>2323</fpage>–<lpage>2325</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bty968</pub-id>
<?supplied-pmid 30481283?><pub-id pub-id-type="pmid">30481283</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fallas</surname><given-names>J. A.</given-names></name><name><surname>Ueda</surname><given-names>G.</given-names></name><name><surname>Sheffler</surname><given-names>W.</given-names></name><name><surname>Nguyen</surname><given-names>V.</given-names></name><name><surname>McNamara</surname><given-names>D. E.</given-names></name><name><surname>Sankaran</surname><given-names>B.</given-names></name><etal/></person-group> (<year>2017</year>). <article-title>Computational design of self-assembling cyclic protein homo-oligomers.</article-title>
<source><italic>Nat. Chem.</italic></source>
<volume>9</volume>
<fpage>353</fpage>–<lpage>360</lpage>. <pub-id pub-id-type="doi">10.1038/nchem.2673</pub-id>
<?supplied-pmid 28338692?><pub-id pub-id-type="pmid">28338692</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gainza</surname><given-names>P.</given-names></name><name><surname>Nisonoff</surname><given-names>H. M.</given-names></name><name><surname>Donald</surname><given-names>B. R.</given-names></name></person-group> (<year>2016</year>). <article-title>Algorithms for protein design.</article-title>
<source><italic>Curr. Opin. Struct. Biol.</italic></source>
<volume>39</volume>
<fpage>16</fpage>–<lpage>26</lpage>. <pub-id pub-id-type="doi">10.1016/j.sbi.2016.03.006</pub-id>
<?supplied-pmid 27086078?><pub-id pub-id-type="pmid">27086078</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gonen</surname><given-names>S.</given-names></name><name><surname>DiMaio</surname><given-names>F.</given-names></name><name><surname>Gonen</surname><given-names>T.</given-names></name><name><surname>Baker</surname><given-names>D.</given-names></name></person-group> (<year>2015</year>). <article-title>Design of ordered two-dimensional arrays mediated by noncovalent protein-protein interfaces.</article-title>
<source><italic>Science</italic></source>
<volume>348</volume>
<fpage>1365</fpage>–<lpage>1368</lpage>. <pub-id pub-id-type="doi">10.1126/science.aaa9897</pub-id>
<?supplied-pmid 26089516?><pub-id pub-id-type="pmid">26089516</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grochmal</surname><given-names>A.</given-names></name><name><surname>Ferrero</surname><given-names>E.</given-names></name><name><surname>Milanesi</surname><given-names>L.</given-names></name><name><surname>Tomas</surname><given-names>S.</given-names></name></person-group> (<year>2013</year>). <article-title>Modulation of in-membrane receptor clustering upon binding of multivalent ligands.</article-title>
<source><italic>J. Am. Chem. Soc.</italic></source>
<volume>135</volume>
<fpage>10172</fpage>–<lpage>10177</lpage>. <pub-id pub-id-type="doi">10.1021/ja404428u</pub-id>
<?supplied-pmid 23763669?><pub-id pub-id-type="pmid">23763669</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hsia</surname><given-names>Y.</given-names></name><name><surname>Bale</surname><given-names>J. B.</given-names></name><name><surname>Gonen</surname><given-names>S.</given-names></name><name><surname>Shi</surname><given-names>D.</given-names></name><name><surname>Sheffler</surname><given-names>W.</given-names></name><name><surname>Fong</surname><given-names>K. K.</given-names></name><etal/></person-group> (<year>2016</year>). <article-title>Design of a hyperstable 60-subunit protein icosahedron.</article-title>
<source><italic>Nature</italic></source>
<volume>535</volume>
<fpage>136</fpage>–<lpage>139</lpage>. <pub-id pub-id-type="doi">10.1038/nature18010</pub-id>
<?supplied-pmid 27309817?><pub-id pub-id-type="pmid">27309817</pub-id></mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname><given-names>P.-S.</given-names></name><name><surname>Ban</surname><given-names>Y.-E. A.</given-names></name><name><surname>Richter</surname><given-names>F.</given-names></name><name><surname>Andre</surname><given-names>I.</given-names></name><name><surname>Vernon</surname><given-names>R.</given-names></name><name><surname>Schief</surname><given-names>W. R.</given-names></name><etal/></person-group> (<year>2011</year>). <article-title>RosettaRemodel: a generalized framework for flexible backbone protein design.</article-title>
<source><italic>PLoS One</italic></source>
<volume>6</volume>:<issue>e24109</issue>. <pub-id pub-id-type="doi">10.1371/journal.pone.0024109</pub-id>
<?supplied-pmid 21909381?><pub-id pub-id-type="pmid">21909381</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Humphrey</surname><given-names>W.</given-names></name><name><surname>Dalke</surname><given-names>A.</given-names></name><name><surname>Schulten</surname><given-names>K.</given-names></name></person-group> (<year>1996</year>). <article-title>VMD: visual molecular dynamics.</article-title>
<source><italic>J. Mol. Graph.</italic></source>
<volume>14</volume>
<fpage>33</fpage>–<lpage>38</lpage>. <pub-id pub-id-type="doi">10.1016/0263-7855(96)00018-5</pub-id><pub-id pub-id-type="pmid">8744570</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jacobs</surname><given-names>T. M.</given-names></name><name><surname>Williams</surname><given-names>B.</given-names></name><name><surname>Williams</surname><given-names>T.</given-names></name><name><surname>Xu</surname><given-names>X.</given-names></name><name><surname>Eletsky</surname><given-names>A.</given-names></name><name><surname>Federizon</surname><given-names>J. F.</given-names></name><etal/></person-group> (<year>2016</year>). <article-title>Design of structurally distinct proteins using strategies inspired by evolution.</article-title>
<source><italic>Science</italic></source>
<volume>352</volume>
<fpage>687</fpage>–<lpage>690</lpage>. <pub-id pub-id-type="doi">10.1126/science.aad8036</pub-id>
<?supplied-pmid 27151863?><pub-id pub-id-type="pmid">27151863</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>G. T.</given-names></name><name><surname>Autin</surname><given-names>L.</given-names></name><name><surname>Goodsell</surname><given-names>D. S.</given-names></name><name><surname>Sanner</surname><given-names>M. F.</given-names></name><name><surname>Olson</surname><given-names>A. J.</given-names></name></person-group> (<year>2011</year>). <article-title>ePMV embeds molecular modeling into professional animation software environments.</article-title>
<source><italic>Structure</italic></source>
<volume>19</volume>
<fpage>293</fpage>–<lpage>303</lpage>. <pub-id pub-id-type="doi">10.1016/j.str.2010.12.023</pub-id>
<?supplied-pmid 21397181?><pub-id pub-id-type="pmid">21397181</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Johnson</surname><given-names>G. T.</given-names></name><name><surname>Hertig</surname><given-names>S.</given-names></name></person-group> (<year>2014</year>). <article-title>A guide to the visual analysis and communication of biomolecular structural data.</article-title>
<source><italic>Nat. Rev. Mol. Cell Biol.</italic></source>
<volume>15</volume>
<fpage>690</fpage>–<lpage>698</lpage>. <pub-id pub-id-type="doi">10.1038/nrm3874</pub-id>
<?supplied-pmid 25245078?><pub-id pub-id-type="pmid">25245078</pub-id></mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jost</surname><given-names>C.</given-names></name><name><surname>Schilling</surname><given-names>J.</given-names></name><name><surname>Tamaskovic</surname><given-names>R.</given-names></name><name><surname>Schwill</surname><given-names>M.</given-names></name><name><surname>Honegger</surname><given-names>A.</given-names></name><name><surname>Plückthun</surname><given-names>A.</given-names></name></person-group> (<year>2013</year>). <article-title>Structural basis for eliciting a cytotoxic effect in her2-overexpressing cancer cells via binding to the extracellular domain of HER2.</article-title>
<source><italic>Structure</italic></source>
<volume>21</volume>
<fpage>1979</fpage>–<lpage>1991</lpage>. <pub-id pub-id-type="doi">10.1016/j.str.2013.08.020</pub-id>
<?supplied-pmid 24095059?><pub-id pub-id-type="pmid">24095059</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>King</surname><given-names>N. P.</given-names></name><name><surname>Bale</surname><given-names>J. B.</given-names></name><name><surname>Sheffler</surname><given-names>W.</given-names></name><name><surname>McNamara</surname><given-names>D. E.</given-names></name><name><surname>Gonen</surname><given-names>S.</given-names></name><name><surname>Gonen</surname><given-names>T.</given-names></name><etal/></person-group> (<year>2014</year>). <article-title>Accurate design of co-assembling multi-component protein nanomaterials.</article-title>
<source><italic>Nature</italic></source>
<volume>510</volume>
<fpage>103</fpage>–<lpage>108</lpage>. <pub-id pub-id-type="doi">10.1038/nature13404</pub-id>
<?supplied-pmid 24870237?><pub-id pub-id-type="pmid">24870237</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kleffner</surname><given-names>R.</given-names></name><name><surname>Flatten</surname><given-names>J.</given-names></name><name><surname>Leaver-Fay</surname><given-names>A.</given-names></name><name><surname>Baker</surname><given-names>D.</given-names></name><name><surname>Siegel</surname><given-names>J. B.</given-names></name><name><surname>Khatib</surname><given-names>F.</given-names></name><etal/></person-group> (<year>2017</year>). <article-title>Foldit standalone: a video game-derived protein structure manipulation interface using Rosetta.</article-title>
<source><italic>Bioinformatics</italic></source>
<volume>33</volume>
<fpage>2765</fpage>–<lpage>2767</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btx283</pub-id>
<?supplied-pmid 28481970?><pub-id pub-id-type="pmid">28481970</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koga</surname><given-names>N.</given-names></name><name><surname>Tatsumi-Koga</surname><given-names>R.</given-names></name><name><surname>Liu</surname><given-names>G.</given-names></name><name><surname>Xiao</surname><given-names>R.</given-names></name><name><surname>Acton</surname><given-names>T. B.</given-names></name><name><surname>Montelione</surname><given-names>G. T.</given-names></name><etal/></person-group> (<year>2012</year>). <article-title>Principles for designing ideal protein structures.</article-title>
<source><italic>Nature</italic></source>
<volume>491</volume>
<fpage>222</fpage>–<lpage>227</lpage>. <pub-id pub-id-type="doi">10.1038/nature11600</pub-id>
<?supplied-pmid 23135467?><pub-id pub-id-type="pmid">23135467</pub-id></mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kramer</surname><given-names>M. A.</given-names></name><name><surname>Wetzel</surname><given-names>S. K.</given-names></name><name><surname>Plückthun</surname><given-names>A.</given-names></name><name><surname>Mittl</surname><given-names>P. R. E.</given-names></name><name><surname>Grütter</surname><given-names>M. G.</given-names></name></person-group> (<year>2010</year>). <article-title>structural determinants for improved stability of designed ankyrin repeat proteins with a redesigned C-capping module.</article-title>
<source><italic>J. Mol. Biol.</italic></source>
<volume>404</volume>
<fpage>381</fpage>–<lpage>391</lpage>. <pub-id pub-id-type="doi">10.1016/j.jmb.2010.09.023</pub-id>
<?supplied-pmid 20851127?><pub-id pub-id-type="pmid">20851127</pub-id></mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lai</surname><given-names>Y.-T.</given-names></name><name><surname>Cascio</surname><given-names>D.</given-names></name><name><surname>Yeates</surname><given-names>T. O.</given-names></name></person-group> (<year>2012</year>). <article-title>Structure of a 16-nm cage designed by using protein oligomers.</article-title>
<source><italic>Science</italic></source>
<volume>336</volume>
<fpage>1129</fpage>–<lpage>1129</lpage>. <pub-id pub-id-type="doi">10.1126/science.1219351</pub-id>
<?supplied-pmid 22654051?><pub-id pub-id-type="pmid">22654051</pub-id></mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lanci</surname><given-names>C. J.</given-names></name><name><surname>MacDermaid</surname><given-names>C. M.</given-names></name><name><surname>Kang</surname><given-names>S.</given-names></name><name><surname>Acharya</surname><given-names>R.</given-names></name><name><surname>North</surname><given-names>B.</given-names></name><name><surname>Yang</surname><given-names>X.</given-names></name><etal/></person-group> (<year>2012</year>). <article-title>Computational design of a protein crystal.</article-title>
<source><italic>PNAS</italic></source>
<volume>109</volume>
<fpage>7304</fpage>–<lpage>7309</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1112595109</pub-id>
<?supplied-pmid 22538812?><pub-id pub-id-type="pmid">22538812</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leman</surname><given-names>J. K.</given-names></name><name><surname>Weitzner</surname><given-names>B. D.</given-names></name><name><surname>Lewis</surname><given-names>S. M.</given-names></name><name><surname>Adolf-Bryfogle</surname><given-names>J.</given-names></name><name><surname>Alam</surname><given-names>N.</given-names></name><name><surname>Alford</surname><given-names>R. F.</given-names></name><etal/></person-group> (<year>2020</year>). <article-title>Macromolecular modeling and design in Rosetta: recent methods and frameworks.</article-title>
<source><italic>Nat. Methods</italic></source>
<volume>17</volume>
<fpage>665</fpage>–<lpage>680</lpage>. <pub-id pub-id-type="doi">10.1038/s41592-020-0848-2</pub-id>
<?supplied-pmid 32483333?><pub-id pub-id-type="pmid">32483333</pub-id></mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ljubetič</surname><given-names>A.</given-names></name><name><surname>Lapenta</surname><given-names>F.</given-names></name><name><surname>Gradišar</surname><given-names>H.</given-names></name><name><surname>Drobnak</surname><given-names>I.</given-names></name><name><surname>Aupič</surname><given-names>J.</given-names></name><name><surname>Strmšek</surname><given-names>Ž, et al.</given-names></name></person-group> (<year>2017</year>). <article-title>Design of coiled-coil protein-origami cages that self-assemble in vitro and in vivo.</article-title>
<source><italic>Nat Biotechnol.</italic></source>
<volume>35</volume>
<fpage>1094</fpage>–<lpage>1101</lpage>. <pub-id pub-id-type="doi">10.1038/nbt.3994</pub-id>
<?supplied-pmid 29035374?><pub-id pub-id-type="pmid">29035374</pub-id></mixed-citation>
    </ref>
    <ref id="B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mohan</surname><given-names>K.</given-names></name><name><surname>Ueda</surname><given-names>G.</given-names></name><name><surname>Kim</surname><given-names>A. R.</given-names></name><name><surname>Jude</surname><given-names>K. M.</given-names></name><name><surname>Fallas</surname><given-names>J. A.</given-names></name><name><surname>Guo</surname><given-names>Y.</given-names></name><etal/></person-group> (<year>2019</year>). <article-title>Topological control of cytokine receptor signaling induces differential effects in hematopoiesis.</article-title>
<source><italic>Science</italic></source>
<volume>364</volume>
<issue>eaav7532</issue>. <pub-id pub-id-type="doi">10.1126/science.aav7532</pub-id>
<?supplied-pmid 31123111?><pub-id pub-id-type="pmid">31123111</pub-id></mixed-citation>
    </ref>
    <ref id="B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Parmeggiani</surname><given-names>F.</given-names></name><name><surname>Huang</surname><given-names>P.-S.</given-names></name></person-group> (<year>2017</year>). <article-title>Designing repeat proteins: a modular approach to protein design.</article-title>
<source><italic>Curr. Opin. Struct. Biol.</italic></source>
<volume>45</volume>
<fpage>116</fpage>–<lpage>123</lpage>. <pub-id pub-id-type="doi">10.1016/j.sbi.2017.02.001</pub-id>
<?supplied-pmid 28267654?><pub-id pub-id-type="pmid">28267654</pub-id></mixed-citation>
    </ref>
    <ref id="B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pettersen</surname><given-names>E. F.</given-names></name><name><surname>Goddard</surname><given-names>T. D.</given-names></name><name><surname>Huang</surname><given-names>C. C.</given-names></name><name><surname>Couch</surname><given-names>G. S.</given-names></name><name><surname>Greenblatt</surname><given-names>D. M.</given-names></name><name><surname>Meng</surname><given-names>E. C.</given-names></name><etal/></person-group> (<year>2004</year>). <article-title>UCSF chimera—A visualization system for exploratory research and analysis.</article-title>
<source><italic>J. Comput. Chem.</italic></source>
<volume>25</volume>
<fpage>1605</fpage>–<lpage>1612</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.20084</pub-id>
<?supplied-pmid 15264254?><pub-id pub-id-type="pmid">15264254</pub-id></mixed-citation>
    </ref>
    <ref id="B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rajendiran</surname><given-names>N.</given-names></name><name><surname>Durrant</surname><given-names>J. D.</given-names></name></person-group> (<year>2018</year>). <article-title>Pyrite: a blender plugin for visualizing molecular dynamics simulations using industry-standard rendering techniques.</article-title>
<source><italic>J. Comput. Chem.</italic></source>
<volume>39</volume>
<fpage>748</fpage>–<lpage>755</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.25155</pub-id>
<?supplied-pmid 29280166?><pub-id pub-id-type="pmid">29280166</pub-id></mixed-citation>
    </ref>
    <ref id="B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schenkelberg</surname><given-names>C. D.</given-names></name><name><surname>Bystroff</surname><given-names>C.</given-names></name></person-group> (<year>2015</year>). <article-title>InteractiveROSETTA: a graphical user interface for the PyRosetta protein modeling suite.</article-title>
<source><italic>Bioinformatics</italic></source>
<volume>31</volume>
<fpage>4023</fpage>–<lpage>4025</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv492</pub-id>
<?supplied-pmid 26315900?><pub-id pub-id-type="pmid">26315900</pub-id></mixed-citation>
    </ref>
    <ref id="B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sesterhenn</surname><given-names>F.</given-names></name><name><surname>Yang</surname><given-names>C.</given-names></name><name><surname>Bonet</surname><given-names>J.</given-names></name><name><surname>Cramer</surname><given-names>J. T.</given-names></name><name><surname>Wen</surname><given-names>X.</given-names></name><name><surname>Wang</surname><given-names>Y.</given-names></name><etal/></person-group> (<year>2020</year>). <article-title>De novo protein design enables the precise induction of RSV-neutralizing antibodies.</article-title>
<source><italic>Science</italic></source>
<volume>368</volume>:<issue>eaay5051</issue>. <pub-id pub-id-type="doi">10.1126/science.aay5051</pub-id>
<?supplied-pmid 32409444?><pub-id pub-id-type="pmid">32409444</pub-id></mixed-citation>
    </ref>
    <ref id="B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shaw</surname><given-names>A.</given-names></name><name><surname>Lundin</surname><given-names>V.</given-names></name><name><surname>Petrova</surname><given-names>E.</given-names></name><name><surname>Fördõs</surname><given-names>F.</given-names></name><name><surname>Benson</surname><given-names>E.</given-names></name><name><surname>Al-Amin</surname><given-names>A.</given-names></name><etal/></person-group> (<year>2014</year>). <article-title>Spatial control of membrane receptor function using ligand nanocalipers.</article-title>
<source><italic>Nat. Meth.</italic></source>
<volume>11</volume>
<fpage>841</fpage>–<lpage>846</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3025</pub-id>
<?supplied-pmid 24997862?><pub-id pub-id-type="pmid">24997862</pub-id></mixed-citation>
    </ref>
    <ref id="B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Veneziano</surname><given-names>R.</given-names></name><name><surname>Ratanalert</surname><given-names>S.</given-names></name><name><surname>Zhang</surname><given-names>K.</given-names></name><name><surname>Zhang</surname><given-names>F.</given-names></name><name><surname>Yan</surname><given-names>H.</given-names></name><name><surname>Chiu</surname><given-names>W.</given-names></name><etal/></person-group> (<year>2016</year>). <article-title>Designer nanoscale DNA assemblies programmed from the top down.</article-title>
<source><italic>Science</italic></source>
<volume>352</volume>
<fpage>1534</fpage>–<lpage>1534</lpage>. <pub-id pub-id-type="doi">10.1126/science.aaf4388</pub-id>
<?supplied-pmid 27229143?><pub-id pub-id-type="pmid">27229143</pub-id></mixed-citation>
    </ref>
    <ref id="B38">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Williams</surname><given-names>S.</given-names></name><name><surname>Lund</surname><given-names>K.</given-names></name><name><surname>Lin</surname><given-names>C.</given-names></name><name><surname>Wonka</surname><given-names>P.</given-names></name><name><surname>Lindsay</surname><given-names>S.</given-names></name><name><surname>Yan</surname><given-names>H.</given-names></name></person-group> (<year>2009</year>). “<article-title>Tiamat: a three-dimensional editing tool for complex DNA structures</article-title>,” in <source><italic>DNA Computing Lecture Notes in Computer Science</italic></source>, <role>eds</role>
<person-group person-group-type="editor"><name><surname>Goel</surname><given-names>A.</given-names></name><name><surname>Simmel</surname><given-names>F. C.</given-names></name><name><surname>Sosík</surname><given-names>P.</given-names></name></person-group> (<publisher-loc>Berlin</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>90</fpage>–<lpage>101</lpage>. <pub-id pub-id-type="doi">10.1007/978-3-642-03076-5_8</pub-id></mixed-citation>
    </ref>
    <ref id="B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wood</surname><given-names>C. W.</given-names></name><name><surname>Heal</surname><given-names>J. W.</given-names></name><name><surname>Thomson</surname><given-names>A. R.</given-names></name><name><surname>Bartlett</surname><given-names>G. J.</given-names></name><name><surname>Ibarra</surname><given-names>A. Á</given-names></name><name><surname>Brady</surname><given-names>R. L.</given-names></name><etal/></person-group> (<year>2017</year>). <article-title>ISAMBARD: an open-source computational environment for biomolecular analysis, modelling and design.</article-title>
<source><italic>Bioinformatics</italic></source>
<volume>33</volume>
<fpage>3043</fpage>–<lpage>3050</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btx352</pub-id>
<?supplied-pmid 28582565?><pub-id pub-id-type="pmid">28582565</pub-id></mixed-citation>
    </ref>
    <ref id="B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>Y.</given-names></name><name><surname>Batyuk</surname><given-names>A.</given-names></name><name><surname>Honegger</surname><given-names>A.</given-names></name><name><surname>Brandl</surname><given-names>F.</given-names></name><name><surname>Mittl</surname><given-names>P. R. E.</given-names></name><name><surname>Plückthun</surname><given-names>A.</given-names></name></person-group> (<year>2017</year>). <article-title>Rigidly connected multispecific artificial binders with adjustable geometries.</article-title>
<source><italic>Sci. Rep.</italic></source>
<volume>7</volume>:<issue>11217</issue>. <pub-id pub-id-type="doi">10.1038/s41598-017-11472-x</pub-id>
<?supplied-pmid 28894181?><pub-id pub-id-type="pmid">28894181</pub-id></mixed-citation>
    </ref>
    <ref id="B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yeh</surname><given-names>C.-T.</given-names></name><name><surname>Brunette</surname><given-names>T.</given-names></name><name><surname>Baker</surname><given-names>D.</given-names></name><name><surname>McIntosh-Smith</surname><given-names>S.</given-names></name><name><surname>Parmeggiani</surname><given-names>F.</given-names></name></person-group> (<year>2018</year>). <article-title>Elfin: an algorithm for the computational design of custom three-dimensional structures from modular repeat protein building blocks.</article-title>
<source><italic>J. Struct. Biol.</italic></source>
<volume>201</volume>
<fpage>100</fpage>–<lpage>107</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2017.09.001</pub-id>
<?supplied-pmid 28890160?><pub-id pub-id-type="pmid">28890160</pub-id></mixed-citation>
    </ref>
    <ref id="B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Youn</surname><given-names>S.-J.</given-names></name><name><surname>Kwon</surname><given-names>N.-Y.</given-names></name><name><surname>Lee</surname><given-names>J. H.</given-names></name><name><surname>Kim</surname><given-names>J. H.</given-names></name><name><surname>Choi</surname><given-names>J.</given-names></name><name><surname>Lee</surname><given-names>H.</given-names></name><etal/></person-group> (<year>2017</year>). <article-title>Construction of novel repeat proteins with rigid and predictable structures using a shared helix method.</article-title>
<source><italic>Sci. Rep.</italic></source>
<volume>7</volume>:<issue>2595</issue>. <pub-id pub-id-type="doi">10.1038/s41598-017-02803-z</pub-id>
<?supplied-pmid 28572639?><pub-id pub-id-type="pmid">28572639</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

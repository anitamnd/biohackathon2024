<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6821332</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz400</article-id>
    <article-id pub-id-type="publisher-id">btz400</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ntEdit: scalable genome sequence polishing</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-9890-2293</contrib-id>
        <name>
          <surname>Warren</surname>
          <given-names>René L</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
        <xref ref-type="corresp" rid="btz400-cor1"/>
        <!--<email>rwarren@bcgsc.ca</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Coombe</surname>
          <given-names>Lauren</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mohamadi</surname>
          <given-names>Hamid</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Jessica</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jaquish</surname>
          <given-names>Barry</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Isabel</surname>
          <given-names>Nathalie</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jones</surname>
          <given-names>Steven J M</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bousquet</surname>
          <given-names>Jean</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bohlmann</surname>
          <given-names>Joerg</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Birol</surname>
          <given-names>Inanç</given-names>
        </name>
        <xref ref-type="aff" rid="btz400-aff1">1</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Berger</surname>
          <given-names>Bonnie</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="btz400-aff1"><label>1</label><institution>Genome Sciences Centre, BC Cancer</institution>, Vancouver, Canada</aff>
    <aff id="btz400-aff2"><label>2</label><institution>BC Ministry of Forests, Lands, and Natural Resource Operations</institution>, Victoria, Canada</aff>
    <aff id="btz400-aff3"><label>3</label><institution>Laurentian Forestry Centre, Natural Resources Canada</institution>, Québec, Canada</aff>
    <aff id="btz400-aff4"><label>4</label><institution>Canada Research Chair in Forest Genomics, Université Laval</institution>, Québec, Canada</aff>
    <aff id="btz400-aff5"><label>5</label><institution>Michael Smith Laboratories, University of British Columbia</institution>, Vancouver, Canada</aff>
    <author-notes>
      <corresp id="btz400-cor1">To whom correspondence should be addressed. E-mail: <email>rwarren@bcgsc.ca</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>11</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-05-16">
      <day>16</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>21</issue>
    <fpage>4430</fpage>
    <lpage>4432</lpage>
    <history>
      <date date-type="received">
        <day>05</day>
        <month>12</month>
        <year>2018</year>
      </date>
      <date date-type="rev-recd">
        <day>04</day>
        <month>3</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>07</day>
        <month>5</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz400.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>In the modern genomics era, genome sequence assemblies are routine practice. However, depending on the methodology, resulting drafts may contain considerable base errors. Although utilities exist for genome base polishing, they work best with high read coverage and do not scale well. We developed ntEdit, a Bloom filter-based genome sequence editing utility that scales to large mammalian and conifer genomes.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We first tested ntEdit and the state-of-the-art assembly improvement tools GATK, Pilon and Racon on controlled <italic>Escherichia coli</italic> and <italic>Caenorhabditis elegans</italic> sequence data. Generally, ntEdit performs well at low sequence depths (&lt;20×), fixing the majority (&gt;97%) of base substitutions and indels, and its performance is largely constant with increased coverage. In all experiments conducted using a single CPU, the ntEdit pipeline executed in &lt;14 s and &lt;3 m, on average, on <italic>E.coli</italic> and <italic>C.elegans</italic>, respectively. We performed similar benchmarks on a sub-20× coverage human genome sequence dataset, inspecting accuracy and resource usage in editing chromosomes 1 and 21, and whole genome. ntEdit scaled linearly, executing in 30–40 m on those sequences. We show how ntEdit ran in &lt;2 h 20 m to improve upon long and linked read human genome assemblies of NA12878, using high-coverage (54×) Illumina sequence data from the same individual, fixing frame shifts in coding sequences. We also generated 17-fold coverage spruce sequence data from haploid sequence sources (seed megagametophyte), and used it to edit our pseudo haploid assemblies of the 20 Gb interior and white spruce genomes in &lt;4 and &lt;5 h, respectively, making roughly 50M edits at a (substitution+indel) rate of 0.0024.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>
          <ext-link ext-link-type="uri" xlink:href="https://github.com/bcgsc/ntedit">https://github.com/bcgsc/ntedit</ext-link>
        </p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Genome Canada and Genome BC</named-content>
        </funding-source>
        <award-id>243FOR</award-id>
        <award-id>281ANV</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>2R01HG007182-04A1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>This past decade, next-generation sequencing technologies have greatly improved their throughput. For example, 50-fold coverage of a 20-Gb conifer genome can today be achieved on a single, 8-lane flowcell of the Illumina HiSeq-X instrument. However, this massive data is creating bottlenecks in bioinformatics pipelines. Typically, with short read data, a pseudo haploid draft genome representing unresolved allelic mixtures results from diploid sequence assembly. Depending on the methodology used, these assemblies may contain appreciable errors. Although many tools exist for base error correction of reads from high-throughput sequencing platforms (<xref rid="btz400-B1" ref-type="bibr">Akogwu <italic>et al.</italic>, 2016</xref>), few genome assembly polishing tools are available. </p>
    <p>The leading utilities for assembly polishing include GATK (<xref rid="btz400-B5" ref-type="bibr">McKenna <italic>et al.</italic>, 2010</xref>), Pilon (<xref rid="btz400-B11" ref-type="bibr">Walker <italic>et al.</italic>, 2014</xref>) and Racon (<xref rid="btz400-B10" ref-type="bibr">Vaser <italic>et al.</italic>, 2017</xref>). Pilon and GATK are well established and comprehensive tools for genome improvements, and include the ability to fill short gaps, fix local misassemblies, and identify and report variant bases. In comparison, Racon is a more recent utility originally designed as a fast nanopore read correction tool. The latter is gaining traction in polishing, using Illumina data, single-molecule sequencing (SMS) genome drafts such as those assembled from Pacific Biosciences (PacBio) and Oxford Nanopore (Nanopore) sequence reads (<xref rid="btz400-B4" ref-type="bibr">Koren <italic>et al.</italic>, 2019</xref>). Considered the state of the art in polishing accuracy, Pilon is a robust genome assembly improvement tool routinely used to polish microbial and small (&lt;100 Mb) eukaryotic genomes. It has also been applied to human assemblies (<xref rid="btz400-B12" ref-type="bibr">Watson and Warr, 2019</xref>), but unfortunately scales quadratically in time.</p>
    <p>The aforementioned tools all employ read alignments. This paradigm gives context to the bases under scrutiny, albeit at the expense of run time. To address these scalability limitations, we developed ntEdit, a utility that uses words of length <italic>k</italic> (kmer) for correcting homozygous errors in very large genome (&gt;3 Gb) assemblies. ntEdit employs a succinct Bloom filter data structure for evaluation and correction. By comparing it to the base polishing capabilities of other tools, namely the ability to fix base substitutions and indels, we show how ntEdit produces comparable results, and scales linearly to the large 3–20 Gb genomes of human and spruce (<xref rid="btz400-B2" ref-type="bibr">Birol <italic>et al.</italic>, 2013</xref>).</p>
  </sec>
  <sec>
    <title>2 Approach and methods</title>
    <p>We first run ntHits (v0.0.1; <ext-link ext-link-type="uri" xlink:href="https://github.com/bcgsc/nthits">https://github.com/bcgsc/nthits</ext-link>; <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods</xref>) to remove error kmers from high-throughput sequencing data, and build a canonical representation of coverage-thresholded kmers (<xref rid="btz400-B7" ref-type="bibr">Mohamadi <italic>et al.</italic>, 2017</xref>) using a Bloom filter, while maintaining a low false positive rate (≈0.0005). The Bloom filter is then read by ntEdit (v1.1.0 with matching kmer length <italic>k</italic>), and contigs from a supplied assembly are processed in turn (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>). From each sequence, 5’–3’ assembly kmers are used to interrogate the Bloom filter for presence/absence. When a kmer is absent, ntEdit moves the frame over the next (<italic>k</italic> − 1) 3’ end bases along the assembled sequence, and uses a subset of these k kmers to further interrogate the Bloom filter. In its tests, it uses two leniency factors. The first one ensures that only positions that do not have a sufficient subset of k kmer support are edited. The kmers that pass this filter (i.e. absent kmers) will have their 3’ end base permuted, in turn, to one of the three alternate bases. Changes are tracked when kmers with the base substitution are contained in the Bloom filter using a kmer threshold set by a second leniency factor. In that case, the remaining alternate base substitution(s) are also investigated. The kmers that do not pass this second filter are inspected for micro-insertion(s) and deletion(s) of up to five bases, and changes are tracked as per above. The process repeats until a change is made that has sufficient support, or until all possible edits have been exhausted at that position (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>). ntEdit outputs a new fasta sequence with the changes applied, and a text file tracking changes made along with positions. ntEdit is implemented in C++. Detailed methods are available online.</p>
  </sec>
  <sec>
    <title>3 Results and discussion</title>
    <p>We measured the performance of these tools using QUAST (<xref rid="btz400-B6" ref-type="bibr">Mikheenko <italic>et al.</italic>, 2018</xref>), comparing simulated genome copies with 0.001 and 0.0001 substitution and indel rates, along with GATK, Pilon, Racon and ntEdit-polished versions to their respective reference genomes (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref> and <xref ref-type="fig" rid="btz400-F1">Fig. 1</xref>). The performance of ntEdit in fixing substitutions and indels was largely constant with increased coverage from 15 to 50×. It was also similar to the performances of other tools, and consistent even at low (15-20×) read coverages (<xref ref-type="fig" rid="btz400-F1">Fig. 1</xref>, panels A, B, E, F, I; <xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S1–S3</xref>). Notably, ntEdit had a slightly higher false discovery rate (FDR) under most tested conditions, and generally less than 2% and 1% at higher <italic>k</italic> values (k45 and up), for the larger (3 Gb) and smaller (&lt;100 Mb) genomes, respectively. We also note that its FDR diminished with increasing <italic>k</italic> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S4–S6</xref>). We determined that, although the Bloom filter false positive rate (FPR) has the potential to affect the corrections if set too high (at FPR &gt;0.001), it did not impact ntEdit’s ability to identify and correct erroneous bases at the FPR levels used in our experiments (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S3</xref>, FPR ≈ 0.0005). For <italic>Escherichia coli</italic>, <italic>Caenorhabditis elegans</italic> and <italic>Homo sapiens</italic>, the optimum <italic>k</italic> to use with ntEdit was 25, 35 and 50 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S7</xref>), respectively. We also tested how iterative ntEdit runs with varied kmer lengths may benefit in correctly fixing additional sites, despite run time trade-offs (<xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S1–S6</xref>). Pilon and Racon performed best at higher coverage (≥20×) sequencing data, though they also had higher resource requirements (<xref ref-type="fig" rid="btz400-F1">Fig. 1</xref>, panels C, D, G, H, J, K; <xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S1–S3</xref>). The ntEdit pipeline ran in 10 s, 3 m and 38 m on average for 15-50× <italic>E.coli</italic> (k25), <italic>C.elegans</italic> (k35) and sub-20× <italic>H.sapiens</italic> (k50) data (<xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S1–S3</xref>), respectively. In contrast, Pilon took 4–11 m, 2–5 h and several hours/days on the same data, and it ran twice as slow at lower (e.g. 15×) coverages.
</p>
    <fig id="btz400-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Performance and benchmark of GATK, ntEdit, Pilon and Racon using controlled <italic>E.coli</italic> (panels <bold>A</bold>, <bold>B</bold>, <bold>C</bold>, <bold>D</bold>) and <italic>C.elegans</italic> (panels <bold>E</bold>, <bold>F</bold>, <bold>G</bold>, <bold>H</bold>) genomes and <italic>H.sapiens</italic> chromosome 21 (<bold>I</bold>, <bold>J</bold>, <bold>K</bold>) sequences</p>
      </caption>
      <graphic xlink:href="btz400f1"/>
    </fig>
    <p>Since Pilon executed in &gt;1 week on chromosome 1 (with 48 threads, <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>), we did not run it on experimental large genome assemblies. Running ntEdit for correction of experimental human NA12878 SMS assemblies with Illumina reads, of which some were already polished (<xref rid="btz400-B12" ref-type="bibr">Watson and Warr, 2019</xref>), led to the recovery of additional complete BUSCO genes (<xref rid="btz400-B9" ref-type="bibr">Simão <italic>et al.</italic>, 2015</xref>). BUSCO measures assembly completeness by mapping single-copy gene products to assemblies. To this effect, a higher number of genes are expected to be recovered when fixing substitutions, but more importantly, when fixing indels causing premature stops and frame shifts. Of the best runs, ntEdit recovered 26 and 366 additional complete BUSCO genes, in Nanopore (<xref rid="btz400-B3" ref-type="bibr">Jain <italic>et al.</italic>, 2018</xref>) and PacBio (<xref rid="btz400-B8" ref-type="bibr">Pendleton <italic>et al.</italic>, 2015</xref>) assemblies, respectively (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S8</xref>). As expected, given the low indel rate of Illumina data, sequence polishers had only marginal effects on the Supernova assembly using the BUSCO metric, recovering &lt;3 complete BUSCOs. The ntEdit runs on the SMS assemblies were fast, with the whole pipeline (ntHits and ntEdit) executing in 2 h, with the ntEdit portion taking 2–4 min at most. The accuracy of GATK and Racon is noteworthy, albeit the former appears to struggle when fixing indels. In order to run Racon in a reasonable amount of time on large (&gt;3 Gb) genomes, we sectioned the drafts (20 subfiles), each running in an embarrassingly parallel fashion, with 48 CPU threads. Its cumulative run time was &gt;1.6 days. Without any partitioning of the human genome drafts, Racon runs took over 3 days. On small genomes and less contiguous (N50 length &lt;1Mb) assemblies, the memory (RAM) usage of ntEdit is largely constant, occupied mainly by the Bloom filter. However, we observe larger memory footprints with more contiguous draft assemblies (<xref ref-type="supplementary-material" rid="sup1">Supplementary Tables S3 and S8</xref>).</p>
    <p>We also ran ntEdit on the interior (PG29-v4, 20.17 Gb) and white (<italic>Picea glauca</italic> WS77111-v1, 21.90 Gb) spruce pseudo haploid genome assemblies (<xref rid="btz400-B13" ref-type="bibr">Warren <italic>et al.</italic>, 2015</xref>) using low-coverage (17×) DNA sequences from their respective haploid megagametophyte (seed) tissue. Runs took 4 h 46 m and 3 h 55 m in total, with the ntEdit portion running in less than 30 min, and required at most 90.2 GB RAM. Overall 48.3 and 50.5M haploid edits were made at a substitution and indel rate of 2.3 × 10<sup>–</sup><sup>3</sup> and 5.0 × 10<sup>–</sup><sup>5</sup> for the two genomes, respectively (<xref rid="btz400-T1" ref-type="table">Table 1</xref>).
</p>
    <table-wrap id="btz400-T1" orientation="portrait" position="float">
      <label>Table 1.</label>
      <caption>
        <p>Performance of ntEdit in polishing the pseudo haploid assemblies of interior (PG29-v4) and white (WS77111-v1) spruce, using DNA sequences from their respective haploid megagametophyte tissue</p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
          <col valign="top" align="char" char="." span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1">Assembly</th>
            <th rowspan="1" colspan="1">Time (mm:ss)</th>
            <th rowspan="1" colspan="1">RAM (GB)</th>
            <th rowspan="1" colspan="1">Edits (M)</th>
            <th rowspan="1" colspan="1">Subs. (M)</th>
            <th rowspan="1" colspan="1">Indels (M)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">PG29-v4</td>
            <td rowspan="1" colspan="1">23:05</td>
            <td rowspan="1" colspan="1">86.1</td>
            <td rowspan="1" colspan="1">48.31</td>
            <td rowspan="1" colspan="1">47.29</td>
            <td rowspan="1" colspan="1">1.02</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">WS77111-v1</td>
            <td rowspan="1" colspan="1">25:42</td>
            <td rowspan="1" colspan="1">90.2</td>
            <td rowspan="1" colspan="1">50.49</td>
            <td rowspan="1" colspan="1">49.39</td>
            <td rowspan="1" colspan="1">1.11</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <p><italic>Note</italic>: Bloom filter creation with ntHits took 4 h 23 m and 3 h 29 m and required 206.9 GB and 207.8 GB RAM on these data, using 48 CPU threads.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>Genome polishing approaches that rely on paired-end read alignments tend to be more accurate overall. This is not surprising since paired-end reads provide more sequence context than kmers. For ntEdit, in its current implementation, additional sequence context is considered up to twice the value of <italic>k</italic> by exploring a subset of overlapping k kmers having the qualifying change. At the moment, only homozygous errors are targeted, and ntEdit compromises sensitivity in favor of performance.</p>
    <p>With its fast Bloom filter operations, ntEdit simplifies polishing and ‘haploidization’ of gene and genome sequences since those data structures can be re-used on different sequences, draft assemblies, etc., and in separate polishing runs, without the need to partition the input assembly. We also expect ntEdit to have additional applications in fast mapping of simple nucleotide variations between any two individuals or species’ genomes.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by Genome Canada and Genome BC [243FOR, 281ANV]; and the National Institutes of Health [2R01HG007182-04A1]. The content of this work is solely the responsibility of the authors, and does not necessarily represent the official views of the National Institutes of Health or other funding organizations. </p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btz400_Supplementary_Data</label>
      <media xlink:href="btz400_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz400-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Akogwu</surname><given-names>I.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>A comparative study of k-spectrum-based error correction methods for next-generation sequencing data analysis</article-title>. <source>Hum. Genomics</source>, <volume>10</volume>, <fpage>20</fpage>.<pub-id pub-id-type="pmid">27461106</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Birol</surname><given-names>I.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Assembling the 20 Gb white spruce (<italic>Picea glauca</italic>) genome from whole-genome shotgun sequencing data</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>1492</fpage>–<lpage>1497</lpage>.<pub-id pub-id-type="pmid">23698863</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jain</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>. <source>Nat. Biotechnol</source>, <volume>36</volume>, <fpage>338</fpage>–<lpage>345</lpage>.<pub-id pub-id-type="pmid">29431738</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Koren</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Reply to ‘Errors in long-read assemblies can critically affect protein prediction’</article-title>. <source>Nat. Biotechnol</source>, <volume>37</volume>, <fpage>127</fpage>–<lpage>128</lpage>.<pub-id pub-id-type="pmid">30670797</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McKenna</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>. <source>Genome Res</source>, <volume>20</volume>, <fpage>1297</fpage>–<lpage>1303</lpage>.<pub-id pub-id-type="pmid">20644199</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mikheenko</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Versatile genome assembly evaluation with QUAST-LG</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>i142</fpage>–<lpage>i150</lpage>.<pub-id pub-id-type="pmid">29949969</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mohamadi</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>ntCard: a streaming algorithm for cardinality estimation in genomics data</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>1324</fpage>–<lpage>1330</lpage>.<pub-id pub-id-type="pmid">28453674</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pendleton</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Assembly and diploid architecture of an individual human genome via single-molecule technologies</article-title>. <source>Nat. Methods</source>, <volume>12</volume>, <fpage>780</fpage>–<lpage>786</lpage>.<pub-id pub-id-type="pmid">26121404</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Simão</surname><given-names>R.M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>3210</fpage>–<lpage>3212</lpage>.<pub-id pub-id-type="pmid">26059717</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Vaser</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Fast and accurate de novo genome assembly from long uncorrected reads</article-title>. <source>Genome Res</source>., <volume>27</volume>, <fpage>737</fpage>–<lpage>746</lpage>.<pub-id pub-id-type="pmid">28100585</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Walker</surname><given-names>B.J.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement</article-title>. <source>PLoS One</source>, <volume>9</volume>, <fpage>e112963.</fpage><pub-id pub-id-type="pmid">25409509</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Watson</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Warr</surname><given-names>A.</given-names></name></person-group> (<year>2019</year>) 
<article-title>Errors in long-read assemblies can critically affect protein prediction</article-title>. <source>Nat. Biotechnol</source>., <volume>37</volume>, <fpage>124</fpage>–<lpage>126</lpage>.<pub-id pub-id-type="pmid">30670796</pub-id></mixed-citation>
    </ref>
    <ref id="btz400-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Warren</surname><given-names>R.L.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Improved white spruce (white spruce) genome assemblies and annotation of large gene families of conifer terpenoid and phenolic defense metabolism</article-title>. <source>Plant J</source>., <volume>83</volume>, <fpage>189</fpage>–<lpage>212</lpage>.<pub-id pub-id-type="pmid">26017574</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

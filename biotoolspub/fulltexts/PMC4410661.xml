<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4410661</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btu843</article-id>
    <article-id pub-id-type="publisher-id">btu843</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>UProC: tools for ultra-fast protein domain classification</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Meinicke</surname>
          <given-names>Peter</given-names>
        </name>
      </contrib>
      <aff>Department of Bioinformatics, Institute for Microbiology and Genetics, University of Göttingen, Germany</aff>
    </contrib-group>
    <author-notes>
      <fn id="FN1">
        <p>Associate Editor: Inanc Birol</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>5</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>12</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>23</day>
      <month>12</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>31</volume>
    <issue>9</issue>
    <fpage>1382</fpage>
    <lpage>1388</lpage>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>5</month>
        <year>2014</year>
      </date>
      <date date-type="rev-recd">
        <day>15</day>
        <month>12</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>12</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author 2014. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/" license-type="creative-commons">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> With rapidly increasing volumes of biological sequence data the functional analysis of new sequences in terms of similarities to known protein families challenges classical bioinformatics.</p>
      <p><bold>Results:</bold> The ultrafast protein classification (UProC) toolbox implements a novel algorithm (‘Mosaic Matching’) for large-scale sequence analysis. UProC is by three orders of magnitude faster than profile-based methods and in a metagenome simulation study achieved up to 80% higher sensitivity on unassembled 100 bp reads.</p>
      <p><bold>Availability and implementation:</bold> UProC is available as an open-source software at <ext-link ext-link-type="uri" xlink:href="https://github.com/gobics/uproc">https://github.com/gobics/uproc</ext-link>. Precompiled databases (Pfam) are linked on the UProC homepage: <ext-link ext-link-type="uri" xlink:href="http://uproc.gobics.de/">http://uproc.gobics.de/</ext-link>.</p>
      <p><bold>Contact:</bold><email>peter@gobics.de</email>.</p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu843/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Next-generation sequencing (NGS) has stimulated the development of many new sequence analysis methods. In particular, metagenomic studies of microbial and viral assemblages require innovative algorithms to analyse the vast amount of anonymous and fragmented sequence data that is obtained from environmental or clinical samples. In a typical bioinformatics pipeline, the assignment of genomic or metagenomic sequences to known protein families is an essential step towards a characterization of the functional repertoire of a particular organism or community. The Pfam (<xref rid="btu843-B3" ref-type="bibr">Finn <italic>et al.</italic>, 2010</xref>) database of protein families in combination with the HMMER (<xref rid="btu843-B2" ref-type="bibr">Eddy, 1998</xref>) profile hidden Markov models is widely used for functional annotation of genomic and metagenomic sequences. Before the advent of HMMER 3.0, protein domain detection on large sequence collections had been computationally expensive, and several prefiltering methods (<xref rid="btu843-B1" ref-type="bibr">Beckstette <italic>et al.</italic>, 2009</xref>; <xref rid="btu843-B12" ref-type="bibr">Lingner and Meinicke, 2008</xref>; <xref rid="btu843-B15" ref-type="bibr">Sun and Buhler, 2007</xref>) were suggested to speed up the analysis. Although such a prefilter approach has been included in HMMER 3.0, the processing of large metagenomic sequence files generated by NGS technologies can still be demanding.</p>
    <p>In metagenomics and other NGS applications, not only the amount of sequence but also the limited length of sequencing reads can be challenging for a functional analysis (<xref rid="btu843-B16" ref-type="bibr">Wommack <italic>et al.</italic>, 2008</xref>). Now that Illumina sequencing platforms are increasingly used in metagenomics, we are facing huge collections of short reads often not longer than 100 bp. Here, the question arises what quality of the functional assignments can be expected for sequences that merely cover ∼10% of a typical microbial gene. In a recent study on transcriptomic data, <xref rid="btu843-B20" ref-type="bibr">Zhang <italic>et al.</italic> (2013)</xref> showed that profile hidden Markov models substantially lose sensitivity on short reads.</p>
    <p>We have developed a toolbox for Ultrafast Protein Classification (UProC) that is available in terms of an open-source software. Although UProC can in principle be applied to any protein sequence classification problem, the toolbox is predestined for functional analysis of metagenomes. First of all, the classification speed allows researchers to analyse large metagenomic datasets on a desktop computer without the requirement of large computer clusters or special purpose hardware. In addition, it also provides the necessary functionality to select open reading frames (ORFs) from DNA sequences. Besides the computational speed, our results on simulated metagenome data also indicate that UProC can achieve a considerably higher sensitivity on short reads than profile-based methods.</p>
  </sec>
  <sec>
    <title>2 System and methods</title>
    <p>The protein sequence classification in UproC is based on a novel algorithm that we refer to as ‘Mosaic Matching’. The algorithm first performs a similarity-based assignment of oligopeptides (‘words’) in the query sequence to protein families in the database. In contrast to <italic>k</italic>-mer based approaches that count the occurrences of short words, in UProC long words (<italic>k</italic> = 18) are scored and classified according to their similarity to ‘neighbouring’ words in the database. The neighbourhood of words is determined by a longest common prefix (LCP) criterion. Finally, all oligopeptides that match the same family are combined to provide a Mosaic Match with a common similarity score for the classification of the entire query sequence. <xref ref-type="fig" rid="btu843-F1">Figure 1</xref> shows an overview of the UProC classification scheme and in the following all elements of the implementation are described in detail.
<fig id="btu843-F1" position="float"><label>Fig. 1.</label><caption><p>UProC workflow and Mosaic Matching sketch. For DNA input sequences, first all ORFs with at least 60 bp are identified, filtered and translated. The protein sequences then are analysed with the Mosaic Matching algorithm which compares all oligopeptides in the query sequence with oligopeptides from reference sequences in the database. From all matching reference oligopeptides with the same family label a maximum substitution score is computed for each residue and summed up over the whole sequence to provide the total Mosaic Matching score. If this score exceeds a length-dependent noise threshold the protein hit and the corresponding score is written to the output. The substitution scores that result from oligopeptide comparisons using PSSM are indicated by heatmap color (red:high, blue:low). The example shows all matching oligopeptides that contribute to the total score of Pfam family PF01370</p></caption><graphic xlink:href="btu843f1p"/></fig>
</p>
    <sec>
      <title>2.1 Database construction</title>
      <p>To prepare the oligopeptide database for UProC, all Pfam-A reference sequences from the full-alignment file were analysed. We applied SEG (<xref rid="btu843-B17" ref-type="bibr">Wootton and Federhen, 1993</xref>) with default parameters for masking of low-complexity regions in all reference sequences. From the remaining regions, we obtained all protein words with a length of 18 amino acids. These reference words were sorted into an array (‘dictionary’). All reference words are stored only once in the database together with their associated protein family labels. Ambiguous words that are associated with multiple protein families are removed from the database. Singleton words in the dictionary whose label is different from their two neighbouring words were removed because there is no evidence that these words provide information for a correct nearest neighbour classification of oligopeptides. For a decreased memory footprint and an accelerated dictionary lookup only the 12-mer suffixes of the oligopeptides are stored explicitly in a 64-bit integer array. For each hexamer prefix, in an additional table we store the dictionary start and end positions of the block of words that share this prefix.</p>
      <sec>
        <title>Evolutionary alphabet ordering</title>
        <p>Before sorting the reference words, we replaced the usual lexicographic order of the alphabet by an ‘evolutionary’ ordering of amino acids to increase the probability that adjacent words in the dictionary belong to the same protein family. Using a 20 × 20 scoring matrix S that had been optimized for discrimination between different protein domain families (<xref rid="btu843-B8" ref-type="bibr">Hourai <italic>et al.</italic>, 2004</xref>) a distance measure for the elements of the amino acid alphabet was computed from the dissimilarity of column vectors <inline-formula><mml:math id="MM1"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> of that matrix. For elements <italic>i</italic> and <italic>j</italic> the pairwise distance is
<disp-formula id="btu843-M1"><label>(1)</label><mml:math id="MM2"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mtext> </mml:mtext><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
        <p>The evolutionary alphabet order was then determined by the shortest cyclic path through all elements yielding an ordering of amino acids according to <monospace>ATSPGNDEQKRHYWFMLIVC</monospace>.</p>
      </sec>
    </sec>
    <sec>
      <title>2.2 Nearest neighbour search</title>
      <p>For classification of a new protein sequence each query word is classified and scored according to its nearest neighbours in the database. First, the leading hexamer of the query word is used to identify the block of words in the dictionary sharing the same hexamer prefix. A fast binary search is then performed on the corresponding block to identify an exactly matching reference word, or in the general case, the insertion position of the word in the dictionary together with the two adjacent reference words. The labels of these nearest neighbours associate the query word with the corresponding protein families. Then, all positional substitution scores are computed for the query word with regard to its dictionary neighbours. In this step position-specific scoring matrices (PSSM) are used that have been inferred from supervised learning on all words of the database (see later). The dictionary insertion implies that for the computation of the nearest neighbour oligopeptides in the database, the distance between two words is measured by the word length minus the length of the LCP. Here, the modified lexicographic ordering works as a tie breaking rule to identify the nearest neighbours in the dictionary when the LCP distance is minimal for several reference words. In case of an inexact word match, the labels of both neighbouring reference words are used to label the query word. Also both reference words contribute to the positional scoring using the maximum of the two substitution scores for each position if the labels are identical. The resulting position-specific scores are further used for the successive computation of the Mosaic Matching score. Only the 12 suffix positions of a word are compared and scored because the leading hexamer positions are mostly identical for adjacent words in a large dictionary and thus less informative.</p>
      <sec>
        <title>Reverse matching</title>
        <p>Because the success of a single word match particularly depends on a high conservation of the prefix, we also perform a reverse matching of words. There is a second version of the database dictionary that contains all reference words in reverse order. The reverse matching provides a second chance for a correct word classification if the suffix of the word shows higher conservation than the prefix. The scoring of the reversed words with the second dictionary is computed in the same way as in the normal matching case. The ‘reverse’ scores are combined with the ‘normal’ scores in the final Mosaic Matching step that selects the maximum score for each sequence position. In <xref ref-type="fig" rid="btu843-F1">Figure 1</xref>, the four reverse matches are shown in the lower part of the Mosaic Matching sketch.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 PSSM learning</title>
      <p>A key element of the UProC algorithm is the scoring of protein words with a set of PSSM. The PSSM measure the similarity between neighbouring words and have been computed by means of a supervised machine learning approach. The objective is to optimize the scoring of residues for discrimination of a ‘good’ word match with a correct nearest neighbour classification from a ‘bad’ one that would imply a false classification of that word. In this setup, a positive example is given by two adjacent words in the dictionary with the same protein label. Thus, a positive example represents a correct nearest neighbour match in the database. A negative example is defined by two adjacent words with different class labels <italic>c<sub>i</sub></italic>,<inline-formula><mml:math id="MM3"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> representing a false match. This gives rise to binary target variables of the learning problem according to
<disp-formula id="btu843-M2"><label>(2)</label><mml:math id="MM4"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>  if</mml:mtext><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>else</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
</p>
      <p>In turn the binary predictor variables (features) represent the substitutions that have to be applied to transform a word at location <italic>i</italic> to its neighbouring word at location <italic>i</italic> + 1 in the dictionary. Let the indicator vector <inline-formula><mml:math id="MM5"><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> denote the amino acid at position <italic>j</italic> of a word at location <italic>i</italic>. The substitution at that position with regard to the next word can be represented by a <inline-formula><mml:math id="MM6"><mml:mrow><mml:mn>20</mml:mn><mml:mo>×</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:math></inline-formula> binary matrix
<disp-formula id="btu843-M3"><label>(3)</label><mml:math id="MM7"><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>X</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mn>20</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      <p>Among the <italic>k</italic> = 18 residues of a word only the <italic>l</italic> = 12 suffix positions are used for scoring because the hexamer prefix only provides limited information for the discrimination between correct and false matches. Because the sorting of words maximizes the length of the common prefix between adjacent words their leading hexamer positions are mostly identical regardless of the labelling. For training of the <italic>l</italic> PSSM<inline-formula><mml:math id="MM8"><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a regularized least-squares classifier [see e.g. (<xref rid="btu843-B7" ref-type="bibr">Hoff <italic>et al.</italic>, 2008</xref>)] was built to discriminate between positive and negative word match examples by minimizing the following prediction error:
<disp-formula id="btu843-M4"><label>(4)</label><mml:math id="MM9"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mtext>train</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:munderover><mml:mrow><mml:mtext>tr</mml:mtext></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>X</mml:mi></mml:mstyle><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mstyle><mml:mo>+</mml:mo><mml:mi>λ</mml:mi><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>j</mml:mi></mml:munder><mml:mrow><mml:mtext>tr</mml:mtext></mml:mrow></mml:mstyle><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
where tr indicates the trace operator and <inline-formula><mml:math id="MM10"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mn>1</mml:mn></mml:msub><mml:mo>, </mml:mo><mml:mo>…</mml:mo><mml:mo> ,</mml:mo><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Note that the sum of traces just realizes a dot product between vectorized and stacked <bold>W</bold> and <bold>X</bold> matrices, respectively. The set of training examples <inline-formula><mml:math id="MM11"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mtext>train</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> includes all dictionary locations <italic>i</italic> that simultaneously contribute a positive and a negative example, i.e. either <inline-formula><mml:math id="MM12"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="MM13"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. All remaining examples are used to validate the regularization parameter <italic>λ</italic> by maximization of the corresponding word match classification rate. Because singleton words in the dictionary (see Section 2.1) provide valuable negative examples, PSSM learning is performed before removing these words from the final database. The computationally efficient least-squares approach to PSSM learning enables to include all words of the dictionary into the optimization which gives rise to a huge training set with several hundred millions of examples. A different strategy would be to choose a random subsample of the dictionary that would allow to use a wider range of machine learning methods such as support vector machines (SVMs) or logistic regression. Furthermore, the reduced training data would also make it possible to apply <italic>n</italic>-fold cross-validation and feature selection techniques. However, this strategy would require to find a suitable trade-off between the size of the training set and the computational complexity of the learning method. Moreover, it has been shown that the regularized least-squares approach can be viewed as a special kind of SVM implementation, also termed proximal or least-squares SVM, which achieved a similar classification performance when compared with state-of-the-art methods on typical benchmark data (<xref rid="btu843-B4" ref-type="bibr">Fung and Mangasarian, 2001</xref>; <xref rid="btu843-B5" ref-type="bibr">Gestel <italic>et al.</italic>, 2004</xref>; <xref rid="btu843-B19" ref-type="bibr">Zhang and Peng, 2004</xref>).</p>
      <p>It is important to realize that the PSSM learning scheme makes it possible to automatically balance the impact of different word positions which contribute to the score according to their ability to discriminate between ‘good’ and ‘bad’ matches. Therefore the word length, i.e. the dimensionality of the above feature space, is not a hyperparameter. This role is completely shifted to the regularization parameter <italic>λ</italic>. In principle, this would also enable the use of longer words, which might in fact provide additional information. However, the necessarily resulting decrease of speed and increase of memory were strong arguments against an extension of the word and suffix lengths. In an early stage of the development of the UProC algorithm I also considered the inclusion of the leading hexamer into the scoring. However, in terms of the word classification performance only a marginal improvement could be achieved. The limited benefit of the prefix for scoring is also indicated by the learnt PSSM when looking at the corresponding weights of the linear classifier. <xref ref-type="fig" rid="btu843-F2">Figure 2</xref> shows the relevance of each 12-mer suffix position <italic>j</italic> in terms of the sum of squared weights (SSW) <inline-formula><mml:math id="MM1a"><mml:mrow><mml:mtext>tr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi>W</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> that is contributed by the particular position. It can be seen that word position 9, i.e. the third suffix position, accounts for the maximum SSW. For successive positions the SSW monotonically decreases with a decreasing slope becoming almost flat at the end. The rapid drop in SSW for the first suffix position (word position 7), already signals the loss of relevance for the early word positions.
<fig id="btu843-F2" position="float"><label>Fig. 2.</label><caption><p>Contributions of different word positions to PSSM in terms of the SSW obtained from regularized least-squares classifier training (see text)</p></caption><graphic xlink:href="btu843f2p"/></fig>
</p>
    </sec>
    <sec>
      <title>2.4 Mosaic Matching score</title>
      <p>By application of the above optimized PSSM to a query word and its nearest neighbour(s) within the dictionary we obtain substitution scores for each position in the word. The position-specific scores from all query words that share a common class label are finally combined to obtain a total similarity score for the whole sequence with respect to the corresponding protein family. In general, the matching words are overlapping so that different position-specific scores are achieved for the same residue. From these scores the maximum is selected and finally the maxima from all residues in the sequence are summed up to obtain the total score for that class (see <xref ref-type="fig" rid="btu843-F1">Fig. 1</xref>). The total Mosaic Matching score is computed for each Pfam that achieves at least one nearest neighbour word match.</p>
      <sec>
        <title>2.4.1 Score threshold calibration</title>
        <p>The total score that is obtained from all words assigned to the same protein family has to exceed a noise threshold to result in a prediction of that family. After the construction of a particular database, a specific threshold is adjusted according to the fraction of false positive predictions (FPs) that is obtained on random protein sequences. The default threshold is chosen to yield a 0.1% false positive rate (FPR) on random data. An alternative 1% threshold can be selected to realize a more sensitive prediction. However, it is not recommended to use the more sensitive threshold without any post-processing of the predictions, as in all cases we observed a rapid increase of false positives with only a modest increase of true positives (TPs).</p>
      </sec>
      <sec>
        <title>2.4.2 Random sequences</title>
        <p>The random sequences for the false positive (noise) threshold calibration were generated according to independent residues with emission probabilities estimated from the amino acid frequencies in the UniProt database. We determined the score thresholds for a spectrum of six different sequence lengths (32,64,128,256,512,1024 aa) to take into account the increasing FPR for successively longer sequences. The thresholds for intermediate lengths were obtained by interpolation.</p>
      </sec>
    </sec>
    <sec>
      <title>2.5 UProC tools</title>
      <p>The UProC toolbox provides a collection of programs that accomplish different tasks and for an overview of the functionality they are briefly described in the following. <monospace>uproc-import</monospace> is required to import the platform independent database files that can for instance be downloaded from the UProC homepage. <monospace>uproc-dna</monospace> is the standard program to analyse DNA sequence multifasta files. This one we also used for the evaluation on the test data. Here, it is important to select the appropriate option for the type of sequencing reads. For read lengths below 200 bp the short read mode (option: -s) should be most adequate. In this mode, no prior selection of ORFs is performed and for each sequence all ORFs (&gt;60 bp) are translated and analysed while only the highest scoring significant protein family will be reported. In normal mode (default), the prior ORF selection according to a machine learning model for codon frequencies (<xref rid="btu843-B7" ref-type="bibr">Hoff <italic>et al.</italic>, 2008</xref>) further increases the detection speed, because only high scoring ORFs are compared with the protein database. In this mode, all significant families are reported which is important for analysis of multidomain proteins. For the protein classification, it is possible to choose between two calibrated sensitivity levels with the option -P <italic>N</italic>. The default is <italic>N</italic> = 3 which is the most specific choice and highly recommended in order to limit the FPR. The output format options allow to compute a histogram of all protein family counts with a small file size (option: -c) or to produce more detailed output (option: -p) that includes the assigned protein families for each input sequence together with the scores and positions in the corresponding ORF. Additional parameters that have to be specified include the directory of the database, the model directory and the input multifasta file. The model directory contains the UProC model file where the most recent version should be downloaded from the UProC homepage. <monospace>uproc-prot</monospace> can be used in combination with a prior gene prediction program that has already identified and translated coding regions. Here, the input has to be a multifasta protein sequence file. <monospace>uproc-makedb</monospace> can be used to create a UProC database from scratch providing a collection of labelled protein sequences. It is strongly recommended to mask low-complexity regions before, e.g. by using the SEG tool (<xref rid="btu843-B17" ref-type="bibr">Wootton and Federhen, 1993</xref>). Note that the usually large collection of sequences should well represent the variation within different protein families. <monospace>uproc-detailed</monospace> can be useful for diagnostic purposes. For example, the coloured Mosaic Matching graphics of <xref ref-type="fig" rid="btu843-F1">Figure 1</xref> has been generated with this program.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>To evaluate the classification performance of UProC, we implemented a simulation of metagenomic short read data following the approach of <xref rid="btu843-B16" ref-type="bibr">Wommack <italic>et al.</italic> (2008)</xref> who sampled short fragments from longer sequences to study the read length dependency of similarity-based protein family assignments. We utilized two different types of sequences from which we extracted the simulated short reads. In close correspondence to the approach of <xref rid="btu843-B16" ref-type="bibr">Wommack <italic>et al.</italic> (2008)</xref>, we also used longer metagenomic Sanger reads which were subject to gene prediction and Pfam analysis to obtain a valid labelling of the subsequently extracted fragments. In addition, we also utilized a collection of microbial genomes where we used the available gene annotation to obtain the labelling. This gives rise to two kinds of test datasets with different characteristics: the test data from metagenomic reads contains sequencing errors and the detection of coding regions has to cope with incomplete genes. This provides a realistic read simulation but some errors in the labelling are highly probable. On the other hand, the test data from microbial genomes can be expected to be almost free of sequencing errors and the full-length gene annotation should provide a more reliable labelling. However, the microbial genomes can also be expected to be closer to the known sequences that have been used to create the Pfam database. For that reason, we used an older version of the Pfam database to slightly increase the ‘sequence novelty’ for the Pfam analysis on the test data. Nevertheless, the genome-based test data, in principle, provides an easier trial while the metagenome-based data is more challenging.</p>
    <sec>
      <title>3.1 Test data</title>
      <p>A large amount (<inline-formula><mml:math id="MM15"><mml:mo>≈</mml:mo></mml:math></inline-formula>10 Gbp) of 100 bp short read data was extracted from 895 bacterial genomes of the Human Microbiome Project [HMP; <xref rid="btu843-B6" ref-type="bibr">Gevers <italic>et al.</italic> (2012)</xref>]. The test data was sampled from all HMP-annotated genes of these microbial reference genomes. In addition, we extracted reads of varying length from metagenomic data of the global ocean sampling (GOS) expedition (<xref rid="btu843-B18" ref-type="bibr">Yooseph <italic>et al.</italic>, 2007</xref>) and the Guerrero Negro Hypersaline microbial Mat (GNHM) project (<xref rid="btu843-B11" ref-type="bibr">Kunin <italic>et al.</italic>, 2008</xref>). Although we analysed all reads (<inline-formula><mml:math id="MM16"><mml:mo>≈</mml:mo></mml:math></inline-formula>0.1 Gbp) from the GNHM project, we used an equally sized subset for the GOS data that was randomly selected from Sargasso Sea samples. In both cases, metagenomic reads had been obtained by Sanger sequencing with an average read length of <inline-formula><mml:math id="MM17"><mml:mo>≈</mml:mo></mml:math></inline-formula>800 bp.</p>
      <p>For sequence classification, we chose the Pfam database of protein domain families. To simulate the novelty of metagenomic sequences, we used an older version of the database (vers. 24) that had been built before the HMP genome annotation was available. We compiled six different datasets from distinct HMP body sites with more than 10 associated genomes available in the HMP database (see <xref ref-type="table" rid="btu843-T1">Table 1</xref>). All test sequences were obtained from coding sequences (CDS), i.e. coding regions of the genomes according to the annotation provided by the HMP consortium. The annotation of the microbial reference genomes involves several tools for gene finding and validation, with some variation of the protocols across HMP sequencing centers. The HMP sequencing center-specific annotation protocols and the consensus annotation protocols can be found at the corresponding section of the HMP website (<ext-link ext-link-type="uri" xlink:href="http://hmpdacc.org/tools_protocols/tools_protocols.php">http://hmpdacc.org/tools_protocols/tools_protocols.php</ext-link>).</p>
      <p>For the metagenome data from GOS and GNHM samples, we first applied the gene prediction tool FragGeneScan (<xref rid="btu843-B14" ref-type="bibr">Rho <italic>et al.</italic>, 2010</xref>) to extract coding regions. The tool was used with a Sanger model according to a 0.5% error rate (options: <monospace>-complete=0 -train=sanger_5)</monospace>. In all cases, for the genome-based as well as for the metagenome-based data, CDS of sufficient length (<inline-formula><mml:math id="MM18"><mml:mo>≥</mml:mo></mml:math></inline-formula>60 bp) were translated and subsequently analysed by the HMMER 3.0 software using hmmscan to identify all Pfam domains. For each protein domain hit the corresponding DNA sequence was labelled as a positive test region, if the domain was above the family specific HMMER gathering threshold and no different domains were detected in the same region with a per-domain <italic>E</italic>-value below 1. We did not use any regions with overlapping Pfam domains for the evaluation and also completely excluded regions with insignificant domain hits, i.e. hits below gathering threshold. Negative labels were exclusively assigned to CDS without any domain hits. To simulate short reads, sequence fragments were randomly extracted from all positive and negative CDS at a 2-fold coverage. Because the focus was on simulation of Illumina short read data, we did not include random variations of sequence length or simulated sequencing errors, which only have a minor impact on the performance when operating with realistic parameters. For a positive test case, it was sufficient that a sequence contained at least 60 bp of a valid Pfam domain hit in one block, and adjacent negative CDS was allowed to add up to the simulated read length in this case. In that way also shorter protein domains that did not cover the full read length could be included in the evaluation. Although for the larger HMP test data we used a read length of 100 bp throughout, for the smaller GOS and GNHM data we generated subsets of short reads simulating different read lengths of 100, 150, 200 and 250 bp. Note that the fraction of reads with a valid Pfam annotation, i.e. the proportion of positive test cases, increases with read length. The final number of generated reads in all HMP, GOS and GNHM subsets together with the corresponding percentage of positive examples is shown in <xref ref-type="table" rid="btu843-T1">Table 1</xref>. All test datasets together with the corresponding result tables (csv) can be obtained from <ext-link ext-link-type="uri" xlink:href="http://uproc.gobics.de/downloads/test_data/">http://uproc.gobics.de/downloads/test_data/</ext-link>.
<table-wrap id="btu843-T1" position="float"><label>Table 1.</label><caption><p>Test data subsets from HMP, GOS and GNHM with number of genomes, number of simulated reads and the percentage of reads with annotated Pfam domains, i.e. the fraction of positive test cases.</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Source</th><th rowspan="1" colspan="1">Subset</th><th rowspan="1" colspan="1">No. genomes</th><th rowspan="1" colspan="1">No. reads</th><th rowspan="1" colspan="1">% Pfams</th></tr></thead><tbody align="left"><tr><td rowspan="6" colspan="1">HMP</td><td align="char" char="." rowspan="1" colspan="1">Airways</td><td align="char" char="." rowspan="1" colspan="1">51</td><td align="char" char="." rowspan="1" colspan="1">2 268 424</td><td align="char" char="." rowspan="1" colspan="1">66.7</td></tr><tr><td rowspan="1" colspan="1">Blood</td><td align="char" char="." rowspan="1" colspan="1">42</td><td align="char" char="." rowspan="1" colspan="1">2 057 852</td><td align="char" char="." rowspan="1" colspan="1">67.4</td></tr><tr><td rowspan="1" colspan="1">GI tract</td><td align="char" char="." rowspan="1" colspan="1">363</td><td align="char" char="." rowspan="1" colspan="1">22 224 068</td><td align="char" char="." rowspan="1" colspan="1">61.8</td></tr><tr><td rowspan="1" colspan="1">Oral</td><td align="char" char="." rowspan="1" colspan="1">193</td><td align="char" char="." rowspan="1" colspan="1">7 749 640</td><td align="char" char="." rowspan="1" colspan="1">61.0</td></tr><tr><td rowspan="1" colspan="1">Skin</td><td align="char" char="." rowspan="1" colspan="1">114</td><td align="char" char="." rowspan="1" colspan="1">5 724 140</td><td align="char" char="." rowspan="1" colspan="1">66.0</td></tr><tr><td rowspan="1" colspan="1">UG tract</td><td align="char" char="." rowspan="1" colspan="1">132</td><td align="char" char="." rowspan="1" colspan="1">4 494 476</td><td align="char" char="." rowspan="1" colspan="1">64.4</td></tr><tr><td rowspan="4" colspan="1">GOS</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">742 527</td><td align="char" char="." rowspan="1" colspan="1">76.6</td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">492 466</td><td align="char" char="." rowspan="1" colspan="1">81.3</td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">361 977</td><td align="char" char="." rowspan="1" colspan="1">84.9</td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">279 125</td><td align="char" char="." rowspan="1" colspan="1">87.7</td></tr><tr><td rowspan="4" colspan="1">GNHM</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">415 630</td><td align="char" char="." rowspan="1" colspan="1">68.9</td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">272 129</td><td align="char" char="." rowspan="1" colspan="1">74.6</td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">197 806</td><td align="char" char="." rowspan="1" colspan="1">79.0</td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1">-</td><td align="char" char="." rowspan="1" colspan="1">150 548</td><td align="char" char="." rowspan="1" colspan="1">82.8</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec>
      <title>3.2 Performance comparison</title>
      <p>To compare UProC with state-of-the-art profile methods for protein domain detection we also measured the classification performance of HMMER and RPS-BLAST (<xref rid="btu843-B13" ref-type="bibr">Marchler-Bauer <italic>et al.</italic>, 2002</xref>) on the same short read test data. RPS-BLAST is based on PSSM and because it is much faster than HMMER 2 it has been used in some early metagenome projects [see e.g. <xref rid="btu843-B11" ref-type="bibr">Kunin <italic>et al.</italic> (2008)</xref>].</p>
      <p>On the test data, we used HMMER3 and RPS-BLAST with an <italic>E</italic>-value cutoff of 0.01. We first applied hmmscan (options: -noali -domE 1 -domtblout) from HMMER 3.0 and rpsblast (options: -evalue 1 -outfmt 6 -num_threads 4) with a high threshold and then filtered the results according to the chosen <italic>E</italic>-value cutoff. In that way, we could also investigate the performance for a varying cutoff on the GOS and GHNM datasets to ensure that the 0.01 threshold provides a good compromise with a sufficient specificity across all read lengths that compares well with the UProC performance (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu843/-/DC1">Supplementary Tables S1</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu843/-/DC1">S2</ext-link>). UProC was used in short read (best hit) mode with the default noise threshold (0.1% FPR). For HMMER and RPS-BLAST, we provided a six-frame translation of DNA sequences and selected all ORFs with at least 60 bp length. As in UProC short read mode, only the most significant protein hit on a read was evaluated. For the HMMER3 and RPS-BLAST models, we used all Pfam 24 profiles and for the UProC oligopeptide database we used all Pfam 24 sequences from full alignments. The performance was measured in terms of prediction sensitivity and specificity on the HMP, GOS and GNHM datasets. The sensitivity or true positive rate (TPR) was estimated from the number of TP, i.e. the annotated protein domains that were actually detected by a particular method and the number of false negatives (FNs), i.e. the annotated protein domains that have not been detected. The specificity was measured by the positive predictive value (PPV) and additionally requires the number of FPs, i.e. reported protein domain hits in sequences without or with differing Pfam annotation. From these counts, we obtain the two performance indices:
<disp-formula><mml:math id="MM8a"><mml:mrow><mml:mtext>TPR</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP+FN</mml:mtext></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mtext>PPV</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP+FP</mml:mtext></mml:mrow></mml:mfrac><mml:mtext>.</mml:mtext></mml:mrow></mml:math></disp-formula>
Although we observed a similarly high specificity above 94% for all tools on the test data, UProC consistently outperforms the profile methods in terms of a higher sensitivity on HMP short reads (see <xref ref-type="table" rid="btu843-T2">Tables 2</xref> and <xref ref-type="table" rid="btu843-T3">3</xref>). Here, the profile-based methods detect only about half of the annotated domains in the short reads with HMMER (50.2%) being slightly more sensitive than RPS-BLAST (46.6%). In comparison with the profile methods, UProC showed a higher variation of sensitivity on HMP data ranging from 76.4% (Oral) to 88.9% (Blood). Most probably this variation reflects the different degrees of sequence novelty in the body site-specific subsets. Also on 100 bp short reads from GOS and GNHM datasets, UProC outperforms the profile-based methods, but here the differences become much smaller. An increasing read length strongly improves the predictions of the profile-based methods and HMMER becomes the leading method at 250 and 150 bp for GOS and GNHM data, respectively. In particular, the results on the GNHM data suggest that on longer reads profile-based methods can better cope with the high degree of sequence novelty that is encountered with microbial mat communities.
<table-wrap id="btu843-T2" position="float"><label>Table 2.</label><caption><p>Sensitivity (TPR) of protein domain detection on simulated short reads with best value in bold face</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Source</th><th rowspan="1" colspan="1">Subset</th><th rowspan="1" colspan="1">HMMER</th><th rowspan="1" colspan="1">RPS-BLAST</th><th rowspan="1" colspan="1">UProC</th></tr></thead><tbody align="left"><tr><td rowspan="6" colspan="1">HMP</td><td align="char" char="." rowspan="1" colspan="1">Airways</td><td align="char" char="." rowspan="1" colspan="1">52.4</td><td align="char" char="." rowspan="1" colspan="1">48.6</td><td align="char" char="." rowspan="1" colspan="1"><bold>84.7</bold></td></tr><tr><td rowspan="1" colspan="1">Blood</td><td align="char" char="." rowspan="1" colspan="1">52.3</td><td align="char" char="." rowspan="1" colspan="1">48.5</td><td align="char" char="." rowspan="1" colspan="1"><bold>88.9</bold></td></tr><tr><td rowspan="1" colspan="1">GI tract</td><td align="char" char="." rowspan="1" colspan="1">49.2</td><td align="char" char="." rowspan="1" colspan="1">46.0</td><td align="char" char="." rowspan="1" colspan="1"><bold>85.7</bold></td></tr><tr><td rowspan="1" colspan="1">Oral</td><td align="char" char="." rowspan="1" colspan="1">49.3</td><td align="char" char="." rowspan="1" colspan="1">46.0</td><td align="char" char="." rowspan="1" colspan="1"><bold>76.4</bold></td></tr><tr><td rowspan="1" colspan="1">Skin</td><td align="char" char="." rowspan="1" colspan="1">48.6</td><td align="char" char="." rowspan="1" colspan="1">45.3</td><td align="char" char="." rowspan="1" colspan="1"><bold>82.2</bold></td></tr><tr><td rowspan="1" colspan="1">UG tract</td><td align="char" char="." rowspan="1" colspan="1">49.2</td><td align="char" char="." rowspan="1" colspan="1">45.5</td><td align="char" char="." rowspan="1" colspan="1"><bold>83.7</bold></td></tr><tr><td rowspan="4" colspan="1">GOS</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">47.5</td><td align="char" char="." rowspan="1" colspan="1">44.8</td><td align="char" char="." rowspan="1" colspan="1"><bold>68.5</bold></td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1">67.4</td><td align="char" char="." rowspan="1" colspan="1">61.4</td><td align="char" char="." rowspan="1" colspan="1"><bold>75.1</bold></td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1">77.3</td><td align="char" char="." rowspan="1" colspan="1">70.6</td><td align="char" char="." rowspan="1" colspan="1"><bold>78.7</bold></td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>83.4</bold></td><td align="char" char="." rowspan="1" colspan="1">76.7</td><td align="char" char="." rowspan="1" colspan="1">80.9</td></tr><tr><td rowspan="4" colspan="1">GNHM</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">42.8</td><td align="char" char="." rowspan="1" colspan="1">39.6</td><td align="char" char="." rowspan="1" colspan="1"><bold>50.1</bold></td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>62.8</bold></td><td align="char" char="." rowspan="1" colspan="1">56.7</td><td align="char" char="." rowspan="1" colspan="1">58.0</td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>73.4</bold></td><td align="char" char="." rowspan="1" colspan="1">66.7</td><td align="char" char="." rowspan="1" colspan="1">62.5</td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>80.1</bold></td><td align="char" char="." rowspan="1" colspan="1">73.1</td><td align="char" char="." rowspan="1" colspan="1">65.7</td></tr></tbody></table></table-wrap>
<table-wrap id="btu843-T3" position="float"><label>Table 3.</label><caption><p>Specificity (PPV) of protein domain detection on simulated short reads with best value in bold face</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Source</th><th rowspan="1" colspan="1">Subset</th><th rowspan="1" colspan="1">HMMER</th><th rowspan="1" colspan="1">RPS-BLAST</th><th rowspan="1" colspan="1">UProC</th></tr></thead><tbody align="left"><tr><td rowspan="6" colspan="1">HMP</td><td align="char" char="." rowspan="1" colspan="1">Airways</td><td align="char" char="." rowspan="1" colspan="1">97.5</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.7</bold></td><td align="char" char="." rowspan="1" colspan="1">97.5</td></tr><tr><td rowspan="1" colspan="1">Blood</td><td align="char" char="." rowspan="1" colspan="1">97.9</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.9</bold></td><td align="char" char="." rowspan="1" colspan="1">98.1</td></tr><tr><td rowspan="1" colspan="1">GI tract</td><td align="char" char="." rowspan="1" colspan="1">97.1</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.2</bold></td><td align="char" char="." rowspan="1" colspan="1">97.2</td></tr><tr><td rowspan="1" colspan="1">Oral</td><td align="char" char="." rowspan="1" colspan="1">97.2</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.3</bold></td><td align="char" char="." rowspan="1" colspan="1">97.3</td></tr><tr><td rowspan="1" colspan="1">Skin</td><td align="char" char="." rowspan="1" colspan="1">97.1</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.0</bold></td><td align="char" char="." rowspan="1" colspan="1">97.5</td></tr><tr><td rowspan="1" colspan="1">UG tract</td><td align="char" char="." rowspan="1" colspan="1">97.6</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.6</bold></td><td align="char" char="." rowspan="1" colspan="1">97.8</td></tr><tr><td rowspan="4" colspan="1">GOS</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">98.6</td><td align="char" char="." rowspan="1" colspan="1">98.1</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.9</bold></td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.2</bold></td><td align="char" char="." rowspan="1" colspan="1">97.7</td><td align="char" char="." rowspan="1" colspan="1">98.1</td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>96.8</bold></td><td align="char" char="." rowspan="1" colspan="1">96.2</td><td align="char" char="." rowspan="1" colspan="1">96.5</td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>94.7</bold></td><td align="char" char="." rowspan="1" colspan="1">94.1</td><td align="char" char="." rowspan="1" colspan="1">94.3</td></tr><tr><td rowspan="4" colspan="1">GNHM</td><td rowspan="1" colspan="1">100 bp</td><td align="char" char="." rowspan="1" colspan="1">97.8</td><td align="char" char="." rowspan="1" colspan="1"><bold>98.1</bold></td><td align="char" char="." rowspan="1" colspan="1">97.5</td></tr><tr><td rowspan="1" colspan="1">150 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>97.8</bold></td><td align="char" char="." rowspan="1" colspan="1">97.4</td><td align="char" char="." rowspan="1" colspan="1">97.4</td></tr><tr><td rowspan="1" colspan="1">200 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>97.0</bold></td><td align="char" char="." rowspan="1" colspan="1">96.3</td><td align="char" char="." rowspan="1" colspan="1">96.3</td></tr><tr><td rowspan="1" colspan="1">250 bp</td><td align="char" char="." rowspan="1" colspan="1"><bold>95.7</bold></td><td align="char" char="." rowspan="1" colspan="1">95.0</td><td align="char" char="." rowspan="1" colspan="1">94.7</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec>
      <title>3.3 Runtime comparison</title>
      <p>For measuring the computational classification speed of the compared tools, we analysed the largest metagenomic sequence file from the HMP database (SRS017007) which comprises 13 Gbp of DNA short read data. All tools were run with Pfam 24 on the same desktop computer with 32 GB RAM and an Intel 2.3 GHz quad-core CPU enabling multithreaded computation. UProC was able to process the file in 56 min which corresponds to a speed of 4 megabases per second. Because the profile methods are significantly slower we only processed a fraction (1/2000) of the data with HMMER 3.0 using hmmsearch and RPS-BLAST using rpsblast and extrapolated the runtime. The speed for HMMER and RPS-BLAST was 8.2 and 4.1 kilobases per second, which corresponds to an extrapolated runtime of 19 and 38 days, respectively. Using HMMER 3.1b1, we only observed a minor increase of speed reducing the extrapolated runtime by 1 h in comparison with version 3.0. The runtime of UProC gradually increases with the size of the oligopeptide database. Using Pfam 27 which yields a database more than twice as large than the corresponding Pfam 24 database, UProC needs 58 min to analyse the HMP file. However, the required RAM for UProC grows linearly with the database size. Although UProC with Pfam 24 can be run on notebooks with 8 GB RAM, the larger Pfam 27 database requires more than twice the amount. About 10% more RAM is required for database creation than for sequence classification. In comparison with the short classification runtimes, the creation of an oligopeptide database is a more time consuming process that took 6.5 h for the Pfam 24 database. For that reason, we offer precompiled versions of the Pfam 24 and 27 databases for download from the UProC homepage.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>The results on simulated short reads encourage the use of UProC for large-scale metagenome analysis. For 100 bp reads the usual speed-accuracy trade-off seems to be obsolete since UProC is both faster and more sensitive. The computationally more expensive profile methods that provide state-of-the-art classification performance on full-length protein sequences might not be optimal for this kind of short read data. This finding agrees well with a recent study on transcriptomic data (<xref rid="btu843-B20" ref-type="bibr">Zhang <italic>et al.</italic>, 2013</xref>) where HMMER and other profile-based methods showed inherent difficulties in classifying protein domains on short reads from weakly conserved regions. In our case, this is even more remarkable, because the HMMER program was also used for preparing all test examples on the basis of its predictions on full-length sequences. The sensitivity rates clearly show that on 100 bp short reads HMMER does not recognize a considerable fraction of the protein domains that have been predicted in longer sequences before. For increasingly longer reads HMMER successively outperforms UProC in terms of sensitivity, while in terms of speed it remains ∼500 times slower. It is important to note that UProC requires a large protein database that well represents the sequence variation within different families. In particular, smaller databases that are based on full-length protein sequences might require a homology extension before being used with UProC. This shows an important advantage of profile-based methods that can even be used to represent tiny families with just a few sequences. Furthermore, it can also be expected that profile methods can better cope with the increasing overlap between families in full-length databases. In turn, UProC is not restricted to protein families that are well representable by multiple alignments. At the UProC homepage, we offer a precompiled database for a recent version of the KEGG orthologs (<xref rid="btu843-B9" ref-type="bibr">Kanehisa and Goto, 2000</xref>) which are widely used for metabolic profiling in metagenomics and metatranscriptomics. Beyond functional analysis, UProC can also be used for fast taxonomic profiling of metagenomes forwarding the protein domain hit counts to the Taxy-Pro mixture model toolbox (<xref rid="btu843-B10" ref-type="bibr">Klingenberg <italic>et al.</italic>, 2013</xref>).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_31_9_1382__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_btu843_uproc-supplement.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>Many thanks to Robin Martinjak, Heiner Klingenberg and Rasmus Steinkamp for technical support and Thomas Lingner for reading and discussing the manuscript.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was partially funded by the <funding-source>German Research Foundation (DFG)</funding-source> (grant number <award-id>ME 3138</award-id>).</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="btu843-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Beckstette</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2009</year>). <article-title>Significant speedup of database searches with HMMs by search space reduction with PSSM family models</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>3251</fpage>–<lpage>3258</lpage>.<pub-id pub-id-type="pmid">19828575</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eddy</surname><given-names>S.R.</given-names></name></person-group> (<year>1998</year>) <article-title>Profile hidden Markov models</article-title>. <source>Bioinformatics</source>, <volume>14</volume>, <fpage>755</fpage>–<lpage>763</lpage>.<pub-id pub-id-type="pmid">9918945</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Finn</surname><given-names>R.D.</given-names></name><etal/></person-group><italic>.</italic> (<year>2010</year>) <article-title>The Pfam protein families database</article-title>. <source>Nucleic Acids Res.</source>, <volume>38</volume>, <fpage>D211</fpage>–<lpage>D222</lpage>.<pub-id pub-id-type="pmid">19920124</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fung</surname><given-names>G.</given-names></name><name><surname>Mangasarian</surname><given-names>O.L.</given-names></name></person-group> (<year>2001</year>) <comment>Proximal support vector machine classifiers. In <italic>Proceedings KDD-2001: Knowledge Discovery and Data Mining</italic>, pp. 77–86</comment>.</mixed-citation>
    </ref>
    <ref id="btu843-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gestel</surname><given-names>T.V.</given-names></name><etal/></person-group><italic>.</italic> (<year>2004</year>) <article-title>Benchmarking least squares support vector machine classifiers</article-title>. <source>Mach. Learn.</source>, <volume>54</volume>, <fpage>5</fpage>–<lpage>32</lpage>.</mixed-citation>
    </ref>
    <ref id="btu843-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gevers</surname><given-names>D.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) <article-title>The human microbiome project: a community resource for the healthy human microbiome</article-title>. <source>PLoS Biol.</source>, <volume>10</volume>, <fpage>e1001377</fpage>.<pub-id pub-id-type="pmid">22904687</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hoff</surname><given-names>K.J.</given-names></name><etal/></person-group> (<year>2008</year>). <article-title>Gene prediction in metagenomic fragments: a large scale machine learning approach</article-title>. <source>BMC Bioinformatics</source>, <volume>9</volume>, <fpage>217</fpage>.<pub-id pub-id-type="pmid">18442389</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hourai</surname><given-names>Y.</given-names></name><etal/></person-group> (<year>2004</year>). <article-title>Optimizing substitution matrices by separating score distributions</article-title>. <source>Bioinformatics</source>, <volume>20</volume>, <fpage>863</fpage>–<lpage>873</lpage>.<pub-id pub-id-type="pmid">14752003</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kanehisa</surname><given-names>M.</given-names></name><name><surname>Goto</surname><given-names>S.</given-names></name></person-group> (<year>2000</year>) <article-title>KEGG: kyoto encyclopedia of genes and genomes</article-title>. <source>Nucleic Acids Res.</source>, <volume>28</volume>, <fpage>27</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">10592173</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Klingenberg</surname><given-names>H.</given-names></name><etal/></person-group><italic>.</italic> (<year>2013</year>) <article-title>Protein signature-based estimation of metagenomic abundances including all domains of life and viruses</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>973</fpage>–<lpage>980</lpage>.<pub-id pub-id-type="pmid">23418187</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kunin</surname><given-names>V.</given-names></name><etal/></person-group><italic>.</italic> (<year>2008</year>) <article-title>Millimeter-scale genetic gradients and community-level molecular con vergence in a hypersaline microbial mat</article-title>. <source>Mol. Syst. Biol.</source>, <volume>4</volume>, <fpage>198</fpage>.<pub-id pub-id-type="pmid">18523433</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B12">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Lingner</surname><given-names>T.</given-names></name><name><surname>Meinicke</surname><given-names>P.</given-names></name></person-group> (<year>2008</year>) <article-title>Fast target set reduction for large-scale protein function prediction: a multi-class multi-label machine learning approach</article-title>. In: <person-group person-group-type="editor"><name><surname>K.A.</surname><given-names>Crandall</given-names></name><name><surname>J.</surname><given-names>Lagergren</given-names></name></person-group> (eds) <source>Algorithms in Bioinformatics</source>, <publisher-name>Springer Berlin Heidelberg</publisher-name>, <volume>Vol. 5251</volume><comment>, pp. 198–209</comment>.</mixed-citation>
    </ref>
    <ref id="btu843-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marchler-Bauer</surname><given-names>A.</given-names></name><etal/></person-group><italic>.</italic> (<year>2002</year>) <article-title>CDD: a database of conserved domain alignments with links to domain three-dimensional structure</article-title>. <source>Nucleic Acids Res.</source><italic>,</italic>
<volume>30</volume>, <fpage>281</fpage>–<lpage>283</lpage>.<pub-id pub-id-type="pmid">11752315</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rho</surname><given-names>M.</given-names></name><etal/></person-group><italic>.</italic> (<year>2010</year>) <article-title>FragGeneScan: predicting genes in short and error-prone reads</article-title>. <source>Nucleic Acids Res.</source>, <volume>38</volume>, <fpage>e191</fpage>.<pub-id pub-id-type="pmid">20805240</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sun</surname><given-names>Y.</given-names></name><name><surname>Buhler</surname><given-names>J.</given-names></name></person-group> (<year>2007</year>) <article-title>Designing patterns for profile HMM search</article-title>. <source>Bioinformatics</source>, <volume>23</volume>, <fpage>36</fpage>–<lpage>43</lpage>.</mixed-citation>
    </ref>
    <ref id="btu843-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wommack</surname><given-names>K.E.</given-names></name><etal/></person-group> (<year>2008</year>). <article-title>Metagenomics: read length matters</article-title>. <source>Appl. Environ. Microbiol.</source>, <volume>74</volume>, <fpage>1453</fpage>–<lpage>1463</lpage>.<pub-id pub-id-type="pmid">18192407</pub-id></mixed-citation>
    </ref>
    <ref id="btu843-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wootton</surname><given-names>J.C.</given-names></name><name><surname>Federhen</surname><given-names>S.</given-names></name></person-group> (<year>1993</year>) <article-title>Statistics of local complexity in amino acid sequences and sequence databases</article-title>. <source>Comp. Chem.</source>, <volume>17</volume>, <fpage>149</fpage>–<lpage>163</lpage>.</mixed-citation>
    </ref>
    <ref id="btu843-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yooseph</surname><given-names>S.</given-names></name><etal/></person-group> (<year>2007</year>) <article-title>The sorcerer II global ocean sampling expedition: expanding the universe of protein families</article-title>. <source>PLos Biol.</source>, <volume>5</volume>, <fpage>0432</fpage>–<lpage>0466</lpage>.</mixed-citation>
    </ref>
    <ref id="btu843-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>P.</given-names></name><name><surname>Peng</surname><given-names>J.</given-names></name></person-group> (<year>2004</year>) <comment>SVM vs regularized least squares classification. In <italic>Proceedings of the 17th International Conference on Pattern Recognition</italic>, Vol. 1, pp. 176</comment>-<comment>179</comment>.</mixed-citation>
    </ref>
    <ref id="btu843-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y.</given-names></name><etal/></person-group><italic>.</italic> (<year>2013</year>). <article-title>A sensitive and accurate protein domain classification tool (SALT) for short reads</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>2103</fpage>–<lpage>2111</lpage>.<pub-id pub-id-type="pmid">23782615</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

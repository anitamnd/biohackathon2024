<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7355276</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa460</article-id>
    <article-id pub-id-type="publisher-id">btaa460</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Macromolecular Sequence, Structure, and Function</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>LinearPartition: linear-time approximation of RNA folding partition function and base-pairing probabilities</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>He</given-names>
        </name>
        <xref ref-type="aff" rid="btaa460-aff1">b1</xref>
        <xref ref-type="aff" rid="btaa460-aff2">b2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Liang</given-names>
        </name>
        <xref ref-type="aff" rid="btaa460-aff2">b2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mathews</surname>
          <given-names>David H</given-names>
        </name>
        <xref ref-type="aff" rid="btaa460-aff3">b3</xref>
        <xref ref-type="aff" rid="btaa460-aff4">b4</xref>
        <xref ref-type="aff" rid="btaa460-aff5">b5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Huang</surname>
          <given-names>Liang</given-names>
        </name>
        <xref ref-type="aff" rid="btaa460-aff1">b1</xref>
        <xref ref-type="aff" rid="btaa460-aff2">b2</xref>
        <xref ref-type="corresp" rid="btaa460-cor1"/>
        <!--<email>liang.huang.sh@gmail.com</email>-->
      </contrib>
    </contrib-group>
    <aff id="btaa460-aff1"><label>b1</label><institution>Baidu Research</institution>, Sunnyvale, CA 94089, <country country="US">USA</country></aff>
    <aff id="btaa460-aff2"><label>b2</label><institution>School of Electrical Engineering and Computer Science, Oregon State University</institution>, Corvallis, OR 97330, <country country="US">USA</country></aff>
    <aff id="btaa460-aff3"><label>b3</label><institution>Department of Biochemistry &amp; Biophysics, University of Rochester Medical Center</institution>, Rochester, NY 48306, <country country="US">USA</country></aff>
    <aff id="btaa460-aff4"><label>b4</label><institution>Center for RNA Biology, University of Rochester Medical Center</institution>, Rochester, NY 48306, <country country="US">USA</country></aff>
    <aff id="btaa460-aff5"><label>b5</label><institution>Department of Biostatistics &amp; Computational Biology, University of Rochester Medical Center</institution>, Rochester, NY 48306, <country country="US">USA</country></aff>
    <author-notes>
      <corresp id="btaa460-cor1">To whom correspondence should be addressed. E-mail: <email>liang.huang.sh@gmail.com</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-07-13">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB 2020 Proceedings</issue-title>
    <fpage>i258</fpage>
    <lpage>i267</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa460.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>RNA secondary structure prediction is widely used to understand RNA function. Recently, there has been a shift away from the classical minimum free energy methods to partition function-based methods that account for folding ensembles and can therefore estimate structure and base pair probabilities. However, the classical partition function algorithm scales cubically with sequence length, and is therefore prohibitively slow for long sequences. This slowness is even more severe than cubic-time free energy minimization due to a substantially larger constant factor in runtime.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Inspired by the success of our recent LinearFold algorithm that predicts the approximate minimum free energy structure in linear time, we design a similar linear-time heuristic algorithm, LinearPartition, to approximate the partition function and base-pairing probabilities, which is shown to be orders of magnitude faster than Vienna RNAfold and CONTRAfold (e.g. 2.5 days versus 1.3 min on a sequence with length 32 753 <italic>nt</italic>). More interestingly, the resulting base-pairing probabilities are even better correlated with the ground-truth structures. LinearPartition also leads to a small accuracy improvement when used for downstream structure prediction on families with the longest length sequences (16S and 23S rRNAs), as well as a substantial improvement on long-distance base pairs (500+ <italic>nt</italic> apart).</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Code: <ext-link ext-link-type="uri" xlink:href="http://github.com/LinearFold/LinearPartition">http://github.com/LinearFold/LinearPartition</ext-link>; Server: <ext-link ext-link-type="uri" xlink:href="http://linearfold.org/partition">http://linearfold.org/partition</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R01 GM076485</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>IIS-1817231</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>RNAs are involved in multiple processes, such as catalyzing reactions or guiding RNA modifications (<xref rid="btaa460-B3" ref-type="bibr">Bachellerie <italic>et al.</italic>, 2002</xref>; <xref rid="btaa460-B17" ref-type="bibr">Doudna and Cech, 2002</xref>; <xref rid="btaa460-B18" ref-type="bibr">Eddy, 2001</xref>), and their functionalities are highly related to structures. However, structure determination techniques, such as X-ray crystallography (<xref rid="btaa460-B53" ref-type="bibr">Zhang and Ferré-D’Amaré, 2014</xref>), nuclear magnetic resonance (<xref rid="btaa460-B54" ref-type="bibr">Zhang and Keane, 2019</xref>) and cryo-electron microscopy (<xref rid="btaa460-B35" ref-type="bibr">Lyumkis, 2019</xref>), though reliable and accurate, are extremely slow and costly. Therefore, fast and accurate computational prediction of RNA structure is useful and desired. Considering full RNA structure prediction is challenging (<xref rid="btaa460-B42" ref-type="bibr">Miao <italic>et al.</italic>, 2017</xref>), many studies focus on predicting secondary structure, the set of canonical base pairs in the structure (A-U, G-C and G-U base pairs) (<xref rid="btaa460-B50" ref-type="bibr">Tinoco and Bustamante, 1999</xref>), as it is well-defined, and provides detailed information to help understand the structure–function relationship, and is a basis to predict full tertiary structure (<xref rid="btaa460-B19" ref-type="bibr">Flores and Altman, 2010</xref>; <xref rid="btaa460-B46" ref-type="bibr">Seetin and Mathews, 2011</xref>).</p>
    <p>RNA secondary structure prediction is in general NP-complete (<xref rid="btaa460-B34" ref-type="bibr">Lyngsø and Pedersen, 2000</xref>), but nested (i.e. pseudoknot-free) secondary structures can be predicted with cubic-time dynamic programming algorithms. Commonly, the minimum free energy (MFE) structure is predicted (<xref rid="btaa460-B43" ref-type="bibr">Nussinov and Jacobson, 1980</xref>; <xref rid="btaa460-B58" ref-type="bibr">Zuker and Stiegler, 1981</xref>). At equilibrium, the MFE structure is the most populated structure, but it is a simplification because multiple conformations exist as an equilibrium ensemble for one RNA sequence (<xref rid="btaa460-B36" ref-type="bibr">Mathews, 2004</xref>). For example, many mRNAs <italic>in vivo</italic> form a dynamic equilibrium and fold into a population of structures (<xref rid="btaa460-B28" ref-type="bibr">Lai <italic>et al.</italic>, 2018</xref>; <xref rid="btaa460-B30" ref-type="bibr">Long <italic>et al.</italic>, 2007</xref>; Lu and Mathews, 2008; <xref rid="btaa460-B49" ref-type="bibr">Tafer <italic>et al.</italic>, 2008</xref>); <xref ref-type="fig" rid="btaa460-F1">Figure 1A and B</xref> shows the example of Tebowned RNA which folds into more than one structure at equilibrium. In this case, the prediction of one single structure, such as the MFE structure, is not expressive enough to capture multiple states of RNA sequences at equilibrium.
</p>
    <fig id="btaa460-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>An RNA can fold into multiple structures at equilibrium. (<bold>A</bold> and <bold>B)</bold> Two secondary structures of Tebowned RNA: TBWN-A and TBWN-B (<xref rid="btaa460-B12" ref-type="bibr">Cordero and Das, 2015</xref>). (<bold>C)</bold> Upper triangle shows the estimated base-pairing probability matrix for this RNA using Vienna RNAfold, where darker red squares represent higher probability base pairs; the lower triangle shows the two different structures; (<bold>D</bold>) Comparison between classical, local, and left-to-right algorithms for MFE and partition function calculation. <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msup><mml:mrow/><mml:mo>⋄</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>(<xref rid="btaa460-B58" ref-type="bibr">Zuker and Stiegler, 1981</xref>), °(<xref rid="btaa460-B41" ref-type="bibr">McCaskill, 1990</xref>), *(<xref rid="btaa460-B29" ref-type="bibr">Lange <italic>et al.</italic>, 2012</xref>), <inline-formula id="IE4"><mml:math id="IM2"><mml:mrow><mml:msup><mml:mrow/><mml:mo>†</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>(<xref rid="btaa460-B7" ref-type="bibr">Bernhart <italic>et al.</italic>, 2006a</xref>), <inline-formula id="IE5"><mml:math id="IM3"><mml:mrow><mml:msup><mml:mrow/><mml:mo>‡</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>(<xref rid="btaa460-B26" ref-type="bibr">Kiryu <italic>et al.</italic>, 2008</xref>) and <inline-formula id="IE6"><mml:math id="IM4"><mml:mrow><mml:msup><mml:mrow/><mml:mo>•</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>(<xref rid="btaa460-B24" ref-type="bibr">Huang <italic>et al.</italic>, 2019</xref>). LinearFold and LinearPartition enjoy linear runtime because of a left-to-right order that enables heuristic beam pruning, and both become exact <inline-formula id="IE7"><mml:math id="IM5"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> algorithms without pruning. ‘Span’ denotes the window size (max. pair distance) (<inline-formula id="IE8"><mml:math id="IM6"><mml:mo>∞</mml:mo></mml:math></inline-formula> means no limit); it is a small constant in local methods (e.g. default <italic>L</italic>=<italic> </italic>70 <italic>nt</italic> in RNAplfold)</p>
      </caption>
      <graphic xlink:href="btaa460f1"/>
    </fig>
    <p>Alternatively, we can compute the partition function, which is the sum of the equilibrium constants for all possible secondary structures, and is the normalization term for calculating the probability of a secondary structure in the Boltzmann ensemble. The partition function calculation can also be used to calculate base-pairing probabilities of each nucleotide <italic>i</italic> paired with each of possible nucleotides <italic>j</italic> (<xref rid="btaa460-B41" ref-type="bibr">McCaskill, 1990</xref>; <xref rid="btaa460-B36" ref-type="bibr">Mathews, 2004</xref>). In <xref ref-type="fig" rid="btaa460-F1">Figure 1C</xref>, the upper triangle presents the base-pairing probability matrix of Tebowned RNA using Vienna RNAfold, showing that base pairs in Tebowned RNA (TBWN)-A have higher probabilities (in darker red) than base pairs in TBWN-B (in lighter red). This is consistent with the experimental result, i.e. TBWN-A is the majority structure that accounts for 56% ± 16% of the ensemble, whereas TBWN-B takes up 27% ± 12% (<xref rid="btaa460-B12" ref-type="bibr">Cordero and Das, 2015</xref>).</p>
    <p>In addition to modeling multiple states at equilibrium, base-pairing probabilities are used for downstream prediction methods, such as maximum expected accuracy (MEA; <xref rid="btaa460-B16" ref-type="bibr">Do <italic>et al.</italic>, 2006</xref>; <xref rid="btaa460-B27" ref-type="bibr">Knudsen and Hein, 2003</xref>), to assemble a structure with improved accuracy compared with the MFE structure (<xref rid="btaa460-B33" ref-type="bibr">Lu <italic>et al.</italic>, 2009</xref>). Other prediction methods, such as ProbKnot (<xref rid="btaa460-B6" ref-type="bibr">Bellaousov and Mathews, 2010</xref>), ThreshKnot (<xref rid="btaa460-B55" ref-type="bibr">Zhang <italic>et al.</italic>, 2019</xref>), DotKnot (<xref rid="btaa460-B48" ref-type="bibr">Sperschneider and Datta, 2010</xref>) and IPknot (<xref rid="btaa460-B45" ref-type="bibr">Sato <italic>et al.</italic>, 2011</xref>), use base-pairing probabilities to predict pseudoknotted structures with heuristics, which is beyond the scope of standard cubic-time algorithms. Additionally, the partition function is the basis of stochastic sampling, in which structures are sampled with their probability of occurring in the Boltzmann ensemble (<xref rid="btaa460-B14" ref-type="bibr">Ding and Lawrence, 2003</xref>; <xref rid="btaa460-B37" ref-type="bibr">Mathews, 2006</xref>).</p>
    <p>Therefore, there has been a shift from the classical MFE-based methods to partition function-based ones. These latter methods, as well as the prediction engines based on them, such as partition function-mode of RNAstructure (<xref rid="btaa460-B38" ref-type="bibr">Mathews and Turner, 2006</xref>), Vienna RNAfold (<xref rid="btaa460-B31" ref-type="bibr">Lorenz <italic>et al.</italic>, 2011</xref>) and CONTRAfold (<xref rid="btaa460-B16" ref-type="bibr">Do <italic>et al.</italic>, 2006</xref>), are all based on the seminal algorithm that McCaskill pioneered (<xref rid="btaa460-B41" ref-type="bibr">McCaskill, 1990</xref>). It employs a dynamic program to capture all possible (exponentially many) nested structures, but its <inline-formula id="IE9"><mml:math id="IM7"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> runtime still scales poorly for longer sequences. This slowness is even more severe than the <inline-formula id="IE10"><mml:math id="IM8"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time MFE-based ones due to a much larger constant factor. For instance, for <italic>Helicobacter pylori</italic> 23S rRNA (sequence length 2968 <italic>nt</italic>), Vienna RNAfold’s computation of the partition function and base-pairing probabilities is 9× slower than MFE (71 versus 8 s), and CONTRAfold is even 20× slower (120 versus 6 s). The slowness prevents their applications to longer sequences.</p>
    <p>To address this <inline-formula id="IE11"><mml:math id="IM9"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time bottleneck, we present LinearPartition, which is inspired by our recently proposed LinearFold algorithm (<xref rid="btaa460-B24" ref-type="bibr">Huang <italic>et al.</italic>, 2019</xref>) that approximates the MFE structure in linear time. Using the same idea, LinearPartition can approximate the partition function and base-pairing probability matrix in linear time. Like LinearFold, LinearPartition scans the RNA sequence from 5′-to-3′ using a left-to-right dynamic program that runs in <inline-formula id="IE12"><mml:math id="IM10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time, but unlike the classical bottom-up McCaskill algorithm (<xref rid="btaa460-B41" ref-type="bibr">McCaskill, 1990</xref>) with the same speed, our left-to-right scanning makes it possible to apply the beam pruning heuristic (<xref rid="btaa460-B23" ref-type="bibr">Huang and Sagae, 2010</xref>) to achieve linear runtime in practice (see <xref ref-type="fig" rid="btaa460-F1">Fig. 1D</xref>). Although the search is approximate, the well-designed heuristic ensures the surviving structures capture the bulk of the free energy of the ensemble. It is important to note that, unlike local folding methods in <xref ref-type="fig" rid="btaa460-F1">Figure 1D</xref>, our algorithm does <italic>not</italic> impose any limit on the base-pairing distance; in other words, it is a <italic>global</italic> partition function algorithm.</p>
    <p>More interestingly, as <xref ref-type="fig" rid="btaa460-F2">Figure 2</xref> shows, even with the <inline-formula id="IE13"><mml:math id="IM11"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time McCaskill algorithm, the resulting number of base pairings with reasonable probabilities (e.g. &gt;0.001) grows only linearly with the sequence length. This suggests that our algorithm, which only computes <italic>O</italic>(<italic>n</italic>) pairings by design, is a reasonable approximation.
</p>
    <fig id="btaa460-F2" orientation="portrait" position="float">
      <label>Fig. 2.</label>
      <caption>
        <p>Although the total number of possible base pairings scales <inline-formula id="IE14"><mml:math id="IM12"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with the sequence length <italic>n</italic> (using the probability matrix from Vienna RNAfold as an example), with any reasonable threshold <italic>θ</italic>, the number of surviving pairings (in colors for different <italic>θ</italic>) grows linearly, suggesting our approximation, only computing <italic>O</italic>(<italic>n</italic>) pairings, is reasonable</p>
      </caption>
      <graphic xlink:href="btaa460f2"/>
    </fig>
    <p>LinearPartition is 2771× faster than CONTRAfold for the longest sequence (32 753 <italic>nt</italic>) that CONTRAfold can run in the dataset (2.5 days versus 1.3 min.). Interestingly, LinearPartition is orders of magnitude faster <italic>without</italic> sacrificing accuracy. In fact, the resulting base-pairing probabilities are even better correlated with ground-truth structures, and when applied to downstream structure prediction tasks, they lead to a small accuracy improvement on longer families (small and large subunit rRNAs), as well as a substantial improvement on long-distance base pairs (500+ <italic>nt</italic> apart).</p>
    <p>Although LinearPartition is inspired by LinearFold in many ways, the success of the former is not obvious at all given the latter. This is because, rather than finding one single optimal structure, LinearPartition needs to <italic>sum up</italic> exponentially many structures that capture the bulk part of the ensemble free energy. There are many algorithmic techniques that can speed up the search for the optimal or near-optimal solution (e.g. sparse folding; <xref rid="btaa460-B4" ref-type="bibr">Backofen <italic>et al.</italic>, 2011</xref>), but very few can speed up the summation of all solutions (see <xref ref-type="supplementary-material" rid="sup1">Section 4</xref> for details). In addition, LinearPartition also results in more accurate downstream structure predictions than LinearFold.</p>
    <p>Local partition function calculation algorithms (<xref rid="btaa460-B7" ref-type="bibr">Bernhart <italic>et al.</italic>, 2006a</xref>; <xref rid="btaa460-B26" ref-type="bibr">Kiryu <italic>et al.</italic>, 2008</xref>), on the other hand, also achieve linear runtime but can only consider pairs up to a fixed window size. More importantly, they cannot output the partition function or Boltzmann probabilities. Our work is the first to achieve linear runtime without constraints on pair distance, and can still output the partition function and Boltzmann probabilities, making it possible to do stochastic sampling (<xref rid="btaa460-B14" ref-type="bibr">Ding and Lawrence, 2003</xref>).</p>
  </sec>
  <sec>
    <title>2 The LinearPartition algorithm</title>
    <p>We denote <inline-formula id="IE15"><mml:math id="IM13"><mml:mrow><mml:mi mathvariant="bold">x</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as the input RNA sequence of length <italic>n</italic>, and <inline-formula id="IE16"><mml:math id="IM14"><mml:mrow><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the set of all possible secondary structures of <bold>x</bold>. The partition function is:
<disp-formula id="E1"><mml:math id="M1"><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE17"><mml:math id="IM15"><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the conformational Gibbs free energy change of structure <bold>y</bold>, <italic>R</italic> is the universal gas constant and <italic>T</italic> is the thermodynamic temperature. <inline-formula id="IE18"><mml:math id="IM16"><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is calculated using loop-based Turner free-energy model (<xref rid="btaa460-B39" ref-type="bibr">Mathews <italic>et al.</italic>, 1999</xref>, <xref rid="btaa460-B40" ref-type="bibr">2004</xref>), but for presentation reasons, we use a revised Nussinov–Jacobson energy model, i.e. a free energy change of <inline-formula id="IE19"><mml:math id="IM17"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for unpaired base at position <italic>j</italic> and a free energy change of <inline-formula id="IE20"><mml:math id="IM18"><mml:mrow><mml:mo>ξ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for base pair of (<italic>i</italic>, <italic>j</italic>). For example, we can assign <inline-formula id="IE21"><mml:math id="IM19"><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> kcal/mol and <inline-formula id="IE22"><mml:math id="IM20"><mml:mrow><mml:mo>ξ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> kcal/mol for CG pairs and −2 kcal/mol for AU and GU pairs. Thus, <inline-formula id="IE23"><mml:math id="IM21"><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> can be decomposed as:
<disp-formula id="E2"><mml:math id="M2"><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>ξ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE24"><mml:math id="IM22"><mml:mrow><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the set of unpaired bases in <bold>y</bold>, and <inline-formula id="IE25"><mml:math id="IM23"><mml:mrow><mml:mtext>paired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the set of base pairs in <bold>y</bold>. The partition function now decomposes as:
<disp-formula id="E3"><mml:math id="M3"><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>ξ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
    <p>We first define <bold>span</bold><inline-formula id="IE26"><mml:math id="IM24"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> to be the subsequence <inline-formula id="IE27"><mml:math id="IM25"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (thus <inline-formula id="IE28"><mml:math id="IM26"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> denotes the whole sequence <bold>x</bold>, and <inline-formula id="IE29"><mml:math id="IM27"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> denotes the empty span between <inline-formula id="IE30"><mml:math id="IM28"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <italic>x<sub>j</sub></italic> for any <italic>j</italic> in <inline-formula id="IE31"><mml:math id="IM29"><mml:mrow><mml:mn>1..</mml:mn><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula>). We then define a <bold>state</bold> to be a span associated with its partition function:
<disp-formula id="E4"><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE32"><mml:math id="IM30"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> encompasses all possible substructures for span <inline-formula id="IE33"><mml:math id="IM31"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, which can be visualized as <inline-graphic xlink:href="btaa460ilf3.jpg" mimetype="image"/></p>
    <p>For simplicity of presentation, in the pseudocode in <xref ref-type="fig" rid="btaa460-F3">Figure 3, <italic>Q</italic></xref> is notated as a hash table, mapping from <inline-formula id="IE35"><mml:math id="IM32"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE36"><mml:math id="IM33"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>; see <xref ref-type="supplementary-material" rid="sup1">Supplementary Section A</xref> for details of its efficient implementation. As the base case, we set <inline-formula id="IE37"><mml:math id="IM34"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> to be 1 for all <italic>j</italic>, meaning all empty spans have partition function of 1 (Line 4). Our algorithm then scans the sequence from left-to-right (i.e. from 5′-to-3′), and at each nucleotide <italic>x<sub>j</sub></italic> (<inline-formula id="IE38"><mml:math id="IM35"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1…</mml:mn><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula>), we perform two actions:
</p>
    <fig id="btaa460-F3" orientation="portrait" position="float">
      <label>Fig. 3.</label>
      <caption>
        <p>Partition function calculation pseudocode of a simplified version of the LinearPartition algorithm [the inside phase; see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref> for the pseudocode of beam pruning (Line 11)]. The base-pairing probabilities are computed with the combination of the outside phase (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref>) (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref> for the version with the Turner model)</p>
      </caption>
      <graphic xlink:href="btaa460f3"/>
    </fig>
    <list list-type="bullet">
      <list-item>
        <p>skip (Line 8): We extend each span <inline-formula id="IE39"><mml:math id="IM36"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> in <italic>Q</italic> to <inline-formula id="IE40"><mml:math id="IM37"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> by adding an unpaired base <inline-formula id="IE41"><mml:math id="IM38"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo></mml:mrow></mml:math></inline-formula>‘.’ (in the dot-bracket notation) to the right of each substructure in <inline-formula id="IE42"><mml:math id="IM39"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, updating <inline-formula id="IE43"><mml:math id="IM40"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>:
<disp-formula id="E5"><mml:math id="M5"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo> </mml:mo><mml:mo>+</mml:mo><mml:mo>=</mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>δ</mml:mo><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:math></disp-formula></p>
      </list-item>
    </list>
    <p>which can be visualized as <inline-graphic xlink:href="btaa460ilf1.jpg" mimetype="image"/></p>
    <list list-type="bullet">
      <list-item>
        <p>pop (Lines 9–10): If <inline-formula id="IE45"><mml:math id="IM41"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <italic>x<sub>j</sub></italic> are pairable, we combine span <inline-formula id="IE46"><mml:math id="IM42"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> in <italic>Q</italic> with each combinable ‘left’ span <inline-formula id="IE47"><mml:math id="IM43"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> in <italic>Q</italic> and update the resulting span <inline-formula id="IE48"><mml:math id="IM44"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>’s partition function
<disp-formula id="E6"><mml:math id="M6"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo> </mml:mo><mml:mo>+</mml:mo><mml:mo>=</mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>ξ</mml:mo><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:math></disp-formula></p>
      </list-item>
    </list>
    <p>This means that every substructure in <inline-formula id="IE49"><mml:math id="IM45"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> can be combined with every substructure in <inline-formula id="IE50"><mml:math id="IM46"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> and a base pair <inline-formula id="IE51"><mml:math id="IM47"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to form one possible substructure in <inline-formula id="IE52"><mml:math id="IM48"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>: <inline-graphic xlink:href="btaa460ilf2.jpg" mimetype="image"/></p>
    <p>Above we presented a simplified version of our left-to-right LinearPartition algorithm. We have three nested loops, one for <italic>j</italic>, one for <italic>i</italic>, and one for <italic>k</italic>, and each loop takes at most <italic>n</italic> iterations; therefore, the time complexity <italic>without</italic> beam pruning is <inline-formula id="IE54"><mml:math id="IM49"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, which is identical to the classical McCaskill Algorithm (see <xref ref-type="fig" rid="btaa460-F1">Fig. 1D</xref>). In fact, there is an alternative, bottom-up, interpretation of our left-to-right algorithm that resembles the Nussinov-style recursion of the classical McCaskill Algorithm:
<disp-formula id="E7"><mml:math id="M7"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>δ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>ξ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
    <p>However, unlike the classical bottom-up McCaskill algorithm, our left-to-right dynamic programming, inspired by LinearFold, makes it possible to further apply the beam pruning heuristic to achieve linear runtime in practice. The main idea is, at each step <italic>j</italic>, among all possible spans <inline-formula id="IE55"><mml:math id="IM50"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> that ends at <italic>j</italic> (with <inline-formula id="IE56"><mml:math id="IM51"><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1…</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula>), we only keep the top <italic>b</italic> most promising candidates (<italic>b</italic> is the beam size), ranked by their partition functions <inline-formula id="IE57"><mml:math id="IM52"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> combined with the corresponding ‘prefix’ partition function for span <inline-formula id="IE58"><mml:math id="IM53"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, i.e. states are ranked by <inline-formula id="IE59"><mml:math id="IM54"><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, in order to be fair for spans of different lengths (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref> for pseudocode). With such beam pruning, we reduce the number of states from <inline-formula id="IE60"><mml:math id="IM55"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to <italic>O</italic>(<italic>nb</italic>), and the runtime from <inline-formula id="IE61"><mml:math id="IM56"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE62"><mml:math id="IM57"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. For details of the efficient implementation and runtime analysis, please refer to <xref ref-type="supplementary-material" rid="sup1">Supplementary Section A</xref>. Note <italic>b</italic> is a user-adjustable constant (<inline-formula id="IE63"><mml:math id="IM58"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:math></inline-formula>100 by default).</p>
    <p>After the partition-function calculation, also known as the ‘inside’ phase of the classical inside-outside algorithm (<xref rid="btaa460-B5" ref-type="bibr">Baker, 1979</xref>), we design a similar linear-time ‘outside’ phase (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Section SA.3</xref>) to compute the ‘outside’ partition function (only for those spans that survived the beam pruning in the ‘inside’ phase) and the base-pairing probabilities:
<disp-formula id="E8"><mml:math id="M8"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE64"><mml:math id="IM59"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the probability of nucleotide <italic>i</italic> pairing with <italic>j</italic>, which sums up the probabilities of all structures that contain that pair, and <inline-formula id="IE65"><mml:math id="IM60"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:mo>Δ</mml:mo><mml:msup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>°</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>R</mml:mi><mml:mi>T</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:msup><mml:mo>/</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is <bold>y</bold>’s Boltzmann probability in the ensemble.</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Efficiency and scalability</title>
      <p>We present two versions of LinearPartition: <italic>LinearPartition-V</italic> using thermodynamic parameters (<xref rid="btaa460-B39" ref-type="bibr">Mathews <italic>et al.</italic>, 1999</xref>, <xref rid="btaa460-B40" ref-type="bibr">2004</xref>; <xref rid="btaa460-B51" ref-type="bibr">Xia <italic>et al.</italic>, 1998</xref>) following Vienna RNAfold (<xref rid="btaa460-B31" ref-type="bibr">Lorenz <italic>et al.</italic>, 2011</xref>), and <italic>LinearPartition-C</italic> using the learning-based parameters from CONTRAfold (<xref rid="btaa460-B16" ref-type="bibr">Do <italic>et al.</italic>, 2006</xref>). We benchmark on a Linux machine with 2.90 GHz Intel i9-7920X CPU and 64 G memory. We use RNAs from two datasets, ArchiveII (<xref rid="btaa460-B39" ref-type="bibr">Mathews <italic>et al.</italic>, 1999</xref>; <xref rid="btaa460-B47" ref-type="bibr">Sloma and Mathews, 2016</xref>) [excluding 957 sequences from S-Processed dataset (<xref rid="btaa460-B0883913" ref-type="bibr">Andronescu, 2007)]</xref> and RNAcentral (<xref rid="btaa460-B44" ref-type="bibr">RNAcentral Consortium <italic>et al.</italic>, 2017)</xref>. See <xref ref-type="supplementary-material" rid="sup1">Supplementary Section B.1</xref> for details of the datasets.</p>
      <p><xref ref-type="fig" rid="btaa460-F4">Figure 4</xref> compares the efficiency and scalability between the two baselines, Vienna RNAfold and CONTRAfold, and our two versions, LinearPartition-V and LinearPartition-C. To make the comparison fair, we disable the downstream tasks (MEA prediction in CONTRAfold, and centroid prediction and visualization in RNAfold) which are by default enabled. <xref ref-type="fig" rid="btaa460-F4">Figure 4A</xref> shows that both LinearPartition-V and LinearPartition-C scale almost linearly with sequence length <italic>n</italic>. The runtime deviation from exact linearity is due to the relatively short sequence lengths in the ArchiveII dataset, which contains a set of sequences with well-determined structures (<xref rid="btaa460-B47" ref-type="bibr">Sloma and Mathews, 2016</xref>). <xref ref-type="fig" rid="btaa460-F4">Figure 4A</xref> also confirms that the baselines scale cubically and the <inline-formula id="IE66"><mml:math id="IM61"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> runtimes are substantially slower than LinearPartition on long sequences. For the <italic>H.pylori</italic> 23S rRNA sequence (2968 <italic>nt</italic>, the longest in ArchiveII), both versions of LinearPartition take only 6 s, while RNAfold and CONTRAfold take 73 and 120 s, respectively.
</p>
      <fig id="btaa460-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>Total runtime and memory usage of computing both the partition function and base-pairing probabilities. (<bold>A</bold>) Runtime comparisons on the ArchiveII dataset; the curve-fittings were log-log in gnuplot with <inline-formula id="IE67"><mml:math id="IM62"><mml:mrow><mml:mi>n</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. (<bold>B</bold>) Runtime comparisons on the RNAcentral dataset (log scale). The partition function computation takes about half of the total time shown here. (<bold>C</bold>) Memory usage comparisons on the RNAcentral dataset (log scale)</p>
        </caption>
        <graphic xlink:href="btaa460f4"/>
      </fig>
      <p>We also notice that both RNAfold and CONTRAfold have limitations on even longer sequences. RNAfold scales the magnitude of the partition function using a constant estimated from the MFE of the given sequence to avoid overflow, but overflows still occur on long sequences. For example, it overflows on the 19 071 <italic>nt</italic> sequence in the sampled RNAcentral dataset. CONTRAfold stores the logarithm of the partition function to solve the overflow issue, but cannot run on sequences longer than 32 767 <italic>nt</italic> due to using unsigned short to index sequence positions. LinearPartition, like CONTRAfold, performs computations in the log-space, but can run on all sequences in the RNAcentral dataset. <xref ref-type="fig" rid="btaa460-F4">Figure 4B</xref> compares the runtime of four systems on a sampled subset of RNAcentral dataset, and shows that on longer sequences the runtime of LinearPartition is exactly linear. For the 15 780 <italic>nt</italic> sequence, the longest example shown for RNAfold, LinearPartition-V is 256× faster (more than 3 h versus 44.1 s). Note that RNAfold may not overflow on some longer sequences, where LinearPartition-V should enjoy an even more salient speedup. For the longest sequence that CONTRAfold can run (32 753 <italic>nt</italic>) in the dataset, LinearPartition is 2771× faster (2.5 days versus 1.3 min.). Even for the longest sequence in RNAcentral [<italic>Homo sapiens</italic> Transcript NONHSAT168677.1 with length 244 296 <italic>nt</italic> (<xref rid="btaa460-B56" ref-type="bibr">Zhao <italic>et al.</italic>, 2016</xref>)], both LinearPartition versions finish in ∼10 min.</p>
      <p><xref ref-type="fig" rid="btaa460-F4">Figure 4C</xref> shows that RNAfold and CONTRAfold use <inline-formula id="IE68"><mml:math id="IM63"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> space while LinearPartition uses <italic>O</italic>(<italic>n</italic>).</p>
      <p>Now that we have established the speed of LinearPartition, we move on to the quality of its output.</p>
    </sec>
    <sec>
      <title>3.2 Correlation with ground-truth structures</title>
      <p>We use <italic>ensemble defect</italic> (Zadeh <italic>et al.</italic>, 2010; <xref ref-type="fig" rid="btaa460-F5">Fig. 5A and B</xref>) to represent the quality of the Boltzmann distribution. It is the expected number of incorrectly predicted nucleotides over the whole ensemble at equilibrium, and formally, for a sequence <bold>x</bold> and its ground-truth structure <inline-formula id="IE69"><mml:math id="IM64"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, the ensemble defect is
<disp-formula id="E9"><label>(1)</label><mml:math id="M9"><mml:mrow><mml:mo>Φ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi mathvariant="bold">y</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE70"><mml:math id="IM65"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the probability of structure <bold>y</bold> in the ensemble <inline-formula id="IE71"><mml:math id="IM66"><mml:mrow><mml:mi mathvariant="script">Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE72"><mml:math id="IM67"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the distance between <bold>y</bold> and <inline-formula id="IE73"><mml:math id="IM68"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, defined as the number of incorrectly predicted nucleotides in <bold>y</bold>:
<disp-formula id="E10"><mml:math id="M10"><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mo>|</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:mo>|</mml:mo><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p>
      <fig id="btaa460-F5" orientation="portrait" position="float">
        <label>Fig. 5.</label>
        <caption>
          <p>(<bold>A</bold>) Ensemble defect (expected number of incorrectly predicted nucleotides; lower is better) comparison between Vienna RNAfold and LinearPartition on the ArchiveII dataset. (<bold>B</bold>) Ensemble defect difference for each family. LinearPartition has lower ensemble defects for longer families: on average 56.3 less incorrectly predicted nucleotides on 23S rRNA and 8.3 less over all families. An example of <italic>E.coli</italic> 23S rRNA (shaded point in A). (<bold>C</bold>) Circular plot of the ground truth. (<bold>D–F</bold>) Base pair probabilities from RNAplfold (with default window size 70), RNAfold and LinearPartition, respectively; Blue denotes pairs in the known structure and Red denotes predicted pairs not in the known structure. The darkness of the line indicates pairing probability (<bold>G–J</bold>). Circular plots of <italic>C.ellipsoidea</italic> Group I Intron (see <xref ref-type="fig" rid="btaa460-F6">Fig. 6</xref> for another view of this example)</p>
        </caption>
        <graphic xlink:href="btaa460f5"/>
      </fig>
      <p>The naïve calculation of <xref ref-type="disp-formula" rid="E9">Equation (1)</xref> requires enumerating all possible structures in the ensemble, but by plugging <inline-formula id="IE74"><mml:math id="IM69"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">y</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> into <xref ref-type="disp-formula" rid="E9">Equation (1)</xref> we have
<disp-formula id="E11"><mml:math id="M11"><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>Φ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mtext>pairs</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mtext>unpaired</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold">y</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE75"><mml:math id="IM70"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the probability of <italic>i</italic> pairing with <italic>j</italic> and <italic>q<sub>j</sub></italic> is the probability of <italic>j</italic> being unpaired, i.e. <inline-formula id="IE76"><mml:math id="IM71"><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo>∑</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. This means we can now use base-pairing probabilities to compute the ensemble defect.</p>
      <p><xref ref-type="fig" rid="btaa460-F5">Figure 5A and B</xref> employs ensemble defect to measure the average number of incorrectly predicted nucleotides over the whole ensemble (lower is better). RNAfold and LinearPartition have similar ensemble defects for short sequences, but LinearPartition has lower ensemble defects for longer sequences, especially 16S and 23S rRNAs; in other words, LinearPartition’s ensemble has less expected number of incorrectly predicted nucleotides (or higher number of correctly predicted nucleotides). In particular, on 16S and 23S rRNAs, LinearPartition has on average 15.9 and 56.3 more correctly predicted nucleotides than RNAfold, and on average 8.3 more correctly predicted nucleotides over all families (<xref ref-type="fig" rid="btaa460-F5">Fig. 5B</xref>). <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3</xref> shows the relative ensemble defects (normalized by sequence lengths), where the same observations hold, and LinearPartition has on average 0.4% more correctly predicted nucleotides over all families. In both cases, the differences on tmRNA (worse) and Group I Intron (better) are statistically significant ().</p>
      <p>This finding also implies that LinearPartition’s base-pairing probabilities are on average higher than RNAfold’s for ground-truth base pairs, and on average lower for incorrect base pairs. We use two concrete examples to illustrate this. First, we plot the ground-truth structure of <italic>Escherichia coli</italic> 23S rRNA (2904 <italic>nt</italic>) in <xref ref-type="fig" rid="btaa460-F5">Figure 5C</xref>, and then plot the predicted base-pairing probabilities from the local folding tool RNAplfold (with default window size 70), RNAfold, and LinearPartition in <xref ref-type="fig" rid="btaa460-F5">Figure 5D–</xref>F, respectively. We can see that local folding can only produce local pairing probabilities, while RNAfold misses most of the long-distance pairs from the ground-truth (except the 5′–3′ helix), and includes many incorrect long-distance pairings (shown in red). In contrast, LinearPartition successfully predicts many long-distance pairings that RNAfold misses, the longest being 582 <italic>nt</italic> apart (shown with arrows). Indeed, the ensemble defect of this example confirms that LinearPartition’s ensemble distribution has on average 211.4 more correctly predicted nucleotides (over 2904 <italic>nt</italic>, or 7.3%) than RNAfold’s.</p>
      <p>As the second example, we use <italic>Corymnbia ellipsoidea</italic> Group I Intron (504 <italic>nt</italic>). First, in <xref ref-type="fig" rid="btaa460-F5">Figure 5G–J</xref>, we plot the circular plots in the same style as the previous example, where LinearPartition is substantially better in predicting four helices in the ground-truth structure: [17,24]–[72,79], [30,45]–[66,71], [44,48]–[54,58] and [80,83]–[148,151] (annotated with blue arrows). Next, in <xref ref-type="fig" rid="btaa460-F6">Figure 6A</xref>, we plot the base pairs (in triangle) and unpaired bases (in circle) with RNAfold probability on <italic>x</italic>-axis and LinearPartition probability on <italic>y</italic>-axis. We color the circles and triangles in blue where LinearPartition gives 0.2 higher probability than RNAfold (top left region), the opposite ones (bottom right region) in red, and the remainder (diagonal region, with probability changes &lt; 0.2) in green. Then in <xref ref-type="fig" rid="btaa460-F6">Figure 6B</xref>, we visualize the ground-truth structure (<xref rid="btaa460-B9" ref-type="bibr">Cannone <italic>et al.</italic>, 2002</xref>) and color the bases as in <xref ref-type="fig" rid="btaa460-F6">Figure 6A</xref>. We observe that the majority of bases are in green, indicating that RNAfold and LinearPartition agree with for a majority of the structure features. But, the blue helices (near 5′-end and [80,83]–[148,151], see also <xref ref-type="fig" rid="btaa460-F5">Fig. 5J</xref>) indicate that LinearPartition favors these correct substructures by giving them higher probabilities than RNAfold. We also notice that all red features (where RNAfold does better than LinearPartition) are unpaired bases. This example shows that although LinearPartition and RNAfold give different probabilities, it is likely that LinearPartition prediction structure is closer to the ground-truth structure (which will be confirmed by downstream structure predictions in Section 3.3). The ensemble defect of this example also confirms that LinearPartition has on average 47.1 more correctly predicted nucleotides (out of 504 <italic>nt</italic>, or 9.3%) than RNAfold.
</p>
      <fig id="btaa460-F6" orientation="portrait" position="float">
        <label>Fig. 6.</label>
        <caption>
          <p>An example of <italic>C.ellipsoidea</italic> Group I Intron. (<bold>A</bold>) Solid triangles (▲ ▲ ▲) stand for base-pairing probabilities and unfilled circles (° ° °) stand for single-stranded probabilities. blue: <inline-formula id="IE83"><mml:math id="IM72"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>linear</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>; green: <inline-formula id="IE84"><mml:math id="IM73"><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>linear</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>; red: <inline-formula id="IE85"><mml:math id="IM74"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>linear</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:mo>−</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>; (<bold>B</bold>) Ground-truth structure colored with the above scheme; (<bold>C</bold>) Statistics of this example. ‘Total’ columns are the total numbers of triangles and circles with different colors in (A), while ‘correct’ columns are the corresponding numbers in the ground-truth structure in (B), which is better correlated with LinearPartition’s probabilities than Vienna RNAfold’s (23 blue pairs and 0 red pairs)</p>
        </caption>
        <graphic xlink:href="btaa460f6"/>
      </fig>
      <p><xref ref-type="fig" rid="btaa460-F6">Figure 6C</xref> gives the statistics of this example. We can see the green triangles in <xref ref-type="fig" rid="btaa460-F6">Figure 6A</xref>, which denote similar probabilities between RNAfold and LinearPartition are the vast majority. The total number of blue triangles, for which LinearPartition gives higher base-pairing probabilities, is 55, and among them 23 (41.8%) are in the ground-truth structure. On the contrary, 56 triangles are in red, but none of these RNAfold preferred base pairs are correct. For unpaired bases, LinearPartition also gives higher probabilities to more ground-truth unpaired bases: there are 40 blue circles, among which 37 (92.5%) are unpaired in the ground-truth structure, while only 19 out of the 44 red circles (43.2%) are in the ground-truth structure.</p>
    </sec>
    <sec>
      <title>3.3 Accuracy of downstream predictions</title>
      <p>An important application of the partition function is to improve structure prediction accuracy (over MFE) using base-pairing probabilities. Here we use two such ‘downstream prediction’ methods, MEA (<xref rid="btaa460-B16" ref-type="bibr">Do <italic>et al.</italic>, 2006</xref>) and ThreshKnot (<xref rid="btaa460-B55" ref-type="bibr">Zhang <italic>et al.</italic>, 2019</xref>) which is a thresholded version of ProbKnot (<xref rid="btaa460-B6" ref-type="bibr">Bellaousov and Mathews, 2010</xref>), and compare their results using base-pairing probabilities from <inline-formula id="IE86"><mml:math id="IM75"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time baselines and our <italic>O</italic>(<italic>n</italic>)-time LinearPartition. We use positive predictive value (PPV, the fraction of predicted pairs in the known structure, a.k.a. precision) and sensitivity (the fraction of known pairs predicted, a.k.a. recall) as accuracy measurements for each family, and get overall accuracy be averaging over families. When scoring accuracy, we allow base pairs to differ by one nucleotide in position (<xref rid="btaa460-B39" ref-type="bibr">Mathews <italic>et al.</italic>, 1999</xref>). We compare RNAfold and LinearPartition-V on the ArchiveII dataset in the main text, and provide the CONTRAfold versus LinearPartition-C comparisons in the <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S5 and S6</xref>.</p>
      <p><xref ref-type="fig" rid="btaa460-F7">Figure 7A</xref> shows MEA predictions (RNAfold + MEA and LinearPartition + MEA) are more accurate than MFE ones (RNAfold MFE and LinearFold-V), but more importantly, LinearPartition + MEA consistently outperforms RNAfold + MEA in both PPV and sensitivity with the same <italic>γ</italic>, a hyperparameter that balances PPV and sensitivity in MEA algorithm.
</p>
      <fig id="btaa460-F7" orientation="portrait" position="float">
        <label>Fig. 7.</label>
        <caption>
          <p>Accuracy of downstream prediction (MEA) using base-pairing probabilities from Vienna RNAfold and LinearPartition on the ArchiveII dataset. (<bold>A</bold>) Overall PPV-Sensitivity tradeoff of MFE (single point) and MEA with varying <italic>γ</italic> (which can be tuned for higher sensitivity or PPV by adjusting <italic>γ</italic>). (<bold>B</bold> and <bold>C</bold>) PPV and Sensitivity comparisons of MEA structures for each family. (<bold>D</bold>) Accuracy comparison of long-distance base pairs (&gt;500 <italic>nt</italic> apart) in the MEA structures. We conclude that MEA predictions based on LinearPartition-V are consistently better in both PPV and Sensitivity than those based on Vienna RNAfold for all <italic>γ</italic>’s. LinearPartition-V is substantially better on long-range base pairs in MEA predictions</p>
        </caption>
        <graphic xlink:href="btaa460f7"/>
      </fig>
      <p><xref ref-type="fig" rid="btaa460-F7">Figure 7B and C</xref> details the per-family PPV and sensitivity, respectively, for MFE and MEA (<inline-formula id="IE87"><mml:math id="IM76"><mml:mrow><mml:mo>γ</mml:mo><mml:mo>=</mml:mo><mml:mn>1.5</mml:mn></mml:mrow></mml:math></inline-formula>) results from <xref ref-type="fig" rid="btaa460-F7">Figure 7A</xref>. LinearPartition + MEA has similar PPV and sensitivity as RNAfold + MEA on short families (tRNA, 5S rRNA and SRP), but interestingly, is more accurate on longer families, especially the two longest ones, 16S rRNA (+0.86 on PPV and +1.29 on sensitivity) and 23S rRNA (+0.88 on PPV and +0.62 on sensitivity).</p>
      <p>ProbKnot is another downstream prediction method that is simpler and faster than MEA; it assembles base pairs with reciprocal highest pairing probabilities. Recently, we demonstrated ThreshKnot (<xref rid="btaa460-B55" ref-type="bibr">Zhang <italic>et al.</italic>, 2019</xref>), a simple thresholded version of ProbKnot that only includes pairs that exceed the threshold, leads to more accurate predictions that outperform MEA by filtering out unlikely pairs, i.e. those whose probabilities fall under a given threshold <italic>θ</italic>.</p>
      <p>As shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4A</xref>, LinearPartition + ThreshKnot is almost identical in overall accuracy to RNAfold + ThreshKnot at all <italic>θ</italic>’s, and is slightly better than the latter on long families (+0.24 on PPV and +0.38 on sensitivity for Group I Intron, +0.12 and +0.37 for telomerase RNA, and +0.74 and +0.62 for 23S rRNA; <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S4B</xref> and <xref ref-type="supplementary-material" rid="sup1">C</xref>). We also perform a two-tailed permutation test (<xref rid="btaa460-B8265828" ref-type="bibr">Aghaeepour and Hoos, 2013</xref>) to test the statistical significance, and observe that on tmRNA, both MEA and ThreshKnot structures of LinearPartition are significantly worse (<italic>p</italic> &lt; 0.01) than their RNAfold-based counterparts in both PPV and Sensitivity.</p>
      <p><xref ref-type="fig" rid="btaa460-F7">Figure 7D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4D</xref> show that LinearPartition-based predictions are subtantially better than RNAfold’s (in both PPV and sensitivity) for long-distance base pairs (those with 500+ <italic>nt</italic> apart), which are well known to be challenging for the current models. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref> details the accuracies on base pairs with different distance groups.</p>
      <p><xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S5</xref> and <xref ref-type="supplementary-material" rid="sup1">S6</xref> show similar comparisons between CONTRAfold and LinearPartition-C using MEA and ThreshKnot prediction, with similar results to <xref ref-type="fig" rid="btaa460-F7">Figure 7</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4</xref>, i.e. downstream structure prediction using LinearPartition-C is as accurate as using CONTRAfold, and (sometimes significantly) more accurate on longer families.</p>
    </sec>
    <sec>
      <title>3.4 Approximation quality (default beam size)</title>
      <p>LinearPartition uses beam pruning to ensure <italic>O</italic>(<italic>n</italic>) runtime, thus is approximate compared with standard <inline-formula id="IE88"><mml:math id="IM77"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time algorithms. We now investigate its approximation quality at the default beam size 100.</p>
      <p>First, in <xref ref-type="fig" rid="btaa460-F8">Figure 8</xref>, we measure the approximation quality of the partition function calculation, in particular, the ensemble folding free energy change (also known as ‘free energy of the ensemble’) which reflects the size of the partition function,
<disp-formula id="E12"><mml:math id="M12"><mml:mrow><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mi>R</mml:mi><mml:mi>T</mml:mi><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <fig id="btaa460-F8" orientation="portrait" position="float">
        <label>Fig. 8.</label>
        <caption>
          <p>Approximation quality of partition function on ArchiveII dataset and random sequences. (<bold>A)</bold> The <italic>x</italic> and <italic>y</italic> axes are ensemble folding free energy changes <inline-formula id="IE89"><mml:math id="IM78"><mml:mrow><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of Vienna RNAfold and LinearPartition, respectively. (<bold>B</bold>) Difference of ensemble folding free energy change (top), <inline-formula id="IE90"><mml:math id="IM79"><mml:mrow><mml:mo>Δ</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, between RNAfold and LinearPartition. and the relative differences (bottom), <inline-formula id="IE91"><mml:math id="IM80"><mml:mrow><mml:mo>Δ</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mrow><mml:mo>°</mml:mo><mml:mo> </mml:mo><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, in percentages</p>
        </caption>
        <graphic xlink:href="btaa460f8"/>
      </fig>
      <p><xref ref-type="fig" rid="btaa460-F8">Figure 8A</xref> shows that the LinearPartition estimate for the ensemble folding free energy change is close to the RNAfold estimate on the ArchiveII dataset and randomly generated RNA sequences. The similarity shows that little magnitude of the partition function is lost by the beam pruning. For short families, free energy of ensembles between LinearPartition and RNAfold are almost the same. For 16S and 23S rRNA sequences and long random sequences (longer than 900 nt), LinearPartition gives a lower magnitude ensemble free energy change, but the difference,
<disp-formula id="E13"><mml:math id="M13"><mml:mrow><mml:mo>Δ</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mrow><mml:mo>°</mml:mo><mml:mo> </mml:mo><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mrow><mml:mo>°</mml:mo><mml:mo> </mml:mo><mml:mtext>linear</mml:mtext></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>is smaller than 20 kcal/mol for 16S rRNA, 15 kcal/mol for 23S rRNA and 37 kcal/mol for random sequences (<xref ref-type="fig" rid="btaa460-F8">Fig. 8B</xref>). The maximum difference for random sequence is larger than natural sequences (by 17.2 kcal/mol). This likely reflects the fact that random sequences tend to fold less selectively to probable structures (<xref rid="btaa460-B20" ref-type="bibr">Fu <italic>et al.</italic>, 2015</xref>), and the beam is therefore pruning structures in random that would contribute to the overall folding stability. <xref ref-type="fig" rid="btaa460-F8">Figure 8C</xref> shows the ‘relative’ differences in ensemble free energy changes, <inline-formula id="IE92"><mml:math id="IM81"><mml:mrow><mml:mo>Δ</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mrow><mml:mo>°</mml:mo><mml:mo> </mml:mo><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, are also very small: only up to 2.5% and 1.5% for 16S and 23S rRNAs, and up to 4.5% for random sequences.</p>
      <p>Next, in <xref ref-type="fig" rid="btaa460-F9">Figure 9</xref>, we measure the approximation quality of base-pairing probabilities using root mean square deviation (RMSD) between two probability matrices <italic>p</italic> and <inline-formula id="IE93"><mml:math id="IM82"><mml:mrow><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> over the set of all possible Watson–Crick and wobble pairs on a sequence <bold>x</bold>. We define
<disp-formula id="E14"><mml:math id="M14"><mml:mtable><mml:mtr><mml:mtd><mml:mtext>pairings</mml:mtext><mml:mo>(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo>|</mml:mo><mml:mo>|</mml:mo><mml:menclose notation="left"/><mml:mo> </mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>3</mml:mn><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold">x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mtext>CG</mml:mtext><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>GC</mml:mtext><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>AU</mml:mtext><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>UA</mml:mtext><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>GU</mml:mtext><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>UG</mml:mtext><mml:mo>}</mml:mo><mml:mo>}</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>and:
<disp-formula id="E15"><mml:math id="M15"><mml:mrow><mml:mtext>RMSD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mo>|</mml:mo><mml:mtext>pairings</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mtext>pairings</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:msub><mml:mrow><mml:mo>′</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:msqrt><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <fig id="btaa460-F9" orientation="portrait" position="float">
        <label>Fig. 9.</label>
        <caption>
          <p>Comparison of base-pairing probabilities from Vienna RNAfold and LinearPartition. (<bold>A</bold>) LinearPartition (upper triangle) and RNAfold (lower triangle) result in identical base-pairing probability matrix for <italic>E.coli</italic> tRNA<inline-formula id="IE94"><mml:math id="IM83"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mi mathvariant="italic">Gly</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. (<bold>B</bold>) The <inline-formula id="IE95"><mml:math id="IM84"><mml:mrow><mml:mtext>RMSD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>vienna</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mtext>linear</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, is relatively small between RNAfold and LinearPartition; all tRNA and 5S rRNA sequences RMSD is close to 0 (e.g. RMSD<inline-formula id="IE96"><mml:math id="IM85"><mml:mrow><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>); the <inline-formula id="IE97"><mml:math id="IM86"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="normal">G</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> (blue diamonds) constructed sequences are repetitions of 6 C’s and 6 G’s. (<bold>C</bold>) Purple bars show mean absolute value of change in base-pairing probabilities between Vienna RNAfold and LinearPartition (left <italic>y</italic>-axis); these changes are averaged within every probability bin. The green line shows pair probability distribution of Vienna RNAfold (right <italic>y</italic>-axis); note that the right <italic>y</italic>-axis is limited to 50 000 counts, and the counts of first three bins (with probability &lt;3%) are far beyond 50 000</p>
        </caption>
        <graphic xlink:href="btaa460f9"/>
      </fig>
      <p><xref ref-type="fig" rid="btaa460-F9">Figure 9A and B</xref> confirms that our LinearPartition algorithm (with default beam size 100) can indeed approximate the base-pairing probability matrix reasonably well. <xref ref-type="fig" rid="btaa460-F9">Figure 9A</xref> shows the heatmap of probability matrices for <italic>E.coli</italic> tRNA<inline-formula id="IE98"><mml:math id="IM87"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mi mathvariant="italic">Gly</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. RNAfold (lower triangle) and LinearPartition (upper triangle) yield identical matrices (i.e. <inline-formula id="IE99"><mml:math id="IM88"><mml:mrow><mml:mtext>RMSD</mml:mtext><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>). <xref ref-type="fig" rid="btaa460-F9">Figure 9B</xref> shows that the RMSD of each sequence in ArchiveII and RNAcentral datasets, and randomly generated artificial RNA sequences, is relatively small. The highest deviation is 0.065 for <italic>Ascaphus truei</italic> RNase P RNA, which means on average each base pair’s probability deviation in that worst-case sequence is about 0.065 between the cubic algorithm (RNAfold) and our linear-time one (LinearPartition). On the longest 23S rRNA family, the RMSD is about 0.015. We notice that tmRNA is the family with biggest average RMSD. The random RNA sequences behave similarly to natural sequences in terms of RMSD, i.e. RMSD is close to 0 (&lt;10<sup>−5</sup>) for short ones, then becomes bigger around length 500 and decreases after that, but for most cases their RMSD’s are slightly larger than the natural sequences. This indicates that the approximation quality is relatively better for natural sequences. For RNAcentral-sampled sequences, RMSD’s are all small and around 0.01.</p>
      <p>We hypothesize that LinearPartition reduces the uncertainty of the output distributions because it filters out states with lower partition function. We measure this using average positional structural entropy <italic>H</italic>(<italic>p</italic>), which is the average of positional structural entropy <inline-formula id="IE100"><mml:math id="IM89"><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for each nucleotide <italic>i</italic> (<xref rid="btaa460-B21" ref-type="bibr">Garcia-Martin and Clote, 2015</xref>; <xref rid="btaa460-B25" ref-type="bibr">Huynen <italic>et al.</italic>, 1997</xref>):
<disp-formula id="E16"><mml:math id="M16"><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>H</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>n</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>n</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:mo>−</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>n</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mrow><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>where <italic>p</italic> is the base-pairing probability matrix, and <inline-formula id="IE101"><mml:math id="IM90"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the probability of nucleotide <italic>i</italic> being unpaired (<italic>q<sub>i</sub></italic> in <xref ref-type="disp-formula" rid="E9">Equation 1</xref>). The lower entropy indicates that the distribution is dominated by fewer base-pairing probabilities. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8A</xref> confirms LinearPartition distribution shifted to higher probabilities (lower average entropy) than RNAfold for most sequences.</p>
      <p><xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8B</xref> uses <italic>E.coli</italic> 23S rRNA to exemplify the difference in base-pairing probabilities. We sort all these probabilities from high to low and take the top 3000. The LinearPartition curve starts higher and finishes lower, confirming a lower entropy.</p>
      <p><xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8C</xref> follows a previous analysis method (<xref rid="btaa460-B57" ref-type="bibr">Zuber <italic>et al.</italic>, 2017</xref>) to estimate the approximation quality with a different perspective. We divide the base-pairing probabilities range [0,1] into 100 bins, i.e. the first bin is for base-pairing probabilities [0,0.01], and the second is for [0.01, 0.02], so on so forth. We visualize the averaged change of base-pairing probabilities between RNAfold and LinearPartition for each bin with purple bars. We can see that larger probability changes are in the middle (bins with probability around 0.5), and smaller changes on the two sides (with probability close to either 0 or 1). We illustrate the counts in each bin based on RNAfold base-pairing probabilities with green dots and line. We can see that most base pairs have low probabilities (near 0) or very high probabilities (near 1). From <xref ref-type="fig" rid="btaa460-F9">Figure 9C</xref> we can see that probabilities of most base pairs are near 0 or 1, where the differences between RNAfold and LinearPartition are relatively small. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref> provides the comparison of counts in each bin between RNAfold and LinearPartition-V. The count of LinearPartition-V in bin [99,100] is slightly higher than RNAfold, while the counts in bins near 0 (being capped at 50 000) are much less than RNAfold. This also confirms that LinearPartition prunes base pairs with tiny probabilities.</p>
    </sec>
    <sec>
      <title>3.5 Adjustable beam size</title>
      <p>Beam size in LinearPartition is a user-adjustable hyperparameter controlling beam prune, and it balances the approximation quality and runtime. A smaller beam size shortens runtime, but sacrifices approximation quality. With increasing beam size, LinearPartition gradually approaches the classical <inline-formula id="IE102"><mml:math id="IM91"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time algorithm and the output is finally identical to the latter when the beam size is <inline-formula id="IE103"><mml:math id="IM92"><mml:mo>∞</mml:mo></mml:math></inline-formula> (no pruning). <xref ref-type="fig" rid="btaa460-F10">Figure 10A</xref> shows the changes in approximation quality of the ensemble free energy change, <inline-formula id="IE104"><mml:math id="IM93"><mml:mrow><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, with <inline-formula id="IE105"><mml:math id="IM94"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>20</mml:mn><mml:mo>→</mml:mo><mml:mn>300</mml:mn></mml:mrow></mml:math></inline-formula>. Even with a small beam size (<italic>b </italic>=<italic> </italic>20) the difference is only about 5%, which quickly shrinks to 0 as <italic>b</italic> increases. <xref ref-type="fig" rid="btaa460-F10">Figure 10B</xref> shows the changes in RMSD with changing <italic>b</italic>. With a small beam size <italic>b </italic>=<italic> </italic>20 the average RMSD is &lt; 0.035 over all ArchiveII sequences, which shrinks to &lt; 0.005 at the default beam size (<italic>b </italic>=<italic> </italic>100), and almost 0 with <italic>b </italic>=<italic> </italic>500.
</p>
      <fig id="btaa460-F10" orientation="portrait" position="float">
        <label>Fig. 10.</label>
        <caption>
          <p>Impact of beam size. (<bold>A</bold>) Relative difference of ensemble folding free energy change, <inline-formula id="IE106"><mml:math id="IM95"><mml:mrow><mml:mo>Δ</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup><mml:mo>/</mml:mo><mml:mo>Δ</mml:mo><mml:msubsup><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mtext>ensemble</mml:mtext></mml:mrow><mml:mo>°</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, against beam size. (<bold>B</bold>) RMSD against beam size</p>
        </caption>
        <graphic xlink:href="btaa460f10"/>
      </fig>
      <p>Beam size also has impact on PPV and Sensitivity. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10A</xref> gives the overall PPV and Sensitivity changes with beam size. We can see both PPV and Sensitivity improve from <italic>b </italic>=<italic> </italic>50 to <italic> </italic>100, and then become stable beyond that. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10B</xref> and <xref ref-type="supplementary-material" rid="sup1">C</xref> present this impact for two selected families. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10B</xref> shows tmRNA’s PPV and Sensitivity both increase when enlarging beam size. Using beam size 200, LinearPartition achieves similar PPV and Sensitivity as RNAfold. However, increasing beam size is not beneficial for all families. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10C</xref> gives the counterexample of 16S rRNA. We can see both PPV and Sensitivity decrease with <italic>b</italic> from 50 to 100. After that, Sensitivity drops with no PPV improvement.</p>
      <p>LinearFold uses <italic>k</italic>-best parsing (<xref rid="btaa460-B22" ref-type="bibr">Huang and Chiang, 2005</xref>) to reduce runtime from <inline-formula id="IE107"><mml:math id="IM96"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE108"><mml:math id="IM97"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>b</mml:mi><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> without losing accuracy. Basically, <italic>k</italic>-best parsing is to find the exact top-<italic>k</italic> (here <inline-formula id="IE109"><mml:math id="IM98"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math></inline-formula>) states out of <italic>b</italic><sup>2</sup> candidates in <inline-formula id="IE110"><mml:math id="IM99"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> runtime. If we applied <italic>k</italic>-best parsing here, LinearPartition would sum the partition function of only these top-<italic>b</italic> states instead of the partition function of <italic>b</italic><sup>2</sup> states. This change would introduce a larger approximation error, especially when the differences of partition function between the top-<italic>b</italic> states and the following states near the pruning boundary are small. Therefore, in LinearPartition we do not use <italic>k</italic>-best parsing as in LinearFold, and the runtime is <inline-formula id="IE111"><mml:math id="IM100"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> instead of <inline-formula id="IE112"><mml:math id="IM101"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>b</mml:mi><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
      <p>Finally, we note that the default beam size <inline-formula id="IE113"><mml:math id="IM102"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math></inline-formula> follows LinearFold and we do not tune it.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <sec>
      <title>4.1 Summary</title>
      <p>The classical <xref rid="btaa460-B41" ref-type="bibr">McCaskill (1990)</xref> algorithm for partition function and base-pairing probabilities calculations are widely used in many studies of RNAs, but its application has been impossible for long sequences (such as full length mRNAs and lncRNAs) due to its cubic runtime. To alleviate this, we design LinearPartition, a linear-time algorithm that dramatically reduces the runtime without sacrificing quality. We confirm that:
</p>
      <list list-type="order">
        <list-item>
          <p>LinearPartition takes only linear runtime and memory usage, and is orders of magnitude faster on longer sequences (<xref ref-type="fig" rid="btaa460-F4">Fig. 4</xref>);</p>
        </list-item>
        <list-item>
          <p>The base-pairing probabilities produced by LinearPartition are better correlated with the ground-truth structures on average (<xref ref-type="fig" rid="btaa460-F5">Figs 5 and 6</xref>);</p>
        </list-item>
        <list-item>
          <p>When used with downstream structure prediction methods such as MEA and ThreshKnot, LinearPartitionhe base pair probabilities have similar overall accuracy (or even a small improvement on MEA structures) compared with RNAfold, as well as better accuracies on longer families and long-distance base pairs (<xref ref-type="fig" rid="btaa460-F7">Fig. 7</xref>);</p>
        </list-item>
        <list-item>
          <p>LinearPartition has a reasonable approximation quality (<xref ref-type="fig" rid="btaa460-F8">Figs 8 and 9</xref>) in terms of RMSD.</p>
        </list-item>
      </list>
      <p>There are two possible reasons why our approximation results in better base-pairing probabilities:
</p>
      <list list-type="order">
        <list-item>
          <p>This is consistent with the findings in LinearFold, where approximate folding via beam search yields more accurate structures.</p>
        </list-item>
        <list-item>
          <p>LinearPartitionin pruning of low-probability (sub)structures has a ‘regularization’ effect. It eliminates some noise in the current energy model which is highly inaccurate, especially for long-distance interactions.</p>
        </list-item>
      </list>
      <p>The success of LinearPartition is arguably more striking than LinearFold, since the former needs to sum up exponentially many structures that capture the bulk part of the ensemble free energy, while the latter only needs to find one single optimal structure.</p>
    </sec>
    <sec>
      <title>4.2 Extensions</title>
      <p>Our work has potential extensions.
</p>
      <list list-type="order">
        <list-item>
          <p>Existing methods and tools for bimolecular and multistrand base-pairing probabilities as well as accessibility computation (<xref rid="btaa460-B8" ref-type="bibr">Bernhart <italic>et al.</italic>, 2006b</xref>; <xref rid="btaa460-B10" ref-type="bibr">Chitsaz <italic>et al.</italic>, 2009</xref>; <xref rid="btaa460-B13" ref-type="bibr">DiChiacchio <italic>et al.</italic>, 2016</xref>; <xref rid="btaa460-B15" ref-type="bibr">Dirks <italic>et al.</italic>, 2007</xref>) are rather slow, which limits their applications on long sequences. LinearPartition will likely provide a much faster solution for these problems.</p>
        </list-item>
        <list-item>
          <p>We will linearize the partition function-based heuristic methods for pseudoknot prediction such as IPknot and Dotknot. These heuristic methods use rather simple criteria to choose pairs from the base-pairing probability matrix, and their runtime bottleneck is still the <inline-formula id="IE114"><mml:math id="IM103"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-time calculation of the base-pairing probabilities. With LinearPartition we can overcome the costly bottleneck to get an overall much faster tool.</p>
        </list-item>
        <list-item>
          <p>We can also speed up stochastic sampling of RNA secondary structures from Boltzmann distribution. The standard stochastic sampling algorithm runs in worst-case <inline-formula id="IE115"><mml:math id="IM104"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time (<xref rid="btaa460-B14" ref-type="bibr">Ding and Lawrence, 2003</xref>), but relies on the classical <inline-formula id="IE116"><mml:math id="IM105"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> partition function calculation. With LinearPartition, we can apply stochastic sampling to full length sequences such as mRNAs, and compute their accessibility based on sampled structures.</p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>4.3 Related work</title>
      <p>There are other algorithmic efforts to speed up RNA folding and partition function calculation, including sparsification (<xref rid="btaa460-B4" ref-type="bibr">Backofen <italic>et al.</italic>, 2011</xref>; <xref rid="btaa460-B11" ref-type="bibr">Chitsaz <italic>et al.</italic>, 2013</xref>). But our work differs from those efforts in the following ways: (i) our dynamic programming is left-to-right and theirs are bottom-up; (ii) our work guarantees linear runtime while theirs cannot; (iii) our search is inexact while theirs are exact.</p>
      <p>A local partition function calculation (<xref rid="btaa460-B7" ref-type="bibr">Bernhart <italic>et al.</italic>, 2006a</xref>; <xref rid="btaa460-B26" ref-type="bibr">Kiryu <italic>et al.</italic>, 2008</xref>), on the other hand, also achieves linear runtime but can only consider pairs up to a fixed window size. <xref ref-type="fig" rid="btaa460-F5">Figure 5</xref> shows the difference between the results of RNAplfold and LinearPartition. But more importantly, as pointed out by (<xref rid="btaa460-B26" ref-type="bibr">Kiryu <italic>et al.</italic>, 2008</xref>), RNAplfold only outputs <italic>approximate</italic> local base-pairing probabilities, because each <inline-formula id="IE117"><mml:math id="IM106"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is computed as an average over local pairing probabilities <inline-formula id="IE118"><mml:math id="IM107"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> from all windows <inline-formula id="IE119"><mml:math id="IM108"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo>+</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> that contain the (<italic>i</italic>, <italic>j</italic>) pair. We further note that this approximation actually leads to a much more serious problem that the base-pairing probabilities do <italic>not</italic> normalize. Indeed, <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref> shows that, strikingly, almost all sequences in the ArchiveII dataset have at least one nucleotide whose unpaired probability from RNAplfold is negative, and about 40% of nucleotides in all sequences have that problem.</p>
      <p>To compare RNAplfold and our work, we cannot use ensemble defect because RNAplfold’s unpaired probabilities can be negative. Furthermore, RNAplfold can only output (approximate) local base pair probabilities, and cannot output the partition function or the Boltzmann probabilities, making it impossible to do stochastic sampling (<xref rid="btaa460-B14" ref-type="bibr">Ding and Lawrence, 2003</xref>).</p>
      <p>So we compare the RMSDs. To do a fair comparison between two very different algorithms, we plot in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S11</xref> the RMSD against runtime, with varying <italic>L</italic> (window size) for RNAplfold and <italic>b</italic> (beam size) for LinearPartition. It is clear that LinearPartition can achieve substantially lower RMSDs with the same amount of computing time.</p>
    </sec>
    <sec>
      <title>4.4 Limitations</title>
      <p>Our work still has the following limitations:
</p>
      <list list-type="order">
        <list-item>
          <p>We are unable to derive any guarantee of the approximation quality due to the ‘hard beam’ heuristic in pruning (only allowing a fixed number of states in each step). But, we also note that it is this very heuristic that guarantees linear runtime. An approximation guarantee would be possible if we had used a ‘soft beam’ heuristic that allows all states above a threshold to survive, but with the cost of linear runtime.</p>
        </list-item>
        <list-item>
          <p>LinearPartition seems to be slightly worse on random sequences than natural sequences, and even worse on some special designed sequences such as <inline-formula id="IE120"><mml:math id="IM109"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="normal">G</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, i.e. repetitions of 6 C’s followed by 6 G’s, which would have rather flat distributions as there are so many competing pairing options. This is because the non-natural sequences tend to fold less selectively to probable structures (<xref rid="btaa460-B20" ref-type="bibr">Fu <italic>et al.</italic>, 2015</xref>), thus their distributions (both Boltzmann and base-pairing probabilities) are ‘flatter’ (i.e. higher entropy). This makes it harder for beam search to capture the bulk part of the ensemble free energy. <xref ref-type="fig" rid="btaa460-F9">Figure 9B</xref> confirms the RMSDs of <inline-formula id="IE121"><mml:math id="IM110"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:msup><mml:mrow><mml:mi mathvariant="normal">G</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is higher than random sequences, which are in turn higher than natural sequences.</p>
        </list-item>
      </list>
      <p>
        <italic>Author Contributions</italic>
      </p>
      <p>
        <italic>L.H. conceived the idea and directed the project. H.Z., L.H., and D.H.M. designed the algorithm, and H.Z. implemented it. D.H.M. guided the evaluation that H.Z. and L.Z. carried out. H.Z., L.H., and D.H.M. wrote the manuscript.</italic>
      </p>
      <p>
        <italic>Funding</italic>
      </p>
      <p>
        <italic>This work is supported in part by National Institutes of Health (R01 GM076485 to D.H.M.) and National Science Foundation (IIS-1817231 to L.H.).</italic>
      </p>
      <p>
        <italic>Acknowledgements</italic>
      </p>
      <p>
        <italic>We thank Kaibo Liu for designing the web server, Dezhong Deng for early discussions, and Rhiju Das for integrating LinearPartition into the EteRNA game.</italic>
      </p>
      <p><italic>Conflict of Interest</italic>: none declared.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btaa460_Supplementary_Data</label>
      <media xlink:href="btaa460_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa460-B8265828">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aghaeepour</surname><given-names>N.</given-names></name><name name-style="western"><surname>Hoos</surname><given-names>H. H.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Ensemble-based prediction of RNA secondary structures</article-title>. <source>BMC Bioinformatics</source>, <bold>14</bold>, <pub-id pub-id-type="doi">10.1186/1471-2105-14-139</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B0883913">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Andronescu</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>Efficient parameter estimation for RNA secondary structure prediction</article-title>. <source>Bioinformatics</source>, <bold>23</bold>, <fpage>i19</fpage>–<lpage>i28</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btm223</pub-id><pub-id pub-id-type="pmid">17646296</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bachellerie</surname><given-names>J.P.</given-names></name></person-group><etal>et al</etal> (<year>2002</year>) 
<article-title>The expanding snoRNA world</article-title>. <source>Biochimie</source>, <volume>84</volume>, <fpage>775</fpage>–<lpage>790</lpage>.<pub-id pub-id-type="pmid">12457565</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Backofen</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Sparse RNA folding: time and space efficient algorithms</article-title>. <source>J. Discrete Algorithms</source>, <volume>9</volume>, <fpage>12</fpage>–<lpage>31</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Baker</surname><given-names>J.K.</given-names></name></person-group> (<year>1979</year>) 
<article-title>Trainable grammars for speech recognition</article-title>. <source>J. Acoust. Soc. Am</source>., <volume>65</volume>, <fpage>S132</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bellaousov</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group> (<year>2010</year>) 
<article-title>Probknot: fast prediction of RNA secondary structure including pseudoknots</article-title>. <source>RNA</source>, <volume>16</volume>, <fpage>1870</fpage>–<lpage>1880</lpage>.<pub-id pub-id-type="pmid">20699301</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bernhart</surname><given-names>S.H.</given-names></name></person-group><etal>et al</etal> (<year>2006</year>a) 
<article-title>Local RNA base pairing probabilities in large sequences</article-title>. <source>Bioinformatics</source>, <volume>22</volume>, <fpage>614</fpage>–<lpage>615</lpage>.<pub-id pub-id-type="pmid">16368769</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bernhart</surname><given-names>S.H.</given-names></name></person-group><etal>et al</etal> (<year>2006</year>b) 
<article-title>Partition function and base pairing probabilities of RNA heterodimers</article-title>. <source>Algorithms Mol. Biol</source>., <volume>1</volume>, <fpage>3</fpage>.<pub-id pub-id-type="pmid">16722605</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cannone</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2002</year>) 
<article-title>The comparative RNA web (CRW) site: an online database of comparative sequence and structure information for ribosomal, intron, and other RNAs</article-title>. <source>BMC Bioinformatics</source>, <volume>3</volume>, <fpage>2</fpage>.<pub-id pub-id-type="pmid">11869452</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chitsaz</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>A partition function algorithm for interacting nucleic acid strands</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>i365</fpage>–<lpage>73</lpage>.<pub-id pub-id-type="pmid">19478011</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chitsaz</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>An efficient algorithm for upper bound on the partition function of nucleic acids</article-title>. <source>J. Comput. Biol</source>., <volume>20</volume>, <fpage>486</fpage>–<lpage>494</lpage>.<pub-id pub-id-type="pmid">23829650</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cordero</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Das</surname><given-names>R.</given-names></name></person-group> (<year>2015</year>) 
<article-title>Rich RNA structure landscapes revealed by mutate-and-map analysis</article-title>. <source>PLoS Comput. Biol</source>., <volume>11</volume>, <fpage>e1004473</fpage>.<pub-id pub-id-type="pmid">26566145</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>DiChiacchio</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>AccessFold: predicting RNA-RNA interactions with consideration for competing self-structure</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>1033</fpage>–<lpage>1039</lpage>.<pub-id pub-id-type="pmid">26589271</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ding</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Lawrence</surname><given-names>C.E.</given-names></name></person-group> (<year>2003</year>) 
<article-title>A statistical sampling algorithm for RNA secondary</article-title>. <source>Nucleic Acids Res</source>., <volume>31</volume>, <fpage>7280</fpage>–<lpage>7301</lpage>.<pub-id pub-id-type="pmid">14654704</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dirks</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>Thermodynamic analysis of interacting nucleic acid strands</article-title>. <source>SIAM Rev</source>., <volume>49</volume>, <fpage>65</fpage>–<lpage>88</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Do</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2006</year>) 
<article-title>CONTRAfold: RNA secondary structure prediction without physics-based models</article-title>. <source>Bioinformatics</source>, <volume>22</volume>, <fpage>e90</fpage>–<lpage>e98</lpage>.<pub-id pub-id-type="pmid">16873527</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Doudna</surname><given-names>J.A.</given-names></name>, <name name-style="western"><surname>Cech</surname><given-names>T.R.</given-names></name></person-group> (<year>2002</year>) 
<article-title>The chemical repertoire of natural ribozymes</article-title>. <source>Nature</source>, <volume>418</volume>, <fpage>222</fpage>–<lpage>228</lpage>.<pub-id pub-id-type="pmid">12110898</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eddy</surname><given-names>S.R.</given-names></name></person-group> (<year>2001</year>) 
<article-title>Non-coding RNA genes and the modern RNA world</article-title>. <source>Nat. Rev. Genet</source>., <volume>2</volume>, <fpage>919</fpage>–<lpage>929</lpage>.<pub-id pub-id-type="pmid">11733745</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Flores</surname><given-names>S.C.</given-names></name>, <name name-style="western"><surname>Altman</surname><given-names>R.B.</given-names></name></person-group> (<year>2010</year>) 
<article-title>Turning limited experimental information into 3d models of RNA</article-title>. <source>RNA</source>, <volume>16</volume>, <fpage>1769</fpage>–<lpage>1778</lpage>.<pub-id pub-id-type="pmid">20651028</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fu</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Discovery of novel ncRNA sequences in multiple genome alignments on the basis of conserved and stable secondary structures</article-title>. <source>PLoS One</source>, <volume>10</volume>, <fpage>e0130200</fpage>.<pub-id pub-id-type="pmid">26075601</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Garcia-Martin</surname><given-names>J.A.</given-names></name>, <name name-style="western"><surname>Clote</surname><given-names>P.</given-names></name></person-group> (<year>2015</year>) 
<article-title>RNA thermodynamic structural entropy</article-title>. <source>PLoS One</source>, <volume>10</volume>, <fpage>e0137859</fpage>.<pub-id pub-id-type="pmid">26555444</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B22">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Chiang</surname><given-names>D.</given-names></name></person-group> (<year>2005</year>). Better k-best parsing. In: <italic>Proceedings of the Ninth International Workshop on Parsing Technologies</italic>, pp. <fpage>53</fpage>–<lpage>64</lpage>. Association for Computational Linguistics, Vancouver, British Columbia.</mixed-citation>
    </ref>
    <ref id="btaa460-B23">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Sagae</surname><given-names>K.</given-names></name></person-group> (<year>2010</year>). Dynamic programming for linear-time incremental parsing. In: <italic>Proceedings of ACL 2010</italic>, pp. <fpage>1077</fpage>–<lpage>1086</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>LinearFold: linear-time approximate RNA folding by 5’-to-3’ dynamic programming and beam search</article-title>. <source>Bioinformatics</source>, <volume>35</volume>, <fpage>i295</fpage>–<lpage>i304</lpage>.<pub-id pub-id-type="pmid">31510672</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huynen</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>1997</year>) 
<article-title>Assessing the reliability of RNA folding using statistical mechanics</article-title>. <source>J. Mol. Biol</source>., <volume>267</volume>, <fpage>1104</fpage>–<lpage>1112</lpage>.<pub-id pub-id-type="pmid">9150399</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kiryu</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) 
<article-title>Rfold: an exact algorithm for computing local base pairing probabilities</article-title>. <source>Bioinformatics</source>, <volume>24</volume>, <fpage>367</fpage>–<lpage>373</lpage>.<pub-id pub-id-type="pmid">18056736</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Knudsen</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Hein</surname><given-names>J.</given-names></name></person-group> (<year>2003</year>) 
<article-title>Pfold: RNA secondary structure prediction using stochastic context-free grammars</article-title>. <source>Nucleic Acids Res</source>., <volume>31</volume>, <fpage>3423</fpage>–<lpage>3428</lpage>.<pub-id pub-id-type="pmid">12824339</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lai</surname><given-names>W.-J.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>mRNAs and lncRNAs intrinsically form secondary structures with short end-to-end distances</article-title>. <source>Nat. Commun</source>., <volume>9</volume>, <fpage>4328</fpage>.<pub-id pub-id-type="pmid">30337527</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lange</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Global or local? Predicting secondary structure and accessibility in mRNAs</article-title>. <source>Nucleic Acids Res</source>., <volume>40</volume>, <fpage>5215</fpage>–<lpage>5226</lpage>.<pub-id pub-id-type="pmid">22373926</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Long</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>Potent effect of target structure on microRNA function</article-title>. <source>Nat. Struct. Mol. Biol</source>., <volume>14</volume>, <fpage>287</fpage>–<lpage>294</lpage>.<pub-id pub-id-type="pmid">17401373</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lorenz</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>ViennaRNA package 2.0</article-title>. <source>Algorithms Mol. Biol</source>., <volume>6</volume>, <fpage>1</fpage>.<pub-id pub-id-type="pmid">21235792</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lu</surname><given-names>Z.J.</given-names></name>, <name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group> (<year>2008</year>) 
<article-title>Efficient siRNA selection using hybridization thermodynamics</article-title>. <source>Nucleic Acids Res</source>., <volume>36</volume>, <fpage>640</fpage>–<lpage>647</lpage>.<pub-id pub-id-type="pmid">18073195</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lu</surname><given-names>Z.J.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Improved RNA secondary structure prediction by maximizing expected pair accuracy</article-title>. <source>RNA</source>, <volume>15</volume>, <fpage>1805</fpage>–<lpage>1813</lpage>.<pub-id pub-id-type="pmid">19703939</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lyngsø</surname><given-names>R.B.</given-names></name>, <name name-style="western"><surname>Pedersen</surname><given-names>C.N.S.</given-names></name></person-group> (<year>2000</year>) 
<article-title>RNA pseudoknot prediction in energy-based models</article-title>. <source>J. Comput. Biol</source>., <volume>7</volume>, <fpage>409</fpage>–<lpage>427</lpage>.<pub-id pub-id-type="pmid">11108471</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lyumkis</surname><given-names>D.</given-names></name></person-group> (<year>2019</year>) 
<article-title>Challenges and opportunities in cryo-EM single-particle analysis</article-title>. <source>J. Biol. Chem</source>., <volume>294</volume>, <fpage>5181</fpage>–<lpage>5197</lpage>.<pub-id pub-id-type="pmid">30804214</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group> (<year>2004</year>) 
<article-title>Using an RNA secondary structure partition function to determine confidence in base pairs predicted by free energy minimization</article-title>. <source>RNA</source>, <volume>10</volume>, <fpage>1178</fpage>–<lpage>1190</lpage>.<pub-id pub-id-type="pmid">15272118</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group> (<year>2006</year>) 
<article-title>Revolutions in RNA secondary structure prediction</article-title>. <source>J. Mol. Biol</source>., <volume>359</volume>, <fpage>526</fpage>–<lpage>532</lpage>.<pub-id pub-id-type="pmid">16500677</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name>, <name name-style="western"><surname>Turner</surname><given-names>D.H.</given-names></name></person-group> (<year>2006</year>) 
<article-title>Prediction of RNA secondary structure by free energy minimization</article-title>. <source>Curr. Opin. Struct. Biol</source>., <volume>16</volume>, <fpage>270</fpage>–<lpage>278</lpage>.<pub-id pub-id-type="pmid">16713706</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group><etal>et al</etal> (<year>1999</year>) 
<article-title>Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure</article-title>. <source>J. Mol. Biol</source>., <volume>288</volume>, <fpage>911</fpage>–<lpage>940</lpage>.<pub-id pub-id-type="pmid">10329189</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>101</volume>, <fpage>7287</fpage>–<lpage>7292</lpage>.<pub-id pub-id-type="pmid">15123812</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McCaskill</surname><given-names>J.S.</given-names></name></person-group> (<year>1990</year>) 
<article-title>The equilibrium partition function and base pair probabilities for RNA secondary structure</article-title>. <source>Biopolymers</source>, <volume>29</volume>, <fpage>1105</fpage>–<lpage>1119</lpage>.<pub-id pub-id-type="pmid">1695107</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Miao</surname><given-names>Z.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>RNA-puzzles round III: 3D RNA structure prediction of five riboswitches and one ribozyme</article-title>. <source>RNA</source>, <volume>23</volume>, <fpage>655</fpage>–<lpage>672</lpage>.<pub-id pub-id-type="pmid">28138060</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nussinov</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Jacobson</surname><given-names>A.B.</given-names></name></person-group> (<year>1980</year>) 
<article-title>Fast algorithm for predicting the secondary structure of single-stranded RNA</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>77</volume>, <fpage>6309</fpage>–<lpage>6313</lpage>.<pub-id pub-id-type="pmid">6161375</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B44">
      <mixed-citation publication-type="journal">RNAcentral Consortium. <etal>et al</etal> (<year>2017</year>) 
<article-title>RNAcentral: a comprehensive database of non-coding RNA sequences</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>D128</fpage>–<lpage>D134</lpage>.<pub-id pub-id-type="pmid">27794554</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B45">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sato</surname><given-names>K.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>IpKnot: fast and accurate prediction of RNA secondary structures with pseudoknots using integer programming</article-title>. <source>Bioinformatics</source>, <volume>27</volume>, <fpage>i85</fpage>–<lpage>i93</lpage>.<pub-id pub-id-type="pmid">21685106</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Seetin</surname><given-names>M.G.</given-names></name>, <name name-style="western"><surname>Mathews</surname><given-names>D.H.</given-names></name></person-group> (<year>2011</year>) 
<article-title>Automated RNA tertiary structure prediction from secondary structure and low-resolution restraints</article-title>. <source>J. Comp. Chem</source>., <volume>32</volume>, <fpage>2232</fpage>–<lpage>2244</lpage>.<pub-id pub-id-type="pmid">21509787</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sloma</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Mathews</surname><given-names>D.</given-names></name></person-group> (<year>2016</year>) 
<article-title>Exact calculation of loop formation probability identifies folding motifs in RNA secondary structures</article-title>. <source>RNA</source>, <volume>22</volume>, <fpage>1808</fpage>–<lpage>1818</lpage>.<pub-id pub-id-type="pmid">27852924</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sperschneider</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Datta</surname><given-names>A.</given-names></name></person-group> (<year>2010</year>) 
<article-title>DotKnot: pseudoknot prediction using the probability dot plot under a refined energy model</article-title>. <source>Nucleic Acids Res</source>., <volume>38</volume>, <fpage>e103</fpage>.<pub-id pub-id-type="pmid">20123730</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B49">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tafer</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2008</year>) 
<article-title>The impact of target site accessibility on the design of effective siRNAs</article-title>. <source>Nat. Biotech</source>., <volume>26</volume>, <fpage>578</fpage>–<lpage>583</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B50">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tinoco</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Bustamante</surname><given-names>C.</given-names></name></person-group> (<year>1999</year>) 
<article-title>How RNA folds</article-title>. <source>J. Mol. Biol</source>., <volume>293</volume>, <fpage>271</fpage>–<lpage>281</lpage>.<pub-id pub-id-type="pmid">10550208</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B51">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xia</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>1998</year>) 
<article-title>Thermodynamic parameters for an expanded nearest-neighbor model for formation of RNA duplexes with Watson Crick base pairs</article-title>. <source>Biochemistry</source>, <volume>37</volume>, <fpage>14719</fpage>–<lpage>14735</lpage>. PMID: 9778347.<pub-id pub-id-type="pmid">9778347</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B52">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zadeh</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Nucleic acid sequence design via efficient ensemble defect optimization</article-title>. <source>J. Comp. Chem</source>., <volume>32</volume>, <fpage>439</fpage>–<lpage>452</lpage>.<pub-id pub-id-type="pmid">20717905</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B53">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Ferré-D’Amaré</surname><given-names>A.R.</given-names></name></person-group> (<year>2014</year>) 
<article-title>New molecular engineering approaches for crystallographic studies of large RNAs</article-title>. <source>Curr. Opin. Struct. Biol</source>., <volume>26</volume>, <fpage>9</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">24607443</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B54">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Keane</surname><given-names>S.</given-names></name></person-group> (<year>2019</year>) 
<article-title>Advances that facilitate the study of large RNA structure and dynamics by nuclear magnetic resonance spectroscopy</article-title>. <source>Wiley Interdiscip. Rev</source>., <volume>10</volume>, <fpage>e1541</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa460-B55">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>). 
<article-title>ThreshKnot: Thresholded ProbKnot for improved RNA secondary structure prediction</article-title>. <italic>arXiv 1912.12796.</italic><ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1912.12796">https://arxiv.org/abs/1912.12796</ext-link>.</mixed-citation>
    </ref>
    <ref id="btaa460-B56">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhao</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Noncode 2016: an informative and valuable data source of long non-coding RNAs</article-title>. <source>Nucleic Acids Res</source>., <volume>44</volume>, <fpage>D203</fpage>–<lpage>D208</lpage>.<pub-id pub-id-type="pmid">26586799</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B57">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zuber</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>A sensitivity analysis of RNA folding nearest neighbor parameters identifies a subset of free energy parameters with the greatest impact on RNA secondary structure prediction</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>6168</fpage>–<lpage>6176</lpage>.<pub-id pub-id-type="pmid">28334976</pub-id></mixed-citation>
    </ref>
    <ref id="btaa460-B58">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zuker</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Stiegler</surname><given-names>P.</given-names></name></person-group> (<year>1981</year>) 
<article-title>Optimal computer folding of large RNA sequences using thermodynamics and auxiliary information</article-title>. <source>Nucleic Acids Res</source>., <volume>9</volume>, <fpage>133</fpage>–<lpage>148</lpage>.<pub-id pub-id-type="pmid">6163133</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10193333</article-id>
    <article-id pub-id-type="publisher-id">9373</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-023-09373-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>A new profiling approach for DNA sequences based on the nucleotides' physicochemical features for accurate analysis of SARS-CoV-2 genomes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Akbari Rokn Abadi</surname>
          <given-names>Saeedeh</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mohammadi</surname>
          <given-names>Amirhossein</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Koohi</surname>
          <given-names>Somayyeh</given-names>
        </name>
        <address>
          <email>koohi@sharif.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.412553.4</institution-id><institution-id institution-id-type="ISNI">0000 0001 0740 9747</institution-id><institution>Department of Computer Engineering, </institution><institution>Sharif University of Technology, </institution></institution-wrap>Tehran, Iran </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>266</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">The prevalence of the COVID-19 disease in recent years and its widespread impact on mortality, as well as various aspects of life around the world, has made it important to study this disease and its viral cause. However, very long sequences of this virus increase the processing time, complexity of calculation, and memory consumption required by the available tools to compare and analyze the sequences.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We present a new encoding method, named PC-mer, based on the k-mer and physic-chemical properties of nucleotides. This method minimizes the size of encoded data by around 2<sup> k</sup> times compared to the classical k-mer based profiling method. Moreover, using PC-mer, we designed two tools: 1) a machine-learning-based classification tool for coronavirus family members with the ability to recive input sequences from the NCBI database, and 2) an alignment-free computational comparison tool for calculating dissimilarity scores between coronaviruses at the genus and species levels.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PC-mer achieves 100% accuracy despite the use of very simple classification algorithms based on Machine Learning. Assuming dynamic programming-based pairwise alignment as the ground truth approach, we achieved a degree of convergence of more than 98% for coronavirus genus-level sequences and 93% for SARS-CoV-2 sequences using PC-mer in the alignment-free classification method. This outperformance of PC-mer suggests that it can serve as a replacement for alignment-based approaches in certain sequence analysis applications that rely on similarity/dissimilarity scores, such as searching sequences, comparing sequences, and certain types of phylogenetic analysis methods that are based on sequence comparison.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12864-023-09373-7.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>SARS-CoV-2</kwd>
      <kwd>Classification</kwd>
      <kwd>Comparison</kwd>
      <kwd>k-mer</kwd>
      <kwd>Alignment-free</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par9">In 2019, a new virus has emerged called SARS-CoV-2 (severe acute respiratory syndrome coronavirus-2), which causes severe illness. The World Health Organization (WHO) declared this disease, known as COVID-19 (coronavirus disease 2019), a global pandemic on March 11, 2020 [<xref ref-type="bibr" rid="CR1">1</xref>]. COVID-19 has now spread to over 184 countries and has infected more than 400 million individuals. Coronaviruses are enveloped, linear, positive-sense, and single-stranded RNA viruses, and have the largest viral genomes among all RNA viruses, measuring around 30 kb [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. During a virus outbreak, understanding the taxonomic classification of apathogenic and specied and its relationship to other pathogens can help with the development of appropriate mitigation strategies, containment, treatment, and decisions on the methods and measures appropriate for identifying viruses, controlling their transmission rates, and limiting potential consequences [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p id="Par10">The early identification of SARS-CoV-2 as a close relative of MERS-CoV and SARS could potentially benefit global efforts to design and develop a vaccines and therapeutic drugs for SARS-CoV-2. This is because it would lead to an improved understanding of the disease progression, host–pathogen interactions, and potential treatment strategies [<xref ref-type="bibr" rid="CR2">2</xref>]. However, the classification of SARS-CoV-2 is not a simple task due to its significant genetic similarities to other Coronaviridae viruses. This could result in incorrect findings and false positives [<xref ref-type="bibr" rid="CR4">4</xref>]. Coronavirus genomes, like other RNA viruses, are known for their genomic plasticity, which can be attributed to factors such as high mutation rates ranging from 1 in 1000 to 1 in 10,000 nucleotides during replication, the use of a template-switching mechanism that results in high rates of homologous RNA recombination between viral genomes, and a large genome size that leads to a high incidence of mutation. As a result,the genomes of coronavirus today are more flexible and varied [<xref ref-type="bibr" rid="CR3">3</xref>]. SARS-CoV-2 has been classified using various methodologies, including both alignment-based and alignment-free categories, which is similar to the methods used for other species [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>]. To achieve this classification, many types of data have been analyzed, such as whole genomes, partial genomes, protein data, and even medical images, like CT scans of the lungs [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>]. For instance, research conducted by comparing whole genome and viral proteins has shown that SARS-CoV-2 belongs to lineage B (Sarbecovirus) of Betacoronavirus. Furthermore, through the phylogenetic investigation of the RdRp protein, spike proteins, and complete genomes, a close relationship between SARS-CoV-2 and two bat SARS-like coronaviruses, bat-SL-COVZXC21 and bat-SL-COVZC45, identified in Chinese horseshoe bats Rhinolophus sinicus, has been revealed. These findings, as well as others, have been examined in numerous studies [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], which mostly adopt alignment-based methods. However, while alignment-based approaches have proved effective in detecting sequence similarities, their application can be challenging in certain circumstances [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. With the improvement of sequencing technology and an increase in the number of sequenced genomes, the usage of alignment-free approaches for sequence comparison has been on the rise [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR7">7</xref>].</p>
    <p id="Par11">An alignment-free approach [<xref ref-type="bibr" rid="CR8">8</xref>] is a method of measuring sequence similarity or dissimilarity without using or producing aligned sequences during any stage of the algorithm implementation. This approach is faster, uses fewer resources, and is more robust to structural variation compared to alignment-based approaches. Additionally, alignment-free methods can be used in cases where alignment cannot safely handle low sequence conservation. These benefits make alignment-free approaches useful for comparing and categorizing viruses. Various alignment-free methods have been developed specifically for SARS-CoV-2 in recent years. For instance, authors in [<xref ref-type="bibr" rid="CR3">3</xref>] utilized the MLDSP approach [<xref ref-type="bibr" rid="CR9">9</xref>] to classify SARS-CoV-2, which was developed earlier for other species. MLDSP combines supervised machine learning and FCGR (Frequency of Chaos Game Representation) methods. FCGR representation [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR10">10</xref>] is a well-known encoding approach that uses k-mers' frequencies for taxonomic classification of genomic sequences. To detect SARS-CoV-2, the researchers employed six supervised machine learning classifiers (linear discriminant, linear support vector machine, quadratic support vector machine, fine KNN (K-Nearest Neighbors), subspace discriminant, and subspace KNN). MLDSP utilizes machine learning classifiers trained with samples from four Coronaviridae families and tests them on 29 SARS-CoV-2 genome sequences to identify the correct cluster [<xref ref-type="bibr" rid="CR3">3</xref>]. However, this method has a drawback: it uses six machine learning classifiers, making it difficult to choose the best one. Additionally, in [<xref ref-type="bibr" rid="CR3">3</xref>], samples are classified at the genus level rather than the more crucial and challenging species or inner-species level. Despite this weakness, [<xref ref-type="bibr" rid="CR3">3</xref>] is one of the most significant and attractive SARS-CoV-2 approaches to date.</p>
    <p id="Par12">GSP [<xref ref-type="bibr" rid="CR11">11</xref>] proposes two approaches for distinguishing SARS-CoV-2, SARS-CoV, and MERS-CoV viruses, both based on K-nearest neighbors and trainable cascade forward back-propagation neural networks, making it another method for classifying SARS-CoV-2. It uses a discrete Fourier transform (DFT), a discrete cosine transform (DCT), and the seven-moment invariants to extract genomic signal processing features from each sequence. GSP [<xref ref-type="bibr" rid="CR11">11</xref>] utilizes a dataset of 76 genome sequences for each coronavirus type. The simulation results indicate that the KNN algorithm performs better in all SARS-CoV-2/SARS-CoV, SARS-CoV-2/MERS-CoV, and SARS-CoV-2/SARS-CoV/MERS-CoV classification processes, with 100% accuracy. One of the method's key advantages is the limited number of extraction attributes recovered by each approach, just nine for each sequence. However, like MLDSP [<xref ref-type="bibr" rid="CR3">3</xref>] and GSP [<xref ref-type="bibr" rid="CR11">11</xref>], the classification capability of SARS-CoV-2 using a small number of distinct and easily classifiable clusters is limited. To overcome these concerns, various classification approaches for SARS-CoV-2 are continuously being developed. For instance, in [<xref ref-type="bibr" rid="CR2">2</xref>], several assessments and methods are proposed for performing classification both between species (SARS-CoV-2, MERS-CoV, Dengue Virus (DENV), Zaire Ebolavirus (EBOV), Hepatitis B virus (HBV), Hepatitis C virus (HCV), Human Immunodeficiency Virus 1 (HIV-1), and Mycobacterium tuberculosis (M. tb)) and within species (SARS-CoV-2 from Africa, Asia, Europe, Oceania, North America, and South America). These methods aim to enhance the classification accuracy of SARS-CoV-2 and provide a more comprehensive understanding of its phylogenetic relationships with other viruses. The dataset used in this study is distinguishable and can be easily classified. The encoding method used is dinucleotide frequency, one of the most commonly used methods, and various assessments were conducted, including principal component analysis (PCA) and t-distributed Stochastic Neighbor Embedding (t-SNE), to analyze the datasets by reducing their dimensionality. The study utilized an unsupervised learning approach through agglomerative hierarchical clustering, multi-class classification, and their binarized forms. In addition to reporting classification accuracy, this study mainly analyzed the frequency of different dinucleotides in different categories, examining the potential of dinucleotides as species signatures [<xref ref-type="bibr" rid="CR2">2</xref>].</p>
    <p id="Par13">Most classification approaches proposed for coronaviruses [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], as well as other viruses like HIV and Influenza A [<xref ref-type="bibr" rid="CR13">13</xref>] and other species such as bacteria or mammals [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>], rely on using the frequencies of k-mers as a distinguishing feature of sequences. After reviewing various studies in this area, it can be concluded that the size of k-mer is directly proportional to the accuracy of classification [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR16">16</xref>]. However, accuracy alone cannot be considered a conclusive metric, and it is necessary to report other metrics like precision and F1-score, although they are often overlooked in many studies [<xref ref-type="bibr" rid="CR3">3</xref>]. Additionally, the memory usage increases exponentially with each unit rise in k-mer size, leading to four times more memory usage. Naturally, there have been other limitations noted in studies of the tools created for SARS-CoV-2 comparison and clustering. These limitations include difficulties distinguishing between closely related virus strains, as well as lower resolution due to the exclusion of genomes with high similarity. Additionally, some tools are unable to detect multiple strains in the case of multi-strain infections [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR17">17</xref>]. Given the limitations of current classification methods, we present an approach in this study to reduce k-mer encoding's memory usage while improving accuracy and other performance metrics. However, reducing memory usage and enhancing the speed and precision of machine learning-based classifiers is not the only aim. The nature of the data used and the level of evolution are also crucial factors to consider. In this work, we introduce a novel encoding method called PC-mer (PhysicoChemical k-mer-based encoding), which utilizes both the FCGR method and the physicochemical properties of nucleotides to reduce k-mer memory size. The proposed encoding method is extremely effective, enabling even the simplest machine learning-based classifier to accurately classify input sequences across various levels of evolution. We have extensively tested this tool on several popular datasets, including the MLDSP dataset, as well as datasets with high similarity between clusters, such as [<xref ref-type="bibr" rid="CR1">1</xref>]. The following are the primary advantages of PC-mer:<list list-type="bullet"><list-item><p id="Par14">The amount of memory usage for storing k-mers is reduced by approximately 2<sup> K</sup>.</p></list-item><list-item><p id="Par15">Classification accuracy is improved, compared to other classifiers such as MLDSP, utilizing a very simple machine learning-based classifier.</p></list-item><list-item><p id="Par16">Training of the machine learning-based classifier is accelerated.</p></list-item><list-item><p id="Par17">No prior knowledge of input data is required.</p></list-item><list-item><p id="Par18">The proposed classifier, taking advantages of PC-mer, achieves high accuracy on a simple personal computer.</p></list-item></list></p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <p id="Par19">As discussed earlier, our new encoding method, PC-mer (PhysicoChemical k-mer-based encoding), reduces the memory size of k-mers by combining the FCGR method with the physicochemical properties of nucleotides. This encoding method is so powerful that even the simplest machine learning-based classifier can classify input sequences accurately at different levels of evolution. In this section, we evaluate the performance of the PC-mer encoding method in two ways: 1) using PC-mer as the input data generator for classification models, and 2) applying PCA (Principal Component Analysis) to make the encoded data by PC-mer more interpretable, thereby evaluating PC-mer's ability to distinguish different classes of input sequences.</p>
    <sec id="Sec3">
      <title>Performance evaluation</title>
      <p id="Par20">The classification results are presented for four different datasets:<list list-type="order"><list-item><p id="Par21">SARS-CoV-2 datasets consisting of seven different levels of taxonomy, namely Test-1, Test-2, Test-3a, Test-3b, Test-4, Test-5, and Test-6. At lower levels, the datasets become more similar to each other.</p></list-item><list-item><p id="Par22">Human coronavirus (Corona) datasets, collected from human samples, which are more challenging to classify compared to SARS-CoV-2 datasets.</p></list-item><list-item><p id="Par23">35 sequences of Human coronavirus used to compare the alignment-free approach based on PC-mer with a well-known alignment-based method.</p></list-item><list-item><p id="Par24">45 SARS-CoV-2 sequences used to compare the alignment-free approach based on PC-mer with a well-known alignment-based method for very similar sequences.</p></list-item></list></p>
    </sec>
    <sec id="Sec4">
      <title>ML-based classification performance</title>
      <p id="Par25">For the machine learning-based evaluations, we utilized a tenfold cross-validation scheme and assessed the results based on commonly used statistical measures, such as accuracy, precision, recall, and F1-score, which are presented in Tables <xref rid="Tab1" ref-type="table">1</xref> and <xref rid="Tab2" ref-type="table">2</xref>. As shown in Table <xref rid="Tab1" ref-type="table">1</xref>, we achieved 97% accuracy using PC-mer encoding and a linear SVM model for the SARS-CoV-2 dataset and Test-1, which is the first level of taxonomy consisting of 3273 sequences divided into 12 clusters (11 families, and Riboviria realm). In this evaluation, we used the PC-mer encoding method as input data. Additionally, compared to the FCGR representation and the best classification model (Quadratic SVM) used by the MLDSP-GUI tool, the proposed encoding method results in a 2% increase in classification accuracy. Additionally, after training the model on the Test-1 dataset, we validated and tested the resulting classifier to predict the labels of 29 SARS-CoV-2 virus sequences, achieving a 100% classification accuracy for the label Riboviria. Moving on to the second dataset (Test-2), which consists of 2777 sequences divided into 12 clusters (Riboviria families), we obtained a classification accuracy of 95.9% using the PC-mer encoding and the Linear SVM classifier. In this dataset, we observed a 4.7% improvement in classification accuracy compared to the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool. Similarly, after training the model on Test-2 dataset, we validated and tested the resulting classifier to predict the labels of 29 SARS-CoV-2 virus sequences, achieving a 100% classification accuracy for the label Coronaviridae.<table-wrap id="Tab1"><label>Table I</label><caption><p>Investigating the encoding capability of the PC-mer (using only Linear SVM classifier) vs. that of the FCGR (using six classifiers: Linear Discriminant (LD), Linear SVM (LSVM), Quadratic SVM (QSVM), Fine KNN (FKNN), Subspace Discriminant (SD), and Subspace KNN (SKNN)) as the encoding methods for generating input vectors</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2"><italic>Encoding algorithm</italic></th><th align="left" rowspan="2"><italic>k-mer</italic></th><th align="left" rowspan="2"><italic>Classification model</italic></th><th align="left" rowspan="2"><italic>Metrics</italic></th><th align="left" colspan="8"><italic>Datasets (%)</italic></th></tr><tr><th align="left"><bold><italic>Test-1</italic></bold></th><th align="left"><bold><italic>Test-2</italic></bold></th><th align="left"><bold><italic>Test-3a</italic></bold></th><th align="left"><bold><italic>Test-3b</italic></bold></th><th align="left"><bold><italic>Test-4</italic></bold></th><th align="left"><bold><italic>Test-5</italic></bold></th><th align="left"><bold><italic>Test-6</italic></bold></th><th align="left"><bold><italic>Human Coronavirus</italic></bold></th></tr></thead><tbody><tr><td align="left" rowspan="4">PC-mer</td><td align="left" rowspan="4">12</td><td align="left" rowspan="4">Linear SVM</td><td align="left">Accuracy</td><td align="left"><bold>97.25</bold></td><td align="left"><bold>95.93</bold></td><td char="." align="char"><bold>98.52</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>99.33</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">F1</td><td align="left">97.23</td><td align="left">95.9</td><td char="." align="char">98.49</td><td align="left">100</td><td align="left">100</td><td align="left">99.36</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">Precision</td><td align="left">97.38</td><td align="left">96.16</td><td char="." align="char">98.85</td><td align="left">100</td><td align="left">100</td><td align="left">99.55</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">Recall</td><td align="left">97.25</td><td align="left">95.93</td><td char="." align="char">98.52</td><td align="left">100</td><td align="left">100</td><td align="left">99.33</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left" rowspan="7">FCGR</td><td align="left" rowspan="7">7</td><td align="left">LD</td><td align="left" rowspan="6">Accuracy</td><td align="left">91.7</td><td align="left">91.2</td><td char="." align="char">98.1</td><td align="left"><bold>100</bold></td><td align="left">97.6</td><td align="left">98.6</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">LSVM</td><td align="left">90.8</td><td align="left">89.2</td><td char="." align="char">94.2</td><td align="left">93.3</td><td align="left">98.4</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">QSVM</td><td align="left">95</td><td align="left">93.1</td><td char="." align="char">95.2</td><td align="left">93.3</td><td align="left">98.4</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">FKNN</td><td align="left">93.4</td><td align="left">90.3</td><td char="." align="char">95.7</td><td align="left">95</td><td align="left">97.6</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">SD</td><td align="left">87.6</td><td align="left">89</td><td char="." align="char">97.6</td><td align="left">95</td><td align="left">98.4</td><td align="left">98.7</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">SKNN</td><td align="left">93.2</td><td align="left">90.4</td><td char="." align="char">96.2</td><td align="left">95</td><td align="left">97.2</td><td align="left">96.1</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left" colspan="2">Average accuracy</td><td align="left">92</td><td align="left">90.5</td><td align="left">96.2</td><td char="." align="char">95.3</td><td align="left">97.6</td><td align="left">97.5</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr></tbody></table></table-wrap><table-wrap id="Tab2"><label>Table 2</label><caption><p>Prediction accuracy of PC-mer for predicting SARS-CoV-2 label in various taxonomic levels</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Training dataset</th><th align="left">Testing dataset</th><th align="left">Prediction accuracy</th><th align="left">Predicted label</th></tr></thead><tbody><tr><td align="left">Test-1</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Riboviria</td></tr><tr><td align="left">Test-2</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Coronaviridae</td></tr><tr><td align="left">Test-3(a\b)</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Betacoronavirus</td></tr></tbody></table></table-wrap></p>
      <p id="Par26">For the third dataset (Test-3a), which consists of 208 sequences divided into 4 classes (Coronaviridae), we obtained 98.5% classification accuracy using the PC-mer encoding and Linear SVM model, slightly higher than the best classification model (Linear Discriminant) used by the MLDSP-GUI tool. Additionally, the trained Linear SVM model successfully predicted the label Betacoronavirus for all 29 SARS-CoV-2 virus sequences, achieving 100% classification accuracy. As for the fourth dataset (Test-3b), which comprises 60 sequences grouped into 3 clusters (Coronaviridae), we achieved 100% classification accuracy using PC-mer encoding and Linear SVM model, similar to the accuracy achieved by the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool [<xref ref-type="bibr" rid="CR9">9</xref>]. Finally, the trained Linear SVM model successfully predicted the label Betacoronavirus for all 29 SARS-CoV-2 virus sequences, resulting in 100% classification accuracy. Moving on to the fifth dataset (Test-4), which consists of 124 sequences divided into 4 clusters (Betacoronavirus), we achieved 100% classification accuracy using the PC-mer encoding and Linear SVM model. Therefore, our proposed encoding method led to a nearly 2% increase in classification accuracy compared to the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool. Similarly, for the 29 SARS-CoV-2 virus sequences in this dataset, the trained Linear SVM model predicted the label Sarbecovirus for all 29 sequences, achieving 100% classification accuracy. For the sixth dataset (Test-5), which includes 153 sequences divided into 5 clusters of Betacoronavirus, excluding SARS-CoV-2 and SARS-CoV-2 virus, we achieved a classification accuracy of 99.3% using the PC-mer encoding and Linear SVM classifier. With this dataset, we were able to improve the classification accuracy by nearly 1% when compared to the best classification model (SubspaceDiscriminant) and FCGR representation used by the MLDSP-GUI tool [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      <p id="Par27">On the other hand, in the seventh dataset (Test-6), which represents the last level of taxonomy and contains 76 sequences divided into 2 clusters (Sarbecovirus and SARS-CoV-2 virus), we achieved 100% classification accuracy using PC-mer encoding, which is similar to the results obtained by all other classification models and the FCGR representation used by the MLDSP-GUI tool. For the latest dataset (coronavirus), which includes 874 human coronavirus sequences divided into 7 clusters, we achieved 100% classification accuracy using PC-mer encoding and the Linear SVM model. We evaluated the performance of the proposed encoding method by its feature extraction capability and its sensitivity to the variation of k-mer size in the range of [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] (see Table S <xref rid="MOESM1" ref-type="media">4</xref> in the supplementary materials). While more detailed results are available in the supplementary materials, Table <xref rid="Tab1" ref-type="table">1</xref> summarizes the classification accuracies for a k-mer size of 12, for the sake of brevity. It is worth noting that PC-mer encoding enables the use of larger k-mers by reducing the size of the encoded data. The proposed encoding is designed to reduce the computational complexity of k-mer extraction and the size of the generated data from <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({4}^{k}\right)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq1.gif"/></alternatives></inline-formula> to <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({2}^{k}\right)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq2.gif"/></alternatives></inline-formula>. For instance, the FCGR approach, assuming k = 7, produces a vector of size 16,384 for each genome sequence, while the PC-mer encoding method, assuming k = 12, produces a vector of size 12,288 for each genomic sequence. This is significantly less than the size of the data generated by the FCGR approach for k = 7. It should be noted that using the FCGR approach and assuming k-mers of size 12 results in an encoded vector with a size of 16,777,216 for each genome sequence. According to the main benefits of the proposed encoding method, PC-mer generates small vectors of size 384 for each genome sequence with k = 7, as opposed to the large vectors generated by the MLDSP tool for k-mers of size 7. Therefore, it can be concluded that the data compression ability of PC-mer significantly reduces runtimes of preprocessing, training, and testing phases while also improving classification accuracy and enabling the use of larger k-mers. These advantages are presented in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, and all experiments were conducted on a standard desktop computer. It should be noted that our pipeline, as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, includes an online data API that allows any standard dataset to be downloaded from NCBI and automatically encoded by PC-mer. Consequently, the encoded data can be utilized for training or testing any arbitrary classifier.<fig id="Fig1"><label>Fig. 1</label><caption><p><bold>a</bold> Accuracy of ML-based classifier based on PC-mer for various k-mer sizes, b) the number of required storage units for PC-mer and FCGR matrices for various values of k</p></caption><graphic xlink:href="12864_2023_9373_Fig1_HTML" id="MO1"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>PC-mer method's pipeline</p></caption><graphic xlink:href="12864_2023_9373_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Evaluating computational comparison</title>
      <p id="Par28">To evaluate the performance of PC-mer in comparison to other computational methods, we utilized the proposed method with a k-mer size of 12 on two additional datasets. Next, we calculated the Manhattan distance between the PC-mer vectors corresponding to each sequence pair, resulting in a distance matrix for each dataset. We then used five alignment-free methods (BBC, NCD, wmetric, word-bool, and word-sets) available in the ALFPY tool [<xref ref-type="bibr" rid="CR8">8</xref>] to comprehensively evaluate and compare PC-mer with well-known alternative methods on the human coronavirus and SARS-CoV-2 datasets. For the evaluation of word-bool and word-sets, we assumed a k-mer size of 7, as mentioned earlier. As a reference comparison result, we performed a global alignment between the two sequences using the pairwise alignment function (Smith-Waterman algorithm) in R with the default configuration, generating another distance matrix. Detailed results can be found in the supplementary materials. Finally, to conduct the comparative study, we computed the correlation coefficient between the six distance matrices generated by PC-mer, BBC, NCD, wmetric, word-bool, and word-sets, and the reference matrix generated by the Smith-Waterman algorithm, as presented in Table <xref rid="Tab3" ref-type="table">3</xref>. It is important to note that the pairwise alignment function is used as a benchmark alignment-based method for sequence comparison [<xref ref-type="bibr" rid="CR8">8</xref>], and its output is considered as the reference result. After performing the various steps of the analysis, we obtained correlation coefficient values of 98.08% and 93.75% for the human dataset and SARS-CoV-2 dataset, respectively. These results demonstrate that, in addition to its usefulness in ML-based comparison approaches, the PC-mer encoding method can also be used by computational algorithms for sequence comparison.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Correlation coefficient between distance matrix obtained from six compared methods PC-mer, CLUSTALW, BBC, NCD, Wmetric, Word-bool, Word-sets with reference Smith-Waterman method</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" colspan="2">Methods</th><th align="left">PC-mer</th><th align="left">BBC</th><th align="left">NCD</th><th align="left">Wmetric</th><th align="left">Word-bool</th><th align="left">Word-sets</th></tr></thead><tbody><tr><td align="left" rowspan="2"><bold>Correlation coefficient</bold></td><td align="left">Human coronaviruses dataset</td><td align="left">0.9808</td><td align="left">0.9490</td><td align="left">0.9463</td><td align="left">0.6738</td><td align="left">0.9796</td><td align="left">0.9797</td></tr><tr><td align="left">SARS-CoV-2 dataset</td><td align="left">0.9374</td><td align="left">0.7860</td><td align="left">0.8847</td><td align="left">0.7046</td><td align="left">0.9297</td><td align="left">0.9292</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec6">
      <title>Analyzing the Discriminability of the PC-mer Coding Using PCA</title>
      <p id="Par29">The ability to distinguish between different classes of input sequences is a fundamental aspect of any encoding method, and its importance cannot be overstated. Discriminatory encoding methods allow for the use of a simple classification algorithm to identify the optimal boundary between distinct clusters, thereby reducing computational costs and preprocessing time required to select the appropriate classification algorithm. Additionally, the proper discrimination of encoded data facilitates the use of dimensionality reduction algorithms that extract global features and reduce the size of input data. As large datasets are increasingly common across many disciplines, it is essential to employ methods that significantly reduce their dimensionality in a meaningful way while retaining most of the information content of the original data. Although numerous techniques have been developed for this purpose, PCA is known to be one of the oldest and most widely used methods. It reduces the dimensionality of a dataset while preserving as much statistical information (i.e., variability) as possible. Therefore, we conducted an experiment to evaluate the discriminability of the PC-mer encoding method after significant dimensionality reduction using PCA. To visually represent the encoded data by the PC-mer method and its degree of discrimination, we reduced the dimension of the encoded data from 12,288 to 3 using the PCA algorithm, assuming a k-mer size of 12. Additionally, for a comparative study, we encoded the data using the FCGR coding, assuming a k-mer size of 7, and reduced its dimensions from 16,384 to 3 using the PCA algorithm. The comparative results confirm the superior discrimination capability of PC-mer compared to FCGR using only 3 dimensions. The three-dimensional diagrams, depicting the PCA results of the PC-mer and FCGR encoding methods, are presented in Figs. <xref rid="Fig3" ref-type="fig">3</xref>, <xref rid="Fig4" ref-type="fig">4</xref>, <xref rid="Fig5" ref-type="fig">5</xref>, <xref rid="Fig6" ref-type="fig">6</xref>, <xref rid="Fig7" ref-type="fig">7</xref>, <xref rid="Fig8" ref-type="fig">8</xref>, <xref rid="Fig9" ref-type="fig">9</xref> and <xref rid="Fig10" ref-type="fig">10</xref> for Corona, Test-1, Test-2, Test-3a, Test-3b, Test-4, Test-5, and Test-6 datasets, respectively. In these figures, the left-side plot displays the PCA of the PC-mer method with k = 12, while the right-side plot illustrates the PCA of the FCGR method with k = 7. Our comparison of these figures reveals that the PC-mer method can discriminate different classes of all datasets more effectively than the widely used FCGR encoding approach, using fewer features and less memory usage than FCGR. For instance, as illustrated in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, PC-mer is able to represent the distance between various samples of Test-1 within a space that is approximately three times larger than that of FCGR in all three dimensions (x, y, and z). Similar improvements are also observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref> through Fig. <xref rid="Fig10" ref-type="fig">10</xref>. As demonstrated in these figures, PC-mer's superior discriminability between different classes leads to enhanced classification performance. It is noteworthy that this improvement is also evident in Fig. <xref rid="Fig7" ref-type="fig">7</xref>, <xref rid="Fig8" ref-type="fig">8</xref>, <xref rid="Fig9" ref-type="fig">9</xref>, and <xref rid="Fig10" ref-type="fig">10</xref>, where the samples are located similarly in three dimensions for both PC-mer and FCGR. As illustrated in these figures, PC-mer exhibits a wider separation between the samples compared to FCGR, thereby providing a better representation of their distances.<fig id="Fig3"><label>Fig. 3</label><caption><p>PCA of PC-mer and FCGR for Human coronaviruses datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig3_HTML" id="MO3"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>PCA of PC-mer and FCGR for test-1 datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig4_HTML" id="MO4"/></fig><fig id="Fig5"><label>Fig. 5</label><caption><p>PCA of PC-mer and FCGR for test-2 datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig5_HTML" id="MO5"/></fig><fig id="Fig6"><label>Fig. 6</label><caption><p>PCA of PC-mer and FCGR for test-3a</p></caption><graphic xlink:href="12864_2023_9373_Fig6_HTML" id="MO6"/></fig><fig id="Fig7"><label>Fig. 7</label><caption><p>PCA of PC-mer and FCGR for test-3b</p></caption><graphic xlink:href="12864_2023_9373_Fig7_HTML" id="MO7"/></fig><fig id="Fig8"><label>Fig. 8</label><caption><p>PCA of PC-mer and FCGR for test-4 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig8_HTML" id="MO8"/></fig><fig id="Fig9"><label>Fig. 9</label><caption><p>PCA of PC-mer and FCGR for test-5 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig9_HTML" id="MO9"/></fig><fig id="Fig10"><label>Fig. 10</label><caption><p>PCA of PC-mer and FCGR for test-6 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig10_HTML" id="MO10"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Discussion</title>
    <p id="Par30">In late December 2019, a novel coronavirus, SARS-CoV-2, was reported in China and quickly spread worldwide. This virus is genetically similar to SARS-CoV and causes a severe illness known as COVID-19, which has resulted in a significant number of deaths worldwide [<xref ref-type="bibr" rid="CR1">1</xref>]. However, identifying SARS-CoV-2 can be challenging since the virus shares genetic similarities with other viruses in the Coronaviridae family, making it difficult to distinguish between them [<xref ref-type="bibr" rid="CR4">4</xref>]. This presents a significant challenge since the detection of SARS-CoV-2 may lead to false positive results due to the presence of other similar viruses [<xref ref-type="bibr" rid="CR4">4</xref>]. Hence, it is crucial to accurately differentiate the SARS-CoV-2 virus from other similar viruses for improving patient diagnosis and managing the outbreak. This time-critical issue demands high-speed sequence comparison and classification of thousands of known sequences to narrow down the possible origin candidates. Therefore, relying on alignment-based methods, which are time-consuming and may not guarantee homologous sequence continuity, can be challenging.</p>
    <p id="Par31">On the other hand, alignment-based methods are not suitable for efficiently comparing a large number of sequences that differ widely in composition [<xref ref-type="bibr" rid="CR3">3</xref>]. To overcome the limitations of alignment-based methods [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR18">18</xref>], several alignment-free methods have been proposed as high-speed alternatives capable of handling a large number of sequences [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]. Furthermore, since alignment-free methods compare homologous or comparable sequences, they can provide accurate and relevant quantitative comparisons even when input sequences originate from diverse locations with varied compositions [<xref ref-type="bibr" rid="CR3">3</xref>]. Despite these advantages, alignment-free methods like MLDSP-FCGR extract a large volume of data per sample, which is <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({4}^{k})$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq3.gif"/></alternatives></inline-formula>. Therefore, there is a trade-off between classification accuracy and computation speed. Specifically, increasing the k-mer size improves classification accuracy at the expense of reducing classification speed and dramatically increasing the volume of generated data. The latter requirement necessitates the use of powerful and specialized processing platforms, such as external servers over the Internet. However, policy, legality, and regulatory issues may prohibit the transmission of patients' sequence data to an external server. Additionally, various concerns about privacy policies and the possibility of data breaches can limit researchers' and clinicians' use of such servers. Therefore, the developed software should be made available as an offline and standalone version. Recently, many data scientists have been extensively researching the virus's remarkable features. Furthermore, artificial intelligence applications and machine learning-based methods have been successfully used to accelerate the diagnosis process and improve the classification accuracy of COVID-19 cases [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. Nevertheless, without a genomic sequence encoding method, a large volume of data is generated per genomic sequence. Therefore, an efficient encoding method can not only enhance the classification accuracy but also enable the utilization of popular machine learning-based models. Furthermore, reducing the volume of generated data, an efficient encoding method can extract large k-mers while improving processing speed on desktop computers. Consequently, as sequencing technology becomes more affordable and accessible, the computational challenges of sequence analysis become increasingly significant. This trend drives the current focus of classifier development towards faster alignment-independent solutions.</p>
    <p id="Par32">In this study, we propose an alignment-free classification method based on a machine learning model that takes advantage of a novel encoding algorithm called PC-mer. This algorithm reduces the volume of generated feature vectors from <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({4}^{k})$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq4.gif"/></alternatives></inline-formula> to <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({2}^{k})$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq5.gif"/></alternatives></inline-formula> per sample, resulting in a reduced amount of data for large k-mer sizes compared to the traditional FCGR method. PC-mer offers several advantages: firstly, it leads to higher classification accuracy of the Coronaviridae family using machine learning algorithms, with no prior adjustments. Secondly, it reduces memory usage by about 2<sup> k</sup> times compared to traditional k-mer based encoding techniques. Finally, our proposed compression encoding method has led to a notable increase in training speed and a significant improvement in classification accuracy for both SARS-CoV-2 and Human coronavirus datasets. As shown in Table <xref rid="Tab1" ref-type="table">1</xref>, our method outperforms the reference methods [<xref ref-type="bibr" rid="CR3">3</xref>] in terms of classification accuracy. Moreover, we have significantly reduced the false positive and false negative rates across various levels of Coronaviridae family, as demonstrated by the confusion matrices in Fig. S1 to Fig. S7 of the supplementary materials.</p>
    <p id="Par33">Based on our simulation study, when using small k-mers, PC-mer achieves comparable or even higher accuracy than the FCGR method across multiple datasets. For instance, when applying PC-mer coding and a Linear SVM model to Test-1, Test-2, Test-3a, Test-3b, and Test-4 datasets with k = 5, we achieved classification accuracies of 94%, 95%, 98%, 100%, and 99%, respectively, as well as 100% classification accuracy for 29 SARS-CoV-2 virus sequences in the test data (see supplemental file "PC-mer-SM" section "Investigating the impact of size k in the PC-mer encoding method"). It is worth noting that the MLDSP tool achieved 93%, 91%, 98%, 100%, 98%, and 99% classification accuracy for the corresponding datasets, respectively, assuming k = 7 as the best k-mer length for the FCGR encoding method and various classifiers. To highlight the compression efficiency of PC-mer, it should be mentioned that the amount of data extracted per sample by the MLDSP tool using a k-mer size of 7 is approximately 170 times greater than that of PC-mer with a k-mer size of 5. Additionally, PC-mer achieved a perfect classification accuracy of 100% with a k-mer size of 1 for the Human Coronavirus dataset obtained from human samples.</p>
    <p id="Par34">As presented in Table S <xref rid="MOESM1" ref-type="media">3</xref>, the length of the longest sequence in the Human coronavirus dataset is 30818, which is significantly larger than the size of the extracted data per sample using PC-mer (which is 12). Thus, the high classification accuracy achieved for various datasets, while significantly reducing the size of the extracted feature vectors per sample, confirms the effectiveness of the PC-mer encoding method in feature extraction. To further investigate this effectiveness, we conducted an experiment to evaluate the discriminability of PC-mer encoding when significant dimensionality reduction (up to 3 features) is performed using Principal Component Analysis (PCA) (as described in Sect. 2.2).</p>
    <p id="Par35">It is noteworthy that the PC-mer encoding method has achieved superior performance without requiring any adjustments when feeding a basic machine learning algorithm, Linear SVM. In addition to its improved classification accuracy, our proposed encoding method significantly reduces the total processing time, including the preprocessing, training, and testing steps. This is due to the efficient encoding algorithm used in PC-mer, which enables the use of simple machine learning models for Coronaviridae family classification on a desktop computer with a CPU processor. Figure <xref rid="Fig11" ref-type="fig">11</xref> illustrates the execution times of the preprocessing, training, and testing steps for the PC-mer encoding method when Linear SVM is used as the classification algorithm. It should be noted that this improvement in execution time can be compared to alternative approaches. Table <xref rid="Tab4" ref-type="table">4</xref> compares the PC-mer and MLDSP-GUI (FCGR) methods for various datasets used in the classification test based on machine learning. It should be noted that the processing system used for execution significantly affects the comparison results. Specifically, MLDSP-GUI (FCGR) [<xref ref-type="bibr" rid="CR9">9</xref>] was developed on an ASUS ROG G752VS computer with 4 cores (8 threads) with a 2.7 GHz Intel Core i7 6820HK processor and 64 GB DD4 2400 MHz SDRAM, which has four times more processing cores than our system. These advanced features considered for executing MLDSP-GUI (FCGR), such as large RAMs, significantly improve the execution time. On the other hand, implementing MLDSP-GUI (FCGR) on a similar processing system to ours leads to an execution time four times longer than that of PC-mer. To ensure a fair comparison, in Table <xref rid="Tab4" ref-type="table">4</xref>, we scaled down the PC-mer execution time by a factor of four. However, in reality, the reduction in PC-mer's execution time would be more than four times if the influence of RAM is also considered. As per the table, the improvements in execution time range from 20% for larger datasets to 70% for smaller datasets, with an average improvement of 44% across all datasets.<fig id="Fig11"><label>Fig. 11</label><caption><p>Execution times of the preprocessing, training, and testing steps of the PC-mer encoding method, assuming Linear SVM as the classification algorithm</p></caption><graphic xlink:href="12864_2023_9373_Fig11_HTML" id="MO11"/></fig><table-wrap id="Tab4"><label>Table 4</label><caption><p>Execution times (in Second) of the preprocessing, training, and testing steps of the PC-mer and MLDSP-GUI</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"><bold>Test-1</bold></th><th align="left"><bold>Test-2</bold></th><th align="left"><bold>Test-3a</bold></th><th align="left"><bold>Test-3b</bold></th><th align="left"><bold>Test-4</bold></th><th align="left"><bold>Test-5</bold></th><th align="left"><bold>Test-6</bold></th></tr></thead><tbody><tr><td align="left">Preprocessing (PC-mer)</td><td char="." align="char">15.12</td><td char="." align="char">9.94</td><td char="." align="char">1.38</td><td char="." align="char">0.43</td><td char="." align="char">1.15</td><td char="." align="char">1.25</td><td char="." align="char">0.87</td></tr><tr><td align="left">Preprocessing (MLDSP-FCGR)</td><td char="." align="char">10.55</td><td char="." align="char">8.26</td><td char="." align="char">1.02</td><td char="." align="char">0.55</td><td char="." align="char">0.43</td><td char="." align="char">0.46</td><td char="." align="char">0.29</td></tr><tr><td align="left">tenfold cross-validation (PC-mer)</td><td char="." align="char">230.63</td><td char="." align="char">163.44</td><td char="." align="char">1.84</td><td char="." align="char">0.99</td><td char="." align="char">1.47</td><td char="." align="char">1.02</td><td char="." align="char">0.35</td></tr><tr><td align="left">tenfold cross-validation (MLDSP-FCGR)</td><td char="." align="char">250.01</td><td char="." align="char">168.63</td><td char="." align="char">5.11</td><td char="." align="char">1.95</td><td char="." align="char">2.04</td><td char="." align="char">2.4</td><td char="." align="char">1.85</td></tr><tr><td align="left">Testing (PC-mer)</td><td char="." align="char">0.78</td><td char="." align="char">0.745</td><td char="." align="char">0.05</td><td char="." align="char">0.02</td><td char="." align="char">0.03</td><td char="." align="char">-</td><td char="." align="char">-</td></tr><tr><td align="left">Testing (MLDSP-FCGR)</td><td char="." align="char">62.77</td><td char="." align="char">45.97</td><td char="." align="char">5.82</td><td char="." align="char">3.06</td><td char="." align="char">3.01</td><td char="." align="char">-</td><td char="." align="char">-</td></tr><tr><td align="left">Total time (PC-mer)</td><td char="." align="char">246.53</td><td char="." align="char">174.12</td><td char="." align="char">3.27</td><td char="." align="char">1.45</td><td char="." align="char">2.65</td><td char="." align="char">2.27</td><td char="." align="char">1.22</td></tr><tr><td align="left">Total time (MLDSP-FCGR)</td><td char="." align="char">323.33</td><td char="." align="char">222.86</td><td char="." align="char">11.95</td><td char="." align="char">5.56</td><td char="." align="char">5.48</td><td char="." align="char">2.86</td><td char="." align="char">2.14</td></tr><tr><td align="left">Improvement by PC-mer (%)</td><td char="." align="char"><bold>23.75</bold></td><td char="." align="char"><bold>21.87</bold></td><td char="." align="char"><bold>72.64</bold></td><td char="." align="char"><bold>73.92</bold></td><td char="." align="char"><bold>51.64</bold></td><td char="." align="char"><bold>20.63</bold></td><td char="." align="char"><bold>42.99</bold></td></tr></tbody></table></table-wrap></p>
    <p id="Par36">In this work, we conducted a comprehensive evaluation of the PC-mer encoding method for sequence comparison using computational methods. We utilized the PC-mer encoding in an alignment-free comparison method and employed a simple computational algorithm, namely Manhattan distance calculation, to generate the distance matrix. The simulation results confirm that PC-mer enables sequence comparison and distinction at the family and species levels without the need for sequence alignment. Utilizing the advantages of PC-mer encoding, sequence comparison can be achieved rapidly with accurate comparison scores. While a simple classifier was used in this study to emphasize the encoding capability of PC-mer, it is expected that better performance can be achieved with customized classification algorithms.</p>
    <p id="Par37">It is important to note that in order to produce a dissimilarity score in the range of [0,1], the sequence dissimilarity score needs to be normalized. To achieve this, first, the PC-mer matrices are normalized by the total number of k-mers in each sequence, and then the Manhattan distances are calculated. This allows the normalized scores to evaluate the similarity of two specific sequences without the need for a large number of sequences. This achievement of the PC-mer encoding overcomes a major limitation of alignment-based methods, for which no specific range of output values exists. Therefore, evaluation of sequence similarity can only be achieved by comparing output values for a large number of sequences. Given that many k-mer-based methods are used for a variety of applications that take sequences as their input, it is expected that PC-mer will continue to be utilized in these applications as well.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusion</title>
    <p id="Par38">With confirmed cases of human-to-human transmission and concerns over asymptomatic transmission, there is an urgent need for continued intervention to prevent the spread of the SARS-CoV-2 virus. However, genome sequencing and sequence analysis in the laboratory can be both time-consuming and expensive. Furthermore, due to the high amino acid similarity between the SARS-CoV-2 virus and SARS-CoV, classifying the Coronaviridae family can be a significant challenge. In this context, computational methods using artificial neural networks, such as CNN, DLM, and GNN, can provide an efficient classification tool by leveraging hidden feature extraction. However, these methods suffer from computational overheads in terms of time and memory requirements needed to achieve high classification accuracy. Additionally, challenges such as parameter adjustment and the need to develop new classifier architectures present additional obstacles to using artificial neural networks. Therefore, encoding algorithms for genome sequences, which can be fed to classifiers, can play a crucial role in extracting hidden features, reducing computational overhead, and improving classification accuracy. Our proposed encoding method, PC-mer, is a feature extraction technique that is fast, accurate, and space-efficient. It is also compatible with a wide range of machine learning classifiers and can be used on computers with basic processing capabilities. Our simulation results, obtained by thoroughly analyzing over 5874 unique viral sequences divided into eight datasets, demonstrate the superiority of our method in terms of classification accuracy, runtime, and memory consumption. In other words, according to the comparative results presented in Sects. 2 and 3, the SVM model fed by PC-mer encoding (k = 12) outperforms MLDSP-GUI fed by FCGR encoding (k = 7), with an average execution time improvement of 44%, an accuracy improvement of more than 2%, and a 25% reduction in memory usage. Similar to k-mer-based methods, PC-mer's utility extends beyond sequence comparison, as it can be used in various computational approaches. To evaluate this capability, we analyzed a dataset with 5 samples from 7 different classes using PC-mer and the Manhattan distance, and compared the results with those obtained using a well-known alignment strategy. The simulation results showed a 98% correlation coefficient between the distance matrices produced by these two approaches. This study suggests that when rapid taxonomic classification is necessary, such as during novel viral outbreaks, an appropriate alignment-free approach for comparative genomics investigation can be crucial. To achieve this, we developed a package based on the PC-mer encoding approach, which includes a machine learning-powered classifier and a tool for computational comparison. Using simple classifiers that can also take input sequences from the NCBI database via IDs, the developed machine learning (ML)-based classifier is a fast and precise method to classify coronavirus samples into 7 clusters. In addition, the computational comparison tool in this package produces a score for every pair of input sequences as an estimate of their dissimilarity. The thorough investigation of the PC-mer technique demonstrates its potential for more comprehensive coronavirus analysis, such as examining intra-species samples and SARS-CoV-2 samples from various countries. Moreover, considering the wide range of applications that k-mer-based approaches are used for, including metagenomics classification, we will also explore the utility of PC-mer encoding in these applications in future studies. PC-mer can also be useful in certain applications that involve searching for or detecting specific sequences, such as in the identification of viruses or pathogens. In cases where the sequences of interest are highly conserved, PC-mer may be a faster and more accurate method for detecting them than alignment-based methods. This is because PC-mer is able to capture the underlying similarities between sequences without requiring them to be aligned in a specific way. Overall, while PC-mer has its limitations and is not a replacement for all types of sequence analysis, it can be a valuable tool for certain types of tasks.</p>
  </sec>
  <sec id="Sec9">
    <title>Materials and methods</title>
    <sec id="Sec10">
      <title>Datasets</title>
      <p id="Par39">As previously mentioned, SARS-CoV-2 datasets may include clusters from multiple taxonomic levels, with intrafamily level being a common one. The Coronaviridae family comprises four genera: Alphacoronavirus (AlphaCoV), Betacoronavirus (BetaCoV), Gammacoronavirus (GammaCoV), and Deltacoronavirus (DeltaCoV). GammaCoV and DeltaCoV primarily infect bird species, while AlphaCoV and BetaCoV infect mammalian hosts [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>]. Various types of coronaviruses have been identified, including different AlphaCoV types such as human coronavirus 229E (229ECoV) and human coronavirus NL63 (NL63-CoV). In addition, contemporary BetaCoV types include human coronavirus HKU1 (HKU1-CoV), Severe Acute Respiratory Syndrome coronavirus (SARS-CoV), and Middle East Respiratory Syndrome coronavirus (MERS-CoV). Among them, SARS-CoV and MERS-CoV are known to cause more severe respiratory illnesses compared to other types [<xref ref-type="bibr" rid="CR1">1</xref>]. Many studies have investigated the classification of samples from all of the aforementioned clusters, as well as other unlisted ones. Additionally, there have been efforts to distinguish SARS-CoV-2 samples from those of other clusters and correctly identify their category [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>].</p>
      <p id="Par40">In this study, we conducted two evaluation scenarios: 1) evaluating the application of PC-mer by ML-based classifiers, and 2) evaluating the efficiency of PC-mer by computational classification methods. To assess the first scenario, we used two types of datasets to demonstrate PC-mer's ability to differentiate SARS-CoV-2 from a variety of intra/inter-species samples. One of our datasets was selected from [<xref ref-type="bibr" rid="CR3">3</xref>] for a fair comparison with MLDSP. This dataset comprised 29 genome viruses that caused COVID-19, and was collected on January 27, 2019. Since this dataset contained viruses from different species, and the coronaviruses other than SARS-CoV-2 were selected from non-human coronaviruses, we used another dataset containing different types of human coronaviruses. We designed seven experiments at distinct taxonomic levels, each with a different number of clusters. The dataset used in this study includes 7 clusters, namely HCoV-229E, HCoV-HKU1, HCoV-NL63, HCoV-OC43, MERS-CoV, SARS-CoV-1, and SARS-CoV-2, which overcomes the limitation of the [<xref ref-type="bibr" rid="CR3">3</xref>] dataset. Notably, this dataset has an appropriate number of samples for each cluster, which avoids the classifier being biased towards SARS-CoV-2 samples, unlike the [<xref ref-type="bibr" rid="CR1">1</xref>] dataset. For the second evaluation scenario, we created two datasets by downloading complete sequences without any ambiguous characters. One of these datasets contains the same 7 clusters as the first evaluation scenario, with each cluster consisting of five sequences (listed in Table S <xref rid="MOESM2" ref-type="media">1</xref>). The second dataset includes 45 SARS-CoV-2 sequences (listed in Table S <xref rid="MOESM3" ref-type="media">2</xref>), which is used to demonstrate the PC-mer's ability to generate appropriate dissimilarity scores. All sequences in these datasets were retrieved from the "NCBI virus" database. More details about these datasets can be found in the "Data" section of the Supplementary materials.</p>
    </sec>
    <sec id="Sec11">
      <title>Proposed encoding method</title>
      <p id="Par41">The Frequency of Chaos Game Representation (FCGR) is a popular method for encoding sequential data, as it produces a matrix of k-mer frequencies for each sequence. To generate FCGR, the first step is to create a Chaos Game Representation (CGR) of the sequence. CGR requires a polygon with n distinct alphabets, where n represents the number of allowed alphabets in the input sequences. Unlike organizing the alphabets in a linear way, CGR provides a holistic visual representation of the sequence. The location of each letter s_i of a sequence S of length l_s on the CGR, denoted as CGR_i, is calculated by moving a pointer halfway between the position of letter <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${s}_{i-1}$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq6.gif"/></alternatives></inline-formula> in the <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR \left(CG{R}_{i-1}\right)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:mi>R</mml:mi><mml:mfenced close=")" open="("><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq7.gif"/></alternatives></inline-formula> and the corner of the polygon assigned to letter <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CG{R}_{{s}_{i}}$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq8.gif"/></alternatives></inline-formula> within the CGR space, according to Eq. 1. It is important to note that the starting point of the <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR \left(CG{R}_{0}\right)$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:mi>R</mml:mi><mml:mfenced close=")" open="("><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq9.gif"/></alternatives></inline-formula> corresponds to the coordinates of the polygon's center point. In this study, we propose a new encoding method called PC-mer, which is an improvement over the FCGR algorithm. To achieve this, we introduce a novel categorization of the four nucleotides into three sets of structural groups based on three distinct chemical and physical features [<xref ref-type="bibr" rid="CR21">21</xref>]:</p>
      <p id="Par42">
        <list list-type="order">
          <list-item>
            <p id="Par43">The nucleotides A and G are purines and are denoted by the symbol R, while the nucleotides C and T (U) are pyrimidines and are represented by the symbol Y.</p>
          </list-item>
          <list-item>
            <p id="Par44">The nucleotides A and C are amino and represented by the symbol M, while the nucleotides G and T (U) are keto and represented by the symbol K in the second group.</p>
          </list-item>
          <list-item>
            <p id="Par45">Finally, based on the strength of their hydrogen bonds, the nucleotides C and G have strong hydrogen bonds denoted by the symbol S, while A and T (U) have weak hydrogen bonds denoted by the symbol W.</p>
          </list-item>
        </list>
      </p>
      <p id="Par46">
        <disp-formula id="Equ1">
          <label>1</label>
          <alternatives>
            <tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR_i=0.5.(CGR_{i-1}+CGR_{s_i})\;with\;i=1,\dots,l_{S\;}and\;CGR_0=(0.5,0.5)$$\end{document}</tex-math>
            <mml:math id="M20" display="block">
              <mml:mrow>
                <mml:mi>C</mml:mi>
                <mml:mi>G</mml:mi>
                <mml:msub>
                  <mml:mi>R</mml:mi>
                  <mml:mi>i</mml:mi>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mn>0.5</mml:mn>
                <mml:mo>.</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>C</mml:mi>
                  <mml:mi>G</mml:mi>
                  <mml:msub>
                    <mml:mi>R</mml:mi>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                      <mml:mo>-</mml:mo>
                      <mml:mn>1</mml:mn>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo>+</mml:mo>
                  <mml:mi>C</mml:mi>
                  <mml:mi>G</mml:mi>
                  <mml:msub>
                    <mml:mi>R</mml:mi>
                    <mml:msub>
                      <mml:mi>s</mml:mi>
                      <mml:mi>i</mml:mi>
                    </mml:msub>
                  </mml:msub>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
                <mml:mspace width="0.277778em"/>
                <mml:mi>w</mml:mi>
                <mml:mi>i</mml:mi>
                <mml:mi>t</mml:mi>
                <mml:mi>h</mml:mi>
                <mml:mspace width="0.277778em"/>
                <mml:mi>i</mml:mi>
                <mml:mo>=</mml:mo>
                <mml:mn>1</mml:mn>
                <mml:mo>,</mml:mo>
                <mml:mo>⋯</mml:mo>
                <mml:mo>,</mml:mo>
                <mml:msub>
                  <mml:mi>l</mml:mi>
                  <mml:mrow>
                    <mml:mi>S</mml:mi>
                    <mml:mspace width="0.277778em"/>
                  </mml:mrow>
                </mml:msub>
                <mml:mi>a</mml:mi>
                <mml:mi>n</mml:mi>
                <mml:mi>d</mml:mi>
                <mml:mspace width="0.277778em"/>
                <mml:mi>C</mml:mi>
                <mml:mi>G</mml:mi>
                <mml:msub>
                  <mml:mi>R</mml:mi>
                  <mml:mn>0</mml:mn>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mn>0.5</mml:mn>
                  <mml:mo>,</mml:mo>
                  <mml:mn>0.5</mml:mn>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
              </mml:mrow>
            </mml:math>
            <graphic xlink:href="12864_2023_9373_Article_Equ1.gif" position="anchor"/>
          </alternatives>
        </disp-formula>
      </p>
      <p id="Par47">The pseudo-code of the PC-mer method is presented in Algorithm 1. Firstly, the nucleotide symbols are converted to uppercase letters, and any unknown nucleotides are removed, based on the above categorization approach (line 1). Three 1D vectors with a length of 2<sup> k</sup>, i.e., <inline-formula id="IEq10"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{purine-pyrimidine}$$\end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mi>y</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq10.gif"/></alternatives></inline-formula>, <inline-formula id="IEq11"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{amino-keto}$$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>o</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq11.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq12"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{weak-strong}$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq12.gif"/></alternatives></inline-formula>, are utilized to implement the PC-mer method. The two members of each set of alphabet are represented by the two corners of the corresponding vector (line 2). The PC-mer method is then applied to all nucleotides in the input sequence, as well as all three 1D vectors simultaneously. CGR_i is computed using the purine-pyrimidine property and Eq. 1, and all k-mers for each nucleotide s_i in the sequence S are counted (line 3–11). Also, the amino-keto properties (line 21–29) and strong–weak properties (line 25–35) undergo the same procedure. According to the proposed algorithm, a vector of 3 × 2<sup> k</sup> cells is constructed for each sequence (line 36), while traditional FCGR encoding produces a vector of 4<sup> k</sup> cells. As a result, our suggested encoding method, called PC-mer, significantly reduces the volume of the encoded data and computational complexity. The steps of PC-mer encoding, assuming a sample input sequence, are illustrated in Fig. <xref rid="Fig12" ref-type="fig">12</xref>. In the following sections, we will investigate and demonstrate the impact of this novel encoding method on the classification performance of coronavirus.<fig position="anchor" id="Figa"><caption><p><bold>Algorithm 1. </bold>PC-mer based representation.</p></caption><graphic position="anchor" xlink:href="12864_2023_9373_Figa_HTML" id="MO12"/></fig><fig id="Fig12"><label>Fig. 12</label><caption><p>PC-mer encoding steps for sample sequence "ATCGTA"</p></caption><graphic xlink:href="12864_2023_9373_Fig12_HTML" id="MO13"/></fig></p>
    </sec>
    <sec id="Sec12">
      <title>Memory complexity</title>
      <p id="Par48">Taking memory reduction as the primary advantage of PC-mer, this section aims to analyze the memory consumption of the encoding unit in PC-mer, which can impact its functionality and execution time.</p>
      <p id="Par49">As mentioned earlier, k-mer refers to fixed-length substrings of a sequence. To extract k-mers, a sliding window of fixed length k and step size of one is applied to the sequence. This results in all possible k-mer substrings of the sequence. It should be noted that for an alphabet set of size N, there are N<sup>k</sup> possible k-mers. In the case of a four-nucleotide alphabet set, there are 4<sup> k</sup> possible k-mers. Thus, the traditional k-mer representation approach has a memory usage complexity of <inline-formula id="IEq13"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({4}^{k}\right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq13.gif"/></alternatives></inline-formula>. However, as discussed in previous sections, the encoding method proposed by PC-mer utilizes three sets of two-letter alphabets. In this way, there are 2 k alternative modes for each possible k-mer, and thus, the memory complexity of PC-mer is <inline-formula id="IEq14"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({2}^{k}\right)$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq14.gif"/></alternatives></inline-formula>. Therefore, we can conclude that PC-mer requires 2<sup> k</sup> times less memory usage compared to traditional k-mer-based methods.</p>
    </sec>
    <sec id="Sec13">
      <title>Classification method</title>
      <p id="Par50">Classification algorithms play a crucial role in distinguishing different clusters, uncovering hidden features, and ultimately enhancing classification accuracy. While alignment-based methods can be effective for relatively small nucleotide sequences, they do not scale well for larger sequences [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. Due to their extensive computational time and complexity, it is practically challenging to analyze hundreds of whole genomes using alignment-based approaches. Furthermore, these methods may have unstable performance for highly variable regions of the genome, depending on heuristically specified parameters [<xref ref-type="bibr" rid="CR13">13</xref>]. It is also important to note that not all datasets may meet the prerequisite assumptions of alignment-based methods, such as the homogeneity of input sequences [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>].</p>
      <p id="Par51">Due to their advantages and desirable characteristics, alignment-free approaches are well-suited for whole-genome comparisons [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]. These methods can be classified into two main types: computational algorithms and machine learning-based approaches. Each of these types can be further divided into subclasses based on their algorithms, although there is no consensus on how to categorize them. For example, computational methods can be divided into two categories: word-based methods, which utilize k-mer frequency, and information theory-based methods, which compare informational content such as entropy between full-length sequences [<xref ref-type="bibr" rid="CR8">8</xref>]. Machine learning-based methods can also be classified into two categories: feature-based methods, which transform genomic sequences into feature vectors for comparison, and model-based methods, which generate a model (such as a Markov model) for each sequence [<xref ref-type="bibr" rid="CR8">8</xref>]. However, there may be some overlap in this classification, and it is not definitive.</p>
      <p id="Par52">Although various alignment-free methods are used for classification purposes, machine learning-based methods have gained more attention due to the exponential growth of sequenced data and their high potential in sequence classification. Over the past decade, deep neural networks and other machine learning algorithms have demonstrated impressive performance in data classification. However, the main challenges in using accurate classification algorithms are their computational complexity in terms of time and memory usage, the necessary preprocessing for parameter adjustment, and the requirement for developing new classifier architectures for diverse datasets. These problems are amplified by increasing the volume of input data and the number of clusters, which often occurs in biological data.</p>
      <p id="Par53">As a consequence, encoding algorithms that extract relevant features from the input data can be crucial in addressing the issues associated with most classification algorithms. With the ability to extract features using the PC-mer encoding method and create significant separation between distinct clusters, we can utilize a broad range of machine learning-based classification algorithms.</p>
      <p id="Par54">However, in this study, and without sacrificing generality, we use one of the simplest supervised classification algorithms, the Linear Support Vector Machine classifier (Linear SVM), to demonstrate the encoding capability and feature extraction of PC-mer. The main reasons for choosing this simple algorithm over other alternatives, such as convolutional neural networks or more powerful machine learning-based algorithms, are as follows:<list list-type="bullet"><list-item><p id="Par55">To mitigate the computational burden of using convolutional networks, both in terms of runtime and memory requirements, while still achieving high classification accuracy.</p></list-item><list-item><p id="Par56">To eliminate the need for adjusting numerous parameters and developing new neural network architectures.</p></list-item><list-item><p id="Par57">To enable a fair and unbiased evaluation of the encoding method regardless of the choice of classification algorithm.</p></list-item><list-item><p id="Par58">To allow for the algorithm to be run on basic computers without specialized hardware.</p></list-item></list></p>
    </sec>
    <sec id="Sec14">
      <title>Experimental setup</title>
      <p id="Par59">For evaluating the performance of the Linear SVM classifiers, we used the tenfold cross-validation approach and implemented the classifiers using the scikit-learn Python library with default settings and hyperparameters. It is important to note that all experiments, including preprocessing, training, and testing, were conducted on a desktop computer equipped with an i7-6500 2.5 GHz CPU, 8 GB RAM, and a GeForce GTX 920 M GPU with 2 GB of DDR3 RAM.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12864_2023_9373_MOESM1_ESM.docx">
            <caption>
              <p>
                <bold>Additional file 1. </bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12864_2023_9373_MOESM2_ESM.txt">
            <caption>
              <p>
                <bold>Additional file 2. </bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12864_2023_9373_MOESM3_ESM.txt">
            <caption>
              <p>
                <bold>Additional file 3.</bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ML</term>
        <def>
          <p id="Par4">Machine Learning</p>
        </def>
      </def-item>
      <def-item>
        <term>PC-mer</term>
        <def>
          <p id="Par5">Physicochemical k-mer</p>
        </def>
      </def-item>
      <def-item>
        <term>SARS-CoV</term>
        <def>
          <p id="Par6">Severe Acute Respiratory Syndrome Coronavirus</p>
        </def>
      </def-item>
      <def-item>
        <term>SVM</term>
        <def>
          <p id="Par7">Support-Vector Machine</p>
        </def>
      </def-item>
      <def-item>
        <term>PCA</term>
        <def>
          <p id="Par8">Principal Component Analysis</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>S. Akbari, and A. Mohammadi, and S. Koohi developed the idea, S. Akbari and A. Mohammadi wrote code in programming language and analyzed the results, and also wrote the manuscript text. S. Koohi guided the study. All authors especially S. Koohi reviewed the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Authors do not use any source of funding.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Source code is freely available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/SAkbari93/PC-mer_Corona">https://github.com/SAkbari93/PC-mer_Corona</ext-link>, implemented in python, and supported on Linux and MS Windows. The installable package of PC-mer and its document are also available at <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/physicochemical-mers/">https://pypi.org/project/physicochemical-mers/</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par60">Not applicable. All samples had been collected in the context of previous studies.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par61">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par62">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arslan</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Arslan</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A new COVID-19 detection method from human genome sequences using CpG island features and KNN classifier</article-title>
        <source>Eng Sci Technol an Int J</source>
        <year>2021</year>
        <volume>24</volume>
        <issue>4</issue>
        <fpage>839</fpage>
        <lpage>847</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jestch.2020.12.026</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dlamini</surname>
            <given-names>GS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Classification of COVID-19 and other pathogenic sequences: A dinucleotide frequency and machine learning approach</article-title>
        <source>IEEE Access</source>
        <year>2020</year>
        <volume>8</volume>
        <fpage>195263</fpage>
        <lpage>195273</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2020.3031387</pub-id>
        <?supplied-pmid 34976561?>
        <pub-id pub-id-type="pmid">34976561</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Randhawa</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Soltysiak</surname>
            <given-names>MPM</given-names>
          </name>
          <name>
            <surname>El Roz</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>de Souza</surname>
            <given-names>CPE</given-names>
          </name>
          <name>
            <surname>Hill</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kari</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Machine learning using intrinsic genomic signatures for rapid classification of novel pathogens: COVID-19 case study</article-title>
        <source>PLoS One</source>
        <year>2020</year>
        <volume>15</volume>
        <issue>4</issue>
        <fpage>e0232391</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0232391</pub-id>
        <?supplied-pmid 32330208?>
        <pub-id pub-id-type="pmid">32330208</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Whata</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Chimedza</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Deep Learning for SARS COV-2 Genome Sequences</article-title>
        <source>IEEE Access</source>
        <year>2021</year>
        <volume>9</volume>
        <fpage>59597</fpage>
        <lpage>59611</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2021.3073728</pub-id>
        <?supplied-pmid 34812391?>
        <pub-id pub-id-type="pmid">34812391</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Li X, et al., “Evolutionary history, potential intermediate animal host, and cross-species analyses of SARS-CoV-2,” J Med Virol. 2020;92(6) 10.1002/jmv.25731.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Khan</surname>
            <given-names>MI</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comparative genome analysis of novel coronavirus (SARS-CoV-2) from different geographical locations and the effect of mutations on major target proteins: an in silico insight</article-title>
        <source>PLoS One</source>
        <year>2020</year>
        <volume>15</volume>
        <fpage>e0238344</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0238344</pub-id>
        <?supplied-pmid 32881907?>
        <pub-id pub-id-type="pmid">32881907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">S Chen, C He, Y Li, Z Li, and CE Melançon. A computational toolset for rapid identification of SARS-CoV-2, other viruses and microorganisms from sequencing data. Brief. Bioinform. 2020;22(2).</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison: benefits, applications, and tools</article-title>
        <source>Genome Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>186</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1319-7</pub-id>
        <?supplied-pmid 28974235?>
        <pub-id pub-id-type="pmid">28974235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Randhawa</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Hill</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kari</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>MLDSP-GUI: an alignment-free standalone tool with an interactive graphical user interface for DNA sequence comparison and analysis</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <issue>7</issue>
        <fpage>2258</fpage>
        <lpage>2259</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz918</pub-id>
        <?supplied-pmid 31834361?>
        <pub-id pub-id-type="pmid">31834361</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lemieux</surname>
            <given-names>JE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Phylogenetic analysis of SARS-CoV-2 in Boston highlights the impact of superspreading events</article-title>
        <source>Science (80-. )</source>
        <year>2021</year>
        <volume>371</volume>
        <fpage>6529</fpage>
        <pub-id pub-id-type="doi">10.1126/science.abe3261</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naeem</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Mabrouk</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Marzouk</surname>
            <given-names>SY</given-names>
          </name>
          <name>
            <surname>Eldosoky</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>A diagnostic genomic signal processing (GSP)-based system for automatic feature analysis and detection of COVID-19</article-title>
        <source>Brief Bioinform</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>1197</fpage>
        <lpage>1205</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbaa170</pub-id>
        <?supplied-pmid 32793981?>
        <pub-id pub-id-type="pmid">32793981</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paul</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Vainio</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Roning</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Detection of intra-family coronavirus genome sequences through graphical representation and artificial neural network</article-title>
        <source>Expert Syst. Appl</source>
        <year>2022</year>
        <volume>194</volume>
        <fpage>116559</fpage>
        <pub-id pub-id-type="doi">10.1016/j.eswa.2022.116559</pub-id>
        <?supplied-pmid 35095217?>
        <pub-id pub-id-type="pmid">35095217</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabijanska</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Grabowski</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Viral Genome deep classifier</article-title>
        <source>IEEE Access</source>
        <year>2019</year>
        <volume>7</volume>
        <fpage>81297</fpage>
        <lpage>81307</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2019.2923687</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deschavanne</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Giron</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vilain</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fagot</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fertil</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Genomic signature: characterization and classification of species assessed by chaos game representation of sequences</article-title>
        <source>Mol Biol Evol</source>
        <year>1999</year>
        <volume>16</volume>
        <issue>10</issue>
        <fpage>1391</fpage>
        <lpage>1399</lpage>
        <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a026048</pub-id>
        <?supplied-pmid 10563018?>
        <pub-id pub-id-type="pmid">10563018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lichtblau</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free genomic sequence comparison using FCGR and signal processing</article-title>
        <source>BMC Bioinformatics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>742</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-3330-3</pub-id>
        <?supplied-pmid 31888438?>
        <pub-id pub-id-type="pmid">31888438</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Almeida</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Carrico</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Maretzek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noble</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Fletcher</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Analysis of genomic sequences by Chaos Game Representation</article-title>
        <source>Bioinformatics</source>
        <year>2001</year>
        <volume>17</volume>
        <issue>5</issue>
        <fpage>429</fpage>
        <lpage>437</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.5.429</pub-id>
        <?supplied-pmid 11331237?>
        <pub-id pub-id-type="pmid">11331237</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">H Liao, D Cai, and Y Sun. VirStrain: a strain identification tool for RNA viruses. Genome Biol. 2022;38 10.1186/s13059-022-02609-x.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paraskevis</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kostaki</surname>
            <given-names>EG</given-names>
          </name>
          <name>
            <surname>Magiorkinis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Panayiotakopoulos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sourvinos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Tsiodras</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Full-genome evolutionary analysis of the novel corona virus (2019-nCoV) rejects the hypothesis of emergence as a result of a recent recombination event</article-title>
        <source>Infect. Genet. Evol</source>
        <year>2020</year>
        <volume>79</volume>
        <fpage>104212</fpage>
        <pub-id pub-id-type="doi">10.1016/j.meegid.2020.104212</pub-id>
        <?supplied-pmid 32004758?>
        <pub-id pub-id-type="pmid">32004758</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jeffrey</surname>
            <given-names>HJ</given-names>
          </name>
        </person-group>
        <article-title>Chaos game representation of gene structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>1990</year>
        <volume>18</volume>
        <issue>8</issue>
        <fpage>2163</fpage>
        <lpage>2170</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/18.8.2163</pub-id>
        <?supplied-pmid 2336393?>
        <pub-id pub-id-type="pmid">2336393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sims</surname>
            <given-names>GE</given-names>
          </name>
          <name>
            <surname>Jun</surname>
            <given-names>S-R</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>S-H</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free genome comparison with feature frequency profiles (FFP) and optimal resolutions</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2009</year>
        <volume>106</volume>
        <issue>8</issue>
        <fpage>2677</fpage>
        <lpage>2682</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0813249106</pub-id>
        <?supplied-pmid 19188606?>
        <pub-id pub-id-type="pmid">19188606</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Lucy He</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yau</surname>
            <given-names>SST</given-names>
          </name>
        </person-group>
        <article-title>A novel fast vector method for genetic sequence comparison</article-title>
        <source>Sci. Rep.</source>
        <year>2017</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-017-12493-2</pub-id>
        <pub-id pub-id-type="pmid">28127051</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10193333</article-id>
    <article-id pub-id-type="publisher-id">9373</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-023-09373-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>A new profiling approach for DNA sequences based on the nucleotides' physicochemical features for accurate analysis of SARS-CoV-2 genomes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Akbari Rokn Abadi</surname>
          <given-names>Saeedeh</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mohammadi</surname>
          <given-names>Amirhossein</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Koohi</surname>
          <given-names>Somayyeh</given-names>
        </name>
        <address>
          <email>koohi@sharif.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.412553.4</institution-id><institution-id institution-id-type="ISNI">0000 0001 0740 9747</institution-id><institution>Department of Computer Engineering, </institution><institution>Sharif University of Technology, </institution></institution-wrap>Tehran, Iran </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>266</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">The prevalence of the COVID-19 disease in recent years and its widespread impact on mortality, as well as various aspects of life around the world, has made it important to study this disease and its viral cause. However, very long sequences of this virus increase the processing time, complexity of calculation, and memory consumption required by the available tools to compare and analyze the sequences.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We present a new encoding method, named PC-mer, based on the k-mer and physic-chemical properties of nucleotides. This method minimizes the size of encoded data by around 2<sup> k</sup> times compared to the classical k-mer based profiling method. Moreover, using PC-mer, we designed two tools: 1) a machine-learning-based classification tool for coronavirus family members with the ability to recive input sequences from the NCBI database, and 2) an alignment-free computational comparison tool for calculating dissimilarity scores between coronaviruses at the genus and species levels.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PC-mer achieves 100% accuracy despite the use of very simple classification algorithms based on Machine Learning. Assuming dynamic programming-based pairwise alignment as the ground truth approach, we achieved a degree of convergence of more than 98% for coronavirus genus-level sequences and 93% for SARS-CoV-2 sequences using PC-mer in the alignment-free classification method. This outperformance of PC-mer suggests that it can serve as a replacement for alignment-based approaches in certain sequence analysis applications that rely on similarity/dissimilarity scores, such as searching sequences, comparing sequences, and certain types of phylogenetic analysis methods that are based on sequence comparison.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12864-023-09373-7.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>SARS-CoV-2</kwd>
      <kwd>Classification</kwd>
      <kwd>Comparison</kwd>
      <kwd>k-mer</kwd>
      <kwd>Alignment-free</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par9">In 2019, a new virus has emerged called SARS-CoV-2 (severe acute respiratory syndrome coronavirus-2), which causes severe illness. The World Health Organization (WHO) declared this disease, known as COVID-19 (coronavirus disease 2019), a global pandemic on March 11, 2020 [<xref ref-type="bibr" rid="CR1">1</xref>]. COVID-19 has now spread to over 184 countries and has infected more than 400 million individuals. Coronaviruses are enveloped, linear, positive-sense, and single-stranded RNA viruses, and have the largest viral genomes among all RNA viruses, measuring around 30 kb [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. During a virus outbreak, understanding the taxonomic classification of apathogenic and specied and its relationship to other pathogens can help with the development of appropriate mitigation strategies, containment, treatment, and decisions on the methods and measures appropriate for identifying viruses, controlling their transmission rates, and limiting potential consequences [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p id="Par10">The early identification of SARS-CoV-2 as a close relative of MERS-CoV and SARS could potentially benefit global efforts to design and develop a vaccines and therapeutic drugs for SARS-CoV-2. This is because it would lead to an improved understanding of the disease progression, host–pathogen interactions, and potential treatment strategies [<xref ref-type="bibr" rid="CR2">2</xref>]. However, the classification of SARS-CoV-2 is not a simple task due to its significant genetic similarities to other Coronaviridae viruses. This could result in incorrect findings and false positives [<xref ref-type="bibr" rid="CR4">4</xref>]. Coronavirus genomes, like other RNA viruses, are known for their genomic plasticity, which can be attributed to factors such as high mutation rates ranging from 1 in 1000 to 1 in 10,000 nucleotides during replication, the use of a template-switching mechanism that results in high rates of homologous RNA recombination between viral genomes, and a large genome size that leads to a high incidence of mutation. As a result,the genomes of coronavirus today are more flexible and varied [<xref ref-type="bibr" rid="CR3">3</xref>]. SARS-CoV-2 has been classified using various methodologies, including both alignment-based and alignment-free categories, which is similar to the methods used for other species [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>]. To achieve this classification, many types of data have been analyzed, such as whole genomes, partial genomes, protein data, and even medical images, like CT scans of the lungs [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>]. For instance, research conducted by comparing whole genome and viral proteins has shown that SARS-CoV-2 belongs to lineage B (Sarbecovirus) of Betacoronavirus. Furthermore, through the phylogenetic investigation of the RdRp protein, spike proteins, and complete genomes, a close relationship between SARS-CoV-2 and two bat SARS-like coronaviruses, bat-SL-COVZXC21 and bat-SL-COVZC45, identified in Chinese horseshoe bats Rhinolophus sinicus, has been revealed. These findings, as well as others, have been examined in numerous studies [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR7">7</xref>], which mostly adopt alignment-based methods. However, while alignment-based approaches have proved effective in detecting sequence similarities, their application can be challenging in certain circumstances [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. With the improvement of sequencing technology and an increase in the number of sequenced genomes, the usage of alignment-free approaches for sequence comparison has been on the rise [<xref ref-type="bibr" rid="CR2">2</xref>–<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR7">7</xref>].</p>
    <p id="Par11">An alignment-free approach [<xref ref-type="bibr" rid="CR8">8</xref>] is a method of measuring sequence similarity or dissimilarity without using or producing aligned sequences during any stage of the algorithm implementation. This approach is faster, uses fewer resources, and is more robust to structural variation compared to alignment-based approaches. Additionally, alignment-free methods can be used in cases where alignment cannot safely handle low sequence conservation. These benefits make alignment-free approaches useful for comparing and categorizing viruses. Various alignment-free methods have been developed specifically for SARS-CoV-2 in recent years. For instance, authors in [<xref ref-type="bibr" rid="CR3">3</xref>] utilized the MLDSP approach [<xref ref-type="bibr" rid="CR9">9</xref>] to classify SARS-CoV-2, which was developed earlier for other species. MLDSP combines supervised machine learning and FCGR (Frequency of Chaos Game Representation) methods. FCGR representation [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR10">10</xref>] is a well-known encoding approach that uses k-mers' frequencies for taxonomic classification of genomic sequences. To detect SARS-CoV-2, the researchers employed six supervised machine learning classifiers (linear discriminant, linear support vector machine, quadratic support vector machine, fine KNN (K-Nearest Neighbors), subspace discriminant, and subspace KNN). MLDSP utilizes machine learning classifiers trained with samples from four Coronaviridae families and tests them on 29 SARS-CoV-2 genome sequences to identify the correct cluster [<xref ref-type="bibr" rid="CR3">3</xref>]. However, this method has a drawback: it uses six machine learning classifiers, making it difficult to choose the best one. Additionally, in [<xref ref-type="bibr" rid="CR3">3</xref>], samples are classified at the genus level rather than the more crucial and challenging species or inner-species level. Despite this weakness, [<xref ref-type="bibr" rid="CR3">3</xref>] is one of the most significant and attractive SARS-CoV-2 approaches to date.</p>
    <p id="Par12">GSP [<xref ref-type="bibr" rid="CR11">11</xref>] proposes two approaches for distinguishing SARS-CoV-2, SARS-CoV, and MERS-CoV viruses, both based on K-nearest neighbors and trainable cascade forward back-propagation neural networks, making it another method for classifying SARS-CoV-2. It uses a discrete Fourier transform (DFT), a discrete cosine transform (DCT), and the seven-moment invariants to extract genomic signal processing features from each sequence. GSP [<xref ref-type="bibr" rid="CR11">11</xref>] utilizes a dataset of 76 genome sequences for each coronavirus type. The simulation results indicate that the KNN algorithm performs better in all SARS-CoV-2/SARS-CoV, SARS-CoV-2/MERS-CoV, and SARS-CoV-2/SARS-CoV/MERS-CoV classification processes, with 100% accuracy. One of the method's key advantages is the limited number of extraction attributes recovered by each approach, just nine for each sequence. However, like MLDSP [<xref ref-type="bibr" rid="CR3">3</xref>] and GSP [<xref ref-type="bibr" rid="CR11">11</xref>], the classification capability of SARS-CoV-2 using a small number of distinct and easily classifiable clusters is limited. To overcome these concerns, various classification approaches for SARS-CoV-2 are continuously being developed. For instance, in [<xref ref-type="bibr" rid="CR2">2</xref>], several assessments and methods are proposed for performing classification both between species (SARS-CoV-2, MERS-CoV, Dengue Virus (DENV), Zaire Ebolavirus (EBOV), Hepatitis B virus (HBV), Hepatitis C virus (HCV), Human Immunodeficiency Virus 1 (HIV-1), and Mycobacterium tuberculosis (M. tb)) and within species (SARS-CoV-2 from Africa, Asia, Europe, Oceania, North America, and South America). These methods aim to enhance the classification accuracy of SARS-CoV-2 and provide a more comprehensive understanding of its phylogenetic relationships with other viruses. The dataset used in this study is distinguishable and can be easily classified. The encoding method used is dinucleotide frequency, one of the most commonly used methods, and various assessments were conducted, including principal component analysis (PCA) and t-distributed Stochastic Neighbor Embedding (t-SNE), to analyze the datasets by reducing their dimensionality. The study utilized an unsupervised learning approach through agglomerative hierarchical clustering, multi-class classification, and their binarized forms. In addition to reporting classification accuracy, this study mainly analyzed the frequency of different dinucleotides in different categories, examining the potential of dinucleotides as species signatures [<xref ref-type="bibr" rid="CR2">2</xref>].</p>
    <p id="Par13">Most classification approaches proposed for coronaviruses [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], as well as other viruses like HIV and Influenza A [<xref ref-type="bibr" rid="CR13">13</xref>] and other species such as bacteria or mammals [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>], rely on using the frequencies of k-mers as a distinguishing feature of sequences. After reviewing various studies in this area, it can be concluded that the size of k-mer is directly proportional to the accuracy of classification [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR16">16</xref>]. However, accuracy alone cannot be considered a conclusive metric, and it is necessary to report other metrics like precision and F1-score, although they are often overlooked in many studies [<xref ref-type="bibr" rid="CR3">3</xref>]. Additionally, the memory usage increases exponentially with each unit rise in k-mer size, leading to four times more memory usage. Naturally, there have been other limitations noted in studies of the tools created for SARS-CoV-2 comparison and clustering. These limitations include difficulties distinguishing between closely related virus strains, as well as lower resolution due to the exclusion of genomes with high similarity. Additionally, some tools are unable to detect multiple strains in the case of multi-strain infections [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR17">17</xref>]. Given the limitations of current classification methods, we present an approach in this study to reduce k-mer encoding's memory usage while improving accuracy and other performance metrics. However, reducing memory usage and enhancing the speed and precision of machine learning-based classifiers is not the only aim. The nature of the data used and the level of evolution are also crucial factors to consider. In this work, we introduce a novel encoding method called PC-mer (PhysicoChemical k-mer-based encoding), which utilizes both the FCGR method and the physicochemical properties of nucleotides to reduce k-mer memory size. The proposed encoding method is extremely effective, enabling even the simplest machine learning-based classifier to accurately classify input sequences across various levels of evolution. We have extensively tested this tool on several popular datasets, including the MLDSP dataset, as well as datasets with high similarity between clusters, such as [<xref ref-type="bibr" rid="CR1">1</xref>]. The following are the primary advantages of PC-mer:<list list-type="bullet"><list-item><p id="Par14">The amount of memory usage for storing k-mers is reduced by approximately 2<sup> K</sup>.</p></list-item><list-item><p id="Par15">Classification accuracy is improved, compared to other classifiers such as MLDSP, utilizing a very simple machine learning-based classifier.</p></list-item><list-item><p id="Par16">Training of the machine learning-based classifier is accelerated.</p></list-item><list-item><p id="Par17">No prior knowledge of input data is required.</p></list-item><list-item><p id="Par18">The proposed classifier, taking advantages of PC-mer, achieves high accuracy on a simple personal computer.</p></list-item></list></p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <p id="Par19">As discussed earlier, our new encoding method, PC-mer (PhysicoChemical k-mer-based encoding), reduces the memory size of k-mers by combining the FCGR method with the physicochemical properties of nucleotides. This encoding method is so powerful that even the simplest machine learning-based classifier can classify input sequences accurately at different levels of evolution. In this section, we evaluate the performance of the PC-mer encoding method in two ways: 1) using PC-mer as the input data generator for classification models, and 2) applying PCA (Principal Component Analysis) to make the encoded data by PC-mer more interpretable, thereby evaluating PC-mer's ability to distinguish different classes of input sequences.</p>
    <sec id="Sec3">
      <title>Performance evaluation</title>
      <p id="Par20">The classification results are presented for four different datasets:<list list-type="order"><list-item><p id="Par21">SARS-CoV-2 datasets consisting of seven different levels of taxonomy, namely Test-1, Test-2, Test-3a, Test-3b, Test-4, Test-5, and Test-6. At lower levels, the datasets become more similar to each other.</p></list-item><list-item><p id="Par22">Human coronavirus (Corona) datasets, collected from human samples, which are more challenging to classify compared to SARS-CoV-2 datasets.</p></list-item><list-item><p id="Par23">35 sequences of Human coronavirus used to compare the alignment-free approach based on PC-mer with a well-known alignment-based method.</p></list-item><list-item><p id="Par24">45 SARS-CoV-2 sequences used to compare the alignment-free approach based on PC-mer with a well-known alignment-based method for very similar sequences.</p></list-item></list></p>
    </sec>
    <sec id="Sec4">
      <title>ML-based classification performance</title>
      <p id="Par25">For the machine learning-based evaluations, we utilized a tenfold cross-validation scheme and assessed the results based on commonly used statistical measures, such as accuracy, precision, recall, and F1-score, which are presented in Tables <xref rid="Tab1" ref-type="table">1</xref> and <xref rid="Tab2" ref-type="table">2</xref>. As shown in Table <xref rid="Tab1" ref-type="table">1</xref>, we achieved 97% accuracy using PC-mer encoding and a linear SVM model for the SARS-CoV-2 dataset and Test-1, which is the first level of taxonomy consisting of 3273 sequences divided into 12 clusters (11 families, and Riboviria realm). In this evaluation, we used the PC-mer encoding method as input data. Additionally, compared to the FCGR representation and the best classification model (Quadratic SVM) used by the MLDSP-GUI tool, the proposed encoding method results in a 2% increase in classification accuracy. Additionally, after training the model on the Test-1 dataset, we validated and tested the resulting classifier to predict the labels of 29 SARS-CoV-2 virus sequences, achieving a 100% classification accuracy for the label Riboviria. Moving on to the second dataset (Test-2), which consists of 2777 sequences divided into 12 clusters (Riboviria families), we obtained a classification accuracy of 95.9% using the PC-mer encoding and the Linear SVM classifier. In this dataset, we observed a 4.7% improvement in classification accuracy compared to the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool. Similarly, after training the model on Test-2 dataset, we validated and tested the resulting classifier to predict the labels of 29 SARS-CoV-2 virus sequences, achieving a 100% classification accuracy for the label Coronaviridae.<table-wrap id="Tab1"><label>Table I</label><caption><p>Investigating the encoding capability of the PC-mer (using only Linear SVM classifier) vs. that of the FCGR (using six classifiers: Linear Discriminant (LD), Linear SVM (LSVM), Quadratic SVM (QSVM), Fine KNN (FKNN), Subspace Discriminant (SD), and Subspace KNN (SKNN)) as the encoding methods for generating input vectors</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2"><italic>Encoding algorithm</italic></th><th align="left" rowspan="2"><italic>k-mer</italic></th><th align="left" rowspan="2"><italic>Classification model</italic></th><th align="left" rowspan="2"><italic>Metrics</italic></th><th align="left" colspan="8"><italic>Datasets (%)</italic></th></tr><tr><th align="left"><bold><italic>Test-1</italic></bold></th><th align="left"><bold><italic>Test-2</italic></bold></th><th align="left"><bold><italic>Test-3a</italic></bold></th><th align="left"><bold><italic>Test-3b</italic></bold></th><th align="left"><bold><italic>Test-4</italic></bold></th><th align="left"><bold><italic>Test-5</italic></bold></th><th align="left"><bold><italic>Test-6</italic></bold></th><th align="left"><bold><italic>Human Coronavirus</italic></bold></th></tr></thead><tbody><tr><td align="left" rowspan="4">PC-mer</td><td align="left" rowspan="4">12</td><td align="left" rowspan="4">Linear SVM</td><td align="left">Accuracy</td><td align="left"><bold>97.25</bold></td><td align="left"><bold>95.93</bold></td><td char="." align="char"><bold>98.52</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>99.33</bold></td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">F1</td><td align="left">97.23</td><td align="left">95.9</td><td char="." align="char">98.49</td><td align="left">100</td><td align="left">100</td><td align="left">99.36</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">Precision</td><td align="left">97.38</td><td align="left">96.16</td><td char="." align="char">98.85</td><td align="left">100</td><td align="left">100</td><td align="left">99.55</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left">Recall</td><td align="left">97.25</td><td align="left">95.93</td><td char="." align="char">98.52</td><td align="left">100</td><td align="left">100</td><td align="left">99.33</td><td align="left"><bold>100</bold></td><td align="left"><bold>100</bold></td></tr><tr><td align="left" rowspan="7">FCGR</td><td align="left" rowspan="7">7</td><td align="left">LD</td><td align="left" rowspan="6">Accuracy</td><td align="left">91.7</td><td align="left">91.2</td><td char="." align="char">98.1</td><td align="left"><bold>100</bold></td><td align="left">97.6</td><td align="left">98.6</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">LSVM</td><td align="left">90.8</td><td align="left">89.2</td><td char="." align="char">94.2</td><td align="left">93.3</td><td align="left">98.4</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">QSVM</td><td align="left">95</td><td align="left">93.1</td><td char="." align="char">95.2</td><td align="left">93.3</td><td align="left">98.4</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">FKNN</td><td align="left">93.4</td><td align="left">90.3</td><td char="." align="char">95.7</td><td align="left">95</td><td align="left">97.6</td><td align="left">97.4</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">SD</td><td align="left">87.6</td><td align="left">89</td><td char="." align="char">97.6</td><td align="left">95</td><td align="left">98.4</td><td align="left">98.7</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left">SKNN</td><td align="left">93.2</td><td align="left">90.4</td><td char="." align="char">96.2</td><td align="left">95</td><td align="left">97.2</td><td align="left">96.1</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr><tr><td align="left" colspan="2">Average accuracy</td><td align="left">92</td><td align="left">90.5</td><td align="left">96.2</td><td char="." align="char">95.3</td><td align="left">97.6</td><td align="left">97.5</td><td align="left"><bold>100</bold></td><td align="left">-</td></tr></tbody></table></table-wrap><table-wrap id="Tab2"><label>Table 2</label><caption><p>Prediction accuracy of PC-mer for predicting SARS-CoV-2 label in various taxonomic levels</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Training dataset</th><th align="left">Testing dataset</th><th align="left">Prediction accuracy</th><th align="left">Predicted label</th></tr></thead><tbody><tr><td align="left">Test-1</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Riboviria</td></tr><tr><td align="left">Test-2</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Coronaviridae</td></tr><tr><td align="left">Test-3(a\b)</td><td align="left">29 SARS-CoV-2 virus sequences</td><td align="left">100%</td><td align="left">Betacoronavirus</td></tr></tbody></table></table-wrap></p>
      <p id="Par26">For the third dataset (Test-3a), which consists of 208 sequences divided into 4 classes (Coronaviridae), we obtained 98.5% classification accuracy using the PC-mer encoding and Linear SVM model, slightly higher than the best classification model (Linear Discriminant) used by the MLDSP-GUI tool. Additionally, the trained Linear SVM model successfully predicted the label Betacoronavirus for all 29 SARS-CoV-2 virus sequences, achieving 100% classification accuracy. As for the fourth dataset (Test-3b), which comprises 60 sequences grouped into 3 clusters (Coronaviridae), we achieved 100% classification accuracy using PC-mer encoding and Linear SVM model, similar to the accuracy achieved by the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool [<xref ref-type="bibr" rid="CR9">9</xref>]. Finally, the trained Linear SVM model successfully predicted the label Betacoronavirus for all 29 SARS-CoV-2 virus sequences, resulting in 100% classification accuracy. Moving on to the fifth dataset (Test-4), which consists of 124 sequences divided into 4 clusters (Betacoronavirus), we achieved 100% classification accuracy using the PC-mer encoding and Linear SVM model. Therefore, our proposed encoding method led to a nearly 2% increase in classification accuracy compared to the best classification model (Linear Discriminant) and FCGR representation used by the MLDSP-GUI tool. Similarly, for the 29 SARS-CoV-2 virus sequences in this dataset, the trained Linear SVM model predicted the label Sarbecovirus for all 29 sequences, achieving 100% classification accuracy. For the sixth dataset (Test-5), which includes 153 sequences divided into 5 clusters of Betacoronavirus, excluding SARS-CoV-2 and SARS-CoV-2 virus, we achieved a classification accuracy of 99.3% using the PC-mer encoding and Linear SVM classifier. With this dataset, we were able to improve the classification accuracy by nearly 1% when compared to the best classification model (SubspaceDiscriminant) and FCGR representation used by the MLDSP-GUI tool [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      <p id="Par27">On the other hand, in the seventh dataset (Test-6), which represents the last level of taxonomy and contains 76 sequences divided into 2 clusters (Sarbecovirus and SARS-CoV-2 virus), we achieved 100% classification accuracy using PC-mer encoding, which is similar to the results obtained by all other classification models and the FCGR representation used by the MLDSP-GUI tool. For the latest dataset (coronavirus), which includes 874 human coronavirus sequences divided into 7 clusters, we achieved 100% classification accuracy using PC-mer encoding and the Linear SVM model. We evaluated the performance of the proposed encoding method by its feature extraction capability and its sensitivity to the variation of k-mer size in the range of [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] (see Table S <xref rid="MOESM1" ref-type="media">4</xref> in the supplementary materials). While more detailed results are available in the supplementary materials, Table <xref rid="Tab1" ref-type="table">1</xref> summarizes the classification accuracies for a k-mer size of 12, for the sake of brevity. It is worth noting that PC-mer encoding enables the use of larger k-mers by reducing the size of the encoded data. The proposed encoding is designed to reduce the computational complexity of k-mer extraction and the size of the generated data from <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({4}^{k}\right)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq1.gif"/></alternatives></inline-formula> to <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({2}^{k}\right)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq2.gif"/></alternatives></inline-formula>. For instance, the FCGR approach, assuming k = 7, produces a vector of size 16,384 for each genome sequence, while the PC-mer encoding method, assuming k = 12, produces a vector of size 12,288 for each genomic sequence. This is significantly less than the size of the data generated by the FCGR approach for k = 7. It should be noted that using the FCGR approach and assuming k-mers of size 12 results in an encoded vector with a size of 16,777,216 for each genome sequence. According to the main benefits of the proposed encoding method, PC-mer generates small vectors of size 384 for each genome sequence with k = 7, as opposed to the large vectors generated by the MLDSP tool for k-mers of size 7. Therefore, it can be concluded that the data compression ability of PC-mer significantly reduces runtimes of preprocessing, training, and testing phases while also improving classification accuracy and enabling the use of larger k-mers. These advantages are presented in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, and all experiments were conducted on a standard desktop computer. It should be noted that our pipeline, as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, includes an online data API that allows any standard dataset to be downloaded from NCBI and automatically encoded by PC-mer. Consequently, the encoded data can be utilized for training or testing any arbitrary classifier.<fig id="Fig1"><label>Fig. 1</label><caption><p><bold>a</bold> Accuracy of ML-based classifier based on PC-mer for various k-mer sizes, b) the number of required storage units for PC-mer and FCGR matrices for various values of k</p></caption><graphic xlink:href="12864_2023_9373_Fig1_HTML" id="MO1"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>PC-mer method's pipeline</p></caption><graphic xlink:href="12864_2023_9373_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Evaluating computational comparison</title>
      <p id="Par28">To evaluate the performance of PC-mer in comparison to other computational methods, we utilized the proposed method with a k-mer size of 12 on two additional datasets. Next, we calculated the Manhattan distance between the PC-mer vectors corresponding to each sequence pair, resulting in a distance matrix for each dataset. We then used five alignment-free methods (BBC, NCD, wmetric, word-bool, and word-sets) available in the ALFPY tool [<xref ref-type="bibr" rid="CR8">8</xref>] to comprehensively evaluate and compare PC-mer with well-known alternative methods on the human coronavirus and SARS-CoV-2 datasets. For the evaluation of word-bool and word-sets, we assumed a k-mer size of 7, as mentioned earlier. As a reference comparison result, we performed a global alignment between the two sequences using the pairwise alignment function (Smith-Waterman algorithm) in R with the default configuration, generating another distance matrix. Detailed results can be found in the supplementary materials. Finally, to conduct the comparative study, we computed the correlation coefficient between the six distance matrices generated by PC-mer, BBC, NCD, wmetric, word-bool, and word-sets, and the reference matrix generated by the Smith-Waterman algorithm, as presented in Table <xref rid="Tab3" ref-type="table">3</xref>. It is important to note that the pairwise alignment function is used as a benchmark alignment-based method for sequence comparison [<xref ref-type="bibr" rid="CR8">8</xref>], and its output is considered as the reference result. After performing the various steps of the analysis, we obtained correlation coefficient values of 98.08% and 93.75% for the human dataset and SARS-CoV-2 dataset, respectively. These results demonstrate that, in addition to its usefulness in ML-based comparison approaches, the PC-mer encoding method can also be used by computational algorithms for sequence comparison.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Correlation coefficient between distance matrix obtained from six compared methods PC-mer, CLUSTALW, BBC, NCD, Wmetric, Word-bool, Word-sets with reference Smith-Waterman method</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" colspan="2">Methods</th><th align="left">PC-mer</th><th align="left">BBC</th><th align="left">NCD</th><th align="left">Wmetric</th><th align="left">Word-bool</th><th align="left">Word-sets</th></tr></thead><tbody><tr><td align="left" rowspan="2"><bold>Correlation coefficient</bold></td><td align="left">Human coronaviruses dataset</td><td align="left">0.9808</td><td align="left">0.9490</td><td align="left">0.9463</td><td align="left">0.6738</td><td align="left">0.9796</td><td align="left">0.9797</td></tr><tr><td align="left">SARS-CoV-2 dataset</td><td align="left">0.9374</td><td align="left">0.7860</td><td align="left">0.8847</td><td align="left">0.7046</td><td align="left">0.9297</td><td align="left">0.9292</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec6">
      <title>Analyzing the Discriminability of the PC-mer Coding Using PCA</title>
      <p id="Par29">The ability to distinguish between different classes of input sequences is a fundamental aspect of any encoding method, and its importance cannot be overstated. Discriminatory encoding methods allow for the use of a simple classification algorithm to identify the optimal boundary between distinct clusters, thereby reducing computational costs and preprocessing time required to select the appropriate classification algorithm. Additionally, the proper discrimination of encoded data facilitates the use of dimensionality reduction algorithms that extract global features and reduce the size of input data. As large datasets are increasingly common across many disciplines, it is essential to employ methods that significantly reduce their dimensionality in a meaningful way while retaining most of the information content of the original data. Although numerous techniques have been developed for this purpose, PCA is known to be one of the oldest and most widely used methods. It reduces the dimensionality of a dataset while preserving as much statistical information (i.e., variability) as possible. Therefore, we conducted an experiment to evaluate the discriminability of the PC-mer encoding method after significant dimensionality reduction using PCA. To visually represent the encoded data by the PC-mer method and its degree of discrimination, we reduced the dimension of the encoded data from 12,288 to 3 using the PCA algorithm, assuming a k-mer size of 12. Additionally, for a comparative study, we encoded the data using the FCGR coding, assuming a k-mer size of 7, and reduced its dimensions from 16,384 to 3 using the PCA algorithm. The comparative results confirm the superior discrimination capability of PC-mer compared to FCGR using only 3 dimensions. The three-dimensional diagrams, depicting the PCA results of the PC-mer and FCGR encoding methods, are presented in Figs. <xref rid="Fig3" ref-type="fig">3</xref>, <xref rid="Fig4" ref-type="fig">4</xref>, <xref rid="Fig5" ref-type="fig">5</xref>, <xref rid="Fig6" ref-type="fig">6</xref>, <xref rid="Fig7" ref-type="fig">7</xref>, <xref rid="Fig8" ref-type="fig">8</xref>, <xref rid="Fig9" ref-type="fig">9</xref> and <xref rid="Fig10" ref-type="fig">10</xref> for Corona, Test-1, Test-2, Test-3a, Test-3b, Test-4, Test-5, and Test-6 datasets, respectively. In these figures, the left-side plot displays the PCA of the PC-mer method with k = 12, while the right-side plot illustrates the PCA of the FCGR method with k = 7. Our comparison of these figures reveals that the PC-mer method can discriminate different classes of all datasets more effectively than the widely used FCGR encoding approach, using fewer features and less memory usage than FCGR. For instance, as illustrated in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, PC-mer is able to represent the distance between various samples of Test-1 within a space that is approximately three times larger than that of FCGR in all three dimensions (x, y, and z). Similar improvements are also observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref> through Fig. <xref rid="Fig10" ref-type="fig">10</xref>. As demonstrated in these figures, PC-mer's superior discriminability between different classes leads to enhanced classification performance. It is noteworthy that this improvement is also evident in Fig. <xref rid="Fig7" ref-type="fig">7</xref>, <xref rid="Fig8" ref-type="fig">8</xref>, <xref rid="Fig9" ref-type="fig">9</xref>, and <xref rid="Fig10" ref-type="fig">10</xref>, where the samples are located similarly in three dimensions for both PC-mer and FCGR. As illustrated in these figures, PC-mer exhibits a wider separation between the samples compared to FCGR, thereby providing a better representation of their distances.<fig id="Fig3"><label>Fig. 3</label><caption><p>PCA of PC-mer and FCGR for Human coronaviruses datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig3_HTML" id="MO3"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>PCA of PC-mer and FCGR for test-1 datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig4_HTML" id="MO4"/></fig><fig id="Fig5"><label>Fig. 5</label><caption><p>PCA of PC-mer and FCGR for test-2 datasets</p></caption><graphic xlink:href="12864_2023_9373_Fig5_HTML" id="MO5"/></fig><fig id="Fig6"><label>Fig. 6</label><caption><p>PCA of PC-mer and FCGR for test-3a</p></caption><graphic xlink:href="12864_2023_9373_Fig6_HTML" id="MO6"/></fig><fig id="Fig7"><label>Fig. 7</label><caption><p>PCA of PC-mer and FCGR for test-3b</p></caption><graphic xlink:href="12864_2023_9373_Fig7_HTML" id="MO7"/></fig><fig id="Fig8"><label>Fig. 8</label><caption><p>PCA of PC-mer and FCGR for test-4 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig8_HTML" id="MO8"/></fig><fig id="Fig9"><label>Fig. 9</label><caption><p>PCA of PC-mer and FCGR for test-5 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig9_HTML" id="MO9"/></fig><fig id="Fig10"><label>Fig. 10</label><caption><p>PCA of PC-mer and FCGR for test-6 dataset</p></caption><graphic xlink:href="12864_2023_9373_Fig10_HTML" id="MO10"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Discussion</title>
    <p id="Par30">In late December 2019, a novel coronavirus, SARS-CoV-2, was reported in China and quickly spread worldwide. This virus is genetically similar to SARS-CoV and causes a severe illness known as COVID-19, which has resulted in a significant number of deaths worldwide [<xref ref-type="bibr" rid="CR1">1</xref>]. However, identifying SARS-CoV-2 can be challenging since the virus shares genetic similarities with other viruses in the Coronaviridae family, making it difficult to distinguish between them [<xref ref-type="bibr" rid="CR4">4</xref>]. This presents a significant challenge since the detection of SARS-CoV-2 may lead to false positive results due to the presence of other similar viruses [<xref ref-type="bibr" rid="CR4">4</xref>]. Hence, it is crucial to accurately differentiate the SARS-CoV-2 virus from other similar viruses for improving patient diagnosis and managing the outbreak. This time-critical issue demands high-speed sequence comparison and classification of thousands of known sequences to narrow down the possible origin candidates. Therefore, relying on alignment-based methods, which are time-consuming and may not guarantee homologous sequence continuity, can be challenging.</p>
    <p id="Par31">On the other hand, alignment-based methods are not suitable for efficiently comparing a large number of sequences that differ widely in composition [<xref ref-type="bibr" rid="CR3">3</xref>]. To overcome the limitations of alignment-based methods [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR18">18</xref>], several alignment-free methods have been proposed as high-speed alternatives capable of handling a large number of sequences [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]. Furthermore, since alignment-free methods compare homologous or comparable sequences, they can provide accurate and relevant quantitative comparisons even when input sequences originate from diverse locations with varied compositions [<xref ref-type="bibr" rid="CR3">3</xref>]. Despite these advantages, alignment-free methods like MLDSP-FCGR extract a large volume of data per sample, which is <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({4}^{k})$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq3.gif"/></alternatives></inline-formula>. Therefore, there is a trade-off between classification accuracy and computation speed. Specifically, increasing the k-mer size improves classification accuracy at the expense of reducing classification speed and dramatically increasing the volume of generated data. The latter requirement necessitates the use of powerful and specialized processing platforms, such as external servers over the Internet. However, policy, legality, and regulatory issues may prohibit the transmission of patients' sequence data to an external server. Additionally, various concerns about privacy policies and the possibility of data breaches can limit researchers' and clinicians' use of such servers. Therefore, the developed software should be made available as an offline and standalone version. Recently, many data scientists have been extensively researching the virus's remarkable features. Furthermore, artificial intelligence applications and machine learning-based methods have been successfully used to accelerate the diagnosis process and improve the classification accuracy of COVID-19 cases [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. Nevertheless, without a genomic sequence encoding method, a large volume of data is generated per genomic sequence. Therefore, an efficient encoding method can not only enhance the classification accuracy but also enable the utilization of popular machine learning-based models. Furthermore, reducing the volume of generated data, an efficient encoding method can extract large k-mers while improving processing speed on desktop computers. Consequently, as sequencing technology becomes more affordable and accessible, the computational challenges of sequence analysis become increasingly significant. This trend drives the current focus of classifier development towards faster alignment-independent solutions.</p>
    <p id="Par32">In this study, we propose an alignment-free classification method based on a machine learning model that takes advantage of a novel encoding algorithm called PC-mer. This algorithm reduces the volume of generated feature vectors from <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({4}^{k})$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq4.gif"/></alternatives></inline-formula> to <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O({2}^{k})$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq5.gif"/></alternatives></inline-formula> per sample, resulting in a reduced amount of data for large k-mer sizes compared to the traditional FCGR method. PC-mer offers several advantages: firstly, it leads to higher classification accuracy of the Coronaviridae family using machine learning algorithms, with no prior adjustments. Secondly, it reduces memory usage by about 2<sup> k</sup> times compared to traditional k-mer based encoding techniques. Finally, our proposed compression encoding method has led to a notable increase in training speed and a significant improvement in classification accuracy for both SARS-CoV-2 and Human coronavirus datasets. As shown in Table <xref rid="Tab1" ref-type="table">1</xref>, our method outperforms the reference methods [<xref ref-type="bibr" rid="CR3">3</xref>] in terms of classification accuracy. Moreover, we have significantly reduced the false positive and false negative rates across various levels of Coronaviridae family, as demonstrated by the confusion matrices in Fig. S1 to Fig. S7 of the supplementary materials.</p>
    <p id="Par33">Based on our simulation study, when using small k-mers, PC-mer achieves comparable or even higher accuracy than the FCGR method across multiple datasets. For instance, when applying PC-mer coding and a Linear SVM model to Test-1, Test-2, Test-3a, Test-3b, and Test-4 datasets with k = 5, we achieved classification accuracies of 94%, 95%, 98%, 100%, and 99%, respectively, as well as 100% classification accuracy for 29 SARS-CoV-2 virus sequences in the test data (see supplemental file "PC-mer-SM" section "Investigating the impact of size k in the PC-mer encoding method"). It is worth noting that the MLDSP tool achieved 93%, 91%, 98%, 100%, 98%, and 99% classification accuracy for the corresponding datasets, respectively, assuming k = 7 as the best k-mer length for the FCGR encoding method and various classifiers. To highlight the compression efficiency of PC-mer, it should be mentioned that the amount of data extracted per sample by the MLDSP tool using a k-mer size of 7 is approximately 170 times greater than that of PC-mer with a k-mer size of 5. Additionally, PC-mer achieved a perfect classification accuracy of 100% with a k-mer size of 1 for the Human Coronavirus dataset obtained from human samples.</p>
    <p id="Par34">As presented in Table S <xref rid="MOESM1" ref-type="media">3</xref>, the length of the longest sequence in the Human coronavirus dataset is 30818, which is significantly larger than the size of the extracted data per sample using PC-mer (which is 12). Thus, the high classification accuracy achieved for various datasets, while significantly reducing the size of the extracted feature vectors per sample, confirms the effectiveness of the PC-mer encoding method in feature extraction. To further investigate this effectiveness, we conducted an experiment to evaluate the discriminability of PC-mer encoding when significant dimensionality reduction (up to 3 features) is performed using Principal Component Analysis (PCA) (as described in Sect. 2.2).</p>
    <p id="Par35">It is noteworthy that the PC-mer encoding method has achieved superior performance without requiring any adjustments when feeding a basic machine learning algorithm, Linear SVM. In addition to its improved classification accuracy, our proposed encoding method significantly reduces the total processing time, including the preprocessing, training, and testing steps. This is due to the efficient encoding algorithm used in PC-mer, which enables the use of simple machine learning models for Coronaviridae family classification on a desktop computer with a CPU processor. Figure <xref rid="Fig11" ref-type="fig">11</xref> illustrates the execution times of the preprocessing, training, and testing steps for the PC-mer encoding method when Linear SVM is used as the classification algorithm. It should be noted that this improvement in execution time can be compared to alternative approaches. Table <xref rid="Tab4" ref-type="table">4</xref> compares the PC-mer and MLDSP-GUI (FCGR) methods for various datasets used in the classification test based on machine learning. It should be noted that the processing system used for execution significantly affects the comparison results. Specifically, MLDSP-GUI (FCGR) [<xref ref-type="bibr" rid="CR9">9</xref>] was developed on an ASUS ROG G752VS computer with 4 cores (8 threads) with a 2.7 GHz Intel Core i7 6820HK processor and 64 GB DD4 2400 MHz SDRAM, which has four times more processing cores than our system. These advanced features considered for executing MLDSP-GUI (FCGR), such as large RAMs, significantly improve the execution time. On the other hand, implementing MLDSP-GUI (FCGR) on a similar processing system to ours leads to an execution time four times longer than that of PC-mer. To ensure a fair comparison, in Table <xref rid="Tab4" ref-type="table">4</xref>, we scaled down the PC-mer execution time by a factor of four. However, in reality, the reduction in PC-mer's execution time would be more than four times if the influence of RAM is also considered. As per the table, the improvements in execution time range from 20% for larger datasets to 70% for smaller datasets, with an average improvement of 44% across all datasets.<fig id="Fig11"><label>Fig. 11</label><caption><p>Execution times of the preprocessing, training, and testing steps of the PC-mer encoding method, assuming Linear SVM as the classification algorithm</p></caption><graphic xlink:href="12864_2023_9373_Fig11_HTML" id="MO11"/></fig><table-wrap id="Tab4"><label>Table 4</label><caption><p>Execution times (in Second) of the preprocessing, training, and testing steps of the PC-mer and MLDSP-GUI</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"><bold>Test-1</bold></th><th align="left"><bold>Test-2</bold></th><th align="left"><bold>Test-3a</bold></th><th align="left"><bold>Test-3b</bold></th><th align="left"><bold>Test-4</bold></th><th align="left"><bold>Test-5</bold></th><th align="left"><bold>Test-6</bold></th></tr></thead><tbody><tr><td align="left">Preprocessing (PC-mer)</td><td char="." align="char">15.12</td><td char="." align="char">9.94</td><td char="." align="char">1.38</td><td char="." align="char">0.43</td><td char="." align="char">1.15</td><td char="." align="char">1.25</td><td char="." align="char">0.87</td></tr><tr><td align="left">Preprocessing (MLDSP-FCGR)</td><td char="." align="char">10.55</td><td char="." align="char">8.26</td><td char="." align="char">1.02</td><td char="." align="char">0.55</td><td char="." align="char">0.43</td><td char="." align="char">0.46</td><td char="." align="char">0.29</td></tr><tr><td align="left">tenfold cross-validation (PC-mer)</td><td char="." align="char">230.63</td><td char="." align="char">163.44</td><td char="." align="char">1.84</td><td char="." align="char">0.99</td><td char="." align="char">1.47</td><td char="." align="char">1.02</td><td char="." align="char">0.35</td></tr><tr><td align="left">tenfold cross-validation (MLDSP-FCGR)</td><td char="." align="char">250.01</td><td char="." align="char">168.63</td><td char="." align="char">5.11</td><td char="." align="char">1.95</td><td char="." align="char">2.04</td><td char="." align="char">2.4</td><td char="." align="char">1.85</td></tr><tr><td align="left">Testing (PC-mer)</td><td char="." align="char">0.78</td><td char="." align="char">0.745</td><td char="." align="char">0.05</td><td char="." align="char">0.02</td><td char="." align="char">0.03</td><td char="." align="char">-</td><td char="." align="char">-</td></tr><tr><td align="left">Testing (MLDSP-FCGR)</td><td char="." align="char">62.77</td><td char="." align="char">45.97</td><td char="." align="char">5.82</td><td char="." align="char">3.06</td><td char="." align="char">3.01</td><td char="." align="char">-</td><td char="." align="char">-</td></tr><tr><td align="left">Total time (PC-mer)</td><td char="." align="char">246.53</td><td char="." align="char">174.12</td><td char="." align="char">3.27</td><td char="." align="char">1.45</td><td char="." align="char">2.65</td><td char="." align="char">2.27</td><td char="." align="char">1.22</td></tr><tr><td align="left">Total time (MLDSP-FCGR)</td><td char="." align="char">323.33</td><td char="." align="char">222.86</td><td char="." align="char">11.95</td><td char="." align="char">5.56</td><td char="." align="char">5.48</td><td char="." align="char">2.86</td><td char="." align="char">2.14</td></tr><tr><td align="left">Improvement by PC-mer (%)</td><td char="." align="char"><bold>23.75</bold></td><td char="." align="char"><bold>21.87</bold></td><td char="." align="char"><bold>72.64</bold></td><td char="." align="char"><bold>73.92</bold></td><td char="." align="char"><bold>51.64</bold></td><td char="." align="char"><bold>20.63</bold></td><td char="." align="char"><bold>42.99</bold></td></tr></tbody></table></table-wrap></p>
    <p id="Par36">In this work, we conducted a comprehensive evaluation of the PC-mer encoding method for sequence comparison using computational methods. We utilized the PC-mer encoding in an alignment-free comparison method and employed a simple computational algorithm, namely Manhattan distance calculation, to generate the distance matrix. The simulation results confirm that PC-mer enables sequence comparison and distinction at the family and species levels without the need for sequence alignment. Utilizing the advantages of PC-mer encoding, sequence comparison can be achieved rapidly with accurate comparison scores. While a simple classifier was used in this study to emphasize the encoding capability of PC-mer, it is expected that better performance can be achieved with customized classification algorithms.</p>
    <p id="Par37">It is important to note that in order to produce a dissimilarity score in the range of [0,1], the sequence dissimilarity score needs to be normalized. To achieve this, first, the PC-mer matrices are normalized by the total number of k-mers in each sequence, and then the Manhattan distances are calculated. This allows the normalized scores to evaluate the similarity of two specific sequences without the need for a large number of sequences. This achievement of the PC-mer encoding overcomes a major limitation of alignment-based methods, for which no specific range of output values exists. Therefore, evaluation of sequence similarity can only be achieved by comparing output values for a large number of sequences. Given that many k-mer-based methods are used for a variety of applications that take sequences as their input, it is expected that PC-mer will continue to be utilized in these applications as well.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusion</title>
    <p id="Par38">With confirmed cases of human-to-human transmission and concerns over asymptomatic transmission, there is an urgent need for continued intervention to prevent the spread of the SARS-CoV-2 virus. However, genome sequencing and sequence analysis in the laboratory can be both time-consuming and expensive. Furthermore, due to the high amino acid similarity between the SARS-CoV-2 virus and SARS-CoV, classifying the Coronaviridae family can be a significant challenge. In this context, computational methods using artificial neural networks, such as CNN, DLM, and GNN, can provide an efficient classification tool by leveraging hidden feature extraction. However, these methods suffer from computational overheads in terms of time and memory requirements needed to achieve high classification accuracy. Additionally, challenges such as parameter adjustment and the need to develop new classifier architectures present additional obstacles to using artificial neural networks. Therefore, encoding algorithms for genome sequences, which can be fed to classifiers, can play a crucial role in extracting hidden features, reducing computational overhead, and improving classification accuracy. Our proposed encoding method, PC-mer, is a feature extraction technique that is fast, accurate, and space-efficient. It is also compatible with a wide range of machine learning classifiers and can be used on computers with basic processing capabilities. Our simulation results, obtained by thoroughly analyzing over 5874 unique viral sequences divided into eight datasets, demonstrate the superiority of our method in terms of classification accuracy, runtime, and memory consumption. In other words, according to the comparative results presented in Sects. 2 and 3, the SVM model fed by PC-mer encoding (k = 12) outperforms MLDSP-GUI fed by FCGR encoding (k = 7), with an average execution time improvement of 44%, an accuracy improvement of more than 2%, and a 25% reduction in memory usage. Similar to k-mer-based methods, PC-mer's utility extends beyond sequence comparison, as it can be used in various computational approaches. To evaluate this capability, we analyzed a dataset with 5 samples from 7 different classes using PC-mer and the Manhattan distance, and compared the results with those obtained using a well-known alignment strategy. The simulation results showed a 98% correlation coefficient between the distance matrices produced by these two approaches. This study suggests that when rapid taxonomic classification is necessary, such as during novel viral outbreaks, an appropriate alignment-free approach for comparative genomics investigation can be crucial. To achieve this, we developed a package based on the PC-mer encoding approach, which includes a machine learning-powered classifier and a tool for computational comparison. Using simple classifiers that can also take input sequences from the NCBI database via IDs, the developed machine learning (ML)-based classifier is a fast and precise method to classify coronavirus samples into 7 clusters. In addition, the computational comparison tool in this package produces a score for every pair of input sequences as an estimate of their dissimilarity. The thorough investigation of the PC-mer technique demonstrates its potential for more comprehensive coronavirus analysis, such as examining intra-species samples and SARS-CoV-2 samples from various countries. Moreover, considering the wide range of applications that k-mer-based approaches are used for, including metagenomics classification, we will also explore the utility of PC-mer encoding in these applications in future studies. PC-mer can also be useful in certain applications that involve searching for or detecting specific sequences, such as in the identification of viruses or pathogens. In cases where the sequences of interest are highly conserved, PC-mer may be a faster and more accurate method for detecting them than alignment-based methods. This is because PC-mer is able to capture the underlying similarities between sequences without requiring them to be aligned in a specific way. Overall, while PC-mer has its limitations and is not a replacement for all types of sequence analysis, it can be a valuable tool for certain types of tasks.</p>
  </sec>
  <sec id="Sec9">
    <title>Materials and methods</title>
    <sec id="Sec10">
      <title>Datasets</title>
      <p id="Par39">As previously mentioned, SARS-CoV-2 datasets may include clusters from multiple taxonomic levels, with intrafamily level being a common one. The Coronaviridae family comprises four genera: Alphacoronavirus (AlphaCoV), Betacoronavirus (BetaCoV), Gammacoronavirus (GammaCoV), and Deltacoronavirus (DeltaCoV). GammaCoV and DeltaCoV primarily infect bird species, while AlphaCoV and BetaCoV infect mammalian hosts [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>]. Various types of coronaviruses have been identified, including different AlphaCoV types such as human coronavirus 229E (229ECoV) and human coronavirus NL63 (NL63-CoV). In addition, contemporary BetaCoV types include human coronavirus HKU1 (HKU1-CoV), Severe Acute Respiratory Syndrome coronavirus (SARS-CoV), and Middle East Respiratory Syndrome coronavirus (MERS-CoV). Among them, SARS-CoV and MERS-CoV are known to cause more severe respiratory illnesses compared to other types [<xref ref-type="bibr" rid="CR1">1</xref>]. Many studies have investigated the classification of samples from all of the aforementioned clusters, as well as other unlisted ones. Additionally, there have been efforts to distinguish SARS-CoV-2 samples from those of other clusters and correctly identify their category [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>].</p>
      <p id="Par40">In this study, we conducted two evaluation scenarios: 1) evaluating the application of PC-mer by ML-based classifiers, and 2) evaluating the efficiency of PC-mer by computational classification methods. To assess the first scenario, we used two types of datasets to demonstrate PC-mer's ability to differentiate SARS-CoV-2 from a variety of intra/inter-species samples. One of our datasets was selected from [<xref ref-type="bibr" rid="CR3">3</xref>] for a fair comparison with MLDSP. This dataset comprised 29 genome viruses that caused COVID-19, and was collected on January 27, 2019. Since this dataset contained viruses from different species, and the coronaviruses other than SARS-CoV-2 were selected from non-human coronaviruses, we used another dataset containing different types of human coronaviruses. We designed seven experiments at distinct taxonomic levels, each with a different number of clusters. The dataset used in this study includes 7 clusters, namely HCoV-229E, HCoV-HKU1, HCoV-NL63, HCoV-OC43, MERS-CoV, SARS-CoV-1, and SARS-CoV-2, which overcomes the limitation of the [<xref ref-type="bibr" rid="CR3">3</xref>] dataset. Notably, this dataset has an appropriate number of samples for each cluster, which avoids the classifier being biased towards SARS-CoV-2 samples, unlike the [<xref ref-type="bibr" rid="CR1">1</xref>] dataset. For the second evaluation scenario, we created two datasets by downloading complete sequences without any ambiguous characters. One of these datasets contains the same 7 clusters as the first evaluation scenario, with each cluster consisting of five sequences (listed in Table S <xref rid="MOESM2" ref-type="media">1</xref>). The second dataset includes 45 SARS-CoV-2 sequences (listed in Table S <xref rid="MOESM3" ref-type="media">2</xref>), which is used to demonstrate the PC-mer's ability to generate appropriate dissimilarity scores. All sequences in these datasets were retrieved from the "NCBI virus" database. More details about these datasets can be found in the "Data" section of the Supplementary materials.</p>
    </sec>
    <sec id="Sec11">
      <title>Proposed encoding method</title>
      <p id="Par41">The Frequency of Chaos Game Representation (FCGR) is a popular method for encoding sequential data, as it produces a matrix of k-mer frequencies for each sequence. To generate FCGR, the first step is to create a Chaos Game Representation (CGR) of the sequence. CGR requires a polygon with n distinct alphabets, where n represents the number of allowed alphabets in the input sequences. Unlike organizing the alphabets in a linear way, CGR provides a holistic visual representation of the sequence. The location of each letter s_i of a sequence S of length l_s on the CGR, denoted as CGR_i, is calculated by moving a pointer halfway between the position of letter <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${s}_{i-1}$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq6.gif"/></alternatives></inline-formula> in the <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR \left(CG{R}_{i-1}\right)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:mi>R</mml:mi><mml:mfenced close=")" open="("><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq7.gif"/></alternatives></inline-formula> and the corner of the polygon assigned to letter <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CG{R}_{{s}_{i}}$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq8.gif"/></alternatives></inline-formula> within the CGR space, according to Eq. 1. It is important to note that the starting point of the <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR \left(CG{R}_{0}\right)$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:mi>R</mml:mi><mml:mfenced close=")" open="("><mml:mi>C</mml:mi><mml:mi>G</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq9.gif"/></alternatives></inline-formula> corresponds to the coordinates of the polygon's center point. In this study, we propose a new encoding method called PC-mer, which is an improvement over the FCGR algorithm. To achieve this, we introduce a novel categorization of the four nucleotides into three sets of structural groups based on three distinct chemical and physical features [<xref ref-type="bibr" rid="CR21">21</xref>]:</p>
      <p id="Par42">
        <list list-type="order">
          <list-item>
            <p id="Par43">The nucleotides A and G are purines and are denoted by the symbol R, while the nucleotides C and T (U) are pyrimidines and are represented by the symbol Y.</p>
          </list-item>
          <list-item>
            <p id="Par44">The nucleotides A and C are amino and represented by the symbol M, while the nucleotides G and T (U) are keto and represented by the symbol K in the second group.</p>
          </list-item>
          <list-item>
            <p id="Par45">Finally, based on the strength of their hydrogen bonds, the nucleotides C and G have strong hydrogen bonds denoted by the symbol S, while A and T (U) have weak hydrogen bonds denoted by the symbol W.</p>
          </list-item>
        </list>
      </p>
      <p id="Par46">
        <disp-formula id="Equ1">
          <label>1</label>
          <alternatives>
            <tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$CGR_i=0.5.(CGR_{i-1}+CGR_{s_i})\;with\;i=1,\dots,l_{S\;}and\;CGR_0=(0.5,0.5)$$\end{document}</tex-math>
            <mml:math id="M20" display="block">
              <mml:mrow>
                <mml:mi>C</mml:mi>
                <mml:mi>G</mml:mi>
                <mml:msub>
                  <mml:mi>R</mml:mi>
                  <mml:mi>i</mml:mi>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mn>0.5</mml:mn>
                <mml:mo>.</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>C</mml:mi>
                  <mml:mi>G</mml:mi>
                  <mml:msub>
                    <mml:mi>R</mml:mi>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                      <mml:mo>-</mml:mo>
                      <mml:mn>1</mml:mn>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo>+</mml:mo>
                  <mml:mi>C</mml:mi>
                  <mml:mi>G</mml:mi>
                  <mml:msub>
                    <mml:mi>R</mml:mi>
                    <mml:msub>
                      <mml:mi>s</mml:mi>
                      <mml:mi>i</mml:mi>
                    </mml:msub>
                  </mml:msub>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
                <mml:mspace width="0.277778em"/>
                <mml:mi>w</mml:mi>
                <mml:mi>i</mml:mi>
                <mml:mi>t</mml:mi>
                <mml:mi>h</mml:mi>
                <mml:mspace width="0.277778em"/>
                <mml:mi>i</mml:mi>
                <mml:mo>=</mml:mo>
                <mml:mn>1</mml:mn>
                <mml:mo>,</mml:mo>
                <mml:mo>⋯</mml:mo>
                <mml:mo>,</mml:mo>
                <mml:msub>
                  <mml:mi>l</mml:mi>
                  <mml:mrow>
                    <mml:mi>S</mml:mi>
                    <mml:mspace width="0.277778em"/>
                  </mml:mrow>
                </mml:msub>
                <mml:mi>a</mml:mi>
                <mml:mi>n</mml:mi>
                <mml:mi>d</mml:mi>
                <mml:mspace width="0.277778em"/>
                <mml:mi>C</mml:mi>
                <mml:mi>G</mml:mi>
                <mml:msub>
                  <mml:mi>R</mml:mi>
                  <mml:mn>0</mml:mn>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mrow>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mn>0.5</mml:mn>
                  <mml:mo>,</mml:mo>
                  <mml:mn>0.5</mml:mn>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
              </mml:mrow>
            </mml:math>
            <graphic xlink:href="12864_2023_9373_Article_Equ1.gif" position="anchor"/>
          </alternatives>
        </disp-formula>
      </p>
      <p id="Par47">The pseudo-code of the PC-mer method is presented in Algorithm 1. Firstly, the nucleotide symbols are converted to uppercase letters, and any unknown nucleotides are removed, based on the above categorization approach (line 1). Three 1D vectors with a length of 2<sup> k</sup>, i.e., <inline-formula id="IEq10"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{purine-pyrimidine}$$\end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mi>y</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq10.gif"/></alternatives></inline-formula>, <inline-formula id="IEq11"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{amino-keto}$$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>o</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mi>t</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq11.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq12"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${v}_{weak-strong}$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq12.gif"/></alternatives></inline-formula>, are utilized to implement the PC-mer method. The two members of each set of alphabet are represented by the two corners of the corresponding vector (line 2). The PC-mer method is then applied to all nucleotides in the input sequence, as well as all three 1D vectors simultaneously. CGR_i is computed using the purine-pyrimidine property and Eq. 1, and all k-mers for each nucleotide s_i in the sequence S are counted (line 3–11). Also, the amino-keto properties (line 21–29) and strong–weak properties (line 25–35) undergo the same procedure. According to the proposed algorithm, a vector of 3 × 2<sup> k</sup> cells is constructed for each sequence (line 36), while traditional FCGR encoding produces a vector of 4<sup> k</sup> cells. As a result, our suggested encoding method, called PC-mer, significantly reduces the volume of the encoded data and computational complexity. The steps of PC-mer encoding, assuming a sample input sequence, are illustrated in Fig. <xref rid="Fig12" ref-type="fig">12</xref>. In the following sections, we will investigate and demonstrate the impact of this novel encoding method on the classification performance of coronavirus.<fig position="anchor" id="Figa"><caption><p><bold>Algorithm 1. </bold>PC-mer based representation.</p></caption><graphic position="anchor" xlink:href="12864_2023_9373_Figa_HTML" id="MO12"/></fig><fig id="Fig12"><label>Fig. 12</label><caption><p>PC-mer encoding steps for sample sequence "ATCGTA"</p></caption><graphic xlink:href="12864_2023_9373_Fig12_HTML" id="MO13"/></fig></p>
    </sec>
    <sec id="Sec12">
      <title>Memory complexity</title>
      <p id="Par48">Taking memory reduction as the primary advantage of PC-mer, this section aims to analyze the memory consumption of the encoding unit in PC-mer, which can impact its functionality and execution time.</p>
      <p id="Par49">As mentioned earlier, k-mer refers to fixed-length substrings of a sequence. To extract k-mers, a sliding window of fixed length k and step size of one is applied to the sequence. This results in all possible k-mer substrings of the sequence. It should be noted that for an alphabet set of size N, there are N<sup>k</sup> possible k-mers. In the case of a four-nucleotide alphabet set, there are 4<sup> k</sup> possible k-mers. Thus, the traditional k-mer representation approach has a memory usage complexity of <inline-formula id="IEq13"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({4}^{k}\right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq13.gif"/></alternatives></inline-formula>. However, as discussed in previous sections, the encoding method proposed by PC-mer utilizes three sets of two-letter alphabets. In this way, there are 2 k alternative modes for each possible k-mer, and thus, the memory complexity of PC-mer is <inline-formula id="IEq14"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({2}^{k}\right)$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12864_2023_9373_Article_IEq14.gif"/></alternatives></inline-formula>. Therefore, we can conclude that PC-mer requires 2<sup> k</sup> times less memory usage compared to traditional k-mer-based methods.</p>
    </sec>
    <sec id="Sec13">
      <title>Classification method</title>
      <p id="Par50">Classification algorithms play a crucial role in distinguishing different clusters, uncovering hidden features, and ultimately enhancing classification accuracy. While alignment-based methods can be effective for relatively small nucleotide sequences, they do not scale well for larger sequences [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. Due to their extensive computational time and complexity, it is practically challenging to analyze hundreds of whole genomes using alignment-based approaches. Furthermore, these methods may have unstable performance for highly variable regions of the genome, depending on heuristically specified parameters [<xref ref-type="bibr" rid="CR13">13</xref>]. It is also important to note that not all datasets may meet the prerequisite assumptions of alignment-based methods, such as the homogeneity of input sequences [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>].</p>
      <p id="Par51">Due to their advantages and desirable characteristics, alignment-free approaches are well-suited for whole-genome comparisons [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]. These methods can be classified into two main types: computational algorithms and machine learning-based approaches. Each of these types can be further divided into subclasses based on their algorithms, although there is no consensus on how to categorize them. For example, computational methods can be divided into two categories: word-based methods, which utilize k-mer frequency, and information theory-based methods, which compare informational content such as entropy between full-length sequences [<xref ref-type="bibr" rid="CR8">8</xref>]. Machine learning-based methods can also be classified into two categories: feature-based methods, which transform genomic sequences into feature vectors for comparison, and model-based methods, which generate a model (such as a Markov model) for each sequence [<xref ref-type="bibr" rid="CR8">8</xref>]. However, there may be some overlap in this classification, and it is not definitive.</p>
      <p id="Par52">Although various alignment-free methods are used for classification purposes, machine learning-based methods have gained more attention due to the exponential growth of sequenced data and their high potential in sequence classification. Over the past decade, deep neural networks and other machine learning algorithms have demonstrated impressive performance in data classification. However, the main challenges in using accurate classification algorithms are their computational complexity in terms of time and memory usage, the necessary preprocessing for parameter adjustment, and the requirement for developing new classifier architectures for diverse datasets. These problems are amplified by increasing the volume of input data and the number of clusters, which often occurs in biological data.</p>
      <p id="Par53">As a consequence, encoding algorithms that extract relevant features from the input data can be crucial in addressing the issues associated with most classification algorithms. With the ability to extract features using the PC-mer encoding method and create significant separation between distinct clusters, we can utilize a broad range of machine learning-based classification algorithms.</p>
      <p id="Par54">However, in this study, and without sacrificing generality, we use one of the simplest supervised classification algorithms, the Linear Support Vector Machine classifier (Linear SVM), to demonstrate the encoding capability and feature extraction of PC-mer. The main reasons for choosing this simple algorithm over other alternatives, such as convolutional neural networks or more powerful machine learning-based algorithms, are as follows:<list list-type="bullet"><list-item><p id="Par55">To mitigate the computational burden of using convolutional networks, both in terms of runtime and memory requirements, while still achieving high classification accuracy.</p></list-item><list-item><p id="Par56">To eliminate the need for adjusting numerous parameters and developing new neural network architectures.</p></list-item><list-item><p id="Par57">To enable a fair and unbiased evaluation of the encoding method regardless of the choice of classification algorithm.</p></list-item><list-item><p id="Par58">To allow for the algorithm to be run on basic computers without specialized hardware.</p></list-item></list></p>
    </sec>
    <sec id="Sec14">
      <title>Experimental setup</title>
      <p id="Par59">For evaluating the performance of the Linear SVM classifiers, we used the tenfold cross-validation approach and implemented the classifiers using the scikit-learn Python library with default settings and hyperparameters. It is important to note that all experiments, including preprocessing, training, and testing, were conducted on a desktop computer equipped with an i7-6500 2.5 GHz CPU, 8 GB RAM, and a GeForce GTX 920 M GPU with 2 GB of DDR3 RAM.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12864_2023_9373_MOESM1_ESM.docx">
            <caption>
              <p>
                <bold>Additional file 1. </bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12864_2023_9373_MOESM2_ESM.txt">
            <caption>
              <p>
                <bold>Additional file 2. </bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12864_2023_9373_MOESM3_ESM.txt">
            <caption>
              <p>
                <bold>Additional file 3.</bold>
              </p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ML</term>
        <def>
          <p id="Par4">Machine Learning</p>
        </def>
      </def-item>
      <def-item>
        <term>PC-mer</term>
        <def>
          <p id="Par5">Physicochemical k-mer</p>
        </def>
      </def-item>
      <def-item>
        <term>SARS-CoV</term>
        <def>
          <p id="Par6">Severe Acute Respiratory Syndrome Coronavirus</p>
        </def>
      </def-item>
      <def-item>
        <term>SVM</term>
        <def>
          <p id="Par7">Support-Vector Machine</p>
        </def>
      </def-item>
      <def-item>
        <term>PCA</term>
        <def>
          <p id="Par8">Principal Component Analysis</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>S. Akbari, and A. Mohammadi, and S. Koohi developed the idea, S. Akbari and A. Mohammadi wrote code in programming language and analyzed the results, and also wrote the manuscript text. S. Koohi guided the study. All authors especially S. Koohi reviewed the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Authors do not use any source of funding.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Source code is freely available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/SAkbari93/PC-mer_Corona">https://github.com/SAkbari93/PC-mer_Corona</ext-link>, implemented in python, and supported on Linux and MS Windows. The installable package of PC-mer and its document are also available at <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/physicochemical-mers/">https://pypi.org/project/physicochemical-mers/</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par60">Not applicable. All samples had been collected in the context of previous studies.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par61">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par62">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arslan</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Arslan</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A new COVID-19 detection method from human genome sequences using CpG island features and KNN classifier</article-title>
        <source>Eng Sci Technol an Int J</source>
        <year>2021</year>
        <volume>24</volume>
        <issue>4</issue>
        <fpage>839</fpage>
        <lpage>847</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jestch.2020.12.026</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dlamini</surname>
            <given-names>GS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Classification of COVID-19 and other pathogenic sequences: A dinucleotide frequency and machine learning approach</article-title>
        <source>IEEE Access</source>
        <year>2020</year>
        <volume>8</volume>
        <fpage>195263</fpage>
        <lpage>195273</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2020.3031387</pub-id>
        <?supplied-pmid 34976561?>
        <pub-id pub-id-type="pmid">34976561</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Randhawa</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Soltysiak</surname>
            <given-names>MPM</given-names>
          </name>
          <name>
            <surname>El Roz</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>de Souza</surname>
            <given-names>CPE</given-names>
          </name>
          <name>
            <surname>Hill</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kari</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Machine learning using intrinsic genomic signatures for rapid classification of novel pathogens: COVID-19 case study</article-title>
        <source>PLoS One</source>
        <year>2020</year>
        <volume>15</volume>
        <issue>4</issue>
        <fpage>e0232391</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0232391</pub-id>
        <?supplied-pmid 32330208?>
        <pub-id pub-id-type="pmid">32330208</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Whata</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Chimedza</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Deep Learning for SARS COV-2 Genome Sequences</article-title>
        <source>IEEE Access</source>
        <year>2021</year>
        <volume>9</volume>
        <fpage>59597</fpage>
        <lpage>59611</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2021.3073728</pub-id>
        <?supplied-pmid 34812391?>
        <pub-id pub-id-type="pmid">34812391</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Li X, et al., “Evolutionary history, potential intermediate animal host, and cross-species analyses of SARS-CoV-2,” J Med Virol. 2020;92(6) 10.1002/jmv.25731.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Khan</surname>
            <given-names>MI</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comparative genome analysis of novel coronavirus (SARS-CoV-2) from different geographical locations and the effect of mutations on major target proteins: an in silico insight</article-title>
        <source>PLoS One</source>
        <year>2020</year>
        <volume>15</volume>
        <fpage>e0238344</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0238344</pub-id>
        <?supplied-pmid 32881907?>
        <pub-id pub-id-type="pmid">32881907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">S Chen, C He, Y Li, Z Li, and CE Melançon. A computational toolset for rapid identification of SARS-CoV-2, other viruses and microorganisms from sequencing data. Brief. Bioinform. 2020;22(2).</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison: benefits, applications, and tools</article-title>
        <source>Genome Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>186</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1319-7</pub-id>
        <?supplied-pmid 28974235?>
        <pub-id pub-id-type="pmid">28974235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Randhawa</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Hill</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Kari</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>MLDSP-GUI: an alignment-free standalone tool with an interactive graphical user interface for DNA sequence comparison and analysis</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <issue>7</issue>
        <fpage>2258</fpage>
        <lpage>2259</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz918</pub-id>
        <?supplied-pmid 31834361?>
        <pub-id pub-id-type="pmid">31834361</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lemieux</surname>
            <given-names>JE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Phylogenetic analysis of SARS-CoV-2 in Boston highlights the impact of superspreading events</article-title>
        <source>Science (80-. )</source>
        <year>2021</year>
        <volume>371</volume>
        <fpage>6529</fpage>
        <pub-id pub-id-type="doi">10.1126/science.abe3261</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Naeem</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Mabrouk</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Marzouk</surname>
            <given-names>SY</given-names>
          </name>
          <name>
            <surname>Eldosoky</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>A diagnostic genomic signal processing (GSP)-based system for automatic feature analysis and detection of COVID-19</article-title>
        <source>Brief Bioinform</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>1197</fpage>
        <lpage>1205</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbaa170</pub-id>
        <?supplied-pmid 32793981?>
        <pub-id pub-id-type="pmid">32793981</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paul</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Vainio</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Roning</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Detection of intra-family coronavirus genome sequences through graphical representation and artificial neural network</article-title>
        <source>Expert Syst. Appl</source>
        <year>2022</year>
        <volume>194</volume>
        <fpage>116559</fpage>
        <pub-id pub-id-type="doi">10.1016/j.eswa.2022.116559</pub-id>
        <?supplied-pmid 35095217?>
        <pub-id pub-id-type="pmid">35095217</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabijanska</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Grabowski</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Viral Genome deep classifier</article-title>
        <source>IEEE Access</source>
        <year>2019</year>
        <volume>7</volume>
        <fpage>81297</fpage>
        <lpage>81307</lpage>
        <pub-id pub-id-type="doi">10.1109/ACCESS.2019.2923687</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deschavanne</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Giron</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vilain</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fagot</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fertil</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Genomic signature: characterization and classification of species assessed by chaos game representation of sequences</article-title>
        <source>Mol Biol Evol</source>
        <year>1999</year>
        <volume>16</volume>
        <issue>10</issue>
        <fpage>1391</fpage>
        <lpage>1399</lpage>
        <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a026048</pub-id>
        <?supplied-pmid 10563018?>
        <pub-id pub-id-type="pmid">10563018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lichtblau</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free genomic sequence comparison using FCGR and signal processing</article-title>
        <source>BMC Bioinformatics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>742</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-3330-3</pub-id>
        <?supplied-pmid 31888438?>
        <pub-id pub-id-type="pmid">31888438</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Almeida</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Carrico</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Maretzek</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noble</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Fletcher</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Analysis of genomic sequences by Chaos Game Representation</article-title>
        <source>Bioinformatics</source>
        <year>2001</year>
        <volume>17</volume>
        <issue>5</issue>
        <fpage>429</fpage>
        <lpage>437</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.5.429</pub-id>
        <?supplied-pmid 11331237?>
        <pub-id pub-id-type="pmid">11331237</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">H Liao, D Cai, and Y Sun. VirStrain: a strain identification tool for RNA viruses. Genome Biol. 2022;38 10.1186/s13059-022-02609-x.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paraskevis</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kostaki</surname>
            <given-names>EG</given-names>
          </name>
          <name>
            <surname>Magiorkinis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Panayiotakopoulos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sourvinos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Tsiodras</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Full-genome evolutionary analysis of the novel corona virus (2019-nCoV) rejects the hypothesis of emergence as a result of a recent recombination event</article-title>
        <source>Infect. Genet. Evol</source>
        <year>2020</year>
        <volume>79</volume>
        <fpage>104212</fpage>
        <pub-id pub-id-type="doi">10.1016/j.meegid.2020.104212</pub-id>
        <?supplied-pmid 32004758?>
        <pub-id pub-id-type="pmid">32004758</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jeffrey</surname>
            <given-names>HJ</given-names>
          </name>
        </person-group>
        <article-title>Chaos game representation of gene structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>1990</year>
        <volume>18</volume>
        <issue>8</issue>
        <fpage>2163</fpage>
        <lpage>2170</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/18.8.2163</pub-id>
        <?supplied-pmid 2336393?>
        <pub-id pub-id-type="pmid">2336393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sims</surname>
            <given-names>GE</given-names>
          </name>
          <name>
            <surname>Jun</surname>
            <given-names>S-R</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>S-H</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free genome comparison with feature frequency profiles (FFP) and optimal resolutions</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2009</year>
        <volume>106</volume>
        <issue>8</issue>
        <fpage>2677</fpage>
        <lpage>2682</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0813249106</pub-id>
        <?supplied-pmid 19188606?>
        <pub-id pub-id-type="pmid">19188606</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Lucy He</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yau</surname>
            <given-names>SST</given-names>
          </name>
        </person-group>
        <article-title>A novel fast vector method for genetic sequence comparison</article-title>
        <source>Sci. Rep.</source>
        <year>2017</year>
        <volume>7</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-017-12493-2</pub-id>
        <pub-id pub-id-type="pmid">28127051</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS One</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">plosone</journal-id>
    <journal-title-group>
      <journal-title>PLoS ONE</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1932-6203</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5738033</article-id>
    <article-id pub-id-type="publisher-id">PONE-D-17-29507</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pone.0189256</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Molecular Biology</subject>
          <subj-group>
            <subject>Molecular Biology Techniques</subject>
            <subj-group>
              <subject>Gene Mapping</subject>
              <subj-group>
                <subject>Linkage Mapping</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Molecular Biology Techniques</subject>
          <subj-group>
            <subject>Gene Mapping</subject>
            <subj-group>
              <subject>Linkage Mapping</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Molecular Biology</subject>
          <subj-group>
            <subject>Molecular Biology Techniques</subject>
            <subj-group>
              <subject>Gene Mapping</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Molecular Biology Techniques</subject>
          <subj-group>
            <subject>Gene Mapping</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Molecular Biology</subject>
          <subj-group>
            <subject>Molecular Biology Techniques</subject>
            <subj-group>
              <subject>Gene Mapping</subject>
              <subj-group>
                <subject>Chromosome Mapping</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Molecular Biology Techniques</subject>
          <subj-group>
            <subject>Gene Mapping</subject>
            <subj-group>
              <subject>Chromosome Mapping</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Applied Mathematics</subject>
            <subj-group>
              <subject>Algorithms</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
          <subj-group>
            <subject>Algorithms</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Heredity</subject>
            <subj-group>
              <subject>Genetic Linkage</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Software Tools</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Engineering and Technology</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Software Tools</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Computer Software</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BatchMap: A parallel implementation of the OneMap R package for fast computation of F<sub>1</sub> linkage maps in outcrossing species</article-title>
      <alt-title alt-title-type="running-head">BatchMap: Fast calculation of linkage maps</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-9771-467X</contrib-id>
        <name>
          <surname>Schiffthaler</surname>
          <given-names>Bastian</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Data curation</role>
        <role content-type="http://credit.casrai.org/">Investigation</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Validation</role>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bernhardsson</surname>
          <given-names>Carolina</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Data curation</role>
        <role content-type="http://credit.casrai.org/">Investigation</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Visualization</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ingvarsson</surname>
          <given-names>Pär K.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Funding acquisition</role>
        <role content-type="http://credit.casrai.org/">Project administration</role>
        <role content-type="http://credit.casrai.org/">Resources</role>
        <role content-type="http://credit.casrai.org/">Supervision</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Street</surname>
          <given-names>Nathaniel R.</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Funding acquisition</role>
        <role content-type="http://credit.casrai.org/">Project administration</role>
        <role content-type="http://credit.casrai.org/">Resources</role>
        <role content-type="http://credit.casrai.org/">Supervision</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Umeå Plant Science Centre (UPSC), Department of Plant Physiology, Umeå University, Umeå, Sweden</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Department of Ecology and Environmental Science, Umeå University, Umeå, Sweden</addr-line>
    </aff>
    <aff id="aff003">
      <label>3</label>
      <addr-line>Department of Plant Biology, Uppsala BioCenter, Swedish University of Agricultural Sciences, Uppsala, Sweden</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Candela</surname>
          <given-names>Hector</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Universidad Miguel Hernández de Elche, SPAIN</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>bastian.schiffthaler@umu.se</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>12</month>
      <year>2017</year>
    </pub-date>
    <volume>12</volume>
    <issue>12</issue>
    <elocation-id>e0189256</elocation-id>
    <history>
      <date date-type="received">
        <day>9</day>
        <month>8</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>22</day>
        <month>11</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2017 Schiffthaler et al</copyright-statement>
      <copyright-year>2017</copyright-year>
      <copyright-holder>Schiffthaler et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pone.0189256.pdf"/>
    <abstract>
      <p>With the rapid advancement of high throughput sequencing, large numbers of genetic markers can be readily and cheaply acquired, but most current software packages for genetic map construction cannot handle such dense input. Modern computer architectures and server farms represent untapped resources that can be used to enable higher marker densities to be processed in tractable time. Here we present a pipeline using a modified version of OneMap that parallelizes over bottleneck functions and achieves substantial speedups for producing a high density linkage map (N = 20,000). Using simulated data we show that the outcome is as accurate as the traditional pipeline. We further demonstrate that there is a direct relationship between the number of markers used and the level of deviation between true and estimated order, which in turn impacts the final size of a genetic map.</p>
    </abstract>
    <funding-group>
      <funding-statement>This study was supported by funding from the Knut and Alice Wallenberg foundation. NRS is supported by the Trees and Crops for the Future (TC4F) program. This work was supported by funds from the Swedish Research Council (VR), the Swedish Governmental Agency for Innovation Systems (VINNOVA), The Swedish Research Council (FORMAS) through the UPSC Berzelii Centre for Forest Biotechnology.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="3"/>
      <table-count count="1"/>
      <page-count count="12"/>
    </counts>
    <custom-meta-group>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>All simulated datasets and scripts are included as Supporting Information files. All source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bschiffthaler/BatchMap">https://github.com/bschiffthaler/BatchMap</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>All simulated datasets and scripts are included as Supporting Information files. All source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/bschiffthaler/BatchMap">https://github.com/bschiffthaler/BatchMap</ext-link>.</p>
  </notes>
</front>
<body>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>Genetic linkage maps are constructed to determine the relative order and distance between loci on a chromosome. These maps can, among other things, be used for association genetics and marker assisted breeding by linking phenotypic traits to regions and genes in the map (QTL mapping), to improve fragmented genome assemblies by ordering and orienting scaffolds along chromosomes [<xref rid="pone.0189256.ref001" ref-type="bibr">1</xref>, <xref rid="pone.0189256.ref002" ref-type="bibr">2</xref>], or to analyze genome synteny between related species [<xref rid="pone.0189256.ref002" ref-type="bibr">2</xref>]. However, constructing a genetic map is often a great challenge due to the computational effort involved and, until recently, the developmental cost and time investment required to identify reliable markers. Next generation sequencing approaches have removed the barriers to identifying and subsequently assaying large number of markers with genome-wide coverage, enabling most, if not all, genes to be placed on a genetic map. Creating reliable, high density linkage maps is therefore rapidly becoming an even greater computational challenge as marker density has rapidly increased. The computational challenge arises from bottlenecks involved in determining the order of markers (a traveling salesman problem) and the optimization of recombination frequencies and phasing (using the EM-algorithm, [<xref rid="pone.0189256.ref003" ref-type="bibr">3</xref>]). An exhaustive search for the true order requires n!/2 comparisons (n = number of markers on the LG) and with anything more than 10 markers this calculation rapidly becomes computationally prohibitive.</p>
    <p>In order to deal with these computational problems, several heuristic approaches for marker ordering have been developed. One of the most broadly employed programs (that implements a regression- and a maximum likelihood mapping algorithm) for constructing linkage maps is JoinMap [<xref rid="pone.0189256.ref004" ref-type="bibr">4</xref>], a commercial, proprietary license based, Microsoft Windows-only software. However, during the last decade a number of open source software implementations, including OneMap [<xref rid="pone.0189256.ref005" ref-type="bibr">5</xref>], have been developed (e.g. [<xref rid="pone.0189256.ref006" ref-type="bibr">6</xref>], [<xref rid="pone.0189256.ref007" ref-type="bibr">7</xref>], [<xref rid="pone.0189256.ref008" ref-type="bibr">8</xref>], [<xref rid="pone.0189256.ref009" ref-type="bibr">9</xref>], <xref rid="pone.0189256.ref010" ref-type="bibr">10</xref>], see also [<xref rid="pone.0189256.ref001" ref-type="bibr">1</xref>] for a summary table). All of these have implemented both different ordering algorithms and mapping functions. All softwares have their unique benefits and drawbacks, but unfortunately they are often computationally slow as they do not utilize parallel processing, are often written in such a way that it is hard to follow the process and confirm the results, are available as online softwares only, or are designed to work with only a limited range of the most common pedigree designs (e.g. RILs, F<sub>2</sub>s). For researchers working with organisms with long generation time (e.g. forest trees or large mammals with generation times of 15 to 20 years), it may be demanding to create an F<sub>1</sub> and infeasible to create an F<sub>2</sub> or backcross. When working with F<sub>1</sub> crosses, where no linkage information between markers is availible from the parents and several different phases per marker pair need to be considered, the double pseudo-testcross approach [<xref rid="pone.0189256.ref011" ref-type="bibr">11</xref>] has proven effective: separate maps are created for the two parents, with markers that are heterozygous in both parents providing links between the two maps. As two maps are created, this approach requires twice the number of LGs to be analyzed compared to RILs, backcrosses or F<sub>2</sub>s. However, the availability of large server clusters, either within research groups, through national- or international infrastructures or commercial cloud computing services, could be utilized to decrease real-world computational time by implementing parallelization of several of the time consuming steps in linkage map construction.</p>
    <p>OneMap is an open source package for the R programming language [<xref rid="pone.0189256.ref012" ref-type="bibr">12</xref>] that implements all ordering algorithms and mapping functions available in the proprietary JoinMap program. It is well documented, with extensive guidelines for users on map creation and is also under active development via GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/augusto-garcia/onemap">https://github.com/augusto-garcia/onemap</ext-link>). However, it has not currently implemented an option for parallelization of the analyses and is therefore prohibitively slow when working with large numbers of markers. Here, we describe our extended OneMap implementation, BatchMap, which comprises faster versions of three ordering and mapping function algorithms:</p>
    <list list-type="order">
      <list-item>
        <p><monospace>record.parallel()</monospace>: RECORD [<xref rid="pone.0189256.ref013" ref-type="bibr">13</xref>] is a popular heuristic approach to approximate the true order of markers. Both the RECORD algorithm and Wu et al.’s EM optimization for phasing and recombination fraction (RF) computation have previously been shown to perform exceptionally well in full-sib outcrossing mapping populations with relatively noisy datasets containing up to 20% missing genotypes per marker [<xref rid="pone.0189256.ref014" ref-type="bibr">14</xref>].</p>
      </list-item>
      <list-item>
        <p><monospace>map.overlapping.batches()</monospace>: A mapping algorithm that splits a pre-ordered LG into batches containing a predefined number of overlapping markers between neighboring batches. Here, batches are analyzed in sequential order, with overlapping markers fixed in phase from the previous batch.</p>
      </list-item>
      <list-item>
        <p><monospace>ripple.ord()</monospace>: An algorithm inspired by the OneMap <monospace>ripple.seq()</monospace> function, which leverages the high speed of the batch mapping approach in addition to multiple CPUs to consider alternative marker orders in parallel to improve the order and reduce errors (hereinafter called ‘ripple’).</p>
      </list-item>
    </list>
    <p>By using these approaches we can create a high density linkage map within tractable time scales (days) as opposed to months or years, depending on the computational power available for the project and the number of markers used in the map. Our OneMap fork ‘BatchMap’, the example data and user manual is freely available for download from: <ext-link ext-link-type="uri" xlink:href="https://github.com/bschiffthaler/BatchMap">https://github.com/bschiffthaler/BatchMap</ext-link>.</p>
  </sec>
  <sec sec-type="materials|methods" id="sec002">
    <title>Methods</title>
    <sec id="sec003">
      <title>Simulated data</title>
      <p>In order to evaluate the performance of the BatchMap algorithms, we created four simulated F<sub>1</sub>-crosses using QMSim (QTL and Marker Simulator) version 1.10 [<xref rid="pone.0189256.ref015" ref-type="bibr">15</xref>]. Each cross was replicated once with an historical population size of 1000 individuals per generation for 1000 generations before the cross was made. Each of the genomes was set to have five chromosomes with a chromosome length (chrlen) of 200 cM and 1500, 2000, 3000 and 4000 markers per chromosome (nmloci) for the four crosses, respectively. This resulted in four datasets containing 7500, 10000, 15000 and 20000 markers, all with a total genome size of 1000 cM (200cM per linkage group for each of the datasets). QMSim uses the chrlen in Morgans as the mean for the Poisson distribution when calculating cross-over during meiosis, resulting in the final maps calculated from the simulated crosses being half the size of the pre-set value (in our case <sup>~</sup>100 cM per chromosome). All data sets were set to include only biallelic markers (nma) positioned randomly in the genome (mpos) and with marker allele frequencies (maf) of 0.5, but with a rate of missing data per genotype (rmmg) of 0.2. Due to the simulated nature of the data, it was not filtered for segregation distortion. We advise using a <italic>χ</italic><sup>2</sup> test to filter distorted markers in real datasets. A random mating design (md) and a litter size (ls) of 800 with a 50/50 ratio of female and male progeny was then set to create each of the F<sub>1</sub> crosses. The simulated data sets were thereafter filtered so that only informative markers were kept (markers for which none of the parents had missing data and where at least one of the parents was heterozygous), and transformed into OneMap input format for either of the cross types “B3.7” (<italic>ab x ab</italic>), “D1.10” (<italic>ab x aa</italic>), “D2.15” (<italic>aa x ab</italic>) or “-” according to the encoding scheme in [<xref rid="pone.0189256.ref003" ref-type="bibr">3</xref>]. This resulted in final data sets containing 2368, 3042, 4714 and 6182 markers, respectively (<xref ref-type="table" rid="pone.0189256.t001">Table 1</xref> and Supplementary Files inside <xref ref-type="supplementary-material" rid="pone.0189256.s002">S1 Simulated Data</xref>).</p>
      <table-wrap id="pone.0189256.t001" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0189256.t001</object-id>
        <label>Table 1</label>
        <caption>
          <title>Summary of the simulated data sets.</title>
          <p>Data set: The name of the data set; Markers/chr: Number of markers simulated on each chromosome; Total markers: The total number of markers; Genetic map: Number of markers in the genetic map after filtering for informative markers (and the corresponding percentage of all simulated markers); Markers/LG: The average number of markers on each LG (and the marker density range).</p>
        </caption>
        <alternatives>
          <graphic id="pone.0189256.t001g" xlink:href="pone.0189256.t001"/>
          <table frame="box" rules="all" border="0">
            <colgroup span="1">
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th align="center" rowspan="1" colspan="1">Data set</th>
                <th align="center" rowspan="1" colspan="1">Markers / chr</th>
                <th align="center" rowspan="1" colspan="1">Total markers</th>
                <th align="center" rowspan="1" colspan="1">Genetic map</th>
                <th align="center" rowspan="1" colspan="1">Markers / LG</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="center" rowspan="1" colspan="1">Sim7.5k</td>
                <td align="center" rowspan="1" colspan="1">1 500</td>
                <td align="center" rowspan="1" colspan="1">7 500</td>
                <td align="center" rowspan="1" colspan="1">2 368 (31.6%)</td>
                <td align="center" rowspan="1" colspan="1">471 (451-489)</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Sim10k</td>
                <td align="center" rowspan="1" colspan="1">2 000</td>
                <td align="center" rowspan="1" colspan="1">10 000</td>
                <td align="center" rowspan="1" colspan="1">3 042 (30.4%)</td>
                <td align="center" rowspan="1" colspan="1">608 (580-627)</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Sim15k</td>
                <td align="center" rowspan="1" colspan="1">3 000</td>
                <td align="center" rowspan="1" colspan="1">15 000</td>
                <td align="center" rowspan="1" colspan="1">4 714 (31.4%)</td>
                <td align="center" rowspan="1" colspan="1">943 (916-967)</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">Sim20k</td>
                <td align="center" rowspan="1" colspan="1">4 000</td>
                <td align="center" rowspan="1" colspan="1">20 000</td>
                <td align="center" rowspan="1" colspan="1">6 182 (30.4%)</td>
                <td align="center" rowspan="1" colspan="1">1 236 (1 196-1 280)</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec id="sec004">
      <title>BatchMap pipeline</title>
      <sec id="sec005">
        <title>Data input and preparation</title>
        <p><xref ref-type="fig" rid="pone.0189256.g001">Fig 1</xref> shows a flowchart of the important steps described in this section. An example R script is available as BatchMap.R inside <xref ref-type="supplementary-material" rid="pone.0189256.s003">S1 R Scripts</xref>. The simulated data (see Supplementary Files inside <xref ref-type="supplementary-material" rid="pone.0189256.s002">S1 Simulated Data</xref>) was read into BatchMap using the function <monospace>read.outcross2()</monospace>, which was added as the original function in OneMap was not suited for large datasets. The next steps follow the default OneMap workflow in creating the two-point tables of recombination fractions and likelihoods (<monospace>rf.2pts()</monospace>) and assigning the markers to linkage groups (<monospace>group()</monospace>) using LOD = 8 and max.rf = 0.35. Sequence objects were created for each linkage group (<monospace>make.seq()</monospace>), which were then split into parents by the marker segregation type. The segregation type D2.15 and B3.7 were assigned to parent one, whereas segregation type D1.10 and B3.7 were assigned to parent two.</p>
        <fig id="pone.0189256.g001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0189256.g001</object-id>
          <label>Fig 1</label>
          <caption>
            <title>An overview of the BatchMap pipeline.</title>
            <p><bold>A</bold>) Input data file is read into BatchMap using the function <monospace>read.outcross2()</monospace>. <bold>B</bold>) A two-point table of recombination fractions is created and likelihoods calculated per phase using the function <monospace>rf.2pts()</monospace>. <bold>C</bold>) Markers are assigned to linkage groups (LGs) using the function <monospace>group()</monospace>, sequence objects created using <monospace>make.seq()</monospace> and LGs are split into parental maps using marker segregation type. <bold>D</bold>) Marker order is determined using RECORD, with the number of iterations and threads set using the function <monospace>record.parallel()</monospace>. <bold>E</bold>-<bold>F</bold>) The genetic map is calculated in centiMorgans by first using the function <monospace>pick.batch.sizes()</monospace> to split the LG into even groups and then using function <monospace>map.overlapping.batches()</monospace> with the predefined batch size. All pairwise marker phases are set within each batch and overlapping markers are fixed in phase from the previous batch. When all marker pairs are fixed in phase the original OneMap function <monospace>map()</monospace> is called to calculate the distance between markers in cM using either the Kosambi or Haldane mapping function. <bold>G</bold>-<bold>H</bold>) An optional ripple function, <monospace>ripple.ord()</monospace>, can be set in <monospace>map.overlapping.batches()</monospace> to consider all single pairwise swaps between markers in a sliding window of predefined size along the LG. When the best order (based on likelihoods) within each window is set, map calculation will be carried out as in E-F).</p>
          </caption>
          <graphic xlink:href="pone.0189256.g001"/>
        </fig>
      </sec>
      <sec id="sec006">
        <title>Marker ordering</title>
        <p>RECORD (recombination count and ordering) works by adding one random marker at a time and orders markers by minimizing the number of recombination events in the map. This is replicated <italic>x</italic> number of times and the order with the lowest COUNT criterion, which minimizes the number of recombination events needed to explain the marker order, (see eq. 1 in Van Os et al. 2005) is accepted as the true order of markers. We implemented a parallelized version of the RECORD algorithm that utilizes multithreaded computing to calculate the marker order using RECORD <italic>N</italic> times in parallel (<monospace>record.parallel()</monospace>). As each iteration is an independent calculation, this is trivial to parallelize. We opted to perform ten iterations, as increasing the number beyond that did not appreciably improve marker order (see Fig B in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>).</p>
      </sec>
      <sec id="sec007">
        <title>Batch map</title>
        <p>OneMap utilizes an expectation maximization (EM) algorithm to estimate phases and true recombination frequencies in constructing the linkage map (<monospace>map()</monospace>). It starts by calculating the likelihood for each possible phase of the first marker pair in a sequence of markers, then iteratively adds the next marker pair and calculates the likelihood of their phase and recombination fraction. For each added pair, all previous data is considered in the model. While this yields the best possible model, long sequences can become virtually impossible to compute. We therefore implemented a new function to calculate the linkage map in overlapping batches, such that enough data for sensible estimation of phases and recombination fractions via the EM model is available in each batch, while also keeping the data from previously evaluated pairs limited. Important parameters for the pipeline are number of markers in a batch (“batch size”) and the number of markers overlapping between adjacent batches (“overlap size”). The EM algorithm will run <italic>N</italic> − 1 times for <italic>N</italic> markers in a batch, and it will consider the result of previous pairs in each iteration. This information is necessary for accurate calculation of phase likelihoods, but the return saturates quickly, compliating the model while offering no additional accuracy. BatchMap divides the markers into batches and only carries a set amount of phase information over to subsequent batches, circumventing this issue. For a given target batch and overlap size, the function <monospace>pick.batch.sizes()</monospace> selects a batch size that splits the data into even groups. The function <monospace>map.overlapping.batches()</monospace> then considers the batches, but estimates likelihoods for all phases in parallel. Once finished, it will call the original OneMap function <monospace>map()</monospace> with predefined phases and order. This approach enables us to reduce the time required to calculate an un-phased map. By dividing the calculation into several sequential sub-problems we achieve comparable accuracy in substantially less time while also providing nearly linear scaling (see section 1 of <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>), rendering the approach feasible for extremely high-density maps. The simulated data was run with a batch size of 50 markers and an overlap of 30 markers using four CPU threads to consider phases in parallel (see BatchMap.R inside <xref ref-type="supplementary-material" rid="pone.0189256.s003">S1 R Scripts</xref>).</p>
      </sec>
      <sec id="sec008">
        <title>Batch map with adaptive re-ordering via ripple</title>
        <p>All ordering algorithms for genetic linkage maps are heuristic approximations since the mathematical problem is NP-complete. This leads to errors in the marker orders generated from these. In order to improve the marker order as much as possible, the function <monospace>map.overlapping.batches()</monospace> can be supplied with an ordering algorithm, which makes it possible to consider alternative orders in the calculation of the map. We implemented the function <monospace>ripple.ord()</monospace> to provide an algorithm that creates windows of a specified window-size along the markers of a batch and swaps markers according to a set of rules. By default (ruleset ‘one’), all single pairwise swaps between markers are considered. For a given window, all permutations are also calculated in parallel. For any batch besides the first, the part that overlaps the previous batch is exempt from this consideration as not enough information is available to confidently select good alternative orders. The simulated data was run with a window size of five markers, using ruleset ‘one’, and utilizing eight threads to calculate marker permutations in parallel (see BatchMap.R inside <xref ref-type="supplementary-material" rid="pone.0189256.s003">S1 R Scripts</xref>).</p>
      </sec>
    </sec>
    <sec id="sec009">
      <title>Currently available OneMap versions</title>
      <p>As a comparison we used the current stable version (2.0-4) of OneMap available on CRAN (<ext-link ext-link-type="uri" xlink:href="https://cran.r-project.org/web/packages/onemap/index.html">https://cran.r-project.org/web/packages/onemap/index.html</ext-link>) and the development version (SHA: 53352d13) available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/augusto-garcia/onemap">https://github.com/augusto-garcia/onemap</ext-link>) on the same data with the same settings for all functions that are available in these versions (see CRAN.R and GitHub.R inside <xref ref-type="supplementary-material" rid="pone.0189256.s003">S1 R Scripts</xref>).</p>
    </sec>
    <sec id="sec010">
      <title>Performance evaluation</title>
      <p>Both time and accuracy were considered as important factors in evaluating the performance of each run of OneMap. To obtain a reliable estimate for high density maps, we used the first three chromosomes (6 LGs), without binning, from the sim20k dataset for the analyses. Each of these LGs contained between 725 and 794 markers.</p>
      <p>The biggest bottleneck for the analysis is the time required to calculate the linkage map phases and recombination fractions, which was therefore selected as the representative time for each run. Further, the number of markers in a sequence impacts the total time required for linkage map construction. The time was therefore compared as the mean time of five replicate runs divided by the number of markers. As map accuracy is dependent on a number of factors, such as the two-point table, linkage group members and the order supplied by RECORD, these were controlled by generating linkage groups and an initial order for the dataset and loading those, such that all runs had an equal entry point into <monospace>map()</monospace> or <monospace>map.overlapping.batches()</monospace>. The map size in centiMorgans and the overall likelihood reported by OneMap were both considered in the accuracy analysis.</p>
      <p>To evaluate whether the ripple algorithm improves order we tested runs for all versions from raw data as well as from a controlled start point (RECORD order). Three measures of order were computed: First, an overall error rate as the rate of markers that were not at their true position. Second, a weighted error rate as the sum of absolute distances of markers from their true position normalized by the length of the sequence (See section 2 of <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>). Thirdly, Kendall’s tau of the ordered sequence versus the true order.</p>
    </sec>
    <sec id="sec011">
      <title>Order accuracy vs marker density</title>
      <p>In order to evaluate how the number of markers on an LG affected the order accuracy from RECORD and, in turn, to estimate the window size needed for ripple to correct the errors, all five pseudo-testcross chromosomes (10 LGs) from each of the four simulated data sets, after binning, were analyzed. Each map was ordered using 33 iterations of RECORD using <monospace>record.parallel()</monospace> using 11 CPU cores and calculated with <monospace>map.overlapping.batches()</monospace>, where batch size was set from the <monospace>pick.overlapping.batches()</monospace> function with a batch size of 40-60 and 30 overlapping markers. Ordering was carried out before it was determined that running RECORD &gt; 10 times yields no significant benefit, but it was deemed unnecessary to re-do the order as no significant differences are to be expected. Order accuracies were obtained as previously stated by calculating distance from true position for each marker and the total number and distance of mispositioned markers in the maps. Correlations between estimated order and true order were calculated with Kendall’s tau. Map size inflations were also analyzed between the true order maps and the estimated maps from BatchMap <monospace>record.parallel()</monospace> and <monospace>map.overlapping.batches()</monospace> and the correlation between size inflation and marker density was calculated with Pearson’s product-moment correlation.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="sec012">
    <title>Results</title>
    <sec id="sec013">
      <title>BatchMap is significantly faster than OneMap</title>
      <p>By using a simulated dataset containing over 1,000 markers per chromosome and over 700 markers for each pseudo-testcross we show that the BatchMap is as accurate as the original version of OneMap but substantially faster for high-density maps. We further show that adaptive re-ordering of markers within batches improves map accuracy while still being faster than the original implementations. Calculating full linkage maps for three linkage groups in each of two parents (six maps) with all versions of OneMap yielded a mean processing time per marker of 964.55s for the stable version of OneMap available on the Comprehensive R Archive Network (CRAN), 237.97s for the development version on GitHub (commit 53352d1, June 23rd 2016), 13.19s for our parallel implementation at 16 parallel CPUs and 105.12s for the parallel ripple method when considering all pairwise marker swaps in a sliding window of size 5 (see <xref ref-type="fig" rid="pone.0189256.g002">Fig 2b</xref>). Mean total runtimes were 206.06h, 50.92h, 2.82h and 22.42h respectively. Testing was performed on an HP ProLiant DL585 G7 server with four AMD Opteron 6386 SE CPUs and 512 GiB RAM running Ubuntu 16.04 server edition.</p>
      <fig id="pone.0189256.g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0189256.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>Summary statistics of all evaluation runs for OneMap and BatchMap.</title>
          <p>In order to control for random effects during ordering and grouping, those factors were estimated once using RECORD and supplied to all runs. <bold>A</bold>) Boxplots (N = 6) of linkage map sizes in centiMorgans for all evaluations. <bold>B</bold>) Hours elapsed per calculation for each pseudo-testcross of three linkage groups between 724 and 794 markers in density. <bold>C</bold>) Boxplots (N = 6) of linkage map likelihoods for all evaluations. <bold>D</bold>) Frequency polygons for all evaluations summarizing the distance of each marker to its true position. All versions except BatchMap_ripple are identical and hence overlap. BatchMap_ripple was run with a window size of five, which is indicated by the vertical dashed bars.</p>
        </caption>
        <graphic xlink:href="pone.0189256.g002"/>
      </fig>
    </sec>
    <sec id="sec014">
      <title>The new implementations perform as well or better than the original</title>
      <p>Due to the controlled entry point (marker order derived from 10 iterations of RECORD) for accurate comparison of <monospace>map()</monospace> and <monospace>map.overlapping.batches()</monospace> between OneMap and BatchMap versions, CRAN, GitHub and BatchMap all showed equal error rates, weighted error rates and Kendall’s tau (Figs C, D and E in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>). BatchMap_ripple, with a five marker window size, reduced the mean error rate from 0.76 to 0.71, the weighted mean error rate from 0.016 to 0.015, the median distance to true marker position from 2 to 1 (<xref ref-type="fig" rid="pone.0189256.g002">Fig 2D</xref>). Both GitHub and BatchMap resulted in equal final map sizes (118.62cM to 135.37cM) and map likelihoods (-14375.56 to -12931.60) for all six LGs, while performance of the CRAN version was worse (map size 126.48cM to 143.76cM and map likelihood -14461.11 to -13012.67). BatchMap_ripple outperformed the other methods by reducing the size inflation (map size 112.06cM to 129.10cM) and having higher likelihoods (-13349.51 to -12194.68) (<xref ref-type="fig" rid="pone.0189256.g002">Fig 2A and 2C</xref>).</p>
    </sec>
    <sec id="sec015">
      <title>Marker density of a map defines the window size needed for ripple</title>
      <p>To estimate the effect of marker density on order accuracy, all five chromosomes (10 LG) from each of the four simulated datasets (40 LGs in total) were analyzed with <monospace>record.parallel(times = 33, …)</monospace>. While the LGs showed a threefold difference in marker density between low and high density LGs (266—777 markers/LG), the number of incorrectly positioned markers increased by 4.5 times (134—608) and the error rate increased from 0.48 to 0.78 (Table A in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>). The total distance from true positions showed an almost ninefold increase between low- and high density maps (260—2310). This resulted in an average distance from the true positions of 1-3 markers when calculated over all markers in the LG, and 1.5-4 markers when calculated over only the mis-positioned markers (Table A in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>, <xref ref-type="fig" rid="pone.0189256.g003">Fig 3</xref>). All LGs showed a correlation of 0.986-0.993 between true and estimated marker order, which was not dependent on marker density (t = -0.431, df = 38, p-value = 0.669). Size inflation (cM) of the estimated maps was highly correlated with marker density (<italic>ρ</italic> = 0.717, t = 6.333, p-value = 1.992e-07).</p>
      <fig id="pone.0189256.g003" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0189256.g003</object-id>
        <label>Fig 3</label>
        <caption>
          <title>Accuracy of estimated marker order (using 33 iterations of RECORD) for the four data sets.</title>
          <p>Distribution of distance from true position summed over 10 LGs each for sim7.5k, sim10k, sim 15k and sim20k.</p>
        </caption>
        <graphic xlink:href="pone.0189256.g003"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec016">
    <title>Discussion</title>
    <p>BatchMap performs the ordering and map calculations at a substantially increased speed compared to both the CRAN (73 times faster) and GitHub (18 times faster) versions of OneMap without lowering the accuracy of the final map. Even when utilizing the ripple function, BatchMap is nine and two times faster than CRAN and GitHub, respectively, but increases the accuracy of marker order within the predefined window size. In order to correct as many marker ordering errors as possible, the window size needs to be larger than the maximum distance to true position that exists in the LG. This distance varied considerably between different RECORD runs regardless of marker density, but no marker in the 40 analyzed LGs had a maximum distance greater than 25 positions away from its true location (Table A in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>). However, with increasing map density, a greater portion of the mispositioned markers will be further away from their true location (<xref ref-type="fig" rid="pone.0189256.g003">Fig 3</xref>). This means that as map density increases, correspondingly larger window sizes are needed in order for ripple to correct the same proportion of the markers.</p>
    <p>The pipeline is mainly controlled by the “batch size” and “overlap size” parameters, which respectively set the number of markers in a batch and the number of shared markers between adjacent batches. If the batch size were set too high, there would be less gain in execution time. If the overlap size would be too small, phases would be incorrectly estimated and large gaps would appear in the map, inflating its size. In practise, these values will depend on many factors such as population size, marker quality and species. It is therefore recommended to try several configurations on a subset of the data and select the best performing one (e.g. best likelihood, smallest size).</p>
    <p>Due to the way marker order and phases are locked in the overlapping part of neighboring batches when running <monospace>map.overlapping.batches()</monospace>, <monospace>ripple.ord()</monospace> will not be able to swap marker order in the area joining the previous batch. To overcome this issue, two or more runs of BatchMap could be performed with different batch sizes in each run. The batch size in the second run should be a ripple window size shorter than the first run in order to release the last fixed markers for swapping. This approach could also be utilized for iteratively decreasing the maximum distance of markers to their true location and thereby fitting them into the ripple window and fixing the errors. The datasets analyzed in this study were simulated with 20% missing data to mimic natural crosses that will always, to some extent, suffer from missing data and genotyping errors. It is important to keep in mind that the cleaner a dataset is, the more accurate the resulting map will be (garbage in, garbage out). Both missing data and genotype errors may falsely link markers together due to missed or extra erroneously inferred recombination events [<xref rid="pone.0189256.ref016" ref-type="bibr">16</xref>]. Fundamentally, the resolution of the genetic map is defined by the number of individuals that comprise the mapping population. Using more markers than the resolution of the mapping population will yield groups of markers with identical information content. A binning step—i.e. using only one representative marker from a group—was omitted in the performance evaluation in order to maximize the number of markers which were input into the algorithms, but should almost always be applied in an experimental setting. This is especially important in smaller mapping populations, where the number of individuals used might not offer a high enough resolution for the marker density that was obtained for the linkage map. OneMap offers the functions <monospace>find.bins()</monospace> and <monospace>create.data.bins()</monospace> for this purpose.</p>
    <p>Marker quality is a crucial factor, which determines map accuracy, but high throughput techniques are often noisy. Low quality markers will increase the run-time for little to no accuracy gain at best, and a higher error rate at worst. In addition to filtering the data for markers with much missing data in the offspring or any missing data in the parents, it is advisable to filter for segregation distortion.</p>
    <p>The time required to order markers on an LG with RECORD is determined by the number of runs defined and the number of markers on the LG. Our parallel implementation splits runs into parallel sessions so that they can be performed simultaneously, with runtime depending on the number of cores assigned. Ten runs split over five cores will provide a theoretical five fold speedup in comparison to the CRAN and GitHub versions, while 10 cores will give a theoretical 10 fold speed up. The real advantage of the new parallel implementation is, however, in the map batches approach. While the CRAN and GitHub versions of OneMap show a triangular increase in the time required to calculate the map (see section 1 of <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>), BatchMap increases quasi linearly with marker density (Fig A in <xref ref-type="supplementary-material" rid="pone.0189256.s001">S1 Appendix</xref>). If one were to create a full linkage map of a dataset with similar density than the simulated 20k data (<sup>~</sup>1300 markers per chromosome, <sup>~</sup>750 markers per pseudo-testcross) for an organism with 10 chromosomes, the CRAN version would take 171.7 days, the GitHub version 42.4 days and BatchMap 2.4 days.</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec017">
    <title>Supporting information</title>
    <supplementary-material content-type="local-data" id="pone.0189256.s001">
      <label>S1 Appendix</label>
      <caption>
        <title>Additional accuracy and time statistics.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pone.0189256.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0189256.s002">
      <label>S1 Simulated Data</label>
      <caption>
        <title>Contains simulated data for the manuscript containing.</title>
        <p>
          <list list-type="order">
            <list-item>
              <p>sim7.5k: Simulated markers for this study (7.5k data set)</p>
            </list-item>
            <list-item>
              <p>sim10k: Simulated markers for this study (10k data set)</p>
            </list-item>
            <list-item>
              <p>sim15k: Simulated markers for this study (15k data set)</p>
            </list-item>
            <list-item>
              <p>sim20k: Simulated markers for this study (20k data set).</p>
            </list-item>
          </list>
        </p>
        <p>(ZIP)</p>
      </caption>
      <media xlink:href="pone.0189256.s002.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pone.0189256.s003">
      <label>S1 R Scripts</label>
      <caption>
        <title>Contains R scripts used in the manuscript.</title>
        <p>
          <list list-type="order">
            <list-item>
              <p>BatchMap.R: R script for the calculation of linkage maps using BatchMap</p>
            </list-item>
            <list-item>
              <p>CRAN.R: R script for the calculation of linkage maps using OneMap (CRAN)</p>
            </list-item>
            <list-item>
              <p>GitHub.R: R script for the calculation of linkage maps using OneMap (GitHub).</p>
            </list-item>
          </list>
        </p>
        <p>(ZIP)</p>
      </caption>
      <media xlink:href="pone.0189256.s003.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We fully acknowledge the developers and authors of OneMap and that the work presented here is entirely based upon, and extends, their efforts.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pone.0189256.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Fierst</surname><given-names>JL</given-names></name>. <article-title>Using linkage maps to correct and scaffold de novo genome assemblies: Methods, challenges, and computational tools</article-title>. <source>Frontiers in Genetics</source>. <year>2015</year>;<volume>6</volume>:<fpage>220</fpage><comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.3389/fgene.2015.00220">10.3389/fgene.2015.00220</ext-link></comment><?supplied-pmid 26150829?><pub-id pub-id-type="pmid">26150829</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Mascher</surname><given-names>M</given-names></name>, <name><surname>Stein</surname><given-names>N</given-names></name>. <article-title>Genetic anchoring of whole-genome shotgun assemblies</article-title>. <source>Frontiers in Genetics</source>. <year>2014</year>;<volume>5</volume>:<fpage>208</fpage><comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.3389/fgene.2014.00208">10.3389/fgene.2014.00208</ext-link></comment><?supplied-pmid 25071835?><pub-id pub-id-type="pmid">25071835</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Wu</surname><given-names>R</given-names></name>, <name><surname>Ma</surname><given-names>CX</given-names></name>, <name><surname>Painter</surname><given-names>I</given-names></name>, <name><surname>Zeng</surname><given-names>ZB</given-names></name>. <article-title>Simultaneous Maximum Likelihood Estimation of Linkage and Linkage Phases in Outcrossing Species</article-title>. <source>Theoretical Population Biology</source>. <year>2002</year>;<volume>61</volume>(<issue>3</issue>):<fpage>349</fpage>–<lpage>363</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1006/tpbi.2002.1577">10.1006/tpbi.2002.1577</ext-link></comment><?supplied-pmid 12027621?><pub-id pub-id-type="pmid">12027621</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Van Ooijen</surname><given-names>JW</given-names></name>. <article-title>JoinMap<sup>®</sup> 4, Software for the calculation of genetic linkage maps in experimental populations</article-title>. <source>Kyazma BV, Wageningen</source>. <year>2006</year>;<volume>33</volume>(<issue>July</issue>):<fpage>10</fpage>–<lpage>1371</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0189256.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Margarido</surname><given-names>GRA</given-names></name>, <name><surname>Souza</surname><given-names>AP</given-names></name>, <name><surname>Garcia</surname><given-names>AAF</given-names></name>. <article-title>OneMap: Software for genetic mapping in outcrossing species</article-title>. <source>Hereditas</source>. <year>2007</year>;<volume>144</volume>(<issue>3</issue>):<fpage>78</fpage>–<lpage>79</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1111/j.2007.0018-0661.02000.x">10.1111/j.2007.0018-0661.02000.x</ext-link></comment><?supplied-pmid 17663699?><pub-id pub-id-type="pmid">17663699</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Rastas</surname><given-names>P</given-names></name>, <name><surname>Paulin</surname><given-names>L</given-names></name>, <name><surname>Hanski</surname><given-names>I</given-names></name>, <name><surname>Lehtonen</surname><given-names>R</given-names></name>, <name><surname>Auvinen</surname><given-names>P</given-names></name>, <name><surname>Brudno</surname><given-names>M</given-names></name>. <article-title>Lep-MAP: Fast and accurate linkage map construction for large SNP datasets</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>24</issue>):<fpage>3128</fpage>–<lpage>3134</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btt563">10.1093/bioinformatics/btt563</ext-link></comment><?supplied-pmid 24078685?><pub-id pub-id-type="pmid">24078685</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Wu</surname><given-names>Y</given-names></name>, <name><surname>Bhat</surname><given-names>PR</given-names></name>, <name><surname>Close</surname><given-names>TJ</given-names></name>, <name><surname>Lonardi</surname><given-names>S</given-names></name>. <article-title>Efficient and accurate construction of genetic linkage maps from the minimum spanning tree of a graph</article-title>. <source>PLoS Genetics</source>. <year>2008</year>;<volume>4</volume>(<issue>10</issue>). <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1371/journal.pgen.1000212">10.1371/journal.pgen.1000212</ext-link></comment></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Broman</surname><given-names>KW</given-names></name>, <name><surname>Wu</surname><given-names>H</given-names></name>, <name><surname>Sen</surname><given-names>Ś</given-names></name>, <name><surname>Churchill</surname><given-names>GA</given-names></name>. <article-title>R/qtl: QTL mapping in experimental crosses</article-title>. <source>Bioinformatics</source>. <year>2003</year>;<volume>19</volume>(<issue>7</issue>):<fpage>889</fpage>–<lpage>890</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btg112">10.1093/bioinformatics/btg112</ext-link></comment><?supplied-pmid 12724300?><pub-id pub-id-type="pmid">12724300</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Zhang</surname><given-names>L</given-names></name>, <name><surname>Li</surname><given-names>H</given-names></name>, <name><surname>Wang</surname><given-names>J</given-names></name>. <article-title>Linkage analysis and map construction in genetic populations of clonal F1 and double cross</article-title>. <source>G3: Genes|Genomes|Genetics</source>. <year>2015</year>;<volume>5</volume>(<issue>3</issue>):<fpage>427</fpage>–<lpage>439</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1534/g3.114.016022">10.1534/g3.114.016022</ext-link></comment><pub-id pub-id-type="pmid">25591919</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Vickerstaff</surname><given-names>RJ</given-names></name>, <name><surname>Harrison</surname><given-names>RJ</given-names></name>. <article-title>Crosslink: A Fast, Scriptable Genetic Mapper For Outcrossing Species</article-title>. <source>bioRxiv</source>. <year>2017</year>;</mixed-citation>
    </ref>
    <ref id="pone.0189256.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Grattapaglia</surname><given-names>D</given-names></name>, <name><surname>Sederoff</surname><given-names>R</given-names></name>. <article-title>Genetic linkage maps of Eucalyptus grandis and Eucalyptus urophylla using a pseudo-testcross: Mapping strategy and RAPD markers</article-title>. <source>Genetics</source>. <year>1994</year>;<volume>137</volume>(<issue>4</issue>):<fpage>1121</fpage>–<lpage>1137</lpage>. <?supplied-pmid 7982566?><pub-id pub-id-type="pmid">7982566</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref012">
      <label>12</label>
      <mixed-citation publication-type="book"><collab>R Development Core Team</collab>. <source>R: A Language and Environment for Statistical Computing</source>. <publisher-name>R Foundation for Statistical Computing</publisher-name><publisher-loc>Vienna Austria</publisher-loc><year>2016</year>;<volume>0</volume>.</mixed-citation>
    </ref>
    <ref id="pone.0189256.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Van Os</surname><given-names>H</given-names></name>, <name><surname>Stam</surname><given-names>P</given-names></name>, <name><surname>Visser</surname><given-names>RGF</given-names></name>, <name><surname>Van Eck</surname><given-names>HJ</given-names></name>. <article-title>RECORD: A novel method for ordering loci on a genetic linkage map</article-title>. <source>Theoretical and Applied Genetics</source>. <year>2005</year>;<volume>112</volume>(<issue>1</issue>):<fpage>30</fpage>–<lpage>40</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1007/s00122-005-0097-x">10.1007/s00122-005-0097-x</ext-link></comment><?supplied-pmid 16228189?><pub-id pub-id-type="pmid">16228189</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Mollinari</surname><given-names>M</given-names></name>, <name><surname>Margarido</surname><given-names>GRA</given-names></name>, <name><surname>Vencovsky</surname><given-names>R</given-names></name>, <name><surname>Garcia</surname><given-names>AAF</given-names></name>. <article-title>Evaluation of algorithms used to order markers on genetic maps</article-title>. <source>Heredity</source>. <year>2009</year>;<volume>103</volume>(<issue>6</issue>):<fpage>494</fpage>–<lpage>502</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1038/hdy.2009.96">10.1038/hdy.2009.96</ext-link></comment><?supplied-pmid 19639011?><pub-id pub-id-type="pmid">19639011</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Sargolzaei</surname><given-names>M</given-names></name>, <name><surname>Schenkel</surname><given-names>FS</given-names></name>. <article-title>QMSim: A large-scale genome simulator for livestock</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>(<issue>5</issue>):<fpage>680</fpage>–<lpage>681</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1093/bioinformatics/btp045">10.1093/bioinformatics/btp045</ext-link></comment><?supplied-pmid 19176551?><pub-id pub-id-type="pmid">19176551</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0189256.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Cartwright</surname><given-names>DA</given-names></name>, <name><surname>Troggio</surname><given-names>M</given-names></name>, <name><surname>Velasco</surname><given-names>R</given-names></name>, <name><surname>Gutin</surname><given-names>A</given-names></name>. <article-title>Genetic mapping in the presence of genotyping errors</article-title>. <source>Genetics</source>. <year>2007</year>;<volume>176</volume>(<issue>4</issue>):<fpage>2521</fpage>–<lpage>2527</lpage>. <comment>doi: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1534/genetics.106.063982">10.1534/genetics.106.063982</ext-link></comment><?supplied-pmid 17277374?><pub-id pub-id-type="pmid">17277374</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

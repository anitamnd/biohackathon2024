<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genetics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genetics</journal-id>
    <journal-id journal-id-type="hwp">genetics</journal-id>
    <journal-id journal-id-type="pmc">genetics</journal-id>
    <journal-id journal-id-type="publisher-id">genetics</journal-id>
    <journal-title-group>
      <journal-title>Genetics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0016-6731</issn>
    <issn pub-type="epub">1943-2631</issn>
    <publisher>
      <publisher-name>Genetics Society of America</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4063916</article-id>
    <article-id pub-id-type="pmid">24700103</article-id>
    <article-id pub-id-type="publisher-id">164350</article-id>
    <article-id pub-id-type="doi">10.1534/genetics.114.164350</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Investigations</subject>
        <subj-group>
          <subject>Methods, Technology, and Resources</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>fastSTRUCTURE: Variational Inference of Population Structure in Large SNP Data Sets</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Raj</surname>
          <given-names>Anil</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">*</xref>
        <xref ref-type="corresp" rid="cor1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stephens</surname>
          <given-names>Matthew</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">
          <sup>†</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pritchard</surname>
          <given-names>Jonathan K.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">*</xref>
        <xref ref-type="aff" rid="aff3">
          <sup>‡</sup>
        </xref>
      </contrib>
      <aff id="aff1"><label>*</label>Department of Genetics, Stanford University, Stanford, California 94305</aff>
      <aff id="aff2"><label>†</label>Departments of Statistics and Human Genetics, University of Chicago, Chicago, Illinois 60637</aff>
      <aff id="aff3"><label>‡</label>Department of Biology, Howard Hughes Medical Institute, Stanford University, Stanford, California 94305</aff>
    </contrib-group>
    <author-notes>
      <fn>
        <p>Available freely online through the author-supported open access option.</p>
      </fn>
      <fn id="afn1">
        <p>Supporting information is available online at <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1">http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1</ext-link>.</p>
      </fn>
      <corresp id="cor1"><label>1</label>Corresponding author: Stanford University, 300 Pasteur Dr., Alway Bldg., M337, Stanford, CA 94305. E-mail: <email>rajanil@stanford.edu</email></corresp>
    </author-notes>
    <!--Fake ppub date generated by PMC from publisher
					pub-date/@pub-type='epub-ppub' -->
    <pub-date pub-type="ppub">
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>2</day>
      <month>4</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>2</day>
      <month>4</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>197</volume>
    <issue>2</issue>
    <fpage>573</fpage>
    <lpage>589</lpage>
    <history>
      <date date-type="received">
        <day>02</day>
        <month>12</month>
        <year>2013</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>3</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2014 by the Genetics Society of America</copyright-statement>
      <copyright-year>2014</copyright-year>
      <license license-type="open-access">
        <license-p>Available freely online through the author-supported open access option.</license-p>
      </license>
    </permissions>
    <self-uri xlink:title="pdf" xlink:type="simple" xlink:href="573.pdf"/>
    <abstract>
      <p>Tools for estimating population structure from genetic data are now used in a wide variety of applications in population genetics. However, inferring population structure in large modern data sets imposes severe computational challenges. Here, we develop efficient algorithms for approximate inference of the model underlying the STRUCTURE program using a variational Bayesian framework. Variational methods pose the problem of computing relevant posterior distributions as an optimization problem, allowing us to build on recent advances in optimization theory to develop fast inference tools. In addition, we propose useful heuristic scores to identify the number of populations represented in a data set and a new hierarchical prior to detect weak population structure in the data. We test the variational algorithms on simulated data and illustrate using genotype data from the CEPH–Human Genome Diversity Panel. The variational algorithms are almost two orders of magnitude faster than STRUCTURE and achieve accuracies comparable to those of ADMIXTURE. Furthermore, our results show that the heuristic scores for choosing model complexity provide a reasonable range of values for the number of populations represented in the data, with minimal bias toward detecting structure when it is very weak. Our algorithm, fastSTRUCTURE, is freely available online at <ext-link ext-link-type="uri" xlink:href="http://pritchardlab.stanford.edu/structure.html">http://pritchardlab.stanford.edu/structure.html</ext-link>.</p>
    </abstract>
    <kwd-group>
      <kwd>variational inference</kwd>
      <kwd>population structure</kwd>
    </kwd-group>
    <counts>
      <page-count count="17"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name> DJS Export </meta-name>
        <meta-value>v1</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>special-property</meta-name>
        <meta-value>highlight-article</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <p>IDENTIFYING the degree of admixture in individuals and inferring the population of origin of specific loci in these individuals is relevant for a variety of problems in population genetics. Examples include correcting for population stratification in genetic association studies (<xref rid="bib20" ref-type="bibr">Pritchard and Donnelly 2001</xref>; <xref rid="bib19" ref-type="bibr">Price <italic>et al.</italic> 2006</xref>), conservation genetics (<xref rid="bib17" ref-type="bibr">Pearse and Crandall 2004</xref>; <xref rid="bib22" ref-type="bibr">Randi 2008</xref>), and studying the ancestry and migration patterns of natural populations (<xref rid="bib26" ref-type="bibr">Rosenberg <italic>et al.</italic> 2002</xref>; <xref rid="bib24" ref-type="bibr">Reich <italic>et al.</italic> 2009</xref>; <xref rid="bib5" ref-type="bibr">Catchen <italic>et al.</italic> 2013</xref>). With decreasing costs in sequencing and genotyping technologies, there is an increasing need for fast and accurate tools to infer population structure from very large genetic data sets.</p>
  <p>Principal components analysis (PCA)-based methods for analyzing population structure, like EIGENSTRAT (<xref rid="bib19" ref-type="bibr">Price <italic>et al.</italic> 2006</xref>) and SMARTPCA (<xref rid="bib16" ref-type="bibr">Patterson <italic>et al.</italic> 2006</xref>), construct low-dimensional projections of the data that maximally retain the variance-covariance structure among the sample genotypes. The availability of fast and efficient algorithms for singular value decomposition has enabled PCA-based methods to become a popular choice for analyzing structure in genetic data sets. However, while these low-dimensional projections allow for straightforward visualization of the underlying population structure, it is not always straightforward to derive and interpret estimates for global ancestry of sample individuals from their projection coordinates (<xref rid="bib15" ref-type="bibr">Novembre and Stephens 2008</xref>). In contrast, model-based approaches like STRUCTURE (<xref rid="bib21" ref-type="bibr">Pritchard <italic>et al.</italic> 2000</xref>) propose an explicit generative model for the data based on the assumptions of Hardy-Weinberg equilibrium between alleles and linkage equilibrium between genotyped loci. Global ancestry estimates are then computed directly from posterior distributions of the model parameters, as done in STRUCTURE, or maximum-likelihood estimates of model parameters, as done in FRAPPE (<xref rid="bib28" ref-type="bibr">Tang <italic>et al.</italic> 2005</xref>) and ADMIXTURE (<xref rid="bib1" ref-type="bibr">Alexander <italic>et al.</italic> 2009</xref>).</p>
  <p>STRUCTURE (<xref rid="bib21" ref-type="bibr">Pritchard <italic>et al.</italic> 2000</xref>; <xref rid="bib7" ref-type="bibr">Falush <italic>et al.</italic> 2003</xref>; <xref rid="bib9" ref-type="bibr">Hubisz <italic>et al.</italic> 2009</xref>) takes a Bayesian approach to estimate global ancestry by sampling from the posterior distribution over global ancestry parameters using a Gibbs sampler that appropriately accounts for the conditional independence relationships between latent variables and model parameters. However, even well-designed sampling schemes need to generate a large number of posterior samples to resolve convergence and mixing issues and yield accurate estimates of ancestry proportions, greatly increasing the time complexity of inference for large genotype data sets. To provide faster estimation, FRAPPE and ADMIXTURE both use a maximum-likelihood approach. FRAPPE computes maximum-likelihood estimates of the parameters of the same model using an expectation-maximization algorithm, while ADMIXTURE computes the same estimates using a sequential quadratic programming algorithm with a quasi-Newton acceleration scheme. Our goal in this article is to adapt a popular approximate inference framework to greatly speed up inference of population structure while achieving accuracies comparable to STRUCTURE and ADMIXTURE.</p>
  <p>Variational Bayesian inference aims to repose the problem of inference as an optimization problem rather than a sampling problem. Variational methods, originally used for approximating intractable integrals, have been used for a wide variety of applications in complex networks (<xref rid="bib8" ref-type="bibr">Hofman and Wiggins 2008</xref>), machine learning (<xref rid="bib10" ref-type="bibr">Jordan <italic>et al.</italic> 1998</xref>; <xref rid="bib3" ref-type="bibr">Blei <italic>et al.</italic> 2003</xref>), and Bayesian variable selection (<xref rid="bib13" ref-type="bibr">Logsdon <italic>et al.</italic> 2010</xref>; <xref rid="bib4" ref-type="bibr">Carbonetto and Stephens 2012</xref>). Variational Bayesian techniques approximate the log-marginal likelihood of the data by proposing a family of tractable parametric posterior distributions (variational distribution) over hidden variables in the model; the goal is then to find the optimal member of this family that best approximates the marginal likelihood of the data (see <italic>Models and Methods</italic> for more details). Thus, a single optimization problem gives us both approximate analytical forms for the posterior distributions over unknown variables and an approximate estimate of the intractable marginal likelihood; the latter can be used to measure the support in the data for each model, and hence to compare models involving different numbers of populations. Some commonly used optimization algorithms for variational inference include the variational expectation-maximization algorithm (<xref rid="bib2" ref-type="bibr">Beal 2003</xref>), collapsed variational inference (<xref rid="bib29" ref-type="bibr">Teh <italic>et al.</italic> 2007</xref>), and stochastic gradient descent (<xref rid="bib27" ref-type="bibr">Sato 2001</xref>).</p>
  <p>In <italic>Models and Methods</italic>, we briefly describe the model underlying STRUCTURE and detail the framework for variational Bayesian inference that we use to infer the underlying ancestry proportions. We then propose a more flexible prior distribution over a subset of hidden parameters in the model and demonstrate that estimation of these hyperparameters using an empirical Bayesian framework improves the accuracy of global ancestry estimates when the underlying population structure is more difficult to resolve. Finally, we describe a scheme to accelerate computation of the optimal variational distributions and describe a set of scores to help evaluate the accuracy of the results and to help compare models involving different numbers of populations. In <italic>Applications</italic>, we compare the accuracy and time complexity of variational inference with those of STRUCTURE and ADMIXTURE on simulated genotype data sets and demonstrate the results of variational inference on a large data set genotyped in the Human Genome Diversity Panel.</p>
  <sec id="s1">
    <title>Models and Methods</title>
    <p>We now briefly describe our generative model for population structure followed by a detailed description of the variational framework used for model inference.</p>
    <sec id="s2">
      <title>Variational inference</title>
      <p>Suppose we have <italic>N</italic> diploid individuals genotyped at <italic>L</italic> biallelic loci. A population is represented by a set of allele frequencies at the <italic>L</italic> loci, <italic>P<sub>k</sub></italic> ∈ [0, 1]<italic><sup>L</sup></italic>, <italic>k</italic> ∈ {1, …, <italic>K</italic>}, where <italic>K</italic> denotes the number of populations. The allele being represented at each locus can be chosen arbitrarily. Allowing for admixed individuals in the sample, we assume each individual to be represented by a <italic>K</italic>-vector of admixture proportions, <italic>Q<sub>n</sub></italic> ∈ [0, 1]<italic><sup>K</sup></italic>, <inline-formula><mml:math id="me1"><mml:mrow><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Conditioned on <italic>Q<sub>n</sub></italic>, the population assignments of the two copies of a locus, <inline-formula><mml:math id="me2"><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mi>K</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me3"><mml:mrow><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:mstyle><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, are assumed to be drawn from a multinomial distribution parametrized by <italic>Q<sub>n</sub></italic>. Conditioned on population assignments, the genotype at each locus <italic>G<sub>nl</sub></italic> is the sum of two independent Bernoulli-distributed random variables, each representing the allelic state of each copy of a locus and parameterized by population-specific allele frequencies. The generative process for the sampled genotypes can now be formalized as<list list-type="bullet" id="L1"><list-item><p><disp-formula><mml:math id="me4"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msubsup></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>multinomial</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p></list-item><list-item><p><disp-formula><mml:math id="me5"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi mathvariant="normal">⋅</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p></list-item><list-item><p><disp-formula><mml:math id="me6"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi mathvariant="normal">⋅</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p></list-item><list-item><p><disp-formula><mml:math id="me7"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mo>〚</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>〛</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi mathvariant="normal">⋅</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p></list-item></list>where <inline-formula><mml:math id="me8"><mml:mrow><mml:mrow><mml:mo>〚</mml:mo><mml:mi>Z</mml:mi><mml:mo>〛</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the nonzero indices of the vector <italic>Z</italic>.</p>
      <p>Given the set of sampled genotypes, we can either compute the maximum-likelihood estimates of the parameters <italic>P</italic> and <italic>Q</italic> of the model (<xref rid="bib28" ref-type="bibr">Tang <italic>et al.</italic> 2005</xref>; <xref rid="bib1" ref-type="bibr">Alexander <italic>et al.</italic> 2009</xref>) or sample from the posterior distributions over the unobserved random variables <italic>Z<sup>a</sup></italic>, <italic>Z<sup>b</sup></italic>, <italic>P</italic>, and <italic>Q</italic> (<xref rid="bib21" ref-type="bibr">Pritchard <italic>et al.</italic> 2000</xref>) to compute relevant moments of these variables.</p>
      <p>Variational Bayesian (VB) inference formulates the problem of computing posterior distributions (and their relevant moments) into an optimization problem. The central aim is to find an element of a tractable family of probability distributions, called variational distributions, that is closest to the true intractable posterior distribution of interest. A natural choice of distance on probability spaces is the Kullback–Leibler (KL) divergence, defined for a pair of probability distributions <italic>q</italic>(<italic>x</italic>) and <italic>p</italic>(<italic>x</italic>) as<disp-formula id="eq1"><mml:math id="me9"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mtext>kl</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>log</mml:mi><mml:mfrac><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>x</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mi>d</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math><label>(1)</label></disp-formula>Given the asymmetry of the KL divergence, VB inference chooses <italic>p</italic>(<italic>x</italic>) to be the intractable posterior and <italic>q</italic>(<italic>x</italic>) to be the variational distribution; this choice allows us to compute expectations with respect to the tractable variational distribution, often exactly.</p>
      <p>An approximation to the true intractable posterior distribution can be computed by minimizing the KL divergence between the true posterior and variational distribution. We will restrict our optimization over a variational family that explicitly assumes independence between the latent variables (<italic>Z<sup>a</sup></italic>, <italic>Z<sup>b</sup></italic>) and parameters (<italic>P</italic>, <italic>Q</italic>); this restriction to a space of fully factorizable distributions is commonly called the <italic>mean field approximation</italic> in the statistical physics (<xref rid="bib11" ref-type="bibr">Kadanoff 2009</xref>) and machine-learning literature (<xref rid="bib10" ref-type="bibr">Jordan <italic>et al.</italic> 1998</xref>)). Since this assumption is certainly not true when inferring population structure, the true posterior will not be a member of the variational family and we will be able to find only the fully factorizable variational distribution that best approximates the true posterior. Nevertheless, this approximation significantly simplifies the optimization problem. Furthermore, we observe empirically that this approximation achieves reasonably accurate estimates of lower-order moments (<italic>e.g.</italic>, posterior mean and variance) when the true posterior is replaced by the variational distributions (<italic>e.g.</italic>, when computing prediction error on held-out entries of the genotype matrix). The variational family we choose here is<disp-formula id="eq2"><mml:math id="me10"><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mi>q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>⋅</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>⋅</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(2)</label></disp-formula>where each factor can then be written as<disp-formula id="eq3"><mml:math id="me11"><mml:mtable><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>multinomial</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>multinomial</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>Beta</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(3)</label></disp-formula><inline-formula><mml:math id="me12"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me13"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me14"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me15"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="me16"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> are the parameters of the variational distributions (variational parameters). The choice of the variational family is restricted only by the tractability of computing expectations with respect to the variational distributions; here, we choose parametric distributions that are conjugate to the distributions in the likelihood function.</p>
      <p>In addition, the KL divergence (Equation 1) quantifies the tightness of a lower bound to the log-marginal likelihood of the data (<xref rid="bib2" ref-type="bibr">Beal 2003</xref>). Specifically, for any variational distribution <italic>q</italic>(<italic>Z<sup>a</sup></italic>, <italic>Z<sup>b</sup></italic>, <italic>P</italic>, <italic>Q</italic>), we have<disp-formula id="eq4"><mml:math id="me17"><mml:mrow><mml:mi>log</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(4)</label></disp-formula>where ℰ is a lower bound to the log-marginal likelihood of the data, log <italic>p</italic>(<italic>G</italic>|<italic>K</italic>). Thus, minimizing the KL divergence is equivalent to maximizing the log-marginal likelihood lower bound (LLBO) of the data:<disp-formula id="eq5"><mml:math id="me18"><mml:mtable><mml:mtr><mml:mtd><mml:msup><mml:mi>q</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mtext>arg</mml:mtext><mml:munder><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow><mml:mi>q</mml:mi></mml:munder><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:mtext>arg</mml:mtext><mml:munder><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow><mml:mi>q</mml:mi></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mi>q</mml:mi><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:mtext>arg</mml:mtext><mml:munder><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow><mml:mi>q</mml:mi></mml:munder><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mi>q</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(5)</label></disp-formula>The LLBO of the observed genotypes can be written as<disp-formula id="eq6"><mml:math id="me19"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mtext>log</mml:mtext><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>log</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>log</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>Z</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi><mml:mi>Q</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="normal">+</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi mathvariant="normal">+</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(6)</label></disp-formula>where <italic>p</italic>(<italic>Q</italic>) is the prior on the admixture proportions and <italic>p</italic>(<italic>P</italic>) is the prior on the allele frequencies. The LLBO of the data in terms of the variational parameters is specified in Appendix A. The LLBO depends on the model, and particularly on the number of populations <italic>K</italic>. Using simulations, we assess the utility of the LLBO as a heuristic to help select appropriate values for <italic>K</italic>.</p>
    </sec>
    <sec id="s3">
      <title>Priors</title>
      <p>The choice of priors <italic>p</italic>(<italic>Q<sub>n</sub></italic>) and <italic>p</italic>(<italic>P<sub>lk</sub></italic>) plays an important role in inference, particularly when the <italic>F</italic><sub>ST</sub> between the underlying populations is small and population structure is difficult to resolve. Typical genotype data sets contain hundreds of thousands of genetic variants typed in several hundreds of samples. Given the small sample sizes in these data relative to underlying population structure, the posterior distribution over population allele frequencies can be difficult to estimate; thus, the prior over <italic>P<sub>lk</sub></italic> plays a more important role in accurate inference than the prior over admixture proportions. Throughout this study, we choose a symmetric Dirichlet prior over admixture proportions; <inline-formula><mml:math id="me20"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>K</mml:mi></mml:mfrac></mml:mstyle><mml:msub><mml:mi mathvariant="bold">1</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
      <p>Depending on the difficulty in resolving structure in a given data set, we suggest using one of three priors over allele frequencies. A flat beta-prior over population-specific allele frequencies at each locus, <italic>p</italic>(<italic>P<sub>lk</sub></italic>) = Beta(1, 1) (referred to as “simple prior” throughout), has the advantage of computational speed but comes with the cost of potentially not resolving subtle structure. For genetic data where structure is difficult to resolve, the <italic>F</italic>-model for population structure (<xref rid="bib7" ref-type="bibr">Falush <italic>et al.</italic> 2003</xref>) proposes a hierarchical prior, based on a demographic model that allows the allele frequencies of the populations to have a shared underlying pattern at all loci. Assuming a star-shaped genealogy where each of the populations simultaneously split from an ancestral population, the allele frequency at a given locus is generated from a beta distribution centered at the ancestral allele frequency at that locus, with variance parametrized by a population-specific drift from the ancestral population (we refer to this prior as <italic>F</italic>-prior”):<disp-formula id="eq7"><mml:math id="me21"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mtext>Beta</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><label>(7)</label></disp-formula>Alternatively, we propose a hierarchical prior that is more flexible than the <italic>F</italic>-prior and allows for more tractable inference, particularly when additional priors on the hyperparameters need to be imposed. At a given locus, the population-specific allele frequency is generated by a logistic normal distribution, with the normal distribution having a locus-specific mean and a population-specific variance (we refer to this prior as logistic prior):<disp-formula id="eq8"><mml:math id="me22"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>exp</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(8)</label></disp-formula>Having specified the appropriate prior distributions, the optimal variational parameters can be computed by iteratively minimizing the KL divergence (or, equivalently, maximizing the LLBO) with respect to each variational parameter, keeping the other variational parameters fixed. The LLBO is concave in each parameter; thus, convergence properties of this iterative optimization algorithm, also called the variational Bayesian expectation-maximization algorithm, are similar to those of the expectation-maximization algorithm for maximum-likelihood problems. The update equations for each of the three models are detailed in <italic>Appendix A</italic>. Furthermore, when population structure is difficult to resolve, we propose updating the hyperparameters ((<italic>F</italic>, <italic>P<sup>A</sup></italic>) for the <italic>F</italic>-prior and (<italic>μ</italic>, <italic>λ</italic>) for the logistic prior) by maximizing the LLBO with respect to these variables; conditional on these hyperparameter values, improved estimates for the variational parameters are then computed by minimizing the KL divergence. Although such a hyperparameter update is based on optimizing a lower bound on the marginal likelihood, it is likely (although not guaranteed) to increase the marginal likelihood of the data, often leading to better inference. A natural extension of this hierarchical prior would be to allow for a full locus-independent variance–covariance matrix (<xref rid="bib18" ref-type="bibr">Pickrell and Pritchard 2012</xref>). However, we observed in our simulations that estimating the parameters of the full matrix led to worse prediction accuracy on held-out data. Thus, we did not consider this extension in our analyses.</p>
    </sec>
    <sec id="s4">
      <title>Accelerated variational inference</title>
      <p>Similar to the EM algorithm, the convergence of the iterative algorithm for variational inference can be quite slow. Treating the iterative update equations for the set of variational parameters <inline-formula><mml:math id="me23"><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:math></inline-formula> as a deterministic map <inline-formula><mml:math id="me24"><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, a globally convergent algorithm with improved convergence rates can be derived by adapting the Cauchy–Barzilai–Borwein method for accelerating the convergence of linear fixed-point problems (<xref rid="bib23" ref-type="bibr">Raydan and Svaiter 2002</xref>) to the nonlinear fixed-point problem given by our deterministic map (<xref rid="bib30" ref-type="bibr">Varadhan and Roland 2008</xref>). Specifically, given a current estimate of parameters <inline-formula><mml:math id="me25"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, the new estimate can be written as<disp-formula id="eq9"><mml:math id="me26"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>ν</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>ν</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mi>Δ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>ν</mml:mi><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:msub><mml:mi>H</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(9)</label></disp-formula>where <inline-formula><mml:math id="me27"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me28"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mi mathvariant="normal">Φ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me29"><mml:mrow><mml:msub><mml:mi>ν</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Note that the new estimate is a continuous function of <italic>ν<sub>t</sub></italic> and the standard variational iterative scheme can be obtained from Equation 9 by setting <italic>ν<sub>t</sub></italic> to −1. Thus, for values of <italic>ν<sub>t</sub></italic> close to −1, the accelerated algorithm retains the stability and monotonicity of standard EM algorithms while sacrificing a gain in convergence rate. When <italic>ν<sub>t</sub></italic> &lt; −1, we gain significant improvement in convergence rate, with two potential problems: (a) the LLBO could decrease, <italic>i.e.</italic>, <inline-formula><mml:math id="me30"><mml:mrow><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and (b) the new estimate <inline-formula><mml:math id="me31"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> might not satisfy the constraints of the optimization problem. In our experiments, we observe the first problem to occur rarely and we resolve this by simply testing for convergence of the magnitude of difference in LLBO at successive iterations. We resolve the second problem using a simple back-tracking strategy of halving the distance between <italic>ν<sub>t</sub></italic> and −1: <italic>ν<sub>t</sub></italic> ← (<italic>ν<sub>t</sub></italic> − 1)/2, until the new estimate <inline-formula><mml:math id="me32"><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> satisfies the constraints of the optimization problem.</p>
    </sec>
    <sec id="s5">
      <title>Validation scores</title>
      <p>For each simulated data set, we evaluate the accuracy of each algorithm using two metrics: accuracy of the estimated admixture proportions and the prediction error for a subset of entries in the genotype matrix that are held out before estimating the parameters. For a given choice of model complexity <italic>K</italic>, an estimate of the admixture proportions <italic>Q</italic>* is taken to be the maximum-likelihood estimate of <italic>Q</italic> when using ADMIXTURE, the maximum <italic>a posteriori</italic> (MAP) estimate of <italic>Q</italic> when using STRUCTURE, and the mean of the variational distribution over <italic>Q</italic> inferred using fastSTRUCTURE. We measure the accuracy of <italic>Q</italic>* by computing the Jensen–Shannon (JS) divergence between <italic>Q</italic>* and the true admixture proportions. The Jensen–Shannon divergence (JSD) between two probability vectors <italic>P</italic> and <italic>Q</italic> is a bounded distance metric defined as<disp-formula id="eq10"><mml:math id="me33"><mml:mrow><mml:mtext>JSD</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>‖</mml:mo></mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>‖</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>k</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>‖</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(10)</label></disp-formula>where <inline-formula><mml:math id="me34"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo>+</mml:mo><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and 0 ≤ JSD(<italic>P</italic>‖<italic>Q</italic>) ≤ 1. Note that if the lengths of <italic>P</italic> and <italic>Q</italic> are not the same, the smaller vector is extended by appending zero-valued entries. The mean admixture divergence is then defined as the minimum over all permutations of population labels of the mean JS divergence between the true and estimated admixture proportions over all samples, with higher divergence values corresponding to lower accuracy.</p>
      <p>We evaluate the prediction accuracy by estimating model parameters (or posterior distributions over them) after holding out a subset ℳ of the entries in the genotype matrix. For each held-out entry, the expected genotype is estimated by ADMIXTURE from maximum-likelihood parameter estimates as<disp-formula id="eq11"><mml:math id="me35"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>G</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:munder><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(11)</label></disp-formula>where <inline-formula><mml:math id="me36"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the maximum-likelihood estimate of <italic>P<sub>lk</sub></italic>. The expected genotype given the variational distributions requires integration over the model parameters and is derived in <italic>Appendix B</italic>. Given the expected genotypes for the held-out entries, for a specified model complexity <italic>K</italic>, the prediction error is quantified by the deviance residuals under the binomial model averaged over all entries:</p>
      <disp-formula id="eq12">
        <mml:math id="me37">
          <mml:mrow>
            <mml:msub>
              <mml:mi>d</mml:mi>
              <mml:mi>K</mml:mi>
            </mml:msub>
            <mml:mrow>
              <mml:mo>(</mml:mo>
              <mml:mrow>
                <mml:mover accent="true">
                  <mml:mi>G</mml:mi>
                  <mml:mo>^</mml:mo>
                </mml:mover>
                <mml:mo>,</mml:mo>
                <mml:mi>G</mml:mi>
              </mml:mrow>
              <mml:mo>)</mml:mo>
            </mml:mrow>
            <mml:mo>=</mml:mo>
            <mml:mstyle displaystyle="true">
              <mml:munder>
                <mml:mo>∑</mml:mo>
                <mml:mrow>
                  <mml:mi>n</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>l</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mi mathvariant="normal">ℳ</mml:mi>
                </mml:mrow>
              </mml:munder>
              <mml:mrow>
                <mml:msub>
                  <mml:mi>G</mml:mi>
                  <mml:mrow>
                    <mml:mi>n</mml:mi>
                    <mml:mi>l</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mi>log</mml:mi>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mi>G</mml:mi>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mover accent="true">
                        <mml:mi>G</mml:mi>
                        <mml:mo>^</mml:mo>
                      </mml:mover>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo>+</mml:mo>
                <mml:mrow>
                  <mml:mo>(</mml:mo>
                  <mml:mrow>
                    <mml:mn>2</mml:mn>
                    <mml:mo>−</mml:mo>
                    <mml:msub>
                      <mml:mi>G</mml:mi>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mo>)</mml:mo>
                </mml:mrow>
                <mml:mi>log</mml:mi>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mn>2</mml:mn>
                    <mml:mo>−</mml:mo>
                    <mml:msub>
                      <mml:mi>G</mml:mi>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mn>2</mml:mn>
                    <mml:mo>−</mml:mo>
                    <mml:msub>
                      <mml:mover accent="true">
                        <mml:mi>G</mml:mi>
                        <mml:mo>^</mml:mo>
                      </mml:mover>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
            </mml:mstyle>
            <mml:mo>.</mml:mo>
          </mml:mrow>
        </mml:math>
        <label>(12)</label>
      </disp-formula>
    </sec>
    <sec id="s6">
      <title>Model complexity</title>
      <p>ADMIXTURE suggests choosing the value of model complexity <italic>K</italic> that achieves the smallest value of <inline-formula><mml:math id="me38"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>G</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <italic>i.e.</italic>, <inline-formula><mml:math id="me39"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>arg</mml:mi><mml:msub><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow><mml:mi>K</mml:mi></mml:msub><mml:msub><mml:mi>d</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>G</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. We propose two additional metrics to select model complexity in the context of variational Bayesian inference. Assuming a uniform prior on <italic>K</italic>, the optimal model complexity <inline-formula><mml:math id="me40"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is chosen to be the one that maximizes the LLBO, where the LLBO is used as an approximation to the marginal likelihood of the data. However, since the difference between the log-marginal likelihood of the data and the LLBO is difficult to quantify, the trend of LLBO as a function of <italic>K</italic> cannot be guaranteed to match that of the log-marginal likelihood. Additionally, we propose a useful heuristic to choose <italic>K</italic> based on the tendency of mean-field variational schemes to populate only those model components that are essential to explain patterns underlying the observed data. Specifically, given an estimate of <inline-formula><mml:math id="me41"><mml:mrow><mml:msup><mml:mi>Q</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> obtained from variational inference executed for a choice of <italic>K</italic>, we compute the ancestry contribution of each model component as the mean admixture proportion over all samples, <italic>i.e.</italic>, <inline-formula><mml:math id="me42"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac></mml:mstyle><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:msub><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>. The number of relevant model components <inline-formula><mml:math id="me43"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is then the minimum number of populations that have a cumulative ancestry contribution of at least 99.99%,<disp-formula id="eq13"><mml:math id="me44"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>min</mml:mi><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mi>S</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="script">K</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.9999</mml:mn></mml:mrow></mml:mstyle></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(13)</label></disp-formula>where <inline-formula><mml:math id="me245"><mml:mrow><mml:mi mathvariant="script">K</mml:mi></mml:mrow></mml:math></inline-formula> = {1, …, <italic>K</italic>} and <inline-formula><mml:math id="me246"><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow></mml:math></inline-formula>(<inline-formula><mml:math id="me247"><mml:mrow><mml:mi mathvariant="script">K</mml:mi></mml:mrow></mml:math></inline-formula>) is the power set of <inline-formula><mml:math id="me248"><mml:mrow><mml:mi mathvariant="script">K</mml:mi></mml:mrow></mml:math></inline-formula>. As <italic>K</italic> increases, <inline-formula><mml:math id="me45"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> tends to approach a limit that can be chosen as the optimal model complexity <inline-formula><mml:math id="me46"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="s7">
    <title>Applications</title>
    <p>In this section, we compare the accuracy and runtime performance of the variational inference framework with the results of STRUCTURE and ADMIXTURE both on data sets generated from the <italic>F</italic>-model and on the Human Genome Diversity Panel (HGDP) (<xref rid="bib26" ref-type="bibr">Rosenberg <italic>et al.</italic> 2002</xref>). We expect the results of ADMIXTURE to match those of FRAPPE (<xref rid="bib28" ref-type="bibr">Tang <italic>et al.</italic> 2005</xref>) since they both compute maximum-likelihood estimates of the model parameters. However, ADMIXTURE converges faster than FRAPPE, allowing us to compare it with fastSTRUCTURE using thousands of simulations. In general, we observe that fastSTRUCTURE estimates ancestry proportions with accuracies comparable to, and sometimes better than, those estimated by ADMIXTURE even when the underlying population structure is rather weak. Furthermore, fastSTRUCTURE is about 2 orders of magnitude faster than STRUCTURE and has comparable runtimes to that of ADMIXTURE. Finally, fastSTRUCTURE gives us a reasonable range of values for the model complexity required to explain structure underlying the data, without the need for a cross-validation scheme. Below, we highlight the key advantages and disadvantages of variational inference in each problem setting.</p>
    <sec id="s8">
      <title>Simulated data sets</title>
      <p>To evaluate the performance of the different learning algorithms, we generated two groups of simulated genotype data sets, with each genotype matrix consisting of 600 samples and 2500 loci. The first group was used to evaluate the accuracy of the algorithms as a function of strength of the underlying population structure while the second group was used to evaluate accuracy as a function of number of underlying populations. Although the size of each genotype matrix was kept fixed in these simulations, the performance characteristics of the algorithms are expected to be similar if the strength of population structure is kept fixed and the data set size is varied (<xref rid="bib16" ref-type="bibr">Patterson <italic>et al.</italic> 2006</xref>).</p>
      <p>For the first group, the samples were drawn from a three-population demographic model as shown in <xref ref-type="fig" rid="fig1">Figure 1A</xref>. The edge weights correspond to the parameter <italic>F</italic> in the model that quantifies the genetic drift of each of the three current populations from an ancestral population. We introduced a scaling factor <italic>r</italic> ∈ [0, 1] that quantifies the resolvability of population structure underlying the samples. Scaling <italic>F</italic> by <italic>r</italic> reduces the amount of drift of current populations from the ancestral population; thus, structure is difficult to resolve when <italic>r</italic> is close to 0, while structure is easy to resolve when <italic>r</italic> is close to 1. For each <italic>r</italic> ∈ {0.05, 0.10, …, 0.95, 1}, we generated 50 replicate data sets. The ancestral allele frequencies <italic>π<sup>A</sup></italic> for each data set were drawn from the frequency spectrum computed using the HGDP panel to simulate allele frequencies in natural populations. For each data set, the allele frequency at a given locus for each population was drawn from a beta-distribution with mean <inline-formula><mml:math id="me47"><mml:mrow><mml:msubsup><mml:mi>π</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and variance <inline-formula><mml:math id="me48"><mml:mrow><mml:mi>r</mml:mi><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msubsup><mml:mi>π</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mi>π</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and the admixture proportions for each sample were drawn from a symmetric Dirichlet distribution, namely <inline-formula><mml:math id="me49"><mml:mrow><mml:mtext>Dirichlet</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:msub><mml:mi mathvariant="bold">1</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, to simulate small amounts of gene flow between the three populations. Finally, 10% of the samples in each data set, randomly selected, were assigned to one of the three populations with zero admixture.</p>
      <fig id="fig1" fig-type="figure" position="float">
        <label>Figure 1</label>
        <caption>
          <p>Accuracy of different algorithms as a function of resolvability of population structure. (A) Demographic model underlying the three populations represented in the simulated data sets. The edge weights quantify the amount of drift from the ancestral population. (B and C) Resolvability is a scalar by which the population-specific drifts in the demographic model are multiplied, with higher values of resolvability corresponding to stronger structure. (B) Compares the optimal model complexity given the data, averaged over 50 replicates, inferred by ADMIXTURE <inline-formula><mml:math id="me50"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, fastSTRUCTURE with simple prior <inline-formula><mml:math id="me51"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and fastSTRUCTURE with logistic prior <inline-formula><mml:math id="me52"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. (C) Compares the accuracy of admixture proportions, averaged over replicates, estimated by each algorithm at the optimal value of <italic>K</italic> in each replicate.</p>
        </caption>
        <graphic xlink:href="573fig1"/>
      </fig>
      <p>For the second group, the samples were drawn from a star-shaped demographic model with <italic>K<sub>t</sub></italic> populations. Each population was assumed to have equal drift from an ancestral population, with the <italic>F</italic> parameter fixed at either 0.01 to simulate weak structure or 0.04 to simulate strong structure. The ancestral allele frequencies were simulated similar to the first group and 50 replicate data sets were generated for this group for each value of <italic>K<sub>t</sub></italic> ∈ {1, …, 5}. We executed ADMIXTURE and fastSTRUCTURE for each data set with various choices of model complexity: for data sets in the first group, model complexity <italic>K</italic> ∈ {1, …, 5}, and for those in the second group <italic>K</italic> ∈ {1, …, 8}. We executed ADMIXTURE with default parameter settings; with these settings the algorithm terminates when the increase in log likelihood is &lt;10<sup>−4</sup> and computes prediction error using fivefold cross-validation. fastSTRUCTURE was executed with a convergence criterion of change in the per-genotype log-marginal likelihood lower bound |Δℰ| &lt; 10<sup>−8</sup>. We held out 20 random disjoint genotype sets, each containing 1% of entries in the genotype matrix and used the mean and standard error of the deviance residuals for these held-out entries as an estimate of the prediction error.</p>
      <p>For each group of simulated data sets, we illustrate a comparison of the performance of ADMIXTURE and fastSTRUCTURE with the simple and the logistic prior. When structure was easy to resolve, both the <italic>F</italic>-prior and the logistic prior returned similar results; however, the logistic prior returned more accurate ancestry estimates when structure was difficult to resolve. Plots including results using the <italic>F</italic>-prior are shown in <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1/genetics.114.164350-1.pdf">Supporting Information</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1/genetics.114.164350-3.pdf">Figure S1</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1/genetics.114.164350-2.pdf">Figure S2</ext-link>, and <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1/genetics.114.164350-4.pdf">Figure S3</ext-link>. Since ADMIXTURE uses held-out deviance residuals to choose model complexity, we demonstrate the results of the two algorithms, each using deviance residuals to choose <italic>K</italic>, using solid lines in <xref ref-type="fig" rid="fig1">Figure 1</xref> and <xref ref-type="fig" rid="fig2">Figure 2</xref>. Additionally, in these figures, we also illustrate the performance of fastSTRUCTURE, when using the two alternative metrics to choose model complexity, using blue lines.</p>
      <fig id="fig2" fig-type="figure" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Accuracy of different algorithms as a function of the true number of populations. The demographic model is a star-shaped genealogy with populations having undergone equal amounts of drift. Subfigures A and C correspond to strong structure (<italic>F</italic> = 0.04) and B and D to weak structure (<italic>F</italic> = 0.01). (A and B) Compare the optimal model complexity estimated by the different algorithms using various metrics, averaged over 50 replicates, to the true number of populations represented in the data. Notably, when population structure is weak, both ADMIXTURE and fastSTRUCTURE fail to detect structure when the number of populations is too large. (C and D) Compare the accuracy of admixture proportions estimated by each algorithm at the optimal model complexity for each replicate.</p>
        </caption>
        <graphic xlink:href="573fig2"/>
      </fig>
    </sec>
    <sec id="s9">
      <title>Choice of <italic>K</italic></title>
      <p>One question that arises when applying admixture models in practice is how to select the model complexity, or number of populations, <italic>K</italic>. It is important to note that in practice there will generally be no “true” value of <italic>K</italic>, because samples from real populations will never conform exactly to the assumptions of the model. Further, inferred values of <italic>K</italic> could be influenced by sampling ascertainment schemes (<xref rid="bib6" ref-type="bibr">Engelhardt and Stephens 2010</xref>) (imagine sampling from <italic>g</italic> distinct locations in a continuous habitat exhibiting isolation by distance—any automated approach to select <italic>K</italic> will be influenced by <italic>g</italic>), and by the number of typed loci (as more loci are typed, more subtle structure can be picked up, and inferred values of <italic>K</italic> may increase). Nonetheless, it can be helpful to have automated heuristic rules to help guide the analyst in making the appropriate choice for <italic>K</italic>, even if the resulting inferences need to be carefully interpreted within the context of prior knowledge about the data and sampling scheme. Therefore, we here used simulation to assess several different heuristics for selecting <italic>K</italic>.</p>
      <p>The manual of the ADMIXTURE code proposes choosing model complexity that minimizes the prediction error on held-out data estimated using the mean deviance residuals reported by the algorithm <inline-formula><mml:math id="me53"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. In <xref ref-type="fig" rid="fig1">Figure 1B</xref>, using the first group of simulations, we compare the value of <inline-formula><mml:math id="me54"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, averaged over 50 replicate data sets, between the two algorithms as a function of the resolvability of population structure in the data. We observe that while deviance residuals estimated by ADMIXTURE robustly identify an appropriate model complexity, the value of <italic>K</italic> identified using deviance residuals computed using the variational parameters from fastSTRUCTURE appear to overestimate the value of <italic>K</italic> underlying the data. However, on closer inspection, we observe that the difference in prediction errors between large values of <italic>K</italic> are statistically insignificant (<xref ref-type="fig" rid="fig3">Figure 3</xref>, middle). This suggests the following heuristic: select the lowest model complexity above which prediction errors do not vary significantly.</p>
      <fig id="fig3" fig-type="figure" position="float">
        <label>Figure 3</label>
        <caption>
          <p>Accuracy of different algorithms as a function of model complexity (<italic>K</italic>) on two simulated data sets, one in which ancestry is easy to resolve (A; <italic>r</italic> = 1) and one in which ancestry is difficult to resolve: (B; <italic>r</italic> = 0.5) Solid lines correspond to parameter estimates computed with a convergence criterion of |Δℰ| &lt; 10<sup>−8</sup>, while the dashed lines correspond to a weaker criterion of |Δℰ| &lt; 10<sup>−6</sup>. (Left) Mean admixture divergence between the true and inferred admixture proportions; (middle) mean binomial deviance of held-out genotype entries. Note that for values of <italic>K</italic> greater than the optimal value, any change in prediction error lies within the standard error of estimates of prediction error suggesting that we should choose the smallest value of model complexity above which a decrease in prediction error is statistically insignificant. (Right) Approximations to the marginal likelihood of the data computed by STRUCTURE and fastSTRUCTURE.</p>
        </caption>
        <graphic xlink:href="573fig3"/>
      </fig>
      <p>Alternatively, for fastSTRUCTURE with the simple prior, we propose two additional metrics for choosing model complexity: (1) <inline-formula><mml:math id="me55"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, value of <italic>K</italic> that maximizes the LLBO of the entire data set, and (2) <inline-formula><mml:math id="me56"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, the limiting value, as <italic>K</italic> increases, of the smallest number of model components that accounts for almost all of the ancestry in the sample. In <xref ref-type="fig" rid="fig1">Figure 1B</xref>, we observe that <inline-formula><mml:math id="me57"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> has the attractive property of robustly identifying strong structure underlying the data, while <inline-formula><mml:math id="me58"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> identifies additional model components needed to explain weak structure in the data, with a slight upward bias in complexity when the underlying structure is extremely difficult to resolve. For the second group of simulations, similar to results observed for the first group, when population structure is easy to resolve, ADMIXTURE robustly identifies the correct value of <italic>K</italic> (shown in <xref ref-type="fig" rid="fig2">Figure 2A</xref>). However, for similar reasons as before, the use of prediction error with fastSTRUCTURE tends to systematically overestimate the number of populations underlying the data. In contrast, <inline-formula><mml:math id="me59"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me60"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> match exactly to the true <italic>K</italic> when population structure is strong. When the underlying population structure is very weak, <inline-formula><mml:math id="me61"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is a severe underestimate of the true <italic>K</italic> while <inline-formula><mml:math id="me62"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> slightly overestimates the value of <italic>K</italic>. Surprisingly, <inline-formula><mml:math id="me63"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> estimated using ADMIXTURE and <inline-formula><mml:math id="me64"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> estimated using fastSTRUCTURE tend to underestimate the number of populations when the true number of populations <italic>K</italic><sub>t</sub> is large, as shown in <xref ref-type="fig" rid="fig2">Figure 2B</xref>.</p>
      <p>For a new data set, we suggest executing fastSTRUCTURE for multiple values of <italic>K</italic> and estimating <inline-formula><mml:math id="me65"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to obtain a reasonable range of values for the number of populations that would explain structure in the data, under the given model. To look for subtle structure in the data, we suggest executing fastSTRUCTURE with the logistic prior with values for values of <italic>K</italic> similar to those identified by using the simple prior.</p>
    </sec>
    <sec id="s10">
      <title>Accuracy of ancestry proportions</title>
      <p>We evaluated the accuracy of the algorithms by comparing the divergence between the true admixture proportions and the estimated admixture proportions at the optimal model complexity computed using the above metrics for each data set. In <xref ref-type="fig" rid="fig1">Figure 1C</xref>, we plot the mean divergence between the true and estimated admixture proportions, over multiple replicates, as a function of resolvability. We observe that the admixture proportions estimated by fastSTRUCTURE at <inline-formula><mml:math id="me66"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> have high divergence; however, this is a result of LLBO being too conservative in identifying <italic>K</italic>. At <inline-formula><mml:math id="me67"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me68"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, fastSTRUCTURE estimates admixture proportions with accuracies comparable to, and sometimes better than, ADMIXTURE even when the underlying population structure is rather weak. Furthermore, the held-out prediction deviances computed using posterior estimates from variational algorithms are consistently smaller than those estimated by ADMIXTURE (see <ext-link ext-link-type="uri" xlink:href="http://www.genetics.org/lookup/suppl/doi:10.1534/genetics.114.164350/-/DC1/genetics.114.164350-4.pdf">Figure S3</ext-link>) demonstrating the improved accuracy of variational Bayesian inference schemes over maximum-likelihood methods. Similarly, for the second group of simulated data sets, we observe in <xref ref-type="fig" rid="fig2">Figure 2, C and D</xref>, that the accuracy of variational algorithms tends to be comparable to or better than that of ADMIXTURE, particularly when structure is difficult to resolve. When structure is easy to resolve, the increased divergence estimates of fastSTRUCTURE with the logistic prior result from the upward bias in the estimate of <inline-formula><mml:math id="me69"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>; this can be improved by using cross-validation more carefully in choosing model complexity.</p>
    </sec>
    <sec id="s11">
      <title>Visualizing ancestry estimates</title>
      <p>Having demonstrated the performance of fastSTRUCTURE on multiple simulated data sets, we now illustrate the performance characteristics and parameter estimates using two specific data sets (selected from the first group of simulated data sets), one with strong population structure (<italic>r</italic> = 1) and one with weak structure (<italic>r</italic> = 0.5). In addition to these algorithms, we executed STRUCTURE for these two data sets using the model of independent allele frequencies to directly compare with the results of fastSTRUCTURE. For each data set, <italic>α</italic> was kept fixed to <inline-formula><mml:math id="me70"><mml:mrow><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>K</mml:mi></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula> for all populations, similar to the prior used for fastSTRUCTURE, and each run consisted of 50,000 burn-in steps and 50,000 MCMC steps. In <xref ref-type="fig" rid="fig3">Figure 3</xref>, we illustrate the divergence of admixture estimates and the prediction error on held-out data each as a function of <italic>K</italic>. For all choices of <italic>K</italic> greater than or equal to the true value, the accuracy of fastSTRUCTURE, measured using both admixture divergence and prediction error, is generally comparable to or better than that of ADMIXTURE and STRUCTURE, even when the underlying population structure is rather weak. In <xref ref-type="fig" rid="fig3">Figure 3</xref>, right, we plot the approximate marginal likelihood of the data, reported by STRUCTURE, and the optimal LLBO, computed by fastSTRUCTURE, each as a function of <italic>K</italic>. We note that the looseness of the bound between STRUCTURE and fastSTRUCTURE can make the LLBO a less reliable measure to choose model complexity than the approximate marginal likelihood reported by STRUCTURE, particularly when the size of the data set is not sufficient to resolve the underlying population structure.</p>
      <p><xref ref-type="fig" rid="fig4">Figure 4</xref> illustrates the admixture proportions estimated by the different algorithms on both data sets at two values of <italic>K</italic>, using Distruct plots (<xref rid="bib25" ref-type="bibr">Rosenberg 2004</xref>). For the larger choice of model complexity, we observe that fastSTRUCTURE with the simple prior uses only those model components that are necessary to explain the data, allowing for automatic inference of model complexity (<xref rid="bib14" ref-type="bibr">Mackay 2003</xref>). To better illustrate this property of unsupervised Bayesian inference methods, <xref ref-type="fig" rid="fig4">Figure 4</xref>, right, shows the mean contribution of ancestry from each model component to samples in the data set. While ADMIXTURE uses all components of the model to fit the data, STRUCTURE and fastSTRUCTURE assign negligible posterior mass to model components that are not required to capture structure in the data. The number of nonempty model components <inline-formula><mml:math id="me71"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> automatically identifies the model complexity required to explain the data; the optimal model complexity <inline-formula><mml:math id="me72"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is then the mode of all values of <inline-formula><mml:math id="me73"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> computed for different choices of <italic>K</italic>. While both STRUCTURE and fastSTRUCTURE tend to use only those model components necessary to explain the data, fastSTRUCTURE is slightly more aggressive in removing model components that seem unnecessary, leading to slightly improved results for fastSTRUCTURE compared to STRUCTURE in Equation 4, when there is strong structure in the data set. This property of fastSTRUCTURE seems useful in identifying global patterns of structure in a data set (<italic>e.g.</italic>, the populations represented in a set of samples); however, it can be an important drawback if one is interested in detecting weak signatures of gene flow from a population to a specific sample in a given data set.</p>
      <fig id="fig4" fig-type="figure" position="float">
        <label>Figure 4</label>
        <caption>
          <p>Visualizing ancestry proportions estimated by different algorithms on two simulated data sets, one with strong structure (top, <italic>r</italic> = 1) and one with weak structure (bottom, <italic>r</italic> = 0.5). (Left and middle) Ancestry estimated at model complexity of <italic>K</italic> = 3 and <italic>K</italic> = 5, respectively. Insets illustrate the true ancestry and the ancestry inferred by each algorithm. Each color represents a population and each individual is represented by a vertical line partitioned into colored segments whose lengths represent the admixture proportions from <italic>K</italic> populations. (Right) Mean ancestry contributions of the model components, when the model complexity <italic>K</italic> = 5.</p>
        </caption>
        <graphic xlink:href="573fig4"/>
      </fig>
      <p>When population structure is difficult to resolve, imposing a logistic prior and estimating its parameters using the data are likely to increase the power to detect weak structure. However, estimation of the hierarchical prior parameters by maximizing the approximate marginal likelihood also makes the model susceptible to overfitting by encouraging a small set of samples to be randomly, and often confidently, assigned to unnecessary components of the model. To correct for this, when using the logistic prior, we suggest estimating the variational parameters with multiple random restarts and using the mean of the parameters corresponding to the top five values of LLBO. To ensure consistent population labels when computing the mean, we permuted the labels for each set of variational parameter estimates to find the permutation with the lowest pairwise Jensen–Shannon divergence between admixture proportions among pairs of restarts. Admixture estimates computed using this scheme show improved robustness against overfitting, as illustrated in <xref ref-type="fig" rid="fig4">Figure 4</xref>. Moreover, the pairwise Jensen–Shannon divergence between admixture proportions among all restarts of the variational algorithms can also be used as a measure of the robustness of their results and as a signature of how strongly they overfit the data.</p>
    </sec>
    <sec id="s12">
      <title>Runtime performance</title>
      <p>A key advantage of variational Bayesian inference algorithms compared to inference algorithms based on sampling is the dramatic improvement in time complexity of the algorithm. To evaluate the runtimes of the different learning algorithms, we generated from the <italic>F</italic>-model data sets with sample sizes <italic>N</italic> ∈ {200, 600} and numbers of loci <italic>L</italic> ∈ {500, 2500}, each having three populations with <italic>r</italic> = 1. The time complexity of each of the above algorithms is linear in the number of samples, loci, and populations, <italic>i.e.</italic>, O(<italic>NLK</italic>); in comparison, the time complexity of principal components analysis is quadratic in the number of samples and linear in the number of loci. In <xref ref-type="fig" rid="fig5">Figure 5</xref>, the mean runtime of the different algorithms is shown as a function of problem size defined as <italic>N</italic> × <italic>L</italic> × <italic>K</italic>. The added complexity of the cost function being optimized in fastSTRUCTURE increases its runtime when compared to ADMIXTURE. However, fastSTRUCTURE is about 2 orders of magnitude faster than STRUCTURE, making it suitable for large data sets with hundreds of thousands of genetic variants. For example, using a data set with 1000 samples genotyped at 500,000 loci with <italic>K</italic> = 10, each iteration of our current Python implementation of fastSTRUCTURE with the simple prior takes about 11 min, while each iteration of ADMIXTURE takes ∼16 min. Since one would usually like to estimate the variational parameters for multiple values of <italic>K</italic> for a new data set, a faster algorithm that gives an approximate estimate of ancestry proportions in the sample would be of much utility, particularly to guide an appropriate choice of <italic>K</italic>. We observe in our simulations that a weaker convergence criterion of |Δℰ| &lt; 10<sup>−6</sup> gives us comparably accurate results with much shorter run times, illustrated by the dashed lines in <xref ref-type="fig" rid="fig3">Figure 3</xref> and <xref ref-type="fig" rid="fig5">Figure 5</xref>. Based on these observations, we suggest executing multiple random restarts of the algorithm with a weak convergence criterion of |Δℰ| &lt; 10<sup>−5</sup> to rapidly obtain reasonably accurate estimates of the variational parameters, prediction errors, and ancestry contributions from relevant model components.</p>
      <fig id="fig5" fig-type="figure" position="float">
        <label>Figure 5</label>
        <caption>
          <p>Runtimes of different algorithms on simulated data sets with different number of loci and samples; the square root of runtime (in minutes) is plotted as a function of square root of problem size (defined as <italic>N</italic> × <italic>L</italic> × <italic>K</italic>). Similar to <xref ref-type="fig" rid="fig3">Figure 3</xref>, dashed lines correspond to a weaker convergence criterion than solid lines.</p>
        </caption>
        <graphic xlink:href="573fig5"/>
      </fig>
    </sec>
    <sec id="s13">
      <title>HGDP panel</title>
      <p>We now compare the results of ADMIXTURE and fastSTRUCTURE on a large, well-studied data set of genotypes at single nucleotide polymorphisms (SNP) genotyped in the HGDP (<xref rid="bib12" ref-type="bibr">Li <italic>et al.</italic> 2008</xref>), in which 1048 individuals from 51 different populations were genotyped using Illumina’s HumanHap650Y platform. We used the set of 938 “unrelated” individuals for the analysis in this article. For the selected set of individuals, we removed SNPs that were monomorphic, had missing genotypes in &gt;5% of the samples, and failed the Hardy–Weinberg Equilibrium (HWE) test at <italic>P</italic> &lt; 0.05 cutoff. To test for violations from HWE, we selected three population groups that have relatively little population structure (East Asia, Europe, Bantu Africa), constructed three large groups of individuals from these populations, and performed a test for HWE for each SNP within each large group. The final data set contained 938 samples with genotypes at 657,143 loci, with 0.1% of the entries in the genotype matrix missing. We executed ADMIXTURE and fastSTRUCTURE using this data set with allowed model complexity <italic>K</italic> ∈ {5, …, 15}. In <xref ref-type="fig" rid="fig6">Figure 6</xref>, the ancestry proportions estimated by ADMIXTURE and fastSTRUCTURE at <italic>K</italic> = 7 are shown; this value of <italic>K</italic> was chosen to compare with results reported using the same data set with FRAPPE (<xref rid="bib12" ref-type="bibr">Li <italic>et al.</italic> 2008</xref>). In contrast to results reported using FRAPPE, we observe that both ADMIXTURE and fastSTRUCTURE identify the Mozabite, Bedouin, Palestinian, and Druze populations as very closely related to European populations with some gene flow from Central-Asian and African populations; this result was robust over multiple random restarts of each algorithm. Since both ADMIXTURE and FRAPPE maximize the same likelihood function, the slight difference in results is likely due to differences in the modes of the likelihood surface to which the two algorithms converge. A notable difference between ADMIXTURE and fastSTRUCTURE is in their choice of the seventh population—ADMIXTURE splits the Native American populations along a north–south divide while fastSTRUCTURE splits the African populations into central African and south African population groups.</p>
      <fig id="fig6" fig-type="figure" position="float">
        <label>Figure 6</label>
        <caption>
          <p>Ancestry proportions inferred by ADMIXTURE and fastSTRUCTURE (with the simple prior) on the HGDP data at <italic>K</italic> = 7 (<xref rid="bib12" ref-type="bibr">Li <italic>et al.</italic> 2008</xref>). Notably, ADMIXTURE splits the Central and South American populations into two groups while fastSTRUCTURE assigns higher approximate marginal likelihood to a split of sub-Saharan African populations into two groups.</p>
        </caption>
        <graphic xlink:href="573fig6"/>
      </fig>
      <p>Interestingly, both algorithms strongly suggest the existence of additional weak population structure underlying the data, as shown in <xref ref-type="fig" rid="fig7">Figure 7</xref>. ADMIXTURE, using cross-validation, identifies the optimal model complexity to be 11; however, the deviance residuals appear to change very little beyond <italic>K</italic> = 7, suggesting that the model components identified at <italic>K</italic> = 7 explain most of the structure underlying the data. The results of the heuristics implemented in fastSTRUCTURE are largely concordant, with <inline-formula><mml:math id="me74"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="me75"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:math></inline-formula> and the lowest cross-validation error obtained at <inline-formula><mml:math id="me76"><mml:mrow><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mi>v</mml:mi></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>.</p>
      <fig id="fig7" fig-type="figure" position="float">
        <label>Figure 7</label>
        <caption>
          <p>Model choice of ADMIXTURE and fastSTRUCTURE (with the simple prior) on the HGDP data. Optimal value of <italic>K</italic>, identified by ADMIXTURE using deviance residuals, and by fastSTRUCTURE using deviance, <inline-formula><mml:math id="me77"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, and LLBO, are shown by a dashed line.</p>
        </caption>
        <graphic xlink:href="573fig7"/>
      </fig>
      <p>The admixture proportions estimated at the optimal choices of model complexity using the different metrics are shown in <xref ref-type="fig" rid="fig8">Figure 8</xref>. The admixture proportions estimated at <italic>K</italic> = 7 and <italic>K</italic> = 9 are remarkably similar, with the Kalash and Karitiana populations being assigned to their own model components at <italic>K</italic> = 9. These results demonstrate the ability of LLBO to identify strong structure underlying the data and that of <inline-formula><mml:math id="me78"><mml:mrow><mml:msub><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> to identify additional weak structure that explain variation in the data. At <italic>K</italic> = 10 (as identified using cross-validation), we observe that only nine of the model components are populated. However, the estimated admixture proportions differ crucially with all African populations grouped together, the Melanesian and Papuan populations each assigned to their own groups, and the Middle-Eastern populations represented as predominantly an admixture of Europeans and a Bedouin subpopulation with small amounts of gene flow from Central-Asian populations.</p>
      <fig id="fig8" fig-type="figure" position="float">
        <label>Figure 8</label>
        <caption>
          <p>Ancestry proportions inferred by ADMIXTURE and fastSTRUCTURE (with the simple prior) at the optimal choice of <italic>K</italic> identified by relevant metrics for each algorithm. Notably, the admixture proportions at <inline-formula><mml:math id="me79"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mi mathvariant="normal">ℰ</mml:mi><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me80"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mi>K</mml:mi><mml:mrow><mml:msup><mml:mi mathvariant="normal">∅</mml:mi><mml:mtext>C</mml:mtext></mml:msup></mml:mrow><mml:mi mathvariant="normal">∗</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> are quite similar, with estimates in the latter case identifying the Kalash and Karitiana as additional separate groups that share very little ancestry with the remaining populations.</p>
        </caption>
        <graphic xlink:href="573fig8"/>
      </fig>
      <p>The main contribution of this work is a fast, approximate inference algorithm for one simple admixture model for population structure, used in ADMIXTURE and STRUCTURE. While admixture may not be an exactly correct model for most population data sets, this model often gives key insights into the population structure underlying samples in a new data set and is useful in identifying global patterns of structure in the samples. Exploring model choice, by comparing the goodness-of-fit of different models that capture demographies of varying complexity, is an important future direction.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s14">
    <title>Discussion</title>
    <p>Our analyses on simulated and natural data sets demonstrate that fastSTRUCTURE estimates approximate posterior distributions on ancestry proportions 2 orders of magnitude faster than STRUCTURE, with ancestry estimates and prediction accuracies that are comparable to those of ADMIXTURE. Posing the problem of inference in terms of an optimization problem allows us to draw on powerful tools in convex optimization and plays an important role in the gain in speed achieved by variational inference schemes, when compared to the Gibbs sampling scheme used in STRUCTURE. In addition, the flexible logistic prior enables us to resolve subtle structure underlying a data set. The considerable improvement in runtime with comparable accuracies allows the application of these methods to large genotype data sets that are steadily becoming the norm in studies of population history, genetic association with disease, and conservation biology.</p>
    <p>The choice of model complexity, or the number of populations required to explain structure in a data set, is a difficult problem associated with the inference of population structure. Unlike in maximum-likelihood estimation, the model parameters have been integrated out in variational inference schemes and optimizing the KL divergence in fastSTRUCTURE does not run the risk of overfitting. The heuristic scores that we have proposed to identify model complexity provide a robust and reasonable range for the number of populations underlying the data set, without the need for a time-consuming cross-validation scheme.</p>
    <p>As in the original version of STRUCTURE, the model underlying fastSTRUCTURE does not explicitly account for linkage disequilibrium (LD) between genetic markers. While LD between genotype markers in the genotype data set will lead us to underestimate the variance of the approximate posterior distributions, the improved accuracy in predicting held-out genotypes for the HGDP data set demonstrates that the underestimate due to unmodeled LD and the mean field approximation is not too severe. Furthermore, not accounting for LD appropriately can lead to significant biases in local ancestry estimation, depending on the sample size and population haplotype frequencies. However, we believe global ancestry estimates are likely to incur very little bias due to unmodeled LD. One potential source of bias in global ancestry estimates is due to LD driven by segregating, chromosomal inversions. While genetic variants on inversions on the human genome and those of different model organisms are fairly well characterized and can be easily masked, it is important to identify and remove genetic variants that lie in inversions for nonmodel organisms, to avoid them from biasing global ancestry estimates. One heuristic approach to searching for such large blocks would be to compute a measure of differentiation for each locus between one population and the remaining populations, using the inferred variational posteriors on allele frequencies. Long stretches of the genome that have highly differentiated genetic variants can then be removed before recomputing ancestry estimates.</p>
    <p>In summary, we have presented a variational framework for fast, accurate inference of global ancestry of samples genotyped at a large number of genetic markers. For a new data set, we recommend executing our program, fastSTRUCTURE, for multiple values of <italic>K</italic> to obtain a reasonable range of values for the appropriate model complexity required to explain structure in the data, as well as ancestry estimates at those model complexities. For improved ancestry estimates and to identify subtle structure, we recommend executing fastSTRUCTURE with the logistic prior at values of <italic>K</italic> similar to those identified when using the simple prior. Our program is available for download at <ext-link ext-link-type="uri" xlink:href="http://pritchardlab.stanford.edu/structure.html">http://pritchardlab.stanford.edu/structure.html</ext-link>.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>We thank Tim Flutre, Shyam Gopalakrishnan, and Ida Moltke for fruitful discussions on this project and the editor and two anonymous reviewers for their helpful comments and suggestions. This work was funded by grants from the National Institutes of Health (HG007036,HG002585) and by the Howard Hughes Medical Institute.</p>
  </ack>
  <fn-group>
    <fn id="fn1">
      <p>Communicating editor: M. K. Uyenoyama</p>
    </fn>
  </fn-group>
  <app-group>
    <app>
      <title>Appendix A</title>
      <p>Given the parametric forms for the variational distributions and a choice of prior for the fastSTRUCTURE model, the per-genotype LLBO is given as</p>
      <sec id="s15">
        <title/>
        <disp-formula id="eqA.1">
          <mml:math id="me81">
            <mml:mtable>
              <mml:mtr>
                <mml:mtd>
                  <mml:mi mathvariant="normal">ℰ</mml:mi>
                  <mml:mo>=</mml:mo>
                  <mml:mfrac>
                    <mml:mn>1</mml:mn>
                    <mml:mi mathvariant="script">G</mml:mi>
                  </mml:mfrac>
                  <mml:mstyle displaystyle="true">
                    <mml:munder>
                      <mml:mo>∑</mml:mo>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>l</mml:mi>
                      </mml:mrow>
                    </mml:munder>
                    <mml:mrow>
                      <mml:mi>δ</mml:mi>
                      <mml:mrow>
                        <mml:mo>(</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi mathvariant="bold">G</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>l</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>)</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                  </mml:mstyle>
                  <mml:mrow>
                    <mml:mo>{</mml:mo>
                    <mml:mrow>
                      <mml:mstyle displaystyle="true">
                        <mml:munder>
                          <mml:mo>∑</mml:mo>
                          <mml:mi>k</mml:mi>
                        </mml:munder>
                        <mml:mrow>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msubsup>
                                    <mml:mi>Z</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                    <mml:mi>a</mml:mi>
                                  </mml:msubsup>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mo>+</mml:mo>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msubsup>
                                    <mml:mi>Z</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                    <mml:mi>b</mml:mi>
                                  </mml:msubsup>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mi mathvariant="double-struck">I</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msub>
                                    <mml:mi mathvariant="bold">G</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                  <mml:mo>=</mml:mo>
                                  <mml:mn>0</mml:mn>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:msub>
                                    <mml:mrow>
                                      <mml:mrow>
                                        <mml:mo>(</mml:mo>
                                        <mml:mrow>
                                          <mml:mn>1</mml:mn>
                                          <mml:mo>−</mml:mo>
                                          <mml:mi>P</mml:mi>
                                        </mml:mrow>
                                        <mml:mo>)</mml:mo>
                                      </mml:mrow>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mo>+</mml:mo>
                              <mml:mi mathvariant="double-struck">I</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msub>
                                    <mml:mi mathvariant="bold">G</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                  <mml:mo>=</mml:mo>
                                  <mml:mn>2</mml:mn>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:msub>
                                    <mml:mi>P</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mo>+</mml:mo>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:msub>
                                    <mml:mi>Q</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                      </mml:mstyle>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mtd>
              </mml:mtr>
              <mml:mtr>
                <mml:mtd>
                  <mml:mo> </mml:mo>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mo>+</mml:mo>
                      <mml:mi mathvariant="double-struck">I</mml:mi>
                      <mml:mrow>
                        <mml:mo>[</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi mathvariant="bold">G</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>l</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                          <mml:mn>1</mml:mn>
                        </mml:mrow>
                        <mml:mo>]</mml:mo>
                      </mml:mrow>
                      <mml:mstyle displaystyle="true">
                        <mml:munder>
                          <mml:mo>∑</mml:mo>
                          <mml:mi>k</mml:mi>
                        </mml:munder>
                        <mml:mrow>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msubsup>
                                    <mml:mi>Z</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                    <mml:mi>a</mml:mi>
                                  </mml:msubsup>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:msub>
                                    <mml:mi>P</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mo>+</mml:mo>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:msubsup>
                                    <mml:mi>Z</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>l</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                    <mml:mi>b</mml:mi>
                                  </mml:msubsup>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:mrow>
                                    <mml:mo>(</mml:mo>
                                    <mml:mrow>
                                      <mml:mn>1</mml:mn>
                                      <mml:mo>−</mml:mo>
                                      <mml:msub>
                                        <mml:mi>P</mml:mi>
                                        <mml:mrow>
                                          <mml:mi>l</mml:mi>
                                          <mml:mi>k</mml:mi>
                                        </mml:mrow>
                                      </mml:msub>
                                    </mml:mrow>
                                    <mml:mo>)</mml:mo>
                                  </mml:mrow>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo>−</mml:mo>
                          <mml:mi mathvariant="bold">E</mml:mi>
                          <mml:mrow>
                            <mml:mo>[</mml:mo>
                            <mml:mrow>
                              <mml:mi>log</mml:mi>
                              <mml:msubsup>
                                <mml:mi>Z</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>l</mml:mi>
                                </mml:mrow>
                                <mml:mi>a</mml:mi>
                              </mml:msubsup>
                            </mml:mrow>
                            <mml:mo>]</mml:mo>
                          </mml:mrow>
                          <mml:mo>−</mml:mo>
                          <mml:mi mathvariant="bold">E</mml:mi>
                          <mml:mrow>
                            <mml:mo>[</mml:mo>
                            <mml:mrow>
                              <mml:mi>log</mml:mi>
                              <mml:msubsup>
                                <mml:mi>Z</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>l</mml:mi>
                                </mml:mrow>
                                <mml:mi>b</mml:mi>
                              </mml:msubsup>
                            </mml:mrow>
                            <mml:mo>]</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                      </mml:mstyle>
                    </mml:mrow>
                    <mml:mo>}</mml:mo>
                  </mml:mrow>
                </mml:mtd>
              </mml:mtr>
              <mml:mtr>
                <mml:mtd>
                  <mml:mo> </mml:mo>
                  <mml:mo>+</mml:mo>
                  <mml:mstyle displaystyle="true">
                    <mml:munder>
                      <mml:mo>∑</mml:mo>
                      <mml:mrow>
                        <mml:mi>l</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>k</mml:mi>
                      </mml:mrow>
                    </mml:munder>
                    <mml:mrow>
                      <mml:mi>log</mml:mi>
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mtext>B</mml:mtext>
                          <mml:mo>(</mml:mo>
                          <mml:mrow>
                            <mml:msubsup>
                              <mml:mover accent="true">
                                <mml:mi>P</mml:mi>
                                <mml:mo>˜</mml:mo>
                              </mml:mover>
                              <mml:mrow>
                                <mml:mi>l</mml:mi>
                                <mml:mi>k</mml:mi>
                              </mml:mrow>
                              <mml:mi>u</mml:mi>
                            </mml:msubsup>
                          </mml:mrow>
                          <mml:mo>,</mml:mo>
                          <mml:mrow>
                            <mml:msubsup>
                              <mml:mover accent="true">
                                <mml:mi>P</mml:mi>
                                <mml:mo>˜</mml:mo>
                              </mml:mover>
                              <mml:mrow>
                                <mml:mi>l</mml:mi>
                                <mml:mi>k</mml:mi>
                              </mml:mrow>
                              <mml:mi>v</mml:mi>
                            </mml:msubsup>
                          </mml:mrow>
                          <mml:mo>)</mml:mo>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>B</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mi>β</mml:mi>
                              <mml:mo>,</mml:mo>
                              <mml:mi>γ</mml:mi>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                      </mml:mfrac>
                      <mml:mo>+</mml:mo>
                      <mml:mrow>
                        <mml:mo>(</mml:mo>
                        <mml:mrow>
                          <mml:mi>β</mml:mi>
                          <mml:mo>−</mml:mo>
                          <mml:msubsup>
                            <mml:mover accent="true">
                              <mml:mi>P</mml:mi>
                              <mml:mo>˜</mml:mo>
                            </mml:mover>
                            <mml:mrow>
                              <mml:mi>l</mml:mi>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                            <mml:mi>u</mml:mi>
                          </mml:msubsup>
                        </mml:mrow>
                        <mml:mo>)</mml:mo>
                      </mml:mrow>
                      <mml:mi mathvariant="bold">E</mml:mi>
                      <mml:mrow>
                        <mml:mo>[</mml:mo>
                        <mml:mrow>
                          <mml:mi>log</mml:mi>
                          <mml:msub>
                            <mml:mi>P</mml:mi>
                            <mml:mrow>
                              <mml:mi>l</mml:mi>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>]</mml:mo>
                      </mml:mrow>
                      <mml:mo>+</mml:mo>
                      <mml:mrow>
                        <mml:mo>(</mml:mo>
                        <mml:mrow>
                          <mml:mi>γ</mml:mi>
                          <mml:mo>−</mml:mo>
                          <mml:msubsup>
                            <mml:mover accent="true">
                              <mml:mi>P</mml:mi>
                              <mml:mo>˜</mml:mo>
                            </mml:mover>
                            <mml:mrow>
                              <mml:mi>l</mml:mi>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                            <mml:mi>v</mml:mi>
                          </mml:msubsup>
                        </mml:mrow>
                        <mml:mo>)</mml:mo>
                      </mml:mrow>
                      <mml:mi mathvariant="bold">E</mml:mi>
                      <mml:mrow>
                        <mml:mo>[</mml:mo>
                        <mml:mrow>
                          <mml:mi>log</mml:mi>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mn>1</mml:mn>
                              <mml:mo>−</mml:mo>
                              <mml:msub>
                                <mml:mi>P</mml:mi>
                                <mml:mrow>
                                  <mml:mi>l</mml:mi>
                                  <mml:mi>k</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                        <mml:mo>]</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                  </mml:mstyle>
                </mml:mtd>
              </mml:mtr>
              <mml:mtr>
                <mml:mtd>
                  <mml:mo> </mml:mo>
                  <mml:mo>+</mml:mo>
                  <mml:mstyle displaystyle="true">
                    <mml:munder>
                      <mml:mo>∑</mml:mo>
                      <mml:mi>n</mml:mi>
                    </mml:munder>
                    <mml:mrow>
                      <mml:mrow>
                        <mml:mo>{</mml:mo>
                        <mml:mrow>
                          <mml:mstyle displaystyle="true">
                            <mml:munder>
                              <mml:mo>∑</mml:mo>
                              <mml:mi>k</mml:mi>
                            </mml:munder>
                            <mml:mrow>
                              <mml:mrow>
                                <mml:mo>(</mml:mo>
                                <mml:mrow>
                                  <mml:msub>
                                    <mml:mi>α</mml:mi>
                                    <mml:mi>k</mml:mi>
                                  </mml:msub>
                                  <mml:mo>−</mml:mo>
                                  <mml:msub>
                                    <mml:mover accent="true">
                                      <mml:mi>Q</mml:mi>
                                      <mml:mo>˜</mml:mo>
                                    </mml:mover>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>)</mml:mo>
                              </mml:mrow>
                              <mml:mi mathvariant="bold">E</mml:mi>
                              <mml:mrow>
                                <mml:mo>[</mml:mo>
                                <mml:mrow>
                                  <mml:mi>log</mml:mi>
                                  <mml:msub>
                                    <mml:mi>Q</mml:mi>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>]</mml:mo>
                              </mml:mrow>
                              <mml:mo>+</mml:mo>
                              <mml:mi>log</mml:mi>
                              <mml:mtext>Γ</mml:mtext>
                              <mml:mrow>
                                <mml:mo>(</mml:mo>
                                <mml:mrow>
                                  <mml:msub>
                                    <mml:mi>α</mml:mi>
                                    <mml:mi>k</mml:mi>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>)</mml:mo>
                              </mml:mrow>
                              <mml:mo>−</mml:mo>
                              <mml:mi>log</mml:mi>
                              <mml:mtext>Γ</mml:mtext>
                              <mml:mrow>
                                <mml:mo>(</mml:mo>
                                <mml:mrow>
                                  <mml:msub>
                                    <mml:mover accent="true">
                                      <mml:mi>Q</mml:mi>
                                      <mml:mo>˜</mml:mo>
                                    </mml:mover>
                                    <mml:mrow>
                                      <mml:mi>n</mml:mi>
                                      <mml:mi>k</mml:mi>
                                    </mml:mrow>
                                  </mml:msub>
                                </mml:mrow>
                                <mml:mo>)</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                          </mml:mstyle>
                        </mml:mrow>
                        <mml:mo>}</mml:mo>
                      </mml:mrow>
                      <mml:mo>+</mml:mo>
                      <mml:mi>log</mml:mi>
                      <mml:mi mathvariant="normal">Γ</mml:mi>
                      <mml:mrow>
                        <mml:mo>(</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mover accent="true">
                              <mml:mi>Q</mml:mi>
                              <mml:mo>˜</mml:mo>
                            </mml:mover>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>o</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>)</mml:mo>
                      </mml:mrow>
                      <mml:mo>−</mml:mo>
                      <mml:mi>log</mml:mi>
                      <mml:mi mathvariant="normal">Γ</mml:mi>
                      <mml:mrow>
                        <mml:mo>(</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>α</mml:mi>
                            <mml:mi>o</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>)</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                  </mml:mstyle>
                  <mml:mo>,</mml:mo>
                </mml:mtd>
              </mml:mtr>
            </mml:mtable>
          </mml:math>
          <label>(A1)</label>
        </disp-formula>
        <p>where <bold>E</bold>[⋅] is the expectation taken with respect to the appropriate variational distribution, B(⋅) is the beta function, Γ(⋅) is the gamma function, {<italic>α</italic>, <italic>β</italic>, <italic>γ</italic>} are the hyperparameters in the model, <italic>δ</italic>(⋅) is an indicator variable that takes the value of zero if the genotype is missing, <inline-formula><mml:math id="me249"><mml:mrow><mml:mi mathvariant="script">G</mml:mi></mml:mrow></mml:math></inline-formula> is the number of observed entries in the genotype matrix, <inline-formula><mml:math id="me82"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mtext>o</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="me83"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mtext>no</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:math></inline-formula>. Maximizing this lower bound for each variational parameter, keeping the other parameters fixed, gives us the following update equations:<disp-formula id="eqA.2"><mml:math id="me84"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>a</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>∝</mml:mo><mml:mi>exp</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(A2)</label></disp-formula><disp-formula id="eqA.3"><mml:math id="me85"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∝</mml:mo><mml:mi>exp</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mi mathvariant="bold">G</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(A3)</label></disp-formula>where<disp-formula id="eqA.4"><mml:math id="me86"><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><label>(A4)</label></disp-formula><disp-formula id="eqA.5"><mml:math id="me87"><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">Ψ</mml:mi><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math><label>(A5)</label></disp-formula><disp-formula id="eqA.6"><mml:math id="me88"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>:</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>l</mml:mi></mml:munder><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(A6)</label></disp-formula><disp-formula id="eqA.7"><mml:math id="me89"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>u</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>v</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>:</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(A7)</label></disp-formula><disp-formula id="eqA.8"><mml:math id="me90"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>.</mml:mo></mml:mrow></mml:math><label>(A8)</label></disp-formula>In the above update equations, <italic>ψ</italic>(⋅) is the digamma function. When the <italic>F</italic>-prior is used, the LLBO and the update equations remain exactly the same, after replacing <italic>β</italic> with <inline-formula><mml:math id="me91"><mml:mrow><mml:msubsup><mml:mi>π</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <italic>γ</italic> with <inline-formula><mml:math id="me92"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msubsup><mml:mi>π</mml:mi><mml:mi>l</mml:mi><mml:mi>A</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. In this case, the LLBO is also maximized with respect to the hyperparameter <italic>F</italic> using the L-BFGS-B algorithm, a quasi-Newton code for bound-constrained optimization.</p>
        <p>When the logistic prior is used, a straightforward maximization of the LLBO no longer gives us explicit update equations for <inline-formula><mml:math id="me93"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me94"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. One alternative is to use a constrained optimization solver, like L-BFGS-B; however, the large number of variational parameters to be optimized greatly increases the per-iteration computational cost of the inference algorithm. Instead, we propose update equations for <inline-formula><mml:math id="me95"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me96"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> to have a similar form as those obtained with the simple prior,<disp-formula id="eqA.9"><mml:math id="me97"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(A9)</label></disp-formula><disp-formula id="eqA.10"><mml:math id="me98"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi mathvariant="double-struck">I</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(A10)</label></disp-formula>where <italic>β<sub>lk</sub></italic> and <italic>γ<sub>lk</sub></italic> implicitly depend on <inline-formula><mml:math id="me99"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me100"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="eqA.11"><mml:math id="me101"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mi>ψ</mml:mi><mml:mo>″</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>−</mml:mo><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>=</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mi>ψ</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mi>ψ</mml:mi><mml:mo>″</mml:mo></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math><label>(A11)</label></disp-formula>The optimal values for <inline-formula><mml:math id="me102"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me103"><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> can be obtained by iterating between the two sets of equations to convergence. Thus, when the logistic prior is used, the algorithm is implemented as a nested iterative scheme where for each update of all the variational parameters, an iterative scheme computes the update for <inline-formula><mml:math id="me104"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>u</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>v</mml:mi></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, the optimal value of the hyperparameter <italic>μ</italic> is obtained straightforwardly as<disp-formula id="eqA.12"><mml:math id="me105"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:munder><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:munder><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:mrow></mml:mrow></mml:math><label>(A12)</label></disp-formula>while the optimal <italic>λ</italic> is computed using a constrained optimization solver.</p>
      </sec>
    </app>
    <app>
      <title>Appendix B</title>
      <p>Given the observed genotypes <bold>G</bold>, the probability of the unobserved genotype <inline-formula><mml:math id="me106"><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> for the <italic>n</italic>th sample at the <italic>l</italic>th locus is given as</p>
      <sec id="s16">
        <title/>
        <disp-formula id="eqB.1">
          <mml:math id="me107">
            <mml:mrow>
              <mml:mi>p</mml:mi>
              <mml:mrow>
                <mml:mo>(</mml:mo>
                <mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msubsup>
                        <mml:mstyle mathvariant="bold" mathsize="normal">
                          <mml:mi mathvariant="bold">G</mml:mi>
                        </mml:mstyle>
                        <mml:mrow>
                          <mml:mi>n</mml:mi>
                          <mml:mi>l</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>hid</mml:mtext>
                        </mml:mrow>
                      </mml:msubsup>
                    </mml:mrow>
                    <mml:mo>|</mml:mo>
                  </mml:mrow>
                  <mml:mstyle mathvariant="bold" mathsize="normal">
                    <mml:mi mathvariant="bold">G</mml:mi>
                  </mml:mstyle>
                </mml:mrow>
                <mml:mo>)</mml:mo>
              </mml:mrow>
              <mml:mo>=</mml:mo>
              <mml:mstyle displaystyle="true">
                <mml:mrow>
                  <mml:mo>∫</mml:mo>
                  <mml:mrow>
                    <mml:mi>p</mml:mi>
                    <mml:mrow>
                      <mml:mo>(</mml:mo>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mrow>
                            <mml:msubsup>
                              <mml:mstyle mathvariant="bold" mathsize="normal">
                                <mml:mi mathvariant="bold">G</mml:mi>
                              </mml:mstyle>
                              <mml:mrow>
                                <mml:mi>n</mml:mi>
                                <mml:mi>l</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mtext>hid</mml:mtext>
                              </mml:mrow>
                            </mml:msubsup>
                          </mml:mrow>
                          <mml:mo>|</mml:mo>
                        </mml:mrow>
                        <mml:mi>P</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>Q</mml:mi>
                      </mml:mrow>
                      <mml:mo>)</mml:mo>
                    </mml:mrow>
                    <mml:mi>p</mml:mi>
                    <mml:mrow>
                      <mml:mo>(</mml:mo>
                      <mml:mrow>
                        <mml:mi>P</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mrow>
                          <mml:mi>Q</mml:mi>
                          <mml:mo>|</mml:mo>
                        </mml:mrow>
                        <mml:mstyle mathvariant="bold" mathsize="normal">
                          <mml:mi mathvariant="bold">G</mml:mi>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo>)</mml:mo>
                    </mml:mrow>
                    <mml:mtext> </mml:mtext>
                    <mml:mi>d</mml:mi>
                    <mml:mi>Q</mml:mi>
                    <mml:mtext> </mml:mtext>
                    <mml:mi>d</mml:mi>
                    <mml:mi>P</mml:mi>
                  </mml:mrow>
                </mml:mrow>
              </mml:mstyle>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
          <label>(B1)</label>
        </disp-formula>
        <p>Replacing the posterior <italic>p</italic>(<italic>P</italic>, <italic>Q</italic>|<bold>G</bold>) with the optimal variational posterior distribution, we obtain<disp-formula id="eqB.2"><mml:math id="me108"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B2)</label></disp-formula><disp-formula id="eqB.3"><mml:math id="me109"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B3)</label></disp-formula><disp-formula id="eqB.4"><mml:math id="me110"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B4)</label></disp-formula><disp-formula id="eqB.5"><mml:math id="me111"><mml:mrow><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B5)</label></disp-formula><disp-formula id="eqB.6"><mml:math id="me112"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B6)</label></disp-formula><disp-formula id="eqB.7"><mml:math id="me113"><mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B7)</label></disp-formula><disp-formula id="eqB.8"><mml:math id="me114"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B8)</label></disp-formula><disp-formula id="eqB.9"><mml:math id="me115"><mml:mrow><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B9)</label></disp-formula><disp-formula id="eqB.10"><mml:math id="me116"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">G</mml:mi></mml:mstyle><mml:mrow><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mtext>hid</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>Q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B10)</label></disp-formula><disp-formula id="eqB.11"><mml:math id="me117"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:mo>∫</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mi>q</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>Q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mtext> </mml:mtext><mml:mi>d</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B11)</label></disp-formula><disp-formula id="eqB.12"><mml:math id="me118"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>≠</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:math><label>(B12)</label></disp-formula><disp-formula id="eqB.13"><mml:math id="me119"><mml:mrow><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:munder><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:math><label>(B13)</label></disp-formula>where<disp-formula id="eqB.14"><mml:math id="me120"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math><label>(B14)</label></disp-formula><disp-formula id="eqB.15"><mml:math id="me121"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math><label>(B15)</label></disp-formula><disp-formula id="eqB.16"><mml:math id="me122"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:math><label>(B16)</label></disp-formula><disp-formula id="eqB.17"><mml:math id="me123"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math><label>(B17)</label></disp-formula><disp-formula id="eqB.18"><mml:math id="me124"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math><label>(B18)</label></disp-formula><disp-formula id="eqB.19"><mml:math id="me125"><mml:mrow><mml:mstyle mathvariant="bold" mathsize="normal"><mml:mi mathvariant="bold">E</mml:mi></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>u</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>P</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>v</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math><label>(B19)</label></disp-formula><disp-formula id="eqB.20"><label>(B20)</label></disp-formula>The expected genotype can then be straightforwardly computed from these genotype probabilities.</p>
      </sec>
    </app>
  </app-group>
  <ref-list>
    <title>Literature Cited</title>
    <ref id="bib1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alexander</surname><given-names>D. H.</given-names></name><name><surname>Novembre</surname><given-names>J.</given-names></name><name><surname>Lange</surname><given-names>K.</given-names></name></person-group>, <year>2009</year> <article-title>Fast model-based estimation of ancestry in unrelated individuals.</article-title><source>Genome Res.</source><volume>19</volume>(<issue>9</issue>): <fpage>1655</fpage>–<lpage>1664</lpage>.<pub-id pub-id-type="pmid">19648217</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <mixed-citation publication-type="thesis">Beal, M. J., 2003 Variational algorithms for approximate Bayesian inference. Ph.D. Thesis, Gatsby Computational Neuroscience Unit, University College London, London.</mixed-citation>
    </ref>
    <ref id="bib3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Blei</surname><given-names>D. M.</given-names></name><name><surname>Ng</surname><given-names>A. Y.</given-names></name><name><surname>Jordan</surname><given-names>M. I.</given-names></name></person-group>, <year>2003</year> <article-title>Latent dirichlet allocation.</article-title><source>J. Mach. Learn. Res.</source><volume>3</volume>: <fpage>993</fpage>–<lpage>1022</lpage>.</mixed-citation>
    </ref>
    <ref id="bib4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carbonetto</surname><given-names>P.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name></person-group>, <year>2012</year> <article-title>Scalable variational inference for Bayesian variable selection in regression, and its accuracy in genetic association studies.</article-title><source>Bayesian Anal.</source><volume>7</volume>(<issue>1</issue>): <fpage>73</fpage>–<lpage>108</lpage>.</mixed-citation>
    </ref>
    <ref id="bib5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Catchen</surname><given-names>J.</given-names></name><name><surname>Bassham</surname><given-names>S.</given-names></name><name><surname>Wilson</surname><given-names>T.</given-names></name><name><surname>Currey</surname><given-names>M.</given-names></name><name><surname>O’Brien</surname><given-names>C.</given-names></name><etal/></person-group>, <year>2013</year> <article-title>The population structure and recent colonization history of Oregon threespine stickleback determined using restriction-site associated DNA-sequencing.</article-title><source>Mol. Ecol.</source><volume>22</volume>: <fpage>2864</fpage>–<lpage>2883</lpage>.<pub-id pub-id-type="pmid">23718143</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Engelhardt</surname><given-names>B. E.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name></person-group>, <year>2010</year> <article-title>Analysis of population structure: a unifying framework and novel methods based on sparse factor analysis.</article-title><source>PLoS Genet.</source><volume>6</volume>(<issue>9</issue>): <fpage>e1001117</fpage>.<pub-id pub-id-type="pmid">20862358</pub-id></mixed-citation>
    </ref>
    <ref id="bib7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Falush</surname><given-names>D.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name><name><surname>Pritchard</surname><given-names>J. K.</given-names></name></person-group>, <year>2003</year> <article-title>Inference of population structure using multilocus genotype data: linked loci and correlated allele frequencies.</article-title><source>Genetics</source><volume>164</volume>: <fpage>1567</fpage>–<lpage>1587</lpage>.<pub-id pub-id-type="pmid">12930761</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hofman</surname><given-names>J. M.</given-names></name><name><surname>Wiggins</surname><given-names>C. H.</given-names></name></person-group>, <year>2008</year> <article-title>Bayesian approach to network modularity.</article-title><source>Phys. Rev. Lett.</source><volume>100</volume>(<issue>25</issue>): <fpage>258701</fpage>.<pub-id pub-id-type="pmid">18643711</pub-id></mixed-citation>
    </ref>
    <ref id="bib9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hubisz</surname><given-names>M. J.</given-names></name><name><surname>Falush</surname><given-names>D.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name><name><surname>Pritchard</surname><given-names>J. K.</given-names></name></person-group>, <year>2009</year> <article-title>Inferring weak population structure with the assistance of sample group information.</article-title><source>Mol. Ecol. Res.</source><volume>9</volume>(<issue>5</issue>): <fpage>1322</fpage>–<lpage>1332</lpage>.</mixed-citation>
    </ref>
    <ref id="bib10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jordan</surname><given-names>M. I.</given-names></name><name><surname>Gharamani</surname><given-names>Z.</given-names></name><name><surname>Jaakkola</surname><given-names>T. S.</given-names></name><name><surname>Saul</surname><given-names>L. K.</given-names></name></person-group>, <year>1999</year> <article-title>An introduction to variational methods for graphical models.</article-title><source>Mach. Learn.</source><volume>37</volume>(<issue>2</issue>): <fpage>183</fpage>–<lpage>233</lpage>.</mixed-citation>
    </ref>
    <ref id="bib11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kadanoff</surname><given-names>L. P.</given-names></name></person-group>, <year>2009</year> <article-title>More is the same: phase transitions and mean field theories.</article-title><source>J. Stat. Phys.</source><volume>137</volume>(<issue>5–6</issue>): <fpage>777</fpage>–<lpage>797</lpage>.</mixed-citation>
    </ref>
    <ref id="bib12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>J. Z.</given-names></name><name><surname>Absher</surname><given-names>D. M.</given-names></name><name><surname>Tang</surname><given-names>H.</given-names></name><name><surname>Southwick</surname><given-names>A. M.</given-names></name><name><surname>Casto</surname><given-names>A. M.</given-names></name><etal/></person-group>, <year>2008</year> <article-title>Worldwide human relationships inferred from genome-wide patterns of variation.</article-title><source>Science</source><volume>319</volume>(<issue>5866</issue>): <fpage>1100</fpage>–<lpage>1104</lpage>.<pub-id pub-id-type="pmid">18292342</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Logsdon</surname><given-names>B. A.</given-names></name><name><surname>Hoffman</surname><given-names>G. E.</given-names></name><name><surname>Mezey</surname><given-names>J. G.</given-names></name></person-group>, <year>2010</year> <article-title>A variational Bayes algorithm for fast and accurate multiple locus genome-wide association analysis.</article-title><source>BMC Bioinformatics</source><volume>11</volume>(<issue>1</issue>): <fpage>58</fpage>.<pub-id pub-id-type="pmid">20105321</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Mackay</surname><given-names>D. J.</given-names></name></person-group>, <year>2003</year> <article-title>Information theory, inference and learning algorithms.</article-title><publisher-name>Cambridge University Press,</publisher-name><publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bib15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Novembre</surname><given-names>J.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name></person-group>, <year>2008</year> <article-title>Interpreting principal component analyses of spatial population genetic variation.</article-title><source>Nat. Genet.</source><volume>40</volume>(<issue>5</issue>): <fpage>646</fpage>–<lpage>649</lpage>.<pub-id pub-id-type="pmid">18425127</pub-id></mixed-citation>
    </ref>
    <ref id="bib16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Patterson</surname><given-names>N.</given-names></name><name><surname>Price</surname><given-names>A. L.</given-names></name><name><surname>Reich</surname><given-names>D.</given-names></name></person-group>, <year>2006</year> <article-title>Population structure and eigenanalysis.</article-title><source>PLoS Genet.</source><volume>2</volume>(<issue>12</issue>): <fpage>e190</fpage>.<pub-id pub-id-type="pmid">17194218</pub-id></mixed-citation>
    </ref>
    <ref id="bib17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pearse</surname><given-names>D.</given-names></name><name><surname>Crandall</surname><given-names>K.</given-names></name></person-group>, <year>2004</year> <article-title>Beyond FST: analysis of population genetic data for conservation.</article-title><source>Conserv. Genet.</source><volume>5</volume>(<issue>5</issue>): <fpage>585</fpage>–<lpage>602</lpage>.</mixed-citation>
    </ref>
    <ref id="bib18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pickrell</surname><given-names>J. K.</given-names></name><name><surname>Pritchard</surname><given-names>J. K.</given-names></name></person-group>, <year>2012</year> <article-title>Inference of population splits and mixtures from genomewide allele frequency data.</article-title><source>PLoS Genet.</source><volume>8</volume>(<issue>11</issue>): <fpage>e1002967</fpage>.<pub-id pub-id-type="pmid">23166502</pub-id></mixed-citation>
    </ref>
    <ref id="bib19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Price</surname><given-names>A. L.</given-names></name><name><surname>Patterson</surname><given-names>N. J.</given-names></name><name><surname>Plenge</surname><given-names>R. M.</given-names></name><name><surname>Weinblatt</surname><given-names>M. E.</given-names></name><name><surname>Shadick</surname><given-names>N. A.</given-names></name><etal/></person-group>, <year>2006</year> <article-title>Principal components analysis corrects for stratification in genomewide association studies.</article-title><source>Nat. Genet.</source><volume>38</volume>(<issue>8</issue>): <fpage>904</fpage>–<lpage>909</lpage>.<pub-id pub-id-type="pmid">16862161</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pritchard</surname><given-names>J. K.</given-names></name><name><surname>Donnelly</surname><given-names>P.</given-names></name></person-group>, <year>2001</year> <article-title>Case-control studies of association in structured or admixed populations.</article-title><source>Theor. Popul. Biol.</source><volume>60</volume>(<issue>3</issue>): <fpage>227</fpage>–<lpage>237</lpage>.<pub-id pub-id-type="pmid">11855957</pub-id></mixed-citation>
    </ref>
    <ref id="bib21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pritchard</surname><given-names>J. K.</given-names></name><name><surname>Stephens</surname><given-names>M.</given-names></name><name><surname>Donnelly</surname><given-names>P.</given-names></name></person-group>, <year>2000</year> <article-title>Inference of population structure using multilocus genotype data.</article-title><source>Genetics</source><volume>155</volume>: <fpage>945</fpage>–<lpage>959</lpage>.<pub-id pub-id-type="pmid">10835412</pub-id></mixed-citation>
    </ref>
    <ref id="bib22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Randi</surname><given-names>E.</given-names></name></person-group>, <year>2008</year> <article-title>Detecting hybridization between wild species and their domesticated relatives.</article-title><source>Mol. Ecol.</source><volume>17</volume>(<issue>1</issue>): <fpage>285</fpage>–<lpage>293</lpage>.<pub-id pub-id-type="pmid">18173502</pub-id></mixed-citation>
    </ref>
    <ref id="bib23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raydan</surname><given-names>M.</given-names></name><name><surname>Svaiter</surname><given-names>B. F.</given-names></name></person-group>, <year>2002</year> <article-title>Relaxed steepest descent and Cauchy–Barzilai–Borwein method.</article-title><source>Comput. Optim. Appl.</source><volume>21</volume>(<issue>2</issue>): <fpage>155</fpage>–<lpage>167</lpage>.</mixed-citation>
    </ref>
    <ref id="bib24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Reich</surname><given-names>D.</given-names></name><name><surname>Thangaraj</surname><given-names>K.</given-names></name><name><surname>Patterson</surname><given-names>N.</given-names></name><name><surname>Price</surname><given-names>A. L.</given-names></name><name><surname>Singh</surname><given-names>L.</given-names></name></person-group>, <year>2009</year> <article-title>Reconstructing Indian population history.</article-title><source>Nature</source><volume>461</volume>(<issue>7263</issue>): <fpage>489</fpage>–<lpage>494</lpage>.<pub-id pub-id-type="pmid">19779445</pub-id></mixed-citation>
    </ref>
    <ref id="bib25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rosenberg</surname><given-names>N. A.</given-names></name></person-group>, <year>2004</year> <article-title>DISTRUCT: a program for the graphical display of population structure.</article-title><source>Mol. Ecol. Notes</source><volume>4</volume>(<issue>1</issue>): <fpage>137</fpage>–<lpage>138</lpage>.</mixed-citation>
    </ref>
    <ref id="bib26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rosenberg</surname><given-names>N. A.</given-names></name><name><surname>Pritchard</surname><given-names>J. K.</given-names></name><name><surname>Weber</surname><given-names>J. L.</given-names></name><name><surname>Cann</surname><given-names>H. M.</given-names></name><name><surname>Kidd</surname><given-names>K. K.</given-names></name><etal/></person-group>, <year>2002</year> <article-title>Genetic structure of human populations.</article-title><source>Science</source><volume>298</volume>(<issue>5602</issue>): <fpage>2381</fpage>–<lpage>2385</lpage>.<pub-id pub-id-type="pmid">12493913</pub-id></mixed-citation>
    </ref>
    <ref id="bib27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sato</surname><given-names>M. A.</given-names></name></person-group>, <year>2001</year> <article-title>Online model selection based on the variational Bayes.</article-title><source>Neural Comput.</source><volume>13</volume>(<issue>7</issue>): <fpage>1649</fpage>–<lpage>1681</lpage>.</mixed-citation>
    </ref>
    <ref id="bib28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tang</surname><given-names>H.</given-names></name><name><surname>Peng</surname><given-names>J.</given-names></name><name><surname>Wang</surname><given-names>P.</given-names></name><name><surname>Risch</surname><given-names>N. J.</given-names></name></person-group>, <year>2005</year> <article-title>Estimation of individual admixture: analytical and study design considerations.</article-title><source>Genet. Epidemiol.</source><volume>28</volume>(<issue>4</issue>): <fpage>289</fpage>–<lpage>301</lpage>.<pub-id pub-id-type="pmid">15712363</pub-id></mixed-citation>
    </ref>
    <ref id="bib29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Teh</surname><given-names>Y. W.</given-names></name><name><surname>Newman</surname><given-names>D.</given-names></name><name><surname>Welling</surname><given-names>M.</given-names></name></person-group>, <year>2007</year> <article-title>A collapsed variational Bayesian inference algorithm for latent Dirichlet allocation.</article-title><source>Adv. Neural Inf. Process. Syst.</source><volume>19</volume>: <fpage>1353</fpage>.</mixed-citation>
    </ref>
    <ref id="bib30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Varadhan</surname><given-names>R.</given-names></name><name><surname>Roland</surname><given-names>C.</given-names></name></person-group>, <year>2008</year> <article-title>Simple and globally convergent methods for accelerating the convergence of any EM algorithm.</article-title><source>Scand. J. Stat.</source><volume>35</volume>(<issue>2</issue>): <fpage>335</fpage>–<lpage>353</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

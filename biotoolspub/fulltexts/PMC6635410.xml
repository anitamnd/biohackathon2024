<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group UK</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6635410</article-id>
    <article-id pub-id-type="publisher-id">46773</article-id>
    <article-id pub-id-type="doi">10.1038/s41598-019-46773-w</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Ultra-fast genome comparison for large-scale genomic experiments</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-3572-686X</contrib-id>
        <name>
          <surname>Pérez-Wohlfeil</surname>
          <given-names>Esteban</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Diaz-del-Pino</surname>
          <given-names>Sergio</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Trelles</surname>
          <given-names>Oswaldo</given-names>
        </name>
        <address>
          <email>ortrelles@uma.es</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2298 7828</institution-id><institution-id institution-id-type="GRID">grid.10215.37</institution-id><institution>Computer Architecture Department, </institution><institution>University of Málaga - Instituto de Investigación Biomédica de Málaga-IBIMA, </institution></institution-wrap>Málaga, Spain </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>7</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>10274</elocation-id>
    <history>
      <date date-type="received">
        <day>11</day>
        <month>2</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>6</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">In the last decade, a technological shift in the bioinformatics field has occurred: larger genomes can now be sequenced quickly and cost effectively, resulting in the computational need to efficiently compare large and abundant sequences. Furthermore, detecting conserved similarities across large collections of genomes remains a problem. The size of chromosomes, along with the substantial amount of noise and number of repeats found in DNA sequences (particularly in mammals and plants), leads to a scenario where executing and waiting for complete outputs is both time and resource consuming. Filtering steps, manual examination and annotation, very long execution times and a high demand for computational resources represent a few of the many difficulties faced in large genome comparisons. In this work, we provide a method designed for comparisons of considerable amounts of very long sequences that employs a heuristic algorithm capable of separating noise and repeats from conserved fragments in pairwise genomic comparisons. We provide software implementation that computes in linear time using one core as a minimum and a small, constant memory footprint. The method produces both a previsualization of the comparison and a collection of indices to drastically reduce computational complexity when performing exhaustive comparisons. Last, the method scores the comparison to automate classification of sequences and produces a list of detected synteny blocks to enable new evolutionary studies.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Software</kwd>
      <kwd>Genome informatics</kwd>
      <kwd>Data processing</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>This work was partially supported by the European project ELIXIR-EXCELERATE (grant no. 676559), the Spanish national project Plataforma de Recursos Biomoleculares y Bioinform&amp;amp;#x00E1;ticos (ISCIII-PT13.0001.0012 and ISCIII-PT17.0009.0022), the Instituto de Investigaci&amp;amp;#x00F3;n Biom&amp;amp;#x00E9;dica de M&amp;amp;#x00E1;laga IBIMA and the University of M&amp;amp;#x00E1;laga.</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Introduction</title>
    <p id="Par2">Due to technological advances in the past few decades, sequencing whole genomes is becoming cheaper at an exponential rate<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>. As a result, an increasing collection of whole sequenced genomes is becoming publicly available, ranging in size from less than two hundred thousand base pairs<sup><xref ref-type="bibr" rid="CR2">2</xref></sup> to more than 22 * 10<sup>9</sup> base pairs<sup><xref ref-type="bibr" rid="CR3">3</xref></sup>. Sequenced genomes are increasing not only in number but also in breadth: larger eukaryotic genomes, such as those of mammals and plants, are being sequenced. These newly incorporated sequences are slowly completing our understanding of organismal evolution, answering questions such as “Which organism arose first?” and “Which evolutionary events caused species divergence?”. However, to improve our understanding of these topics, new data are being included in databases, but doing so comes at a price: the <italic>more genomes</italic> and <italic>larger genomes</italic> trend is aggravating a scenario where it is unthinkable to perform genomic experiments without the aid of extensive computational resources, but furthermore, even current computational methods are being left behind with the increasing complexity.</p>
    <p id="Par3">Currently, most of the handling, exploration and curation of genomic information (such as identifying coding regions or generating pairwise synteny maps) is performed manually and curated with platforms dedicated to this purpose, which often include a repository of precomputed genome comparisons. For instance, NARCISSE<sup><xref ref-type="bibr" rid="CR4">4</xref></sup>, Genomicus<sup><xref ref-type="bibr" rid="CR5">5</xref></sup> and SynFind<sup><xref ref-type="bibr" rid="CR6">6</xref></sup> provide such data along with other tools for exploration purposes such as genome browsers and karyotype analysers<sup><xref ref-type="bibr" rid="CR7">7</xref></sup>. Although these resources contain high-quality curated information, they usually rely on previously computed data and typically do not allow users to run new experiments on demand. As a result, when new experiments are supported by these platforms, it is common to employ restricted comparison methodologies such as gene-based approaches (see CoGe<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>) to lower computational demands. However, these approaches are often based on the BLAST<sup><xref ref-type="bibr" rid="CR9">9</xref></sup> algorithm, which was not initially designed for large pairwise genome comparisons.</p>
    <p id="Par4">Locally performing large genome comparisons will often require long running times and most likely starvation of computational resources. Tools such as GECKO<sup><xref ref-type="bibr" rid="CR10">10</xref></sup>, CGALN<sup><xref ref-type="bibr" rid="CR11">11</xref></sup> and MUMMER<sup><xref ref-type="bibr" rid="CR12">12</xref></sup> were created for large-scale comparisons of genomic sequences. However, computing a pairwise chromosome comparison usually takes from several minutes to hours depending on the length of the sequences, number of repetitions, and other factors, and the elapsed time increases quadratically when all chromosomes from two species are compared (i.e., <italic>n</italic> ∗ <italic>m</italic> comparisons). Furthermore, the previously mentioned algorithms spend most of their computation time processing at a certain degree of exhaustiveness, producing results such as complete alignments or collections of high-scoring segment pairs (HSPs). However, in the case of all <italic>vs</italic>. all comparisons, more than 400 chromosome comparisons (e.g. 20 * 20 chromosomes) can be involved. The resulting comparisons for a large deal of the dataset will often be composed of repeats and noise, with a low degree of conserved syntenies. Thus, it seems natural to incorporate a prior, heuristic step that analyses whether a particular comparison is of interest and reduces the computational complexity of performing the exhaustive comparison.</p>
    <p id="Par5">Our proposal focuses on a pre-processing, visualization and classification system to effectively determine whether conserved similarities exist across a collection of genomic sequences, therefore enabling the analysis without requiring long computation times. Within this framework, several post-processing tasks can be performed, such as detecting synteny blocks and large-scale genome rearrangements (LSGRs), tracing common ancestors of related organisms and placing new biological sequences on hierarchical trees.</p>
    <p id="Par6">In particular, we present a computational algorithm capable of extracting similarities from a pairwise genome comparison by indexing subsamples of inexact <italic>k</italic>-mers. Moreover, we also propose a heuristic and computational scoring metric to compute a scoring distance between sequences, which can be used to discard unrelated sequences in more exhaustive comparisons and hence speed up the comparison process. We show that our proposed method is able to perform large comparisons of plant genomes with up to 4.23 * 10<sup>9</sup> base pairs in less than twenty minutes using one core and 1 GB of memory. In the case of mammalian organisms, our method can compare complete families of chromosomes from species such as <italic>Homo sapiens</italic> and <italic>Mus musculus</italic> (which amounts to 24 ∗ 21 = 504 comparisons) in less than 9 hours using only 1 core and 1 GB of memory. Our results are consistent and highly competitive (in terms of speed and quality) with other state-of-the-art software.</p>
  </sec>
  <sec id="Sec2" sec-type="results">
    <title>Results and Discussion</title>
    <p id="Par7">This manuscript describes a linear computational algorithm for the ultra-fast comparison of large genomic sequences based on inexact <italic>k</italic>-mer matching. Briefly, the method proceeds by the following steps: (1) two DNA sequences are received as inputs; (2) a word dictionary is built based on the query sequence; (3) the words in the reference sequence are matched to those in the dictionary using inexact subsampling; (4) matched words are filtered based on uniqueness; (5) positional information is incorporated into a matrix representation, and the local optimum is found; and (6) a scoring distance is assigned to the comparison, and LSGRs are detected based on an iterative process. A workflow diagram of the process is depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Figure 1</label><caption><p>Workflow diagram of the proposed methodology. The query and reference genomes are compared in an ultra-fast, pairwise, coarse-grained fashion to ultimately produce a dot plot and a scoring distance and to detect large-scale genome rearrangements. A <italic>k</italic>-mer dictionary is built based on the query, and the reference <italic>k</italic>-mers are matched using an inexact subsampling procedure. Only unique matches are kept and recorded in a down-scaled representation (matrix) that groups matches to form larger fragments. Last, the dot plot is produced, a scoring distance is assigned to the comparison, and the LSGRs are reported. Additionally, using the DNA blocks produced by the method, users can employ further sequence comparison programs to generate exhaustive alignments.</p></caption><graphic xlink:href="41598_2019_46773_Fig1_HTML" id="d29e320"/></fig></p>
    <p id="Par8">Furthermore, a pipeline is provided for the exhaustive computation of conserved segments that re-uses the produced results. This method also outperforms current software in terms of the speed and is competitive in terms of quality of the results. See sections “Pipelined execution”, “Signal comparison” and “Sensitivity analysis and impact of the heuristic methodologies” in the Supplementary Material for a description of the methodology, quality assessment and further experiments. For information regarding the infrastructure employed in the comparisons, see “Infrastructure” in the Supplementary Material.</p>
    <p id="Par9">The proposed method is implemented in the C programming language under the name “CHROMEISTER”. It is able to compare very large genomes (due to its complexity being linear in time and constant in space in terms of the size of the sequences) much faster than state-of-the-art methods while yielding significant, reusable and exploitable information. The following experiments have been set up to show the capabilities of the method:<list list-type="bullet"><list-item><p id="Par10">Similarity search.<list list-type="bullet"><list-item><p id="Par11">A very large pairwise comparison between the grass and common wheat genomes.</p></list-item><list-item><p id="Par12">A synteny map of 12 primate species comprising full genomes.</p></list-item></list></p></list-item></list><list list-type="bullet"><list-item><p id="Par13">Evolutionary events across multiple species. Detected synteny blocks are employed to trace evolutionary events across species.</p></list-item><list-item><p id="Par14">Comparison of computation time and memory requirements with those of other methods.</p></list-item></list></p>
    <sec id="Sec3">
      <title>Very large pairwise comparison between the grass and common wheat (Aegilops tauschii and Triticum aestivum) genomes</title>
      <p id="Par15">In general, plants are known to have sequences that are computationally difficult to compare due to their number of repeats<sup><xref ref-type="bibr" rid="CR13">13</xref></sup>. We selected the fully assembled genome of two plants, namely, <italic>Aegilops tauschii</italic> (3.29 * 10<sup>9</sup> base pairs) and <italic>Triticum aestivum</italic> (4.23 * 10<sup>9</sup> base pairs), amounting to a search space of 1.39 * 10<sup>19</sup>
<italic>bp</italic><sup>2</sup> (see “Full genome sequences” in Supplementary Material). To the best of our knowledge, no such comparisons are available to serve as references. However, we reference several studies regarding the sensitivity of the proposed method in the Supplementary Material under the section “Sensitivity analysis and impact of the heuristic methodologies”. The genome sequences were obtained from the assemblies published in<sup><xref ref-type="bibr" rid="CR14">14</xref></sup> and<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>, respectively. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows the dot plot-like representation of the comparison. The computation took less than 16 minutes and 1 GB of RAM using 1 core, whereas the same comparison on NUCMER with parameters tuned to produce similar results took 159 minutes and 53 GB of RAM, which amounts to a speedup in terms of time consumption of over 10x while using 53 times less memory.<fig id="Fig2"><label>Figure 2</label><caption><p>Pairwise genome comparison between <italic>Aegilops tauschii</italic> (3.2 Gbps) and <italic>Triticum aestivum</italic> (4.2 Gbps) performed in under 16 minutes using 1 core and 1 GB of RAM.</p></caption><graphic xlink:href="41598_2019_46773_Fig2_HTML" id="d29e399"/></fig></p>
      <p id="Par16">Only the main (or “unique”) signal can be seen in Fig. <xref rid="Fig2" ref-type="fig">2</xref> due to the methodology automatically filtering out any DNA repeat or noisy signal. The comparison shows that nearly all conserved similarity is found on the diagonals and that each chromosome has only one pairwise comparison where a signal is found. This result accounts for an ideal scenario in which the application of the method can reduce the complexity of an exhaustive comparison since each chromosome would need to be compared only once (yielding <italic>n</italic> comparisons) as opposed to an all vs all approach, which requires a quadratic number of comparisons (i.e., <italic>n</italic> * <italic>m</italic>), hence dropping the complexity from quadratic to linear in terms of the number of comparisons. Notably, although it seems that no synteny occurs for any of the other chromosomes, a very large number of repetitions are present that would still require computing power to process.</p>
      <p id="Par17">In the further scenario of an all vs. all comparison among several species (e.g., all chromosomes of all genomes from a taxonomic family), this reduction enables a significantly faster approach to obtaining the conserved syntenies. Moreover, the process is completely automatic since the scoring function determines which comparisons have a signal and therefore removes the tedious task of manually inspecting up to thousands of comparisons by hand (e.g., there are 6,000 comparisons for 5 species with 20 chromosomes each since for <italic>s</italic> species and <italic>n</italic> chromosomes, we have <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{1}{2}s(s+1)\ast n\ast n$$\end{document}</tex-math><mml:math id="M2"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>∗</mml:mo><mml:mi>n</mml:mi><mml:mo>∗</mml:mo><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq1.gif"/></alternatives></inline-formula> comparisons).</p>
      <p id="Par18">Figure <xref rid="Fig2" ref-type="fig">2</xref> was constructed from a full-genome comparison (as opposed to a chromosome-by-chromosome comparison), which yielded a 0.28 score (with 0 indicating the exact same sequences and 1 indicating absolutely no similarity, see “Methods” for more on the scoring distance). Such a score is due to both genomes conserving most of their diagonal, but small gaps still exist along with several evolutionary events that result in scoring penalties.</p>
    </sec>
    <sec id="Sec4">
      <title>Synteny map</title>
      <p id="Par19">The proposed method is suitable for performing very large all versus all comparisons, from bacterial collections to full genomes. In this section, we illustrate a comparison featuring 12 primate full genomes. The sequences were obtained from the Ensembl database<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>. The collection includes the fully assembled genomes of <italic>Homo sapiens</italic>, <italic>Pan troglodytes</italic>, <italic>Pan paniscus</italic>, <italic>Gorilla gorilla</italic>, <italic>Pongo abelii</italic>, <italic>Nomascus leucogenys</italic>, <italic>Papio anubis</italic>, <italic>Macaca mulatta</italic>, <italic>Macaca fascicularis</italic>, <italic>Chlorocebus sabaeus</italic>, <italic>Callithrix jacchus</italic> and <italic>Microcebus murinus</italic>. These species were selected because (1) they belong to different evolutionary branches of primates and (2) they were fully assembled. The order in which these sequences are presented is based on their evolutionary distance from the reference (<italic>H</italic>. <italic>sapiens</italic>), as depicted in<sup><xref ref-type="bibr" rid="CR17">17</xref></sup>, which was determined by the maximum likelihood method based on 34,927 base pairs sequenced from 54 amplified genes. The computation of the <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{1}{2}n(n+1)$$\end{document}</tex-math><mml:math id="M4"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq2.gif"/></alternatives></inline-formula> full genome comparisons took 23 hours and 21 minutes using 1 core and 1 GB of RAM, meaning that each comparison took, on average, less than 18 minutes. The synteny map is shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>.<fig id="Fig3"><label>Figure 3</label><caption><p>Similarity map of twelve primate species. Full genomes were compared. From left to right and top to bottom, genomes are ordered using the maximum likelihood method based on amplified genes. The compared genomes belong to six families, i.e., Hominidae (dark purple), Hylobatidae (light purple), Cercopithecidae (yellow), Cebidae (green), Lemuridae (cyan) and Cheirogaleidae (blue). Each cell of the upper right matrix shows the dot plot corresponding to the comparison of the row and column. The list containing copyright permissions of the pictures used in the Figure is available in the Additional File <xref rid="MOESM2" ref-type="media">1</xref>.</p></caption><graphic xlink:href="41598_2019_46773_Fig3_HTML" id="d29e557"/></fig></p>
      <p id="Par20">Figure <xref rid="Fig3" ref-type="fig">3</xref> shows how the proposed method can be used to generate very large synteny maps that enable inspection of conserved similarities and evolutionary events among multiple species. Furthermore, analysis of the similarity map leads to several points of discussion: (1) similarity is mostly conserved across all species, although the number of evolutionary events increases as a function of the molecular distance; (2) closely related families such as the great apes (Hominidae) and the Old World monkeys (Cercopithecidae) show nearly no large-scale genome rearrangements except for a few inversions; and (3) although according to several techniques (such as maximum likelihood-based<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> and mitochondrial DNA-based<sup><xref ref-type="bibr" rid="CR19">19</xref></sup> techniques), <italic>N</italic>. <italic>leucogenys</italic> is placed on the branch closest to Hominidae (namely, Hylobatidae), the opposite case occurs from an LSGR perspective. In fact, all of the Old World and New World monkeys, along with the marmoset, have fewer LSGRs than <italic>N</italic>. <italic>leucogenys</italic> with respect to <italic>H</italic>. <italic>sapiens</italic> (See “Detected LSGRs in the synteny map“ in the Supplementary Material). That is, except for the case of <italic>N</italic>. <italic>leucogenys</italic>, the comparisons exhibit a correlation between molecular distance and the number of LSGRs.</p>
      <p id="Par21">However, it is beyond the scope of this manuscript to answer these questions; instead, we offer and describe a new tool capable of producing this type of highly aggregated and coarse-grained information in a few hours using one core, thus providing the means to obtain new findings and perform novel research.</p>
    </sec>
    <sec id="Sec5">
      <title>Evolutionary events across multiple species</title>
      <p id="Par22">In this section, we illustrate how the developed method can be employed in evolutionary studies. In particular, a simple synteny block-tracing algorithm is devised based on the location of large collections of HSPs. That is, given an all <italic>vs</italic>. all comparison among several species, with CHROMEISTER, it is possible to trace conserved blocks across species. In this example, we choose a conserved block from a particular species and trace it, and whenever an overlapping conserved region is found, another tracing procedure is launched from that particular block to examine the remaining species. The order in which executions are launched does not affect the outcome, as species can be interchanged freely. Therefore, a tree-like representation is generated that is rooted in the initial block and origin species, with every internal node being an overlapping match with another species. In this particular case, we employ <italic>H</italic>. <italic>sapiens</italic> chr. 6 as the root of the tracing algorithm and trace it to a 5-species depth.</p>
      <p id="Par23">As shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, an initial block of conserved HSPs from <italic>H</italic>. <italic>sapiens</italic> chr. 6 first split into two blocks in <italic>P</italic>. <italic>abelii</italic> chr. 6, which then split into two different chromosomes from <italic>M</italic>. <italic>musculus</italic>, namely, chromosomes 13 and 17. These two blocks reunite in chromosome 20 from <italic>Equus caballus</italic> and are finally detected on chromosome 23 from <italic>Bos taurus</italic>. The order (rooted from <italic>H</italic>. <italic>sapiens</italic>) has been determined according to the vertebrate mitochondrial phylogeny described in<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>. Note that in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, only the blocks fully traced from the root (<italic>H</italic>. <italic>sapiens</italic>) to the leaf (<italic>B</italic>. <italic>taurus</italic>) are shown, i.e., there is a larger synteny block between chromosome 6 of <italic>H</italic>. <italic>sapiens</italic> and <italic>P</italic>. <italic>abelii</italic>, but it does not reach the leaf.<fig id="Fig4"><label>Figure 4</label><caption><p>Tree-tracing representation of the evolutionary study. Large groups of HSPs are shown as synteny blocks on each chromosome. Traversing lines from one chromosome to another represent synteny in terms of conserved HSPs. Crossed lines imply that a reversion occurred.</p></caption><graphic xlink:href="41598_2019_46773_Fig4_HTML" id="d29e689"/></fig></p>
      <p id="Par24">For further details on how the tracing of blocks was performed, see “Block tracing” in the Supplementary Material.</p>
    </sec>
    <sec id="Sec6">
      <title>Comparison of computation time and memory requirements with those of other methods</title>
      <p id="Par25">In this section, we compare the performance of the proposed method with that of other state-of-the-art software in terms of time consumption and memory requirements. To make the comparison as fair as possible and to yield the same levels of sensitivity, both CGALN and NUCMER were tuned to run faster and produce coarse-grained results (see “Software Parameters” in the Supplementary Material). The sequences employed were selected based on increasing size and ranged from single chromosomes (e.g., B19-C9 stands for <italic>B</italic>. <italic>taurus</italic> chr. 19 and <italic>Canis familiaris</italic> chr. 9) to complete genomes composed by all chromosomes (for example, see HC-MC). Further details on the compared sequences can be found in the Supplementary Material (see “Full genome sequences” and “Additional Table <xref rid="MOESM1" ref-type="media">1</xref>”).</p>
      <p id="Par26">Several observations can be made from Table <xref rid="Tab1" ref-type="table">1</xref>. Note that in the case of CHROMEISTER, the runtime is linearly correlated with the search space, whereas in the case of CGALN or NUCMER, other factors must be considered (for instance, BC-BC takes longer than A1-T1), such as the number of repetitions and total number of seeds and hits matched. In terms of performance, CHROMEISTER is the fastest (up to 11 times faster than NUCMER for the largest dataset), using linear time in terms of the size of the sequence input and a constant memory footprint. In contrast, CGALN results in incomplete executions after 100 hours of computing time for the last three datasets. NUCMER is able to finish all executions in competitive time but requires a much larger amount of RAM (up to 50 times more) than CHROMEISTER. Moreover, such memory usage poses computational limits, both for regular, desktop computers, and even in the case of supercomputers when several executions are to be run in parallel.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of the best performances of CGALN, NUCMER and CHROMEISTER.</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Dataset</th><th rowspan="2">Search Sp. (<italic>bp</italic><sup>2</sup>)</th><th colspan="2">CGALN</th><th colspan="2">NUCMER</th><th>CHROMEISTER</th><th/></tr><tr><th>Time (m)</th><th>RAM (MB)</th><th>Time (m)</th><th>RAM (MB)</th><th>Time (m)</th><th>RAM (MB)</th></tr></thead><tbody><tr><td>B19-C9</td><td><inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4.03\ast {10}^{15}$$\end{document}</tex-math><mml:math id="M6"><mml:mn>4.03</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>15</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq3.gif"/></alternatives></inline-formula></td><td>1.63</td><td>755</td><td>2.13</td><td>812</td><td><bold>0.89</bold></td><td><bold>994</bold></td></tr><tr><td>HX-MX</td><td><inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2.07\ast {10}^{16}$$\end{document}</tex-math><mml:math id="M8"><mml:mn>2.07</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq4.gif"/></alternatives></inline-formula></td><td>5.93</td><td>2,032</td><td>5.14</td><td>2,221</td><td><bold>1.29</bold></td><td><bold>998</bold></td></tr><tr><td>BC-BC</td><td><inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1.18\ast {10}^{17}$$\end{document}</tex-math><mml:math id="M10"><mml:mn>1.18</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>17</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq5.gif"/></alternatives></inline-formula></td><td>141.26</td><td>583</td><td>13.61</td><td>5,814</td><td><bold>2.42</bold></td><td><bold>1,022</bold></td></tr><tr><td>M2-O1</td><td><inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1.54\ast {10}^{17}$$\end{document}</tex-math><mml:math id="M12"><mml:mn>1.54</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>17</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq6.gif"/></alternatives></inline-formula></td><td>17.04</td><td>3,618</td><td>15.14</td><td>6,436</td><td><bold>2.84</bold></td><td><bold>1,017</bold></td></tr><tr><td>A1-T1</td><td><inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2.57\ast {10}^{17}$$\end{document}</tex-math><mml:math id="M14"><mml:mn>2.57</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>17</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq7.gif"/></alternatives></inline-formula></td><td>DNF</td><td>DNF</td><td>11.40</td><td>8,357</td><td><bold>2.84</bold></td><td><bold>1,022</bold></td></tr><tr><td>HC-MC</td><td><inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$8.69\ast {10}^{18}$$\end{document}</tex-math><mml:math id="M16"><mml:mn>8.69</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>18</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq8.gif"/></alternatives></inline-formula></td><td>DNF</td><td>DNF</td><td>168.86</td><td>46,091</td><td><bold>13.77</bold></td><td><bold>1,022</bold></td></tr><tr><td>AC-TC</td><td><inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1.39\ast {10}^{19}$$\end{document}</tex-math><mml:math id="M18"><mml:mn>1.39</mml:mn><mml:mo>∗</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mn>19</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq9.gif"/></alternatives></inline-formula></td><td>DNF</td><td>DNF</td><td>176.80</td><td>52,021</td><td><bold>15.96</bold></td><td><bold>1,022</bold></td></tr></tbody></table><table-wrap-foot><p>The datasets are sorted by search space size. Columns from left to right: the sequences compared, search space size, time (in minutes) and memory consumption (megabytes) for each method. The acronym “DNF” stands for “did not finish”, which represents more than 100 hours of computing time. The time reported by NUCMER indicates that the program used more than one CPU; therefore, the adjusted time is shown.</p></table-wrap-foot></table-wrap></p>
      <p id="Par27">Finally, it is important to note that CHROMEISTER detects the main DNA segments and therefore does not report repetitions, as in the case of NUCMER or CGALN. This difference has a clear impact on performance due to algorithmic improvements that can be made and in terms of sensitivity since repeated regions are discarded. For a sensitivity comparison, please see the section “Sensitivity analysis” in the Supplementary Material. In addition, a comparison of fine-grained alignments between the methods and the CHROMEISTER pipeline is also available in the section “Pipelined execution”.</p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="conclusion">
    <title>Conclusions</title>
    <p id="Par28">In this manuscript, we have developed a heuristic method for quickly determining conserved similarities in very large genome comparisons using unique and inexact hits. We have also shown that the time complexity of the method is linear in terms of the size of the input sequences, whereas the space complexity is constant, making the method suitable for virtually any comparison of nucleotide sequences. In particular, the method described is intended to extract conserved diagonals across species by applying probabilistic filters that remove traces of noise and repeated DNA segments. However, the purpose of the algorithm is not limited to its primary use (detection of conserved diagonals) but extended to other analyses and studies, such as the following:<list list-type="order"><list-item><p id="Par29">In terms of data exploration, the method can be used to quickly obtain a previsualization dot plot of a large set of sequences, which helps the researcher obtain a quick overview and even perform basic quality control steps.</p></list-item><list-item><p id="Par30">Regarding multiple sequence alignment (MSA), the method can be employed to generate the anchoring distance matrix to guide hierarchical MSA by using the coverage-based scoring system.</p></list-item><list-item><p id="Par31">In terms of search space, the method is suitable for strongly pruning the search space that arises from the sequence comparison since noise and DNA repeats are removed. This pruning enables the algorithm to keep only information (which can be used in later post-processing stages) about the synteny blocks. For instance, the algorithm is well suited as a prior step to a whole-genome alignment experiment.</p></list-item><list-item><p id="Par32">For evolutionary studies, the proposed method is able to detect LSGRs throughout collections of species, which can be used to trace evolutionary events, as shown in the example cases.</p></list-item><list-item><p id="Par33">For phylogenetic studies, the method can be employed to incorporate LSGRs into combined phylogenies.</p></list-item></list></p>
    <p id="Par34">The extension of capabilities of the proposed method is performed by pipelining an exhaustive comparison that takes advantage of the information generated in the fast comparison and hence reduces running times and enables further post-processing, such as detection of syntenies and evolutionary events. Furthermore, the pipelining method enables extremely large comparisons on the order of several gigabases to be performed quickly, using regular desktop computers and with a high degree of exhaustiveness.</p>
    <p id="Par35">From the computational perspective, the proposed method is linear in time and constant in space with respect to the input sequences. These features imply that the runtime increases linearly with the size of the sequences while the memory requirements remain constant. Furthermore, its parallelisation becomes immediate through a map-reduction strategy (see Supplementary Material, section “Parallel execution”).</p>
    <p id="Par36">Additionally, we have proposed a simple, coverage-based scoring distance that is able to evaluate a comparison based on the cleaned conserved signal, which can be used for evaluation purposes, particularly to discard comparisons where no similarity can be found and hence avoid expensive and exhaustive computational processing. This metric can also be aggregated to generate other indicators of the quality of comparisons.</p>
  </sec>
  <sec id="Sec8">
    <title>Methods</title>
    <p id="Par37">In the following sections, we introduce the working methodology of the proposed algorithm. In particular, the following subsections are considered:<list list-type="bullet"><list-item><p id="Par38">Previous definitions. Several definitions will be made to handle descriptions with a higher degree of rigor.</p></list-item><list-item><p id="Par39">Inexact <italic>k</italic>-mer indexing. The process of indexing inexact <italic>k</italic>-mers is described regarding the hashing function used to index them.</p></list-item><list-item><p id="Par40">Heuristic filtering. The filtering method used to separate repeats and noise from conserved similarities is described in this subsection.</p></list-item><list-item><p id="Par41">Scoring function. The scoring function employed to classify genomic sequences depending on their closeness is explained.</p></list-item><list-item><p id="Par42">Implementation. Computational details regarding the deployment of the algorithm are described.</p></list-item></list></p>
    <sec id="Sec9">
      <title>Previous definitions</title>
      <p id="Par43">In this section, we introduce definitions, expressions and mathematical distributions to model a scenario for DNA comparison. In particular, DNA words, the matching of these matches from one sequence to another and the distributions that govern these matches are defined.</p>
      <p id="Par44">Consider a finite alphabet <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S=\{A,C,G,T\}$$\end{document}</tex-math><mml:math id="M20"><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq10.gif"/></alternatives></inline-formula>. A word <italic>w</italic> is defined as any finite string of letters in the alphabet <italic>S</italic>, i.e., <italic>w</italic> is generated by the regular expression [<italic>ACGT</italic>]+. The set of all words <italic>w</italic> over <italic>S</italic> will be denoted <italic>U</italic> (the universe). We will define a sequence <italic>s</italic> as a word of size <italic>n</italic>, that is, <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|s|=n$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq11.gif"/></alternatives></inline-formula>. The collection of words <italic>w</italic> of size <italic>k</italic> contained in <italic>s</italic> is denoted <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C=\{{w}_{1},{w}_{2},\ldots ,{w}_{m}\}$$\end{document}</tex-math><mml:math id="M24"><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq12.gif"/></alternatives></inline-formula>, where <italic>m</italic> = <italic>n</italic> − <italic>k</italic> + 1, which accounts for all possible overlapping words of fixed size <italic>k</italic> in the sequence <italic>s</italic>.</p>
      <p id="Par45">We will define the collection of similar segments between two sequences <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub> as <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${H}_{a,b}\subseteq {C}_{a}\times {C}_{b}$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>⊆</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq13.gif"/></alternatives></inline-formula>, which accounts for the words shared (<italic>w</italic><sub><italic>i</italic></sub>, <italic>w</italic><sub><italic>j</italic></sub>) by <italic>C</italic><sub><italic>a</italic></sub> and <italic>C</italic><sub><italic>b</italic></sub> (also known as “hits”). The distribution of the set <italic>H</italic><sub><italic>a</italic>,<italic>b</italic></sub> is highly dependent on the two sequences <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub> that produce it since more similar sequences will produce more similarities, whereas distant sequences will produce fewer similarities. The <italic>k</italic> size of the words will also strongly affect the set <italic>H</italic><sub><italic>a</italic>,<italic>b</italic></sub> (for a detailed analysis of the word distributions, see<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>).</p>
      <p id="Par46">Moreover, we will further re-define, from a coarse-grained perspective, <italic>H</italic><sub><italic>a</italic>,<italic>b</italic></sub> to be the composition of three other distributions, namely:<list list-type="bullet"><list-item><p id="Par47"><italic>W</italic><sub><italic>a</italic>,<italic>b</italic></sub> is the distribution of the random hits between <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub>. Given a sufficiently large <italic>n</italic><sub><italic>a</italic></sub> and <italic>n</italic><sub><italic>b</italic></sub> (lengths of the two sequences, respectively), the probability of finding random hits follows a binomial distribution (assuming uniformity of the letters in the sequences) <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$B(|{C}_{a}\times {C}_{b}|,{\frac{1}{4}}^{k})$$\end{document}</tex-math><mml:math id="M28"><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>4</mml:mn></mml:mfrac></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq14.gif"/></alternatives></inline-formula>. For further clarification of this distribution, see the section “Distribution of hits” in the Supplementary Material. Hence, <italic>W</italic><sub><italic>a</italic>,<italic>b</italic></sub> is the distribution of pure random noise (therefore originating by chance).</p></list-item><list-item><p id="Par48"><italic>R</italic><sub><italic>a</italic>,<italic>b</italic></sub> is the distribution of any hit such that its words <italic>w</italic><sub><italic>i</italic></sub>, <italic>w</italic><sub><italic>j</italic></sub> are scattered repeatedly (i.e., frequency greater than one) across both sequences <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub> and/or their complexity (measured as the longest unique substring contained in a word <italic>w</italic>, see<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>) is considered to be low based on biological standards. Furthermore, from a coarse-grained perspective, this distribution accounts for any repeatable element, such as tandem repeats, low-complexity regions, and interspersed repeats.</p></list-item><list-item><p id="Par49"><italic>T</italic><sub><italic>a</italic>,<italic>b</italic></sub> is the distribution of the signals conserved between <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub> such that <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{a,b}={H}_{a,b}\backslash ({W}_{a,b}\cup {R}_{a,b})$$\end{document}</tex-math><mml:math id="M30"><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>\</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>W</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq15.gif"/></alternatives></inline-formula>. That is, hits whose words <italic>w</italic><sub><italic>i</italic></sub>,<italic>w</italic><sub><italic>j</italic></sub> are unique (i.e., their frequency is one) are shared with respect to a common ancestor (conserved), did not originate by chance and cannot be considered repeats under biological examination.</p></list-item></list></p>
    </sec>
    <sec id="Sec10">
      <title>Inexact k-mer indexing</title>
      <p id="Par50">In this section, we describe the procedure by which the words are matched in an inexact fashion using heuristic subsampling of all possible matching combinations.</p>
      <p id="Par51">A perfect indexing hash function <italic>f</italic> for the universe <italic>U</italic><sup><italic>k</italic></sup> (i.e., all existing words <italic>w</italic> of size <italic>k</italic> over <italic>S</italic>) is given by the function:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{array}{rcl}f({w}_{i}^{k}) &amp; = &amp; \,{|S|}^{0}\ast v({w}_{i,1}^{k})+{|S|}^{1}\ast v({w}_{i,2}^{k})+\ldots +{|S|}^{j-1}\ast v({w}_{i,j}^{k})+\ldots +{|S|}^{k-1}\ast v({w}_{i,k}^{k})\\ f({w}_{i}^{k}) &amp; = &amp; \sum _{j=1}^{k}{|S|}^{j-1}\ast v({w}_{i,j}^{k})\end{array}$$\end{document}</tex-math><mml:math id="M32" display="block"><mml:mstyle mathsize="8.5pt"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width=".25em"/><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mn>1</mml:mn></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>…</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>…</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mstyle></mml:math><graphic xlink:href="41598_2019_46773_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq16"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${w}_{i,j}^{k}$$\end{document}</tex-math><mml:math id="M34"><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq16.gif"/></alternatives></inline-formula> denotes the <italic>j</italic>-th letter of a word <italic>w</italic><sub><italic>i</italic></sub> with <inline-formula id="IEq17"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{w}_{i}|=k$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq17.gif"/></alternatives></inline-formula> and function <italic>v</italic>(<italic>x</italic>) returns the integer position of <italic>x</italic> in <italic>S</italic>, starting from zero (i.e., <italic>v</italic>(<italic>A</italic>) = 0 and <italic>v</italic>(<italic>T</italic>) = 3). Note that function <italic>f</italic> is a bijection <inline-formula id="IEq18"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f:{U}^{k}\to {N}^{\{1..{|S|}^{k}\}}$$\end{document}</tex-math><mml:math id="M38"><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mi>U</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>→</mml:mo><mml:msup><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1.</mml:mn><mml:mo>.</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq18.gif"/></alternatives></inline-formula> that creates perfect indexing with no collisions for <italic>U</italic><sup><italic>k</italic></sup>; thus, the number of images in the codomain is equal to that in the domain, which accounts for 4<sup><italic>k</italic></sup>. Furthermore, we will define the family of functions <italic>F</italic> as the collection of functions <inline-formula id="IEq19"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F={\cup }_{z=1}^{\infty }f{(x)}^{z}$$\end{document}</tex-math><mml:math id="M40"><mml:mi>F</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>∪</mml:mo></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>∞</mml:mi></mml:mrow></mml:msubsup><mml:mi>f</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>z</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq19.gif"/></alternatives></inline-formula> where <inline-formula id="IEq20"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{array}{lll}f{({w}_{i,j}^{k})}^{z} &amp; \,= &amp; \sum _{j=1}^{k}({|S|}^{j-1}\ast v({w}_{i,j}^{k})\ast belongs(j,z))\end{array}$$\end{document}</tex-math><mml:math id="M42"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>f</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>z</mml:mi></mml:msup></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width=".25em"/><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>∗</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>∗</mml:mo><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq20.gif"/></alternatives></inline-formula>, and the operation <inline-formula id="IEq21"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$belongs(j,z)$$\end{document}</tex-math><mml:math id="M44"><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq21.gif"/></alternatives></inline-formula> returns 1 if there exists a natural number <italic>x</italic> such that <inline-formula id="IEq22"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j=z\ast x$$\end{document}</tex-math><mml:math id="M46"><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>z</mml:mi><mml:mo>∗</mml:mo><mml:mi>x</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq22.gif"/></alternatives></inline-formula> (that is, <italic>j</italic> is a multiple of <italic>z</italic>) and otherwise 0. Therefore, the collection of functions <italic>F</italic> contains all indexing functions <italic>f</italic>(<italic>x</italic>)<sup><italic>z</italic></sup> that use either all letters, half of the letters, or a third of the letters and so on (intermittently) to compute the hash of <italic>w</italic>. That is, the higher the <italic>z</italic> value of the <italic>f</italic>(<italic>x</italic>)<sup><italic>z</italic></sup> function is, the larger the number of collisions will be. Ideally, every skipped letter would increase the number of collisions by <inline-formula id="IEq23"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|S|=4$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mo stretchy="true">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="true">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq23.gif"/></alternatives></inline-formula> since <inline-formula id="IEq24"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${w}_{i,j}^{k}$$\end{document}</tex-math><mml:math id="M50"><mml:msubsup><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq24.gif"/></alternatives></inline-formula> can take up to 4 different values at position <italic>j</italic>. Using any of the functions <italic>f</italic>(<italic>x</italic>)<sup><italic>z</italic></sup> with <italic>z</italic> &gt; 1 will produce inexact indexing, enabling the detection of long, imperfect matches that also incorporate positional information within a <italic>k</italic>-mer. As opposed to using smaller <italic>k</italic>-mers, inexact <italic>k</italic>-mers are not as prone to the generation of random noise in a comparison. Therefore, any indexing function taken from the family <italic>F</italic> (with <italic>z</italic> &gt; 1) will enable heuristic subsampling of all possible inexact <italic>k</italic>-mer matches. Determining whether <italic>k</italic>-mers are similar but inexact at one position requires 3<sup><italic>k</italic></sup> comprobations in a brute force approach. The complexity of doing so grows exponentially with the length of <italic>k</italic> and the number of inexactitudes allowed. Thus, by using the <italic>F</italic> family of functions, the search for inexact <italic>k</italic>-mers is performed in <italic>O</italic>(1) time heuristically (see Supplementary Material for more details).</p>
    </sec>
    <sec id="Sec11">
      <title>Heuristic filtering</title>
      <p id="Par52">In this section, we describe the methodology by which repetitions and noise are filtered out of the main signal.</p>
      <p id="Par53">Given a sufficiently large <italic>k</italic> and an indexing function <italic>f</italic>, the hits produced by the distribution <italic>W</italic><sub><italic>a</italic>,<italic>b</italic></sub> (i.e., random hits) can be ignored, as the probability of finding random matches between sets of words <italic>C</italic> and <italic>C</italic>′ of length <italic>k</italic> and set sizes <italic>m</italic> and m′ (respectively) is <inline-formula id="IEq25"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1-{({(1-\frac{1}{{4}^{k}})}^{m})}^{m^{\prime} }$$\end{document}</tex-math><mml:math id="M52"><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>m</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_46773_Article_IEq25.gif"/></alternatives></inline-formula> (see Supplementary Material, section “Random perfect hits”), amounting to <italic>p</italic> = 0.0005419 for the case of mammalian chromosomes of up to 100 million base pairs and <italic>k</italic> = 32.</p>
      <p id="Par54">To remove the noise generated by <italic>R</italic><sub><italic>a</italic>,<italic>b</italic></sub>, only the unique hits in <italic>H</italic><sub><italic>a</italic>,<italic>b</italic></sub> are kept. By definition, a repetition is any word <italic>w</italic><sub><italic>i</italic></sub> whose frequency is greater than one. Therefore, removing all hits (<italic>w</italic><sub><italic>i</italic></sub>, <italic>w</italic><sub><italic>j</italic></sub>) from <italic>H</italic><sub><italic>a</italic>,<italic>b</italic></sub> where <italic>w</italic><sub><italic>i</italic></sub> appears more than once will effectively remove all possible repeats belonging to the distribution <italic>R</italic><sub><italic>a</italic>,<italic>b</italic></sub>. However, exact words tend to be rarer as <italic>k</italic> becomes larger (due to millions of years of evolution, see<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>), and a small <italic>k</italic> can produce random noise. To overcome this scenario, a hybrid approach is employed: a large <italic>k</italic> of 32 with a heuristic indexing function (<italic>z</italic> &gt; 1, as explained before), which enables finding long, unique words with still some degree of variability. The impact of <italic>z</italic> on the number of unique inexact hits found (and therefore employed to detect similarity) is analysed in the Supplementary Material.</p>
      <p id="Par55">Nonetheless, this approach is not sufficient to determine the conserved similarities since even distantly related organisms <italic>a</italic> and <italic>b</italic> will have a substantial number of small conserved signals (e.g., basic functioning genes, see<sup><xref ref-type="bibr" rid="CR23">23</xref></sup>). To extract the conserved similarities, it is necessary to group (cluster) the hits that belong to long, shared portions of the genome (i.e., HSPs) instead of just conserved genes. To do so, downsampling is applied, i.e., the position of hits is heavily scaled down to force hits belonging to an HSP to fall in the same position, hence increasing the concentration of hits in regions where syntenies are to be found. This approach is similar to two-dimensional positional clustering of the hashes identified during the matching steps (see, for example, MOSAIK<sup><xref ref-type="bibr" rid="CR24">24</xref></sup>, which employs positional clustering of hashes to consider candidate regions to be aligned).</p>
      <p id="Par56">Formally, consider an HSP to be a subset of the collection of words <italic>C</italic><sub><italic>a</italic></sub> and <italic>C</italic><sub><italic>b</italic></sub>, that is, for some starting positions <italic>i</italic>, <italic>j</italic> and for a given length, the words <italic>w</italic><sub><italic>i</italic></sub> and <italic>w</italic><sub><italic>j</italic></sub> in <italic>C</italic><sub><italic>a</italic></sub> and <italic>C</italic><sub><italic>b</italic></sub>, respectively, are equal (notice that not all words have to be equal, i.e., mismatches can occur). Then, it is clear that linear downsampling will map hits near position <italic>i</italic> together into a new position <italic>i</italic>′ if a uniform surjective mapping function is used since clusters will form from nearby hits that belong to conserved signals. The very same outcome is observed for <italic>j</italic>. Therefore, a larger number of hits will be mapped to positions <italic>i</italic>′ and <italic>j</italic>′ if an HSP exists, which enables it to be detected as a conserved signal. Figure <xref rid="Fig5" ref-type="fig">5</xref> shows an example comparison of an exact word-matching procedure and the heuristic method described. Note that in the exact procedure, the conserved HSPs are outnumbered by repeats and thus remain undetected. However, in the heuristic procedure, only the conserved HSPs are kept, while repeats are removed.<fig id="Fig5"><label>Figure 5</label><caption><p>Three-dimensional histograms of the hits matched using either an exact procedure (left) or the heuristic method proposed (right). The comparison was performed between the X chromosome of the human and mouse genomes.</p></caption><graphic xlink:href="41598_2019_46773_Fig5_HTML" id="d29e2759"/></fig></p>
    </sec>
    <sec id="Sec12">
      <title>Scoring function</title>
      <p id="Par57">In this section, the function used to score a pairwise comparison between two sequences is described. Such a function is presented as a heuristic discriminant of related from unrelated comparisons.</p>
      <p id="Par58">Once the surjective function is applied and the comparison is mapped to a lower-scale dimension, the highly conserved diagonals are sought. We will call the new dimension the hit matrix <italic>H</italic><sub><italic>m</italic></sub>, which is built by counting the found inexact hits and their scaled positions and represents a footprint of the comparison. Since conserved signals are diagonal in nature (i.e., hits belonging to an HSP are adjacent in terms of the diagonal in a 2D cartesian plane, such as in a dot plot representation), they are extracted by finding the maximum peak of concentrated hits per row in <italic>H</italic><sub><italic>m</italic></sub>. That is, there is no overlapping of conserved signals in <italic>H</italic><sub><italic>m</italic></sub>, as doing so would include repetitions. The scoring function then sums the distances between the conserved signals using the taxicab distance and scales it between [0, 1], with 0 indicating a perfect diagonal (i.e., identical sequences are compared) and 1 indicating completely different sequences with no conserved regions. Formally, the scoring function is calculated as follows:<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{array}{c}{d}_{raw}=\sum _{i}^{l-1}taxicab({\rm{\max }}({H}_{m}(i),{H}_{m}(i+1)))\,\end{array}$$\end{document}</tex-math><mml:math id="M54" display="block"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mi>i</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>b</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">max</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mspace width=".25em"/></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="41598_2019_46773_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <italic>l</italic> is the longest dimension of <italic>H</italic><sub><italic>m</italic></sub>. Note that this distance takes into account large genome rearrangements such as transpositions or inversions since every gap between conserved signals is penalized. However, <italic>d</italic><sub><italic>raw</italic></sub> accounts only for the sum of the taxicab distance between the continuous conserved signals and needs to be normalized. This normalization is carried out by dividing <italic>d</italic><sub><italic>raw</italic></sub> by the theoretical maximum distance, which accounts for a scenario in which conserved signals are intermittently found on opposite sides of the sequences, namely:<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=\frac{{d}_{raw}}{{l}^{2}}$$\end{document}</tex-math><mml:math id="M56" display="block"><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="41598_2019_46773_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>where <italic>d</italic> accounts for the normalized distance (or score) between sequences <italic>a</italic> and <italic>b</italic>. Further details on the aggregation of the metric for split genomes (such as those divided between chromosomes) can be found in the Supplementary Material under the section “Distance aggregation”.</p>
    </sec>
    <sec id="Sec13">
      <title>Implementation</title>
      <p id="Par59">The algorithm described above is intended to be used heuristically in fast, hit-based sequence comparison approaches. In short, the full algorithm comprises the following:<list list-type="order"><list-item><p id="Par60">Indexing the unique inexact <italic>k</italic>-mers of the reference sequence.</p></list-item><list-item><p id="Par61">Computing the hits between the reference and query sequences.</p></list-item><list-item><p id="Par62">Removing non-unique hits.</p></list-item><list-item><p id="Par63">Downsampling the hits matrix <italic>H</italic><sub><italic>m</italic></sub>.</p></list-item><list-item><p id="Par64">Filtering by finding the maximum peaks.</p></list-item><list-item><p id="Par65">Computing the distance between the sequences.</p></list-item><list-item><p id="Par66">Detecting LSGRs.</p></list-item></list></p>
      <p id="Par67">The most demanding computational step is the indexing of <italic>k</italic>-mers (retrieval is performed in constant time since only unique hits are kept). To accelerate this process, indexing involves two different mechanisms. Words are hashed and inserted into a hash table of size 4<sup>12</sup> (determined empirically as a good trade-off between memory consumption and sensitivity), where each entry corresponds to the 12-nucleotide prefix of each word (similar seed patterns have already been explored<sup><xref ref-type="bibr" rid="CR25">25</xref></sup>). A posterior search is performed by first accessing the hash table entry corresponding to the word prefix (<italic>O</italic>(1)) and then comparing the hash key of the stored unique <italic>k</italic>-mer with the target key. Downsampling is performed by linearly mapping each hit <italic>h</italic><sub><italic>i</italic></sub> to a new position <italic>i</italic>′ in the hit matrix <italic>H</italic><sub><italic>m</italic></sub>. Note that the larger the <italic>H</italic><sub><italic>m</italic></sub> matrix becomes, the higher the resolution for mapping hits becomes; however, this increase occurs at the expense of space consumption, which in this case accounts for second storage memory. The resolution of the matrix can be chosen based on user interest since a higher resolution will allow more detail, whereas a lower resolution will show a more coarse-grained view of the comparison.</p>
      <p id="Par68">Since the output of the algorithm is a dot plot representation of the comparison (intrinsically a matrix of integers), the detection of LSGRs is analogous to detecting lines in an image. Extensive literature is available on this subject (see, e.g.)<sup><xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR27">27</xref></sup>, which is beyond the scope of this manuscript. In this particular case, we employed a parameterized growing-region algorithm that is launched for every local optimum in the matrix and for which the edge direction is weighted depending on the angle of nearby hits (i.e., diagonals and anti-diagonals are prioritized over perpendiculars). For further details, see the Supplementary Material.</p>
    </sec>
    <sec id="Sec14">
      <title>Equipment and settings</title>
      <p id="Par69">All figures (except the diagram in Fig. <xref rid="Fig1" ref-type="fig">1</xref>) were built from data generated from the proposed method CHROMEISTER. Figures <xref rid="Fig2" ref-type="fig">2</xref>, <xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig4" ref-type="fig">4</xref> were put together with Google Drawings and Inkscape. Figure <xref rid="Fig5" ref-type="fig">5</xref> was generated using MATLAB. GIMP was employed in Figs <xref rid="Fig2" ref-type="fig">2</xref> and <xref rid="Fig3" ref-type="fig">3</xref> to improve edges visualization, particularly in the small sized thumbnails in Fig. <xref rid="Fig3" ref-type="fig">3</xref>.</p>
    </sec>
    <sec id="Sec15">
      <title>Third party rights</title>
      <p id="Par70">Figure <xref rid="Fig3" ref-type="fig">3</xref> includes several photographs of Apes, Gibbons, Monkeys, etc. Copyright is available for all of these pictures. The only changes made to these images were partially cropping. The list containing copyright permissions of the pictures used is available in the Additional File <xref rid="MOESM2" ref-type="media">1</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec16">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="41598_2019_46773_MOESM1_ESM.pdf">
            <caption>
              <p>Supplementary Material</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="41598_2019_46773_MOESM2_ESM.pdf">
            <caption>
              <p>Additional File 1</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p><bold>Publisher’s note:</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1038/s41598-019-46773-w.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>This work was partially supported by the European project ELIXIR-EXCELERATE (grant no. 676559), the Spanish national project Plataforma de Recursos Biomoleculares y Bioinformáticos (ISCIII-PT13.0001.0012 and ISCIII-PT17.0009.0022), the Instituto de Investigación Biomédica de Málaga IBIMA and the University of Málaga.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author Contributions</title>
    <p>E.P.W. conceived and designed the method, implemented the algorithm, performed the experiments, analysed and interpreted data and wrote the paper. S.D.P. analysed and interpreted data, contributed materials, analysis tools or data and wrote the paper. O.T. analysed and interpreted data, wrote the paper and supervised the project. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Data Availability</title>
    <p>All data generated or analysed during this study are included in this published article (and its supplementary information files).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Code Availability</title>
    <p>All sources, scripts and executables described or employed in the manuscript can be accessed at <ext-link ext-link-type="uri" xlink:href="https://github.com/estebanpw/chromeister">https://github.com/estebanpw/chromeister</ext-link>.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing Interests</title>
    <p id="Par72">The authors declare no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goodwin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>McPherson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>McCombie</surname>
            <given-names>WR</given-names>
          </name>
        </person-group>
        <article-title>Coming of age: ten years of next-generation sequencing technologies</article-title>
        <source>Nature Reviews Genetics</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>6</issue>
        <fpage>333</fpage>
        <pub-id pub-id-type="doi">10.1038/nrg.2016.49</pub-id>
        <?supplied-pmid 27184599?>
        <pub-id pub-id-type="pmid">27184599</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riley</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Dohyup</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>AK</given-names>
          </name>
        </person-group>
        <article-title>Genome sequence of “Candidatus Carsonella ruddii” strain BC, a nutritional endosymbiont of Bactericera cockerelli</article-title>
        <source>Genome announcements</source>
        <year>2017</year>
        <volume>5</volume>
        <issue>17</issue>
        <fpage>e00236</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1128/genomeA.00236-17</pub-id>
        <?supplied-pmid 28450512?>
        <pub-id pub-id-type="pmid">28450512</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neale</surname>
            <given-names>DB</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Decoding the massive genome of loblolly pine using haploid DNA and novel assembly strategies</article-title>
        <source>Genome biology</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>3</issue>
        <fpage>R59</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r59</pub-id>
        <?supplied-pmid 24647006?>
        <pub-id pub-id-type="pmid">24647006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Courcelle</surname>
            <given-names>E</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Narcisse: a mirror view of conserved syntenies</article-title>
        <source>Nucleic acids research</source>
        <year>2007</year>
        <volume>36</volume>
        <fpage>D485</fpage>
        <lpage>D490</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm805</pub-id>
        <?supplied-pmid 17981845?>
        <pub-id pub-id-type="pmid">17981845</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Louis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Muffato</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Crollius</surname>
            <given-names>HR</given-names>
          </name>
        </person-group>
        <article-title>Genomicus: five genome browsers for comparative genomics in eukaryota</article-title>
        <source>Nucleic acids research</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>D700</fpage>
        <lpage>D705</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1156</pub-id>
        <?supplied-pmid 23193262?>
        <pub-id pub-id-type="pmid">23193262</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tang</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SynFind: compiling syntenic regions across any set of genomes on demand</article-title>
        <source>Genome biology and evolution</source>
        <year>2015</year>
        <volume>7</volume>
        <issue>12</issue>
        <fpage>3286</fpage>
        <lpage>3298</lpage>
        <pub-id pub-id-type="doi">10.1093/gbe/evv219</pub-id>
        <?supplied-pmid 26560340?>
        <pub-id pub-id-type="pmid">26560340</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mirzaghaderi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Marzangi</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>IdeoKar: an ideogram constructing and karyotype analyzing software</article-title>
        <source>Caryologia</source>
        <year>2015</year>
        <volume>68</volume>
        <issue>1</issue>
        <fpage>31</fpage>
        <lpage>35</lpage>
        <pub-id pub-id-type="doi">10.1080/00087114.2014.998526</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lyons</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Freeling</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>How to usefully compare homologous plant genes and chromosomes as DNA sequences</article-title>
        <source>The Plant Journal</source>
        <year>2008</year>
        <volume>53</volume>
        <issue>4</issue>
        <fpage>661</fpage>
        <lpage>673</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1365-313X.2007.03326.x</pub-id>
        <?supplied-pmid 18269575?>
        <pub-id pub-id-type="pmid">18269575</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>
        <source>Nucleic acids research</source>
        <year>1997</year>
        <volume>25</volume>
        <issue>17</issue>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id>
        <?supplied-pmid 9254694?>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Torreno</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Trelles</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Breaking the computational barriers of pairwise genome comparison</article-title>
        <source>BMC bioinformatics</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>250</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0679-9</pub-id>
        <?supplied-pmid 26260162?>
        <pub-id pub-id-type="pmid">26260162</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nakato</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Cgaln: fast and space-efficient whole-genome alignment</article-title>
        <source>BMC bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>224</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-224</pub-id>
        <?supplied-pmid 20433723?>
        <pub-id pub-id-type="pmid">20433723</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Using MUMmer to identify similar regions in large sequence sets</article-title>
        <source>Current protocols in bioinformatics</source>
        <year>2003</year>
        <volume>1</volume>
        <fpage>10</fpage>
        <lpage>3</lpage>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicolas</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Peterlongo</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tempel</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Finding and characterizing repeats in plant genomes</article-title>
        <source>Plant Bioinformatics</source>
        <year>2016</year>
        <volume>1374</volume>
        <fpage>293</fpage>
        <lpage>337</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-4939-3167-5_17</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marcussen</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ancient hybridizations among the ancestral genomes of bread wheat</article-title>
        <source>Science</source>
        <year>2014</year>
        <volume>345</volume>
        <fpage>6194</fpage>
        <pub-id pub-id-type="doi">10.1126/science.1250092</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zimin</surname>
            <given-names>AV</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The first near-complete assembly of the hexaploid bread wheat genome, Triticum aestivum</article-title>
        <source>Gigascience</source>
        <year>2017</year>
        <volume>6</volume>
        <issue>11</issue>
        <fpage>gix097</fpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/gix097</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ensembl 2018</article-title>
        <source>Nucleic acids research</source>
        <year>2017</year>
        <volume>46</volume>
        <issue>D1</issue>
        <fpage>D754</fpage>
        <lpage>D761</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx1098</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Perelman</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A molecular phylogeny of living primates</article-title>
        <source>PLoS genetics</source>
        <year>2011</year>
        <volume>7</volume>
        <issue>3</issue>
        <fpage>e1001342</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pgen.1001342</pub-id>
        <?supplied-pmid 21436896?>
        <pub-id pub-id-type="pmid">21436896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chatterjee</surname>
            <given-names>HJ</given-names>
          </name>
          <name>
            <surname>Ho</surname>
            <given-names>SY</given-names>
          </name>
          <name>
            <surname>Barnes</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Groves</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Estimating the phylogeny and divergence times of primates using a supermatrix approach</article-title>
        <source>BMC evolutionary biology</source>
        <year>2009</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>259</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2148-9-259</pub-id>
        <?supplied-pmid 19860891?>
        <pub-id pub-id-type="pmid">19860891</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>28-way vertebrate alignment and conservation track in the UCSC Genome Browser</article-title>
        <source>Genome research</source>
        <year>2007</year>
        <volume>17</volume>
        <issue>12</issue>
        <fpage>1797</fpage>
        <lpage>1808</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.6761107</pub-id>
        <?supplied-pmid 17984227?>
        <pub-id pub-id-type="pmid">17984227</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reinert</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Chew</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison (I): statistics and power</article-title>
        <source>Journal of Computational Biology</source>
        <year>2009</year>
        <volume>16</volume>
        <issue>12</issue>
        <fpage>1615</fpage>
        <lpage>1634</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0198</pub-id>
        <?supplied-pmid 20001252?>
        <pub-id pub-id-type="pmid">20001252</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Orlov</surname>
            <given-names>YL</given-names>
          </name>
          <name>
            <surname>Potapov</surname>
            <given-names>VN</given-names>
          </name>
        </person-group>
        <article-title>Complexity: an internet resource for analysis of DNA sequence complexity</article-title>
        <source>Nucleic acids research</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>W628</fpage>
        <lpage>W633</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh466</pub-id>
        <?supplied-pmid 15215465?>
        <pub-id pub-id-type="pmid">15215465</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Raff, M. <italic>et al</italic>. <italic>Molecular Biology of the Cell 4th Edition</italic>. (Garland Science, 2002).</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burt</surname>
            <given-names>DW</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The dynamics of chromosome evolution in birds and mammals</article-title>
        <source>Nature</source>
        <year>1999</year>
        <volume>402</volume>
        <issue>6760</issue>
        <fpage>411</fpage>
        <pub-id pub-id-type="doi">10.1038/46555</pub-id>
        <?supplied-pmid 10586880?>
        <pub-id pub-id-type="pmid">10586880</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lee</surname>
            <given-names>WP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MOSAIK: a hash-based algorithm for accurate next-generation sequencing short-read mapping</article-title>
        <source>PloS one</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>3</issue>
        <fpage>e90581</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0090581</pub-id>
        <?supplied-pmid 24599324?>
        <pub-id pub-id-type="pmid">24599324</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ma</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Tromp</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>PatternHunter: faster and more sensitive homology search</article-title>
        <source>Bioinformatics</source>
        <year>2002</year>
        <volume>18</volume>
        <issue>3</issue>
        <fpage>440</fpage>
        <lpage>445</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/18.3.440</pub-id>
        <?supplied-pmid 11934743?>
        <pub-id pub-id-type="pmid">11934743</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Canny</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A computational approach to edge detection</article-title>
        <source>IEEE Transactions on pattern analysis and machine intelligence</source>
        <year>1986</year>
        <volume>6</volume>
        <fpage>679</fpage>
        <lpage>698</lpage>
        <pub-id pub-id-type="doi">10.1109/TPAMI.1986.4767851</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dollár</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Zitnick</surname>
            <given-names>CL</given-names>
          </name>
        </person-group>
        <article-title>Fast edge detection using structured forests</article-title>
        <source>IEEE transactions on pattern analysis and machine intelligence</source>
        <year>2015</year>
        <volume>37</volume>
        <issue>8</issue>
        <fpage>1558</fpage>
        <lpage>1570</lpage>
        <pub-id pub-id-type="doi">10.1109/TPAMI.2014.2377715</pub-id>
        <?supplied-pmid 26352995?>
        <pub-id pub-id-type="pmid">26352995</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

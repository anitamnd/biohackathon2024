<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10190105</article-id>
    <article-id pub-id-type="publisher-id">2961</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02961-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>RabbitTClust: enabling fast clustering analysis of millions of bacteria genomes with MinHash sketches</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0370-2222</contrib-id>
        <name>
          <surname>Xu</surname>
          <given-names>Xiaoming</given-names>
        </name>
        <address>
          <email>xiaoming.xu@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yin</surname>
          <given-names>Zekun</given-names>
        </name>
        <address>
          <email>zekun.yin@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yan</surname>
          <given-names>Lifeng</given-names>
        </name>
        <address>
          <email>lifeng.yan@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Hao</given-names>
        </name>
        <address>
          <email>haoz@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xu</surname>
          <given-names>Borui</given-names>
        </name>
        <address>
          <email>boruixu@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wei</surname>
          <given-names>Yanjie</given-names>
        </name>
        <address>
          <email>yj.wei@siat.ac.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Niu</surname>
          <given-names>Beifang</given-names>
        </name>
        <address>
          <email>niubf@cnic.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schmidt</surname>
          <given-names>Bertil</given-names>
        </name>
        <address>
          <email>bertil.schmidt@uni-mainz.de</email>
        </address>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Weiguo</given-names>
        </name>
        <address>
          <email>weiguo.liu@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.27255.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1761 1174</institution-id><institution>School of Software, </institution><institution>Shandong University, </institution></institution-wrap>Jinan, China </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.27255.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1761 1174</institution-id><institution>Shenzhen Research Institute of Shandong University, </institution><institution>Shandong University, </institution></institution-wrap>Shenzhen, China </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.9227.e</institution-id><institution-id institution-id-type="ISNI">0000000119573309</institution-id><institution>Shenzhen Institute of Advanced Technology, </institution><institution>Chinese Academy of Sciences, </institution></institution-wrap>Shenzhen, China </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.9227.e</institution-id><institution-id institution-id-type="ISNI">0000000119573309</institution-id><institution>Computer Network Information Center, </institution><institution>Chinese Academy of Sciences, </institution></institution-wrap>Beijing, China </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.5802.f</institution-id><institution-id institution-id-type="ISNI">0000 0001 1941 7111</institution-id><institution>Institute for Computer Science, </institution><institution>Johannes Gutenberg University, </institution></institution-wrap>Mainz, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>121</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>5</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present RabbitTClust, a fast and memory-efficient genome clustering tool based on sketch-based distance estimation. Our approach enables efficient processing of large-scale datasets by combining dimensionality reduction techniques with streaming and parallelization on modern multi-core platforms. 113,674 complete bacterial genome sequences from RefSeq, 455 GB in FASTA format, can be clustered within less than 6 min and 1,009,738 GenBank assembled bacterial genomes, 4.0 TB in FASTA format, within only 34 min on a 128-core workstation. Our results further identify 1269 redundant genomes, with identical nucleotide content, in the RefSeq bacterial genomes database.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02961-6.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome clustering</kwd>
      <kwd>MinHash sketching</kwd>
      <kwd>Minimum spanning tree</kwd>
      <kwd>Big data</kwd>
      <kwd>Redundancy detection</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61972231</award-id>
        <principal-award-recipient>
          <name>
            <surname>Xu</surname>
            <given-names>Xiaoming</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>62102231</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yin</surname>
            <given-names>Zekun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Shandong Provincial Natural Science Foundation</institution>
        </funding-source>
        <award-id>ZR2021QF089</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yan</surname>
            <given-names>Lifeng</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>Â© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Clustering nucleotide sequences is an important operation in bioinformatics with applications including duplicate detection [<xref ref-type="bibr" rid="CR1">1</xref>] and species boundary identification [<xref ref-type="bibr" rid="CR2">2</xref>]. With the progress of sequencing technologies, more and more genome sequences are generated at explosive speed. So far, over one million assembled bacteria genomes have been submitted to NCBI GenBank [<xref ref-type="bibr" rid="CR3">3</xref>] comprising several terabytes in size. Even though widely used tools, such as CD-HIT [<xref ref-type="bibr" rid="CR4">4</xref>] and UCLUST [<xref ref-type="bibr" rid="CR5">5</xref>], rely on fast heuristics, they can become prohibitively slow or memory intensive when clustering long genomic sequences because of their alignment-based distance measures.</p>
    <p id="Par3">Traditional alignment-based algorithms [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] often fail to compute pairwise similarities in practical time, especially for complete assembled genomes. Recently, <italic>k</italic>-mer-based alignment-free algorithms [<xref ref-type="bibr" rid="CR8">8</xref>] and sketching strategies [<xref ref-type="bibr" rid="CR9">9</xref>] are becoming popular for estimating sequence similarities. Mash [<xref ref-type="bibr" rid="CR10">10</xref>] introduced fast genome distance estimation using MinHash sketches which approximates the distance by selecting a small subset of hashed and sorted <italic>k</italic>-mers. This strategy provides an approach to efficiently compute distances between sequences with a length of 10 million or even longer.</p>
    <p id="Par4">Hierarchical clustering approaches often rely on a matrix of pairwise distances among input objects. However, memory requirements of the distance matrix can become prohibitive for large-scale input data. In order to reduce compute and memory consumption, clustering algorithms based on heuristics often choose the longest sequence as the representative sequence and only compute the distance between representative genomes and other genomes [<xref ref-type="bibr" rid="CR11">11</xref>]. As a consequence, heuristic clustering algorithm may output sub-optimal results [<xref ref-type="bibr" rid="CR12">12</xref>]. Furthermore, popular tools such as CD-HIT and UCLUST have been designed for clustering short read or protein sequences. They often fail when clustering long assembled genome sequences.</p>
    <p id="Par5">Nowadays, many tasks such as read mapping [<xref ref-type="bibr" rid="CR13">13</xref>] or metagenome discovery [<xref ref-type="bibr" rid="CR14">14</xref>] are reference-based. In some cases, several different versions of genome submissions to NCBI RefSeq with similar contents exist, which may lead to ambiguous results. Other applications such as RabbitUniq [<xref ref-type="bibr" rid="CR15">15</xref>] and fastv [<xref ref-type="bibr" rid="CR16">16</xref>] are based on unique <italic>k</italic>-mers of the reference genomes to identify microorganisms. These methods can miss partial unique <italic>k</italic>-mers when processing repeats or redundant genomes. Thus, when running reference-based applications, removing highly similar genomes can be beneficial to avoid errors caused by redundant references [<xref ref-type="bibr" rid="CR15">15</xref>]. Identification of boundaries between microbial species is often based on computing the pairwise Average Nucleotide Identity (ANI) of large collections of microbial genomes (such as fastANI [<xref ref-type="bibr" rid="CR2">2</xref>] and its re-evaluations [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]).</p>
    <p id="Par6">Recent tools for large-scale clustering of biological sequences include Linclust [<xref ref-type="bibr" rid="CR19">19</xref>], Gclust [<xref ref-type="bibr" rid="CR20">20</xref>], and MeShClust3 [<xref ref-type="bibr" rid="CR21">21</xref>]. Linclust measures similarities by gapless local alignment, which suffers from high runtimes and has a significant memory footprint. Gclust is a parallelized clustering tool for microbial genomic data using sparse suffix arrays (SSAs) and maximal exact matches (MEMs) for similarity measurement. However, generation of SSAs and MEMs between large collections of long genomic genomes also suffers from both high computational and high space complexity. Even though MeShClust3 is able to cluster about 10,000 bacterial genomes in about 50 h, it is not able to deal with millions of genomes in practical time. This establishes the need for an approach that can cluster large amounts of long genomic sequences in practical time on modern hardware platforms with high computational efficiency and low memory requirements.</p>
    <p id="Par7">We address this need by proposing RabbitTClust, an efficient clustering toolkit based on MinHash sketch distance measurement for large-scale genome datasets. Fast sketching (an approximate, compact summary of the original data) is used to compute similarities among genomes with a small memory footprint. It consists of two modules: <list list-type="order"><list-item><p id="Par8"><italic>clust-mst</italic> (minimum-spanning-tree-based single-linkage hierarchical clustering), and</p></list-item><list-item><p id="Par9"><italic>clust-greedy</italic> (greedy incremental clustering)</p></list-item></list><italic>clust-mst</italic> relies on a graph-based linear space clustering algorithm based on minimum spanning tree (MST) computation [<xref ref-type="bibr" rid="CR22">22</xref>] to perform single-linkage hierarchical clustering. Our MST construction relies on dynamically generating and merging partial clustering results without storing the whole distance matrix, which in turn allows for both memory reduction and efficient parallelization. <italic>clust-greedy</italic> chooses the longest genome in each cluster as representative and only computes distances of incoming genomes against the representative. Distances between incoming and representative genomes can be computed simultaneously in multi-threaded fashion.</p>
    <p id="Par10">As a result, RabbitTClust advances the scalability of genome clustering methods and is able to carry out terabyte-scale experiments on a single computer workstation.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Performance comparison</title>
      <p id="Par11">The pipelines of <italic>clust-mst</italic> and <italic>clust-greedy</italic> are illustrated in Figs.Â <xref rid="Fig1" ref-type="fig">1</xref> and <xref rid="Fig2" ref-type="fig">2</xref>, respectively. More details are explained in the â<xref rid="Sec10" ref-type="sec">Methods</xref>â section.<fig id="Fig1"><label>Fig. 1</label><caption><p>Pipeline of <italic>clust-mst</italic>: (i) sketch creation, (ii) streamed distance computation for each pair genomes and MST generation, (iii) cluster generation. More details of distance computation and MST generation are shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref></p></caption><graphic xlink:href="13059_2023_2961_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par12">
        <fig id="Fig2">
          <label>Fig. 2</label>
          <caption>
            <p>Pipeline of <italic>clust-greedy</italic>: (i) sketch creation, (ii) greedy incremental clustering</p>
          </caption>
          <graphic xlink:href="13059_2023_2961_Fig2_HTML" id="MO2"/>
        </fig>
      </p>
      <p id="Par13">RabbitTClust can efficiently finish the clustering of the bacterial genomes from NCBI RefSeq Release 211 [<xref ref-type="bibr" rid="CR23">23</xref>] (<italic>bact-RefSeq</italic>) and Genbank Release 249 [<xref ref-type="bibr" rid="CR3">3</xref>] (<italic>bact-GenBank</italic>) on a workstation with two 64-core AMD EPYC 7T83 CPUs, 256 GB DDR4 memory, and 7.68 TB WD SN640 SSD. The <italic>bact-RefSeq</italic> dataset (455 GB in FASTA format) consists of 113,674 complete genomes, while <italic>bact-Genbank</italic> contains 1,009,738 genomes with valid <italic>taxonomy-check-status</italic> [<xref ref-type="bibr" rid="CR24">24</xref>]. The total size of <italic>bact-Genbank</italic> is 4.0 TB in FASTA format. Using a distance threshold of 0.05 and 128 threads, <italic>clust-mst </italic> finishes the clustering of <italic>bact-RefSeq</italic> within 6 min and with a memory footprint of 10.70 GB. Based on the ground truth from the NCBI RefSeq species taxonomy identifier (<italic>species-taxid</italic>), the created clustering of <italic>clust-mst</italic> has an NMI score of 0.961. Using a distance threshold of 0.05 and 128 threads, <italic>clust-greedy</italic> finishes the clustering of <italic>bact-GenBank</italic> within 34 min, a memory footprint of 16.45 GB, and an NMI score of 0.956 (based on NCBI Genbank <italic>species-taxid</italic>).</p>
      <p id="Par14">Mothur [<xref ref-type="bibr" rid="CR25">25</xref>] can finish hierarchical clustering with a PHYLIP-based distance matrix. In addition, Mash [<xref ref-type="bibr" rid="CR10">10</xref>] can compute a PHYLIP-based distance matrix of genomes with the <italic>triangle</italic> option. Using 128 threads on the 128-core workstation, the Mash &amp;Mothur pipeline (Mash v.2.3 and Mothur v.1.48.0) can finish hierarchical clustering of <italic>bact-RefSeq</italic> with a runtime of 6 h, a memory footprint of 7.33 GB and an NMI score of 0.961. Compared to the Mash &amp;Mothur pipeline, <italic>clust-mst</italic> of RabbitTClust thus achieves a speedup of 66 with identical NMI score (see Table <xref rid="Tab1" ref-type="table">1</xref>).<table-wrap id="Tab1"><label>Table 1</label><caption><p>Performance comparison of different clustering tools and datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Dataset</th><th align="left">Tool</th><th align="left">Time</th><th align="left">SpeedUp<sup>a</sup></th><th align="left">Memory (GB)</th><th align="left">NMI</th></tr></thead><tbody><tr><td align="left" rowspan="5"><italic>bact-RefSeq</italic></td><td align="left">MeShClust3</td><td align="left">&gt;14days</td><td align="left">-</td><td align="left">-</td><td align="left">-</td></tr><tr><td align="left">Gclust</td><td align="left">-</td><td align="left">-</td><td align="left">OOM<sup>b</sup></td><td align="left">-</td></tr><tr><td align="left">Mash &amp;Mothur</td><td align="left">365m14s</td><td align="left">66.4</td><td align="left">7.33</td><td align="left">0.961</td></tr><tr><td align="left"><italic>clust-mst</italic></td><td align="left">5m30s</td><td align="left">-</td><td align="left">10.70</td><td align="left">0.961</td></tr><tr><td align="left"><italic>clust-greedy</italic></td><td align="left">5m05s</td><td align="left">-</td><td align="left">4.83</td><td align="left">0.959</td></tr><tr><td align="left" rowspan="5"><italic>sub-Bact</italic></td><td align="left">MeShClust3</td><td align="left">3,096m18s</td><td align="left">2,996.4</td><td align="left">139.17</td><td align="left">0.920</td></tr><tr><td align="left">Gclust</td><td align="left">1,502m05s</td><td align="left">1,454.6</td><td align="left">156.35</td><td align="left">0.812</td></tr><tr><td align="left">Mash &amp;Mothur</td><td align="left">4m37s</td><td align="left">4.5</td><td align="left">1.19</td><td align="left">0.973</td></tr><tr><td align="left"><italic>clust-mst</italic></td><td align="left">1m02s</td><td align="left">-</td><td align="left">5.77</td><td align="left">0.973</td></tr><tr><td align="left"><italic>clust-greedy</italic></td><td align="left">59s</td><td align="left">-</td><td align="left">5.17</td><td align="left">0.970</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>SpeedUp: SpeedUp for <italic>clust-mst</italic> module of RabbitTClust</p><p><sup>b</sup>OOM: Out Of Memory</p></table-wrap-foot></table-wrap></p>
      <p id="Par15">CD-HIT, UCLUST, and Linclust can not deal with both <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> and run out of memory. Furthermore, Gclust and MeShClust3, can not finish the clustering of the full RefSeq dataset (<italic>bact-RefSeq</italic>) in practical runtime. To compare efficiency and accuracy of RabbitTClust with these tools, we created a subset of <italic>bact-RefSeq</italic> called <italic>sub-Bact</italic>, which contains 10,562 genomes with a total size of 43 GB in FASTA format. We execute MeShClust3 (v.2.0) with the commands <italic>meshclust -d sub-Bacteria.fna -o sub-Bacteria.clust -t 0.84 -b 1000 -v 4000</italic> (as recommended in [<xref ref-type="bibr" rid="CR21">21</xref>]) and Gclust (v.1.0.0) using <italic>gclust -both -nuc -threads 128 -ext 1 -chunk 2000MB sub-Bacteria.sorted.fna &gt; sub-Bacteria.clust</italic> with a larger chunk size for better thread scalability. Using 128 threads, MeShClust3 and Gclust can finish the clustering of <italic>sub-Bact</italic> with a runtime of 51.60 h and 25.01 h, a memory footprint of 139.17 GB and 156.35 GB, and an NMI score of 0.920 and 0.812, respectively. In comparison, <italic>clust-mst</italic> can finish the clustering of <italic>sub-Bact</italic> with a runtime of only 61.76 s, a memory footprint of 5.77 GB, and an NMI score of 0.973. Mash &amp;Mothur requires 276.84 s, has a memory footprint of 1.19 GB, and also achieves NMI score of 0.973. Compared to MeshClust3, Gclust, and Mash &amp;Mothur pipeline, <italic>clust-mst</italic> thus achieves speedups of at least 2996.4, 1454.6, and 4.5 for the <italic>sub-Bact</italic> dataset, respectively. Details are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>.</p>
    </sec>
    <sec id="Sec4">
      <title>Efficiency and scalability</title>
      <p id="Par16">The combination of efficient algorithms and highly optimized implementation makes the two modules of RabbitTClust fast, scalable, and memory efficient. We adopt a low-complexity MinHash sketching algorithm to estimate the pairwise distances for both <italic>clust-mst</italic> and <italic>clust-greedy</italic>. Consider a genomic sequence of length <italic>L</italic> and the sketch size <italic>S</italic> (number of sampled <italic>k</italic>-mers for distance estimation) with <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S \ll L$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>S</mml:mi><mml:mo>âª</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq1.gif"/></alternatives></inline-formula>. The computational complexity of sketch-based distance measurement of two genomic sequences of length <italic>L</italic> is <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(S)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq2.gif"/></alternatives></inline-formula>, while the traditional alignment-based approach requires <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(L^2)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq3.gif"/></alternatives></inline-formula>.</p>
      <p id="Par17">Consider <italic>N</italic> to be the number of genomic input sequences. The streaming MST generation algorithm for <italic>clust-mst</italic> exhibits linear space complexity of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N)$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq4.gif"/></alternatives></inline-formula> and avoids storing the full pairwise distance matrix with <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N^2/2$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq5.gif"/></alternatives></inline-formula> entries. <italic>clust-greedy</italic> also has linear space complexity <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N)$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq6.gif"/></alternatives></inline-formula> since it only needs to store the label (representative or redundant) of each genome instead of pairwise distances.</p>
      <p id="Par18">RabbitTClust takes full advantage of modern compute platforms by featuring fast I/O parsing, multi-threading, and vectorization of inner loops. The sketch creation for each genome is a time-consuming part for both <italic>clust-mst</italic> and <italic>clust-greedy</italic>. It is thus parallelized using both multi-threading and vectorization. For multi-threading, thread scalability is bottlenecked by sequence parsing as the thread number grows. We use the efficient FASTA parsing libraries RabbitFX [<xref ref-type="bibr" rid="CR26">26</xref>] and kseq [<xref ref-type="bibr" rid="CR27">27</xref>] to eliminate parsing bottlenecks, thus, achieving better performance and thread scalability.</p>
      <p id="Par19">Distance computation is another hotspot kernel. Our streaming strategy for MST generation can be parallelized with the distance computation as shown in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>. For <italic>clust-greedy</italic>, the distances of each incoming genome with all representative genomes are also computed in parallel. Since there is no dependency between multiple threads, distance computation can achieve good thread scalability.<fig id="Fig3"><label>Fig. 3</label><caption><p>Parallel streaming strategy for sub-MSTs generation. In Step1, each thread generates and updates the sub-MST when finishing the computation of <italic>t</italic> rows of the distance matrix. In Step2, sub-MSTs are merged into the final MST after finishing the computation of the whole distance matrix</p></caption><graphic xlink:href="13059_2023_2961_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par20">Figure <xref rid="Fig4" ref-type="fig">4</xref> shows the thread scalability of <italic>clust-mst</italic> and <italic>clust-greedy</italic> on the 128-core AMD workstation. Both methods achieve near linear speedup on <italic>bact-RefSeq</italic> and <italic>bact-Genbank</italic> for up to 72 threads. Note that the speedup grows more slowly when the thread number exceeds 72 due to disk I/O and multi-threading overheads. For example, synchronization is required by multiple threads to get the labels (representative or redundant) of the incoming genomes. In addition, RabbitTClust can achieve comparable performance on a 64-core Intel platform, as shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.<fig id="Fig4"><label>Fig. 4</label><caption><p>Thread scalability for <italic>clust-mst</italic> and <italic>clust-greedy</italic> on <italic>bact-RefSeq</italic> and <italic>bact-Genbank</italic>, respectively</p></caption><graphic xlink:href="13059_2023_2961_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par21">We also provide the RabbitSketch [<xref ref-type="bibr" rid="CR28">28</xref>] library supporting vectorization with SIMD instructions (e.g., SSE/AVX) for fine-grained data parallelization. RabbitSketch includes an efficient hash function calculation with SIMD instructions to compute multiple <italic>k</italic>-mers concurrently for sketching genomes. Furthermore, RabbitSketch integrates highly optimized <italic>robin-hood-hashing</italic> to manipulate the <italic>min-heap</italic> data structure used for MinHash sketches. For pairwise distance computation, we use a block-based vectorized approach to reduce branch misprediction penalties when computing set intersections.</p>
    </sec>
    <sec id="Sec5">
      <title>Distance measurement accuracy</title>
      <p id="Par22">RabbitTClust includes two distance measures for estimating pairwise similarities between genomes. The default distance measure of <italic>clust-mst</italic> and <italic>clust-greedy</italic> are <italic>Mash distance</italic> and <italic>AAF distance</italic> (assembly and alignment-free distance), respectively. Ondov et al. [<xref ref-type="bibr" rid="CR10">10</xref>] analyzed the relationship between ANI and <italic>Mash distance</italic> for a collection of Escherichia genomes. The MinHash sketch strategy used in the <italic>k</italic>-mer-based <italic>Mash distance</italic> is a locality-sensitive hashing technique. Since the probability of a hash collision is higher between more similar elements [<xref ref-type="bibr" rid="CR29">29</xref>], this approach can provide a tight estimation when the actual Jaccard index is large [<xref ref-type="bibr" rid="CR30">30</xref>]. We use simulated datasets with known mutation rates to further explore the relationship between mutation rate and <italic>Mash distance</italic>. Simulated datasets are generated by mutating each nucleotide whereby the mutation rate has an equal possibility of insertion, deletion, and substitution. We set the simulated genome sequence length to 10,000,000, and the mutation rates vary from 1 to 10% in order to simulate highly similar genomes. Figure <xref rid="Fig5" ref-type="fig">5</xref> shows the relationship between <italic>Mash distance</italic> and mutation rate of different <italic>k</italic>-mer and sketch sizes. In each sub-figure, the probability of deviation from the true mutation rate grows as the actual mutation rate grows (i.e., actual similarity decreases). It can be seen that <italic>Mash distance</italic> achieves a tighter estimation of the mutation rate with a larger sketch size and smaller <italic>k</italic>-mer sizes generally decrease the <italic>Mash distance</italic> below the actual mutation rate. Thus, <italic>k</italic>-mer size and sketch size should be chosen large enough for good distance accuracy. More details about choosing <italic>k</italic>-mer size and sketch size are discussed in the â<xref rid="Sec10" ref-type="sec">Methods</xref>â section. The simulation of genomes is in a perfect random model without accounting for compositional characteristics like GC bias and GC mutation difference. Still, the practical experiences show a high correspondence between <italic>Mash distance</italic> and mutation rate with relatively low root-mean-square error. Previous work [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR31">31</xref>] also suggested that a random model of <italic>k</italic>-mer occurrence was not entirely unreasonable.<fig id="Fig5"><label>Fig. 5</label><caption><p>Relationship between the mutation rate and <italic>Mash distance</italic> for different <italic>k</italic>-mer values and sketch sizes. Rows represent different <italic>k</italic>-mer sizes, and columns represent different sketch sizes. The <italic>x</italic>-axis is the actual mutation rate, and the y-axis is the <italic>Mash distance</italic>. The red dotted line indicates a perfect model relationship <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mash\ distance = mutation\ rate$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>M</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>h</mml:mi><mml:mspace width="4pt"/><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>c</mml:mi><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mspace width="4pt"/><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq7.gif"/></alternatives></inline-formula>. The numbers at the bottom right of each plot are the root-mean-square error versus the perfect model</p></caption><graphic xlink:href="13059_2023_2961_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par23"><italic>AAF distance</italic> measurement [<xref ref-type="bibr" rid="CR32">32</xref>, <xref ref-type="bibr" rid="CR33">33</xref>] is based on containment similarity for genome redundancy detection. Similarity estimation by containment coefficients is suitable for genome redundancy detection especially when the lengths of genomes are very different. When sketch size is fixed and genomes are of different size, the distributions of the hash values within the sketches can be very different. Thus, matching rates of hashes in the two sketch sets can be much smaller than the true containment similarity between the two considered genomes. Thus, a fixed-size-sketch-based method like <italic>Mash distance</italic> is not suitable for accurate containment similarity estimation of genomes with significantly different sizes. The sketch sizes of containment coefficients are proportional to the length of the original genomes, ensuring that the hash values in sketches have a similar distribution. We have simulated a dataset called <italic>simulate-Bact</italic> to evaluate the performance of the <italic>AAF distance</italic> measurement based on the containment similarity for duplication detection. <italic>Simulate-Bact</italic> (2.6GB) consists of 400 genomes comprising 8 clusters with 50 genomes per cluster. The genomes in a cluster are generated by cutting random proportions ranging from 0.0 to 1.0 in length of an original seed bacterial genome. The similarities between the seed genomes are very low. Thus, the inter-cluster similarity is very low as well. Since the seed genomes totally contain the other genomes within a cluster, for duplication and redundancy consideration, the similarities between the seed genome and other genomes are 100% in theory. The Normalized Mutual Information (NMI) score is used to evaluate the accuracy of the clustering result with a value between 0 (poor) and 1.0 (perfect). As is shown in Table <xref rid="Tab2" ref-type="table">2</xref>, using a distance threshold of 0.001 and a suitable sketch size (1/1000 of the genome length), the <italic>AAF distance</italic> with variable sketch sizes can achieve a high NMI score of 0.983. The number of clusters generated using the <italic>Mash distance</italic> is much larger than the actual cluster number since the lower match rate of sketch hash values leads to over-estimated distances. In conclusion, the variable-sketch-size-based <italic>AAF distance</italic> performs much better than the fixed-sketch-sized-based <italic>Mash distance</italic> for genomes of very different lengths.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Evaluation of <italic>Mash distance</italic> and <italic>AAF distance</italic> on the <italic>Simulate-Bact</italic> dataset with distance threshold 0.001</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Sketch Size</th><th align="left">Time(s)</th><th align="left">Memory (GB)</th><th align="left">NOC<sup>a</sup></th><th align="left">NMI</th></tr></thead><tbody><tr><td align="left" rowspan="3"><italic>Mash distance</italic> with fixed sketch size</td><td align="left">1000</td><td align="left">2.220</td><td align="left">1.31</td><td align="left">216</td><td align="left">0.568</td></tr><tr><td align="left">5000</td><td align="left">2.594</td><td align="left">1.32</td><td align="left">212</td><td align="left">0.569</td></tr><tr><td align="left">10,000</td><td align="left">3.135</td><td align="left">1.34</td><td align="left">211</td><td align="left">0.570</td></tr><tr><td align="left" rowspan="3"><italic>AAF distance</italic> with variable sketch size</td><td align="left"><inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * (1/10,000)$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq8.gif"/></alternatives></inline-formula></td><td align="left">2.057</td><td align="left">1.27</td><td align="left">31</td><td align="left">0.899</td></tr><tr><td align="left"><inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * P_{d}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq9.gif"/></alternatives></inline-formula><sup>b</sup></td><td align="left">2.199</td><td align="left">1.30</td><td align="left">26</td><td align="left">0.911</td></tr><tr><td align="left"><inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * (1/1,000)$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq10.gif"/></alternatives></inline-formula></td><td align="left">2.655</td><td align="left">1.32</td><td align="left">12</td><td align="left">0.983</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>NOC: Number Of Clusters</p><p><sup>b</sup><inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d$$\end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq11.gif"/></alternatives></inline-formula>: Default sampling proportion, which serves as 1/6969 on this dataset</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec6">
      <title>Clustering accuracy</title>
      <p id="Par24"><italic>clust-mst</italic> and <italic>clust-greedy</italic> have different characteristics and are suitable for different application scenarios. <italic>clust-mst</italic> is equivalent to popular single-linkage hierarchical clustering, which requires computation of all pairwise distances among input genomes. <italic>clust-greedy</italic> is based on heuristic greedy incremental clustering and does not need to compute all pairwise distances. Thus, <italic>clust-mst</italic> often has higher accuracy but longer runtime, especially when the number of input genomes (<italic>N</italic>) is large. For <italic>clust-greedy</italic>, runtimes are affected by the distance threshold parameter. It needs to compute the distances between incoming genomes and the representative genomes. Lower distance thresholds result in more representative genomes, thus increasing runtimes.</p>
      <p id="Par25">For a series of genomes with the same ancestor but with relatively low similarities, the clustering result of <italic>clust-greedy</italic> may have low accuracy. Note that <italic>clust-greedy</italic> selects the longest genome as the representative genome for a cluster. Thus, it can not cluster these genomes together when the ancestor is not the longest genome. We simulated the five random seed genome sequences and generated 30 sequences from each seed genome with a mutation rate of 0.045. The lengths of these sequences are about 10,000,000, and substitution and indel are of equal possibility. The mutation rate of each sequence against its seed sequence is less than 0.05. For sequences generated from the same seed sequence, the pairwise mutation rates are larger than 0.05. The similarities between the randomly generated seed sequences are very low. Thus, the inter-cluster distances are almost 1.0. When clustering these 155 genome sequences with a distance threshold of 0.05, <italic>clust-mst</italic> clusters these 155 genomes into 5 clusters and achieves an NMI score of 1.0. However, <italic>clust-greedy</italic> generates much more clusters and merely achieves an NMI score of 0.487. Because there are insert mutations, the seed sequences may not be the longest in the ground truth cluster. Thus, <italic>clust-greedy</italic> can not label the seed sequences as representatives which leading to poor clustering results.</p>
      <p id="Par26">When a genome is labeled as redundant, <italic>clust-greedy</italic> will ignore the relationship with other genomes except for its representative. Thus, compared to the <italic>clust-mst</italic>, it can not chain clusters by the distance between redundant genomes from different clusters. As a consequence, <italic>clust-greedy</italic> tends to generate more clusters. On the one hand, it may lose some genome connections since the absence of distance computation among redundant genomes. On the other hand, it only suffers negligibly from noisy chaining of clusters caused by low-quality assembled genomes, thus, achieving higher purity. This feature makes <italic>clust-greedy</italic> more suitable than <italic>clust-mst</italic> to deal with low-quality datasets. Furthermore, the default distance measure of <italic>clust-greedy</italic> is the <italic>AAF distance</italic>, which is more accurate for estimating the containment coefficient of genomes with very different lengths. Thus, it is more suitable for duplication or redundancy detection.</p>
    </sec>
    <sec id="Sec7">
      <title>Filtering redundant genomes</title>
      <p id="Par27">In some cases, there are redundant submissions to the NCBI RefSeq bacterial database. To identify genomes with identical nucleotide content but different assembly accessions, we can simply set the distance threshold parameter to zero. On <italic>bact-RefSeq</italic>, <italic>clust-greedy</italic> identifies 1269 identical genomes distributed in 612 clusters. The list of the <italic>assembly-accession</italic>, <italic>bioProject</italic>, <italic>bioSample</italic>, <italic>species-taxid</italic>, and <italic>organism-name</italic> of these 1269 genomes is shown in Additional file <xref rid="MOESM2" ref-type="media">2</xref>. Most of these clusters consist of genomes with the same <italic>species-taxid</italic>, although some genomes with identical nucleotide content also have different <italic>species-taxid</italic>s. For example, the <italic>species-taxid</italic> of GCF_003479085.1 and GCF_902364055.1 are 2292204 and 1544, respectively. This may cause ambiguous results when such genomes are used as reference genomes in other applications. Furthermore, different distance thresholds correspond to different degrees of redundancy detection; e.g., higher distance thresholds lead to bigger clusters with more genomes being labeled redundant. To build a non-redundant reference dataset for reference-based applications, increasing the distance threshold will retain fewer representative genomes and reduce the intra-species diversity of reference genomes.</p>
      <p id="Par28">By analyzing <italic>clust-greedy</italic> results, low-quality or mislabeled redundant genomes can be identified by analyzing intra-cluster quality. We use purity and coverage to evaluate the intra-cluster quality. Purity of a cluster is the ratio of the maximum species number to the total genome number in this cluster. The coverage is the ratio between the total number of genomes in the clusters (including at least two genomes) and the number of entire genomes. Note that purity is meaningless when coverage is very low since the purity score will be 1.0 if each cluster contains only one genome. We call the clusters with purity less than 1.0 unpurified clusters.</p>
      <p id="Par29">In an unpurified cluster, the genomes with the maximum number of <italic>species-taxid</italic> are labeled as dominant genomes, while the others are labeled as impurity genomes. We run <italic>clust-greedy</italic> on <italic>bact-Genbank</italic> with a distance threshold of 0.001. The overall purity is 0.996, and the coverage is 0.907. Purity is relatively meaningful since the coverage shows that less than 10% of the total genomes serve as a single cluster. With a small distance threshold (e.g., 0.001), an unpurified cluster contains genomes that are highly similar but with different <italic>species-taxid</italic>s. In this scenario, we focus on the impurity genomes in the unpurified clusters. A total of 4289 impurity genomes in <italic>bact-Genbank</italic> have different <italic>species-taxid</italic>s with their dominant genomes. By comparing the taxonomic identity of genome assemblies from NCBI report [<xref ref-type="bibr" rid="CR34">34</xref>], we can find that 74.4% of these 4289 impurity genomes have different <italic>species-taxid</italic> and <italic>best-match-species-taxid</italic>. The list of the <italic>assembly-accession</italic>, <italic>species-taxid</italic>, and <italic>best-match-species-taxid</italic> of these 4289 genomes is shown in Additional file <xref rid="MOESM3" ref-type="media">3</xref>. In these 4289 impurity genomes, 965 genomes have different <italic>taxid</italic>s in genus rank with their dominant genomes, and even 46 genomes have different <italic>taxid</italic>s in family rank. The genomes with different <italic>taxid</italic>s in family rank are potentially mislabeled. The list of the <italic>assembly-accession</italic> and the <italic>taxid</italic>s in different ranks are shown in Additional file <xref rid="MOESM4" ref-type="media">4</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par30">RabbitTClust is both efficient and highly scalable. It is able to cluster the whole NCBI Genbank bacteria assembled genomes (4.0 TB in FASTA format with 1,009,738 genome files) with a limited memory footprint in practical time. The sketch-based distance measurement makes the distance computation orders-of-magnitude faster than traditional alignment-based algorithms. The memory footprint is only linear in terms of sketch size rather than the square of the genome length. In addition, the streaming strategy of MST generation only needs a linear memory footprint in terms of the number of genomes and does not require to store the whole distance matrix. All time-consuming kernels are highly optimized by means of multi-threading, fast I/O, and SIMD vectorization to take full advantage of compute resources on modern multi-core architectures.</p>
    <p id="Par31">Note that RabbitTClust has been designed for clustering long genomic genomes, but is not effective for short sequences (e.g., short sequencing reads) and highly degenerate genomic sequences. For short sequences, the classical CD-HIT and UCLUST are more suitable considering both efficiency and accuracy. There are two main reasons that make the sketch-based distance measurement less accurate for highly degenerate genome sequences, such as sequences with high mutation rates. The accuracy of distance estimation will decrease as the actual similarities of genomes decrease, especially when the sketch size is significantly less than the genome size [<xref ref-type="bibr" rid="CR30">30</xref>]. Figure <xref rid="Fig5" ref-type="fig">5</xref> shows that the deviation from actual distance grows as the true similarity decreases. Increasing the sketch size can alleviate the decrease of the accuracy but lead to a decrease in efficiency. In general, <italic>k</italic>-mer-based distance measurements will be easily affected by high mutation rates in degenerate sequences since a single mutation will mutate <italic>k</italic> consecutive <italic>k</italic>-mers. Our future work therefore includes the integration of alternatives for distance measurement (such as strobemers [<xref ref-type="bibr" rid="CR35">35</xref>]) in RabbitTClust to improve the clustering quality for degenerate sequences.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par32">RabbitTClust is a toolkit that can efficiently cluster long genome sequences with high similarity together with MST-based and greedy incremental clustering strategies. Users can choose between two modules (<italic>clust-mst</italic> and <italic>clust-greedy</italic>) for different application scenarios. The traditional MinHash sketching algorithm has high efficiency and provides an estimation for the Jaccard similarity. However, the distance estimation for genomes with significantly different lengths has only insufficient accuracy. We thus employ <italic>AAF distance</italic> measurements with variable sketch size to accurately estimate containment similarity, especially for redundancy detection of genomes with different sizes. Our MST-based clustering module uses <italic>Mash distance</italic> by default, while the greedy incremental clustering module employs <italic>AAF distance</italic>. RabbitTClust can be used to cluster large collections of long genomic sequences with relatively high similarity, including but not limited to bacterial databases. <italic>clust-mst</italic> can cluster the whole RefSeq bacterial genomes, which can be used for species boundary evaluation of prokaryotes. <italic>clust-greedy</italic> can filter out different degrees of redundancy by using suitable distance thresholds. For many reference-based applications, such as fastv, RabbitUniq, and Mash screen, removing redundant reference genomes can reduce the obfuscation of results. Furthermore, with a distance threshold of zero, <italic>clust-greedy</italic> can find genomes with identical nucleotide content and thus identify redundant or mislabeled genome submissions.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>RabbitTClust pipeline</title>
      <p id="Par33">The <italic>clust-mst</italic> pipeline (see Fig.Â <xref rid="Fig1" ref-type="fig">1</xref>) consists of four parts: (i) sketch creation, (ii) pairwise genome distance computation, (iii) MST generation, and (iv) cluster generation. The <italic>clust-greedy</italic> pipeline (see Fig.Â <xref rid="Fig2" ref-type="fig">2</xref>) consists of three parts: (i) sketch creation, (ii) distance computation, and (iii) greedy incremental clustering. Both of them support two types of input: a single genome file or a list of genome files. RabbitFX and kseq are used for efficient sequence parsing of the single genome file or the file list, respectively.</p>
      <p id="Par34">After parsing, <italic>k</italic>-mers (i.e., substrings of length <italic>k</italic>) are generated by decomposing the genome sequences and their reverse complements in a sliding-window way. Only canonical <italic>k</italic>-mers (the smallest hash value between a <italic>k</italic>-mer and its reverse complement) are used to create sketches. <italic>S</italic> minimum hash values are chosen to compose a sketch where <italic>S</italic> denotes the sketch size. Note that the hash function should be uniform and deterministic [<xref ref-type="bibr" rid="CR9">9</xref>]. Uniformity ensures that hash values converted from the input <italic>k</italic>-mer set of a genome are mapped evenly across the hash value space, which provides a representative sampling of MinHash sketches. Determinism ensures that the same input <italic>k</italic>-mer always produces the same hash value. Considering efficiency and the features mentioned above, we use the MurmurHash3 function in RabbitTClust. MurmurHash3 [<xref ref-type="bibr" rid="CR36">36</xref>] is a popular non-cryptographic hash function that converts <italic>k</italic>-mers to integers. To improve efficiency, we include a vectorized implementation of MurmurHash3 with SIMD instructions which manipulates multiple <italic>k</italic>-mers concurrently [<xref ref-type="bibr" rid="CR37">37</xref>].</p>
      <p id="Par35">Distance computation in <italic>clust-mst</italic> is used to estimate pairwise genome similarities for each pair of sketches. MST generation is done by using a streaming strategy together with distance computation in parallel, as illustrated in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>. After the MST is constructed, the final clusters are generated by cutting off edges over the threshold in the MST.</p>
      <p id="Par36">For <italic>clust-greedy</italic>, the sketches are sorted by genome length in descending order. The sketch corresponding to the longest genome is added to the representative set. Each sketch in this set represents a cluster. For each remaining sketch, we compute the distances between the current incoming sketch and all representative sketches. If the distance between this incoming sketch and representative sketches <italic>A</italic> is the minimum distance and is less than the threshold, the incoming genome is added to the cluster <italic>A</italic>. If all distances to representative sketches are over the threshold, the incoming sketch is used as the representative of a new representative sketch set. Clustering is finished after all the remaining sketches are processed.</p>
    </sec>
    <sec id="Sec12">
      <title>Sketching and distance measurement</title>
      <p id="Par37">We rely on sketching of <italic>k</italic>-mers for similarity estimation among input genome sequences based on their <italic>Mash distance</italic> [<xref ref-type="bibr" rid="CR10">10</xref>] or <italic>AAF distance</italic> [<xref ref-type="bibr" rid="CR33">33</xref>] using resemblance Jaccard or containment coefficients. This reduces the size of the input data set by several orders-of-magnitude (the sketch size for Jaccard coefficient and the mean value of variable sketch sizes for containment coefficient are 1000 <italic>k</italic>-mers per genome by default).</p>
      <p id="Par38">Consider two genomic sequences <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq12.gif"/></alternatives></inline-formula> and <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq13.gif"/></alternatives></inline-formula>. The Jaccard Index <italic>J</italic> for their resemblance can be approximated by <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J(G_1,G_2) \approx J(S(G_1),S(G_2)) = |S(G_1)\cap S(G_2)|/|S(G_1)\cup S(G_2)|$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>J</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â</mml:mo><mml:mi>J</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â©</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>âª</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq14.gif"/></alternatives></inline-formula> where <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(G_1)$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq15.gif"/></alternatives></inline-formula> and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(G_2)$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq16.gif"/></alternatives></inline-formula> are hash value sets of the two subsampled <italic>k</italic>-mer sketches of <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq17.gif"/></alternatives></inline-formula> and <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq18.gif"/></alternatives></inline-formula>. Mash [<xref ref-type="bibr" rid="CR10">10</xref>] proposed <italic>Mash distance</italic> based on a Poisson distribution of the point mutation rate defined as <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D=-\frac{1}{k} \ln \frac{2J}{1+J}$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>J</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq19.gif"/></alternatives></inline-formula>, where <italic>k</italic> is the <italic>k</italic>-mer size and <italic>J</italic> is Jaccard index. <italic>Mash distance</italic> correlates well with the ANI as <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D\approx 1 - ANI$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mi>D</mml:mi><mml:mo>â</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>N</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq20.gif"/></alternatives></inline-formula>.</p>
      <p id="Par39">Fixed-size sketches are suitable for computing the resemblance Jaccard coefficient when the lengths of genomes are roughly equal but not in the case of significantly different sizes. When de-duplicating, we also offer a containment analysis option to find duplicate sequences of different sizes. Compared to resemblance, the variable-size-sketch-based containment method is more suitable for genomes with significantly different sizes. The hash value distributions of fixed-size sketches are different when the genomes are of very different sizes, so the matching rate of hashes in the two sketch sets is much smaller than the containment similarity of original genomes, see Fig.Â <xref rid="Fig6" ref-type="fig">6</xref>b. Containment coefficient of <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq21.gif"/></alternatives></inline-formula> in <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq22.gif"/></alternatives></inline-formula> is approximated by <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c\approx |S(G_1)\cap S(G_2)|/|S(G_1)|$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>â</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â©</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq23.gif"/></alternatives></inline-formula>, whereby sketch sizes are proportional to the size of the respective genomes [<xref ref-type="bibr" rid="CR38">38</xref>]. <italic>AAF distance</italic> is defined as <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=-\frac{1}{k}\ln c$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq24.gif"/></alternatives></inline-formula> where <italic>c</italic> is the containment coefficient [<xref ref-type="bibr" rid="CR32">32</xref>]. As is shown in Fig.Â <xref rid="Fig6" ref-type="fig">6</xref>b, the matching rate of minimum hashes in the sketch of the smaller genome is similar to the containment similarity between the two genomes.<fig id="Fig6"><label>Fig. 6</label><caption><p>Differences between fixed-size and variable-size MinHash sketches on <italic>k</italic>-mer sets with similar sizes (<bold>a</bold>) and very different sizes (<bold>b</bold>). The pair of shaded circles represent two <italic>k</italic>-mer sets (set <italic>A</italic> and <italic>B</italic>) and the overlapping part represents their intersection. The diagrams below each pair circle are the hash sets converted from the <italic>k</italic>-mer sets. The space of hashes is <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b$$\end{document}</tex-math><mml:math id="M50"><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq25.gif"/></alternatives></inline-formula> with <italic>b</italic>-bit hash values, leading to a numerical range of hash values between 0 and <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b-1$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq26.gif"/></alternatives></inline-formula>. The points on horizontal lines denote the hash values from set <italic>A</italic> and <italic>B</italic>. Solid points are minimum hash values that compose the sketches, while hollow points are hash values not in sketches. Solid arrows represent matching of hashes between two sketches, while dotted lines represent matching not in sketches. In <bold>a</bold>, sets <italic>A</italic> and <italic>B</italic> have similar size, and sketches are composed of 7 minimum hashes (solid points). <italic>A</italic> and <italic>B</italic> can get high resemblance from sketches since the distributions of sketch hashes are similar across space <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b$$\end{document}</tex-math><mml:math id="M54"><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq27.gif"/></alternatives></inline-formula>. In <bold>b</bold>, set <italic>B</italic> is three times the size of set <italic>A</italic> and contains <italic>A</italic> totally. The larger set <italic>B</italic> thus saturates the space more densely. In (<inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_1$$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mi>b</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq28.gif"/></alternatives></inline-formula>), sketches are both of fixed size of 7. The match rate (1/7) of minimum hashes in the sketches (solid arrow) is much smaller than the containment similarity (7/7) of the original <italic>k</italic>-mer sets. In (<inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_2$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq29.gif"/></alternatives></inline-formula>), sketch sizes are variable and in proportion to the size of respective <italic>k</italic>-mer sets. Thus, the sketch size (number of solid points) of <italic>A</italic> is still 7, while the sketch size of <italic>B</italic> is now 21. The matching rate of minimum hashes in set <italic>A</italic> is similar to the containment similarity between <italic>A</italic> and <italic>B</italic></p></caption><graphic xlink:href="13059_2023_2961_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
    <sec id="Sec13">
      <title>Minimum spanning tree for single-linkage hierarchical clustering</title>
      <p id="Par40">Hierarchical clustering requires computation of all pairwise distances. The dimension of the distance matrix is <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N^2)$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq30.gif"/></alternatives></inline-formula>, where <italic>N</italic> is the number of genomes. It is unpractical to store the whole matrix in memory for large input datasets. However, the memory footprint of the MST is only linear with respect to the number of genomes which is significantly smaller than the whole distance matrix. Thus, we have designed a parallelized streaming approach for MST generation. Subsequently, the MST is chosen to generate clusters by cutting off the edges whose lengths are over a predefined threshold.</p>
      <p id="Par41">Our streaming method is inspired by the edge-partition-based distributed MST algorithm [<xref ref-type="bibr" rid="CR39">39</xref>]. The all-to-all distance matrix can be considered as a complete graph. In this complete graph, vertices express genomes, and the weights of edges express their pairwise distances. When the graph is partitioned into several sub-graphs, any edge that does not belong to the MST of a sub-graph containing the edge does not belong to the MST of the original graph [<xref ref-type="bibr" rid="CR40">40</xref>]. This property guarantees that the MST can be constructed by merging sub-MSTs in streaming fashion, which avoids storing the whole distance matrix in memory. In our implementation, the sub-MSTs are concurrently constructed using multiple threads. As shown in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>, <italic>t</italic> rows of the distance matrix compose a sub-graph. <italic>P</italic> sub-MSTs are generated from <italic>P</italic> sub-graphs concurrently, where <italic>P</italic> is the thread number. <italic>P</italic> sub-MSTs are updated as new pairwise distances are calculated. The final MST is merged from the <italic>P</italic> sub-MSTs after finishing the whole distance computing.</p>
      <p id="Par42">For runtime consideration, the distance computation and sub-MST generation and updating are implemented in parallel by multiple threads. Only <italic>P</italic> sub-MSTs and <italic>P</italic> sub-graphs are stored in memory for MST generation. For <italic>N</italic> input genomes, the magnitude of sub-graphs and sub-MSTs is <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t \cdot N$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mi>t</mml:mi><mml:mo>Â·</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq31.gif"/></alternatives></inline-formula> and <italic>N</italic>, respectively. For <italic>P</italic> threads, the total memory footprint is of a magnitude of <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(P \cdot (t+1) \cdot N)$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>P</mml:mi><mml:mo>Â·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>Â·</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq32.gif"/></alternatives></inline-formula>. The parameter <italic>t</italic> is used to control the dimension of the sub-graphs which is set to 8 by default. Since <italic>P</italic> and <italic>t</italic> are much smaller than <italic>N</italic>, the total memory footprint is typically linear in the number of genomes.</p>
      <p id="Par43">The time consumption of generating clusters from the MST is comparatively small. Since the MST for a dataset will not change as long as the sketch parameters do not change, we store the MST information into an output file. Clusters with different thresholds can be generated from the stored MST file without re-generating the MST again. Users can run with <italic>-f</italic> option to use the stored MST file as an input.</p>
      <p id="Par44">Note that the MST-based clustering strategy is equal to the single-linkage hierarchical clustering, which may chain two separated clusters together by the noise point. <italic>clust-mst</italic> takes into account the local density of each genome vertex [<xref ref-type="bibr" rid="CR41">41</xref>]. For each vertex, the local density is defined as the number of vertices with a distance under the threshold. For each cluster generated by cutting off the over threshold edges of the MST, in default the vertex, <italic>x</italic>, is labeled as noise when its local density <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$dens(x) &lt; min(Q_1, 2)$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq33.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_1$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>Q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq34.gif"/></alternatives></inline-formula> is the first quartile. <italic>clust-mst</italic> will then cut the edges with the noise vertices to reduce the impact of chaining two clusters together by noise vertices.</p>
    </sec>
    <sec id="Sec14">
      <title>Benchmarking clustering accuracy</title>
      <p id="Par45">We use purity and NMI (Normalized Mutual Information) score [<xref ref-type="bibr" rid="CR42">42</xref>] to assess the quality of clustering results. The ground truth of bacteria genomes from NCBI Refseq and Genbank databases are the species taxonomy identifier (<italic>species-taxid</italic>) from the assembly summary report files.</p>
      <p id="Par46">Purity is used to measure the degrees of mixing for each cluster. A purity score of 1.0 means the elements in a predicted cluster are all from the same real class. For the predicted clusters <italic>P</italic>, the ground truth class <italic>G,Â and the total genome number N</italic>, the purity can be computed by Eq. <xref rid="Equ1" ref-type="disp-formula">1</xref>. However, purity does not penalize scattered cluster result leading to a purity score of 1.0 if each element serves as a single cluster.</p>
      <p id="Par47">NMI is a normalization of the Mutual Information (MI) score to scale the results between 0 (no mutual information) and 1.0 (perfect correlation). Equation (<xref rid="Equ2" ref-type="disp-formula">2</xref>) describes the MI of predicted clusters <italic>P</italic> and ground truth class <italic>G</italic> to reveal the mutual dependency between <italic>P</italic> and <italic>G</italic>, where <italic>N</italic> denotes the total number of genomes. MI is normalized by the average entropy of <italic>P</italic> and <italic>G</italic> to scale the results between 0 and 1. Entropy and NMI are computed as shown in Eqs. (<xref rid="Equ3" ref-type="disp-formula">3</xref>) and (<xref rid="Equ4" ref-type="disp-formula">4</xref>). NMI score computation is implemented with scikit-learn [<xref ref-type="bibr" rid="CR43">43</xref>]. The scripts are publicly available in our repositoryâs evaluation directory [<xref ref-type="bibr" rid="CR44">44</xref>].<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} purity\left( P;G \right) = \frac{1}{N}\sum _{p\in P}^{}\max _{g \in G}\left| p \cap g \right| \end{aligned}$$\end{document}</tex-math><mml:math id="M70" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>â</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>â</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:munder><mml:mfenced close="|" open="|"><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} MI\left( P;G \right) =\sum _{p\in P}^{}\ \sum _{g\in G}^{}\frac{|p\cap g|}{N}\,log\left( \frac{N|p\cap g|}{|p||g|} \right) \end{aligned}$$\end{document}</tex-math><mml:math id="M72" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>â</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mspace width="4pt"/><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>â</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac><mml:mspace width="0.166667em"/><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mfrac></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} H\left( X \right) = - \sum _{x \in X}^{} \frac{|x|}{N}\ \log \left( \frac{|x|}{N}\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M74" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>X</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>â</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac><mml:mspace width="4pt"/><mml:mo>log</mml:mo><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} NMI\left( P;G \right) = \frac{MI\left( P;G \right) }{\left[ H\left( P \right) + H\left( G \right) \right] /2} \end{aligned}$$\end{document}</tex-math><mml:math id="M76" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>N</mml:mi><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced></mml:mrow><mml:mrow><mml:mfenced close="]" open="["><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>G</mml:mi></mml:mfenced></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="Sec15">
      <title>Parameters</title>
      <sec id="Sec16">
        <title><italic>k</italic>-mer size</title>
        <p id="Par48">Considering accuracy, the value of <italic>k</italic> is a trade-off between sensitivity and specificity [<xref ref-type="bibr" rid="CR10">10</xref>]. Similarities are more sensitive to smaller <italic>k</italic> since <italic>k</italic>-mers are more likely to match. However, there is also a higher chance that collisions may inflate the proportion of shared <italic>k</italic>-mers when the genome size is large. The probability of a specific <italic>k</italic>-mer appearing in a random nucleotide string of size <italic>L</italic> is <inline-formula id="IEq35"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1-(1-|\Sigma |^{-k})^{L}$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:msup><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Î£</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>L</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq35.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq36"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M80"><mml:mi mathvariant="normal">Î£</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq36.gif"/></alternatives></inline-formula> is the alphabet set (<inline-formula id="IEq37"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma = {A,C,G,T}$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mi mathvariant="normal">Î£</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq37.gif"/></alternatives></inline-formula>). The <italic>k</italic>-mer size should be large enough to avoid too many collisions by chance. On the other hand, since <italic>k</italic> consecutive <italic>k</italic>-mers will be affected by a single mutation nucleotide, as <italic>k</italic> grows, the number of matching <italic>k</italic>-mers between genomes is reduced, leading to lower similarity sensitivity between genomes. The optimal <italic>k</italic>-mer size needs to be large enough to significantly reduce the chance collisions without losing the similarity sensitivity [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
        <p id="Par49">To consider both specificity and sensitivity, RabbitTClust firstly scans all input genomes to identify the largest genome length <inline-formula id="IEq38"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_l$$\end{document}</tex-math><mml:math id="M84"><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq38.gif"/></alternatives></inline-formula> and average genome length <inline-formula id="IEq39"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_a$$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq39.gif"/></alternatives></inline-formula>. The <italic>k</italic>-mer size <italic>k</italic> can be computed by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>, where the <italic>L</italic> is the genome length, and the <italic>q</italic> is the desired probability of observing a random <italic>k</italic>-mer [<xref ref-type="bibr" rid="CR31">31</xref>]. The optimal <italic>k</italic>-mer size <inline-formula id="IEq40"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_o$$\end{document}</tex-math><mml:math id="M88"><mml:msub><mml:mi>k</mml:mi><mml:mi>o</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq40.gif"/></alternatives></inline-formula> is computed by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref> using <inline-formula id="IEq41"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q = 0.0001$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq41.gif"/></alternatives></inline-formula> and <inline-formula id="IEq42"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L = L_l$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq42.gif"/></alternatives></inline-formula>. Furthermore, to protect the accuracy from the chance collisions of <italic>k</italic>-mers, we define a warning <italic>k</italic>-mer size <inline-formula id="IEq43"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq43.gif"/></alternatives></inline-formula> as the lower bound when choosing <italic>k</italic>. <inline-formula id="IEq44"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq44.gif"/></alternatives></inline-formula> is computed using <inline-formula id="IEq45"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q = 0.001$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L = L_l$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq46.gif"/></alternatives></inline-formula> by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>. Users can set a specific <italic>k</italic>-mer size by the option of <inline-formula id="IEq47"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-k$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mo>-</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq47.gif"/></alternatives></inline-formula>, and when the <italic>k</italic>-mer size is smaller than <inline-formula id="IEq48"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq48.gif"/></alternatives></inline-formula>, the <italic>k</italic>-mer size will be reset to the <inline-formula id="IEq49"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_o$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>k</mml:mi><mml:mi>o</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq49.gif"/></alternatives></inline-formula>.<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k=\big \lceil \log _{\left| \Sigma \right| }\left( L\left( 1-q \right) /q\right) \big \rceil \end{aligned}$$\end{document}</tex-math><mml:math id="M108" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">â</mml:mo></mml:mrow><mml:msub><mml:mo>log</mml:mo><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Î£</mml:mi></mml:mfenced></mml:msub><mml:mfenced close=")" open="("><mml:mi>L</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>q</mml:mi></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:mi>q</mml:mi></mml:mfenced><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">â</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec17">
        <title>Sketch size</title>
        <p id="Par50">MinHash [<xref ref-type="bibr" rid="CR38">38</xref>] is a fast method to estimate the Jaccard similarity of two sets. It has been proven effective in large-scale genome distance estimation [<xref ref-type="bibr" rid="CR10">10</xref>]. Thus, we also adopted this method when designing RabbitTClust. The sketch size is the number of minimum hash values in the MinHash sketch. The memory footprint of the sketch for each genome is about 8KB when the sketch size is set to 1000 (each hash value is saved as an unsigned 64-bit integer). In addition to the memory footprint, the sketch size also influences runtime and accuracy. The MinHash algorithm in RabbitTClust maintains a minHash-heap with complexity <inline-formula id="IEq50"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(L \cdot log|S|)$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mo>Â·</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq50.gif"/></alternatives></inline-formula> where |<italic>S</italic>| is sketch size, and <italic>L</italic> is the genome length. Furthermore, the time of distance computation is linear with respect to the sketch size since it is based on computing the intersections of sets.</p>
        <p id="Par51">The distance estimation accuracy of a pair of genomes improves when using a larger sketch size. Choosing the sketch size is thus a trade-off between the accuracy of distance estimation and efficiency. The memory footprint of sketches and the run time of computing Jaccard or containment are linear in terms of the sketch size. Error bounds decrease with relation to an exponential of the sketch size [<xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR45">45</xref>]. For the distance accuracy, as the initial growing stage of sketch size, the distance estimation accuracy increases a lot. But as the sketch size grows further, the distance estimation accuracy increases slightly. RabbitTClust uses a sketch size of 1000 by default, which is a good balance between accuracy and efficiency in most cases.</p>
        <p id="Par52">The sketch size is in proportion with the genome length for the variable-sized sketch of containment coefficient. The variable sketch size is computed as <inline-formula id="IEq51"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|S| = L \cdot P$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mi>L</mml:mi><mml:mo>Â·</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq51.gif"/></alternatives></inline-formula>, where <italic>L</italic> is the specific genome length and <italic>P</italic> is the sample proportion. The default sampling proportion <inline-formula id="IEq52"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d$$\end{document}</tex-math><mml:math id="M114"><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq52.gif"/></alternatives></inline-formula> is computed as <inline-formula id="IEq53"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d = 1000 / L_a$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1000</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq53.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq54"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_a$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq54.gif"/></alternatives></inline-formula> is the average genome length (average sketch size is 1000). The sketch size and sample proportion can also be specified by <italic>-s</italic> and <italic>-c</italic> options, respectively.</p>
      </sec>
      <sec id="Sec18">
        <title>Distance threshold</title>
        <p id="Par53">For <italic>clust-mst</italic>, the time consumption of generating clusters from the MST is negligible; i.e., its runtime changes little with different thresholds. However, for <italic>clust-greedy</italic> the distance threshold dramatically influences the number of pairwise distance computations; i.e., a smaller distance threshold will generate fewer redundant genomes and more clusters. More clusters in turn results in more pairwise distances computation. Thus, runtime of <italic>clust-greedy</italic> increases with a lower distance threshold.</p>
        <p id="Par54">The MinHash algorithm is a kind of LSH (Locality Sensitive Hashing) with high estimation accuracy for highly similar elements but is less accurate for dissimilar elements [<xref ref-type="bibr" rid="CR30">30</xref>]. To achieve high cluster accuracy, the distance threshold cannot be too large. With the default sketch size of 1000, the recommended distance threshold should be less than 0.1 with an acceptable distance estimated error. A larger sketch size should be used for higher distance thresholds.</p>
        <p id="Par55">For clustering at the species rank of prokaryotic genomes, the 0.05 distance threshold is used as recommended in Mash and fastANI. Our evaluation shows that <italic>clust-mst</italic> achieves the best performance on the <italic>Bacteria</italic> dataset with a distance threshold around of 0.05 (see Fig.Â <xref rid="Fig7" ref-type="fig">7</xref>).<fig id="Fig7"><label>Fig. 7</label><caption><p>Evaluation of distance threshold with different sketch sizes for <italic>clust-mst</italic> on <italic>bact-RefSeq</italic> dataset (s100 in the figure means the sketch size is 100)</p></caption><graphic xlink:href="13059_2023_2961_Fig7_HTML" id="MO12"/></fig></p>
        <p id="Par56">For <italic>clust-greedy</italic>, the distance measurement is <italic>AAF distance</italic> corresponding to containment similarity. Different thresholds correspond to different degrees of redundancy. Users can choose different thresholds to filter out various degrees of redundancy by the option of <italic>-d</italic>.</p>
        <p id="Par57">RabbitTClust determines a valid range of distance thresholds by the <italic>k</italic>-mer size accompanied with sketch size (for <italic>Mash distance</italic>) or sampling proportion (for <italic>AAF distance</italic>). For <italic>Mash distance</italic>, consider the <italic>k</italic>-mer size <italic>k</italic> and sketch size <italic>S</italic>. The minimum scale interval of Jaccard index is computed by <inline-formula id="IEq55"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J_{m} = 1 / S$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq55.gif"/></alternatives></inline-formula>, and the maximum distance threshold is determined by <inline-formula id="IEq56"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max} = -\frac{1}{k} \ln \frac{2j_{m}}{1+j_{m}}$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>j</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq56.gif"/></alternatives></inline-formula>. For <italic>AAF distance</italic>, consider the <italic>k</italic>-mer size <italic>k</italic>, minimum genome length <inline-formula id="IEq57"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m}$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq57.gif"/></alternatives></inline-formula> and sampling proportion <italic>P</italic>. For variable sketch sizes, the upper bound of the minimum scale interval of containment coefficient is computed as <inline-formula id="IEq58"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{m} = 1 / (L_{m} \cdot P)$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>Â·</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq58.gif"/></alternatives></inline-formula>. The maximum recommended distance threshold is then determined by <inline-formula id="IEq59"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max}= -\frac{1}{k} \ln C_{m}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq59.gif"/></alternatives></inline-formula>. The chosen distance threshold should be less than the <inline-formula id="IEq60"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max}$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq60.gif"/></alternatives></inline-formula> in order to generate the clusters in a valid range.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2961_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1: Figure S1.</bold> The performance evaluation of RabbitTClust on a 64-core Intel workstation.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2961_MOESM2_ESM.xlsx">
            <caption>
              <p><bold>Additional file 2: Table S1.</bold> The list of the complete RefSeq bacteria genomes with repetitive nucleotide content.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2023_2961_MOESM3_ESM.xlsx">
            <caption>
              <p><bold>Additional file 3: Table S2.</bold> The list of the <italic>species-taxid</italic> and <italic>best-match-species-taxid</italic> of the impurity genomes.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="13059_2023_2961_MOESM4_ESM.xlsx">
            <caption>
              <p><bold>Additional file 4: Table S3.</bold> The list of impurity genomes with different <italic>taxid</italic> in genus and family rank.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="13059_2023_2961_MOESM5_ESM.docx">
            <caption>
              <p><bold>Additional file 5:</bold> Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisherâs Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par58">Kevin Pang was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par59">The review history is available as Additional file <xref rid="MOESM5" ref-type="media">5</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authorsâ contributions</title>
    <p>Z.Y. and W.L. designed and supervised this study. X.X. codesigned this study,developed the software, and performed the analyses. L.Y., H.Z., and B.X. helped to perform the experiment analyses. W.Y., B.N., W.L., and B.S. performed the analyses. X.X., Z.Y., W.L., and B.S. wrote the manuscript. All authors read and approved the final manuscript.</p>
    <sec id="FPar3">
      <title>Authorsâ Twitter handles</title>
      <p id="Par60">Twitter handles: @xiaomingxu530 (Xiaoming Xu).</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is partially supported by NSFC Grants 61972231, 62102231; Shandong Provincial Natural Science Foundation (ZR2021QF089); Engineering Research Center of Digital Media Technology, Ministry of Education, China.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The evaluation of RabbitTClust performance on an Intel workstation is available in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    <p> The genome lists filtered as redundant genome are available in Additional file <xref rid="MOESM2" ref-type="media">2</xref>, <xref rid="MOESM3" ref-type="media">3</xref>, and <xref rid="MOESM4" ref-type="media">4</xref>.</p>
    <p> The <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> datasets are available in <ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nlm.nih.gov/genomes/refseq/">https://ftp.ncbi.nlm.nih.gov/genomes/refseq/</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nlm.nih.gov/genomes/genbank/">https://ftp.ncbi.nlm.nih.gov/genomes/genbank/</ext-link>.</p>
    <p> The download scripts of the <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> datasets are available in <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/download">https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/download</ext-link>.</p>
    <p> The benchmarking scripts to get the purity and NMI are available in <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/evaluation">https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/evaluation</ext-link>.</p>
    <p> All experiments in this manuscript are run using RabbitTClust v.2.0.0. RabbitTClust is freely available from <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust">https://github.com/RabbitBio/RabbitTClust</ext-link> [<xref ref-type="bibr" rid="CR44">44</xref>] under a three-clause BSD license. RabbitTClust is also available at zenodo with DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7852098">https://doi.org/10.5281/zenodo.7852098</ext-link> [<xref ref-type="bibr" rid="CR46">46</xref>].</p>
    <p> RabbitTClust is written in C++ and has been tested on 64-bit Linux Systems.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar4">
      <title>Ethics approval and consent to participate</title>
      <p id="Par61">Not applicable.</p>
    </notes>
    <notes id="FPar5">
      <title>Consent for publication</title>
      <p id="Par62">Not applicable.</p>
    </notes>
    <notes id="FPar6" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par63">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Niu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wooley</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast clustering algorithms for metagenomic sequence analysis</article-title>
        <source>Brief Bioinforma.</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>6</issue>
        <fpage>656</fpage>
        <lpage>668</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs035</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries</article-title>
        <source>Nature Comm.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-07641-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sayers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Cavanaugh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Karsch-Mizrachi</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>GenBank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>D1</issue>
        <fpage>D94</fpage>
        <lpage>D99</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky989</pub-id>
        <?supplied-pmid 30365038?>
        <pub-id pub-id-type="pmid">30365038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Niu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>CD-HIT: accelerated for clustering the next-generation sequencing data</article-title>
        <source>Bioinformatics.</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>23</issue>
        <fpage>3150</fpage>
        <lpage>3152</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts565</pub-id>
        <?supplied-pmid 23060610?>
        <pub-id pub-id-type="pmid">23060610</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Search and clustering orders of magnitude faster than BLAST</article-title>
        <source>Bioinformatics.</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>19</issue>
        <fpage>2460</fpage>
        <lpage>2461</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq461</pub-id>
        <?supplied-pmid 20709691?>
        <pub-id pub-id-type="pmid">20709691</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol.</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>J Mol Biol.</source>
        <year>1981</year>
        <volume>147</volume>
        <issue>1</issue>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(81)90087-5</pub-id>
        <?supplied-pmid 7265238?>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison: benefits, applications, and tools</article-title>
        <source>Genome Biol.</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1319-7</pub-id>
        <pub-id pub-id-type="pmid">28077169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rowe</surname>
            <given-names>WP</given-names>
          </name>
        </person-group>
        <article-title>When the levee breaks: a practical guide to sketching algorithms for processing the flood of genomic data</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1809-x</pub-id>
        <pub-id pub-id-type="pmid">30606230</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol.</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0997-x</pub-id>
        <pub-id pub-id-type="pmid">26753840</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Jaroszewski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Godzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Clustering of highly homologous sequences to reduce the size of large protein databases</article-title>
        <source>Bioinformatics.</source>
        <year>2001</year>
        <volume>17</volume>
        <issue>3</issue>
        <fpage>282</fpage>
        <lpage>283</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.3.282</pub-id>
        <?supplied-pmid 11294794?>
        <pub-id pub-id-type="pmid">11294794</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Luczak</surname>
            <given-names>BB</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>MeShClust: an intelligent tool for clustering DNA sequences</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>14</issue>
        <fpage>e83</fpage>
        <lpage>e83</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky315</pub-id>
        <?supplied-pmid 29718317?>
        <pub-id pub-id-type="pmid">29718317</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Jain C, Dilthey A, Koren S, Aluru S, Phillippy AM. A fast approximate algorithm for mapping long reads to large reference databases. In: International Conference on Research in Computational Molecular Biology. Cham: Springer; 2017. p. 66â81.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Starrett</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Sappington</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kostic</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Buck</surname>
            <given-names>CB</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mash Screen: high-throughput sequence containment estimation for genome discovery</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>232</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1841-x</pub-id>
        <?supplied-pmid 31690338?>
        <pub-id pub-id-type="pmid">31690338</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Yin</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>RabbitV: fast detection of viruses and microorganisms in sequencing data on multi-core architectures</article-title>
        <source>Bioinformatics.</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>10</issue>
        <fpage>2932</fpage>
        <lpage>2933</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac187</pub-id>
        <?supplied-pmid 35561184?>
        <pub-id pub-id-type="pmid">35561184</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>MelanÃ§on</surname>
            <given-names>CE</given-names>
            <suffix>III</suffix>
          </name>
        </person-group>
        <article-title>A computational toolset for rapid identification of SARS-CoV-2, other viruses and microorganisms from sequencing data</article-title>
        <source>Brief Bioinforma.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>924</fpage>
        <lpage>935</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbaa231</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Murray</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Re-evaluating the evidence for a universal genetic boundary among microbial species</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>4059</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-24128-2</pub-id>
        <?supplied-pmid 34234129?>
        <pub-id pub-id-type="pmid">34234129</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Conrad</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
        </person-group>
        <article-title>Reply to:âRe-evaluating the evidence for a universal genetic boundary among microbial speciesâ</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-24129-1</pub-id>
        <pub-id pub-id-type="pmid">33397941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>SÃ¶ding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Clustering huge protein sequence sets in linear time</article-title>
        <source>Nat Commun.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-04964-5</pub-id>
        <pub-id pub-id-type="pmid">29317637</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dai</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gclust: A Parallel Clustering Tool for Microbial Genomic Data</article-title>
        <source>Genomics Proteomics Bioinforma.</source>
        <year>2019</year>
        <volume>17</volume>
        <issue>5</issue>
        <fpage>496</fpage>
        <lpage>502</lpage>
        <pub-id pub-id-type="doi">10.1016/j.gpb.2018.10.008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>MeShClust v3. 0: High-quality clustering of DNA sequences using the mean shift algorithm and alignment-free identity scores</article-title>
        <source>BMC Genomics.</source>
        <year>2022</year>
        <volume>23</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>16</lpage>
        <pub-id pub-id-type="doi">10.1186/s12864-022-08619-0</pub-id>
        <pub-id pub-id-type="pmid">34979896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Olman</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Minimum Spanning Trees for Gene Expression Data Clustering</article-title>
        <source>Genome Informat.</source>
        <year>2001</year>
        <volume>12</volume>
        <fpage>24</fpage>
        <lpage>33</lpage>
        <pub-id pub-id-type="doi">10.11234/gi1990.12.24</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>OâLeary</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Wright</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Brister</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Ciufo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Haddad</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McVeigh</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D733</fpage>
        <lpage>D745</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1189</pub-id>
        <?supplied-pmid 26553804?>
        <pub-id pub-id-type="pmid">26553804</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kitts</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Church</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Thibaud-Nissen</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hem</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Sapojnikov</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assembly: a resource for assembled genomes at NCBI</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D73</fpage>
        <lpage>D80</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1226</pub-id>
        <?supplied-pmid 26578580?>
        <pub-id pub-id-type="pmid">26578580</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schloss</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Westcott</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Ryabin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hollister</surname>
            <given-names>EB</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Introducing mothur: Open-Source, Platform-Independent, Community-Supported Software for Describing and Comparing Microbial Communities</article-title>
        <source>Appl Environ Microbiol.</source>
        <year>2009</year>
        <volume>75</volume>
        <issue>23</issue>
        <fpage>7537</fpage>
        <lpage>7541</lpage>
        <pub-id pub-id-type="doi">10.1128/AEM.01541-09</pub-id>
        <?supplied-pmid 19801464?>
        <pub-id pub-id-type="pmid">19801464</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Zhang H, Song H, Xu X, Chang Q, Wang M, Wei Y, etÂ al. RabbitFX: Efficient Framework for FASTA/Q File Parsing on Modern Multi-Core Platforms. IEEE/ACM Trans Comput Biol Bioinforma. 2022.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Klib: a Generic Library in C. <ext-link ext-link-type="uri" xlink:href="https://github.com/attractivechaos/klib">https://github.com/attractivechaos/klib</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">RabbitSketch: Fast sketch library for DNA or normal sequence data. <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitSketch">https://github.com/RabbitBio/RabbitSketch</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>MarÃ§ais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Solomon</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Kingsford</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Sketching and sublinear data structures in genomics</article-title>
        <source>Ann Rev Biomed Data Sci.</source>
        <year>2019</year>
        <volume>2</volume>
        <fpage>93</fpage>
        <lpage>118</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev-biodatasci-072018-021156</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koslicki</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Zabeti</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Improving minhash via the containment index with applications to metagenomic analysis</article-title>
        <source>Appl Math Comput.</source>
        <year>2019</year>
        <volume>354</volume>
        <fpage>206</fpage>
        <lpage>215</lpage>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fofanov</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Katili</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Belosludtsev</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Powdrill</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>How independent are the appearances of n-mers in different genomes?</article-title>
        <source>Bioinformatics.</source>
        <year>2004</year>
        <volume>20</volume>
        <issue>15</issue>
        <fpage>2421</fpage>
        <lpage>2428</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth266</pub-id>
        <?supplied-pmid 15087315?>
        <pub-id pub-id-type="pmid">15087315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jin</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Kssd: sequence dimensionality reduction by k-mer substring space sampling enables real-time large-scale datasets analysis</article-title>
        <source>Genome Biol.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-021-02303-4</pub-id>
        <pub-id pub-id-type="pmid">33397451</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fan</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ives</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Surget-Groba</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Cannon</surname>
            <given-names>CH</given-names>
          </name>
        </person-group>
        <article-title>An assembly and alignment-free method of phylogeny reconstruction from next-generation sequencing data</article-title>
        <source>BMC Genomics.</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1647-5</pub-id>
        <pub-id pub-id-type="pmid">25553907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ciufo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kannan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sharma</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Badretdin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Using average nucleotide identity to improve taxonomic assignments in prokaryotic genomes at the NCBI</article-title>
        <source>Int J Syst Evol Microbiol.</source>
        <year>2018</year>
        <volume>68</volume>
        <issue>7</issue>
        <fpage>2386</fpage>
        <pub-id pub-id-type="doi">10.1099/ijsem.0.002809</pub-id>
        <?supplied-pmid 29792589?>
        <pub-id pub-id-type="pmid">29792589</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Effective sequence similarity detection with strobemers</article-title>
        <source>Genome Res.</source>
        <year>2021</year>
        <volume>31</volume>
        <issue>11</issue>
        <fpage>2080</fpage>
        <lpage>2094</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.275648.121</pub-id>
        <?supplied-pmid 34667119?>
        <pub-id pub-id-type="pmid">34667119</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <mixed-citation publication-type="other">SMHasher. <ext-link ext-link-type="uri" xlink:href="https://github.com/aappleby/smhasher">https://github.com/aappleby/smhasher</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yin</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>RabbitMash: accelerating hash-based genome analysis on modern multi-core architectures</article-title>
        <source>Bioinformatics.</source>
        <year>2021</year>
        <volume>37</volume>
        <issue>6</issue>
        <fpage>873</fpage>
        <lpage>875</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa754</pub-id>
        <?supplied-pmid 32845281?>
        <pub-id pub-id-type="pmid">32845281</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <mixed-citation publication-type="other">Broder AZ. On the resemblance and containment of documents. In: Proceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No. 97TB100171). Salerno: IEEE; 1997. p. 21â29.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Lattanzi S, Moseley B, Suri S, Vassilvitskii S. Filtering: a method for solving graph problems in mapreduce. In: Proc. ACM Symposium on Parallelism in Algorithms and Architectures. New York: Association for Computing Machinery; 2011. p. 85â94.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">LonÄar V, Å krbiÄ S, BalaÅ¾ A. Parallelization of Minimum Spanning Tree Algorithms Using Distributed Memory Architectures. In: Transactions on Engineering Technologies. Dordrecht: Springer; 2014. p.543-554.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ros</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Guillaume</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A hierarchical clustering algorithm and an improvement of the single linkage criterion to deal with noise</article-title>
        <source>Exp Syst Appl.</source>
        <year>2019</year>
        <volume>128</volume>
        <fpage>96</fpage>
        <lpage>108</lpage>
        <pub-id pub-id-type="doi">10.1016/j.eswa.2019.03.031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Manning</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Raghavan</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>SchÃ¼tze</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>Introduction to Information Retrieval</source>
        <year>2008</year>
        <publisher-loc>Cambridge</publisher-loc>
        <publisher-name>Cambridge University Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedregosa</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gramfort</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michel</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Thirion</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Grisel</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scikit-learn: Machine Learning in Python</article-title>
        <source>J Mach Learn Res.</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>85</issue>
        <fpage>2825</fpage>
        <lpage>2830</lpage>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">RabbitTClust: enabling fast clustering analysis of millions bacteria genomes with MinHash sketches. <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust">https://github.com/RabbitBio/RabbitTClust</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Criscuolo A. On the transformation of MinHash-based uncorrected distances into proper evolutionary distances for phylogenetic inference. F1000Res. 2020;9,1309.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Xu X, Yin Z, Yan L, Zhang H, Xu B, Wei Y, et al. RabbitTClust: enabling fast clustering analysis of millions bacteria genomes with MinHash sketches. Zenodo; 2023. 10.5281/zenodo.7852098.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10190105</article-id>
    <article-id pub-id-type="publisher-id">2961</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02961-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>RabbitTClust: enabling fast clustering analysis of millions of bacteria genomes with MinHash sketches</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0370-2222</contrib-id>
        <name>
          <surname>Xu</surname>
          <given-names>Xiaoming</given-names>
        </name>
        <address>
          <email>xiaoming.xu@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yin</surname>
          <given-names>Zekun</given-names>
        </name>
        <address>
          <email>zekun.yin@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yan</surname>
          <given-names>Lifeng</given-names>
        </name>
        <address>
          <email>lifeng.yan@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Hao</given-names>
        </name>
        <address>
          <email>haoz@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Xu</surname>
          <given-names>Borui</given-names>
        </name>
        <address>
          <email>boruixu@mail.sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wei</surname>
          <given-names>Yanjie</given-names>
        </name>
        <address>
          <email>yj.wei@siat.ac.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Niu</surname>
          <given-names>Beifang</given-names>
        </name>
        <address>
          <email>niubf@cnic.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schmidt</surname>
          <given-names>Bertil</given-names>
        </name>
        <address>
          <email>bertil.schmidt@uni-mainz.de</email>
        </address>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Weiguo</given-names>
        </name>
        <address>
          <email>weiguo.liu@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.27255.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1761 1174</institution-id><institution>School of Software, </institution><institution>Shandong University, </institution></institution-wrap>Jinan, China </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.27255.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1761 1174</institution-id><institution>Shenzhen Research Institute of Shandong University, </institution><institution>Shandong University, </institution></institution-wrap>Shenzhen, China </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.9227.e</institution-id><institution-id institution-id-type="ISNI">0000000119573309</institution-id><institution>Shenzhen Institute of Advanced Technology, </institution><institution>Chinese Academy of Sciences, </institution></institution-wrap>Shenzhen, China </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.9227.e</institution-id><institution-id institution-id-type="ISNI">0000000119573309</institution-id><institution>Computer Network Information Center, </institution><institution>Chinese Academy of Sciences, </institution></institution-wrap>Beijing, China </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.5802.f</institution-id><institution-id institution-id-type="ISNI">0000 0001 1941 7111</institution-id><institution>Institute for Computer Science, </institution><institution>Johannes Gutenberg University, </institution></institution-wrap>Mainz, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>121</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>5</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present RabbitTClust, a fast and memory-efficient genome clustering tool based on sketch-based distance estimation. Our approach enables efficient processing of large-scale datasets by combining dimensionality reduction techniques with streaming and parallelization on modern multi-core platforms. 113,674 complete bacterial genome sequences from RefSeq, 455 GB in FASTA format, can be clustered within less than 6 min and 1,009,738 GenBank assembled bacterial genomes, 4.0 TB in FASTA format, within only 34 min on a 128-core workstation. Our results further identify 1269 redundant genomes, with identical nucleotide content, in the RefSeq bacterial genomes database.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02961-6.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome clustering</kwd>
      <kwd>MinHash sketching</kwd>
      <kwd>Minimum spanning tree</kwd>
      <kwd>Big data</kwd>
      <kwd>Redundancy detection</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61972231</award-id>
        <principal-award-recipient>
          <name>
            <surname>Xu</surname>
            <given-names>Xiaoming</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>62102231</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yin</surname>
            <given-names>Zekun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Shandong Provincial Natural Science Foundation</institution>
        </funding-source>
        <award-id>ZR2021QF089</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yan</surname>
            <given-names>Lifeng</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>Â© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Clustering nucleotide sequences is an important operation in bioinformatics with applications including duplicate detection [<xref ref-type="bibr" rid="CR1">1</xref>] and species boundary identification [<xref ref-type="bibr" rid="CR2">2</xref>]. With the progress of sequencing technologies, more and more genome sequences are generated at explosive speed. So far, over one million assembled bacteria genomes have been submitted to NCBI GenBank [<xref ref-type="bibr" rid="CR3">3</xref>] comprising several terabytes in size. Even though widely used tools, such as CD-HIT [<xref ref-type="bibr" rid="CR4">4</xref>] and UCLUST [<xref ref-type="bibr" rid="CR5">5</xref>], rely on fast heuristics, they can become prohibitively slow or memory intensive when clustering long genomic sequences because of their alignment-based distance measures.</p>
    <p id="Par3">Traditional alignment-based algorithms [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] often fail to compute pairwise similarities in practical time, especially for complete assembled genomes. Recently, <italic>k</italic>-mer-based alignment-free algorithms [<xref ref-type="bibr" rid="CR8">8</xref>] and sketching strategies [<xref ref-type="bibr" rid="CR9">9</xref>] are becoming popular for estimating sequence similarities. Mash [<xref ref-type="bibr" rid="CR10">10</xref>] introduced fast genome distance estimation using MinHash sketches which approximates the distance by selecting a small subset of hashed and sorted <italic>k</italic>-mers. This strategy provides an approach to efficiently compute distances between sequences with a length of 10 million or even longer.</p>
    <p id="Par4">Hierarchical clustering approaches often rely on a matrix of pairwise distances among input objects. However, memory requirements of the distance matrix can become prohibitive for large-scale input data. In order to reduce compute and memory consumption, clustering algorithms based on heuristics often choose the longest sequence as the representative sequence and only compute the distance between representative genomes and other genomes [<xref ref-type="bibr" rid="CR11">11</xref>]. As a consequence, heuristic clustering algorithm may output sub-optimal results [<xref ref-type="bibr" rid="CR12">12</xref>]. Furthermore, popular tools such as CD-HIT and UCLUST have been designed for clustering short read or protein sequences. They often fail when clustering long assembled genome sequences.</p>
    <p id="Par5">Nowadays, many tasks such as read mapping [<xref ref-type="bibr" rid="CR13">13</xref>] or metagenome discovery [<xref ref-type="bibr" rid="CR14">14</xref>] are reference-based. In some cases, several different versions of genome submissions to NCBI RefSeq with similar contents exist, which may lead to ambiguous results. Other applications such as RabbitUniq [<xref ref-type="bibr" rid="CR15">15</xref>] and fastv [<xref ref-type="bibr" rid="CR16">16</xref>] are based on unique <italic>k</italic>-mers of the reference genomes to identify microorganisms. These methods can miss partial unique <italic>k</italic>-mers when processing repeats or redundant genomes. Thus, when running reference-based applications, removing highly similar genomes can be beneficial to avoid errors caused by redundant references [<xref ref-type="bibr" rid="CR15">15</xref>]. Identification of boundaries between microbial species is often based on computing the pairwise Average Nucleotide Identity (ANI) of large collections of microbial genomes (such as fastANI [<xref ref-type="bibr" rid="CR2">2</xref>] and its re-evaluations [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]).</p>
    <p id="Par6">Recent tools for large-scale clustering of biological sequences include Linclust [<xref ref-type="bibr" rid="CR19">19</xref>], Gclust [<xref ref-type="bibr" rid="CR20">20</xref>], and MeShClust3 [<xref ref-type="bibr" rid="CR21">21</xref>]. Linclust measures similarities by gapless local alignment, which suffers from high runtimes and has a significant memory footprint. Gclust is a parallelized clustering tool for microbial genomic data using sparse suffix arrays (SSAs) and maximal exact matches (MEMs) for similarity measurement. However, generation of SSAs and MEMs between large collections of long genomic genomes also suffers from both high computational and high space complexity. Even though MeShClust3 is able to cluster about 10,000 bacterial genomes in about 50 h, it is not able to deal with millions of genomes in practical time. This establishes the need for an approach that can cluster large amounts of long genomic sequences in practical time on modern hardware platforms with high computational efficiency and low memory requirements.</p>
    <p id="Par7">We address this need by proposing RabbitTClust, an efficient clustering toolkit based on MinHash sketch distance measurement for large-scale genome datasets. Fast sketching (an approximate, compact summary of the original data) is used to compute similarities among genomes with a small memory footprint. It consists of two modules: <list list-type="order"><list-item><p id="Par8"><italic>clust-mst</italic> (minimum-spanning-tree-based single-linkage hierarchical clustering), and</p></list-item><list-item><p id="Par9"><italic>clust-greedy</italic> (greedy incremental clustering)</p></list-item></list><italic>clust-mst</italic> relies on a graph-based linear space clustering algorithm based on minimum spanning tree (MST) computation [<xref ref-type="bibr" rid="CR22">22</xref>] to perform single-linkage hierarchical clustering. Our MST construction relies on dynamically generating and merging partial clustering results without storing the whole distance matrix, which in turn allows for both memory reduction and efficient parallelization. <italic>clust-greedy</italic> chooses the longest genome in each cluster as representative and only computes distances of incoming genomes against the representative. Distances between incoming and representative genomes can be computed simultaneously in multi-threaded fashion.</p>
    <p id="Par10">As a result, RabbitTClust advances the scalability of genome clustering methods and is able to carry out terabyte-scale experiments on a single computer workstation.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Performance comparison</title>
      <p id="Par11">The pipelines of <italic>clust-mst</italic> and <italic>clust-greedy</italic> are illustrated in Figs.Â <xref rid="Fig1" ref-type="fig">1</xref> and <xref rid="Fig2" ref-type="fig">2</xref>, respectively. More details are explained in the â<xref rid="Sec10" ref-type="sec">Methods</xref>â section.<fig id="Fig1"><label>Fig. 1</label><caption><p>Pipeline of <italic>clust-mst</italic>: (i) sketch creation, (ii) streamed distance computation for each pair genomes and MST generation, (iii) cluster generation. More details of distance computation and MST generation are shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref></p></caption><graphic xlink:href="13059_2023_2961_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par12">
        <fig id="Fig2">
          <label>Fig. 2</label>
          <caption>
            <p>Pipeline of <italic>clust-greedy</italic>: (i) sketch creation, (ii) greedy incremental clustering</p>
          </caption>
          <graphic xlink:href="13059_2023_2961_Fig2_HTML" id="MO2"/>
        </fig>
      </p>
      <p id="Par13">RabbitTClust can efficiently finish the clustering of the bacterial genomes from NCBI RefSeq Release 211 [<xref ref-type="bibr" rid="CR23">23</xref>] (<italic>bact-RefSeq</italic>) and Genbank Release 249 [<xref ref-type="bibr" rid="CR3">3</xref>] (<italic>bact-GenBank</italic>) on a workstation with two 64-core AMD EPYC 7T83 CPUs, 256 GB DDR4 memory, and 7.68 TB WD SN640 SSD. The <italic>bact-RefSeq</italic> dataset (455 GB in FASTA format) consists of 113,674 complete genomes, while <italic>bact-Genbank</italic> contains 1,009,738 genomes with valid <italic>taxonomy-check-status</italic> [<xref ref-type="bibr" rid="CR24">24</xref>]. The total size of <italic>bact-Genbank</italic> is 4.0 TB in FASTA format. Using a distance threshold of 0.05 and 128 threads, <italic>clust-mst </italic> finishes the clustering of <italic>bact-RefSeq</italic> within 6 min and with a memory footprint of 10.70 GB. Based on the ground truth from the NCBI RefSeq species taxonomy identifier (<italic>species-taxid</italic>), the created clustering of <italic>clust-mst</italic> has an NMI score of 0.961. Using a distance threshold of 0.05 and 128 threads, <italic>clust-greedy</italic> finishes the clustering of <italic>bact-GenBank</italic> within 34 min, a memory footprint of 16.45 GB, and an NMI score of 0.956 (based on NCBI Genbank <italic>species-taxid</italic>).</p>
      <p id="Par14">Mothur [<xref ref-type="bibr" rid="CR25">25</xref>] can finish hierarchical clustering with a PHYLIP-based distance matrix. In addition, Mash [<xref ref-type="bibr" rid="CR10">10</xref>] can compute a PHYLIP-based distance matrix of genomes with the <italic>triangle</italic> option. Using 128 threads on the 128-core workstation, the Mash &amp;Mothur pipeline (Mash v.2.3 and Mothur v.1.48.0) can finish hierarchical clustering of <italic>bact-RefSeq</italic> with a runtime of 6 h, a memory footprint of 7.33 GB and an NMI score of 0.961. Compared to the Mash &amp;Mothur pipeline, <italic>clust-mst</italic> of RabbitTClust thus achieves a speedup of 66 with identical NMI score (see Table <xref rid="Tab1" ref-type="table">1</xref>).<table-wrap id="Tab1"><label>Table 1</label><caption><p>Performance comparison of different clustering tools and datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Dataset</th><th align="left">Tool</th><th align="left">Time</th><th align="left">SpeedUp<sup>a</sup></th><th align="left">Memory (GB)</th><th align="left">NMI</th></tr></thead><tbody><tr><td align="left" rowspan="5"><italic>bact-RefSeq</italic></td><td align="left">MeShClust3</td><td align="left">&gt;14days</td><td align="left">-</td><td align="left">-</td><td align="left">-</td></tr><tr><td align="left">Gclust</td><td align="left">-</td><td align="left">-</td><td align="left">OOM<sup>b</sup></td><td align="left">-</td></tr><tr><td align="left">Mash &amp;Mothur</td><td align="left">365m14s</td><td align="left">66.4</td><td align="left">7.33</td><td align="left">0.961</td></tr><tr><td align="left"><italic>clust-mst</italic></td><td align="left">5m30s</td><td align="left">-</td><td align="left">10.70</td><td align="left">0.961</td></tr><tr><td align="left"><italic>clust-greedy</italic></td><td align="left">5m05s</td><td align="left">-</td><td align="left">4.83</td><td align="left">0.959</td></tr><tr><td align="left" rowspan="5"><italic>sub-Bact</italic></td><td align="left">MeShClust3</td><td align="left">3,096m18s</td><td align="left">2,996.4</td><td align="left">139.17</td><td align="left">0.920</td></tr><tr><td align="left">Gclust</td><td align="left">1,502m05s</td><td align="left">1,454.6</td><td align="left">156.35</td><td align="left">0.812</td></tr><tr><td align="left">Mash &amp;Mothur</td><td align="left">4m37s</td><td align="left">4.5</td><td align="left">1.19</td><td align="left">0.973</td></tr><tr><td align="left"><italic>clust-mst</italic></td><td align="left">1m02s</td><td align="left">-</td><td align="left">5.77</td><td align="left">0.973</td></tr><tr><td align="left"><italic>clust-greedy</italic></td><td align="left">59s</td><td align="left">-</td><td align="left">5.17</td><td align="left">0.970</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>SpeedUp: SpeedUp for <italic>clust-mst</italic> module of RabbitTClust</p><p><sup>b</sup>OOM: Out Of Memory</p></table-wrap-foot></table-wrap></p>
      <p id="Par15">CD-HIT, UCLUST, and Linclust can not deal with both <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> and run out of memory. Furthermore, Gclust and MeShClust3, can not finish the clustering of the full RefSeq dataset (<italic>bact-RefSeq</italic>) in practical runtime. To compare efficiency and accuracy of RabbitTClust with these tools, we created a subset of <italic>bact-RefSeq</italic> called <italic>sub-Bact</italic>, which contains 10,562 genomes with a total size of 43 GB in FASTA format. We execute MeShClust3 (v.2.0) with the commands <italic>meshclust -d sub-Bacteria.fna -o sub-Bacteria.clust -t 0.84 -b 1000 -v 4000</italic> (as recommended in [<xref ref-type="bibr" rid="CR21">21</xref>]) and Gclust (v.1.0.0) using <italic>gclust -both -nuc -threads 128 -ext 1 -chunk 2000MB sub-Bacteria.sorted.fna &gt; sub-Bacteria.clust</italic> with a larger chunk size for better thread scalability. Using 128 threads, MeShClust3 and Gclust can finish the clustering of <italic>sub-Bact</italic> with a runtime of 51.60 h and 25.01 h, a memory footprint of 139.17 GB and 156.35 GB, and an NMI score of 0.920 and 0.812, respectively. In comparison, <italic>clust-mst</italic> can finish the clustering of <italic>sub-Bact</italic> with a runtime of only 61.76 s, a memory footprint of 5.77 GB, and an NMI score of 0.973. Mash &amp;Mothur requires 276.84 s, has a memory footprint of 1.19 GB, and also achieves NMI score of 0.973. Compared to MeshClust3, Gclust, and Mash &amp;Mothur pipeline, <italic>clust-mst</italic> thus achieves speedups of at least 2996.4, 1454.6, and 4.5 for the <italic>sub-Bact</italic> dataset, respectively. Details are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>.</p>
    </sec>
    <sec id="Sec4">
      <title>Efficiency and scalability</title>
      <p id="Par16">The combination of efficient algorithms and highly optimized implementation makes the two modules of RabbitTClust fast, scalable, and memory efficient. We adopt a low-complexity MinHash sketching algorithm to estimate the pairwise distances for both <italic>clust-mst</italic> and <italic>clust-greedy</italic>. Consider a genomic sequence of length <italic>L</italic> and the sketch size <italic>S</italic> (number of sampled <italic>k</italic>-mers for distance estimation) with <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S \ll L$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>S</mml:mi><mml:mo>âª</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq1.gif"/></alternatives></inline-formula>. The computational complexity of sketch-based distance measurement of two genomic sequences of length <italic>L</italic> is <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(S)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq2.gif"/></alternatives></inline-formula>, while the traditional alignment-based approach requires <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(L^2)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq3.gif"/></alternatives></inline-formula>.</p>
      <p id="Par17">Consider <italic>N</italic> to be the number of genomic input sequences. The streaming MST generation algorithm for <italic>clust-mst</italic> exhibits linear space complexity of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N)$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq4.gif"/></alternatives></inline-formula> and avoids storing the full pairwise distance matrix with <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N^2/2$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq5.gif"/></alternatives></inline-formula> entries. <italic>clust-greedy</italic> also has linear space complexity <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N)$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq6.gif"/></alternatives></inline-formula> since it only needs to store the label (representative or redundant) of each genome instead of pairwise distances.</p>
      <p id="Par18">RabbitTClust takes full advantage of modern compute platforms by featuring fast I/O parsing, multi-threading, and vectorization of inner loops. The sketch creation for each genome is a time-consuming part for both <italic>clust-mst</italic> and <italic>clust-greedy</italic>. It is thus parallelized using both multi-threading and vectorization. For multi-threading, thread scalability is bottlenecked by sequence parsing as the thread number grows. We use the efficient FASTA parsing libraries RabbitFX [<xref ref-type="bibr" rid="CR26">26</xref>] and kseq [<xref ref-type="bibr" rid="CR27">27</xref>] to eliminate parsing bottlenecks, thus, achieving better performance and thread scalability.</p>
      <p id="Par19">Distance computation is another hotspot kernel. Our streaming strategy for MST generation can be parallelized with the distance computation as shown in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>. For <italic>clust-greedy</italic>, the distances of each incoming genome with all representative genomes are also computed in parallel. Since there is no dependency between multiple threads, distance computation can achieve good thread scalability.<fig id="Fig3"><label>Fig. 3</label><caption><p>Parallel streaming strategy for sub-MSTs generation. In Step1, each thread generates and updates the sub-MST when finishing the computation of <italic>t</italic> rows of the distance matrix. In Step2, sub-MSTs are merged into the final MST after finishing the computation of the whole distance matrix</p></caption><graphic xlink:href="13059_2023_2961_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par20">Figure <xref rid="Fig4" ref-type="fig">4</xref> shows the thread scalability of <italic>clust-mst</italic> and <italic>clust-greedy</italic> on the 128-core AMD workstation. Both methods achieve near linear speedup on <italic>bact-RefSeq</italic> and <italic>bact-Genbank</italic> for up to 72 threads. Note that the speedup grows more slowly when the thread number exceeds 72 due to disk I/O and multi-threading overheads. For example, synchronization is required by multiple threads to get the labels (representative or redundant) of the incoming genomes. In addition, RabbitTClust can achieve comparable performance on a 64-core Intel platform, as shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.<fig id="Fig4"><label>Fig. 4</label><caption><p>Thread scalability for <italic>clust-mst</italic> and <italic>clust-greedy</italic> on <italic>bact-RefSeq</italic> and <italic>bact-Genbank</italic>, respectively</p></caption><graphic xlink:href="13059_2023_2961_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par21">We also provide the RabbitSketch [<xref ref-type="bibr" rid="CR28">28</xref>] library supporting vectorization with SIMD instructions (e.g., SSE/AVX) for fine-grained data parallelization. RabbitSketch includes an efficient hash function calculation with SIMD instructions to compute multiple <italic>k</italic>-mers concurrently for sketching genomes. Furthermore, RabbitSketch integrates highly optimized <italic>robin-hood-hashing</italic> to manipulate the <italic>min-heap</italic> data structure used for MinHash sketches. For pairwise distance computation, we use a block-based vectorized approach to reduce branch misprediction penalties when computing set intersections.</p>
    </sec>
    <sec id="Sec5">
      <title>Distance measurement accuracy</title>
      <p id="Par22">RabbitTClust includes two distance measures for estimating pairwise similarities between genomes. The default distance measure of <italic>clust-mst</italic> and <italic>clust-greedy</italic> are <italic>Mash distance</italic> and <italic>AAF distance</italic> (assembly and alignment-free distance), respectively. Ondov et al. [<xref ref-type="bibr" rid="CR10">10</xref>] analyzed the relationship between ANI and <italic>Mash distance</italic> for a collection of Escherichia genomes. The MinHash sketch strategy used in the <italic>k</italic>-mer-based <italic>Mash distance</italic> is a locality-sensitive hashing technique. Since the probability of a hash collision is higher between more similar elements [<xref ref-type="bibr" rid="CR29">29</xref>], this approach can provide a tight estimation when the actual Jaccard index is large [<xref ref-type="bibr" rid="CR30">30</xref>]. We use simulated datasets with known mutation rates to further explore the relationship between mutation rate and <italic>Mash distance</italic>. Simulated datasets are generated by mutating each nucleotide whereby the mutation rate has an equal possibility of insertion, deletion, and substitution. We set the simulated genome sequence length to 10,000,000, and the mutation rates vary from 1 to 10% in order to simulate highly similar genomes. Figure <xref rid="Fig5" ref-type="fig">5</xref> shows the relationship between <italic>Mash distance</italic> and mutation rate of different <italic>k</italic>-mer and sketch sizes. In each sub-figure, the probability of deviation from the true mutation rate grows as the actual mutation rate grows (i.e., actual similarity decreases). It can be seen that <italic>Mash distance</italic> achieves a tighter estimation of the mutation rate with a larger sketch size and smaller <italic>k</italic>-mer sizes generally decrease the <italic>Mash distance</italic> below the actual mutation rate. Thus, <italic>k</italic>-mer size and sketch size should be chosen large enough for good distance accuracy. More details about choosing <italic>k</italic>-mer size and sketch size are discussed in the â<xref rid="Sec10" ref-type="sec">Methods</xref>â section. The simulation of genomes is in a perfect random model without accounting for compositional characteristics like GC bias and GC mutation difference. Still, the practical experiences show a high correspondence between <italic>Mash distance</italic> and mutation rate with relatively low root-mean-square error. Previous work [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR31">31</xref>] also suggested that a random model of <italic>k</italic>-mer occurrence was not entirely unreasonable.<fig id="Fig5"><label>Fig. 5</label><caption><p>Relationship between the mutation rate and <italic>Mash distance</italic> for different <italic>k</italic>-mer values and sketch sizes. Rows represent different <italic>k</italic>-mer sizes, and columns represent different sketch sizes. The <italic>x</italic>-axis is the actual mutation rate, and the y-axis is the <italic>Mash distance</italic>. The red dotted line indicates a perfect model relationship <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Mash\ distance = mutation\ rate$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>M</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>h</mml:mi><mml:mspace width="4pt"/><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>c</mml:mi><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mspace width="4pt"/><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq7.gif"/></alternatives></inline-formula>. The numbers at the bottom right of each plot are the root-mean-square error versus the perfect model</p></caption><graphic xlink:href="13059_2023_2961_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par23"><italic>AAF distance</italic> measurement [<xref ref-type="bibr" rid="CR32">32</xref>, <xref ref-type="bibr" rid="CR33">33</xref>] is based on containment similarity for genome redundancy detection. Similarity estimation by containment coefficients is suitable for genome redundancy detection especially when the lengths of genomes are very different. When sketch size is fixed and genomes are of different size, the distributions of the hash values within the sketches can be very different. Thus, matching rates of hashes in the two sketch sets can be much smaller than the true containment similarity between the two considered genomes. Thus, a fixed-size-sketch-based method like <italic>Mash distance</italic> is not suitable for accurate containment similarity estimation of genomes with significantly different sizes. The sketch sizes of containment coefficients are proportional to the length of the original genomes, ensuring that the hash values in sketches have a similar distribution. We have simulated a dataset called <italic>simulate-Bact</italic> to evaluate the performance of the <italic>AAF distance</italic> measurement based on the containment similarity for duplication detection. <italic>Simulate-Bact</italic> (2.6GB) consists of 400 genomes comprising 8 clusters with 50 genomes per cluster. The genomes in a cluster are generated by cutting random proportions ranging from 0.0 to 1.0 in length of an original seed bacterial genome. The similarities between the seed genomes are very low. Thus, the inter-cluster similarity is very low as well. Since the seed genomes totally contain the other genomes within a cluster, for duplication and redundancy consideration, the similarities between the seed genome and other genomes are 100% in theory. The Normalized Mutual Information (NMI) score is used to evaluate the accuracy of the clustering result with a value between 0 (poor) and 1.0 (perfect). As is shown in Table <xref rid="Tab2" ref-type="table">2</xref>, using a distance threshold of 0.001 and a suitable sketch size (1/1000 of the genome length), the <italic>AAF distance</italic> with variable sketch sizes can achieve a high NMI score of 0.983. The number of clusters generated using the <italic>Mash distance</italic> is much larger than the actual cluster number since the lower match rate of sketch hash values leads to over-estimated distances. In conclusion, the variable-sketch-size-based <italic>AAF distance</italic> performs much better than the fixed-sketch-sized-based <italic>Mash distance</italic> for genomes of very different lengths.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Evaluation of <italic>Mash distance</italic> and <italic>AAF distance</italic> on the <italic>Simulate-Bact</italic> dataset with distance threshold 0.001</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Sketch Size</th><th align="left">Time(s)</th><th align="left">Memory (GB)</th><th align="left">NOC<sup>a</sup></th><th align="left">NMI</th></tr></thead><tbody><tr><td align="left" rowspan="3"><italic>Mash distance</italic> with fixed sketch size</td><td align="left">1000</td><td align="left">2.220</td><td align="left">1.31</td><td align="left">216</td><td align="left">0.568</td></tr><tr><td align="left">5000</td><td align="left">2.594</td><td align="left">1.32</td><td align="left">212</td><td align="left">0.569</td></tr><tr><td align="left">10,000</td><td align="left">3.135</td><td align="left">1.34</td><td align="left">211</td><td align="left">0.570</td></tr><tr><td align="left" rowspan="3"><italic>AAF distance</italic> with variable sketch size</td><td align="left"><inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * (1/10,000)$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq8.gif"/></alternatives></inline-formula></td><td align="left">2.057</td><td align="left">1.27</td><td align="left">31</td><td align="left">0.899</td></tr><tr><td align="left"><inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * P_{d}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq9.gif"/></alternatives></inline-formula><sup>b</sup></td><td align="left">2.199</td><td align="left">1.30</td><td align="left">26</td><td align="left">0.911</td></tr><tr><td align="left"><inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$length * (1/1,000)$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mrow/><mml:mo>â</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>000</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq10.gif"/></alternatives></inline-formula></td><td align="left">2.655</td><td align="left">1.32</td><td align="left">12</td><td align="left">0.983</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>NOC: Number Of Clusters</p><p><sup>b</sup><inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d$$\end{document}</tex-math><mml:math id="M22"><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq11.gif"/></alternatives></inline-formula>: Default sampling proportion, which serves as 1/6969 on this dataset</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec6">
      <title>Clustering accuracy</title>
      <p id="Par24"><italic>clust-mst</italic> and <italic>clust-greedy</italic> have different characteristics and are suitable for different application scenarios. <italic>clust-mst</italic> is equivalent to popular single-linkage hierarchical clustering, which requires computation of all pairwise distances among input genomes. <italic>clust-greedy</italic> is based on heuristic greedy incremental clustering and does not need to compute all pairwise distances. Thus, <italic>clust-mst</italic> often has higher accuracy but longer runtime, especially when the number of input genomes (<italic>N</italic>) is large. For <italic>clust-greedy</italic>, runtimes are affected by the distance threshold parameter. It needs to compute the distances between incoming genomes and the representative genomes. Lower distance thresholds result in more representative genomes, thus increasing runtimes.</p>
      <p id="Par25">For a series of genomes with the same ancestor but with relatively low similarities, the clustering result of <italic>clust-greedy</italic> may have low accuracy. Note that <italic>clust-greedy</italic> selects the longest genome as the representative genome for a cluster. Thus, it can not cluster these genomes together when the ancestor is not the longest genome. We simulated the five random seed genome sequences and generated 30 sequences from each seed genome with a mutation rate of 0.045. The lengths of these sequences are about 10,000,000, and substitution and indel are of equal possibility. The mutation rate of each sequence against its seed sequence is less than 0.05. For sequences generated from the same seed sequence, the pairwise mutation rates are larger than 0.05. The similarities between the randomly generated seed sequences are very low. Thus, the inter-cluster distances are almost 1.0. When clustering these 155 genome sequences with a distance threshold of 0.05, <italic>clust-mst</italic> clusters these 155 genomes into 5 clusters and achieves an NMI score of 1.0. However, <italic>clust-greedy</italic> generates much more clusters and merely achieves an NMI score of 0.487. Because there are insert mutations, the seed sequences may not be the longest in the ground truth cluster. Thus, <italic>clust-greedy</italic> can not label the seed sequences as representatives which leading to poor clustering results.</p>
      <p id="Par26">When a genome is labeled as redundant, <italic>clust-greedy</italic> will ignore the relationship with other genomes except for its representative. Thus, compared to the <italic>clust-mst</italic>, it can not chain clusters by the distance between redundant genomes from different clusters. As a consequence, <italic>clust-greedy</italic> tends to generate more clusters. On the one hand, it may lose some genome connections since the absence of distance computation among redundant genomes. On the other hand, it only suffers negligibly from noisy chaining of clusters caused by low-quality assembled genomes, thus, achieving higher purity. This feature makes <italic>clust-greedy</italic> more suitable than <italic>clust-mst</italic> to deal with low-quality datasets. Furthermore, the default distance measure of <italic>clust-greedy</italic> is the <italic>AAF distance</italic>, which is more accurate for estimating the containment coefficient of genomes with very different lengths. Thus, it is more suitable for duplication or redundancy detection.</p>
    </sec>
    <sec id="Sec7">
      <title>Filtering redundant genomes</title>
      <p id="Par27">In some cases, there are redundant submissions to the NCBI RefSeq bacterial database. To identify genomes with identical nucleotide content but different assembly accessions, we can simply set the distance threshold parameter to zero. On <italic>bact-RefSeq</italic>, <italic>clust-greedy</italic> identifies 1269 identical genomes distributed in 612 clusters. The list of the <italic>assembly-accession</italic>, <italic>bioProject</italic>, <italic>bioSample</italic>, <italic>species-taxid</italic>, and <italic>organism-name</italic> of these 1269 genomes is shown in Additional file <xref rid="MOESM2" ref-type="media">2</xref>. Most of these clusters consist of genomes with the same <italic>species-taxid</italic>, although some genomes with identical nucleotide content also have different <italic>species-taxid</italic>s. For example, the <italic>species-taxid</italic> of GCF_003479085.1 and GCF_902364055.1 are 2292204 and 1544, respectively. This may cause ambiguous results when such genomes are used as reference genomes in other applications. Furthermore, different distance thresholds correspond to different degrees of redundancy detection; e.g., higher distance thresholds lead to bigger clusters with more genomes being labeled redundant. To build a non-redundant reference dataset for reference-based applications, increasing the distance threshold will retain fewer representative genomes and reduce the intra-species diversity of reference genomes.</p>
      <p id="Par28">By analyzing <italic>clust-greedy</italic> results, low-quality or mislabeled redundant genomes can be identified by analyzing intra-cluster quality. We use purity and coverage to evaluate the intra-cluster quality. Purity of a cluster is the ratio of the maximum species number to the total genome number in this cluster. The coverage is the ratio between the total number of genomes in the clusters (including at least two genomes) and the number of entire genomes. Note that purity is meaningless when coverage is very low since the purity score will be 1.0 if each cluster contains only one genome. We call the clusters with purity less than 1.0 unpurified clusters.</p>
      <p id="Par29">In an unpurified cluster, the genomes with the maximum number of <italic>species-taxid</italic> are labeled as dominant genomes, while the others are labeled as impurity genomes. We run <italic>clust-greedy</italic> on <italic>bact-Genbank</italic> with a distance threshold of 0.001. The overall purity is 0.996, and the coverage is 0.907. Purity is relatively meaningful since the coverage shows that less than 10% of the total genomes serve as a single cluster. With a small distance threshold (e.g., 0.001), an unpurified cluster contains genomes that are highly similar but with different <italic>species-taxid</italic>s. In this scenario, we focus on the impurity genomes in the unpurified clusters. A total of 4289 impurity genomes in <italic>bact-Genbank</italic> have different <italic>species-taxid</italic>s with their dominant genomes. By comparing the taxonomic identity of genome assemblies from NCBI report [<xref ref-type="bibr" rid="CR34">34</xref>], we can find that 74.4% of these 4289 impurity genomes have different <italic>species-taxid</italic> and <italic>best-match-species-taxid</italic>. The list of the <italic>assembly-accession</italic>, <italic>species-taxid</italic>, and <italic>best-match-species-taxid</italic> of these 4289 genomes is shown in Additional file <xref rid="MOESM3" ref-type="media">3</xref>. In these 4289 impurity genomes, 965 genomes have different <italic>taxid</italic>s in genus rank with their dominant genomes, and even 46 genomes have different <italic>taxid</italic>s in family rank. The genomes with different <italic>taxid</italic>s in family rank are potentially mislabeled. The list of the <italic>assembly-accession</italic> and the <italic>taxid</italic>s in different ranks are shown in Additional file <xref rid="MOESM4" ref-type="media">4</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par30">RabbitTClust is both efficient and highly scalable. It is able to cluster the whole NCBI Genbank bacteria assembled genomes (4.0 TB in FASTA format with 1,009,738 genome files) with a limited memory footprint in practical time. The sketch-based distance measurement makes the distance computation orders-of-magnitude faster than traditional alignment-based algorithms. The memory footprint is only linear in terms of sketch size rather than the square of the genome length. In addition, the streaming strategy of MST generation only needs a linear memory footprint in terms of the number of genomes and does not require to store the whole distance matrix. All time-consuming kernels are highly optimized by means of multi-threading, fast I/O, and SIMD vectorization to take full advantage of compute resources on modern multi-core architectures.</p>
    <p id="Par31">Note that RabbitTClust has been designed for clustering long genomic genomes, but is not effective for short sequences (e.g., short sequencing reads) and highly degenerate genomic sequences. For short sequences, the classical CD-HIT and UCLUST are more suitable considering both efficiency and accuracy. There are two main reasons that make the sketch-based distance measurement less accurate for highly degenerate genome sequences, such as sequences with high mutation rates. The accuracy of distance estimation will decrease as the actual similarities of genomes decrease, especially when the sketch size is significantly less than the genome size [<xref ref-type="bibr" rid="CR30">30</xref>]. Figure <xref rid="Fig5" ref-type="fig">5</xref> shows that the deviation from actual distance grows as the true similarity decreases. Increasing the sketch size can alleviate the decrease of the accuracy but lead to a decrease in efficiency. In general, <italic>k</italic>-mer-based distance measurements will be easily affected by high mutation rates in degenerate sequences since a single mutation will mutate <italic>k</italic> consecutive <italic>k</italic>-mers. Our future work therefore includes the integration of alternatives for distance measurement (such as strobemers [<xref ref-type="bibr" rid="CR35">35</xref>]) in RabbitTClust to improve the clustering quality for degenerate sequences.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par32">RabbitTClust is a toolkit that can efficiently cluster long genome sequences with high similarity together with MST-based and greedy incremental clustering strategies. Users can choose between two modules (<italic>clust-mst</italic> and <italic>clust-greedy</italic>) for different application scenarios. The traditional MinHash sketching algorithm has high efficiency and provides an estimation for the Jaccard similarity. However, the distance estimation for genomes with significantly different lengths has only insufficient accuracy. We thus employ <italic>AAF distance</italic> measurements with variable sketch size to accurately estimate containment similarity, especially for redundancy detection of genomes with different sizes. Our MST-based clustering module uses <italic>Mash distance</italic> by default, while the greedy incremental clustering module employs <italic>AAF distance</italic>. RabbitTClust can be used to cluster large collections of long genomic sequences with relatively high similarity, including but not limited to bacterial databases. <italic>clust-mst</italic> can cluster the whole RefSeq bacterial genomes, which can be used for species boundary evaluation of prokaryotes. <italic>clust-greedy</italic> can filter out different degrees of redundancy by using suitable distance thresholds. For many reference-based applications, such as fastv, RabbitUniq, and Mash screen, removing redundant reference genomes can reduce the obfuscation of results. Furthermore, with a distance threshold of zero, <italic>clust-greedy</italic> can find genomes with identical nucleotide content and thus identify redundant or mislabeled genome submissions.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>RabbitTClust pipeline</title>
      <p id="Par33">The <italic>clust-mst</italic> pipeline (see Fig.Â <xref rid="Fig1" ref-type="fig">1</xref>) consists of four parts: (i) sketch creation, (ii) pairwise genome distance computation, (iii) MST generation, and (iv) cluster generation. The <italic>clust-greedy</italic> pipeline (see Fig.Â <xref rid="Fig2" ref-type="fig">2</xref>) consists of three parts: (i) sketch creation, (ii) distance computation, and (iii) greedy incremental clustering. Both of them support two types of input: a single genome file or a list of genome files. RabbitFX and kseq are used for efficient sequence parsing of the single genome file or the file list, respectively.</p>
      <p id="Par34">After parsing, <italic>k</italic>-mers (i.e., substrings of length <italic>k</italic>) are generated by decomposing the genome sequences and their reverse complements in a sliding-window way. Only canonical <italic>k</italic>-mers (the smallest hash value between a <italic>k</italic>-mer and its reverse complement) are used to create sketches. <italic>S</italic> minimum hash values are chosen to compose a sketch where <italic>S</italic> denotes the sketch size. Note that the hash function should be uniform and deterministic [<xref ref-type="bibr" rid="CR9">9</xref>]. Uniformity ensures that hash values converted from the input <italic>k</italic>-mer set of a genome are mapped evenly across the hash value space, which provides a representative sampling of MinHash sketches. Determinism ensures that the same input <italic>k</italic>-mer always produces the same hash value. Considering efficiency and the features mentioned above, we use the MurmurHash3 function in RabbitTClust. MurmurHash3 [<xref ref-type="bibr" rid="CR36">36</xref>] is a popular non-cryptographic hash function that converts <italic>k</italic>-mers to integers. To improve efficiency, we include a vectorized implementation of MurmurHash3 with SIMD instructions which manipulates multiple <italic>k</italic>-mers concurrently [<xref ref-type="bibr" rid="CR37">37</xref>].</p>
      <p id="Par35">Distance computation in <italic>clust-mst</italic> is used to estimate pairwise genome similarities for each pair of sketches. MST generation is done by using a streaming strategy together with distance computation in parallel, as illustrated in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>. After the MST is constructed, the final clusters are generated by cutting off edges over the threshold in the MST.</p>
      <p id="Par36">For <italic>clust-greedy</italic>, the sketches are sorted by genome length in descending order. The sketch corresponding to the longest genome is added to the representative set. Each sketch in this set represents a cluster. For each remaining sketch, we compute the distances between the current incoming sketch and all representative sketches. If the distance between this incoming sketch and representative sketches <italic>A</italic> is the minimum distance and is less than the threshold, the incoming genome is added to the cluster <italic>A</italic>. If all distances to representative sketches are over the threshold, the incoming sketch is used as the representative of a new representative sketch set. Clustering is finished after all the remaining sketches are processed.</p>
    </sec>
    <sec id="Sec12">
      <title>Sketching and distance measurement</title>
      <p id="Par37">We rely on sketching of <italic>k</italic>-mers for similarity estimation among input genome sequences based on their <italic>Mash distance</italic> [<xref ref-type="bibr" rid="CR10">10</xref>] or <italic>AAF distance</italic> [<xref ref-type="bibr" rid="CR33">33</xref>] using resemblance Jaccard or containment coefficients. This reduces the size of the input data set by several orders-of-magnitude (the sketch size for Jaccard coefficient and the mean value of variable sketch sizes for containment coefficient are 1000 <italic>k</italic>-mers per genome by default).</p>
      <p id="Par38">Consider two genomic sequences <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq12.gif"/></alternatives></inline-formula> and <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq13.gif"/></alternatives></inline-formula>. The Jaccard Index <italic>J</italic> for their resemblance can be approximated by <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J(G_1,G_2) \approx J(S(G_1),S(G_2)) = |S(G_1)\cap S(G_2)|/|S(G_1)\cup S(G_2)|$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mi>J</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â</mml:mo><mml:mi>J</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â©</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>âª</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq14.gif"/></alternatives></inline-formula> where <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(G_1)$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq15.gif"/></alternatives></inline-formula> and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(G_2)$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq16.gif"/></alternatives></inline-formula> are hash value sets of the two subsampled <italic>k</italic>-mer sketches of <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq17.gif"/></alternatives></inline-formula> and <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq18.gif"/></alternatives></inline-formula>. Mash [<xref ref-type="bibr" rid="CR10">10</xref>] proposed <italic>Mash distance</italic> based on a Poisson distribution of the point mutation rate defined as <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D=-\frac{1}{k} \ln \frac{2J}{1+J}$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mi>J</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>J</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq19.gif"/></alternatives></inline-formula>, where <italic>k</italic> is the <italic>k</italic>-mer size and <italic>J</italic> is Jaccard index. <italic>Mash distance</italic> correlates well with the ANI as <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D\approx 1 - ANI$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mi>D</mml:mi><mml:mo>â</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>N</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq20.gif"/></alternatives></inline-formula>.</p>
      <p id="Par39">Fixed-size sketches are suitable for computing the resemblance Jaccard coefficient when the lengths of genomes are roughly equal but not in the case of significantly different sizes. When de-duplicating, we also offer a containment analysis option to find duplicate sequences of different sizes. Compared to resemblance, the variable-size-sketch-based containment method is more suitable for genomes with significantly different sizes. The hash value distributions of fixed-size sketches are different when the genomes are of very different sizes, so the matching rate of hashes in the two sketch sets is much smaller than the containment similarity of original genomes, see Fig.Â <xref rid="Fig6" ref-type="fig">6</xref>b. Containment coefficient of <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq21.gif"/></alternatives></inline-formula> in <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq22.gif"/></alternatives></inline-formula> is approximated by <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c\approx |S(G_1)\cap S(G_2)|/|S(G_1)|$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mrow><mml:mi>c</mml:mi><mml:mo>â</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>â©</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq23.gif"/></alternatives></inline-formula>, whereby sketch sizes are proportional to the size of the respective genomes [<xref ref-type="bibr" rid="CR38">38</xref>]. <italic>AAF distance</italic> is defined as <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=-\frac{1}{k}\ln c$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq24.gif"/></alternatives></inline-formula> where <italic>c</italic> is the containment coefficient [<xref ref-type="bibr" rid="CR32">32</xref>]. As is shown in Fig.Â <xref rid="Fig6" ref-type="fig">6</xref>b, the matching rate of minimum hashes in the sketch of the smaller genome is similar to the containment similarity between the two genomes.<fig id="Fig6"><label>Fig. 6</label><caption><p>Differences between fixed-size and variable-size MinHash sketches on <italic>k</italic>-mer sets with similar sizes (<bold>a</bold>) and very different sizes (<bold>b</bold>). The pair of shaded circles represent two <italic>k</italic>-mer sets (set <italic>A</italic> and <italic>B</italic>) and the overlapping part represents their intersection. The diagrams below each pair circle are the hash sets converted from the <italic>k</italic>-mer sets. The space of hashes is <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b$$\end{document}</tex-math><mml:math id="M50"><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq25.gif"/></alternatives></inline-formula> with <italic>b</italic>-bit hash values, leading to a numerical range of hash values between 0 and <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b-1$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq26.gif"/></alternatives></inline-formula>. The points on horizontal lines denote the hash values from set <italic>A</italic> and <italic>B</italic>. Solid points are minimum hash values that compose the sketches, while hollow points are hash values not in sketches. Solid arrows represent matching of hashes between two sketches, while dotted lines represent matching not in sketches. In <bold>a</bold>, sets <italic>A</italic> and <italic>B</italic> have similar size, and sketches are composed of 7 minimum hashes (solid points). <italic>A</italic> and <italic>B</italic> can get high resemblance from sketches since the distributions of sketch hashes are similar across space <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^b$$\end{document}</tex-math><mml:math id="M54"><mml:msup><mml:mn>2</mml:mn><mml:mi>b</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq27.gif"/></alternatives></inline-formula>. In <bold>b</bold>, set <italic>B</italic> is three times the size of set <italic>A</italic> and contains <italic>A</italic> totally. The larger set <italic>B</italic> thus saturates the space more densely. In (<inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_1$$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mi>b</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq28.gif"/></alternatives></inline-formula>), sketches are both of fixed size of 7. The match rate (1/7) of minimum hashes in the sketches (solid arrow) is much smaller than the containment similarity (7/7) of the original <italic>k</italic>-mer sets. In (<inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b_2$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq29.gif"/></alternatives></inline-formula>), sketch sizes are variable and in proportion to the size of respective <italic>k</italic>-mer sets. Thus, the sketch size (number of solid points) of <italic>A</italic> is still 7, while the sketch size of <italic>B</italic> is now 21. The matching rate of minimum hashes in set <italic>A</italic> is similar to the containment similarity between <italic>A</italic> and <italic>B</italic></p></caption><graphic xlink:href="13059_2023_2961_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
    <sec id="Sec13">
      <title>Minimum spanning tree for single-linkage hierarchical clustering</title>
      <p id="Par40">Hierarchical clustering requires computation of all pairwise distances. The dimension of the distance matrix is <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(N^2)$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq30.gif"/></alternatives></inline-formula>, where <italic>N</italic> is the number of genomes. It is unpractical to store the whole matrix in memory for large input datasets. However, the memory footprint of the MST is only linear with respect to the number of genomes which is significantly smaller than the whole distance matrix. Thus, we have designed a parallelized streaming approach for MST generation. Subsequently, the MST is chosen to generate clusters by cutting off the edges whose lengths are over a predefined threshold.</p>
      <p id="Par41">Our streaming method is inspired by the edge-partition-based distributed MST algorithm [<xref ref-type="bibr" rid="CR39">39</xref>]. The all-to-all distance matrix can be considered as a complete graph. In this complete graph, vertices express genomes, and the weights of edges express their pairwise distances. When the graph is partitioned into several sub-graphs, any edge that does not belong to the MST of a sub-graph containing the edge does not belong to the MST of the original graph [<xref ref-type="bibr" rid="CR40">40</xref>]. This property guarantees that the MST can be constructed by merging sub-MSTs in streaming fashion, which avoids storing the whole distance matrix in memory. In our implementation, the sub-MSTs are concurrently constructed using multiple threads. As shown in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>, <italic>t</italic> rows of the distance matrix compose a sub-graph. <italic>P</italic> sub-MSTs are generated from <italic>P</italic> sub-graphs concurrently, where <italic>P</italic> is the thread number. <italic>P</italic> sub-MSTs are updated as new pairwise distances are calculated. The final MST is merged from the <italic>P</italic> sub-MSTs after finishing the whole distance computing.</p>
      <p id="Par42">For runtime consideration, the distance computation and sub-MST generation and updating are implemented in parallel by multiple threads. Only <italic>P</italic> sub-MSTs and <italic>P</italic> sub-graphs are stored in memory for MST generation. For <italic>N</italic> input genomes, the magnitude of sub-graphs and sub-MSTs is <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t \cdot N$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mi>t</mml:mi><mml:mo>Â·</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq31.gif"/></alternatives></inline-formula> and <italic>N</italic>, respectively. For <italic>P</italic> threads, the total memory footprint is of a magnitude of <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(P \cdot (t+1) \cdot N)$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>P</mml:mi><mml:mo>Â·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>Â·</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq32.gif"/></alternatives></inline-formula>. The parameter <italic>t</italic> is used to control the dimension of the sub-graphs which is set to 8 by default. Since <italic>P</italic> and <italic>t</italic> are much smaller than <italic>N</italic>, the total memory footprint is typically linear in the number of genomes.</p>
      <p id="Par43">The time consumption of generating clusters from the MST is comparatively small. Since the MST for a dataset will not change as long as the sketch parameters do not change, we store the MST information into an output file. Clusters with different thresholds can be generated from the stored MST file without re-generating the MST again. Users can run with <italic>-f</italic> option to use the stored MST file as an input.</p>
      <p id="Par44">Note that the MST-based clustering strategy is equal to the single-linkage hierarchical clustering, which may chain two separated clusters together by the noise point. <italic>clust-mst</italic> takes into account the local density of each genome vertex [<xref ref-type="bibr" rid="CR41">41</xref>]. For each vertex, the local density is defined as the number of vertices with a distance under the threshold. For each cluster generated by cutting off the over threshold edges of the MST, in default the vertex, <italic>x</italic>, is labeled as noise when its local density <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$dens(x) &lt; min(Q_1, 2)$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq33.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Q_1$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>Q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq34.gif"/></alternatives></inline-formula> is the first quartile. <italic>clust-mst</italic> will then cut the edges with the noise vertices to reduce the impact of chaining two clusters together by noise vertices.</p>
    </sec>
    <sec id="Sec14">
      <title>Benchmarking clustering accuracy</title>
      <p id="Par45">We use purity and NMI (Normalized Mutual Information) score [<xref ref-type="bibr" rid="CR42">42</xref>] to assess the quality of clustering results. The ground truth of bacteria genomes from NCBI Refseq and Genbank databases are the species taxonomy identifier (<italic>species-taxid</italic>) from the assembly summary report files.</p>
      <p id="Par46">Purity is used to measure the degrees of mixing for each cluster. A purity score of 1.0 means the elements in a predicted cluster are all from the same real class. For the predicted clusters <italic>P</italic>, the ground truth class <italic>G,Â and the total genome number N</italic>, the purity can be computed by Eq. <xref rid="Equ1" ref-type="disp-formula">1</xref>. However, purity does not penalize scattered cluster result leading to a purity score of 1.0 if each element serves as a single cluster.</p>
      <p id="Par47">NMI is a normalization of the Mutual Information (MI) score to scale the results between 0 (no mutual information) and 1.0 (perfect correlation). Equation (<xref rid="Equ2" ref-type="disp-formula">2</xref>) describes the MI of predicted clusters <italic>P</italic> and ground truth class <italic>G</italic> to reveal the mutual dependency between <italic>P</italic> and <italic>G</italic>, where <italic>N</italic> denotes the total number of genomes. MI is normalized by the average entropy of <italic>P</italic> and <italic>G</italic> to scale the results between 0 and 1. Entropy and NMI are computed as shown in Eqs. (<xref rid="Equ3" ref-type="disp-formula">3</xref>) and (<xref rid="Equ4" ref-type="disp-formula">4</xref>). NMI score computation is implemented with scikit-learn [<xref ref-type="bibr" rid="CR43">43</xref>]. The scripts are publicly available in our repositoryâs evaluation directory [<xref ref-type="bibr" rid="CR44">44</xref>].<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} purity\left( P;G \right) = \frac{1}{N}\sum _{p\in P}^{}\max _{g \in G}\left| p \cap g \right| \end{aligned}$$\end{document}</tex-math><mml:math id="M70" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>y</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>â</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>â</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:munder><mml:mfenced close="|" open="|"><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} MI\left( P;G \right) =\sum _{p\in P}^{}\ \sum _{g\in G}^{}\frac{|p\cap g|}{N}\,log\left( \frac{N|p\cap g|}{|p||g|} \right) \end{aligned}$$\end{document}</tex-math><mml:math id="M72" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>â</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mspace width="4pt"/><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>â</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac><mml:mspace width="0.166667em"/><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo>â©</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mfrac></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} H\left( X \right) = - \sum _{x \in X}^{} \frac{|x|}{N}\ \log \left( \frac{|x|}{N}\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M74" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>X</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>â</mml:mo><mml:mi>X</mml:mi></mml:mrow><mml:mrow/></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac><mml:mspace width="4pt"/><mml:mo>log</mml:mo><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} NMI\left( P;G \right) = \frac{MI\left( P;G \right) }{\left[ H\left( P \right) + H\left( G \right) \right] /2} \end{aligned}$$\end{document}</tex-math><mml:math id="M76" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>N</mml:mi><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>M</mml:mi><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi><mml:mo>Í¾</mml:mo><mml:mi>G</mml:mi></mml:mfenced></mml:mrow><mml:mrow><mml:mfenced close="]" open="["><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>P</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>H</mml:mi><mml:mfenced close=")" open="("><mml:mi>G</mml:mi></mml:mfenced></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="Sec15">
      <title>Parameters</title>
      <sec id="Sec16">
        <title><italic>k</italic>-mer size</title>
        <p id="Par48">Considering accuracy, the value of <italic>k</italic> is a trade-off between sensitivity and specificity [<xref ref-type="bibr" rid="CR10">10</xref>]. Similarities are more sensitive to smaller <italic>k</italic> since <italic>k</italic>-mers are more likely to match. However, there is also a higher chance that collisions may inflate the proportion of shared <italic>k</italic>-mers when the genome size is large. The probability of a specific <italic>k</italic>-mer appearing in a random nucleotide string of size <italic>L</italic> is <inline-formula id="IEq35"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1-(1-|\Sigma |^{-k})^{L}$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:msup><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Î£</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>L</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq35.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq36"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M80"><mml:mi mathvariant="normal">Î£</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq36.gif"/></alternatives></inline-formula> is the alphabet set (<inline-formula id="IEq37"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma = {A,C,G,T}$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mi mathvariant="normal">Î£</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq37.gif"/></alternatives></inline-formula>). The <italic>k</italic>-mer size should be large enough to avoid too many collisions by chance. On the other hand, since <italic>k</italic> consecutive <italic>k</italic>-mers will be affected by a single mutation nucleotide, as <italic>k</italic> grows, the number of matching <italic>k</italic>-mers between genomes is reduced, leading to lower similarity sensitivity between genomes. The optimal <italic>k</italic>-mer size needs to be large enough to significantly reduce the chance collisions without losing the similarity sensitivity [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
        <p id="Par49">To consider both specificity and sensitivity, RabbitTClust firstly scans all input genomes to identify the largest genome length <inline-formula id="IEq38"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_l$$\end{document}</tex-math><mml:math id="M84"><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq38.gif"/></alternatives></inline-formula> and average genome length <inline-formula id="IEq39"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_a$$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq39.gif"/></alternatives></inline-formula>. The <italic>k</italic>-mer size <italic>k</italic> can be computed by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>, where the <italic>L</italic> is the genome length, and the <italic>q</italic> is the desired probability of observing a random <italic>k</italic>-mer [<xref ref-type="bibr" rid="CR31">31</xref>]. The optimal <italic>k</italic>-mer size <inline-formula id="IEq40"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_o$$\end{document}</tex-math><mml:math id="M88"><mml:msub><mml:mi>k</mml:mi><mml:mi>o</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq40.gif"/></alternatives></inline-formula> is computed by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref> using <inline-formula id="IEq41"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q = 0.0001$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq41.gif"/></alternatives></inline-formula> and <inline-formula id="IEq42"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L = L_l$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq42.gif"/></alternatives></inline-formula>. Furthermore, to protect the accuracy from the chance collisions of <italic>k</italic>-mers, we define a warning <italic>k</italic>-mer size <inline-formula id="IEq43"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq43.gif"/></alternatives></inline-formula> as the lower bound when choosing <italic>k</italic>. <inline-formula id="IEq44"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq44.gif"/></alternatives></inline-formula> is computed using <inline-formula id="IEq45"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q = 0.001$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L = L_l$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq46.gif"/></alternatives></inline-formula> by Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>. Users can set a specific <italic>k</italic>-mer size by the option of <inline-formula id="IEq47"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-k$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mo>-</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq47.gif"/></alternatives></inline-formula>, and when the <italic>k</italic>-mer size is smaller than <inline-formula id="IEq48"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_w$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>k</mml:mi><mml:mi>w</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq48.gif"/></alternatives></inline-formula>, the <italic>k</italic>-mer size will be reset to the <inline-formula id="IEq49"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_o$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>k</mml:mi><mml:mi>o</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq49.gif"/></alternatives></inline-formula>.<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k=\big \lceil \log _{\left| \Sigma \right| }\left( L\left( 1-q \right) /q\right) \big \rceil \end{aligned}$$\end{document}</tex-math><mml:math id="M108" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">â</mml:mo></mml:mrow><mml:msub><mml:mo>log</mml:mo><mml:mfenced close="|" open="|"><mml:mi mathvariant="normal">Î£</mml:mi></mml:mfenced></mml:msub><mml:mfenced close=")" open="("><mml:mi>L</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>q</mml:mi></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:mi>q</mml:mi></mml:mfenced><mml:mrow><mml:mo maxsize="1.2em" minsize="1.2em" stretchy="true">â</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2961_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec17">
        <title>Sketch size</title>
        <p id="Par50">MinHash [<xref ref-type="bibr" rid="CR38">38</xref>] is a fast method to estimate the Jaccard similarity of two sets. It has been proven effective in large-scale genome distance estimation [<xref ref-type="bibr" rid="CR10">10</xref>]. Thus, we also adopted this method when designing RabbitTClust. The sketch size is the number of minimum hash values in the MinHash sketch. The memory footprint of the sketch for each genome is about 8KB when the sketch size is set to 1000 (each hash value is saved as an unsigned 64-bit integer). In addition to the memory footprint, the sketch size also influences runtime and accuracy. The MinHash algorithm in RabbitTClust maintains a minHash-heap with complexity <inline-formula id="IEq50"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(L \cdot log|S|)$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mo>Â·</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq50.gif"/></alternatives></inline-formula> where |<italic>S</italic>| is sketch size, and <italic>L</italic> is the genome length. Furthermore, the time of distance computation is linear with respect to the sketch size since it is based on computing the intersections of sets.</p>
        <p id="Par51">The distance estimation accuracy of a pair of genomes improves when using a larger sketch size. Choosing the sketch size is thus a trade-off between the accuracy of distance estimation and efficiency. The memory footprint of sketches and the run time of computing Jaccard or containment are linear in terms of the sketch size. Error bounds decrease with relation to an exponential of the sketch size [<xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR45">45</xref>]. For the distance accuracy, as the initial growing stage of sketch size, the distance estimation accuracy increases a lot. But as the sketch size grows further, the distance estimation accuracy increases slightly. RabbitTClust uses a sketch size of 1000 by default, which is a good balance between accuracy and efficiency in most cases.</p>
        <p id="Par52">The sketch size is in proportion with the genome length for the variable-sized sketch of containment coefficient. The variable sketch size is computed as <inline-formula id="IEq51"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|S| = L \cdot P$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mi>L</mml:mi><mml:mo>Â·</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq51.gif"/></alternatives></inline-formula>, where <italic>L</italic> is the specific genome length and <italic>P</italic> is the sample proportion. The default sampling proportion <inline-formula id="IEq52"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d$$\end{document}</tex-math><mml:math id="M114"><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq52.gif"/></alternatives></inline-formula> is computed as <inline-formula id="IEq53"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_d = 1000 / L_a$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1000</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq53.gif"/></alternatives></inline-formula>, where the <inline-formula id="IEq54"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_a$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>L</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq54.gif"/></alternatives></inline-formula> is the average genome length (average sketch size is 1000). The sketch size and sample proportion can also be specified by <italic>-s</italic> and <italic>-c</italic> options, respectively.</p>
      </sec>
      <sec id="Sec18">
        <title>Distance threshold</title>
        <p id="Par53">For <italic>clust-mst</italic>, the time consumption of generating clusters from the MST is negligible; i.e., its runtime changes little with different thresholds. However, for <italic>clust-greedy</italic> the distance threshold dramatically influences the number of pairwise distance computations; i.e., a smaller distance threshold will generate fewer redundant genomes and more clusters. More clusters in turn results in more pairwise distances computation. Thus, runtime of <italic>clust-greedy</italic> increases with a lower distance threshold.</p>
        <p id="Par54">The MinHash algorithm is a kind of LSH (Locality Sensitive Hashing) with high estimation accuracy for highly similar elements but is less accurate for dissimilar elements [<xref ref-type="bibr" rid="CR30">30</xref>]. To achieve high cluster accuracy, the distance threshold cannot be too large. With the default sketch size of 1000, the recommended distance threshold should be less than 0.1 with an acceptable distance estimated error. A larger sketch size should be used for higher distance thresholds.</p>
        <p id="Par55">For clustering at the species rank of prokaryotic genomes, the 0.05 distance threshold is used as recommended in Mash and fastANI. Our evaluation shows that <italic>clust-mst</italic> achieves the best performance on the <italic>Bacteria</italic> dataset with a distance threshold around of 0.05 (see Fig.Â <xref rid="Fig7" ref-type="fig">7</xref>).<fig id="Fig7"><label>Fig. 7</label><caption><p>Evaluation of distance threshold with different sketch sizes for <italic>clust-mst</italic> on <italic>bact-RefSeq</italic> dataset (s100 in the figure means the sketch size is 100)</p></caption><graphic xlink:href="13059_2023_2961_Fig7_HTML" id="MO12"/></fig></p>
        <p id="Par56">For <italic>clust-greedy</italic>, the distance measurement is <italic>AAF distance</italic> corresponding to containment similarity. Different thresholds correspond to different degrees of redundancy. Users can choose different thresholds to filter out various degrees of redundancy by the option of <italic>-d</italic>.</p>
        <p id="Par57">RabbitTClust determines a valid range of distance thresholds by the <italic>k</italic>-mer size accompanied with sketch size (for <italic>Mash distance</italic>) or sampling proportion (for <italic>AAF distance</italic>). For <italic>Mash distance</italic>, consider the <italic>k</italic>-mer size <italic>k</italic> and sketch size <italic>S</italic>. The minimum scale interval of Jaccard index is computed by <inline-formula id="IEq55"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J_{m} = 1 / S$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>J</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq55.gif"/></alternatives></inline-formula>, and the maximum distance threshold is determined by <inline-formula id="IEq56"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max} = -\frac{1}{k} \ln \frac{2j_{m}}{1+j_{m}}$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>j</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq56.gif"/></alternatives></inline-formula>. For <italic>AAF distance</italic>, consider the <italic>k</italic>-mer size <italic>k</italic>, minimum genome length <inline-formula id="IEq57"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L_{m}$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq57.gif"/></alternatives></inline-formula> and sampling proportion <italic>P</italic>. For variable sketch sizes, the upper bound of the minimum scale interval of containment coefficient is computed as <inline-formula id="IEq58"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{m} = 1 / (L_{m} \cdot P)$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>Â·</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq58.gif"/></alternatives></inline-formula>. The maximum recommended distance threshold is then determined by <inline-formula id="IEq59"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max}= -\frac{1}{k} \ln C_{m}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mfrac><mml:mo>ln</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq59.gif"/></alternatives></inline-formula>. The chosen distance threshold should be less than the <inline-formula id="IEq60"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{max}$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2961_Article_IEq60.gif"/></alternatives></inline-formula> in order to generate the clusters in a valid range.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2961_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1: Figure S1.</bold> The performance evaluation of RabbitTClust on a 64-core Intel workstation.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2961_MOESM2_ESM.xlsx">
            <caption>
              <p><bold>Additional file 2: Table S1.</bold> The list of the complete RefSeq bacteria genomes with repetitive nucleotide content.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2023_2961_MOESM3_ESM.xlsx">
            <caption>
              <p><bold>Additional file 3: Table S2.</bold> The list of the <italic>species-taxid</italic> and <italic>best-match-species-taxid</italic> of the impurity genomes.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="13059_2023_2961_MOESM4_ESM.xlsx">
            <caption>
              <p><bold>Additional file 4: Table S3.</bold> The list of impurity genomes with different <italic>taxid</italic> in genus and family rank.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="13059_2023_2961_MOESM5_ESM.docx">
            <caption>
              <p><bold>Additional file 5:</bold> Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisherâs Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par58">Kevin Pang was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par59">The review history is available as Additional file <xref rid="MOESM5" ref-type="media">5</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authorsâ contributions</title>
    <p>Z.Y. and W.L. designed and supervised this study. X.X. codesigned this study,developed the software, and performed the analyses. L.Y., H.Z., and B.X. helped to perform the experiment analyses. W.Y., B.N., W.L., and B.S. performed the analyses. X.X., Z.Y., W.L., and B.S. wrote the manuscript. All authors read and approved the final manuscript.</p>
    <sec id="FPar3">
      <title>Authorsâ Twitter handles</title>
      <p id="Par60">Twitter handles: @xiaomingxu530 (Xiaoming Xu).</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is partially supported by NSFC Grants 61972231, 62102231; Shandong Provincial Natural Science Foundation (ZR2021QF089); Engineering Research Center of Digital Media Technology, Ministry of Education, China.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The evaluation of RabbitTClust performance on an Intel workstation is available in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    <p> The genome lists filtered as redundant genome are available in Additional file <xref rid="MOESM2" ref-type="media">2</xref>, <xref rid="MOESM3" ref-type="media">3</xref>, and <xref rid="MOESM4" ref-type="media">4</xref>.</p>
    <p> The <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> datasets are available in <ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nlm.nih.gov/genomes/refseq/">https://ftp.ncbi.nlm.nih.gov/genomes/refseq/</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nlm.nih.gov/genomes/genbank/">https://ftp.ncbi.nlm.nih.gov/genomes/genbank/</ext-link>.</p>
    <p> The download scripts of the <italic>bact-RefSeq</italic> and <italic>bact-GenBank</italic> datasets are available in <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/download">https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/download</ext-link>.</p>
    <p> The benchmarking scripts to get the purity and NMI are available in <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/evaluation">https://github.com/RabbitBio/RabbitTClust/tree/main/benchmark/evaluation</ext-link>.</p>
    <p> All experiments in this manuscript are run using RabbitTClust v.2.0.0. RabbitTClust is freely available from <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust">https://github.com/RabbitBio/RabbitTClust</ext-link> [<xref ref-type="bibr" rid="CR44">44</xref>] under a three-clause BSD license. RabbitTClust is also available at zenodo with DOI: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7852098">https://doi.org/10.5281/zenodo.7852098</ext-link> [<xref ref-type="bibr" rid="CR46">46</xref>].</p>
    <p> RabbitTClust is written in C++ and has been tested on 64-bit Linux Systems.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar4">
      <title>Ethics approval and consent to participate</title>
      <p id="Par61">Not applicable.</p>
    </notes>
    <notes id="FPar5">
      <title>Consent for publication</title>
      <p id="Par62">Not applicable.</p>
    </notes>
    <notes id="FPar6" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par63">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Niu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wooley</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast clustering algorithms for metagenomic sequence analysis</article-title>
        <source>Brief Bioinforma.</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>6</issue>
        <fpage>656</fpage>
        <lpage>668</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbs035</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries</article-title>
        <source>Nature Comm.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-07641-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sayers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Cavanaugh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Karsch-Mizrachi</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>GenBank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>D1</issue>
        <fpage>D94</fpage>
        <lpage>D99</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky989</pub-id>
        <?supplied-pmid 30365038?>
        <pub-id pub-id-type="pmid">30365038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Niu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>CD-HIT: accelerated for clustering the next-generation sequencing data</article-title>
        <source>Bioinformatics.</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>23</issue>
        <fpage>3150</fpage>
        <lpage>3152</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts565</pub-id>
        <?supplied-pmid 23060610?>
        <pub-id pub-id-type="pmid">23060610</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Search and clustering orders of magnitude faster than BLAST</article-title>
        <source>Bioinformatics.</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>19</issue>
        <fpage>2460</fpage>
        <lpage>2461</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq461</pub-id>
        <?supplied-pmid 20709691?>
        <pub-id pub-id-type="pmid">20709691</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol.</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>J Mol Biol.</source>
        <year>1981</year>
        <volume>147</volume>
        <issue>1</issue>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(81)90087-5</pub-id>
        <?supplied-pmid 7265238?>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison: benefits, applications, and tools</article-title>
        <source>Genome Biol.</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1319-7</pub-id>
        <pub-id pub-id-type="pmid">28077169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rowe</surname>
            <given-names>WP</given-names>
          </name>
        </person-group>
        <article-title>When the levee breaks: a practical guide to sketching algorithms for processing the flood of genomic data</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1809-x</pub-id>
        <pub-id pub-id-type="pmid">30606230</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mallonee</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Bergman</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mash: fast genome and metagenome distance estimation using MinHash</article-title>
        <source>Genome Biol.</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0997-x</pub-id>
        <pub-id pub-id-type="pmid">26753840</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Jaroszewski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Godzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Clustering of highly homologous sequences to reduce the size of large protein databases</article-title>
        <source>Bioinformatics.</source>
        <year>2001</year>
        <volume>17</volume>
        <issue>3</issue>
        <fpage>282</fpage>
        <lpage>283</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.3.282</pub-id>
        <?supplied-pmid 11294794?>
        <pub-id pub-id-type="pmid">11294794</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Luczak</surname>
            <given-names>BB</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>MeShClust: an intelligent tool for clustering DNA sequences</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>14</issue>
        <fpage>e83</fpage>
        <lpage>e83</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky315</pub-id>
        <?supplied-pmid 29718317?>
        <pub-id pub-id-type="pmid">29718317</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Jain C, Dilthey A, Koren S, Aluru S, Phillippy AM. A fast approximate algorithm for mapping long reads to large reference databases. In: International Conference on Research in Computational Molecular Biology. Cham: Springer; 2017. p. 66â81.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Starrett</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Sappington</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kostic</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Buck</surname>
            <given-names>CB</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mash Screen: high-throughput sequence containment estimation for genome discovery</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>232</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1841-x</pub-id>
        <?supplied-pmid 31690338?>
        <pub-id pub-id-type="pmid">31690338</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Yin</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>RabbitV: fast detection of viruses and microorganisms in sequencing data on multi-core architectures</article-title>
        <source>Bioinformatics.</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>10</issue>
        <fpage>2932</fpage>
        <lpage>2933</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac187</pub-id>
        <?supplied-pmid 35561184?>
        <pub-id pub-id-type="pmid">35561184</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>MelanÃ§on</surname>
            <given-names>CE</given-names>
            <suffix>III</suffix>
          </name>
        </person-group>
        <article-title>A computational toolset for rapid identification of SARS-CoV-2, other viruses and microorganisms from sequencing data</article-title>
        <source>Brief Bioinforma.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>924</fpage>
        <lpage>935</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbaa231</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Murray</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Re-evaluating the evidence for a universal genetic boundary among microbial species</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>4059</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-24128-2</pub-id>
        <?supplied-pmid 34234129?>
        <pub-id pub-id-type="pmid">34234129</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez-R</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Conrad</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
        </person-group>
        <article-title>Reply to:âRe-evaluating the evidence for a universal genetic boundary among microbial speciesâ</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-24129-1</pub-id>
        <pub-id pub-id-type="pmid">33397941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Steinegger</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>SÃ¶ding</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Clustering huge protein sequence sets in linear time</article-title>
        <source>Nat Commun.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-04964-5</pub-id>
        <pub-id pub-id-type="pmid">29317637</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dai</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Gclust: A Parallel Clustering Tool for Microbial Genomic Data</article-title>
        <source>Genomics Proteomics Bioinforma.</source>
        <year>2019</year>
        <volume>17</volume>
        <issue>5</issue>
        <fpage>496</fpage>
        <lpage>502</lpage>
        <pub-id pub-id-type="doi">10.1016/j.gpb.2018.10.008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>MeShClust v3. 0: High-quality clustering of DNA sequences using the mean shift algorithm and alignment-free identity scores</article-title>
        <source>BMC Genomics.</source>
        <year>2022</year>
        <volume>23</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>16</lpage>
        <pub-id pub-id-type="doi">10.1186/s12864-022-08619-0</pub-id>
        <pub-id pub-id-type="pmid">34979896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Olman</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Minimum Spanning Trees for Gene Expression Data Clustering</article-title>
        <source>Genome Informat.</source>
        <year>2001</year>
        <volume>12</volume>
        <fpage>24</fpage>
        <lpage>33</lpage>
        <pub-id pub-id-type="doi">10.11234/gi1990.12.24</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>OâLeary</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Wright</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Brister</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Ciufo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Haddad</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McVeigh</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D733</fpage>
        <lpage>D745</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1189</pub-id>
        <?supplied-pmid 26553804?>
        <pub-id pub-id-type="pmid">26553804</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kitts</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Church</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Thibaud-Nissen</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hem</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Sapojnikov</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assembly: a resource for assembled genomes at NCBI</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D73</fpage>
        <lpage>D80</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1226</pub-id>
        <?supplied-pmid 26578580?>
        <pub-id pub-id-type="pmid">26578580</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schloss</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Westcott</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Ryabin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hollister</surname>
            <given-names>EB</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Introducing mothur: Open-Source, Platform-Independent, Community-Supported Software for Describing and Comparing Microbial Communities</article-title>
        <source>Appl Environ Microbiol.</source>
        <year>2009</year>
        <volume>75</volume>
        <issue>23</issue>
        <fpage>7537</fpage>
        <lpage>7541</lpage>
        <pub-id pub-id-type="doi">10.1128/AEM.01541-09</pub-id>
        <?supplied-pmid 19801464?>
        <pub-id pub-id-type="pmid">19801464</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Zhang H, Song H, Xu X, Chang Q, Wang M, Wei Y, etÂ al. RabbitFX: Efficient Framework for FASTA/Q File Parsing on Modern Multi-Core Platforms. IEEE/ACM Trans Comput Biol Bioinforma. 2022.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Klib: a Generic Library in C. <ext-link ext-link-type="uri" xlink:href="https://github.com/attractivechaos/klib">https://github.com/attractivechaos/klib</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">RabbitSketch: Fast sketch library for DNA or normal sequence data. <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitSketch">https://github.com/RabbitBio/RabbitSketch</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>MarÃ§ais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Solomon</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Kingsford</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Sketching and sublinear data structures in genomics</article-title>
        <source>Ann Rev Biomed Data Sci.</source>
        <year>2019</year>
        <volume>2</volume>
        <fpage>93</fpage>
        <lpage>118</lpage>
        <pub-id pub-id-type="doi">10.1146/annurev-biodatasci-072018-021156</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koslicki</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Zabeti</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Improving minhash via the containment index with applications to metagenomic analysis</article-title>
        <source>Appl Math Comput.</source>
        <year>2019</year>
        <volume>354</volume>
        <fpage>206</fpage>
        <lpage>215</lpage>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fofanov</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Katili</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Belosludtsev</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Powdrill</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>How independent are the appearances of n-mers in different genomes?</article-title>
        <source>Bioinformatics.</source>
        <year>2004</year>
        <volume>20</volume>
        <issue>15</issue>
        <fpage>2421</fpage>
        <lpage>2428</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth266</pub-id>
        <?supplied-pmid 15087315?>
        <pub-id pub-id-type="pmid">15087315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jin</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Kssd: sequence dimensionality reduction by k-mer substring space sampling enables real-time large-scale datasets analysis</article-title>
        <source>Genome Biol.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-021-02303-4</pub-id>
        <pub-id pub-id-type="pmid">33397451</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fan</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ives</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Surget-Groba</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Cannon</surname>
            <given-names>CH</given-names>
          </name>
        </person-group>
        <article-title>An assembly and alignment-free method of phylogeny reconstruction from next-generation sequencing data</article-title>
        <source>BMC Genomics.</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1647-5</pub-id>
        <pub-id pub-id-type="pmid">25553907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ciufo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kannan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sharma</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Badretdin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Using average nucleotide identity to improve taxonomic assignments in prokaryotic genomes at the NCBI</article-title>
        <source>Int J Syst Evol Microbiol.</source>
        <year>2018</year>
        <volume>68</volume>
        <issue>7</issue>
        <fpage>2386</fpage>
        <pub-id pub-id-type="doi">10.1099/ijsem.0.002809</pub-id>
        <?supplied-pmid 29792589?>
        <pub-id pub-id-type="pmid">29792589</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Effective sequence similarity detection with strobemers</article-title>
        <source>Genome Res.</source>
        <year>2021</year>
        <volume>31</volume>
        <issue>11</issue>
        <fpage>2080</fpage>
        <lpage>2094</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.275648.121</pub-id>
        <?supplied-pmid 34667119?>
        <pub-id pub-id-type="pmid">34667119</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <mixed-citation publication-type="other">SMHasher. <ext-link ext-link-type="uri" xlink:href="https://github.com/aappleby/smhasher">https://github.com/aappleby/smhasher</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yin</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>RabbitMash: accelerating hash-based genome analysis on modern multi-core architectures</article-title>
        <source>Bioinformatics.</source>
        <year>2021</year>
        <volume>37</volume>
        <issue>6</issue>
        <fpage>873</fpage>
        <lpage>875</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa754</pub-id>
        <?supplied-pmid 32845281?>
        <pub-id pub-id-type="pmid">32845281</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <mixed-citation publication-type="other">Broder AZ. On the resemblance and containment of documents. In: Proceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No. 97TB100171). Salerno: IEEE; 1997. p. 21â29.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Lattanzi S, Moseley B, Suri S, Vassilvitskii S. Filtering: a method for solving graph problems in mapreduce. In: Proc. ACM Symposium on Parallelism in Algorithms and Architectures. New York: Association for Computing Machinery; 2011. p. 85â94.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">LonÄar V, Å krbiÄ S, BalaÅ¾ A. Parallelization of Minimum Spanning Tree Algorithms Using Distributed Memory Architectures. In: Transactions on Engineering Technologies. Dordrecht: Springer; 2014. p.543-554.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ros</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Guillaume</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A hierarchical clustering algorithm and an improvement of the single linkage criterion to deal with noise</article-title>
        <source>Exp Syst Appl.</source>
        <year>2019</year>
        <volume>128</volume>
        <fpage>96</fpage>
        <lpage>108</lpage>
        <pub-id pub-id-type="doi">10.1016/j.eswa.2019.03.031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Manning</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Raghavan</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>SchÃ¼tze</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>Introduction to Information Retrieval</source>
        <year>2008</year>
        <publisher-loc>Cambridge</publisher-loc>
        <publisher-name>Cambridge University Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedregosa</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gramfort</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michel</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Thirion</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Grisel</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scikit-learn: Machine Learning in Python</article-title>
        <source>J Mach Learn Res.</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>85</issue>
        <fpage>2825</fpage>
        <lpage>2830</lpage>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">RabbitTClust: enabling fast clustering analysis of millions bacteria genomes with MinHash sketches. <ext-link ext-link-type="uri" xlink:href="https://github.com/RabbitBio/RabbitTClust">https://github.com/RabbitBio/RabbitTClust</ext-link>. Accessed 11 Oct 2022.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Criscuolo A. On the transformation of MinHash-based uncorrected distances into proper evolutionary distances for phylogenetic inference. F1000Res. 2020;9,1309.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Xu X, Yin Z, Yan L, Zhang H, Xu B, Wei Y, et al. RabbitTClust: enabling fast clustering analysis of millions bacteria genomes with MinHash sketches. Zenodo; 2023. 10.5281/zenodo.7852098.</mixed-citation>
    </ref>
  </ref-list>
</back>

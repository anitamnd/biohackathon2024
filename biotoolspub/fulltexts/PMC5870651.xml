<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5870651</article-id>
    <article-id pub-id-type="pmid">28881999</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btx267</article-id>
    <article-id pub-id-type="publisher-id">btx267</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Ismb/Eccb 2017: The 25th Annual Conference Intelligent Systems for Molecular Biology Held Jointly with the 16th Annual European Conference on Computational Biology, Prague, Czech Republic, July 21–25, 2017</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>RNA</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>DeepBound: accurate identification of transcript boundaries via deep convolutional neural fields</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Shao</surname>
          <given-names>Mingfu</given-names>
        </name>
        <xref ref-type="aff" rid="btx267-aff1">1</xref>
        <xref ref-type="corresp" rid="btx267-cor1"/>
        <xref ref-type="author-notes" rid="btx267-FM1"/>
        <!--<email>mingfu.shao@cs.cmu.edu</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ma</surname>
          <given-names>Jianzhu</given-names>
        </name>
        <xref ref-type="aff" rid="btx267-aff2">2</xref>
        <xref ref-type="author-notes" rid="btx267-FM1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Sheng</given-names>
        </name>
        <xref ref-type="aff" rid="btx267-aff3">3</xref>
        <xref ref-type="corresp" rid="btx267-cor1"/>
        <xref ref-type="author-notes" rid="btx267-FM1"/>
        <!--<email>realbigws@gmail.com</email>-->
      </contrib>
    </contrib-group>
    <aff id="btx267-aff1"><label>1</label>Department of Computational Biology, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA</aff>
    <aff id="btx267-aff2"><label>2</label>School of Medicine, University of California San Diego, La Jolla, CA, USA</aff>
    <aff id="btx267-aff3"><label>3</label>Computational Bioscience Research Center (CBRC), Computer, Electrical and Mathematical Sciences and Engineering (CEMSE) Division, King Abdullah University of Science and Technology (KAUST), Thuwal, Saudi Arabia</aff>
    <author-notes>
      <corresp id="btx267-cor1">To whom correspondence should be addressed. Email: <email>mingfu.shao@cs.cmu.edu</email> or <email>realbigws@gmail.com</email></corresp>
      <fn id="btx267-FM1">
        <p>Mingfu Shao, Jianzhu Ma and Sheng Wang authors contributed equally.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2017-07-12">
      <day>12</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>7</month>
      <year>2017</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>33</volume>
    <issue>14</issue>
    <fpage>i267</fpage>
    <lpage>i273</lpage>
    <permissions>
      <copyright-statement>© The Author 2017. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2017</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btx267.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="SA1">
        <title>Motivation</title>
        <p>Reconstructing the full-length expressed transcripts (<italic>a.k.a.</italic> the transcript assembly problem) from the short sequencing reads produced by RNA-seq protocol plays a central role in identifying novel genes and transcripts as well as in studying gene expressions and gene functions. A crucial step in transcript assembly is to accurately determine the splicing junctions and boundaries of the expressed transcripts from the reads alignment. In contrast to the splicing junctions that can be efficiently detected from spliced reads, the problem of identifying boundaries remains open and challenging, due to the fact that the signal related to boundaries is noisy and weak.</p>
      </sec>
      <sec id="SA2">
        <title>Results</title>
        <p>We present DeepBound, an effective approach to identify boundaries of expressed transcripts from RNA-seq reads alignment. In its core DeepBound employs deep convolutional neural fields to learn the hidden distributions and patterns of boundaries. To accurately model the transition probabilities and to solve the label-imbalance problem, we novelly incorporate the AUC (area under the curve) score into the optimizing objective function. To address the issue that deep probabilistic graphical models requires large number of labeled training samples, we propose to use simulated RNA-seq datasets to train our model. Through extensive experimental studies on both simulation datasets of two species and biological datasets, we show that DeepBound consistently and significantly outperforms the two existing methods.</p>
      </sec>
      <sec id="SA3">
        <title>Availability and implementation</title>
        <p>DeepBound is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/realbigws/DeepBound">https://github.com/realbigws/DeepBound</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>R01HG007104</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Science Foundation</named-content>
          <named-content content-type="funder-identifier">10.13039/100000001</named-content>
        </funding-source>
        <award-id>DBI-1564955</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>RNA-sequencing (RNA-seq) is a well-established and widely used technology that enables sensitive identification of novel transcripts and accurate measurement of gene expressions (<xref rid="btx267-B37" ref-type="bibr">Wang <italic>et al.</italic>, 2009</xref>). Current high-throughput RNA-seq protocols usually produce short sequencing reads of the expressed transcripts in a given sample. Therefore, a fundamental computational problem is to reconstruct the full-length expressed transcripts from such short sequencing reads, which is usually referred to as the <italic>transcript assembly</italic> problem. Transcript assembly is very challenging, not only because of the difficulties shared with genome assembly problem, such as sequencing errors, homologous repeats and coverage variations, but more importantly, due to the existence of alternative splicing (in eukaryotes), which drastically increase the complexity of transcript assembly.</p>
    <p>Existing assembly methods are either <italic>reference-based</italic> [for example, Cufflinks (<xref rid="btx267-B32" ref-type="bibr">Trapnell <italic>et al.</italic>, 2010</xref>), Scripture (<xref rid="btx267-B9" ref-type="bibr">Guttman <italic>et al.</italic>, 2010</xref>), IsoLasso (<xref rid="btx267-B17" ref-type="bibr">Li <italic>et al.</italic>, 2011b</xref>), SLIDE (<xref rid="btx267-B15" ref-type="bibr">Li <italic>et al.</italic>, 2011a</xref>), CLIIQ (<xref rid="btx267-B18" ref-type="bibr">Lin <italic>et al.</italic>, 2012</xref>), CEM (<xref rid="btx267-B16" ref-type="bibr">Li and Jiang, 2012</xref>), MITIE (<xref rid="btx267-B2" ref-type="bibr">Behr <italic>et al.</italic>, 2013</xref>), Traph (<xref rid="btx267-B31" ref-type="bibr">Tomescu <italic>et al.</italic>, 2013</xref>), StringTie (<xref rid="btx267-B27" ref-type="bibr">Pertea <italic>et al.</italic>, 2015</xref>) and TransComb (<xref rid="btx267-B21" ref-type="bibr">Liu <italic>et al.</italic>, 2016b</xref>)], or <italic>de novo</italic> [for example, TransABySS (<xref rid="btx267-B28" ref-type="bibr">Robertson <italic>et al.</italic>, 2010</xref>), Rnnotator (<xref rid="btx267-B22" ref-type="bibr">Martin <italic>et al.</italic>, 2010</xref>), Trinity (<xref rid="btx267-B7" ref-type="bibr">Grabherr <italic>et al.</italic>, 2011</xref>), SOAPdenovo-Trans (<xref rid="btx267-B38" ref-type="bibr">Xie <italic>et al.</italic>, 2014</xref>), Velvet (<xref rid="btx267-B39" ref-type="bibr">Zerbino and Birney, 2008</xref>), Oases (<xref rid="btx267-B29" ref-type="bibr">Schulz <italic>et al.</italic>, 2012</xref>), IDBA-Tran (<xref rid="btx267-B26" ref-type="bibr">Peng <italic>et al.</italic>, 2013</xref>) and BinPacker (<xref rid="btx267-B20" ref-type="bibr">Liu <italic>et al.</italic>, 2016a</xref>)], depending on whether a reference genome is assumed available and being used. Reference-based methods usually give higher accuracy comparing to <italic>de novo</italic> methods. In contrast to the <italic>de novo</italic> methods that gives the nucleotide sequences of the expressed transcripts, reference based methods infer the structures of expressed transcripts, i.e. the coordinates of the <italic>splicing junctions</italic> and <italic>boundaries</italic> (i.e. 5′ and 3′ ends) <italic>w.r.t.</italic> the reference genome for each expressed transcript. To achieve this, reference-based methods first align all the reads to the reference genome using RNA-seq aligners [for example, TopHat2 (<xref rid="btx267-B10" ref-type="bibr">Kim <italic>et al.</italic>, 2013</xref>), STAR (<xref rid="btx267-B5" ref-type="bibr">Dobin <italic>et al.</italic>, 2013</xref>) and HISAT (<xref rid="btx267-B11" ref-type="bibr">Kim <italic>et al.</italic>, 2015</xref>)]. Then the reads are clustered into different gene loci based on the alignment, and the coordinates of splicing junctions and boundaries of all expressed isoforms are inferred. Finally, within each gene loci, these coordinates are organized in a so-called <italic>splice graph</italic>, and the expressed transcripts are assembled by computing a set of paths so as to mostly fit the splice graph.</p>
    <p>Hence, accurate identification of the splicing junctions and boundaries from the reads alignment is crucial, since they provide building-blocks for transcript assembly. The signal for splicing junctions usually can be clearly reflected in the reads alignment, making the identification of splicing junctions a relatively easy task. Specifically, a splicing junction can be inferred by a group of reads (called <italic>spliced reads</italic>) which are all separately aligned to the reference genome with identical separating coordinates (see <xref ref-type="fig" rid="btx267-F1">Fig. 1a</xref>). In contrast, such strong signal does not exist for transcript boundaries. The intuition that can be used to identify boundaries is that the read coverage tends to increase (resp. decrease) when a transcript starts (resp. terminates). However, such signal is noisy and weak, making the task of identification of boundaries very challenging.</p>
    <fig id="btx267-F1" orientation="portrait" position="float">
      <label>Fig. 1</label>
      <caption>
        <p>Illustration of identification of splicing junctions and challenging of identifying boundaries. Exons and introns are represented as thick orange bars and thin green bars, respectively. Reads are represented as blue bars, where spliced reads are connected with dotted lines. (<bold>a</bold>) Splicing junction can be inferred from a group of aligned spliced reads. (<bold>b</bold>) A transcript starts in the middle of an exon. In this case, we can observe an increasing of read coverage. TypicalRule shall fail to identify this boundary. (<bold>c</bold>) A gap appears in the middle of an exon. TypicalRule shall report two false-positive boundaries. (<bold>d</bold>) Two transcripts are bridges by reads. TypicalRule shall miss these two boundaries</p>
      </caption>
      <graphic xlink:href="btx267f1"/>
    </fig>
    <p>Limited efforts have been focused on inferring boundaries of expressed transcripts from RNA-seq reads alignment. Current reference-based transcript assemblers usually use a simple rule to identify boundaries: the coordinates where reads appear and disappear are identified as start and end boundaries, respectively (hereinafter we call it as TypicalRule). TypicalRule suffers from both high false-positive rate and false-negative rate for the following reasons (<xref ref-type="fig" rid="btx267-F1">Fig. 1b–d</xref>). First, some boundaries are inside exons, and for such cases TypicalRule is impossible to identify them (<xref ref-type="fig" rid="btx267-F1">Fig. 1b</xref>). Second, a region within an exon might not be covered by any reads due to low sequencing depth, high coverage variation and alignment errors; such gap shall result in TypicalRule reporting two false-positive boundaries (<xref ref-type="fig" rid="btx267-F1">Fig. 1c</xref>). Third, TypicalRule shall also miss two boundaries if contaminations of DNA sequences or misalignments that bridge two transcripts (<xref ref-type="fig" rid="btx267-F1">Fig. 1d</xref>). A recent study on meta-assembly employs a more sophisticated method to infer boundaries of the expressed transcripts (<xref rid="btx267-B24" ref-type="bibr">Niknafs <italic>et al.</italic>, 2016</xref>). This method employs Mann–Whitney <italic>U</italic> test and fold change comparison to identify significant coverage change (hereinafter we call it MWUTest). However, as we will show in this paper, the accuracy of MWUTest is still very low, due to its limited capability to model transitions and to handle noise.</p>
    <p>In this work, we propose a novel algorithmic framework, DeepBound, to identify boundaries of expressed transcripts from reads alignment by using deep convolutional neural fields (DeepCNF) (<xref rid="btx267-B33" ref-type="bibr">Wang <italic>et al.</italic>, 2015</xref>, <xref rid="btx267-B36" ref-type="bibr">2016c</xref>). Different from previous statistical methods, DeepBound can integrate a variety of information and automatically determine their quantity under different circumstances. Our model and algorithm are particularly designed so as to take advantage of the properties and to address the challengings of boundary detection. Specifically, first, DeepBound models the boundary detection problem as a sequential labeling problem using a conditional probabilistic graphical model (<xref rid="btx267-B13" ref-type="bibr">Lafferty <italic>et al.</italic>, 2001</xref>). The key idea is to quantify the probability of observing the boundaries on position <italic>i</italic> given the features and states around <italic>i</italic>. Second, given billion level of potential boundaries, patterns of boundaries are complicated. Previous sequential graphical model such as Conditional Random Field and Hidden Markov Model cannot model such complicated scenarios. In contrast, DeepCNF can naturally model complex pattern hidden in the boundaries. Third, as the boundaries are extremely sparse comparing to non-boundary coordinates, previous machine learning models will all be biased towards predicting the input samples as non-boundaries. The inherent reason is that it is very hard to discriminate the true signal with the outliers for sparse observations. To handle this highly label-imbalanced problem, we introduce a novel objective function which directly models the AUC score between the predicted and actual labels (Wang <italic>et al.</italic>, <xref rid="btx267-B34" ref-type="bibr">2016a</xref>,<xref rid="btx267-B35" ref-type="bibr">b</xref>). The price we pay is that we get a new objective function which is neither smooth nor convex. However, by applying the Chebyshev approximation (<xref rid="btx267-B3" ref-type="bibr">Calders and Jaroszewicz, 2007</xref>) on this objective function, we can still be able to optimize it efficiently.</p>
    <p>To address the issue that DeepCNF requires large volume of labeled training samples, we novelly propose to use simulation RNA-seq data to train our model. Ideally, realistic parametric distribution of boundaries can be learned more accurately by such a supervised learning way. To valid our assumption and also to compare the performance of our method with that of TypicalRule and MWUTest, we test these methods on simulation datasets from both human and mouse species, as well as on biological RNA-seq datasets. The results demonstrate that the model trained with simulation datasets on one species can also perform well on another species and on biological datasets. On all testing datasets, our methods significantly outperforms other two methods.</p>
  </sec>
  <sec>
    <title>2 Experimental results</title>
    <p>In this section, we first introduce the experimental pipeline and the evaluation measurements in Section 2.1. After that we then illustrate the performance of all three methods on simulation datasets in Section 2.2, and that on biological datasets in Section 2.3.</p>
    <sec>
      <title>2.1 Experimental settings</title>
      <p>To identify boundaries of the expressed transcripts in a given RNA-seq dataset, we first align all the reads to the reference genome using the recent RNA-seq aligner HISAT2 (<xref rid="btx267-B11" ref-type="bibr">Kim <italic>et al.</italic>, 2015</xref>). We then cluster reads into different <italic>gene loci</italic> according to their aligned coordinates such that the distance between adjacent gene loci is at least 50 bp. Within each gene loci, splicing junctions are identified, defined as two or more spliced reads that share the same splicing coordinates. We use all these splicing junctions as well as the start and end boundaries of the gene loci to partition the whole gene loci into separate <italic>partial exons</italic> (see <xref ref-type="fig" rid="btx267-F2">Fig. 2</xref>). Each partial exon serves as an independent instance, i.e. each method will take a partial exon (the features of this partial exon, such as coverage profile, sequence information, etc.) as input and identify boundaries of the expressed transcripts within this partial exon. For each dataset and each method, the predicted boundaries by this method for this dataset shall be the union of the identified boundaries for all partial exons in this dataset.</p>
      <fig id="btx267-F2" orientation="portrait" position="float">
        <label>Fig. 2</label>
        <caption>
          <p>Illustration of partial exons within a gene loci. Thick orange bars (representing exons) and thin green bars (representing introns) show the (unknown) structures of the expressed transcripts. Green bars represent the observed reads that aligned to the reference genome. Notice that the three expressed transcripts come from two genes, while we identify all the reads as a single gene loci (because the single read in the middle of <italic>I</italic><sub>4</sub> bridges the two genes). Six splice junctions, (<italic>B</italic>, <italic>C</italic>), (<italic>D</italic>, <italic>E</italic>), (<italic>F</italic>, <italic>G</italic>), (<italic>D</italic>, <italic>G</italic>), (<italic>H</italic>, <italic>I</italic>) and (<italic>J</italic>, <italic>K</italic>), are identified, which, together with the gene loci boundaries, <italic>A</italic> and <italic>L</italic>, partition this gene loci into six partial exons, <italic>I<sub>k</sub></italic>, 1 ≤ <italic>k</italic> ≤ 6. Each partial exon becomes an independent instance. Notice that in partial exon <italic>I</italic><sub>3</sub>, there exists a gap &lt;50 bp, thus the two parts are regarded within a single gene loci</p>
        </caption>
        <graphic xlink:href="btx267f2"/>
      </fig>
      <p>We apply three methods to identify boundaries, TypicalRule, MWUTest and DeepBound (see Section 3 for details about them). To measure the accuracy of these methods, we first define the ground-truth boundaries. For simulation datasets, we know exactly the expressed transcripts from the simulation process, and their boundaries are served as the ground-truth. For biological datasets, we use the boundaries of all known transcripts in the annotation database, and keep those within a distance of 50 bp for some partial exon (in the studied RNA-seq dataset) as ground-truth. Notice that usually for each RNA-seq dataset, only a subset of them gets expressed, and it could be also that some novel transcripts are expressed but not in the current annotation database. Nevertheless, this way of comparison is still fare enough and commonly used to illustrate the comparative performance of different methods.</p>
      <p>Given the ground-truth boundaries, we use precision and recall to measure the identified boundaries by each method. We evaluate start boundaries and end boundaries separately. For each dataset, we compute a one-to-one matching between the predicted start (resp. end) boundaries and the ground-truth start (resp. end) boundaries, such that each pair of matched boundaries are adjacent according to their coordinates. We say an identified boundary is <italic>correct</italic> if it is matched to some ground-truth boundary and the distance between them is &lt;50 bp. With this definition, we can then compute <italic>precision</italic>, which is defined as the ratio between the number of correct boundaries and the total number of identified boundaries, and <italic>recall</italic>, which is defined as the ratio between the number of correct boundaries and the number of ground-truth boundaries. Notice that for our boundary prediction problem it is not appropriate to use true positive and false positive rates. This is because most genomic positions are not boundaries, making the false positive rate always a tiny number. Thus, it is much more meaningful to use precision and recall to perform evaluation.</p>
    </sec>
    <sec>
      <title>2.2 Results on simulation datasets</title>
      <p>We use Flux-Simulator (<xref rid="btx267-B8" ref-type="bibr">Griebel <italic>et al.</italic>, 2012</xref>) to simulate the RNA-seq datasets. Flux-Simulator utilizes the known transcriptome annotation database (in our experiments, we use ENSEMBL release-87 annotation) and reference genome to simulate the expressed transcripts and the sequenced reads, following certain empirical distributions. To compare the performance of methods on datasets with different sequencing depths, we use Flux-Simulation to generate two types of datasets, one containing 150 M paired-end reads of length 75 bp, while the other containing 15 M 75 bp paired-end reads. To test the methods on different species, we choose two model species, human and mouse, and for each species, we independently simulate 10 datasets for each type of dataset. We independently simulate another two human datasets (with 150 M reads in each dataset), and use them to train our DeepCNF model, as well as to determine the parameters in TypicalRule and MWUTest.</p>
      <p>The comparison of the three methods on 10 human simulation datasets with 150 M reads is illustrated in <xref ref-type="fig" rid="btx267-F3">Figure 3</xref>. First, we can observe that DeepBound significantly outperforms both TypicalRule and MWUTest in terms of both precision and recall. Specifically, DeepBound obtains precision of 44% and 59% for start and end boundaries, while TypicalRule (better than MWUTest) gets 27% and 41%, respectively. The advantage of DeepBound is even more pronounced in terms of recall: DeepBound obtains 87% and 81%, while TypicalRule (better than MWUTest) gets 42% and 61%, for start and end boundaries, respectively. Second, MWUTest is better than TypicalRule in terms of recall (about 8.1% and 5.9%, for start and end boundaries, respectively), but slightly worse in terms of precision (about 0.93% and 2.4%). Third, notice that all three methods have a small variation over the 10 datasets, indicating the consistency of the methods on simulation datasets. Fourth, all the three methods behave quite divergently on start and end boundaries. This is probably because the sequencing protocols have different distributions and patterns on start and end boundaries.</p>
      <fig id="btx267-F3" orientation="portrait" position="float">
        <label>Fig. 3</label>
        <caption>
          <p>Comparison of the three methods on human simulations with each dataset containing 150 M reads. The height of each bar shows the average precision (left part) and recall (right part) over the 10 datasets, while the thin bar on top illustrates the standard deviation</p>
        </caption>
        <graphic xlink:href="btx267f3"/>
      </fig>
      <p>The comparison of the three methods on 10 human simulation datasets with 15 M reads is illustrated in <xref ref-type="fig" rid="btx267-F4">Figure 4</xref>. Again, DeepBound significantly outperforms both TypicalRule and MWUTest, especially in terms of recall. Comparing with the datasets with higher sequencing depth (<xref ref-type="fig" rid="btx267-F3">Fig. 3</xref>), we can see that precision of all three methods get improved, while recall keeps more or less the same. This is probably because higher sequencing depth also introduces more noise for identifying boundaries. Notice that our model is trained on datasets with 150 M reads, thus the results here demonstrate that our method does not suffer from overfitting with the change of sequencing depths.</p>
      <fig id="btx267-F4" orientation="portrait" position="float">
        <label>Fig. 4</label>
        <caption>
          <p>Comparison of the three methods on human simulations with each dataset containing 15 M reads. The height of each bar shows the average precision (left part) and recall (right part) over the 10 datasets, while the thin bar on top illustrates the standard deviation</p>
        </caption>
        <graphic xlink:href="btx267f4"/>
      </fig>
      <p>The comparison of the three methods on 10 mouse datasets are illustrated in <xref ref-type="fig" rid="btx267-F5">Figures 5</xref> and <xref ref-type="fig" rid="btx267-F6">6</xref> for 150 M datasets and 15 M datasets, respectively. We can observe that our method trained on human datasets works surprisingly well on mouse, again outperforms TypicalRule and MWUTest by a significant margin. The fact that human-trained model still performs well for mouse tells that the statistical pattern of boundaries is more heavily related with sequencing and alignment errors, and reads coverage bias, rather than different species (notice that although the sequencing reads are simulated by Flux-Simulator, the reads alignment are generated by ‘real’ aligner, HISAT). This is crucial for transcript boundary detection, since, as we illustrate here, we can use deep learning model to capture the hidden patterns related with boundaries from human data, and the trained model shall be general enough to be applied to infer boundaries for other species.</p>
      <fig id="btx267-F5" orientation="portrait" position="float">
        <label>Fig. 5</label>
        <caption>
          <p>Comparison of the three methods on mouse simulations with each dataset containing 150 M reads. The height of each bar shows the average precision (left part) and recall (right part) over the 10 datasets, while the thin bar on top illustrates the standard deviation</p>
        </caption>
        <graphic xlink:href="btx267f5"/>
      </fig>
      <fig id="btx267-F6" orientation="portrait" position="float">
        <label>Fig. 6</label>
        <caption>
          <p>Comparison of the three methods on mouse simulations with each dataset containing 15 M reads. The height of each bar shows the average precision (left part) and recall (right part) over the 10 datasets, while the thin bar on top illustrates the standard deviation</p>
        </caption>
        <graphic xlink:href="btx267f6"/>
      </fig>
    </sec>
    <sec>
      <title>2.3 Results on biological datasets</title>
      <p>To compare the performance of the three methods on biological datasets, especially to illustrate whether DeepBound trained on simulation datasets can still obtain high accuracy on biological datasets, we choose 10 RNA-seq datasets from ENCODE project (summarized in <xref rid="btx267-T1" ref-type="table">Table 1</xref>). All these 10 datasets are from human species and employ paired-end and strand-specific sequencing protocols. They have various sequencing depths, read lengths and come from divergent cell lines.
<table-wrap id="btx267-T1" orientation="portrait" position="float"><label>Table 1</label><caption><p>Summary of the 10 biological datasets</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="1" colspan="1">SRA Acc.</th><th rowspan="1" colspan="1">GEO Acc.</th><th rowspan="1" colspan="1">#Spots</th><th rowspan="1" colspan="1">Cell Line</th><th rowspan="1" colspan="1">Localization</th><th rowspan="1" colspan="1">Length</th></tr></thead><tbody><tr><td rowspan="1" colspan="1">SRR534319</td><td rowspan="1" colspan="1">GSM981256</td><td rowspan="1" colspan="1">25M</td><td rowspan="1" colspan="1">CD20+</td><td rowspan="1" colspan="1">cell</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR534291</td><td rowspan="1" colspan="1">GSM981244</td><td rowspan="1" colspan="1">114M</td><td rowspan="1" colspan="1">IMR90</td><td rowspan="1" colspan="1">cytosol</td><td rowspan="1" colspan="1">101</td></tr><tr><td rowspan="1" colspan="1">SRR545695</td><td rowspan="1" colspan="1">GSM984609</td><td rowspan="1" colspan="1">40M</td><td rowspan="1" colspan="1">CD14+</td><td rowspan="1" colspan="1">cell</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR387661</td><td rowspan="1" colspan="1">GSM840137</td><td rowspan="1" colspan="1">125M</td><td rowspan="1" colspan="1">K562</td><td rowspan="1" colspan="1">cytosol</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR307911</td><td rowspan="1" colspan="1">GSM758566</td><td rowspan="1" colspan="1">41M</td><td rowspan="1" colspan="1">H1-hESC</td><td rowspan="1" colspan="1">cell</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR545723</td><td rowspan="1" colspan="1">GSM984621</td><td rowspan="1" colspan="1">147M</td><td rowspan="1" colspan="1">HMEpC</td><td rowspan="1" colspan="1">cell</td><td rowspan="1" colspan="1">101</td></tr><tr><td rowspan="1" colspan="1">SRR315323</td><td rowspan="1" colspan="1">GSM765399</td><td rowspan="1" colspan="1">30M</td><td rowspan="1" colspan="1">NHEK</td><td rowspan="1" colspan="1">nucleus</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR307903</td><td rowspan="1" colspan="1">GSM758562</td><td rowspan="1" colspan="1">36M</td><td rowspan="1" colspan="1">BJ</td><td rowspan="1" colspan="1">cell</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR315334</td><td rowspan="1" colspan="1">GSM765404</td><td rowspan="1" colspan="1">39M</td><td rowspan="1" colspan="1">HeLa-S3</td><td rowspan="1" colspan="1">cytosol</td><td rowspan="1" colspan="1">76</td></tr><tr><td rowspan="1" colspan="1">SRR534307</td><td rowspan="1" colspan="1">GSM981252</td><td rowspan="1" colspan="1">167M</td><td rowspan="1" colspan="1">MCF-7</td><td rowspan="1" colspan="1">cytosol</td><td rowspan="1" colspan="1">101</td></tr></tbody></table></table-wrap></p>
      <p>The comparison of the three methods on these biological datasets are illustrated in <xref ref-type="fig" rid="btx267-F7">Figure 7</xref>. Again, our method outperforms TypicalRule and MWUTest by a significant margin in terms of both recall and precision for both start and end boundaries. These results also demonstrate that our model trained on simulation datasets are not overfitted towards simulations, but still be capable of applying to biological datasets.</p>
      <fig id="btx267-F7" orientation="portrait" position="float">
        <label>Fig. 7</label>
        <caption>
          <p>Comparison of the three methods on biological datasets. The height of each bar shows the average precision (left part) and recall (right part) over the 10 datasets, while the thin bar on top illustrates the standard deviation</p>
        </caption>
        <graphic xlink:href="btx267f7"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>3 Materials and methods</title>
    <p>In this Section, we fist describe our method, DeepBound, in Section 3.1. We then give further information about the parameters and implementing details of methodsTypicalRule and MWUTest in Section 3.2 and Section 3.3, respectively.</p>
    <sec>
      <title>3.1 DeepBound</title>
      <p>DeepBound involves three major steps (see <xref ref-type="fig" rid="btx267-F8">Fig. 8</xref>). Given an instance (i.e. a partial exon), DeepBound first computes features for each position within this partial exon based on the coverage profile, and sequence information around the neighborhood of this position. Second, DeepCNF is applied to learn robust logic that can translate these position-specific features to position-specific probabilities, i.e. the probabilities of being a boundary for each position. Third, with these probabilities, we devise an efficient algorithm to infer actual boundaries, through iteratively identify regions that yield high average probables.</p>
      <fig id="btx267-F8" orientation="portrait" position="float">
        <label>Fig. 8</label>
        <caption>
          <p>Illustration of the pipeline of DeepBound. <italic>Left</italic>: Features are extracted from reads alignment. The main feature we are using are the coverage information over a window. <italic>Middle:</italic> Illustration of the DeepCNF model. DeepCNF model takes all features as input, and predicts the probability of being <italic>start, middle, end</italic> for each position. <italic>Right:</italic> The final boundaries are inferred using a greedy algorithm by taking the probabilities from the DeepCNF as input</p>
        </caption>
        <graphic xlink:href="btx267f8"/>
      </fig>
      <sec>
        <title>3.1.1 Position-specific features</title>
        <p>For each position <italic>i</italic> within a partial exon, we compute 17 features. The first feature we add is the reads coverage for position <italic>i</italic>. We then compute features about the context of position <italic>i</italic> by considering different size of windows around position <italic>i</italic>. Specifically, for a window size of <italic>k</italic>, we compute <italic>n<sub>L</sub></italic> and <italic>n<sub>R</sub></italic>, which are the number of reads aligned within the region [<italic>i</italic>– <italic>k</italic>,<italic>i</italic>) and (<italic>i</italic>,<italic>i </italic>+<italic> k</italic>], respectively. By assuming a null hypothesis of uniform distribution, i.e. each of these (<italic>n<sub>L</sub></italic> + <italic>n<sub>R</sub></italic>) reads has an equal chance to be in either region, we can compute the <italic>P</italic>-value of that left (resp. right) region contains significantly more reads than right (resp. left) region:
<disp-formula id="E1"><mml:math id="EQ1"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>n</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mn>0.5</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>;</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mo>=</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:munderover><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>n</mml:mi></mml:mtd></mml:mtr></mml:mtable><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mn>0.5</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p>
        <p>We choose three window sizes, <italic>k</italic> = 20, 50, 100 and for each <italic>k</italic>, we add the two <italic>P</italic>-values <italic>P<sub>L</sub></italic> and <italic>P<sub>R</sub></italic> and the two standard deviations of the read coverage in the two regions as features. We also include the sequence information as features. Specifically, for position <italic>k</italic>, we add four binary features, indicating whether the nucleotide at this position is A, C, G or T. Finally, we incorporate another two binary features, indicating whether position <italic>i</italic> is the start or end boundary of the whole gene loci (the boundaries of gene loci are very likely to be boundaries of expressed transcripts).</p>
      </sec>
      <sec>
        <title>3.1.2 AUC-maximized deep convolutional neural fields</title>
        <p>We formalize the problem of transcript boundary detection as a sequential labeling problem. There are three possible labels, <italic>start, middle, end</italic>, representing whether a position is a start boundary, non-boundary, or end boundary, respectively. For position <italic>i</italic> within the partial exon, its predicted label is determined based on both the features for position <italic>i</italic> and the predicted labels of position (<italic>i</italic> – 1) and (<italic>i</italic> + 1). Our DeepCNF model has two major components: the Conditional Neural Fields (CNF) module (<xref rid="btx267-B25" ref-type="bibr">Peng <italic>et al.</italic>, 2009</xref>), and the Deep Convolutional Neural Network (DCNN) module (<xref rid="btx267-B14" ref-type="bibr">Lee <italic>et al.</italic>, 2009</xref>). The CNF module is a linear chain probabilistic graphical model which explicitly models conditional probability of observing the labeling sequences given the corresponding features. The binary potential of CNF model describes the dependency between the labels of adjacent positions. We substitute the original linear function with the DCNN model to capture the complex patterns in the training data. In particular, given the input features fetched from two adjacent positions, there are nine different DCNN models quantifying the likelihood of observing nine pairs of states (for example, <italic>start</italic> to <italic>middle</italic>, etc.), respectively. The weights of all the DCNN models will be learned directly from training data and the nine DCNN models will compete with each other to determine the final assignments for each adjacent positions. Integrating DCNN model with CNF enables us to capture the complicated underlying predicting logic buried in the millions of labeled instances. To control model complexity and to avoid over-fitting, we add an <italic>L</italic><sub>2</sub>-norm penalty term as the regularization factor and perform 10 fold cross validation to determine the hyper-parameter.</p>
        <p>One of the major challenges for the transcript boundary detection is the number of training samples for different labels are severely imbalanced (<xref rid="btx267-B6" ref-type="bibr">Galar <italic>et al.</italic>, 2012</xref>). Comparing with the non-boundary positions, the boundary positions are much rare, which implies that the empirical estimation of transition probabilities between non-boundary positions and boundary positions will be all nearly zero. This is a common problem for the genome and protein sequence annotation where important nucleotides/genes/residues are rare. Traditional strategies usually solve this problem by down-sampling the training samples with dominating labels. However, in our scenario, down-sampling will break the linear chain model into pieces and lead to a bias estimation of the transition probability. The computational challenge here is to solve the data imbalance problem while still keep the estimation of transition probability unbiased.</p>
        <p>To tackle this problem, in this work we replace the widely used log-likelihood objective function of probabilistic graphical model with an estimated AUC objective function during training process (<xref rid="btx267-B34" ref-type="bibr">Wang <italic>et al.</italic>, 2016a</xref>). Note that this objective function is chosen independently to the structure and the potential functions of probabilistic graphical model. AUC can be derived from the ranking of samples by their predicted confidence of different labels (<xref rid="btx267-B4" ref-type="bibr">Cortes and Mohri, 2003</xref>). The intuition of using AUC objective function is to transform the original classification problem using collection of individual samples to a new pairwise samples ranking problem. That is, instead of trying to assign a particular label <italic>l</italic> to a sample <italic>s</italic>, we try to predict whether sample <italic>s</italic> has a larger marginal probability to be labeled as <italic>l</italic> comparing with sample <italic>t</italic>. It maximizes the AUC score because as long as the partial order of the confidence between any pair of samples maintain the same, the AUC score will be the same. In this application, for a position in a partial exon with label <italic>start</italic>, its predicted marginal probability should be larger than the predicted marginal probability of <italic>middle</italic> and <italic>end</italic> generated by the DeepCNF model. The occurring frequency for each label is then become equal in all the new pairwise ranking samples and hence solve the data imbalance problem.</p>
        <p>However, the above AUC-based objective function introduces lots of non-smooth indicator functions in order to indicate the partial order between two samples, making it not concave and thus very hard to optimize. Another obstacle of the AUC function is the pairwise summation which requires <italic>O</italic>(<italic>n</italic><sup>2</sup>) computing time. To tackle these problems, we first use a 10 order polynomial Chebyshev function to approximate the AUC function as a smooth and differential function (<xref rid="btx267-B3" ref-type="bibr">Calders and Jaroszewicz, 2007</xref>), which can be computed in linear time. To tradeoff between performance and training time, here we use the L-BFGS (<xref rid="btx267-B19" ref-type="bibr">Liu and Nocedal, 1989</xref>) algorithm instead of stochastic gradient descent to optimize it.</p>
        <p>We emphasize that the AUC-maximized DeepCNF is a better way to handle data imbalance issue comparing with other methods such as up-sampling, down-sampling, or weighting samples. This is because these sampling based methods are designed for independent data points, but not suitable for sequence labeling since performing sampling might break the linear chain structure of the sequence. In fact, we have tried down-sampling on <italic>middle</italic> label positions; the result measured by AUC is only around 0.62, compared to AUC-maximized DeepCNF at 0.93, with the same model architecture. We also performed another experiment, in which we assumed each data is independent and trained a model to maximize likelihood. The resulting AUC was around 0.74, which is still not compatible to 0.93.</p>
        <p>We use a three layer neural network with 100 hidden neurons in each layer, and set the window size of features as 75. By trying alternative settings, we found that there is no improvement by using more hidden neurons, more layers, or larger window size regarding the predicting performance. The total 105423 instances (i.e. partial exons) in the two human simulation datasets (with 150 M paired-end reads in each dataset) are used to train our model.</p>
      </sec>
      <sec>
        <title>3.1.3 Predict boundaries</title>
        <p>For each position within a given partial exon, the above DeepCNF model gives the probability of labeling this position as each of the three labels. With these probabilities, we design a greedy algorithm to predict the actual start and end boundaries. Our algorithm iteratively compute the region of length 10 bp, which has the largest average probability of label <italic>start</italic> (resp. <italic>end</italic>) boundary. If this average probability is larger than a threshold <italic>P</italic> (we use 10-fold cross validation to fix this parameter as <italic>P</italic> = 0.25), then the middle position of the region is determined as a start (resp. end) boundary. Once a new boundary <italic>i</italic> is determined, the region (<italic>i</italic> – 50, <italic>i</italic> + 50) shall be exempt from identifying the same type of boundary, and the algorithm continues to iteratively process the two sub-partial exons, one from the leftmost position to (<italic>i</italic> − 50), and the other from (<italic>i</italic> + 50) to the rightmost position of the current sub-problem. The algorithm terminates when no new boundary can be found.</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 TypicalRule</title>
      <p>Given a partial exon, TypicalRule first partitions it into sub-partial exons by identifying gaps (i.e. regions with read coverage of 0) of length larger than a threshold <italic>g</italic>. Then for each such gap, TypicalRule reports two boundaries, the left position of the gap as the end boundary, and the right position of the gap as the start boundary. In addition to that, if the leftmost (resp. rightmost) position of the given partial exon is the start (resp. end) boundary of the whole gene loci, then this position shall be reported as a start (resp. end) boundary. We have tried different value of <inline-formula id="IE1"><mml:math id="IEQ1"><mml:mrow><mml:mi>g</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>5</mml:mn><mml:mo>·</mml:mo><mml:mi>k</mml:mi><mml:mo>|</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>k</mml:mi><mml:mo>≤</mml:mo><mml:mn>9</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> on the two training human simulation datasets, and choose <italic>g</italic> = 10.</p>
    </sec>
    <sec>
      <title>3.3 MWUTest</title>
      <p>MWUTest is a subroutine used in the TACO package to detect <italic>change point</italic> [see (<xref rid="btx267-B24" ref-type="bibr">Niknafs <italic>et al.</italic>, 2016</xref>) Online Methods], which is essentially the same problem we study here to identify transcript boundaries. Given a partial exon, MWUTest iteratively identifies the <italic>potential</italic> change point, defined as the position <italic>i</italic> that minimizes the following mean square error (MSE):
<disp-formula id="E2"><mml:math id="EQ2"><mml:mrow><mml:mi>M</mml:mi><mml:mi>S</mml:mi><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>i</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>+</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <italic>X<sub>k</sub></italic> is the reads coverage at position <italic>k</italic>, <italic>n</italic> is the total length of this partial exon, and <italic>X</italic><sub>1</sub> (resp. <italic>X</italic><sub>2</sub>) is the average reads coverage for the region [1, <italic>i</italic>] (resp. (<italic>i</italic>, <italic>n</italic>]). MWUTest then tests whether this potential change point <italic>i</italic> meets both the following two significance criteria: the <italic>P</italic>-value under the Mann–Whitney <italic>U</italic> test shall be less than a threshold (we use the two training datasets to determine this parameter as 0.00001), and fold change of the average coverage between the two sides shall be larger than a threshold (we fix it as 3.0 through trying different values on the training datasets). If the potential change point satisfies these two criteria, then MWUTest shall report this position as a transcript boundary, and iteratively process the two sub-partial exons. The algorithm terminates if no potential change point meets these two criteria.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion and discussion</title>
    <p>In this paper, we propose a new approach, DeepBound, to identify boundaries of expressed transcripts from RNA-seq reads alignment by using deep convolutional neural fields. The performance of our method has been extensively evaluated on both simulation datasets and biological datasets, and the results demonstrate that our method significantly outperforms two existing methods for boundary detection.</p>
    <p>We emphasize that our model is trained on the reads alignment generated by simulated RNA-seq reads (using Flux-Simulation) followed by aligning them with ‘real’ aligner (HISAT). We show that this training process is successful by illustrating that this model can also achieve high accuracy when applied to other species and to biological datasets. This opens a new way to employ the power of deep learning technologies to solve challenging sequencing problems when large-scale labeled training samples are not available.</p>
    <p>Our learning framework is general and can be easily adapted to add other features and trained and applied to other species. We have provided the training and testing software package and users can use their own gene boundary datasets to train their own model. In this work, we only apply RNA-seq because it is the most general and popular protocol.</p>
    <p>A natural extension of our method is to incorporate it into the complete pipeline of transcript assembly. As a stand-alone software package, DeepBound can be used to detect transcript boundaries in the RNA-seq experiments, and the results can be further applied to correct transcript abundance estimation and to study gene alternative splicing. For example, recent genomic analyses have indicated that many eukaryotic genes can have quite complex alternative splicing products, such as transcript embedded within another transcript (<xref rid="btx267-B12" ref-type="bibr">Kumar, 2009</xref>), transcripts from reverse strand (<xref rid="btx267-B1" ref-type="bibr">Adelman <italic>et al.</italic>, 1987</xref>), intron retention (<xref rid="btx267-B23" ref-type="bibr">Ner-Gaon <italic>et al.</italic>, 2004</xref>) and polyadenylation sites (<xref rid="btx267-B30" ref-type="bibr">Tian and Manley, 2013</xref>). We shall apply our tool to analyze these cases in future.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>M.S. was supported in part by the Gordon and Betty Moore Foundation’s Data-Driven Discovery Initiative Grant GBMF4554, the US National Science Foundation Grants CCF-1256087 and CCF-1319998, and the US National Institutes of Health Grant R01HG007104 to Carl Kinsford. S.W. was supported in part by the US National Institutes of Health Grant R01GM089753 and the US National Science Foundation Grant DBI-1564955 to Jinbo Xu.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="btx267-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Adelman</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>1987</year>) 
<article-title>Two mammalian genes transcribed from opposite strands of the same DNA locus</article-title>. <source>Science</source>, <volume>235</volume>, <fpage>1514</fpage>–<lpage>1518</lpage>.<pub-id pub-id-type="pmid">3547652</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Behr</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>MITIE: simultaneous RNA-Seq-based transcript identification and quantification in multiple samples</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>2529</fpage>–<lpage>2538</lpage>.<pub-id pub-id-type="pmid">23980025</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Calders</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Jaroszewicz</surname><given-names>S.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Efficient AUC optimization for classification</article-title>. <source>In: Proceedings of European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases (ECML PKDD’07), Volume 4702 of Lecture Notes in Computer Science</source>, p.<fpage>42</fpage>–<lpage>53</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cortes</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Mohri</surname><given-names>M.</given-names></name></person-group> (<year>2003</year>) 
<article-title>AUC optimization vs. error rate minimization</article-title>. <source>In: Proceedings of Neural Information Processing. Systems (NIPS’03)</source>, vol. <volume>9</volume>, p.<fpage>10.</fpage></mixed-citation>
    </ref>
    <ref id="btx267-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dobin</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>STAR: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>15</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">23104886</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Galar</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>A review on ensembles for the class imbalance problem: bagging-, boosting-, and hybrid-based approaches</article-title>. <source>IEEE Trans. Syst. Man Cybern. C</source>, <volume>42</volume>, <fpage>463</fpage>–<lpage>484</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grabherr</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2011</year>) 
<article-title>Trinity: reconstructing a full-length transcriptome without a genome from RNA-Seq data</article-title>. <source>Nat. Biotechnol</source>., <volume>29</volume>, <fpage>644</fpage>.<pub-id pub-id-type="pmid">21572440</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Griebel</surname><given-names>T.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Modelling and simulating generic RNA-seq experiments with the flux simulator</article-title>. <source>Nucleic Acids Res</source>., <volume>40</volume>, <fpage>10073</fpage>–<lpage>10083</lpage>.<pub-id pub-id-type="pmid">22962361</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Guttman</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Ab initio reconstruction of cell type-specific transcriptomes in mouse reveals the conserved multi-exonic structure of lincrnas</article-title>. <source>Nat. Biotechnol</source>., <volume>28</volume>, <fpage>503</fpage>–<lpage>510</lpage>.<pub-id pub-id-type="pmid">20436462</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kim</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions</article-title>. <source>Genome Biol</source>., <volume>14</volume>, <fpage>R36</fpage>.<pub-id pub-id-type="pmid">23618408</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kim</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>HISAT: a fast spliced aligner with low memory requirements</article-title>. <source>Nat. Methods</source>, <volume>12</volume>, <fpage>357</fpage>–<lpage>360</lpage>.<pub-id pub-id-type="pmid">25751142</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kumar</surname><given-names>A.</given-names></name></person-group> (<year>2009</year>) 
<article-title>An overview of nested genes in eukaryotic genomes</article-title>. <source>Eukaryotic Cell</source>, <volume>8</volume>, <fpage>1321</fpage>–<lpage>1329</lpage>.<pub-id pub-id-type="pmid">19542305</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lafferty</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>) 
<article-title>Conditional random fields: probabilistic models for segmenting and labeling sequence data</article-title>. <source>In: Proceedings of 18th International Conference on Machine Learning (ICML’01)</source>, vol. <volume>1</volume>, p.<fpage>282</fpage>–<lpage>289</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations</article-title>. <source>In: Proceedings of. 26th International Conference on. Machine Learning (ICML’09)</source>, p.<fpage>609</fpage>–<lpage>616</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2011a</year>) 
<article-title>Sparse linear modeling of next-generation mRNA sequencing (RNA-Seq) data for isoform discovery and abundance estimation</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>108</volume>, <fpage>19867</fpage>–<lpage>19872</lpage>.<pub-id pub-id-type="pmid">22135461</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Jiang</surname><given-names>T.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Transcriptome assembly and isoform expression level estimation from biased RNA-Seq reads</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>2914</fpage>–<lpage>2921</lpage>.<pub-id pub-id-type="pmid">23060617</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>W.</given-names></name></person-group><etal>et al</etal> (<year>2011b</year>) 
<article-title>IsoLasso: a LASSO regression approach to RNA-Seq based transcriptome assembly</article-title>. <source>J. Comput. Biol</source>., <volume>18</volume>, <fpage>1693</fpage>–<lpage>1707</lpage>.<pub-id pub-id-type="pmid">21951053</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lin</surname><given-names>Y.-Y.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>CLIIQ: accurate comparative detection and quantification of expressed isoforms in a population</article-title>. <source>In: Proceedings of. 12th Workshop on Algorithms in Bioinformatics. (WABI’12), Volume 7534 of Lecture Notes in Computer Science</source>, p.<fpage>178</fpage>–<lpage>189</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Nocedal</surname><given-names>J.</given-names></name></person-group> (<year>1989</year>) 
<article-title>On the limited memory BFGS method for large scale optimization</article-title>. <source>Math. Program</source>., <volume>45</volume>, <fpage>503</fpage>–<lpage>528</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2016a</year>) 
<article-title>BinPacker: packing-based de novo transcriptome assembly from RNA-seq data</article-title>. <source>PLoS Comput. Biol</source>., <volume>12</volume>, <fpage>e1004772</fpage>.<pub-id pub-id-type="pmid">26894997</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2016b</year>) 
<article-title>TransComb: genome-guided transcriptome assembly via combing junctions in splicing graphs</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>213</fpage>.<pub-id pub-id-type="pmid">27760567</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Martin</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Rnnotator: an automated de novo transcriptome assembly pipeline from stranded RNA-Seq reads</article-title>. <source>BMC Genomics</source>, <volume>11</volume>, <fpage>1</fpage>.<pub-id pub-id-type="pmid">20044946</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ner-Gaon</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2004</year>) 
<article-title>Intron retention is a major phenomenon in alternative splicing in arabidopsis</article-title>. <source>The Plant J</source>., <volume>39</volume>, <fpage>877</fpage>–<lpage>885</lpage>.<pub-id pub-id-type="pmid">15341630</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Niknafs</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>TACO produces robust multisample transcriptome assemblies from RNA-seq</article-title>. <source>Nat. Methods</source>, <volume>14</volume>, <fpage>68</fpage>–<lpage>70</lpage><pub-id pub-id-type="pmid">27869815</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peng</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>Conditional neural fields</article-title>. <source>In: Proceedings of. Neural Information Processing. Systems (NIPS’09)</source>, p.<fpage>1419</fpage>–<lpage>1427</lpage>.</mixed-citation>
    </ref>
    <ref id="btx267-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peng</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>IDBA-tran: a more robust de novo de Bruijn graph assembler for transcriptomes with uneven expression levels</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>i326</fpage>–<lpage>i334</lpage>.<pub-id pub-id-type="pmid">23813001</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pertea</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>StringTie enables improved reconstruction of a transcriptome from RNA-seq reads</article-title>. <source>Nat. Biotechnol</source>., <volume>33</volume>, <fpage>290</fpage>–<lpage>295</lpage>.<pub-id pub-id-type="pmid">25690850</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Robertson</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>De novo assembly and analysis of RNA-seq data</article-title>. <source>Nat. Methods</source>, <volume>7</volume>, <fpage>909</fpage>–<lpage>912</lpage>.<pub-id pub-id-type="pmid">20935650</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schulz</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Oases: robust de novo RNA-seq assembly across the dynamic range of expression levels</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>1086</fpage>–<lpage>1092</lpage>.<pub-id pub-id-type="pmid">22368243</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tian</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Manley</surname><given-names>J.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Alternative cleavage and polyadenylation: the long and short of it</article-title>. <source>Trends Biochem. Sci</source>., <volume>38</volume>, <fpage>312</fpage>–<lpage>320</lpage>.<pub-id pub-id-type="pmid">23632313</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tomescu</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>A novel min-cost flow method for estimating transcript expression with RNA-Seq</article-title>. <source>BMC Bioinformatics</source>, <volume>14</volume>, <fpage>1.</fpage><pub-id pub-id-type="pmid">23323762</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Trapnell</surname><given-names>C.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Transcript assembly and quantification by RNA-Seq reveals unannotated transcripts and isoform switching during cell differentiation</article-title>. <source>Nat. Biotechnol</source>., <volume>28</volume>, <fpage>511</fpage>–<lpage>515</lpage>.<pub-id pub-id-type="pmid">20436464</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>DeepCNF-D: predicting protein order/disorder regions by weighted deep convolutional neural fields</article-title>. <source>Int. J. Mol. Sci</source>., <volume>16</volume>, <fpage>17315</fpage>–<lpage>17330</lpage>.<pub-id pub-id-type="pmid">26230689</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B34">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2016a</year>) AUC-Maximized deep convolutional neural fields for protein sequence labeling. In: <italic>Proceedings of 15th European. Conference Machine Learning and Principles and Practice of Knowledge Discovery in Databases (ECML PKDD’16</italic>), volume 9852 of <italic>Lecture Notes in Computer Science</italic>, p.1–16. Springer.</mixed-citation>
    </ref>
    <ref id="btx267-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2016b</year>) 
<article-title>AUCpreD: proteome-level protein disorder prediction by AUC-maximized deep convolutional neural fields</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>i672</fpage>–<lpage>i679</lpage>.<pub-id pub-id-type="pmid">27587688</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2016c</year>) 
<article-title>Protein secondary structure prediction using deep convolutional neural fields</article-title>. <source>Sci. Rep</source>., <volume>6</volume>, <fpage>18962.</fpage><pub-id pub-id-type="pmid">26752681</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Z.</given-names></name></person-group><etal>et al</etal> (<year>2009</year>) 
<article-title>RNA-Seq: a revolutionary tool for transcriptomics</article-title>. <source>Nat. Rev. Genet</source>., <volume>10</volume>, <fpage>57</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">19015660</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xie</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>SOAPdenovo-Trans: de novo transcriptome assembly with short RNA-Seq reads</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>1660</fpage>–<lpage>1666</lpage>.<pub-id pub-id-type="pmid">24532719</pub-id></mixed-citation>
    </ref>
    <ref id="btx267-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zerbino</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Birney</surname><given-names>E.</given-names></name></person-group> (<year>2008</year>) 
<article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>. <source>Genome Res</source>., <volume>18</volume>, <fpage>821</fpage>–<lpage>829</lpage>.<pub-id pub-id-type="pmid">18349386</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

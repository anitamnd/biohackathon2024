<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with OASIS Tables with MathML3 v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archive-oasis-article1-mathml3.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats-oasis2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Ecol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Ecol Evol</journal-id>
    <journal-id journal-id-type="doi">10.1002/(ISSN)2045-7758</journal-id>
    <journal-id journal-id-type="publisher-id">ECE3</journal-id>
    <journal-title-group>
      <journal-title>Ecology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-7758</issn>
    <publisher>
      <publisher-name>John Wiley and Sons Inc.</publisher-name>
      <publisher-loc>Hoboken</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10834882</article-id>
    <article-id pub-id-type="doi">10.1002/ece3.10873</article-id>
    <article-id pub-id-type="publisher-id">ECE310873</article-id>
    <article-id pub-id-type="other">ECE-2023-11-01976</article-id>
    <article-categories>
      <subj-group subj-group-type="article-subject-classification">
        <subject>Phylogenetics</subject>
      </subj-group>
      <subj-group subj-group-type="overline">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Research Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>
      <alt-title alt-title-type="left-running-head">Bianchini and Sánchez‐Baracaldo</alt-title>
    </title-group>
    <contrib-group>
      <contrib id="ece310873-cr-0001" contrib-type="author" corresp="yes">
        <name>
          <surname>Bianchini</surname>
          <given-names>Giorgio</given-names>
        </name>
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0223-0339</contrib-id>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
        <address>
          <email>giorgio.bianchini@bristol.ac.uk</email>
        </address>
      </contrib>
      <contrib id="ece310873-cr-0002" contrib-type="author">
        <name>
          <surname>Sánchez‐Baracaldo</surname>
          <given-names>Patricia</given-names>
        </name>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="ece310873-aff-0001">
      <label>
        <sup>1</sup>
      </label>
      <named-content content-type="organisation-division">School of Geographical Sciences</named-content>
      <institution>University of Bristol</institution>
      <city>Bristol</city>
      <country country="GB">UK</country>
    </aff>
    <author-notes>
      <corresp id="correspondenceTo"><label>*</label><bold>Correspondence</bold><break/>
Giorgio Bianchini, School of Geographical Sciences, University of Bristol, University Road, Bristol, BS8 1SS, UK.<break/>
Email: <email>giorgio.bianchini@bristol.ac.uk</email>
<break/>
</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>14</volume>
    <issue seq="330">2</issue>
    <issue-id pub-id-type="doi">10.1002/ece3.v14.2</issue-id>
    <elocation-id>e10873</elocation-id>
    <history>
      <date date-type="received">
        <day>08</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>04</day>
        <month>12</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <!--&#x000a9; 2024 Published by John Wiley & Sons Ltd.-->
      <copyright-statement content-type="article-copyright">© 2024 The Authors. <italic toggle="yes">Ecology and Evolution</italic> published by John Wiley &amp; Sons Ltd.</copyright-statement>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link> License, which permits use, distribution and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="file:ECE3-14-e10873.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Phylogenetic trees illustrate evolutionary relationships between taxa or genes. Tree figures are crucial when presenting results and data, and by creating clear and effective plots, researchers can describe many kinds of evolutionary patterns. However, producing tree plots can be a time‐consuming task, especially as multiple different programs are often needed to adjust and illustrate all data associated with a tree. We present TreeViewer, a new software to draw phylogenetic trees. TreeViewer is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. Every feature of the program is documented and easily accessible, either in the online manual or within the program's interface. We show how TreeViewer can be used to produce publication‐ready figures, saving time by not requiring additional graphical post‐processing tools. TreeViewer is freely available for Windows, macOS, and Linux operating systems and distributed under an AGPLv3 licence from <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>. It has a graphical user interface (GUI), as well as a command‐line interface, which is useful to work with very large trees and for automated pipelines. A detailed user manual with examples and tutorials is also available. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool. Compared to other GUI tools, TreeViewer offers a richer feature set and a finer degree of customisation. Compared to command‐line‐based tools and software libraries, TreeViewer's graphical interface is more accessible. The flexibility of TreeViewer's approach to phylogenetic tree plotting enables the program to produce a wide variety of publication‐ready figures. Users are encouraged to create their own custom modules to expand the functionalities of the program. This sets the scene for an ever‐expanding and ever‐adapting software framework that can easily adjust to respond to new challenges.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <p>TreeViewer is a new software to draw phylogenetic trees that is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool and is released under an AGPLv3 licence for Windows, Linux, and macOS operating systems.<boxed-text position="anchor" content-type="graphic" id="ece310873-blkfxd-0001"><graphic xlink:href="ECE3-14-e10873-g001.jpg" position="anchor" id="jats-graphic-1"/></boxed-text>
</p>
    </abstract>
    <kwd-group kwd-group-type="author-generated">
      <kwd id="ece310873-kwd-0001">figures</kwd>
      <kwd id="ece310873-kwd-0002">graphical interface</kwd>
      <kwd id="ece310873-kwd-0003">Newick</kwd>
      <kwd id="ece310873-kwd-0004">NEXUS</kwd>
      <kwd id="ece310873-kwd-0005">phylogenetic trees</kwd>
      <kwd id="ece310873-kwd-0006">phylogenetics</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="funding-0001">
        <funding-source>
          <institution-wrap>
            <institution>University of Bristol
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000883</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group id="funding-0002">
        <funding-source>
          <institution-wrap>
            <institution>Royal Society
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000288</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="8"/>
      <table-count count="3"/>
      <page-count count="16"/>
      <word-count count="9179"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>source-schema-version-number</meta-name>
        <meta-value>2.0</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>cover-date</meta-name>
        <meta-value>February 2024</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>details-of-publishers-convertor</meta-name>
        <meta-value>Converter:WILEY_ML3GV2_TO_JATSPMC version:6.3.6 mode:remove_FC converted:01.02.2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <p content-type="self-citation">
      <mixed-citation publication-type="journal" id="ECE310873-cit-2001"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2024</year>). <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>. <source>Ecology and Evolution</source>, <volume>14</volume>, <elocation-id>e10873</elocation-id>. <pub-id pub-id-type="doi">10.1002/ece3.10873</pub-id>
</mixed-citation>
    </p>
  </notes>
</front>
<body id="ece310873-body-0001">
  <sec sec-type="background" id="ece310873-sec-0001">
    <label>1</label>
    <title>BACKGROUND</title>
    <p>TreeViewer is a flexible and user‐friendly multiplatform software for bioinformaticians and evolutionary biologists. TreeViewer helps users to visualise phylogenetic trees with the option of displaying additional data (e.g., sequence alignments and character states) enabling them to identify novel evolutionary patterns. Complex phylogenetic tree plots can be produced by customising pipelines depending on the user's needs. These pipelines can later be reused or adapted to other projects, optimising the user's time. TreeViewer is designed with the aim of producing high‐quality publication figures and also provides a command‐line interface that can be used to work with large‐scale trees and/or to automatically produce plots as part of a script pipeline.</p>
    <p>Tree plots produced by the program are the result of the concerted action of multiple “modules” (similar to the structure of Mesquite (Maddison &amp; Maddison, <xref rid="ece310873-bib-0036" ref-type="bibr">2023</xref>)). There are currently nine different types of modules available in TreeViewer (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). Users can choose from these modules and arrange them depending on their needs, therefore customising every step of the workflow. Furthermore, this modular design means that changes to the settings of an individual module are independent of the rest of the chosen modules. As a result, changes made to a tree can be easily undone by disabling the module that is responsible for them.</p>
    <table-wrap position="float" id="ece310873-tbl-0001" content-type="TABLE">
      <label>TABLE 1</label>
      <caption>
        <p>Types of modules available in TreeViewer. The table shows the task accomplished by each module, as well as an example of each type of module.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Module type</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Task</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Example</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">File type</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Opens and interprets the contents of a tree file in a particular format</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Newick” module adds support for tree files in Newick format</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Load file</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Loads the contents of a tree file, making them available for TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Memory loader” module loads the trees in memory</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Transformer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Transforms the trees contained in a tree file, producing a single tree that can be further processed</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Consensus” module computes a consensus tree out of the trees contained in the file</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Further transformation</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs additional transformations on the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Reroot tree” module re‐roots the tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Coordinates</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Computes the coordinates of the tree nodes in the plot</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rectangular” module computes the coordinates for a tree in a rectangular style</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Plot action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Plots an element of the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Branches” module plots the tree branches</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs a generic action, which can involve activating or de‐activating some modules</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rooted tree style” module changes the current <italic toggle="yes">Coordinates</italic> module and activates <italic toggle="yes">Plot action</italic> modules in order to plot the tree as a rectangular rooted tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Selection action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs an action on the selected node</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Collapse selection” module collapses the selected node (by activating the “Collapse node” <italic toggle="yes">Further transformation</italic> module)</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Menu action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Adds an item to the menus in the main window</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Export” module adds an option to export the plot as a PDF document or an SVG, PNG, or TIFF image</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Plots created with TreeViewer are intrinsically <italic toggle="yes">reproducible</italic>. In addition to saving the final plot as a publication‐ready figure, users can choose to keep track of the whole pipeline that was involved in producing the plot starting from a phylogenetic tree file. This means that if a small change is needed somewhere along the pipeline, it can be applied in‐place, without having to repeat all the steps that were involved in creating the initial plot (e.g., selecting the colour for the branches and collapsing some nodes). Furthermore, it is possible to apply the same pipeline to a different tree. Users can, therefore, create their own “plot style” and readily apply it to different datasets, performing only minimal dataset‐specific adjustments. For example, a phylogenetic tree plot could be created using provisional data while a long analysis is running and then updated when the final tree becomes available, thus increasing the potential for multitasking.</p>
    <p>Users can also create new modules in TreeViewer. A curated online repository of modules (Bianchini, <xref rid="ece310873-bib-0004" ref-type="bibr">2021a</xref>) keeps users informed as to when new modules are released and/or a module is modified. The lightweight development environment integrated into TreeViewer enables advanced users to create modules that are tailored to their particular needs. These can later be shared with other users by uploading them to the TreeViewer module repository.</p>
    <p>TreeViewer is mainly a graphical program, in which users can interact with the phylogenetic tree plot by resizing it, selecting individual nodes, and performing context‐specific actions (e.g., pruning a node or collapsing it). In the era of big data (Marx, <xref rid="ece310873-bib-0037" ref-type="bibr">2013</xref>), it is nowadays common to have phylogenetic trees involving tens or hundreds of thousands of taxa (e.g., Hug et al., <xref rid="ece310873-bib-0025" ref-type="bibr">2016</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>; Smith &amp; Brown, <xref rid="ece310873-bib-0055" ref-type="bibr">2018</xref>; Upham et al., <xref rid="ece310873-bib-0060" ref-type="bibr">2019</xref>); this is a major challenge that makes working with large‐scale trees impractical and time‐consuming. TreeViewer has been designed with these issues in mind, and it provides a lightweight command‐line interface that can be used to manipulate and plot the trees either interactively or as part of an automated script pipeline.</p>
    <p>A number of examples and tutorials make it possible for users to easily gain confidence with the program and learn to use all of its features. These are available in the online documentation (Bianchini, <xref rid="ece310873-bib-0005" ref-type="bibr">2021b</xref>) and describe a large variety of different plots, some of which are shown in Figure <xref rid="ece310873-fig-0001" ref-type="fig">1</xref>. Plots created using TreeViewer have been included in recent publications (Anderegg et al., <xref rid="ece310873-bib-0001" ref-type="bibr">2022</xref>; Beach et al., <xref rid="ece310873-bib-0003" ref-type="bibr">2022</xref>; Gyimesi &amp; Hediger, <xref rid="ece310873-bib-0020" ref-type="bibr">2022</xref>; Iwata et al., <xref rid="ece310873-bib-0026" ref-type="bibr">2023</xref>; Klau et al., <xref rid="ece310873-bib-0028" ref-type="bibr">2022</xref>; Moreira et al., <xref rid="ece310873-bib-0040" ref-type="bibr">2022</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Sánchez‐Baracaldo et al., <xref rid="ece310873-bib-0052" ref-type="bibr">2022</xref>; Sasoni et al., <xref rid="ece310873-bib-0053" ref-type="bibr">2022</xref>; Sobol et al., <xref rid="ece310873-bib-0056" ref-type="bibr">2022</xref>; Visagie et al., <xref rid="ece310873-bib-0061" ref-type="bibr">2023</xref>; Visagie &amp; Yilmaz, <xref rid="ece310873-bib-0062" ref-type="bibr">2023</xref>; Wu &amp; Guo, <xref rid="ece310873-bib-0064" ref-type="bibr">2022</xref>).</p>
    <fig position="float" fig-type="FIGURE" id="ece310873-fig-0001">
      <label>FIGURE 1</label>
      <caption>
        <p>Examples of trees created using TreeViewer. (a) An unrooted tree showing the results of a BLAST (Camacho et al., <xref rid="ece310873-bib-0013" ref-type="bibr">2009</xref>) search. The branch colour displays the BLAST score of each hit, and orange stars highlight the “true orthologs” of the query sequence, which is denoted by the blue star. (b) A circular tree showing the presence or absence in various bacterial strains of photosynthetic reaction centres and of the <italic toggle="yes">norV</italic> and <italic toggle="yes">hmpA</italic> genes. (c) A time‐calibrated tree of cyprinodontiform fishes. The tree includes an image for each species. Fish families are also highlighted. The phylogeny is adapted from (Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>). The images for <italic toggle="yes">P. reticulata</italic> and <italic toggle="yes">P. sphenops</italic> are adapted from original photographs (Eisfeld, <xref rid="ece310873-bib-0016" ref-type="bibr">2016</xref>; Torres, <xref rid="ece310873-bib-0059" ref-type="bibr">2010</xref>), while all the other images are adapted with permission from original photographs by R. Pohlmann (Pohlmann, <xref rid="ece310873-bib-0045" ref-type="bibr">2016</xref>). All figures were created exclusively using TreeViewer; no other external graphics editing software was used. Instructions detailing how to create these plots (and more) are available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
      </caption>
      <graphic xlink:href="ECE3-14-e10873-g007" position="anchor" id="jats-graphic-3"/>
    </fig>
  </sec>
  <sec id="ece310873-sec-0002">
    <label>2</label>
    <title>IMPLEMENTATION</title>
    <p>TreeViewer is written using the C# programming language, running under the .NET 7 runtime. Executables are available for computers running Windows and Linux on x64 processors (e.g., Intel or AMD processors) and for macOS computers running on x64 (Intel) or arm64 (Apple Silicon) processors. As ARM‐based Windows and Linux computers become more widely adopted, arm64 versions of the program for these operating systems will be provided.</p>
    <p>TreeViewer is an open‐source software, released under the GNU AGPLv3 licence (Free Software Foundation, <xref rid="ece310873-bib-0019" ref-type="bibr">2007</xref>). In addition to the base libraries included in the .NET runtime, the program relies on a number of open‐source libraries to perform various tasks (e.g., drawing graphics, providing a GUI, computing statistics, and manipulating phylogenetic trees). The full list of libraries used by TreeViewer, along with licensing information, is available in the licence agreement that is displayed when installing the program.</p>
    <sec id="ece310873-sec-0003">
      <label>2.1</label>
      <title>User interface</title>
      <p>TreeViewer provides a user‐friendly graphical user interface (GUI, Figure <xref rid="ece310873-fig-0002" ref-type="fig">2</xref>). The user interface (UI) design was inspired both from other popular software to draw phylogenetic trees (e.g., FigTree; Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) and from commonly used office suite software (e.g., Microsoft Office). A consistent UI across all supported platforms is achieved by using the Avalonia UI framework (AvaloniaUI Organization, <xref rid="ece310873-bib-0002" ref-type="bibr">2013</xref>); this makes it possible for the main UI elements to always have the same appearance, while platform‐specific dialogs are used where appropriate (e.g., in file dialogs).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0002">
        <label>FIGURE 2</label>
        <caption>
          <p>Main user interface of TreeViewer. (a) The tree plot is shown in the main part of the window. (b) Above the tree plot, a toolbar contains buttons to perform actions on the plot. (c) On the left of the tree plot, a panel shows the modules that are currently enabled, along with their settings. The blue question mark button next to each module directly opens the manual for that module. (d) The status bar at the bottom of the interface contains general information about the tree, as well as controls to determine the zoom level of the interface.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g003" position="anchor" id="jats-graphic-5"/>
      </fig>
      <p>The interface of TreeViewer is used to explicitly describe the process that goes from a tree file to a finished tree plot (Figure <xref rid="ece310873-fig-0003" ref-type="fig">3</xref>) in a series of discrete steps. The initial step in producing a plot is reading a tree file from the hard disk. This involves opening the file, determining its format, and choosing the most appropriate module to read it. These actions are performed by a <italic toggle="yes">File type</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). The program can automatically choose the best module for each file, but users can also decide to manually specify the module they want to use, in case multiple modules are able to read the same file type. The <italic toggle="yes">File type</italic> modules that are currently available enable TreeViewer to open tree files in formats such as Newick (Felsenstein, <xref rid="ece310873-bib-0017" ref-type="bibr">1986</xref>), NEXUS (Maddison et al., <xref rid="ece310873-bib-0035" ref-type="bibr">1997</xref>), NCBI ASN.1 (Ostell, <xref rid="ece310873-bib-0042" ref-type="bibr">1995</xref>), and a novel binary tree format (Bianchini, <xref rid="ece310873-bib-0009" ref-type="bibr">2023a</xref>). TreeViewer then determines the best strategy to load in memory the tree file that has been read. This action is performed by a <italic toggle="yes">Load file</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>), which can be used, for example, to copy the contents of the entire file into the system's memory (for smaller files) or to read just one tree at a time from the file as necessary (for larger files containing many trees).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0003">
        <label>FIGURE 3</label>
        <caption>
          <p>TreeViewer workflow to create tree plots. First of all, the program reads a tree file containing one or more trees using a <italic toggle="yes">File type</italic> and a <italic toggle="yes">Load file</italic> module. The tree(s) are then transformed using a <italic toggle="yes">Transformer</italic> module and, if necessary, one or more <italic toggle="yes">Further transformation</italic> modules. The final transformed tree is then plotted using a <italic toggle="yes">Coordinates</italic> module and one or more <italic toggle="yes">Plot action</italic> modules.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g002" position="anchor" id="jats-graphic-7"/>
      </fig>
      <p>Once a tree file has been read, TreeViewer has access to a list containing one or more phylogenetic trees, depending on how many were present in the tree file. If the file contains multiple trees, the next step is to produce a single tree that will then be subsequently plotted. This step is performed by a <italic toggle="yes">Transformer</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) and can involve, for example, computing a consensus tree or just choosing a single tree out of the ones that are in the file. Before plotting, the tree produced by the <italic toggle="yes">Transformer</italic> module (i.e., the “First transformed tree”) can also be further modified by one or more <italic toggle="yes">Further transformation</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules; these modules perform actions such as re‐rooting the tree, collapsing nodes, and rotating them. Once all the <italic toggle="yes">Further transformation</italic> modules have acted, a “Final transformed tree” is produced, which is the tree that is plotted in the subsequent steps.</p>
      <p>In order to plot a tree, the next step is determining the coordinates of the nodes in the tree, that is, at which position in the plot each branch will start and end. This step is performed by a <italic toggle="yes">Coordinates</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) module, which determines, for example, whether the tree appears as an unrooted tree or as a rectangular tree. Finally, this set of coordinates is used by <italic toggle="yes">Plot action</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules to create the phylogenetic tree plot. Each module contributes to the plot with a single feature, such as the branches of the tree, the labels for the tip nodes, or a scale bar.</p>
      <p>The final tree plot is the result of the action of all these modules. It can be viewed and manipulated in the graphical interface of TreeViewer, which allows users to click on branches to select them, display their attributes, and perform actions on them; plots can also be exported as publication‐ready PDF, SVG, PNG, or TIFF files.</p>
    </sec>
    <sec id="ece310873-sec-0004">
      <label>2.2</label>
      <title>Command‐line interface</title>
      <p>In addition to the GUI, TreeViewer provides a command‐line interface (CLI, Figure <xref rid="ece310873-fig-0004" ref-type="fig">4</xref>). The TreeViewer CLI has two main use cases: the first one is to create plots for very large trees (e.g., &gt;100,000 taxa) that may be impractical to handle using the GUI, and the second one is to be included in phylogenetic analysis pipelines. From the TreeViewer CLI, it is possible to export renderings of the tree plots (e.g., in PDF or SVG format), as well as to save tree files that contain module information. These files can then be opened with the TreeViewer GUI (e.g., to inspect attribute values at some branches in the tree or to collapse/expand nodes).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0004">
        <label>FIGURE 4</label>
        <caption>
          <p>TreeViewer command‐line interface. (a) List of currently enabled modules. (b) List of options and current values for the <italic toggle="yes">Labels</italic> module. Colours are used to help users navigate the interface, distinguishing between the parameter index (yellow), the name of the parameter (white), and its value (blue). If required, the colours can be easily disabled, as TreeViewer follows the NO_COLOR standard (Stein, <xref rid="ece310873-bib-0057" ref-type="bibr">2017</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g008" position="anchor" id="jats-graphic-9"/>
      </fig>
      <p>Interacting with the TreeViewer CLI is similar to interacting with the TreeViewer GUI: for example, the modules that are currently enabled can be listed, their current parameters viewed or modified, and nodes can be “selected.” The main difference is that the interaction happens through commands issued to the CLI, rather than through clicks on the GUI. The “help” command can be used to list all available commands, as well as to show more information about a particular command. Tab completion is available across the CLI, for command names, parameters, and file names (e.g., when opening or saving a file).</p>
      <p>For pipeline integration, the commands can be stored on a file and then fed to the standard input of the TreeViewer CLI. This can be used, for example, to create a template command file with placeholders for key parameters (e.g., the name of the file to open or the accession numbers of the outgroup taxa); the pipeline would then replace the placeholders with the actual values for a certain analysis and eventually feed the resulting command file to the TreeViewer CLI.</p>
    </sec>
    <sec id="ece310873-sec-0005">
      <label>2.3</label>
      <title>Modular structure</title>
      <p>The modular structure of the software is enabled by the self‐contained Roslyn .NET Compiler Platform (Microsoft Corporation, <xref rid="ece310873-bib-0039" ref-type="bibr">2015</xref>). Modules are distributed as compressed source code archives that also contain a digital signature and metadata about the module (e.g., the name of the author, the version of the module, and a short description). After the digital signature of a module has been verified (or the user has agreed to install a module with an unverified signature), the source code of the module is compiled by TreeViewer using the Roslyn application programming interface (API). The resulting compiled assembly is then stored on the user's disk and loaded automatically when the program is opened.</p>
      <p>This approach makes it possible to distribute identical module source files to users on any platform, because the appropriate platform‐specific artifacts are generated directly on the end‐user's machine. In principle, it is similar to the distribution systems used by many other extensible frameworks, such as R or Python packages (Hornik &amp; Leisch, <xref rid="ece310873-bib-0022" ref-type="bibr">1997</xref>; Python Software Foundation, <xref rid="ece310873-bib-0046" ref-type="bibr">2003</xref>). The “Module manager” and “Module repository” windows available within the software can be used to see which modules have been installed or are available, providing access to the source code and the documentation for each module. At the time of writing, 98 modules are available for TreeViewer, which perform various tasks.</p>
      <p>Source code compilation using the Roslyn API is not instantaneous, even though it normally does not take more than a few seconds, including the most complex modules. This time penalty is avoided by storing the compiled artifacts on the user's disk. However, once the source code has been compiled, its performance is undistinguishable from the performance of code included in the “native” TreeViewer assemblies. This allows TreeViewer to use runtime‐compiled code not only for modules, but also for many small and apparently trivial tasks.</p>
      <p>For example, consider the operation of displaying the value of a numerical attribute (e.g., the length of a branch) on the tree. In order to do this, it is necessary to convert the attribute value from a “number” (stored, e.g., as an IEEE 754 double‐precision binary floating‐point value (Floating‐Point Working Group, <xref rid="ece310873-bib-0018" ref-type="bibr">2019</xref>)) to a textual representation (e.g., “1.234”). This could be achieved in many ways. For example, users may want to show a certain number of decimal digits or significant digits; they may want to round it, truncate it towards 0, or truncate it away from zero; and they may want to show it in decimal notation or scientific notation. While some of these combinations are exposed through controls in the UI of the program, it would not be realistic to have a different button for every possibility. The <italic toggle="yes">Labels</italic> module of TreeViewer addresses this problem by exposing the source code of its “Attribute formatter,” that is, the piece of code that transforms an attribute value into a text string.</p>
      <p>The GUI (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5a</xref>) contains controls to automatically generate the source code for simple cases, but the code itself (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5b</xref>) can be fully customised by users according to their requirements. Furthermore, the integration between the software and the compiler makes it possible for code editor windows in TreeViewer to provide many features that make writing source code as user‐friendly as possible. These include syntax highlighting, semantic highlighting (where code tokens such as class and method names are highlighted based on their meaning), intelligent code completion with in‐line documentation (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5c</xref>), real‐time error checking (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5d</xref>), and breakpoints (which can be used to inspect the state of the code and the value of local variables during its execution). This is achieved through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0005">
        <label>FIGURE 5</label>
        <caption>
          <p>Attribute formatter window. Attribute formatters are used to convert attribute values from one type to another. In the window shown, users can convert a numerical attribute into a text string. (a) Controls to automatically generate code for simple use cases. (b) User‐modifiable source code of the method used to convert the attribute value. (c) Intelligent code completion with in‐line documentation. (d) Real‐time error checking.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g006" position="anchor" id="jats-graphic-11"/>
      </fig>
      <p>This approach of including UI controls that automatically generate source code for simple use cases, while allowing users to manually fine‐tune the code, is ubiquitous throughout TreeViewer. Many modules use attribute formatters to convert between attribute types (Table <xref rid="ece310873-tbl-0002" ref-type="table">2</xref>), and they can all be customised with an interface similar to Figure <xref rid="ece310873-fig-0005" ref-type="fig">5</xref>. The downside of such an approach is that, when the module settings are included in files exported by TreeViewer, each tree file becomes essentially a small program. In principle, hostile parties could include malicious code in an attribute formatter or another customisable code item and use the tree file as an infection vector. To address this issue, tree files created by TreeViewer can be signed in the same way as module files are (see Section <xref rid="ece310873-sec-0007" ref-type="sec">2.5</xref>).</p>
      <table-wrap position="float" id="ece310873-tbl-0002" content-type="TABLE">
        <label>TABLE 2</label>
        <caption>
          <p>Attribute formatters. Attribute formatters are distinguished by the type of data they output. For each formatter type, the table shows the available input data types and the default conversions defined for each.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <thead valign="bottom">
            <tr style="border-bottom:solid 1px #000000">
              <th align="left" valign="bottom" rowspan="1" colspan="1">Attribute formatter type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Output type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Input attribute type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Default conversions</th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">String attribute formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Round to a certain number of significant or decimal digits, remove values higher or lower than a certain threshold</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Number formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Attempt to parse the string</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Convert from a CSS‐style string (e.g., “red,” “#FF0000,” or “rgb(255, 0, 0)”)</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Map the number to a colour on a gradient</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec id="ece310873-sec-0006">
      <label>2.4</label>
      <title>Module development</title>
      <p>New modules can be developed to extend the capabilities of TreeViewer. The TreeViewer documentation contains information about the internal API of the program, in order for developers to access and extend key features. For example, a new module could be developed to add support for a new tree file format or to add a particular graphical element to the plot. Modules can be shared with the community by creating a “pull request” on the TreeViewer GitHub repository.</p>
      <p>Software developers can leverage the lightweight development environment integrated within TreeViewer to help create new modules. Given basic knowledge of the C# programming language, the real‐time error correction and intelligent code completion features implemented through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>) make it possible to code new modules efficiently. Breakpoints can be used to pause execution of the module at critical points, in order to inspect the flow of the program and the value of local variables.</p>
      <p>The recommended workflow when developing a new module for TreeViewer involves three steps. First, users are encouraged to use the <italic toggle="yes">Custom script</italic> modules to write an initial version of their source code. This allows quick prototyping of the source code, because the code is compiled and executed by TreeViewer at runtime, and fixing bugs or making changes does not require the program to be restarted. After an initial version of the new module has been developed, the second step is to use the “Module creator” function of TreeViewer to produce a full module prototype and test it. The “Module creator” supports the same code‐editing features as the custom script editors, but it makes it possible to create full‐fledged modules that are loaded by TreeViewer at startup. Thus, making changes to the code at this stage requires restarting the program, which is why we recommend polishing the code using the <italic toggle="yes">Custom script</italic> modules first. In the final step, module developers identify parameters used in the source code that should be modifiable by the user. These parameters should be exposed in the TreeViewer UI as described in the TreeViewer developer's guide (Bianchini, <xref rid="ece310873-bib-0006" ref-type="bibr">2021c</xref>), and a brief description for each parameter and for the module should be provided in the documentation comments; this will allow TreeViewer to automatically generate a manual for the new module.</p>
    </sec>
    <sec id="ece310873-sec-0007">
      <label>2.5</label>
      <title>Digital signatures</title>
      <p>The digital signature for a TreeViewer module is an RSA‐encrypted hash (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>) of the source code of the module, created and verified by TreeViewer using the SHA‐512 hashing algorithm (Dang, <xref rid="ece310873-bib-0015" ref-type="bibr">2015</xref>) and the RSASSA‐PKCS1‐v1_5 signature scheme (Jonsson &amp; Kaliski, <xref rid="ece310873-bib-0027" ref-type="bibr">2003</xref>). Briefly, this involves a key pair consisting of a “private” key and a “public” key. The private key is available only to the user who generated it, while the public key is distributed to other users. The signature is then created by computing a hash digest of the source code, which is then encrypted using the private key. Validating the signature involves decrypting it using the public key and comparing the resulting value to a newly computed hash of the source code. The two hashes will match only if the public key corresponds to the private key used for encryption and if the source code has not been altered. Therefore, both the identity of the author or distributor of the source code and the integrity of the source code are guaranteed (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>).</p>
      <p>Public keys for modules released through the TreeViewer GitHub repository are included in the source code of the program; a user attempting to install a module with an invalid signature will be presented with a warning message and will have the option to install the module anyways or to abort. An invalid signature may occur either because the module has been signed using a private key, whose public key counterpart is not included in the TreeViewer source code, or because the source code has been (possibly maliciously) altered. Users are encouraged not to install modules with an invalid signature unless they understand why the signature check failed and trust the source of the module. TreeViewer has a command‐line option to generate an RSA key pair. Combined with the open‐source nature of the software, this potentially enables other developers to make changes to the set of trusted public keys and create versions (“forks”) of TreeViewer allowing the installation of modules from alternative repositories.</p>
      <p>Tree files containing source code are signed in a similar way. When the program is executed for the first time, a public/private key pair for the user is generated. The private key is then used to sign tree files, while the public key is also included in the file. The first time that user A opens a file that has been created by user B, a warning message is displayed, explaining that the tree file contains source code that could potentially be malicious. User A has then three options: the first option is to open the tree file discarding all the source code, thus reverting attribute formatters to the default settings; this may change the appearance of the plot. The second option is to allow loading the source code just once, while the final option is to “trust” the author of the file. This last option should be selected only when there is trust in both the author of the file and the integrity of the communication channel over which the file has been received (e.g., that there has not been a man‐in‐the‐middle or similar attack). In this case, the public key contained in the tree file will be stored in the user's cache, and if user A opens other files coming from user B, source code contained therein will automatically be trusted. This allows collaboration within groups without dialog boxes showing up every time a file is opened, while still allowing a certain degree of security for files coming externally. It should be noted that the signature can be used to assess the integrity of a file and the identity of its author only after the author's public signature has been stored in TreeViewer's key cache. In principle, it would also be possible to create an online repository of public keys and associated identities (verified, e.g., through an academic email address).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="ece310873-sec-0008">
    <label>3</label>
    <title>RESULTS</title>
    <p>Here, we present an example using TreeViewer to display age estimates on a time‐calibrated phylogenetic tree. Time‐calibrated trees can be obtained, for example, from a Bayesian molecular clock analysis using software such as MrBayes (Ronquist &amp; Huelsenbeck, <xref rid="ece310873-bib-0051" ref-type="bibr">2003</xref>), PhyloBayes (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), RevBayes (Höhna et al., <xref rid="ece310873-bib-0021" ref-type="bibr">2016</xref>), and BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). These can be used by TreeViewer to compute a consensus tree and to plot the age distribution for each node as a violin plot. Such plots visualise the posterior probabilities, and these are more informative than simple confidence interval bars; this is particularly useful in the case of asymmetric age distributions.</p>
    <sec id="ece310873-sec-0009">
      <label>3.1</label>
      <title>Consensus tree</title>
      <p>The tree file at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock.tre" ext-link-type="uri">https://treeviewer.org/manual/clock/clock.tre</ext-link> (also available in the Supplementary Information <xref rid="ece310873-supitem-0001" ref-type="supplementary-material">S1</xref>), generated after running a Bayesian molecular clock analysis of Cyanobacteria in PhyloBayes v4.1e (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), contains 1000 trees, in which each tree contains 42 taxa. When the tree file is opened, TreeViewer recognises that it contains multiple trees and automatically computes a greedy consensus tree (Bryant, <xref rid="ece310873-bib-0012" ref-type="bibr">2003</xref>). The options of the “Consensus” <italic toggle="yes">Transformer</italic> module can be used to change how the consensus tree is computed (e.g., adding a burn‐in or sampling a subset of the trees), but in this case the default values are adequate.</p>
    </sec>
    <sec id="ece310873-sec-0010">
      <label>3.2</label>
      <title>Initial tree plot</title>
      <p>The tree is shown automatically as a rooted tree (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6a</xref>), and three <italic toggle="yes">Plot action</italic> modules are enabled: the “Branches” module, which draws the tree branches, and two instances of the “Labels” module. The first “Labels” module draws the taxon names at the tips of the tree, while the second “Labels” module draws the branch length over each branch. To make the plot easier to view, the second instance of the “Labels” module can be removed. Furthermore, to make the tree more compact, the “Width” parameter of the “Rectangular” <italic toggle="yes">Coordinates</italic> module can be reduced to 500.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0006">
        <label>FIGURE 6</label>
        <caption>
          <p>Steps performed in this example. (a) The file containing the trees has been opened in TreeViewer, which computed the consensus tree and displayed it. (b) Age distributions have been computed and plotted on the tree. (c) A scale axis has been added to the plot. (d) All the module parameters have been fine‐tuned in order to obtain a publication‐ready figure (shown enlarged in Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g004" position="anchor" id="jats-graphic-13"/>
      </fig>
    </sec>
    <sec id="ece310873-sec-0011">
      <label>3.3</label>
      <title>Age distributions</title>
      <p>Plotting the age distribution for each node requires a two‐step process: first, the age distributions need to be computed by using the “Set up age distributions” <italic toggle="yes">Further transformation</italic> module. By default, this module will also associate the mean age and 89% highest density interval (McElreath, <xref rid="ece310873-bib-0038" ref-type="bibr">2020</xref>) to each node, which can be used, for example, to draw node bars showing the confidence interval (the default 89% threshold can be changed). To draw the age distributions, the “Age distributions” <italic toggle="yes">Plot action</italic> module needs to be enabled. This will draw a violin plot at each node in the tree, showing the posterior age distribution estimate for the node (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6b</xref>). By default, each violin plot is drawn using a randomly chosen colour, but this can be changed by disabling the “Auto colour by node” option in the module parameters.</p>
      <p>In TreeViewer, the plot elements are drawn in the order they are displayed in the left panel, from top to bottom; this means that the newly added age distributions are drawn above the tree branches and labels. To avoid obscuring the tree topology, the “Age distributions” module can be dragged up, so that it is the first module in the plot element list. Furthermore, some of the age distribution plots overlap, due to the limited available vertical space. The vertical spacing of the tips in the tree can be increased by opening the options for the <italic toggle="yes">Coordinates</italic> module and setting the “Height” to a higher value (e.g., 800).</p>
    </sec>
    <sec id="ece310873-sec-0012">
      <label>3.4</label>
      <title>Age axis</title>
      <p>Additionally, it is possible to add an age axis to the plot, so that the age of the various groups can be read from the tree. This can be done by enabling the “Scale axis” <italic toggle="yes">Plot action</italic> module (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6c</xref>). By default, the spacing between consecutive “ticks” on the axis drawn by this module is computed automatically. To make the axis more pleasant, the “Tick spacing” can be increased to 150, the “End” to 3000, and the “Digits” can be set to 0. In this tree, node ages are expressed in units of millions of years; to show this on the plot, the value of the “Units” parameter can be set as “Mya,” which will show the unit at the start and end of the scale axis. The module can be moved up in the list of plot elements, so that the scale axis is drawn before all the other layers in the plot. Finally, the font size of the labels and of the scale axis can be increased by clicking on the respective “Font” buttons and entering “12” in the “Font size” box (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6d</xref>).</p>
    </sec>
    <sec id="ece310873-sec-0013">
      <label>3.5</label>
      <title>Exporting the plot</title>
      <p>A finished figure looks similar to Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>. The plot can be exported in PDF, SVG, PNG, or TIFF format, and the tree file can be saved in a format (e.g., NEXUS or binary) that preserves information about the enabled modules. When such a file (available at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock_finished.tbi" ext-link-type="uri">https://treeviewer.org/manual/clock/clock_finished.tbi</ext-link> and in the Supplementary Information <xref rid="ece310873-supitem-0002" ref-type="supplementary-material">S2</xref>) is opened, TreeViewer will automatically replicate all the processing steps involved in going from the initial tree file to the finished plot. Furthermore, the “Apply to other tree” button in the “Edit” tab can be used to apply the current style to a different file (naturally, some fine‐tuning might be necessary). For example, in a Bayesian analysis, this would make it possible to create an initial draft of the figure with tree samples from a chain that has not converged; then, once the analysis has run for long enough, the plot style can be applied to the final sample of trees with just a few clicks.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0007">
        <label>FIGURE 7</label>
        <caption>
          <p>Tree produced following the steps in this example. For each node, a violin plot shows the posterior age distribution estimate for the node. Ages in the scale axis are expressed as millions of years since the present day.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g005" position="anchor" id="jats-graphic-15"/>
      </fig>
      <p>A more detailed version of this example, showing some additional features of TreeViewer, can be found in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0007" ref-type="bibr">2021d</xref>). Furthermore, TreeViewer can plot multiple different age distributions on the same tree; this is useful, for example, when comparing fossil age calibrations, the effective prior distribution, and the posterior distribution. A tutorial on how to do this is also available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0011" ref-type="bibr">2023c</xref>). Many more examples and tutorials showcasing the capabilities of TreeViewer are available in the online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="ece310873-sec-0014">
    <label>4</label>
    <title>DISCUSSION</title>
    <p>Many software tools exist to plot and visualise phylogenetic trees, which can be broadly categorised into interactive software with a GUI and software libraries for use through a scripting/programming language (some representative examples are shown in Table <xref rid="ece310873-tbl-0003" ref-type="table">3</xref>). The Interactive Tree Of Life (iTOL; Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), for instance, is an online GUI tool that enables users to plot, annotate, and manage phylogenetic trees; FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a simple desktop application to draw phylogenetic trees, including some capabilities for annotation and manipulation. Examples of software libraries include ggtree (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>), an R package, and the Environment for Tree Exploration (ETE; Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>), a Python package. TreeViewer aims to bridge the gap between the two categories, providing users with both the ease of use of a GUI software and powerful scripting capabilities.</p>
    <table-wrap position="float" id="ece310873-tbl-0003" content-type="TABLE">
      <label>TABLE 3</label>
      <caption>
        <p>Overview of phylogenetic tree visualisation software. For each program, the table shows whether it is free and open source and the licence under which it is released, the operating system (OS) compatibility (here, “All” refers to Windows, Linux and macOS), whether it provides a GUI and/or a command‐line interface (CLI), and the programming language in which it was created.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Software</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Free and open source</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Licence</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">OS compatibility</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Interface</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Programming language</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">AGPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">C#</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">iTOL</td>
            <td align="left" valign="top" rowspan="1" colspan="1">No</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Proprietary</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All (online)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, (CLI<xref rid="ece310873-note-0004" ref-type="table-fn"><sup>a</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">JavaScript<xref rid="ece310873-note-0005" ref-type="table-fn"><sup>b</sup></xref>
</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">FigTree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Java</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Ggtree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Artistic‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">ETE</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Linux and macOS</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI, (GUI<xref rid="ece310873-note-0006" ref-type="table-fn"><sup>c</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot id="ece310873-ntgp-0003">
        <fn id="ece310873-note-0004">
          <label>
            <sup>a</sup>
          </label>
          <p>In addition to the main GUI, iTOL allows users with an active subscription to upload and export trees from the command line.</p>
        </fn>
        <fn id="ece310873-note-0005">
          <label>
            <sup>b</sup>
          </label>
          <p>The latest versions of the client‐side visualisation engine for iTOL are written in JavaScript (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>); source code for the server‐side components is not freely available, but the original release used Perl scripts (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>).</p>
        </fn>
        <fn id="ece310873-note-0006">
          <label>
            <sup>c</sup>
          </label>
          <p>In addition to the main Python command‐line interface, ETE has basic interactive capabilities.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>One of the main attractions of the iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) is its cloud‐based nature, since users do not need to download any software on the machine, and trees saved on their online workspace are available from any workstation. The iTOL portal also allows users to share annotated trees with other collaborators and to create figures for publication. However, unrestricted use of the software requires a paid subscription (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), and the source code for the software is not publicly available. While installing iTOL on a local machine is possible, it requires liaising with the software creators.</p>
    <p>FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a Java‐based program that was originally designed to display phylogenetic trees produced by BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). It is very accessible, and it can be easily used to perform basic annotations on the trees (e.g., adding symbols at the tips or internal nodes, changing the display colour of part of the tree, and displaying scale bars). There are, however, some limitations to the number and the kind of annotations that can be added to the tree. Trees produced often need to be exported and edited using other software (e.g., Adobe Illustrator or Inkscape) to prepare them for publication. FigTree is open source (released under a GNU GPLv2 licence), and it is available for Windows, Linux, and macOS.</p>
    <p>The ggtree R package (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>) allows users to plot phylogenetic trees using a “layered” syntax derived from the general‐purpose ggplot2 (Wickham, <xref rid="ece310873-bib-0063" ref-type="bibr">2016</xref>) R graphics package. In this way, a basic tree geometry can be extended with many layers of additional elements such as labels, symbols, and heatmaps. Since all of this happens within an R scripting environment, users can manipulate the trees using other popular packages such as ape (Paradis et al., <xref rid="ece310873-bib-0043" ref-type="bibr">2004</xref>) or phytools (Revell, <xref rid="ece310873-bib-0049" ref-type="bibr">2012</xref>). The ggtree package is open source (released under the Artistic License 2.0) and available for Windows, Linux, and macOS.</p>
    <p>The ETE Python package (Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) provides similar capabilities for Python users. In addition to tree drawing and annotation capabilities, ETE can perform some evolutionary analyses and can access data from online databases such as the NCBI taxonomy (Schoch et al., <xref rid="ece310873-bib-0054" ref-type="bibr">2020</xref>) and the Genome Taxonomy Database (Parks et al., <xref rid="ece310873-bib-0044" ref-type="bibr">2022</xref>). Furthermore, it provides some interactive features. ETE is open source (released under a GNU GPLv3 licence), but does not support Windows, and can only be installed on Linux and macOS. A limited online version allowing users to plot a tree together with a sequence alignment is also available.</p>
    <p>Code that uses software libraries such as ggtree and ETE can be easily incorporated into analysis pipelines, and the scripts used to produce the plots can be used to replicate the plot or adapt it to a different dataset with minimal effort. However, one of their drawbacks is that users are required to be familiar with the relevant programming language, unlike GUI tools such as iTOL and FigTree. As a result, GUI tools appeal to a much wider audience. For instance, at the time of writing, five publications describing ggtree (Xu et al., <xref rid="ece310873-bib-0065" ref-type="bibr">2022</xref>; Yu, <xref rid="ece310873-bib-0066" ref-type="bibr">2020</xref>, <xref rid="ece310873-bib-0067" ref-type="bibr">2022</xref>; Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>, <xref rid="ece310873-bib-0068" ref-type="bibr">2018</xref>) have a total of 1862 citations, and two publications describing ETE (Huerta‐Cepas et al., <xref rid="ece310873-bib-0023" ref-type="bibr">2010</xref>, <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) have a total of 1685 citations. In contrast, five publications describing iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>, <xref rid="ece310873-bib-0031" ref-type="bibr">2011</xref>, <xref rid="ece310873-bib-0032" ref-type="bibr">2016</xref>, <xref rid="ece310873-bib-0033" ref-type="bibr">2019</xref>, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) have a total of 15,388 citations. FigTree is not associated with an official publication, which makes tracking its use more difficult; however, a Google Scholar search suggests upwards of 7700 citations.</p>
    <p>TreeViewer has a GUI interface that can be used to produce simple tree plots without much effort (similar to iTOL or FigTree), though the creation of complex, multi‐annotation plots requires some familiarity with the program. The “Apply to other tree” option reuses a plot style for a different tree; this is similar to changing the input file in an R or Python script, but everything happens through the TreeViewer GUI. The command‐line interface can be used to integrate the software into pipelines and to reproduce the same plot after minor changes. At the same time, the integrated C# scripting environment allows advanced users to manipulate the tree without restriction (like ggtree or ETE). The free and open‐source licensing scheme and cross‐platform compatibility allow users to run TreeViewer with full capabilities on almost any machine (unlike ETE) and without having to pay any fees (unlike iTOL).</p>
  </sec>
  <sec sec-type="conclusions" id="ece310873-sec-0015">
    <label>5</label>
    <title>CONCLUSION</title>
    <p>TreeViewer provides new and versatile capabilities for drawing, annotating, and analysing phylogenetic trees. At present, trees can be annotated with discrete and continuous character data, sequence alignments, age distributions, images, highlights, and stochastic mapping results. The modular design allows both the main software developers and experienced users to expand TreeViewer's capabilities without having to make significant alterations to the main code base.</p>
    <p>The user‐friendly interface and intuitive zoom‐and‐drag functionalities allow inexperienced users to quickly produce a plot and explore the relationships between the taxa included in the tree. Detailed documentation and tutorials are available for users to learn about the capabilities of the program and how to use and combine them. Furthermore, every module has its own manual, accessible from within TreeViewer's user interface. Using the lightweight integrated development environment and the information in the developer's guide (included in the online manual), advanced users can create small scripts and/or new modules to change the structure of the tree or the way in which it is displayed.</p>
    <p>TreeViewer is freely available for Windows, Linux, and macOS (both Intel‐based and Apple Silicon‐based) computers. The source code and compiled executable files can be downloaded from the program's website at <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>, which also contains links to the documentation, tutorials, and GitHub repository (<ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri">https://github.com/arklumpus/TreeViewer</ext-link>), where users can submit feedback, request help, and/or report bugs.</p>
  </sec>
  <sec id="ece310873-sec-0021">
    <title>AUTHOR CONTRIBUTIONS</title>
    <p><bold>Giorgio Bianchini:</bold> Conceptualization (lead); methodology (lead); software (lead); validation (lead); visualization (lead); writing – original draft (lead); writing – review and editing (equal). <bold>Patricia Sánchez‐Baracaldo:</bold> Funding acquisition (lead); supervision (lead); writing – original draft (supporting); writing – review and editing (equal).</p>
  </sec>
  <sec id="ece310873-sec-0017">
    <title>FUNDING INFORMATION</title>
    <p>Funding support for this work came from a University of Bristol Scholarship to GB and a Royal Society University Research Fellowship to PS‐B. For the purpose of open access, the authors have applied a Creative Commons Attribution (CC BY) licence to any author‐accepted manuscript version arising from this submission.</p>
  </sec>
  <sec sec-type="COI-statement" id="ece310873-sec-0018">
    <title>CONFLICT OF INTEREST STATEMENT</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supporting information</title>
    <supplementary-material id="ece310873-supitem-0001" position="float" content-type="local-data">
      <caption>
        <p>
Data S1
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s001.tre">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="ece310873-supitem-0002" position="float" content-type="local-data">
      <caption>
        <p>
Data S2
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s002.tbi">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ece310873-sec-0016">
    <title>ACKNOWLEDGEMENTS</title>
    <p>We would like to acknowledge all the users who have tried the software and given us feedback during its development, in particular the Molecular Palaeo group at the University of Bristol.</p>
  </ack>
  <sec sec-type="data-availability" id="ece310873-sec-0020">
    <title>DATA AVAILABILITY STATEMENT</title>
    <p>The source code for TreeViewer and all associated example files and tutorials are available from the TreeViewer GitHub repository at <ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri" specific-use="software is-supplemented-by">https://github.com/arklumpus/TreeViewer</ext-link> and archived on Zenodo at <ext-link xlink:href="https://zenodo.org/doi/10.5281/zenodo.7768343" ext-link-type="uri" specific-use="software is-supplemented-by">https://zenodo.org/doi/10.5281/zenodo.7768343</ext-link>.</p>
  </sec>
  <ref-list content-type="cited-references" id="ece310873-bibl-0001">
    <title>REFERENCES</title>
    <ref id="ece310873-bib-0001">
      <mixed-citation publication-type="journal" id="ece310873-cit-0001"><string-name><surname>Anderegg</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ho</surname>, <given-names>T. M.</given-names></string-name>, <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name>, &amp; <string-name><surname>Fuster</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>The less well‐known little brothers: The SLC9B/NHA sodium proton exchanger subfamily—Structure, function, regulation and potential drug‐target approaches</article-title>. <source>Frontiers in Physiology</source>, <volume>13</volume>, <elocation-id>898508</elocation-id>. <pub-id pub-id-type="doi">10.3389/FPHYS.2022.898508</pub-id>
<pub-id pub-id-type="pmid">35694410</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0002">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0002"><collab collab-type="authors">AvaloniaUI Organization</collab>
. (<year>2013</year>). <article-title>Avalonia UI</article-title>. <ext-link xlink:href="https://avaloniaui.net/" ext-link-type="uri">https://avaloniaui.net/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0003">
      <mixed-citation publication-type="journal" id="ece310873-cit-0003"><string-name><surname>Beach</surname>, <given-names>N. K.</given-names></string-name>, <string-name><surname>Myers</surname>, <given-names>K. S.</given-names></string-name>, <string-name><surname>Donohue</surname>, <given-names>T. J.</given-names></string-name>, &amp; <string-name><surname>Noguera</surname>, <given-names>D. R.</given-names></string-name> (<year>2022</year>). <article-title>Metagenomes from 25 low‐abundance microbes in a partial Nitritation Anammox microbiome</article-title>. <source>Microbiology Resource Announcements</source>, <volume>11</volume>, <elocation-id>e00212–22</elocation-id>. <pub-id pub-id-type="doi">10.1128/MRA.00212-22</pub-id>
<pub-id pub-id-type="pmid">35575561</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0004">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0004"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021a</year>). <article-title>TreeViewer module repository</article-title>. <ext-link xlink:href="https://treeviewer.org/modules" ext-link-type="uri">https://treeviewer.org/modules</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0005">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0005"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021b</year>). <article-title>TreeViewer manual</article-title>. <ext-link xlink:href="https://treeviewer.org/manual" ext-link-type="uri">https://treeviewer.org/manual</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0006">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0006"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021c</year>). <article-title>TreeViewer developer's guide</article-title>. <ext-link xlink:href="https://github.com/arklumpus/TreeViewer/wiki/Developer%E2%80%99s-guide" ext-link-type="uri">https://github.com/arklumpus/TreeViewer/wiki/Developer's‐guide</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0007">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0007"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021d</year>). <article-title>TreeViewer example: Plotting the age distributions in a time‐calibrated tree</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/clock" ext-link-type="uri">https://treeviewer.org/manual/clock</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0008">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0008"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021e</year>). <article-title>TreeViewer examples</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/examples" ext-link-type="uri">https://treeviewer.org/manual/examples</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0009">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0009"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023a</year>). <article-title>TreeNode: Version 1.5.3</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387417</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0010">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0010"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023b</year>). <article-title>CSharpEditor: Version 1.1.5</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387453</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0011">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0011"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023c</year>). <article-title>TreeViewer example: Plotting multiple age distributions</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/distributions" ext-link-type="uri">https://treeviewer.org/manual/distributions</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0012">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0012"><string-name><surname>Bryant</surname>, <given-names>D.</given-names></string-name> (<year>2003</year>). <article-title>A classification of consensus methods for phylogenetics</article-title>. DIMACS Series in Discrete Mathematics and Theoretical Computer Science <pub-id pub-id-type="doi">10.1090/dimacs/061</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0013">
      <mixed-citation publication-type="journal" id="ece310873-cit-0013"><string-name><surname>Camacho</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Coulouris</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Avagyan</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Ma</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Papadopoulos</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Bealer</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Madden</surname>, <given-names>T. L.</given-names></string-name> (<year>2009</year>). <article-title>BLAST+: Architecture and applications</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <elocation-id>421</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-10-421</pub-id>
<pub-id pub-id-type="pmid">20003500</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0015">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0015"><string-name><surname>Dang</surname>, <given-names>Q. H.</given-names></string-name> (<year>2015</year>). <article-title>Secure hash standard</article-title>. Federal Inf Process Stds (NIST FIPS) <pub-id pub-id-type="doi">10.6028/NIST.FIPS.180-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0016">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0016"><string-name><surname>Eisfeld</surname>, <given-names>V.</given-names></string-name> (<year>2016</year>). <article-title>File:Guppy—Poecilia reticulata.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Guppy_-_Poecilia_reticulata.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Guppy_‐_Poecilia_reticulata.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0017">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0017"><string-name><surname>Felsenstein</surname>, <given-names>J.</given-names></string-name> (<year>1986</year>). <article-title>The Newick tree format</article-title>. <ext-link xlink:href="http://evolution.genetics.washington.edu/phylip/newicktree.html" ext-link-type="uri">http://evolution.genetics.washington.edu/phylip/newicktree.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0018">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0018"><collab collab-type="authors">Floating‐Point Working Group</collab>
. (<year>2019</year>). <article-title>IEEE Standard for Floating‐Point Arithmetic. IEEE Std 754–2019 (Revision of IEEE 754–2008)</article-title>, 1–84 <pub-id pub-id-type="doi">10.1109/IEEESTD.2019.8766229</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0019">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0019"><collab collab-type="authors">Free Software Foundation</collab>
. (<year>2007</year>). <article-title>GNU Affero General Public License</article-title>. <ext-link xlink:href="https://www.gnu.org/licenses/agpl-3.0.en.html" ext-link-type="uri">https://www.gnu.org/licenses/agpl‐3.0.en.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0020">
      <mixed-citation publication-type="journal" id="ece310873-cit-0020"><string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name> (<year>2022</year>). <article-title>Systematic in silico discovery of novel solute carrier‐like proteins from proteomes</article-title>. <source>PLoS One</source>, <volume>17</volume>, <elocation-id>e0271062</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PONE.0271062</pub-id>
<pub-id pub-id-type="pmid">35901096</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0021">
      <mixed-citation publication-type="journal" id="ece310873-cit-0021"><string-name><surname>Höhna</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Landis</surname>, <given-names>M. J.</given-names></string-name>, <string-name><surname>Heath</surname>, <given-names>T. A.</given-names></string-name>, <string-name><surname>Boussau</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. R.</given-names></string-name>, <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name>, &amp; <string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name> (<year>2016</year>). <article-title>RevBayes: Bayesian phylogenetic inference using graphical models and an interactive model‐specification language</article-title>. <source>Systematic Biology</source>, <volume>65</volume>, <fpage>726</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw021</pub-id>
<pub-id pub-id-type="pmid">27235697</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0022">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0022"><string-name><surname>Hornik</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Leisch</surname>, <given-names>F.</given-names></string-name> (<year>1997</year>). <article-title>CRAN: The Comprehensive R Archive Network</article-title>. <ext-link xlink:href="https://cran.r-project.org/" ext-link-type="uri">https://cran.r‐project.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0023">
      <mixed-citation publication-type="journal" id="ece310873-cit-0023"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Dopazo</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Gabaldón</surname>, <given-names>T.</given-names></string-name> (<year>2010</year>). <article-title>ETE: A python environment for tree exploration</article-title>. <source>BMC Bioinformatics</source>, <volume>11</volume>, <elocation-id>24</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-11-24</pub-id>
<pub-id pub-id-type="pmid">20070885</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0024">
      <mixed-citation publication-type="journal" id="ece310873-cit-0024"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Serra</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>ETE 3: Reconstruction, analysis, and visualization of Phylogenomic data</article-title>. <source>Molecular Biology and Evolution</source>, <volume>33</volume>, <fpage>1635</fpage>–<lpage>1638</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSW046</pub-id>
<pub-id pub-id-type="pmid">26921390</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0025">
      <mixed-citation publication-type="journal" id="ece310873-cit-0025"><string-name><surname>Hug</surname>, <given-names>L. A.</given-names></string-name>, <string-name><surname>Baker</surname>, <given-names>B. J.</given-names></string-name>, <string-name><surname>Anantharaman</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Brown</surname>, <given-names>C. T.</given-names></string-name>, <string-name><surname>Probst</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Castelle</surname>, <given-names>C. J.</given-names></string-name>, <string-name><surname>Butterfield</surname>, <given-names>C. N.</given-names></string-name>, <string-name><surname>Hernsdorf</surname>, <given-names>A. W.</given-names></string-name>, <string-name><surname>Amano</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Ise</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Suzuki</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Dudek</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Relman</surname>, <given-names>D. A.</given-names></string-name>, <string-name><surname>Finstad</surname>, <given-names>K. M.</given-names></string-name>, <string-name><surname>Amundson</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Thomas</surname>, <given-names>B. C.</given-names></string-name>, &amp; <string-name><surname>Banfield</surname>, <given-names>J. F.</given-names></string-name> (<year>2016</year>). <article-title>A new view of the tree of life</article-title>. <source>Nature Microbiology</source>, <volume>1</volume>, <elocation-id>16048</elocation-id>. <pub-id pub-id-type="doi">10.1038/nmicrobiol.2016.48</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0026">
      <mixed-citation publication-type="journal" id="ece310873-cit-0026"><string-name><surname>Iwata</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Yoshinaga</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Mizutani</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Kikawada</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Kikuta</surname>, <given-names>S.</given-names></string-name> (<year>2023</year>). <article-title>Proton gradient mediates hemolymph trehalose influx into aphid bacteriocytes</article-title>. <source>Archives of Insect Biochemistry and Physiology</source>, <volume>112</volume>, <elocation-id>e21971</elocation-id>. <pub-id pub-id-type="doi">10.1002/ARCH.21971</pub-id>
<pub-id pub-id-type="pmid">36205078</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0027">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0027"><string-name><surname>Jonsson</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Kaliski</surname>, <given-names>B.</given-names></string-name> (<year>2003</year>). <article-title>Public‐Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1</article-title>. <pub-id pub-id-type="doi">10.17487/RFC3447</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0028">
      <mixed-citation publication-type="journal" id="ece310873-cit-0028"><string-name><surname>Klau</surname>, <given-names>L. J.</given-names></string-name>, <string-name><surname>Podell</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Creamer</surname>, <given-names>K. E.</given-names></string-name>, <string-name><surname>Demko</surname>, <given-names>A. M.</given-names></string-name>, <string-name><surname>Singh</surname>, <given-names>H. W.</given-names></string-name>, <string-name><surname>Allen</surname>, <given-names>E. E.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. S.</given-names></string-name>, <string-name><surname>Ziemert</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Letzel</surname>, <given-names>A. C.</given-names></string-name>, &amp; <string-name><surname>Jensen</surname>, <given-names>P. R.</given-names></string-name> (<year>2022</year>). <article-title>The natural product domain seeker version 2 (NaPDoS2) webtool relates ketosynthase phylogeny to biosynthetic function</article-title>. <source>Journal of Biological Chemistry</source>, <volume>298</volume>, <fpage>102480</fpage>–<lpage>102481</lpage>. <pub-id pub-id-type="doi">10.1016/j.jbc.2022.102480</pub-id>
<pub-id pub-id-type="pmid">36108739</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0029">
      <mixed-citation publication-type="journal" id="ece310873-cit-0029"><string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Lepage</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Blanquart</surname>, <given-names>S.</given-names></string-name> (<year>2009</year>). <article-title>PhyloBayes 3: A Bayesian software package for phylogenetic reconstruction and molecular dating</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>2286</fpage>–<lpage>2288</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp368</pub-id>
<pub-id pub-id-type="pmid">19535536</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0030">
      <mixed-citation publication-type="journal" id="ece310873-cit-0030"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2007</year>). <article-title>Interactive tree of life (iTOL): An online tool for phylogenetic tree display and annotation</article-title>. <source>Bioinformatics</source>, <volume>23</volume>, <fpage>127</fpage>–<lpage>128</lpage>. <pub-id pub-id-type="doi">10.1093/BIOINFORMATICS/BTL529</pub-id>
<pub-id pub-id-type="pmid">17050570</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0031">
      <mixed-citation publication-type="journal" id="ece310873-cit-0031"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2011</year>). <article-title>Interactive tree of life v2: Online annotation and display of phylogenetic trees made easy</article-title>. <source>Nucleic Acids Research</source>, <volume>39</volume>, <fpage>W475</fpage>–<lpage>W478</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKR201</pub-id>
<pub-id pub-id-type="pmid">21470960</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0032">
      <mixed-citation publication-type="journal" id="ece310873-cit-0032"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>Interactive tree of life (iTOL) v3: An online tool for the display and annotation of phylogenetic and other trees</article-title>. <source>Nucleic Acids Research</source>, <volume>44</volume>, <fpage>W242</fpage>–<lpage>W245</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKW290</pub-id>
<pub-id pub-id-type="pmid">27095192</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0033">
      <mixed-citation publication-type="journal" id="ece310873-cit-0033"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2019</year>). <article-title>Interactive tree of life (iTOL) v4: Recent updates and new developments</article-title>. <source>Nucleic Acids Research</source>, <volume>47</volume>, <fpage>W256</fpage>–<lpage>W259</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKZ239</pub-id>
<pub-id pub-id-type="pmid">30931475</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0034">
      <mixed-citation publication-type="journal" id="ece310873-cit-0034"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>Interactive tree of life (iTOL) v5: An online tool for phylogenetic tree display and annotation</article-title>. <source>Nucleic Acids Research</source>, <volume>49</volume>, <fpage>W293</fpage>–<lpage>W296</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB301</pub-id>
<pub-id pub-id-type="pmid">33885785</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0035">
      <mixed-citation publication-type="journal" id="ece310873-cit-0035"><string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name>, <string-name><surname>Swofford</surname>, <given-names>D. L.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name> (<year>1997</year>). <article-title>Nexus: An extensible file format for systematic information</article-title>. <source>Systematic Biology</source>, <volume>46</volume>, <fpage>590</fpage>–<lpage>621</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.4.590</pub-id>
<pub-id pub-id-type="pmid">11975335</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0036">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0036"><string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name> (<year>2023</year>). <article-title>Mesquite Project</article-title>. <ext-link xlink:href="http://www.mesquiteproject.org/" ext-link-type="uri">http://www.mesquiteproject.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0037">
      <mixed-citation publication-type="journal" id="ece310873-cit-0037"><string-name><surname>Marx</surname>, <given-names>V.</given-names></string-name> (<year>2013</year>). <article-title>The big challenges of big data</article-title>. <source>Nature</source>, <volume>498</volume>, <fpage>255</fpage>–<lpage>260</lpage>. <pub-id pub-id-type="doi">10.1038/498255a</pub-id>
<pub-id pub-id-type="pmid">23765498</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0038">
      <mixed-citation publication-type="book" id="ece310873-cit-0038"><string-name><surname>McElreath</surname>, <given-names>R.</given-names></string-name> (<year>2020</year>). <part-title>Statistical rethinking</part-title>. In <source>A Bayesian course with examples in R and STAN</source> (<edition designator="2">2nd ed.</edition>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9780429029608</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0039">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0039"><collab collab-type="authors">Microsoft Corporation</collab>
. (<year>2015</year>). <article-title>dotnet/roslyn: The Roslyn. NET compiler provides C# and Visual Basic languages with rich code analysis APIs</article-title>. <ext-link xlink:href="https://github.com/dotnet/roslyn" ext-link-type="uri">https://github.com/dotnet/roslyn</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0040">
      <mixed-citation publication-type="journal" id="ece310873-cit-0040"><string-name><surname>Moreira</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Arenas</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Videira</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Pereira</surname>, <given-names>F.</given-names></string-name> (<year>2022</year>). <article-title>Evolutionary history of TOPIIA topoisomerases in animals</article-title>. <source>Journal of Molecular Evolution</source>, <volume>90</volume>, <fpage>149</fpage>–<lpage>165</lpage>. <pub-id pub-id-type="doi">10.1007/S00239-022-10048-2/TABLES/4</pub-id>
<pub-id pub-id-type="pmid">35165762</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0041">
      <mixed-citation publication-type="journal" id="ece310873-cit-0041"><string-name><surname>Naafs</surname>, <given-names>B. D. A.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Monteiro</surname>, <given-names>F. M.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>The occurrence of 2‐methylhopanoids in modern bacteria and the geological record</article-title>. <source>Geobiology</source>, <volume>20</volume>, <fpage>41</fpage>–<lpage>59</lpage>. <pub-id pub-id-type="doi">10.1111/GBI.12465</pub-id>
<pub-id pub-id-type="pmid">34291867</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0042">
      <mixed-citation publication-type="journal" id="ece310873-cit-0042"><string-name><surname>Ostell</surname>, <given-names>J. M.</given-names></string-name> (<year>1995</year>). <article-title>Integrated access to heterogeneous data from NCBI</article-title>. <source>IEEE Engineering in Medicine and Biology Magazine</source>, <volume>14</volume>, <fpage>730</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1109/51.473267</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0043">
      <mixed-citation publication-type="journal" id="ece310873-cit-0043"><string-name><surname>Paradis</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Claude</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Strimmer</surname>, <given-names>K.</given-names></string-name> (<year>2004</year>). <article-title>APE: Analyses of Phylogenetics and evolution in R language</article-title>. <source>Bioinformatics</source>, <volume>20</volume>, <fpage>289</fpage>–<lpage>290</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg412</pub-id>
<pub-id pub-id-type="pmid">14734327</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0044">
      <mixed-citation publication-type="journal" id="ece310873-cit-0044"><string-name><surname>Parks</surname>, <given-names>D. H.</given-names></string-name>, <string-name><surname>Chuvochina</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Rinke</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Mussig</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Chaumeil</surname>, <given-names>P. A.</given-names></string-name>, &amp; <string-name><surname>Hugenholtz</surname>, <given-names>P.</given-names></string-name> (<year>2022</year>). <article-title>GTDB: An ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome‐based taxonomy</article-title>. <source>Nucleic Acids Research</source>, <volume>50</volume>, <fpage>D785</fpage>–<lpage>D794</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB776</pub-id>
<pub-id pub-id-type="pmid">34520557</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0045">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0045"><string-name><surname>Pohlmann</surname>, <given-names>R.</given-names></string-name> (<year>2016</year>). <article-title>Killifische Info</article-title>. <ext-link xlink:href="https://www.killifische.info/" ext-link-type="uri">https://www.killifische.info/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0046">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0046"><collab collab-type="authors">Python Software Foundation</collab>
. (<year>2003</year>). <article-title>PyPI The Python Package Index</article-title>. <ext-link xlink:href="https://pypi.org/" ext-link-type="uri">https://pypi.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0047">
      <mixed-citation publication-type="journal" id="ece310873-cit-0047"><string-name><surname>Rabosky</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Chang</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Title</surname>, <given-names>P. O.</given-names></string-name>, <string-name><surname>Cowman</surname>, <given-names>P. F.</given-names></string-name>, <string-name><surname>Sallan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Friedman</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Kaschner</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Garilao</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Near</surname>, <given-names>T. J.</given-names></string-name>, <string-name><surname>Coll</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Alfaro</surname>, <given-names>M. E.</given-names></string-name> (<year>2018</year>). <article-title>An inverse latitudinal gradient in speciation rate for marine fishes</article-title>. <source>Nature</source>, <volume>559</volume>, <fpage>392</fpage>–<lpage>395</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-018-0273-1</pub-id>
<pub-id pub-id-type="pmid">29973726</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0048">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0048"><string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>FigTree v1.4.4</article-title>. <ext-link xlink:href="https://github.com/rambaut/figtree" ext-link-type="uri">https://github.com/rambaut/figtree</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0049">
      <mixed-citation publication-type="journal" id="ece310873-cit-0049"><string-name><surname>Revell</surname>, <given-names>L. J.</given-names></string-name> (<year>2012</year>). <article-title>Phytools: An R package for phylogenetic comparative biology (and other things)</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>3</volume>, <fpage>217</fpage>–<lpage>223</lpage>. <pub-id pub-id-type="doi">10.1111/j.2041-210X.2011.00169.x</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0050">
      <mixed-citation publication-type="journal" id="ece310873-cit-0050"><string-name><surname>Rivest</surname>, <given-names>R. L.</given-names></string-name>, <string-name><surname>Shamir</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Adleman</surname>, <given-names>L.</given-names></string-name> (<year>1978</year>). <article-title>A method for obtaining digital signatures and public‐key cryptosystems</article-title>. <source>Communications of the ACM</source>, <volume>21</volume>, <fpage>120</fpage>–<lpage>126</lpage>. <pub-id pub-id-type="doi">10.1145/359340.359342</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0051">
      <mixed-citation publication-type="journal" id="ece310873-cit-0051"><string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name> (<year>2003</year>). <article-title>MrBayes 3: Bayesian phylogenetic inference under mixed models</article-title>. <source>Bioinformatics</source>, <volume>19</volume>, <fpage>1572</fpage>–<lpage>1574</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg180</pub-id>
<pub-id pub-id-type="pmid">12912839</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0052">
      <mixed-citation publication-type="journal" id="ece310873-cit-0052"><string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Wilson</surname>, <given-names>J. D.</given-names></string-name>, &amp; <string-name><surname>Knoll</surname>, <given-names>A. H.</given-names></string-name> (<year>2022</year>). <article-title>Cyanobacteria and biogeochemical cycles through earth history</article-title>. <source>Trends in Microbiology</source>, <volume>30</volume>, <fpage>143</fpage>–<lpage>157</lpage>. <pub-id pub-id-type="doi">10.1016/J.TIM.2021.05.008</pub-id>
<pub-id pub-id-type="pmid">34229911</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0053">
      <mixed-citation publication-type="journal" id="ece310873-cit-0053"><string-name><surname>Sasoni</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Hartman</surname>, <given-names>M. D.</given-names></string-name>, <string-name><surname>García‐Effron</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Guerrero</surname>, <given-names>S. A.</given-names></string-name>, <string-name><surname>Iglesias</surname>, <given-names>A. A.</given-names></string-name>, &amp; <string-name><surname>Arias</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>Functional characterization of monothiol and dithiol glutaredoxins from <italic toggle="yes">Leptospira interrogans</italic>
</article-title>. <source>Biochimie</source>, <volume>197</volume>, <fpage>144</fpage>–<lpage>159</lpage>. <pub-id pub-id-type="doi">10.1016/J.BIOCHI.2022.02.006</pub-id>
<pub-id pub-id-type="pmid">35217125</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0054">
      <mixed-citation publication-type="journal" id="ece310873-cit-0054"><string-name><surname>Schoch</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Ciufo</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Domrachev</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Hotton</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Kannan</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Khovanskaya</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Leipe</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Mcveigh</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>O'Neill</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Robbertse</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Sharma</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Soussov</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sullivan</surname>, <given-names>J. P.</given-names></string-name>, <string-name><surname>Sun</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Turner</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Karsch‐Mizrachi</surname>, <given-names>I.</given-names></string-name> (<year>2020</year>). <article-title>NCBI taxonomy: A comprehensive update on curation, resources and tools</article-title>. <source>Database</source>, <volume>2020</volume>, <fpage>baaa062</fpage>. <pub-id pub-id-type="doi">10.1093/DATABASE/BAAA062</pub-id>
<pub-id pub-id-type="pmid">32761142</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0055">
      <mixed-citation publication-type="journal" id="ece310873-cit-0055"><string-name><surname>Smith</surname>, <given-names>S. A.</given-names></string-name>, &amp; <string-name><surname>Brown</surname>, <given-names>J. W.</given-names></string-name> (<year>2018</year>). <article-title>Constructing a broadly inclusive seed plant phylogeny</article-title>. <source>American Journal of Botany</source>, <volume>105</volume>, <fpage>302</fpage>–<lpage>314</lpage>. <pub-id pub-id-type="doi">10.1002/AJB2.1019</pub-id>
<pub-id pub-id-type="pmid">29746720</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0056">
      <mixed-citation publication-type="journal" id="ece310873-cit-0056"><string-name><surname>Sobol</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Chakraborty</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Martin</surname>, <given-names>G. B.</given-names></string-name>, &amp; <string-name><surname>Sessa</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>The emerging role of PP2C phosphatases in tomato immunity</article-title>. <source>Molecular Plant‐Microbe Interactions</source>, <volume>35</volume>, <fpage>737</fpage>–<lpage>747</lpage>. <pub-id pub-id-type="doi">10.1094/MPMI-02-22-0037-CR/ASSET/IMAGES/LARGE/MPMI-02-22-0037-CRF3.JPEG</pub-id>
<pub-id pub-id-type="pmid">35696659</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0057">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0057"><string-name><surname>Stein</surname>, <given-names>J.</given-names></string-name> (<year>2017</year>). <article-title>NO_COLOR: disabling ANSI color output by default</article-title>. <ext-link xlink:href="https://no-color.org/" ext-link-type="uri">https://no‐color.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0058">
      <mixed-citation publication-type="journal" id="ece310873-cit-0058"><string-name><surname>Suchard</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Lemey</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Baele</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ayres</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Drummond</surname>, <given-names>A. J.</given-names></string-name>, &amp; <string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>Bayesian phylogenetic and phylodynamic data integration using BEAST 1.10</article-title>. <source>Virus Evolution</source>, <volume>4</volume>, <fpage>vey016</fpage>. <pub-id pub-id-type="doi">10.1093/ve/vey016</pub-id>
<pub-id pub-id-type="pmid">29942656</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0059">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0059"><string-name><surname>Torres</surname>, <given-names>H.</given-names></string-name> (<year>2010</year>). <article-title>File:Poecilia sphenops.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0060">
      <mixed-citation publication-type="journal" id="ece310873-cit-0060"><string-name><surname>Upham</surname>, <given-names>N. S.</given-names></string-name>, <string-name><surname>Esselstyn</surname>, <given-names>J. A.</given-names></string-name>, &amp; <string-name><surname>Jetz</surname>, <given-names>W.</given-names></string-name> (<year>2019</year>). <article-title>Inferring the mammal tree: Species‐level sets of phylogenies for questions in ecology, evolution, and conservation</article-title>. <source>PLoS Biology</source>, <volume>17</volume>, <elocation-id>e3000494</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PBIO.3000494</pub-id>
<pub-id pub-id-type="pmid">31800571</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0061">
      <mixed-citation publication-type="journal" id="ece310873-cit-0061"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, <string-name><surname>Boekhout</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Theelen</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Dijksterhuis</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name>, &amp; <string-name><surname>Seifert</surname>, <given-names>K. A.</given-names></string-name> (<year>2023</year>). <article-title>Da Vinci's yeast: <italic toggle="yes">Blastobotrys davincii</italic> f.a., sp. nov</article-title>. <source>Yeast</source>, <volume>40</volume>, <fpage>7</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1002/YEA.3816</pub-id>
<pub-id pub-id-type="pmid">36168284</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0062">
      <mixed-citation publication-type="journal" id="ece310873-cit-0062"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, &amp; <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name> (<year>2023</year>). <article-title>Along the footpath of Penicillium discovery: Six new species from the Woodville big tree Forest Trail</article-title>. <source>Mycologia</source>, <volume>115</volume>, <fpage>87</fpage>–<lpage>106</lpage>. <pub-id pub-id-type="doi">10.1080/00275514.2022.2135915</pub-id>
<pub-id pub-id-type="pmid">36441981</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0063">
      <mixed-citation publication-type="book" id="ece310873-cit-0063"><string-name><surname>Wickham</surname>, <given-names>H.</given-names></string-name> (<year>2016</year>). <source>ggplot2: Elegant graphics for data analysis</source>. <publisher-name>Springer‐Verlag</publisher-name>. <pub-id pub-id-type="doi">10.1007/978-3-319-24277-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0064">
      <mixed-citation publication-type="journal" id="ece310873-cit-0064"><string-name><surname>Wu</surname>, <given-names>C.</given-names></string-name>, &amp; <string-name><surname>Guo</surname>, <given-names>D.</given-names></string-name> (<year>2022</year>). <article-title>Computational docking reveals co‐evolution of C4 carbon delivery enzymes in diverse plants</article-title>. <source>International Journal of Molecular Sciences</source>, <volume>23</volume>, <elocation-id>12688</elocation-id>. <pub-id pub-id-type="doi">10.3390/IJMS232012688/S1</pub-id>
<pub-id pub-id-type="pmid">36293547</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0065">
      <mixed-citation publication-type="journal" id="ece310873-cit-0065"><string-name><surname>Xu</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Luo</surname>, <given-names>X.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Zhan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Dai</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>Ggtree: A serialized data object for visualization of a phylogenetic tree and annotation data</article-title>. <source>iMeta</source>, <volume>1</volume>, <elocation-id>e56</elocation-id>. <pub-id pub-id-type="doi">10.1002/IMT2.56</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0066">
      <mixed-citation publication-type="journal" id="ece310873-cit-0066"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2020</year>). <article-title>Using ggtree to visualize data on tree‐like structures</article-title>. <source>Current Protocols in Bioinformatics</source>, <volume>69</volume>, <elocation-id>e96</elocation-id>. <pub-id pub-id-type="doi">10.1002/CPBI.96</pub-id>
<pub-id pub-id-type="pmid">32162851</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0067">
      <mixed-citation publication-type="book" id="ece310873-cit-0067"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <source>Data integration, manipulation and visualization of phylogenetic trees</source> (<edition designator="1">1</edition>st ed., pp. <fpage>71</fpage>–<lpage>158</lpage>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9781003279242</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0068">
      <mixed-citation publication-type="journal" id="ece310873-cit-0068"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, &amp; <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name> (<year>2018</year>). <article-title>Two methods for mapping and visualizing associated data on phylogeny using Ggtree</article-title>. <source>Molecular Biology and Evolution</source>, <volume>35</volume>, <fpage>3041</fpage>–<lpage>3043</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSY194</pub-id>
<pub-id pub-id-type="pmid">30351396</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0069">
      <mixed-citation publication-type="journal" id="ece310873-cit-0069"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Smith</surname>, <given-names>D. K.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name> (<year>2017</year>). <article-title>Ggtree: An r package for visualization and annotation of phylogenetic trees with their covariates and other associated data</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>8</volume>, <fpage>28</fpage>–<lpage>36</lpage>. <pub-id pub-id-type="doi">10.1111/2041-210X.12628</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with OASIS Tables with MathML3 v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archive-oasis-article1-mathml3.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats-oasis2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Ecol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Ecol Evol</journal-id>
    <journal-id journal-id-type="doi">10.1002/(ISSN)2045-7758</journal-id>
    <journal-id journal-id-type="publisher-id">ECE3</journal-id>
    <journal-title-group>
      <journal-title>Ecology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-7758</issn>
    <publisher>
      <publisher-name>John Wiley and Sons Inc.</publisher-name>
      <publisher-loc>Hoboken</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10834882</article-id>
    <article-id pub-id-type="doi">10.1002/ece3.10873</article-id>
    <article-id pub-id-type="publisher-id">ECE310873</article-id>
    <article-id pub-id-type="other">ECE-2023-11-01976</article-id>
    <article-categories>
      <subj-group subj-group-type="article-subject-classification">
        <subject>Phylogenetics</subject>
      </subj-group>
      <subj-group subj-group-type="overline">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Research Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>
      <alt-title alt-title-type="left-running-head">Bianchini and Sánchez‐Baracaldo</alt-title>
    </title-group>
    <contrib-group>
      <contrib id="ece310873-cr-0001" contrib-type="author" corresp="yes">
        <name>
          <surname>Bianchini</surname>
          <given-names>Giorgio</given-names>
        </name>
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0223-0339</contrib-id>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
        <address>
          <email>giorgio.bianchini@bristol.ac.uk</email>
        </address>
      </contrib>
      <contrib id="ece310873-cr-0002" contrib-type="author">
        <name>
          <surname>Sánchez‐Baracaldo</surname>
          <given-names>Patricia</given-names>
        </name>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="ece310873-aff-0001">
      <label>
        <sup>1</sup>
      </label>
      <named-content content-type="organisation-division">School of Geographical Sciences</named-content>
      <institution>University of Bristol</institution>
      <city>Bristol</city>
      <country country="GB">UK</country>
    </aff>
    <author-notes>
      <corresp id="correspondenceTo"><label>*</label><bold>Correspondence</bold><break/>
Giorgio Bianchini, School of Geographical Sciences, University of Bristol, University Road, Bristol, BS8 1SS, UK.<break/>
Email: <email>giorgio.bianchini@bristol.ac.uk</email>
<break/>
</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>14</volume>
    <issue seq="330">2</issue>
    <issue-id pub-id-type="doi">10.1002/ece3.v14.2</issue-id>
    <elocation-id>e10873</elocation-id>
    <history>
      <date date-type="received">
        <day>08</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>04</day>
        <month>12</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <!--&#x000a9; 2024 Published by John Wiley & Sons Ltd.-->
      <copyright-statement content-type="article-copyright">© 2024 The Authors. <italic toggle="yes">Ecology and Evolution</italic> published by John Wiley &amp; Sons Ltd.</copyright-statement>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link> License, which permits use, distribution and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="file:ECE3-14-e10873.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Phylogenetic trees illustrate evolutionary relationships between taxa or genes. Tree figures are crucial when presenting results and data, and by creating clear and effective plots, researchers can describe many kinds of evolutionary patterns. However, producing tree plots can be a time‐consuming task, especially as multiple different programs are often needed to adjust and illustrate all data associated with a tree. We present TreeViewer, a new software to draw phylogenetic trees. TreeViewer is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. Every feature of the program is documented and easily accessible, either in the online manual or within the program's interface. We show how TreeViewer can be used to produce publication‐ready figures, saving time by not requiring additional graphical post‐processing tools. TreeViewer is freely available for Windows, macOS, and Linux operating systems and distributed under an AGPLv3 licence from <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>. It has a graphical user interface (GUI), as well as a command‐line interface, which is useful to work with very large trees and for automated pipelines. A detailed user manual with examples and tutorials is also available. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool. Compared to other GUI tools, TreeViewer offers a richer feature set and a finer degree of customisation. Compared to command‐line‐based tools and software libraries, TreeViewer's graphical interface is more accessible. The flexibility of TreeViewer's approach to phylogenetic tree plotting enables the program to produce a wide variety of publication‐ready figures. Users are encouraged to create their own custom modules to expand the functionalities of the program. This sets the scene for an ever‐expanding and ever‐adapting software framework that can easily adjust to respond to new challenges.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <p>TreeViewer is a new software to draw phylogenetic trees that is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool and is released under an AGPLv3 licence for Windows, Linux, and macOS operating systems.<boxed-text position="anchor" content-type="graphic" id="ece310873-blkfxd-0001"><graphic xlink:href="ECE3-14-e10873-g001.jpg" position="anchor" id="jats-graphic-1"/></boxed-text>
</p>
    </abstract>
    <kwd-group kwd-group-type="author-generated">
      <kwd id="ece310873-kwd-0001">figures</kwd>
      <kwd id="ece310873-kwd-0002">graphical interface</kwd>
      <kwd id="ece310873-kwd-0003">Newick</kwd>
      <kwd id="ece310873-kwd-0004">NEXUS</kwd>
      <kwd id="ece310873-kwd-0005">phylogenetic trees</kwd>
      <kwd id="ece310873-kwd-0006">phylogenetics</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="funding-0001">
        <funding-source>
          <institution-wrap>
            <institution>University of Bristol
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000883</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group id="funding-0002">
        <funding-source>
          <institution-wrap>
            <institution>Royal Society
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000288</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="8"/>
      <table-count count="3"/>
      <page-count count="16"/>
      <word-count count="9179"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>source-schema-version-number</meta-name>
        <meta-value>2.0</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>cover-date</meta-name>
        <meta-value>February 2024</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>details-of-publishers-convertor</meta-name>
        <meta-value>Converter:WILEY_ML3GV2_TO_JATSPMC version:6.3.6 mode:remove_FC converted:01.02.2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <p content-type="self-citation">
      <mixed-citation publication-type="journal" id="ECE310873-cit-2001"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2024</year>). <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>. <source>Ecology and Evolution</source>, <volume>14</volume>, <elocation-id>e10873</elocation-id>. <pub-id pub-id-type="doi">10.1002/ece3.10873</pub-id>
</mixed-citation>
    </p>
  </notes>
</front>
<body id="ece310873-body-0001">
  <sec sec-type="background" id="ece310873-sec-0001">
    <label>1</label>
    <title>BACKGROUND</title>
    <p>TreeViewer is a flexible and user‐friendly multiplatform software for bioinformaticians and evolutionary biologists. TreeViewer helps users to visualise phylogenetic trees with the option of displaying additional data (e.g., sequence alignments and character states) enabling them to identify novel evolutionary patterns. Complex phylogenetic tree plots can be produced by customising pipelines depending on the user's needs. These pipelines can later be reused or adapted to other projects, optimising the user's time. TreeViewer is designed with the aim of producing high‐quality publication figures and also provides a command‐line interface that can be used to work with large‐scale trees and/or to automatically produce plots as part of a script pipeline.</p>
    <p>Tree plots produced by the program are the result of the concerted action of multiple “modules” (similar to the structure of Mesquite (Maddison &amp; Maddison, <xref rid="ece310873-bib-0036" ref-type="bibr">2023</xref>)). There are currently nine different types of modules available in TreeViewer (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). Users can choose from these modules and arrange them depending on their needs, therefore customising every step of the workflow. Furthermore, this modular design means that changes to the settings of an individual module are independent of the rest of the chosen modules. As a result, changes made to a tree can be easily undone by disabling the module that is responsible for them.</p>
    <table-wrap position="float" id="ece310873-tbl-0001" content-type="TABLE">
      <label>TABLE 1</label>
      <caption>
        <p>Types of modules available in TreeViewer. The table shows the task accomplished by each module, as well as an example of each type of module.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Module type</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Task</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Example</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">File type</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Opens and interprets the contents of a tree file in a particular format</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Newick” module adds support for tree files in Newick format</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Load file</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Loads the contents of a tree file, making them available for TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Memory loader” module loads the trees in memory</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Transformer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Transforms the trees contained in a tree file, producing a single tree that can be further processed</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Consensus” module computes a consensus tree out of the trees contained in the file</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Further transformation</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs additional transformations on the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Reroot tree” module re‐roots the tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Coordinates</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Computes the coordinates of the tree nodes in the plot</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rectangular” module computes the coordinates for a tree in a rectangular style</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Plot action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Plots an element of the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Branches” module plots the tree branches</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs a generic action, which can involve activating or de‐activating some modules</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rooted tree style” module changes the current <italic toggle="yes">Coordinates</italic> module and activates <italic toggle="yes">Plot action</italic> modules in order to plot the tree as a rectangular rooted tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Selection action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs an action on the selected node</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Collapse selection” module collapses the selected node (by activating the “Collapse node” <italic toggle="yes">Further transformation</italic> module)</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Menu action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Adds an item to the menus in the main window</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Export” module adds an option to export the plot as a PDF document or an SVG, PNG, or TIFF image</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Plots created with TreeViewer are intrinsically <italic toggle="yes">reproducible</italic>. In addition to saving the final plot as a publication‐ready figure, users can choose to keep track of the whole pipeline that was involved in producing the plot starting from a phylogenetic tree file. This means that if a small change is needed somewhere along the pipeline, it can be applied in‐place, without having to repeat all the steps that were involved in creating the initial plot (e.g., selecting the colour for the branches and collapsing some nodes). Furthermore, it is possible to apply the same pipeline to a different tree. Users can, therefore, create their own “plot style” and readily apply it to different datasets, performing only minimal dataset‐specific adjustments. For example, a phylogenetic tree plot could be created using provisional data while a long analysis is running and then updated when the final tree becomes available, thus increasing the potential for multitasking.</p>
    <p>Users can also create new modules in TreeViewer. A curated online repository of modules (Bianchini, <xref rid="ece310873-bib-0004" ref-type="bibr">2021a</xref>) keeps users informed as to when new modules are released and/or a module is modified. The lightweight development environment integrated into TreeViewer enables advanced users to create modules that are tailored to their particular needs. These can later be shared with other users by uploading them to the TreeViewer module repository.</p>
    <p>TreeViewer is mainly a graphical program, in which users can interact with the phylogenetic tree plot by resizing it, selecting individual nodes, and performing context‐specific actions (e.g., pruning a node or collapsing it). In the era of big data (Marx, <xref rid="ece310873-bib-0037" ref-type="bibr">2013</xref>), it is nowadays common to have phylogenetic trees involving tens or hundreds of thousands of taxa (e.g., Hug et al., <xref rid="ece310873-bib-0025" ref-type="bibr">2016</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>; Smith &amp; Brown, <xref rid="ece310873-bib-0055" ref-type="bibr">2018</xref>; Upham et al., <xref rid="ece310873-bib-0060" ref-type="bibr">2019</xref>); this is a major challenge that makes working with large‐scale trees impractical and time‐consuming. TreeViewer has been designed with these issues in mind, and it provides a lightweight command‐line interface that can be used to manipulate and plot the trees either interactively or as part of an automated script pipeline.</p>
    <p>A number of examples and tutorials make it possible for users to easily gain confidence with the program and learn to use all of its features. These are available in the online documentation (Bianchini, <xref rid="ece310873-bib-0005" ref-type="bibr">2021b</xref>) and describe a large variety of different plots, some of which are shown in Figure <xref rid="ece310873-fig-0001" ref-type="fig">1</xref>. Plots created using TreeViewer have been included in recent publications (Anderegg et al., <xref rid="ece310873-bib-0001" ref-type="bibr">2022</xref>; Beach et al., <xref rid="ece310873-bib-0003" ref-type="bibr">2022</xref>; Gyimesi &amp; Hediger, <xref rid="ece310873-bib-0020" ref-type="bibr">2022</xref>; Iwata et al., <xref rid="ece310873-bib-0026" ref-type="bibr">2023</xref>; Klau et al., <xref rid="ece310873-bib-0028" ref-type="bibr">2022</xref>; Moreira et al., <xref rid="ece310873-bib-0040" ref-type="bibr">2022</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Sánchez‐Baracaldo et al., <xref rid="ece310873-bib-0052" ref-type="bibr">2022</xref>; Sasoni et al., <xref rid="ece310873-bib-0053" ref-type="bibr">2022</xref>; Sobol et al., <xref rid="ece310873-bib-0056" ref-type="bibr">2022</xref>; Visagie et al., <xref rid="ece310873-bib-0061" ref-type="bibr">2023</xref>; Visagie &amp; Yilmaz, <xref rid="ece310873-bib-0062" ref-type="bibr">2023</xref>; Wu &amp; Guo, <xref rid="ece310873-bib-0064" ref-type="bibr">2022</xref>).</p>
    <fig position="float" fig-type="FIGURE" id="ece310873-fig-0001">
      <label>FIGURE 1</label>
      <caption>
        <p>Examples of trees created using TreeViewer. (a) An unrooted tree showing the results of a BLAST (Camacho et al., <xref rid="ece310873-bib-0013" ref-type="bibr">2009</xref>) search. The branch colour displays the BLAST score of each hit, and orange stars highlight the “true orthologs” of the query sequence, which is denoted by the blue star. (b) A circular tree showing the presence or absence in various bacterial strains of photosynthetic reaction centres and of the <italic toggle="yes">norV</italic> and <italic toggle="yes">hmpA</italic> genes. (c) A time‐calibrated tree of cyprinodontiform fishes. The tree includes an image for each species. Fish families are also highlighted. The phylogeny is adapted from (Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>). The images for <italic toggle="yes">P. reticulata</italic> and <italic toggle="yes">P. sphenops</italic> are adapted from original photographs (Eisfeld, <xref rid="ece310873-bib-0016" ref-type="bibr">2016</xref>; Torres, <xref rid="ece310873-bib-0059" ref-type="bibr">2010</xref>), while all the other images are adapted with permission from original photographs by R. Pohlmann (Pohlmann, <xref rid="ece310873-bib-0045" ref-type="bibr">2016</xref>). All figures were created exclusively using TreeViewer; no other external graphics editing software was used. Instructions detailing how to create these plots (and more) are available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
      </caption>
      <graphic xlink:href="ECE3-14-e10873-g007" position="anchor" id="jats-graphic-3"/>
    </fig>
  </sec>
  <sec id="ece310873-sec-0002">
    <label>2</label>
    <title>IMPLEMENTATION</title>
    <p>TreeViewer is written using the C# programming language, running under the .NET 7 runtime. Executables are available for computers running Windows and Linux on x64 processors (e.g., Intel or AMD processors) and for macOS computers running on x64 (Intel) or arm64 (Apple Silicon) processors. As ARM‐based Windows and Linux computers become more widely adopted, arm64 versions of the program for these operating systems will be provided.</p>
    <p>TreeViewer is an open‐source software, released under the GNU AGPLv3 licence (Free Software Foundation, <xref rid="ece310873-bib-0019" ref-type="bibr">2007</xref>). In addition to the base libraries included in the .NET runtime, the program relies on a number of open‐source libraries to perform various tasks (e.g., drawing graphics, providing a GUI, computing statistics, and manipulating phylogenetic trees). The full list of libraries used by TreeViewer, along with licensing information, is available in the licence agreement that is displayed when installing the program.</p>
    <sec id="ece310873-sec-0003">
      <label>2.1</label>
      <title>User interface</title>
      <p>TreeViewer provides a user‐friendly graphical user interface (GUI, Figure <xref rid="ece310873-fig-0002" ref-type="fig">2</xref>). The user interface (UI) design was inspired both from other popular software to draw phylogenetic trees (e.g., FigTree; Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) and from commonly used office suite software (e.g., Microsoft Office). A consistent UI across all supported platforms is achieved by using the Avalonia UI framework (AvaloniaUI Organization, <xref rid="ece310873-bib-0002" ref-type="bibr">2013</xref>); this makes it possible for the main UI elements to always have the same appearance, while platform‐specific dialogs are used where appropriate (e.g., in file dialogs).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0002">
        <label>FIGURE 2</label>
        <caption>
          <p>Main user interface of TreeViewer. (a) The tree plot is shown in the main part of the window. (b) Above the tree plot, a toolbar contains buttons to perform actions on the plot. (c) On the left of the tree plot, a panel shows the modules that are currently enabled, along with their settings. The blue question mark button next to each module directly opens the manual for that module. (d) The status bar at the bottom of the interface contains general information about the tree, as well as controls to determine the zoom level of the interface.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g003" position="anchor" id="jats-graphic-5"/>
      </fig>
      <p>The interface of TreeViewer is used to explicitly describe the process that goes from a tree file to a finished tree plot (Figure <xref rid="ece310873-fig-0003" ref-type="fig">3</xref>) in a series of discrete steps. The initial step in producing a plot is reading a tree file from the hard disk. This involves opening the file, determining its format, and choosing the most appropriate module to read it. These actions are performed by a <italic toggle="yes">File type</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). The program can automatically choose the best module for each file, but users can also decide to manually specify the module they want to use, in case multiple modules are able to read the same file type. The <italic toggle="yes">File type</italic> modules that are currently available enable TreeViewer to open tree files in formats such as Newick (Felsenstein, <xref rid="ece310873-bib-0017" ref-type="bibr">1986</xref>), NEXUS (Maddison et al., <xref rid="ece310873-bib-0035" ref-type="bibr">1997</xref>), NCBI ASN.1 (Ostell, <xref rid="ece310873-bib-0042" ref-type="bibr">1995</xref>), and a novel binary tree format (Bianchini, <xref rid="ece310873-bib-0009" ref-type="bibr">2023a</xref>). TreeViewer then determines the best strategy to load in memory the tree file that has been read. This action is performed by a <italic toggle="yes">Load file</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>), which can be used, for example, to copy the contents of the entire file into the system's memory (for smaller files) or to read just one tree at a time from the file as necessary (for larger files containing many trees).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0003">
        <label>FIGURE 3</label>
        <caption>
          <p>TreeViewer workflow to create tree plots. First of all, the program reads a tree file containing one or more trees using a <italic toggle="yes">File type</italic> and a <italic toggle="yes">Load file</italic> module. The tree(s) are then transformed using a <italic toggle="yes">Transformer</italic> module and, if necessary, one or more <italic toggle="yes">Further transformation</italic> modules. The final transformed tree is then plotted using a <italic toggle="yes">Coordinates</italic> module and one or more <italic toggle="yes">Plot action</italic> modules.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g002" position="anchor" id="jats-graphic-7"/>
      </fig>
      <p>Once a tree file has been read, TreeViewer has access to a list containing one or more phylogenetic trees, depending on how many were present in the tree file. If the file contains multiple trees, the next step is to produce a single tree that will then be subsequently plotted. This step is performed by a <italic toggle="yes">Transformer</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) and can involve, for example, computing a consensus tree or just choosing a single tree out of the ones that are in the file. Before plotting, the tree produced by the <italic toggle="yes">Transformer</italic> module (i.e., the “First transformed tree”) can also be further modified by one or more <italic toggle="yes">Further transformation</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules; these modules perform actions such as re‐rooting the tree, collapsing nodes, and rotating them. Once all the <italic toggle="yes">Further transformation</italic> modules have acted, a “Final transformed tree” is produced, which is the tree that is plotted in the subsequent steps.</p>
      <p>In order to plot a tree, the next step is determining the coordinates of the nodes in the tree, that is, at which position in the plot each branch will start and end. This step is performed by a <italic toggle="yes">Coordinates</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) module, which determines, for example, whether the tree appears as an unrooted tree or as a rectangular tree. Finally, this set of coordinates is used by <italic toggle="yes">Plot action</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules to create the phylogenetic tree plot. Each module contributes to the plot with a single feature, such as the branches of the tree, the labels for the tip nodes, or a scale bar.</p>
      <p>The final tree plot is the result of the action of all these modules. It can be viewed and manipulated in the graphical interface of TreeViewer, which allows users to click on branches to select them, display their attributes, and perform actions on them; plots can also be exported as publication‐ready PDF, SVG, PNG, or TIFF files.</p>
    </sec>
    <sec id="ece310873-sec-0004">
      <label>2.2</label>
      <title>Command‐line interface</title>
      <p>In addition to the GUI, TreeViewer provides a command‐line interface (CLI, Figure <xref rid="ece310873-fig-0004" ref-type="fig">4</xref>). The TreeViewer CLI has two main use cases: the first one is to create plots for very large trees (e.g., &gt;100,000 taxa) that may be impractical to handle using the GUI, and the second one is to be included in phylogenetic analysis pipelines. From the TreeViewer CLI, it is possible to export renderings of the tree plots (e.g., in PDF or SVG format), as well as to save tree files that contain module information. These files can then be opened with the TreeViewer GUI (e.g., to inspect attribute values at some branches in the tree or to collapse/expand nodes).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0004">
        <label>FIGURE 4</label>
        <caption>
          <p>TreeViewer command‐line interface. (a) List of currently enabled modules. (b) List of options and current values for the <italic toggle="yes">Labels</italic> module. Colours are used to help users navigate the interface, distinguishing between the parameter index (yellow), the name of the parameter (white), and its value (blue). If required, the colours can be easily disabled, as TreeViewer follows the NO_COLOR standard (Stein, <xref rid="ece310873-bib-0057" ref-type="bibr">2017</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g008" position="anchor" id="jats-graphic-9"/>
      </fig>
      <p>Interacting with the TreeViewer CLI is similar to interacting with the TreeViewer GUI: for example, the modules that are currently enabled can be listed, their current parameters viewed or modified, and nodes can be “selected.” The main difference is that the interaction happens through commands issued to the CLI, rather than through clicks on the GUI. The “help” command can be used to list all available commands, as well as to show more information about a particular command. Tab completion is available across the CLI, for command names, parameters, and file names (e.g., when opening or saving a file).</p>
      <p>For pipeline integration, the commands can be stored on a file and then fed to the standard input of the TreeViewer CLI. This can be used, for example, to create a template command file with placeholders for key parameters (e.g., the name of the file to open or the accession numbers of the outgroup taxa); the pipeline would then replace the placeholders with the actual values for a certain analysis and eventually feed the resulting command file to the TreeViewer CLI.</p>
    </sec>
    <sec id="ece310873-sec-0005">
      <label>2.3</label>
      <title>Modular structure</title>
      <p>The modular structure of the software is enabled by the self‐contained Roslyn .NET Compiler Platform (Microsoft Corporation, <xref rid="ece310873-bib-0039" ref-type="bibr">2015</xref>). Modules are distributed as compressed source code archives that also contain a digital signature and metadata about the module (e.g., the name of the author, the version of the module, and a short description). After the digital signature of a module has been verified (or the user has agreed to install a module with an unverified signature), the source code of the module is compiled by TreeViewer using the Roslyn application programming interface (API). The resulting compiled assembly is then stored on the user's disk and loaded automatically when the program is opened.</p>
      <p>This approach makes it possible to distribute identical module source files to users on any platform, because the appropriate platform‐specific artifacts are generated directly on the end‐user's machine. In principle, it is similar to the distribution systems used by many other extensible frameworks, such as R or Python packages (Hornik &amp; Leisch, <xref rid="ece310873-bib-0022" ref-type="bibr">1997</xref>; Python Software Foundation, <xref rid="ece310873-bib-0046" ref-type="bibr">2003</xref>). The “Module manager” and “Module repository” windows available within the software can be used to see which modules have been installed or are available, providing access to the source code and the documentation for each module. At the time of writing, 98 modules are available for TreeViewer, which perform various tasks.</p>
      <p>Source code compilation using the Roslyn API is not instantaneous, even though it normally does not take more than a few seconds, including the most complex modules. This time penalty is avoided by storing the compiled artifacts on the user's disk. However, once the source code has been compiled, its performance is undistinguishable from the performance of code included in the “native” TreeViewer assemblies. This allows TreeViewer to use runtime‐compiled code not only for modules, but also for many small and apparently trivial tasks.</p>
      <p>For example, consider the operation of displaying the value of a numerical attribute (e.g., the length of a branch) on the tree. In order to do this, it is necessary to convert the attribute value from a “number” (stored, e.g., as an IEEE 754 double‐precision binary floating‐point value (Floating‐Point Working Group, <xref rid="ece310873-bib-0018" ref-type="bibr">2019</xref>)) to a textual representation (e.g., “1.234”). This could be achieved in many ways. For example, users may want to show a certain number of decimal digits or significant digits; they may want to round it, truncate it towards 0, or truncate it away from zero; and they may want to show it in decimal notation or scientific notation. While some of these combinations are exposed through controls in the UI of the program, it would not be realistic to have a different button for every possibility. The <italic toggle="yes">Labels</italic> module of TreeViewer addresses this problem by exposing the source code of its “Attribute formatter,” that is, the piece of code that transforms an attribute value into a text string.</p>
      <p>The GUI (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5a</xref>) contains controls to automatically generate the source code for simple cases, but the code itself (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5b</xref>) can be fully customised by users according to their requirements. Furthermore, the integration between the software and the compiler makes it possible for code editor windows in TreeViewer to provide many features that make writing source code as user‐friendly as possible. These include syntax highlighting, semantic highlighting (where code tokens such as class and method names are highlighted based on their meaning), intelligent code completion with in‐line documentation (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5c</xref>), real‐time error checking (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5d</xref>), and breakpoints (which can be used to inspect the state of the code and the value of local variables during its execution). This is achieved through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0005">
        <label>FIGURE 5</label>
        <caption>
          <p>Attribute formatter window. Attribute formatters are used to convert attribute values from one type to another. In the window shown, users can convert a numerical attribute into a text string. (a) Controls to automatically generate code for simple use cases. (b) User‐modifiable source code of the method used to convert the attribute value. (c) Intelligent code completion with in‐line documentation. (d) Real‐time error checking.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g006" position="anchor" id="jats-graphic-11"/>
      </fig>
      <p>This approach of including UI controls that automatically generate source code for simple use cases, while allowing users to manually fine‐tune the code, is ubiquitous throughout TreeViewer. Many modules use attribute formatters to convert between attribute types (Table <xref rid="ece310873-tbl-0002" ref-type="table">2</xref>), and they can all be customised with an interface similar to Figure <xref rid="ece310873-fig-0005" ref-type="fig">5</xref>. The downside of such an approach is that, when the module settings are included in files exported by TreeViewer, each tree file becomes essentially a small program. In principle, hostile parties could include malicious code in an attribute formatter or another customisable code item and use the tree file as an infection vector. To address this issue, tree files created by TreeViewer can be signed in the same way as module files are (see Section <xref rid="ece310873-sec-0007" ref-type="sec">2.5</xref>).</p>
      <table-wrap position="float" id="ece310873-tbl-0002" content-type="TABLE">
        <label>TABLE 2</label>
        <caption>
          <p>Attribute formatters. Attribute formatters are distinguished by the type of data they output. For each formatter type, the table shows the available input data types and the default conversions defined for each.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <thead valign="bottom">
            <tr style="border-bottom:solid 1px #000000">
              <th align="left" valign="bottom" rowspan="1" colspan="1">Attribute formatter type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Output type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Input attribute type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Default conversions</th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">String attribute formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Round to a certain number of significant or decimal digits, remove values higher or lower than a certain threshold</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Number formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Attempt to parse the string</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Convert from a CSS‐style string (e.g., “red,” “#FF0000,” or “rgb(255, 0, 0)”)</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Map the number to a colour on a gradient</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec id="ece310873-sec-0006">
      <label>2.4</label>
      <title>Module development</title>
      <p>New modules can be developed to extend the capabilities of TreeViewer. The TreeViewer documentation contains information about the internal API of the program, in order for developers to access and extend key features. For example, a new module could be developed to add support for a new tree file format or to add a particular graphical element to the plot. Modules can be shared with the community by creating a “pull request” on the TreeViewer GitHub repository.</p>
      <p>Software developers can leverage the lightweight development environment integrated within TreeViewer to help create new modules. Given basic knowledge of the C# programming language, the real‐time error correction and intelligent code completion features implemented through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>) make it possible to code new modules efficiently. Breakpoints can be used to pause execution of the module at critical points, in order to inspect the flow of the program and the value of local variables.</p>
      <p>The recommended workflow when developing a new module for TreeViewer involves three steps. First, users are encouraged to use the <italic toggle="yes">Custom script</italic> modules to write an initial version of their source code. This allows quick prototyping of the source code, because the code is compiled and executed by TreeViewer at runtime, and fixing bugs or making changes does not require the program to be restarted. After an initial version of the new module has been developed, the second step is to use the “Module creator” function of TreeViewer to produce a full module prototype and test it. The “Module creator” supports the same code‐editing features as the custom script editors, but it makes it possible to create full‐fledged modules that are loaded by TreeViewer at startup. Thus, making changes to the code at this stage requires restarting the program, which is why we recommend polishing the code using the <italic toggle="yes">Custom script</italic> modules first. In the final step, module developers identify parameters used in the source code that should be modifiable by the user. These parameters should be exposed in the TreeViewer UI as described in the TreeViewer developer's guide (Bianchini, <xref rid="ece310873-bib-0006" ref-type="bibr">2021c</xref>), and a brief description for each parameter and for the module should be provided in the documentation comments; this will allow TreeViewer to automatically generate a manual for the new module.</p>
    </sec>
    <sec id="ece310873-sec-0007">
      <label>2.5</label>
      <title>Digital signatures</title>
      <p>The digital signature for a TreeViewer module is an RSA‐encrypted hash (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>) of the source code of the module, created and verified by TreeViewer using the SHA‐512 hashing algorithm (Dang, <xref rid="ece310873-bib-0015" ref-type="bibr">2015</xref>) and the RSASSA‐PKCS1‐v1_5 signature scheme (Jonsson &amp; Kaliski, <xref rid="ece310873-bib-0027" ref-type="bibr">2003</xref>). Briefly, this involves a key pair consisting of a “private” key and a “public” key. The private key is available only to the user who generated it, while the public key is distributed to other users. The signature is then created by computing a hash digest of the source code, which is then encrypted using the private key. Validating the signature involves decrypting it using the public key and comparing the resulting value to a newly computed hash of the source code. The two hashes will match only if the public key corresponds to the private key used for encryption and if the source code has not been altered. Therefore, both the identity of the author or distributor of the source code and the integrity of the source code are guaranteed (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>).</p>
      <p>Public keys for modules released through the TreeViewer GitHub repository are included in the source code of the program; a user attempting to install a module with an invalid signature will be presented with a warning message and will have the option to install the module anyways or to abort. An invalid signature may occur either because the module has been signed using a private key, whose public key counterpart is not included in the TreeViewer source code, or because the source code has been (possibly maliciously) altered. Users are encouraged not to install modules with an invalid signature unless they understand why the signature check failed and trust the source of the module. TreeViewer has a command‐line option to generate an RSA key pair. Combined with the open‐source nature of the software, this potentially enables other developers to make changes to the set of trusted public keys and create versions (“forks”) of TreeViewer allowing the installation of modules from alternative repositories.</p>
      <p>Tree files containing source code are signed in a similar way. When the program is executed for the first time, a public/private key pair for the user is generated. The private key is then used to sign tree files, while the public key is also included in the file. The first time that user A opens a file that has been created by user B, a warning message is displayed, explaining that the tree file contains source code that could potentially be malicious. User A has then three options: the first option is to open the tree file discarding all the source code, thus reverting attribute formatters to the default settings; this may change the appearance of the plot. The second option is to allow loading the source code just once, while the final option is to “trust” the author of the file. This last option should be selected only when there is trust in both the author of the file and the integrity of the communication channel over which the file has been received (e.g., that there has not been a man‐in‐the‐middle or similar attack). In this case, the public key contained in the tree file will be stored in the user's cache, and if user A opens other files coming from user B, source code contained therein will automatically be trusted. This allows collaboration within groups without dialog boxes showing up every time a file is opened, while still allowing a certain degree of security for files coming externally. It should be noted that the signature can be used to assess the integrity of a file and the identity of its author only after the author's public signature has been stored in TreeViewer's key cache. In principle, it would also be possible to create an online repository of public keys and associated identities (verified, e.g., through an academic email address).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="ece310873-sec-0008">
    <label>3</label>
    <title>RESULTS</title>
    <p>Here, we present an example using TreeViewer to display age estimates on a time‐calibrated phylogenetic tree. Time‐calibrated trees can be obtained, for example, from a Bayesian molecular clock analysis using software such as MrBayes (Ronquist &amp; Huelsenbeck, <xref rid="ece310873-bib-0051" ref-type="bibr">2003</xref>), PhyloBayes (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), RevBayes (Höhna et al., <xref rid="ece310873-bib-0021" ref-type="bibr">2016</xref>), and BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). These can be used by TreeViewer to compute a consensus tree and to plot the age distribution for each node as a violin plot. Such plots visualise the posterior probabilities, and these are more informative than simple confidence interval bars; this is particularly useful in the case of asymmetric age distributions.</p>
    <sec id="ece310873-sec-0009">
      <label>3.1</label>
      <title>Consensus tree</title>
      <p>The tree file at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock.tre" ext-link-type="uri">https://treeviewer.org/manual/clock/clock.tre</ext-link> (also available in the Supplementary Information <xref rid="ece310873-supitem-0001" ref-type="supplementary-material">S1</xref>), generated after running a Bayesian molecular clock analysis of Cyanobacteria in PhyloBayes v4.1e (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), contains 1000 trees, in which each tree contains 42 taxa. When the tree file is opened, TreeViewer recognises that it contains multiple trees and automatically computes a greedy consensus tree (Bryant, <xref rid="ece310873-bib-0012" ref-type="bibr">2003</xref>). The options of the “Consensus” <italic toggle="yes">Transformer</italic> module can be used to change how the consensus tree is computed (e.g., adding a burn‐in or sampling a subset of the trees), but in this case the default values are adequate.</p>
    </sec>
    <sec id="ece310873-sec-0010">
      <label>3.2</label>
      <title>Initial tree plot</title>
      <p>The tree is shown automatically as a rooted tree (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6a</xref>), and three <italic toggle="yes">Plot action</italic> modules are enabled: the “Branches” module, which draws the tree branches, and two instances of the “Labels” module. The first “Labels” module draws the taxon names at the tips of the tree, while the second “Labels” module draws the branch length over each branch. To make the plot easier to view, the second instance of the “Labels” module can be removed. Furthermore, to make the tree more compact, the “Width” parameter of the “Rectangular” <italic toggle="yes">Coordinates</italic> module can be reduced to 500.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0006">
        <label>FIGURE 6</label>
        <caption>
          <p>Steps performed in this example. (a) The file containing the trees has been opened in TreeViewer, which computed the consensus tree and displayed it. (b) Age distributions have been computed and plotted on the tree. (c) A scale axis has been added to the plot. (d) All the module parameters have been fine‐tuned in order to obtain a publication‐ready figure (shown enlarged in Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g004" position="anchor" id="jats-graphic-13"/>
      </fig>
    </sec>
    <sec id="ece310873-sec-0011">
      <label>3.3</label>
      <title>Age distributions</title>
      <p>Plotting the age distribution for each node requires a two‐step process: first, the age distributions need to be computed by using the “Set up age distributions” <italic toggle="yes">Further transformation</italic> module. By default, this module will also associate the mean age and 89% highest density interval (McElreath, <xref rid="ece310873-bib-0038" ref-type="bibr">2020</xref>) to each node, which can be used, for example, to draw node bars showing the confidence interval (the default 89% threshold can be changed). To draw the age distributions, the “Age distributions” <italic toggle="yes">Plot action</italic> module needs to be enabled. This will draw a violin plot at each node in the tree, showing the posterior age distribution estimate for the node (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6b</xref>). By default, each violin plot is drawn using a randomly chosen colour, but this can be changed by disabling the “Auto colour by node” option in the module parameters.</p>
      <p>In TreeViewer, the plot elements are drawn in the order they are displayed in the left panel, from top to bottom; this means that the newly added age distributions are drawn above the tree branches and labels. To avoid obscuring the tree topology, the “Age distributions” module can be dragged up, so that it is the first module in the plot element list. Furthermore, some of the age distribution plots overlap, due to the limited available vertical space. The vertical spacing of the tips in the tree can be increased by opening the options for the <italic toggle="yes">Coordinates</italic> module and setting the “Height” to a higher value (e.g., 800).</p>
    </sec>
    <sec id="ece310873-sec-0012">
      <label>3.4</label>
      <title>Age axis</title>
      <p>Additionally, it is possible to add an age axis to the plot, so that the age of the various groups can be read from the tree. This can be done by enabling the “Scale axis” <italic toggle="yes">Plot action</italic> module (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6c</xref>). By default, the spacing between consecutive “ticks” on the axis drawn by this module is computed automatically. To make the axis more pleasant, the “Tick spacing” can be increased to 150, the “End” to 3000, and the “Digits” can be set to 0. In this tree, node ages are expressed in units of millions of years; to show this on the plot, the value of the “Units” parameter can be set as “Mya,” which will show the unit at the start and end of the scale axis. The module can be moved up in the list of plot elements, so that the scale axis is drawn before all the other layers in the plot. Finally, the font size of the labels and of the scale axis can be increased by clicking on the respective “Font” buttons and entering “12” in the “Font size” box (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6d</xref>).</p>
    </sec>
    <sec id="ece310873-sec-0013">
      <label>3.5</label>
      <title>Exporting the plot</title>
      <p>A finished figure looks similar to Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>. The plot can be exported in PDF, SVG, PNG, or TIFF format, and the tree file can be saved in a format (e.g., NEXUS or binary) that preserves information about the enabled modules. When such a file (available at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock_finished.tbi" ext-link-type="uri">https://treeviewer.org/manual/clock/clock_finished.tbi</ext-link> and in the Supplementary Information <xref rid="ece310873-supitem-0002" ref-type="supplementary-material">S2</xref>) is opened, TreeViewer will automatically replicate all the processing steps involved in going from the initial tree file to the finished plot. Furthermore, the “Apply to other tree” button in the “Edit” tab can be used to apply the current style to a different file (naturally, some fine‐tuning might be necessary). For example, in a Bayesian analysis, this would make it possible to create an initial draft of the figure with tree samples from a chain that has not converged; then, once the analysis has run for long enough, the plot style can be applied to the final sample of trees with just a few clicks.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0007">
        <label>FIGURE 7</label>
        <caption>
          <p>Tree produced following the steps in this example. For each node, a violin plot shows the posterior age distribution estimate for the node. Ages in the scale axis are expressed as millions of years since the present day.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g005" position="anchor" id="jats-graphic-15"/>
      </fig>
      <p>A more detailed version of this example, showing some additional features of TreeViewer, can be found in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0007" ref-type="bibr">2021d</xref>). Furthermore, TreeViewer can plot multiple different age distributions on the same tree; this is useful, for example, when comparing fossil age calibrations, the effective prior distribution, and the posterior distribution. A tutorial on how to do this is also available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0011" ref-type="bibr">2023c</xref>). Many more examples and tutorials showcasing the capabilities of TreeViewer are available in the online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="ece310873-sec-0014">
    <label>4</label>
    <title>DISCUSSION</title>
    <p>Many software tools exist to plot and visualise phylogenetic trees, which can be broadly categorised into interactive software with a GUI and software libraries for use through a scripting/programming language (some representative examples are shown in Table <xref rid="ece310873-tbl-0003" ref-type="table">3</xref>). The Interactive Tree Of Life (iTOL; Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), for instance, is an online GUI tool that enables users to plot, annotate, and manage phylogenetic trees; FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a simple desktop application to draw phylogenetic trees, including some capabilities for annotation and manipulation. Examples of software libraries include ggtree (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>), an R package, and the Environment for Tree Exploration (ETE; Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>), a Python package. TreeViewer aims to bridge the gap between the two categories, providing users with both the ease of use of a GUI software and powerful scripting capabilities.</p>
    <table-wrap position="float" id="ece310873-tbl-0003" content-type="TABLE">
      <label>TABLE 3</label>
      <caption>
        <p>Overview of phylogenetic tree visualisation software. For each program, the table shows whether it is free and open source and the licence under which it is released, the operating system (OS) compatibility (here, “All” refers to Windows, Linux and macOS), whether it provides a GUI and/or a command‐line interface (CLI), and the programming language in which it was created.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Software</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Free and open source</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Licence</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">OS compatibility</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Interface</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Programming language</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">AGPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">C#</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">iTOL</td>
            <td align="left" valign="top" rowspan="1" colspan="1">No</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Proprietary</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All (online)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, (CLI<xref rid="ece310873-note-0004" ref-type="table-fn"><sup>a</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">JavaScript<xref rid="ece310873-note-0005" ref-type="table-fn"><sup>b</sup></xref>
</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">FigTree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Java</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Ggtree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Artistic‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">ETE</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Linux and macOS</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI, (GUI<xref rid="ece310873-note-0006" ref-type="table-fn"><sup>c</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot id="ece310873-ntgp-0003">
        <fn id="ece310873-note-0004">
          <label>
            <sup>a</sup>
          </label>
          <p>In addition to the main GUI, iTOL allows users with an active subscription to upload and export trees from the command line.</p>
        </fn>
        <fn id="ece310873-note-0005">
          <label>
            <sup>b</sup>
          </label>
          <p>The latest versions of the client‐side visualisation engine for iTOL are written in JavaScript (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>); source code for the server‐side components is not freely available, but the original release used Perl scripts (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>).</p>
        </fn>
        <fn id="ece310873-note-0006">
          <label>
            <sup>c</sup>
          </label>
          <p>In addition to the main Python command‐line interface, ETE has basic interactive capabilities.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>One of the main attractions of the iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) is its cloud‐based nature, since users do not need to download any software on the machine, and trees saved on their online workspace are available from any workstation. The iTOL portal also allows users to share annotated trees with other collaborators and to create figures for publication. However, unrestricted use of the software requires a paid subscription (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), and the source code for the software is not publicly available. While installing iTOL on a local machine is possible, it requires liaising with the software creators.</p>
    <p>FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a Java‐based program that was originally designed to display phylogenetic trees produced by BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). It is very accessible, and it can be easily used to perform basic annotations on the trees (e.g., adding symbols at the tips or internal nodes, changing the display colour of part of the tree, and displaying scale bars). There are, however, some limitations to the number and the kind of annotations that can be added to the tree. Trees produced often need to be exported and edited using other software (e.g., Adobe Illustrator or Inkscape) to prepare them for publication. FigTree is open source (released under a GNU GPLv2 licence), and it is available for Windows, Linux, and macOS.</p>
    <p>The ggtree R package (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>) allows users to plot phylogenetic trees using a “layered” syntax derived from the general‐purpose ggplot2 (Wickham, <xref rid="ece310873-bib-0063" ref-type="bibr">2016</xref>) R graphics package. In this way, a basic tree geometry can be extended with many layers of additional elements such as labels, symbols, and heatmaps. Since all of this happens within an R scripting environment, users can manipulate the trees using other popular packages such as ape (Paradis et al., <xref rid="ece310873-bib-0043" ref-type="bibr">2004</xref>) or phytools (Revell, <xref rid="ece310873-bib-0049" ref-type="bibr">2012</xref>). The ggtree package is open source (released under the Artistic License 2.0) and available for Windows, Linux, and macOS.</p>
    <p>The ETE Python package (Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) provides similar capabilities for Python users. In addition to tree drawing and annotation capabilities, ETE can perform some evolutionary analyses and can access data from online databases such as the NCBI taxonomy (Schoch et al., <xref rid="ece310873-bib-0054" ref-type="bibr">2020</xref>) and the Genome Taxonomy Database (Parks et al., <xref rid="ece310873-bib-0044" ref-type="bibr">2022</xref>). Furthermore, it provides some interactive features. ETE is open source (released under a GNU GPLv3 licence), but does not support Windows, and can only be installed on Linux and macOS. A limited online version allowing users to plot a tree together with a sequence alignment is also available.</p>
    <p>Code that uses software libraries such as ggtree and ETE can be easily incorporated into analysis pipelines, and the scripts used to produce the plots can be used to replicate the plot or adapt it to a different dataset with minimal effort. However, one of their drawbacks is that users are required to be familiar with the relevant programming language, unlike GUI tools such as iTOL and FigTree. As a result, GUI tools appeal to a much wider audience. For instance, at the time of writing, five publications describing ggtree (Xu et al., <xref rid="ece310873-bib-0065" ref-type="bibr">2022</xref>; Yu, <xref rid="ece310873-bib-0066" ref-type="bibr">2020</xref>, <xref rid="ece310873-bib-0067" ref-type="bibr">2022</xref>; Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>, <xref rid="ece310873-bib-0068" ref-type="bibr">2018</xref>) have a total of 1862 citations, and two publications describing ETE (Huerta‐Cepas et al., <xref rid="ece310873-bib-0023" ref-type="bibr">2010</xref>, <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) have a total of 1685 citations. In contrast, five publications describing iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>, <xref rid="ece310873-bib-0031" ref-type="bibr">2011</xref>, <xref rid="ece310873-bib-0032" ref-type="bibr">2016</xref>, <xref rid="ece310873-bib-0033" ref-type="bibr">2019</xref>, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) have a total of 15,388 citations. FigTree is not associated with an official publication, which makes tracking its use more difficult; however, a Google Scholar search suggests upwards of 7700 citations.</p>
    <p>TreeViewer has a GUI interface that can be used to produce simple tree plots without much effort (similar to iTOL or FigTree), though the creation of complex, multi‐annotation plots requires some familiarity with the program. The “Apply to other tree” option reuses a plot style for a different tree; this is similar to changing the input file in an R or Python script, but everything happens through the TreeViewer GUI. The command‐line interface can be used to integrate the software into pipelines and to reproduce the same plot after minor changes. At the same time, the integrated C# scripting environment allows advanced users to manipulate the tree without restriction (like ggtree or ETE). The free and open‐source licensing scheme and cross‐platform compatibility allow users to run TreeViewer with full capabilities on almost any machine (unlike ETE) and without having to pay any fees (unlike iTOL).</p>
  </sec>
  <sec sec-type="conclusions" id="ece310873-sec-0015">
    <label>5</label>
    <title>CONCLUSION</title>
    <p>TreeViewer provides new and versatile capabilities for drawing, annotating, and analysing phylogenetic trees. At present, trees can be annotated with discrete and continuous character data, sequence alignments, age distributions, images, highlights, and stochastic mapping results. The modular design allows both the main software developers and experienced users to expand TreeViewer's capabilities without having to make significant alterations to the main code base.</p>
    <p>The user‐friendly interface and intuitive zoom‐and‐drag functionalities allow inexperienced users to quickly produce a plot and explore the relationships between the taxa included in the tree. Detailed documentation and tutorials are available for users to learn about the capabilities of the program and how to use and combine them. Furthermore, every module has its own manual, accessible from within TreeViewer's user interface. Using the lightweight integrated development environment and the information in the developer's guide (included in the online manual), advanced users can create small scripts and/or new modules to change the structure of the tree or the way in which it is displayed.</p>
    <p>TreeViewer is freely available for Windows, Linux, and macOS (both Intel‐based and Apple Silicon‐based) computers. The source code and compiled executable files can be downloaded from the program's website at <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>, which also contains links to the documentation, tutorials, and GitHub repository (<ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri">https://github.com/arklumpus/TreeViewer</ext-link>), where users can submit feedback, request help, and/or report bugs.</p>
  </sec>
  <sec id="ece310873-sec-0021">
    <title>AUTHOR CONTRIBUTIONS</title>
    <p><bold>Giorgio Bianchini:</bold> Conceptualization (lead); methodology (lead); software (lead); validation (lead); visualization (lead); writing – original draft (lead); writing – review and editing (equal). <bold>Patricia Sánchez‐Baracaldo:</bold> Funding acquisition (lead); supervision (lead); writing – original draft (supporting); writing – review and editing (equal).</p>
  </sec>
  <sec id="ece310873-sec-0017">
    <title>FUNDING INFORMATION</title>
    <p>Funding support for this work came from a University of Bristol Scholarship to GB and a Royal Society University Research Fellowship to PS‐B. For the purpose of open access, the authors have applied a Creative Commons Attribution (CC BY) licence to any author‐accepted manuscript version arising from this submission.</p>
  </sec>
  <sec sec-type="COI-statement" id="ece310873-sec-0018">
    <title>CONFLICT OF INTEREST STATEMENT</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supporting information</title>
    <supplementary-material id="ece310873-supitem-0001" position="float" content-type="local-data">
      <caption>
        <p>
Data S1
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s001.tre">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="ece310873-supitem-0002" position="float" content-type="local-data">
      <caption>
        <p>
Data S2
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s002.tbi">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ece310873-sec-0016">
    <title>ACKNOWLEDGEMENTS</title>
    <p>We would like to acknowledge all the users who have tried the software and given us feedback during its development, in particular the Molecular Palaeo group at the University of Bristol.</p>
  </ack>
  <sec sec-type="data-availability" id="ece310873-sec-0020">
    <title>DATA AVAILABILITY STATEMENT</title>
    <p>The source code for TreeViewer and all associated example files and tutorials are available from the TreeViewer GitHub repository at <ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri" specific-use="software is-supplemented-by">https://github.com/arklumpus/TreeViewer</ext-link> and archived on Zenodo at <ext-link xlink:href="https://zenodo.org/doi/10.5281/zenodo.7768343" ext-link-type="uri" specific-use="software is-supplemented-by">https://zenodo.org/doi/10.5281/zenodo.7768343</ext-link>.</p>
  </sec>
  <ref-list content-type="cited-references" id="ece310873-bibl-0001">
    <title>REFERENCES</title>
    <ref id="ece310873-bib-0001">
      <mixed-citation publication-type="journal" id="ece310873-cit-0001"><string-name><surname>Anderegg</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ho</surname>, <given-names>T. M.</given-names></string-name>, <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name>, &amp; <string-name><surname>Fuster</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>The less well‐known little brothers: The SLC9B/NHA sodium proton exchanger subfamily—Structure, function, regulation and potential drug‐target approaches</article-title>. <source>Frontiers in Physiology</source>, <volume>13</volume>, <elocation-id>898508</elocation-id>. <pub-id pub-id-type="doi">10.3389/FPHYS.2022.898508</pub-id>
<pub-id pub-id-type="pmid">35694410</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0002">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0002"><collab collab-type="authors">AvaloniaUI Organization</collab>
. (<year>2013</year>). <article-title>Avalonia UI</article-title>. <ext-link xlink:href="https://avaloniaui.net/" ext-link-type="uri">https://avaloniaui.net/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0003">
      <mixed-citation publication-type="journal" id="ece310873-cit-0003"><string-name><surname>Beach</surname>, <given-names>N. K.</given-names></string-name>, <string-name><surname>Myers</surname>, <given-names>K. S.</given-names></string-name>, <string-name><surname>Donohue</surname>, <given-names>T. J.</given-names></string-name>, &amp; <string-name><surname>Noguera</surname>, <given-names>D. R.</given-names></string-name> (<year>2022</year>). <article-title>Metagenomes from 25 low‐abundance microbes in a partial Nitritation Anammox microbiome</article-title>. <source>Microbiology Resource Announcements</source>, <volume>11</volume>, <elocation-id>e00212–22</elocation-id>. <pub-id pub-id-type="doi">10.1128/MRA.00212-22</pub-id>
<pub-id pub-id-type="pmid">35575561</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0004">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0004"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021a</year>). <article-title>TreeViewer module repository</article-title>. <ext-link xlink:href="https://treeviewer.org/modules" ext-link-type="uri">https://treeviewer.org/modules</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0005">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0005"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021b</year>). <article-title>TreeViewer manual</article-title>. <ext-link xlink:href="https://treeviewer.org/manual" ext-link-type="uri">https://treeviewer.org/manual</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0006">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0006"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021c</year>). <article-title>TreeViewer developer's guide</article-title>. <ext-link xlink:href="https://github.com/arklumpus/TreeViewer/wiki/Developer%E2%80%99s-guide" ext-link-type="uri">https://github.com/arklumpus/TreeViewer/wiki/Developer's‐guide</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0007">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0007"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021d</year>). <article-title>TreeViewer example: Plotting the age distributions in a time‐calibrated tree</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/clock" ext-link-type="uri">https://treeviewer.org/manual/clock</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0008">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0008"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021e</year>). <article-title>TreeViewer examples</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/examples" ext-link-type="uri">https://treeviewer.org/manual/examples</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0009">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0009"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023a</year>). <article-title>TreeNode: Version 1.5.3</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387417</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0010">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0010"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023b</year>). <article-title>CSharpEditor: Version 1.1.5</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387453</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0011">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0011"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023c</year>). <article-title>TreeViewer example: Plotting multiple age distributions</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/distributions" ext-link-type="uri">https://treeviewer.org/manual/distributions</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0012">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0012"><string-name><surname>Bryant</surname>, <given-names>D.</given-names></string-name> (<year>2003</year>). <article-title>A classification of consensus methods for phylogenetics</article-title>. DIMACS Series in Discrete Mathematics and Theoretical Computer Science <pub-id pub-id-type="doi">10.1090/dimacs/061</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0013">
      <mixed-citation publication-type="journal" id="ece310873-cit-0013"><string-name><surname>Camacho</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Coulouris</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Avagyan</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Ma</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Papadopoulos</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Bealer</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Madden</surname>, <given-names>T. L.</given-names></string-name> (<year>2009</year>). <article-title>BLAST+: Architecture and applications</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <elocation-id>421</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-10-421</pub-id>
<pub-id pub-id-type="pmid">20003500</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0015">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0015"><string-name><surname>Dang</surname>, <given-names>Q. H.</given-names></string-name> (<year>2015</year>). <article-title>Secure hash standard</article-title>. Federal Inf Process Stds (NIST FIPS) <pub-id pub-id-type="doi">10.6028/NIST.FIPS.180-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0016">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0016"><string-name><surname>Eisfeld</surname>, <given-names>V.</given-names></string-name> (<year>2016</year>). <article-title>File:Guppy—Poecilia reticulata.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Guppy_-_Poecilia_reticulata.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Guppy_‐_Poecilia_reticulata.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0017">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0017"><string-name><surname>Felsenstein</surname>, <given-names>J.</given-names></string-name> (<year>1986</year>). <article-title>The Newick tree format</article-title>. <ext-link xlink:href="http://evolution.genetics.washington.edu/phylip/newicktree.html" ext-link-type="uri">http://evolution.genetics.washington.edu/phylip/newicktree.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0018">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0018"><collab collab-type="authors">Floating‐Point Working Group</collab>
. (<year>2019</year>). <article-title>IEEE Standard for Floating‐Point Arithmetic. IEEE Std 754–2019 (Revision of IEEE 754–2008)</article-title>, 1–84 <pub-id pub-id-type="doi">10.1109/IEEESTD.2019.8766229</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0019">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0019"><collab collab-type="authors">Free Software Foundation</collab>
. (<year>2007</year>). <article-title>GNU Affero General Public License</article-title>. <ext-link xlink:href="https://www.gnu.org/licenses/agpl-3.0.en.html" ext-link-type="uri">https://www.gnu.org/licenses/agpl‐3.0.en.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0020">
      <mixed-citation publication-type="journal" id="ece310873-cit-0020"><string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name> (<year>2022</year>). <article-title>Systematic in silico discovery of novel solute carrier‐like proteins from proteomes</article-title>. <source>PLoS One</source>, <volume>17</volume>, <elocation-id>e0271062</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PONE.0271062</pub-id>
<pub-id pub-id-type="pmid">35901096</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0021">
      <mixed-citation publication-type="journal" id="ece310873-cit-0021"><string-name><surname>Höhna</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Landis</surname>, <given-names>M. J.</given-names></string-name>, <string-name><surname>Heath</surname>, <given-names>T. A.</given-names></string-name>, <string-name><surname>Boussau</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. R.</given-names></string-name>, <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name>, &amp; <string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name> (<year>2016</year>). <article-title>RevBayes: Bayesian phylogenetic inference using graphical models and an interactive model‐specification language</article-title>. <source>Systematic Biology</source>, <volume>65</volume>, <fpage>726</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw021</pub-id>
<pub-id pub-id-type="pmid">27235697</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0022">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0022"><string-name><surname>Hornik</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Leisch</surname>, <given-names>F.</given-names></string-name> (<year>1997</year>). <article-title>CRAN: The Comprehensive R Archive Network</article-title>. <ext-link xlink:href="https://cran.r-project.org/" ext-link-type="uri">https://cran.r‐project.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0023">
      <mixed-citation publication-type="journal" id="ece310873-cit-0023"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Dopazo</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Gabaldón</surname>, <given-names>T.</given-names></string-name> (<year>2010</year>). <article-title>ETE: A python environment for tree exploration</article-title>. <source>BMC Bioinformatics</source>, <volume>11</volume>, <elocation-id>24</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-11-24</pub-id>
<pub-id pub-id-type="pmid">20070885</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0024">
      <mixed-citation publication-type="journal" id="ece310873-cit-0024"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Serra</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>ETE 3: Reconstruction, analysis, and visualization of Phylogenomic data</article-title>. <source>Molecular Biology and Evolution</source>, <volume>33</volume>, <fpage>1635</fpage>–<lpage>1638</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSW046</pub-id>
<pub-id pub-id-type="pmid">26921390</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0025">
      <mixed-citation publication-type="journal" id="ece310873-cit-0025"><string-name><surname>Hug</surname>, <given-names>L. A.</given-names></string-name>, <string-name><surname>Baker</surname>, <given-names>B. J.</given-names></string-name>, <string-name><surname>Anantharaman</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Brown</surname>, <given-names>C. T.</given-names></string-name>, <string-name><surname>Probst</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Castelle</surname>, <given-names>C. J.</given-names></string-name>, <string-name><surname>Butterfield</surname>, <given-names>C. N.</given-names></string-name>, <string-name><surname>Hernsdorf</surname>, <given-names>A. W.</given-names></string-name>, <string-name><surname>Amano</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Ise</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Suzuki</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Dudek</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Relman</surname>, <given-names>D. A.</given-names></string-name>, <string-name><surname>Finstad</surname>, <given-names>K. M.</given-names></string-name>, <string-name><surname>Amundson</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Thomas</surname>, <given-names>B. C.</given-names></string-name>, &amp; <string-name><surname>Banfield</surname>, <given-names>J. F.</given-names></string-name> (<year>2016</year>). <article-title>A new view of the tree of life</article-title>. <source>Nature Microbiology</source>, <volume>1</volume>, <elocation-id>16048</elocation-id>. <pub-id pub-id-type="doi">10.1038/nmicrobiol.2016.48</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0026">
      <mixed-citation publication-type="journal" id="ece310873-cit-0026"><string-name><surname>Iwata</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Yoshinaga</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Mizutani</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Kikawada</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Kikuta</surname>, <given-names>S.</given-names></string-name> (<year>2023</year>). <article-title>Proton gradient mediates hemolymph trehalose influx into aphid bacteriocytes</article-title>. <source>Archives of Insect Biochemistry and Physiology</source>, <volume>112</volume>, <elocation-id>e21971</elocation-id>. <pub-id pub-id-type="doi">10.1002/ARCH.21971</pub-id>
<pub-id pub-id-type="pmid">36205078</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0027">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0027"><string-name><surname>Jonsson</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Kaliski</surname>, <given-names>B.</given-names></string-name> (<year>2003</year>). <article-title>Public‐Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1</article-title>. <pub-id pub-id-type="doi">10.17487/RFC3447</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0028">
      <mixed-citation publication-type="journal" id="ece310873-cit-0028"><string-name><surname>Klau</surname>, <given-names>L. J.</given-names></string-name>, <string-name><surname>Podell</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Creamer</surname>, <given-names>K. E.</given-names></string-name>, <string-name><surname>Demko</surname>, <given-names>A. M.</given-names></string-name>, <string-name><surname>Singh</surname>, <given-names>H. W.</given-names></string-name>, <string-name><surname>Allen</surname>, <given-names>E. E.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. S.</given-names></string-name>, <string-name><surname>Ziemert</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Letzel</surname>, <given-names>A. C.</given-names></string-name>, &amp; <string-name><surname>Jensen</surname>, <given-names>P. R.</given-names></string-name> (<year>2022</year>). <article-title>The natural product domain seeker version 2 (NaPDoS2) webtool relates ketosynthase phylogeny to biosynthetic function</article-title>. <source>Journal of Biological Chemistry</source>, <volume>298</volume>, <fpage>102480</fpage>–<lpage>102481</lpage>. <pub-id pub-id-type="doi">10.1016/j.jbc.2022.102480</pub-id>
<pub-id pub-id-type="pmid">36108739</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0029">
      <mixed-citation publication-type="journal" id="ece310873-cit-0029"><string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Lepage</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Blanquart</surname>, <given-names>S.</given-names></string-name> (<year>2009</year>). <article-title>PhyloBayes 3: A Bayesian software package for phylogenetic reconstruction and molecular dating</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>2286</fpage>–<lpage>2288</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp368</pub-id>
<pub-id pub-id-type="pmid">19535536</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0030">
      <mixed-citation publication-type="journal" id="ece310873-cit-0030"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2007</year>). <article-title>Interactive tree of life (iTOL): An online tool for phylogenetic tree display and annotation</article-title>. <source>Bioinformatics</source>, <volume>23</volume>, <fpage>127</fpage>–<lpage>128</lpage>. <pub-id pub-id-type="doi">10.1093/BIOINFORMATICS/BTL529</pub-id>
<pub-id pub-id-type="pmid">17050570</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0031">
      <mixed-citation publication-type="journal" id="ece310873-cit-0031"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2011</year>). <article-title>Interactive tree of life v2: Online annotation and display of phylogenetic trees made easy</article-title>. <source>Nucleic Acids Research</source>, <volume>39</volume>, <fpage>W475</fpage>–<lpage>W478</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKR201</pub-id>
<pub-id pub-id-type="pmid">21470960</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0032">
      <mixed-citation publication-type="journal" id="ece310873-cit-0032"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>Interactive tree of life (iTOL) v3: An online tool for the display and annotation of phylogenetic and other trees</article-title>. <source>Nucleic Acids Research</source>, <volume>44</volume>, <fpage>W242</fpage>–<lpage>W245</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKW290</pub-id>
<pub-id pub-id-type="pmid">27095192</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0033">
      <mixed-citation publication-type="journal" id="ece310873-cit-0033"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2019</year>). <article-title>Interactive tree of life (iTOL) v4: Recent updates and new developments</article-title>. <source>Nucleic Acids Research</source>, <volume>47</volume>, <fpage>W256</fpage>–<lpage>W259</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKZ239</pub-id>
<pub-id pub-id-type="pmid">30931475</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0034">
      <mixed-citation publication-type="journal" id="ece310873-cit-0034"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>Interactive tree of life (iTOL) v5: An online tool for phylogenetic tree display and annotation</article-title>. <source>Nucleic Acids Research</source>, <volume>49</volume>, <fpage>W293</fpage>–<lpage>W296</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB301</pub-id>
<pub-id pub-id-type="pmid">33885785</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0035">
      <mixed-citation publication-type="journal" id="ece310873-cit-0035"><string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name>, <string-name><surname>Swofford</surname>, <given-names>D. L.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name> (<year>1997</year>). <article-title>Nexus: An extensible file format for systematic information</article-title>. <source>Systematic Biology</source>, <volume>46</volume>, <fpage>590</fpage>–<lpage>621</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.4.590</pub-id>
<pub-id pub-id-type="pmid">11975335</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0036">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0036"><string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name> (<year>2023</year>). <article-title>Mesquite Project</article-title>. <ext-link xlink:href="http://www.mesquiteproject.org/" ext-link-type="uri">http://www.mesquiteproject.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0037">
      <mixed-citation publication-type="journal" id="ece310873-cit-0037"><string-name><surname>Marx</surname>, <given-names>V.</given-names></string-name> (<year>2013</year>). <article-title>The big challenges of big data</article-title>. <source>Nature</source>, <volume>498</volume>, <fpage>255</fpage>–<lpage>260</lpage>. <pub-id pub-id-type="doi">10.1038/498255a</pub-id>
<pub-id pub-id-type="pmid">23765498</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0038">
      <mixed-citation publication-type="book" id="ece310873-cit-0038"><string-name><surname>McElreath</surname>, <given-names>R.</given-names></string-name> (<year>2020</year>). <part-title>Statistical rethinking</part-title>. In <source>A Bayesian course with examples in R and STAN</source> (<edition designator="2">2nd ed.</edition>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9780429029608</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0039">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0039"><collab collab-type="authors">Microsoft Corporation</collab>
. (<year>2015</year>). <article-title>dotnet/roslyn: The Roslyn. NET compiler provides C# and Visual Basic languages with rich code analysis APIs</article-title>. <ext-link xlink:href="https://github.com/dotnet/roslyn" ext-link-type="uri">https://github.com/dotnet/roslyn</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0040">
      <mixed-citation publication-type="journal" id="ece310873-cit-0040"><string-name><surname>Moreira</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Arenas</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Videira</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Pereira</surname>, <given-names>F.</given-names></string-name> (<year>2022</year>). <article-title>Evolutionary history of TOPIIA topoisomerases in animals</article-title>. <source>Journal of Molecular Evolution</source>, <volume>90</volume>, <fpage>149</fpage>–<lpage>165</lpage>. <pub-id pub-id-type="doi">10.1007/S00239-022-10048-2/TABLES/4</pub-id>
<pub-id pub-id-type="pmid">35165762</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0041">
      <mixed-citation publication-type="journal" id="ece310873-cit-0041"><string-name><surname>Naafs</surname>, <given-names>B. D. A.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Monteiro</surname>, <given-names>F. M.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>The occurrence of 2‐methylhopanoids in modern bacteria and the geological record</article-title>. <source>Geobiology</source>, <volume>20</volume>, <fpage>41</fpage>–<lpage>59</lpage>. <pub-id pub-id-type="doi">10.1111/GBI.12465</pub-id>
<pub-id pub-id-type="pmid">34291867</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0042">
      <mixed-citation publication-type="journal" id="ece310873-cit-0042"><string-name><surname>Ostell</surname>, <given-names>J. M.</given-names></string-name> (<year>1995</year>). <article-title>Integrated access to heterogeneous data from NCBI</article-title>. <source>IEEE Engineering in Medicine and Biology Magazine</source>, <volume>14</volume>, <fpage>730</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1109/51.473267</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0043">
      <mixed-citation publication-type="journal" id="ece310873-cit-0043"><string-name><surname>Paradis</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Claude</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Strimmer</surname>, <given-names>K.</given-names></string-name> (<year>2004</year>). <article-title>APE: Analyses of Phylogenetics and evolution in R language</article-title>. <source>Bioinformatics</source>, <volume>20</volume>, <fpage>289</fpage>–<lpage>290</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg412</pub-id>
<pub-id pub-id-type="pmid">14734327</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0044">
      <mixed-citation publication-type="journal" id="ece310873-cit-0044"><string-name><surname>Parks</surname>, <given-names>D. H.</given-names></string-name>, <string-name><surname>Chuvochina</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Rinke</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Mussig</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Chaumeil</surname>, <given-names>P. A.</given-names></string-name>, &amp; <string-name><surname>Hugenholtz</surname>, <given-names>P.</given-names></string-name> (<year>2022</year>). <article-title>GTDB: An ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome‐based taxonomy</article-title>. <source>Nucleic Acids Research</source>, <volume>50</volume>, <fpage>D785</fpage>–<lpage>D794</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB776</pub-id>
<pub-id pub-id-type="pmid">34520557</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0045">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0045"><string-name><surname>Pohlmann</surname>, <given-names>R.</given-names></string-name> (<year>2016</year>). <article-title>Killifische Info</article-title>. <ext-link xlink:href="https://www.killifische.info/" ext-link-type="uri">https://www.killifische.info/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0046">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0046"><collab collab-type="authors">Python Software Foundation</collab>
. (<year>2003</year>). <article-title>PyPI The Python Package Index</article-title>. <ext-link xlink:href="https://pypi.org/" ext-link-type="uri">https://pypi.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0047">
      <mixed-citation publication-type="journal" id="ece310873-cit-0047"><string-name><surname>Rabosky</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Chang</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Title</surname>, <given-names>P. O.</given-names></string-name>, <string-name><surname>Cowman</surname>, <given-names>P. F.</given-names></string-name>, <string-name><surname>Sallan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Friedman</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Kaschner</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Garilao</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Near</surname>, <given-names>T. J.</given-names></string-name>, <string-name><surname>Coll</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Alfaro</surname>, <given-names>M. E.</given-names></string-name> (<year>2018</year>). <article-title>An inverse latitudinal gradient in speciation rate for marine fishes</article-title>. <source>Nature</source>, <volume>559</volume>, <fpage>392</fpage>–<lpage>395</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-018-0273-1</pub-id>
<pub-id pub-id-type="pmid">29973726</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0048">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0048"><string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>FigTree v1.4.4</article-title>. <ext-link xlink:href="https://github.com/rambaut/figtree" ext-link-type="uri">https://github.com/rambaut/figtree</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0049">
      <mixed-citation publication-type="journal" id="ece310873-cit-0049"><string-name><surname>Revell</surname>, <given-names>L. J.</given-names></string-name> (<year>2012</year>). <article-title>Phytools: An R package for phylogenetic comparative biology (and other things)</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>3</volume>, <fpage>217</fpage>–<lpage>223</lpage>. <pub-id pub-id-type="doi">10.1111/j.2041-210X.2011.00169.x</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0050">
      <mixed-citation publication-type="journal" id="ece310873-cit-0050"><string-name><surname>Rivest</surname>, <given-names>R. L.</given-names></string-name>, <string-name><surname>Shamir</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Adleman</surname>, <given-names>L.</given-names></string-name> (<year>1978</year>). <article-title>A method for obtaining digital signatures and public‐key cryptosystems</article-title>. <source>Communications of the ACM</source>, <volume>21</volume>, <fpage>120</fpage>–<lpage>126</lpage>. <pub-id pub-id-type="doi">10.1145/359340.359342</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0051">
      <mixed-citation publication-type="journal" id="ece310873-cit-0051"><string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name> (<year>2003</year>). <article-title>MrBayes 3: Bayesian phylogenetic inference under mixed models</article-title>. <source>Bioinformatics</source>, <volume>19</volume>, <fpage>1572</fpage>–<lpage>1574</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg180</pub-id>
<pub-id pub-id-type="pmid">12912839</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0052">
      <mixed-citation publication-type="journal" id="ece310873-cit-0052"><string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Wilson</surname>, <given-names>J. D.</given-names></string-name>, &amp; <string-name><surname>Knoll</surname>, <given-names>A. H.</given-names></string-name> (<year>2022</year>). <article-title>Cyanobacteria and biogeochemical cycles through earth history</article-title>. <source>Trends in Microbiology</source>, <volume>30</volume>, <fpage>143</fpage>–<lpage>157</lpage>. <pub-id pub-id-type="doi">10.1016/J.TIM.2021.05.008</pub-id>
<pub-id pub-id-type="pmid">34229911</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0053">
      <mixed-citation publication-type="journal" id="ece310873-cit-0053"><string-name><surname>Sasoni</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Hartman</surname>, <given-names>M. D.</given-names></string-name>, <string-name><surname>García‐Effron</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Guerrero</surname>, <given-names>S. A.</given-names></string-name>, <string-name><surname>Iglesias</surname>, <given-names>A. A.</given-names></string-name>, &amp; <string-name><surname>Arias</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>Functional characterization of monothiol and dithiol glutaredoxins from <italic toggle="yes">Leptospira interrogans</italic>
</article-title>. <source>Biochimie</source>, <volume>197</volume>, <fpage>144</fpage>–<lpage>159</lpage>. <pub-id pub-id-type="doi">10.1016/J.BIOCHI.2022.02.006</pub-id>
<pub-id pub-id-type="pmid">35217125</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0054">
      <mixed-citation publication-type="journal" id="ece310873-cit-0054"><string-name><surname>Schoch</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Ciufo</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Domrachev</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Hotton</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Kannan</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Khovanskaya</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Leipe</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Mcveigh</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>O'Neill</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Robbertse</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Sharma</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Soussov</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sullivan</surname>, <given-names>J. P.</given-names></string-name>, <string-name><surname>Sun</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Turner</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Karsch‐Mizrachi</surname>, <given-names>I.</given-names></string-name> (<year>2020</year>). <article-title>NCBI taxonomy: A comprehensive update on curation, resources and tools</article-title>. <source>Database</source>, <volume>2020</volume>, <fpage>baaa062</fpage>. <pub-id pub-id-type="doi">10.1093/DATABASE/BAAA062</pub-id>
<pub-id pub-id-type="pmid">32761142</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0055">
      <mixed-citation publication-type="journal" id="ece310873-cit-0055"><string-name><surname>Smith</surname>, <given-names>S. A.</given-names></string-name>, &amp; <string-name><surname>Brown</surname>, <given-names>J. W.</given-names></string-name> (<year>2018</year>). <article-title>Constructing a broadly inclusive seed plant phylogeny</article-title>. <source>American Journal of Botany</source>, <volume>105</volume>, <fpage>302</fpage>–<lpage>314</lpage>. <pub-id pub-id-type="doi">10.1002/AJB2.1019</pub-id>
<pub-id pub-id-type="pmid">29746720</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0056">
      <mixed-citation publication-type="journal" id="ece310873-cit-0056"><string-name><surname>Sobol</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Chakraborty</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Martin</surname>, <given-names>G. B.</given-names></string-name>, &amp; <string-name><surname>Sessa</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>The emerging role of PP2C phosphatases in tomato immunity</article-title>. <source>Molecular Plant‐Microbe Interactions</source>, <volume>35</volume>, <fpage>737</fpage>–<lpage>747</lpage>. <pub-id pub-id-type="doi">10.1094/MPMI-02-22-0037-CR/ASSET/IMAGES/LARGE/MPMI-02-22-0037-CRF3.JPEG</pub-id>
<pub-id pub-id-type="pmid">35696659</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0057">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0057"><string-name><surname>Stein</surname>, <given-names>J.</given-names></string-name> (<year>2017</year>). <article-title>NO_COLOR: disabling ANSI color output by default</article-title>. <ext-link xlink:href="https://no-color.org/" ext-link-type="uri">https://no‐color.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0058">
      <mixed-citation publication-type="journal" id="ece310873-cit-0058"><string-name><surname>Suchard</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Lemey</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Baele</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ayres</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Drummond</surname>, <given-names>A. J.</given-names></string-name>, &amp; <string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>Bayesian phylogenetic and phylodynamic data integration using BEAST 1.10</article-title>. <source>Virus Evolution</source>, <volume>4</volume>, <fpage>vey016</fpage>. <pub-id pub-id-type="doi">10.1093/ve/vey016</pub-id>
<pub-id pub-id-type="pmid">29942656</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0059">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0059"><string-name><surname>Torres</surname>, <given-names>H.</given-names></string-name> (<year>2010</year>). <article-title>File:Poecilia sphenops.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0060">
      <mixed-citation publication-type="journal" id="ece310873-cit-0060"><string-name><surname>Upham</surname>, <given-names>N. S.</given-names></string-name>, <string-name><surname>Esselstyn</surname>, <given-names>J. A.</given-names></string-name>, &amp; <string-name><surname>Jetz</surname>, <given-names>W.</given-names></string-name> (<year>2019</year>). <article-title>Inferring the mammal tree: Species‐level sets of phylogenies for questions in ecology, evolution, and conservation</article-title>. <source>PLoS Biology</source>, <volume>17</volume>, <elocation-id>e3000494</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PBIO.3000494</pub-id>
<pub-id pub-id-type="pmid">31800571</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0061">
      <mixed-citation publication-type="journal" id="ece310873-cit-0061"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, <string-name><surname>Boekhout</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Theelen</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Dijksterhuis</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name>, &amp; <string-name><surname>Seifert</surname>, <given-names>K. A.</given-names></string-name> (<year>2023</year>). <article-title>Da Vinci's yeast: <italic toggle="yes">Blastobotrys davincii</italic> f.a., sp. nov</article-title>. <source>Yeast</source>, <volume>40</volume>, <fpage>7</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1002/YEA.3816</pub-id>
<pub-id pub-id-type="pmid">36168284</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0062">
      <mixed-citation publication-type="journal" id="ece310873-cit-0062"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, &amp; <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name> (<year>2023</year>). <article-title>Along the footpath of Penicillium discovery: Six new species from the Woodville big tree Forest Trail</article-title>. <source>Mycologia</source>, <volume>115</volume>, <fpage>87</fpage>–<lpage>106</lpage>. <pub-id pub-id-type="doi">10.1080/00275514.2022.2135915</pub-id>
<pub-id pub-id-type="pmid">36441981</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0063">
      <mixed-citation publication-type="book" id="ece310873-cit-0063"><string-name><surname>Wickham</surname>, <given-names>H.</given-names></string-name> (<year>2016</year>). <source>ggplot2: Elegant graphics for data analysis</source>. <publisher-name>Springer‐Verlag</publisher-name>. <pub-id pub-id-type="doi">10.1007/978-3-319-24277-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0064">
      <mixed-citation publication-type="journal" id="ece310873-cit-0064"><string-name><surname>Wu</surname>, <given-names>C.</given-names></string-name>, &amp; <string-name><surname>Guo</surname>, <given-names>D.</given-names></string-name> (<year>2022</year>). <article-title>Computational docking reveals co‐evolution of C4 carbon delivery enzymes in diverse plants</article-title>. <source>International Journal of Molecular Sciences</source>, <volume>23</volume>, <elocation-id>12688</elocation-id>. <pub-id pub-id-type="doi">10.3390/IJMS232012688/S1</pub-id>
<pub-id pub-id-type="pmid">36293547</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0065">
      <mixed-citation publication-type="journal" id="ece310873-cit-0065"><string-name><surname>Xu</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Luo</surname>, <given-names>X.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Zhan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Dai</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>Ggtree: A serialized data object for visualization of a phylogenetic tree and annotation data</article-title>. <source>iMeta</source>, <volume>1</volume>, <elocation-id>e56</elocation-id>. <pub-id pub-id-type="doi">10.1002/IMT2.56</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0066">
      <mixed-citation publication-type="journal" id="ece310873-cit-0066"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2020</year>). <article-title>Using ggtree to visualize data on tree‐like structures</article-title>. <source>Current Protocols in Bioinformatics</source>, <volume>69</volume>, <elocation-id>e96</elocation-id>. <pub-id pub-id-type="doi">10.1002/CPBI.96</pub-id>
<pub-id pub-id-type="pmid">32162851</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0067">
      <mixed-citation publication-type="book" id="ece310873-cit-0067"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <source>Data integration, manipulation and visualization of phylogenetic trees</source> (<edition designator="1">1</edition>st ed., pp. <fpage>71</fpage>–<lpage>158</lpage>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9781003279242</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0068">
      <mixed-citation publication-type="journal" id="ece310873-cit-0068"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, &amp; <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name> (<year>2018</year>). <article-title>Two methods for mapping and visualizing associated data on phylogeny using Ggtree</article-title>. <source>Molecular Biology and Evolution</source>, <volume>35</volume>, <fpage>3041</fpage>–<lpage>3043</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSY194</pub-id>
<pub-id pub-id-type="pmid">30351396</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0069">
      <mixed-citation publication-type="journal" id="ece310873-cit-0069"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Smith</surname>, <given-names>D. K.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name> (<year>2017</year>). <article-title>Ggtree: An r package for visualization and annotation of phylogenetic trees with their covariates and other associated data</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>8</volume>, <fpage>28</fpage>–<lpage>36</lpage>. <pub-id pub-id-type="doi">10.1111/2041-210X.12628</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD with OASIS Tables with MathML3 v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archive-oasis-article1-mathml3.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats-oasis2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Ecol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Ecol Evol</journal-id>
    <journal-id journal-id-type="doi">10.1002/(ISSN)2045-7758</journal-id>
    <journal-id journal-id-type="publisher-id">ECE3</journal-id>
    <journal-title-group>
      <journal-title>Ecology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-7758</issn>
    <publisher>
      <publisher-name>John Wiley and Sons Inc.</publisher-name>
      <publisher-loc>Hoboken</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10834882</article-id>
    <article-id pub-id-type="doi">10.1002/ece3.10873</article-id>
    <article-id pub-id-type="publisher-id">ECE310873</article-id>
    <article-id pub-id-type="other">ECE-2023-11-01976</article-id>
    <article-categories>
      <subj-group subj-group-type="article-subject-classification">
        <subject>Phylogenetics</subject>
      </subj-group>
      <subj-group subj-group-type="overline">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Research Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>
      <alt-title alt-title-type="left-running-head">Bianchini and Sánchez‐Baracaldo</alt-title>
    </title-group>
    <contrib-group>
      <contrib id="ece310873-cr-0001" contrib-type="author" corresp="yes">
        <name>
          <surname>Bianchini</surname>
          <given-names>Giorgio</given-names>
        </name>
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0223-0339</contrib-id>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
        <address>
          <email>giorgio.bianchini@bristol.ac.uk</email>
        </address>
      </contrib>
      <contrib id="ece310873-cr-0002" contrib-type="author">
        <name>
          <surname>Sánchez‐Baracaldo</surname>
          <given-names>Patricia</given-names>
        </name>
        <xref rid="ece310873-aff-0001" ref-type="aff">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="ece310873-aff-0001">
      <label>
        <sup>1</sup>
      </label>
      <named-content content-type="organisation-division">School of Geographical Sciences</named-content>
      <institution>University of Bristol</institution>
      <city>Bristol</city>
      <country country="GB">UK</country>
    </aff>
    <author-notes>
      <corresp id="correspondenceTo"><label>*</label><bold>Correspondence</bold><break/>
Giorgio Bianchini, School of Geographical Sciences, University of Bristol, University Road, Bristol, BS8 1SS, UK.<break/>
Email: <email>giorgio.bianchini@bristol.ac.uk</email>
<break/>
</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>01</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>14</volume>
    <issue seq="330">2</issue>
    <issue-id pub-id-type="doi">10.1002/ece3.v14.2</issue-id>
    <elocation-id>e10873</elocation-id>
    <history>
      <date date-type="received">
        <day>08</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>04</day>
        <month>12</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <!--&#x000a9; 2024 Published by John Wiley & Sons Ltd.-->
      <copyright-statement content-type="article-copyright">© 2024 The Authors. <italic toggle="yes">Ecology and Evolution</italic> published by John Wiley &amp; Sons Ltd.</copyright-statement>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link> License, which permits use, distribution and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="file:ECE3-14-e10873.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Phylogenetic trees illustrate evolutionary relationships between taxa or genes. Tree figures are crucial when presenting results and data, and by creating clear and effective plots, researchers can describe many kinds of evolutionary patterns. However, producing tree plots can be a time‐consuming task, especially as multiple different programs are often needed to adjust and illustrate all data associated with a tree. We present TreeViewer, a new software to draw phylogenetic trees. TreeViewer is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. Every feature of the program is documented and easily accessible, either in the online manual or within the program's interface. We show how TreeViewer can be used to produce publication‐ready figures, saving time by not requiring additional graphical post‐processing tools. TreeViewer is freely available for Windows, macOS, and Linux operating systems and distributed under an AGPLv3 licence from <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>. It has a graphical user interface (GUI), as well as a command‐line interface, which is useful to work with very large trees and for automated pipelines. A detailed user manual with examples and tutorials is also available. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool. Compared to other GUI tools, TreeViewer offers a richer feature set and a finer degree of customisation. Compared to command‐line‐based tools and software libraries, TreeViewer's graphical interface is more accessible. The flexibility of TreeViewer's approach to phylogenetic tree plotting enables the program to produce a wide variety of publication‐ready figures. Users are encouraged to create their own custom modules to expand the functionalities of the program. This sets the scene for an ever‐expanding and ever‐adapting software framework that can easily adjust to respond to new challenges.</p>
    </abstract>
    <abstract abstract-type="graphical">
      <p>TreeViewer is a new software to draw phylogenetic trees that is flexible, modular, and user‐friendly. Plots are produced as the result of a user‐defined pipeline, which can be finely customised and easily applied to different trees. TreeViewer is mainly aimed at users wishing to produce highly customised, publication‐quality tree figures using a single GUI software tool and is released under an AGPLv3 licence for Windows, Linux, and macOS operating systems.<boxed-text position="anchor" content-type="graphic" id="ece310873-blkfxd-0001"><graphic xlink:href="ECE3-14-e10873-g001.jpg" position="anchor" id="jats-graphic-1"/></boxed-text>
</p>
    </abstract>
    <kwd-group kwd-group-type="author-generated">
      <kwd id="ece310873-kwd-0001">figures</kwd>
      <kwd id="ece310873-kwd-0002">graphical interface</kwd>
      <kwd id="ece310873-kwd-0003">Newick</kwd>
      <kwd id="ece310873-kwd-0004">NEXUS</kwd>
      <kwd id="ece310873-kwd-0005">phylogenetic trees</kwd>
      <kwd id="ece310873-kwd-0006">phylogenetics</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="funding-0001">
        <funding-source>
          <institution-wrap>
            <institution>University of Bristol
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000883</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group id="funding-0002">
        <funding-source>
          <institution-wrap>
            <institution>Royal Society
</institution>
            <institution-id institution-id-type="doi">10.13039/501100000288</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <fig-count count="8"/>
      <table-count count="3"/>
      <page-count count="16"/>
      <word-count count="9179"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>source-schema-version-number</meta-name>
        <meta-value>2.0</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>cover-date</meta-name>
        <meta-value>February 2024</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>details-of-publishers-convertor</meta-name>
        <meta-value>Converter:WILEY_ML3GV2_TO_JATSPMC version:6.3.6 mode:remove_FC converted:01.02.2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <p content-type="self-citation">
      <mixed-citation publication-type="journal" id="ECE310873-cit-2001"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2024</year>). <article-title><styled-content style="fixed-case" toggle="no">TreeViewer</styled-content>: Flexible, modular software to visualise and manipulate phylogenetic trees</article-title>. <source>Ecology and Evolution</source>, <volume>14</volume>, <elocation-id>e10873</elocation-id>. <pub-id pub-id-type="doi">10.1002/ece3.10873</pub-id>
</mixed-citation>
    </p>
  </notes>
</front>
<body id="ece310873-body-0001">
  <sec sec-type="background" id="ece310873-sec-0001">
    <label>1</label>
    <title>BACKGROUND</title>
    <p>TreeViewer is a flexible and user‐friendly multiplatform software for bioinformaticians and evolutionary biologists. TreeViewer helps users to visualise phylogenetic trees with the option of displaying additional data (e.g., sequence alignments and character states) enabling them to identify novel evolutionary patterns. Complex phylogenetic tree plots can be produced by customising pipelines depending on the user's needs. These pipelines can later be reused or adapted to other projects, optimising the user's time. TreeViewer is designed with the aim of producing high‐quality publication figures and also provides a command‐line interface that can be used to work with large‐scale trees and/or to automatically produce plots as part of a script pipeline.</p>
    <p>Tree plots produced by the program are the result of the concerted action of multiple “modules” (similar to the structure of Mesquite (Maddison &amp; Maddison, <xref rid="ece310873-bib-0036" ref-type="bibr">2023</xref>)). There are currently nine different types of modules available in TreeViewer (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). Users can choose from these modules and arrange them depending on their needs, therefore customising every step of the workflow. Furthermore, this modular design means that changes to the settings of an individual module are independent of the rest of the chosen modules. As a result, changes made to a tree can be easily undone by disabling the module that is responsible for them.</p>
    <table-wrap position="float" id="ece310873-tbl-0001" content-type="TABLE">
      <label>TABLE 1</label>
      <caption>
        <p>Types of modules available in TreeViewer. The table shows the task accomplished by each module, as well as an example of each type of module.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Module type</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Task</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Example</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">File type</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Opens and interprets the contents of a tree file in a particular format</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Newick” module adds support for tree files in Newick format</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Load file</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Loads the contents of a tree file, making them available for TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Memory loader” module loads the trees in memory</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Transformer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Transforms the trees contained in a tree file, producing a single tree that can be further processed</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Consensus” module computes a consensus tree out of the trees contained in the file</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Further transformation</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs additional transformations on the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Reroot tree” module re‐roots the tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Coordinates</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Computes the coordinates of the tree nodes in the plot</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rectangular” module computes the coordinates for a tree in a rectangular style</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Plot action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Plots an element of the tree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Branches” module plots the tree branches</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs a generic action, which can involve activating or de‐activating some modules</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Rooted tree style” module changes the current <italic toggle="yes">Coordinates</italic> module and activates <italic toggle="yes">Plot action</italic> modules in order to plot the tree as a rectangular rooted tree</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Selection action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Performs an action on the selected node</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Collapse selection” module collapses the selected node (by activating the “Collapse node” <italic toggle="yes">Further transformation</italic> module)</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Menu action</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Adds an item to the menus in the main window</td>
            <td align="left" valign="top" rowspan="1" colspan="1">The “Export” module adds an option to export the plot as a PDF document or an SVG, PNG, or TIFF image</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Plots created with TreeViewer are intrinsically <italic toggle="yes">reproducible</italic>. In addition to saving the final plot as a publication‐ready figure, users can choose to keep track of the whole pipeline that was involved in producing the plot starting from a phylogenetic tree file. This means that if a small change is needed somewhere along the pipeline, it can be applied in‐place, without having to repeat all the steps that were involved in creating the initial plot (e.g., selecting the colour for the branches and collapsing some nodes). Furthermore, it is possible to apply the same pipeline to a different tree. Users can, therefore, create their own “plot style” and readily apply it to different datasets, performing only minimal dataset‐specific adjustments. For example, a phylogenetic tree plot could be created using provisional data while a long analysis is running and then updated when the final tree becomes available, thus increasing the potential for multitasking.</p>
    <p>Users can also create new modules in TreeViewer. A curated online repository of modules (Bianchini, <xref rid="ece310873-bib-0004" ref-type="bibr">2021a</xref>) keeps users informed as to when new modules are released and/or a module is modified. The lightweight development environment integrated into TreeViewer enables advanced users to create modules that are tailored to their particular needs. These can later be shared with other users by uploading them to the TreeViewer module repository.</p>
    <p>TreeViewer is mainly a graphical program, in which users can interact with the phylogenetic tree plot by resizing it, selecting individual nodes, and performing context‐specific actions (e.g., pruning a node or collapsing it). In the era of big data (Marx, <xref rid="ece310873-bib-0037" ref-type="bibr">2013</xref>), it is nowadays common to have phylogenetic trees involving tens or hundreds of thousands of taxa (e.g., Hug et al., <xref rid="ece310873-bib-0025" ref-type="bibr">2016</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>; Smith &amp; Brown, <xref rid="ece310873-bib-0055" ref-type="bibr">2018</xref>; Upham et al., <xref rid="ece310873-bib-0060" ref-type="bibr">2019</xref>); this is a major challenge that makes working with large‐scale trees impractical and time‐consuming. TreeViewer has been designed with these issues in mind, and it provides a lightweight command‐line interface that can be used to manipulate and plot the trees either interactively or as part of an automated script pipeline.</p>
    <p>A number of examples and tutorials make it possible for users to easily gain confidence with the program and learn to use all of its features. These are available in the online documentation (Bianchini, <xref rid="ece310873-bib-0005" ref-type="bibr">2021b</xref>) and describe a large variety of different plots, some of which are shown in Figure <xref rid="ece310873-fig-0001" ref-type="fig">1</xref>. Plots created using TreeViewer have been included in recent publications (Anderegg et al., <xref rid="ece310873-bib-0001" ref-type="bibr">2022</xref>; Beach et al., <xref rid="ece310873-bib-0003" ref-type="bibr">2022</xref>; Gyimesi &amp; Hediger, <xref rid="ece310873-bib-0020" ref-type="bibr">2022</xref>; Iwata et al., <xref rid="ece310873-bib-0026" ref-type="bibr">2023</xref>; Klau et al., <xref rid="ece310873-bib-0028" ref-type="bibr">2022</xref>; Moreira et al., <xref rid="ece310873-bib-0040" ref-type="bibr">2022</xref>; Naafs et al., <xref rid="ece310873-bib-0041" ref-type="bibr">2021</xref>; Sánchez‐Baracaldo et al., <xref rid="ece310873-bib-0052" ref-type="bibr">2022</xref>; Sasoni et al., <xref rid="ece310873-bib-0053" ref-type="bibr">2022</xref>; Sobol et al., <xref rid="ece310873-bib-0056" ref-type="bibr">2022</xref>; Visagie et al., <xref rid="ece310873-bib-0061" ref-type="bibr">2023</xref>; Visagie &amp; Yilmaz, <xref rid="ece310873-bib-0062" ref-type="bibr">2023</xref>; Wu &amp; Guo, <xref rid="ece310873-bib-0064" ref-type="bibr">2022</xref>).</p>
    <fig position="float" fig-type="FIGURE" id="ece310873-fig-0001">
      <label>FIGURE 1</label>
      <caption>
        <p>Examples of trees created using TreeViewer. (a) An unrooted tree showing the results of a BLAST (Camacho et al., <xref rid="ece310873-bib-0013" ref-type="bibr">2009</xref>) search. The branch colour displays the BLAST score of each hit, and orange stars highlight the “true orthologs” of the query sequence, which is denoted by the blue star. (b) A circular tree showing the presence or absence in various bacterial strains of photosynthetic reaction centres and of the <italic toggle="yes">norV</italic> and <italic toggle="yes">hmpA</italic> genes. (c) A time‐calibrated tree of cyprinodontiform fishes. The tree includes an image for each species. Fish families are also highlighted. The phylogeny is adapted from (Rabosky et al., <xref rid="ece310873-bib-0047" ref-type="bibr">2018</xref>). The images for <italic toggle="yes">P. reticulata</italic> and <italic toggle="yes">P. sphenops</italic> are adapted from original photographs (Eisfeld, <xref rid="ece310873-bib-0016" ref-type="bibr">2016</xref>; Torres, <xref rid="ece310873-bib-0059" ref-type="bibr">2010</xref>), while all the other images are adapted with permission from original photographs by R. Pohlmann (Pohlmann, <xref rid="ece310873-bib-0045" ref-type="bibr">2016</xref>). All figures were created exclusively using TreeViewer; no other external graphics editing software was used. Instructions detailing how to create these plots (and more) are available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
      </caption>
      <graphic xlink:href="ECE3-14-e10873-g007" position="anchor" id="jats-graphic-3"/>
    </fig>
  </sec>
  <sec id="ece310873-sec-0002">
    <label>2</label>
    <title>IMPLEMENTATION</title>
    <p>TreeViewer is written using the C# programming language, running under the .NET 7 runtime. Executables are available for computers running Windows and Linux on x64 processors (e.g., Intel or AMD processors) and for macOS computers running on x64 (Intel) or arm64 (Apple Silicon) processors. As ARM‐based Windows and Linux computers become more widely adopted, arm64 versions of the program for these operating systems will be provided.</p>
    <p>TreeViewer is an open‐source software, released under the GNU AGPLv3 licence (Free Software Foundation, <xref rid="ece310873-bib-0019" ref-type="bibr">2007</xref>). In addition to the base libraries included in the .NET runtime, the program relies on a number of open‐source libraries to perform various tasks (e.g., drawing graphics, providing a GUI, computing statistics, and manipulating phylogenetic trees). The full list of libraries used by TreeViewer, along with licensing information, is available in the licence agreement that is displayed when installing the program.</p>
    <sec id="ece310873-sec-0003">
      <label>2.1</label>
      <title>User interface</title>
      <p>TreeViewer provides a user‐friendly graphical user interface (GUI, Figure <xref rid="ece310873-fig-0002" ref-type="fig">2</xref>). The user interface (UI) design was inspired both from other popular software to draw phylogenetic trees (e.g., FigTree; Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) and from commonly used office suite software (e.g., Microsoft Office). A consistent UI across all supported platforms is achieved by using the Avalonia UI framework (AvaloniaUI Organization, <xref rid="ece310873-bib-0002" ref-type="bibr">2013</xref>); this makes it possible for the main UI elements to always have the same appearance, while platform‐specific dialogs are used where appropriate (e.g., in file dialogs).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0002">
        <label>FIGURE 2</label>
        <caption>
          <p>Main user interface of TreeViewer. (a) The tree plot is shown in the main part of the window. (b) Above the tree plot, a toolbar contains buttons to perform actions on the plot. (c) On the left of the tree plot, a panel shows the modules that are currently enabled, along with their settings. The blue question mark button next to each module directly opens the manual for that module. (d) The status bar at the bottom of the interface contains general information about the tree, as well as controls to determine the zoom level of the interface.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g003" position="anchor" id="jats-graphic-5"/>
      </fig>
      <p>The interface of TreeViewer is used to explicitly describe the process that goes from a tree file to a finished tree plot (Figure <xref rid="ece310873-fig-0003" ref-type="fig">3</xref>) in a series of discrete steps. The initial step in producing a plot is reading a tree file from the hard disk. This involves opening the file, determining its format, and choosing the most appropriate module to read it. These actions are performed by a <italic toggle="yes">File type</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>). The program can automatically choose the best module for each file, but users can also decide to manually specify the module they want to use, in case multiple modules are able to read the same file type. The <italic toggle="yes">File type</italic> modules that are currently available enable TreeViewer to open tree files in formats such as Newick (Felsenstein, <xref rid="ece310873-bib-0017" ref-type="bibr">1986</xref>), NEXUS (Maddison et al., <xref rid="ece310873-bib-0035" ref-type="bibr">1997</xref>), NCBI ASN.1 (Ostell, <xref rid="ece310873-bib-0042" ref-type="bibr">1995</xref>), and a novel binary tree format (Bianchini, <xref rid="ece310873-bib-0009" ref-type="bibr">2023a</xref>). TreeViewer then determines the best strategy to load in memory the tree file that has been read. This action is performed by a <italic toggle="yes">Load file</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>), which can be used, for example, to copy the contents of the entire file into the system's memory (for smaller files) or to read just one tree at a time from the file as necessary (for larger files containing many trees).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0003">
        <label>FIGURE 3</label>
        <caption>
          <p>TreeViewer workflow to create tree plots. First of all, the program reads a tree file containing one or more trees using a <italic toggle="yes">File type</italic> and a <italic toggle="yes">Load file</italic> module. The tree(s) are then transformed using a <italic toggle="yes">Transformer</italic> module and, if necessary, one or more <italic toggle="yes">Further transformation</italic> modules. The final transformed tree is then plotted using a <italic toggle="yes">Coordinates</italic> module and one or more <italic toggle="yes">Plot action</italic> modules.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g002" position="anchor" id="jats-graphic-7"/>
      </fig>
      <p>Once a tree file has been read, TreeViewer has access to a list containing one or more phylogenetic trees, depending on how many were present in the tree file. If the file contains multiple trees, the next step is to produce a single tree that will then be subsequently plotted. This step is performed by a <italic toggle="yes">Transformer</italic> module (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) and can involve, for example, computing a consensus tree or just choosing a single tree out of the ones that are in the file. Before plotting, the tree produced by the <italic toggle="yes">Transformer</italic> module (i.e., the “First transformed tree”) can also be further modified by one or more <italic toggle="yes">Further transformation</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules; these modules perform actions such as re‐rooting the tree, collapsing nodes, and rotating them. Once all the <italic toggle="yes">Further transformation</italic> modules have acted, a “Final transformed tree” is produced, which is the tree that is plotted in the subsequent steps.</p>
      <p>In order to plot a tree, the next step is determining the coordinates of the nodes in the tree, that is, at which position in the plot each branch will start and end. This step is performed by a <italic toggle="yes">Coordinates</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) module, which determines, for example, whether the tree appears as an unrooted tree or as a rectangular tree. Finally, this set of coordinates is used by <italic toggle="yes">Plot action</italic> (Table <xref rid="ece310873-tbl-0001" ref-type="table">1</xref>) modules to create the phylogenetic tree plot. Each module contributes to the plot with a single feature, such as the branches of the tree, the labels for the tip nodes, or a scale bar.</p>
      <p>The final tree plot is the result of the action of all these modules. It can be viewed and manipulated in the graphical interface of TreeViewer, which allows users to click on branches to select them, display their attributes, and perform actions on them; plots can also be exported as publication‐ready PDF, SVG, PNG, or TIFF files.</p>
    </sec>
    <sec id="ece310873-sec-0004">
      <label>2.2</label>
      <title>Command‐line interface</title>
      <p>In addition to the GUI, TreeViewer provides a command‐line interface (CLI, Figure <xref rid="ece310873-fig-0004" ref-type="fig">4</xref>). The TreeViewer CLI has two main use cases: the first one is to create plots for very large trees (e.g., &gt;100,000 taxa) that may be impractical to handle using the GUI, and the second one is to be included in phylogenetic analysis pipelines. From the TreeViewer CLI, it is possible to export renderings of the tree plots (e.g., in PDF or SVG format), as well as to save tree files that contain module information. These files can then be opened with the TreeViewer GUI (e.g., to inspect attribute values at some branches in the tree or to collapse/expand nodes).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0004">
        <label>FIGURE 4</label>
        <caption>
          <p>TreeViewer command‐line interface. (a) List of currently enabled modules. (b) List of options and current values for the <italic toggle="yes">Labels</italic> module. Colours are used to help users navigate the interface, distinguishing between the parameter index (yellow), the name of the parameter (white), and its value (blue). If required, the colours can be easily disabled, as TreeViewer follows the NO_COLOR standard (Stein, <xref rid="ece310873-bib-0057" ref-type="bibr">2017</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g008" position="anchor" id="jats-graphic-9"/>
      </fig>
      <p>Interacting with the TreeViewer CLI is similar to interacting with the TreeViewer GUI: for example, the modules that are currently enabled can be listed, their current parameters viewed or modified, and nodes can be “selected.” The main difference is that the interaction happens through commands issued to the CLI, rather than through clicks on the GUI. The “help” command can be used to list all available commands, as well as to show more information about a particular command. Tab completion is available across the CLI, for command names, parameters, and file names (e.g., when opening or saving a file).</p>
      <p>For pipeline integration, the commands can be stored on a file and then fed to the standard input of the TreeViewer CLI. This can be used, for example, to create a template command file with placeholders for key parameters (e.g., the name of the file to open or the accession numbers of the outgroup taxa); the pipeline would then replace the placeholders with the actual values for a certain analysis and eventually feed the resulting command file to the TreeViewer CLI.</p>
    </sec>
    <sec id="ece310873-sec-0005">
      <label>2.3</label>
      <title>Modular structure</title>
      <p>The modular structure of the software is enabled by the self‐contained Roslyn .NET Compiler Platform (Microsoft Corporation, <xref rid="ece310873-bib-0039" ref-type="bibr">2015</xref>). Modules are distributed as compressed source code archives that also contain a digital signature and metadata about the module (e.g., the name of the author, the version of the module, and a short description). After the digital signature of a module has been verified (or the user has agreed to install a module with an unverified signature), the source code of the module is compiled by TreeViewer using the Roslyn application programming interface (API). The resulting compiled assembly is then stored on the user's disk and loaded automatically when the program is opened.</p>
      <p>This approach makes it possible to distribute identical module source files to users on any platform, because the appropriate platform‐specific artifacts are generated directly on the end‐user's machine. In principle, it is similar to the distribution systems used by many other extensible frameworks, such as R or Python packages (Hornik &amp; Leisch, <xref rid="ece310873-bib-0022" ref-type="bibr">1997</xref>; Python Software Foundation, <xref rid="ece310873-bib-0046" ref-type="bibr">2003</xref>). The “Module manager” and “Module repository” windows available within the software can be used to see which modules have been installed or are available, providing access to the source code and the documentation for each module. At the time of writing, 98 modules are available for TreeViewer, which perform various tasks.</p>
      <p>Source code compilation using the Roslyn API is not instantaneous, even though it normally does not take more than a few seconds, including the most complex modules. This time penalty is avoided by storing the compiled artifacts on the user's disk. However, once the source code has been compiled, its performance is undistinguishable from the performance of code included in the “native” TreeViewer assemblies. This allows TreeViewer to use runtime‐compiled code not only for modules, but also for many small and apparently trivial tasks.</p>
      <p>For example, consider the operation of displaying the value of a numerical attribute (e.g., the length of a branch) on the tree. In order to do this, it is necessary to convert the attribute value from a “number” (stored, e.g., as an IEEE 754 double‐precision binary floating‐point value (Floating‐Point Working Group, <xref rid="ece310873-bib-0018" ref-type="bibr">2019</xref>)) to a textual representation (e.g., “1.234”). This could be achieved in many ways. For example, users may want to show a certain number of decimal digits or significant digits; they may want to round it, truncate it towards 0, or truncate it away from zero; and they may want to show it in decimal notation or scientific notation. While some of these combinations are exposed through controls in the UI of the program, it would not be realistic to have a different button for every possibility. The <italic toggle="yes">Labels</italic> module of TreeViewer addresses this problem by exposing the source code of its “Attribute formatter,” that is, the piece of code that transforms an attribute value into a text string.</p>
      <p>The GUI (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5a</xref>) contains controls to automatically generate the source code for simple cases, but the code itself (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5b</xref>) can be fully customised by users according to their requirements. Furthermore, the integration between the software and the compiler makes it possible for code editor windows in TreeViewer to provide many features that make writing source code as user‐friendly as possible. These include syntax highlighting, semantic highlighting (where code tokens such as class and method names are highlighted based on their meaning), intelligent code completion with in‐line documentation (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5c</xref>), real‐time error checking (Figure <xref rid="ece310873-fig-0005" ref-type="fig">5d</xref>), and breakpoints (which can be used to inspect the state of the code and the value of local variables during its execution). This is achieved through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>).</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0005">
        <label>FIGURE 5</label>
        <caption>
          <p>Attribute formatter window. Attribute formatters are used to convert attribute values from one type to another. In the window shown, users can convert a numerical attribute into a text string. (a) Controls to automatically generate code for simple use cases. (b) User‐modifiable source code of the method used to convert the attribute value. (c) Intelligent code completion with in‐line documentation. (d) Real‐time error checking.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g006" position="anchor" id="jats-graphic-11"/>
      </fig>
      <p>This approach of including UI controls that automatically generate source code for simple use cases, while allowing users to manually fine‐tune the code, is ubiquitous throughout TreeViewer. Many modules use attribute formatters to convert between attribute types (Table <xref rid="ece310873-tbl-0002" ref-type="table">2</xref>), and they can all be customised with an interface similar to Figure <xref rid="ece310873-fig-0005" ref-type="fig">5</xref>. The downside of such an approach is that, when the module settings are included in files exported by TreeViewer, each tree file becomes essentially a small program. In principle, hostile parties could include malicious code in an attribute formatter or another customisable code item and use the tree file as an infection vector. To address this issue, tree files created by TreeViewer can be signed in the same way as module files are (see Section <xref rid="ece310873-sec-0007" ref-type="sec">2.5</xref>).</p>
      <table-wrap position="float" id="ece310873-tbl-0002" content-type="TABLE">
        <label>TABLE 2</label>
        <caption>
          <p>Attribute formatters. Attribute formatters are distinguished by the type of data they output. For each formatter type, the table shows the available input data types and the default conversions defined for each.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <col align="left" span="1"/>
          <thead valign="bottom">
            <tr style="border-bottom:solid 1px #000000">
              <th align="left" valign="bottom" rowspan="1" colspan="1">Attribute formatter type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Output type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Input attribute type</th>
              <th align="left" valign="bottom" rowspan="1" colspan="1">Default conversions</th>
            </tr>
          </thead>
          <tbody valign="top">
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">String attribute formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Round to a certain number of significant or decimal digits, remove values higher or lower than a certain threshold</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Number formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Attempt to parse the string</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Keep unchanged</td>
            </tr>
            <tr>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour formatter</td>
              <td align="left" rowspan="2" valign="top" colspan="1">Colour</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Text string</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Convert from a CSS‐style string (e.g., “red,” “#FF0000,” or “rgb(255, 0, 0)”)</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">Number</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Map the number to a colour on a gradient</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec id="ece310873-sec-0006">
      <label>2.4</label>
      <title>Module development</title>
      <p>New modules can be developed to extend the capabilities of TreeViewer. The TreeViewer documentation contains information about the internal API of the program, in order for developers to access and extend key features. For example, a new module could be developed to add support for a new tree file format or to add a particular graphical element to the plot. Modules can be shared with the community by creating a “pull request” on the TreeViewer GitHub repository.</p>
      <p>Software developers can leverage the lightweight development environment integrated within TreeViewer to help create new modules. Given basic knowledge of the C# programming language, the real‐time error correction and intelligent code completion features implemented through the CSharpEditor control (Bianchini, <xref rid="ece310873-bib-0010" ref-type="bibr">2023b</xref>) make it possible to code new modules efficiently. Breakpoints can be used to pause execution of the module at critical points, in order to inspect the flow of the program and the value of local variables.</p>
      <p>The recommended workflow when developing a new module for TreeViewer involves three steps. First, users are encouraged to use the <italic toggle="yes">Custom script</italic> modules to write an initial version of their source code. This allows quick prototyping of the source code, because the code is compiled and executed by TreeViewer at runtime, and fixing bugs or making changes does not require the program to be restarted. After an initial version of the new module has been developed, the second step is to use the “Module creator” function of TreeViewer to produce a full module prototype and test it. The “Module creator” supports the same code‐editing features as the custom script editors, but it makes it possible to create full‐fledged modules that are loaded by TreeViewer at startup. Thus, making changes to the code at this stage requires restarting the program, which is why we recommend polishing the code using the <italic toggle="yes">Custom script</italic> modules first. In the final step, module developers identify parameters used in the source code that should be modifiable by the user. These parameters should be exposed in the TreeViewer UI as described in the TreeViewer developer's guide (Bianchini, <xref rid="ece310873-bib-0006" ref-type="bibr">2021c</xref>), and a brief description for each parameter and for the module should be provided in the documentation comments; this will allow TreeViewer to automatically generate a manual for the new module.</p>
    </sec>
    <sec id="ece310873-sec-0007">
      <label>2.5</label>
      <title>Digital signatures</title>
      <p>The digital signature for a TreeViewer module is an RSA‐encrypted hash (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>) of the source code of the module, created and verified by TreeViewer using the SHA‐512 hashing algorithm (Dang, <xref rid="ece310873-bib-0015" ref-type="bibr">2015</xref>) and the RSASSA‐PKCS1‐v1_5 signature scheme (Jonsson &amp; Kaliski, <xref rid="ece310873-bib-0027" ref-type="bibr">2003</xref>). Briefly, this involves a key pair consisting of a “private” key and a “public” key. The private key is available only to the user who generated it, while the public key is distributed to other users. The signature is then created by computing a hash digest of the source code, which is then encrypted using the private key. Validating the signature involves decrypting it using the public key and comparing the resulting value to a newly computed hash of the source code. The two hashes will match only if the public key corresponds to the private key used for encryption and if the source code has not been altered. Therefore, both the identity of the author or distributor of the source code and the integrity of the source code are guaranteed (Rivest et al., <xref rid="ece310873-bib-0050" ref-type="bibr">1978</xref>).</p>
      <p>Public keys for modules released through the TreeViewer GitHub repository are included in the source code of the program; a user attempting to install a module with an invalid signature will be presented with a warning message and will have the option to install the module anyways or to abort. An invalid signature may occur either because the module has been signed using a private key, whose public key counterpart is not included in the TreeViewer source code, or because the source code has been (possibly maliciously) altered. Users are encouraged not to install modules with an invalid signature unless they understand why the signature check failed and trust the source of the module. TreeViewer has a command‐line option to generate an RSA key pair. Combined with the open‐source nature of the software, this potentially enables other developers to make changes to the set of trusted public keys and create versions (“forks”) of TreeViewer allowing the installation of modules from alternative repositories.</p>
      <p>Tree files containing source code are signed in a similar way. When the program is executed for the first time, a public/private key pair for the user is generated. The private key is then used to sign tree files, while the public key is also included in the file. The first time that user A opens a file that has been created by user B, a warning message is displayed, explaining that the tree file contains source code that could potentially be malicious. User A has then three options: the first option is to open the tree file discarding all the source code, thus reverting attribute formatters to the default settings; this may change the appearance of the plot. The second option is to allow loading the source code just once, while the final option is to “trust” the author of the file. This last option should be selected only when there is trust in both the author of the file and the integrity of the communication channel over which the file has been received (e.g., that there has not been a man‐in‐the‐middle or similar attack). In this case, the public key contained in the tree file will be stored in the user's cache, and if user A opens other files coming from user B, source code contained therein will automatically be trusted. This allows collaboration within groups without dialog boxes showing up every time a file is opened, while still allowing a certain degree of security for files coming externally. It should be noted that the signature can be used to assess the integrity of a file and the identity of its author only after the author's public signature has been stored in TreeViewer's key cache. In principle, it would also be possible to create an online repository of public keys and associated identities (verified, e.g., through an academic email address).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="ece310873-sec-0008">
    <label>3</label>
    <title>RESULTS</title>
    <p>Here, we present an example using TreeViewer to display age estimates on a time‐calibrated phylogenetic tree. Time‐calibrated trees can be obtained, for example, from a Bayesian molecular clock analysis using software such as MrBayes (Ronquist &amp; Huelsenbeck, <xref rid="ece310873-bib-0051" ref-type="bibr">2003</xref>), PhyloBayes (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), RevBayes (Höhna et al., <xref rid="ece310873-bib-0021" ref-type="bibr">2016</xref>), and BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). These can be used by TreeViewer to compute a consensus tree and to plot the age distribution for each node as a violin plot. Such plots visualise the posterior probabilities, and these are more informative than simple confidence interval bars; this is particularly useful in the case of asymmetric age distributions.</p>
    <sec id="ece310873-sec-0009">
      <label>3.1</label>
      <title>Consensus tree</title>
      <p>The tree file at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock.tre" ext-link-type="uri">https://treeviewer.org/manual/clock/clock.tre</ext-link> (also available in the Supplementary Information <xref rid="ece310873-supitem-0001" ref-type="supplementary-material">S1</xref>), generated after running a Bayesian molecular clock analysis of Cyanobacteria in PhyloBayes v4.1e (Lartillot et al., <xref rid="ece310873-bib-0029" ref-type="bibr">2009</xref>), contains 1000 trees, in which each tree contains 42 taxa. When the tree file is opened, TreeViewer recognises that it contains multiple trees and automatically computes a greedy consensus tree (Bryant, <xref rid="ece310873-bib-0012" ref-type="bibr">2003</xref>). The options of the “Consensus” <italic toggle="yes">Transformer</italic> module can be used to change how the consensus tree is computed (e.g., adding a burn‐in or sampling a subset of the trees), but in this case the default values are adequate.</p>
    </sec>
    <sec id="ece310873-sec-0010">
      <label>3.2</label>
      <title>Initial tree plot</title>
      <p>The tree is shown automatically as a rooted tree (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6a</xref>), and three <italic toggle="yes">Plot action</italic> modules are enabled: the “Branches” module, which draws the tree branches, and two instances of the “Labels” module. The first “Labels” module draws the taxon names at the tips of the tree, while the second “Labels” module draws the branch length over each branch. To make the plot easier to view, the second instance of the “Labels” module can be removed. Furthermore, to make the tree more compact, the “Width” parameter of the “Rectangular” <italic toggle="yes">Coordinates</italic> module can be reduced to 500.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0006">
        <label>FIGURE 6</label>
        <caption>
          <p>Steps performed in this example. (a) The file containing the trees has been opened in TreeViewer, which computed the consensus tree and displayed it. (b) Age distributions have been computed and plotted on the tree. (c) A scale axis has been added to the plot. (d) All the module parameters have been fine‐tuned in order to obtain a publication‐ready figure (shown enlarged in Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>).</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g004" position="anchor" id="jats-graphic-13"/>
      </fig>
    </sec>
    <sec id="ece310873-sec-0011">
      <label>3.3</label>
      <title>Age distributions</title>
      <p>Plotting the age distribution for each node requires a two‐step process: first, the age distributions need to be computed by using the “Set up age distributions” <italic toggle="yes">Further transformation</italic> module. By default, this module will also associate the mean age and 89% highest density interval (McElreath, <xref rid="ece310873-bib-0038" ref-type="bibr">2020</xref>) to each node, which can be used, for example, to draw node bars showing the confidence interval (the default 89% threshold can be changed). To draw the age distributions, the “Age distributions” <italic toggle="yes">Plot action</italic> module needs to be enabled. This will draw a violin plot at each node in the tree, showing the posterior age distribution estimate for the node (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6b</xref>). By default, each violin plot is drawn using a randomly chosen colour, but this can be changed by disabling the “Auto colour by node” option in the module parameters.</p>
      <p>In TreeViewer, the plot elements are drawn in the order they are displayed in the left panel, from top to bottom; this means that the newly added age distributions are drawn above the tree branches and labels. To avoid obscuring the tree topology, the “Age distributions” module can be dragged up, so that it is the first module in the plot element list. Furthermore, some of the age distribution plots overlap, due to the limited available vertical space. The vertical spacing of the tips in the tree can be increased by opening the options for the <italic toggle="yes">Coordinates</italic> module and setting the “Height” to a higher value (e.g., 800).</p>
    </sec>
    <sec id="ece310873-sec-0012">
      <label>3.4</label>
      <title>Age axis</title>
      <p>Additionally, it is possible to add an age axis to the plot, so that the age of the various groups can be read from the tree. This can be done by enabling the “Scale axis” <italic toggle="yes">Plot action</italic> module (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6c</xref>). By default, the spacing between consecutive “ticks” on the axis drawn by this module is computed automatically. To make the axis more pleasant, the “Tick spacing” can be increased to 150, the “End” to 3000, and the “Digits” can be set to 0. In this tree, node ages are expressed in units of millions of years; to show this on the plot, the value of the “Units” parameter can be set as “Mya,” which will show the unit at the start and end of the scale axis. The module can be moved up in the list of plot elements, so that the scale axis is drawn before all the other layers in the plot. Finally, the font size of the labels and of the scale axis can be increased by clicking on the respective “Font” buttons and entering “12” in the “Font size” box (Figure <xref rid="ece310873-fig-0006" ref-type="fig">6d</xref>).</p>
    </sec>
    <sec id="ece310873-sec-0013">
      <label>3.5</label>
      <title>Exporting the plot</title>
      <p>A finished figure looks similar to Figure <xref rid="ece310873-fig-0007" ref-type="fig">7</xref>. The plot can be exported in PDF, SVG, PNG, or TIFF format, and the tree file can be saved in a format (e.g., NEXUS or binary) that preserves information about the enabled modules. When such a file (available at <ext-link xlink:href="https://treeviewer.org/manual/clock/clock_finished.tbi" ext-link-type="uri">https://treeviewer.org/manual/clock/clock_finished.tbi</ext-link> and in the Supplementary Information <xref rid="ece310873-supitem-0002" ref-type="supplementary-material">S2</xref>) is opened, TreeViewer will automatically replicate all the processing steps involved in going from the initial tree file to the finished plot. Furthermore, the “Apply to other tree” button in the “Edit” tab can be used to apply the current style to a different file (naturally, some fine‐tuning might be necessary). For example, in a Bayesian analysis, this would make it possible to create an initial draft of the figure with tree samples from a chain that has not converged; then, once the analysis has run for long enough, the plot style can be applied to the final sample of trees with just a few clicks.</p>
      <fig position="float" fig-type="FIGURE" id="ece310873-fig-0007">
        <label>FIGURE 7</label>
        <caption>
          <p>Tree produced following the steps in this example. For each node, a violin plot shows the posterior age distribution estimate for the node. Ages in the scale axis are expressed as millions of years since the present day.</p>
        </caption>
        <graphic xlink:href="ECE3-14-e10873-g005" position="anchor" id="jats-graphic-15"/>
      </fig>
      <p>A more detailed version of this example, showing some additional features of TreeViewer, can be found in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0007" ref-type="bibr">2021d</xref>). Furthermore, TreeViewer can plot multiple different age distributions on the same tree; this is useful, for example, when comparing fossil age calibrations, the effective prior distribution, and the posterior distribution. A tutorial on how to do this is also available in the TreeViewer online manual (Bianchini, <xref rid="ece310873-bib-0011" ref-type="bibr">2023c</xref>). Many more examples and tutorials showcasing the capabilities of TreeViewer are available in the online manual (Bianchini, <xref rid="ece310873-bib-0008" ref-type="bibr">2021e</xref>).</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="ece310873-sec-0014">
    <label>4</label>
    <title>DISCUSSION</title>
    <p>Many software tools exist to plot and visualise phylogenetic trees, which can be broadly categorised into interactive software with a GUI and software libraries for use through a scripting/programming language (some representative examples are shown in Table <xref rid="ece310873-tbl-0003" ref-type="table">3</xref>). The Interactive Tree Of Life (iTOL; Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), for instance, is an online GUI tool that enables users to plot, annotate, and manage phylogenetic trees; FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a simple desktop application to draw phylogenetic trees, including some capabilities for annotation and manipulation. Examples of software libraries include ggtree (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>), an R package, and the Environment for Tree Exploration (ETE; Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>), a Python package. TreeViewer aims to bridge the gap between the two categories, providing users with both the ease of use of a GUI software and powerful scripting capabilities.</p>
    <table-wrap position="float" id="ece310873-tbl-0003" content-type="TABLE">
      <label>TABLE 3</label>
      <caption>
        <p>Overview of phylogenetic tree visualisation software. For each program, the table shows whether it is free and open source and the licence under which it is released, the operating system (OS) compatibility (here, “All” refers to Windows, Linux and macOS), whether it provides a GUI and/or a command‐line interface (CLI), and the programming language in which it was created.</p>
      </caption>
      <table frame="hsides" rules="groups">
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <col align="left" span="1"/>
        <thead valign="bottom">
          <tr style="border-bottom:solid 1px #000000">
            <th align="left" valign="bottom" rowspan="1" colspan="1">Software</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Free and open source</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Licence</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">OS compatibility</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Interface</th>
            <th align="left" valign="bottom" rowspan="1" colspan="1">Programming language</th>
          </tr>
        </thead>
        <tbody valign="top">
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">TreeViewer</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">AGPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">C#</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">iTOL</td>
            <td align="left" valign="top" rowspan="1" colspan="1">No</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Proprietary</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All (online)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI, (CLI<xref rid="ece310873-note-0004" ref-type="table-fn"><sup>a</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">JavaScript<xref rid="ece310873-note-0005" ref-type="table-fn"><sup>b</sup></xref>
</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">FigTree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GUI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Java</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">Ggtree</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Artistic‐2.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">All</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI</td>
            <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td align="left" valign="top" rowspan="1" colspan="1">ETE</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Yes</td>
            <td align="left" valign="top" rowspan="1" colspan="1">GPL‐3.0</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Linux and macOS</td>
            <td align="left" valign="top" rowspan="1" colspan="1">CLI, (GUI<xref rid="ece310873-note-0006" ref-type="table-fn"><sup>c</sup></xref>)</td>
            <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot id="ece310873-ntgp-0003">
        <fn id="ece310873-note-0004">
          <label>
            <sup>a</sup>
          </label>
          <p>In addition to the main GUI, iTOL allows users with an active subscription to upload and export trees from the command line.</p>
        </fn>
        <fn id="ece310873-note-0005">
          <label>
            <sup>b</sup>
          </label>
          <p>The latest versions of the client‐side visualisation engine for iTOL are written in JavaScript (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>); source code for the server‐side components is not freely available, but the original release used Perl scripts (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>).</p>
        </fn>
        <fn id="ece310873-note-0006">
          <label>
            <sup>c</sup>
          </label>
          <p>In addition to the main Python command‐line interface, ETE has basic interactive capabilities.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>One of the main attractions of the iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) is its cloud‐based nature, since users do not need to download any software on the machine, and trees saved on their online workspace are available from any workstation. The iTOL portal also allows users to share annotated trees with other collaborators and to create figures for publication. However, unrestricted use of the software requires a paid subscription (Letunic &amp; Bork, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>), and the source code for the software is not publicly available. While installing iTOL on a local machine is possible, it requires liaising with the software creators.</p>
    <p>FigTree (Rambaut, <xref rid="ece310873-bib-0048" ref-type="bibr">2018</xref>) is a Java‐based program that was originally designed to display phylogenetic trees produced by BEAST (Suchard et al., <xref rid="ece310873-bib-0058" ref-type="bibr">2018</xref>). It is very accessible, and it can be easily used to perform basic annotations on the trees (e.g., adding symbols at the tips or internal nodes, changing the display colour of part of the tree, and displaying scale bars). There are, however, some limitations to the number and the kind of annotations that can be added to the tree. Trees produced often need to be exported and edited using other software (e.g., Adobe Illustrator or Inkscape) to prepare them for publication. FigTree is open source (released under a GNU GPLv2 licence), and it is available for Windows, Linux, and macOS.</p>
    <p>The ggtree R package (Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>) allows users to plot phylogenetic trees using a “layered” syntax derived from the general‐purpose ggplot2 (Wickham, <xref rid="ece310873-bib-0063" ref-type="bibr">2016</xref>) R graphics package. In this way, a basic tree geometry can be extended with many layers of additional elements such as labels, symbols, and heatmaps. Since all of this happens within an R scripting environment, users can manipulate the trees using other popular packages such as ape (Paradis et al., <xref rid="ece310873-bib-0043" ref-type="bibr">2004</xref>) or phytools (Revell, <xref rid="ece310873-bib-0049" ref-type="bibr">2012</xref>). The ggtree package is open source (released under the Artistic License 2.0) and available for Windows, Linux, and macOS.</p>
    <p>The ETE Python package (Huerta‐Cepas et al., <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) provides similar capabilities for Python users. In addition to tree drawing and annotation capabilities, ETE can perform some evolutionary analyses and can access data from online databases such as the NCBI taxonomy (Schoch et al., <xref rid="ece310873-bib-0054" ref-type="bibr">2020</xref>) and the Genome Taxonomy Database (Parks et al., <xref rid="ece310873-bib-0044" ref-type="bibr">2022</xref>). Furthermore, it provides some interactive features. ETE is open source (released under a GNU GPLv3 licence), but does not support Windows, and can only be installed on Linux and macOS. A limited online version allowing users to plot a tree together with a sequence alignment is also available.</p>
    <p>Code that uses software libraries such as ggtree and ETE can be easily incorporated into analysis pipelines, and the scripts used to produce the plots can be used to replicate the plot or adapt it to a different dataset with minimal effort. However, one of their drawbacks is that users are required to be familiar with the relevant programming language, unlike GUI tools such as iTOL and FigTree. As a result, GUI tools appeal to a much wider audience. For instance, at the time of writing, five publications describing ggtree (Xu et al., <xref rid="ece310873-bib-0065" ref-type="bibr">2022</xref>; Yu, <xref rid="ece310873-bib-0066" ref-type="bibr">2020</xref>, <xref rid="ece310873-bib-0067" ref-type="bibr">2022</xref>; Yu et al., <xref rid="ece310873-bib-0069" ref-type="bibr">2017</xref>, <xref rid="ece310873-bib-0068" ref-type="bibr">2018</xref>) have a total of 1862 citations, and two publications describing ETE (Huerta‐Cepas et al., <xref rid="ece310873-bib-0023" ref-type="bibr">2010</xref>, <xref rid="ece310873-bib-0024" ref-type="bibr">2016</xref>) have a total of 1685 citations. In contrast, five publications describing iTOL (Letunic &amp; Bork, <xref rid="ece310873-bib-0030" ref-type="bibr">2007</xref>, <xref rid="ece310873-bib-0031" ref-type="bibr">2011</xref>, <xref rid="ece310873-bib-0032" ref-type="bibr">2016</xref>, <xref rid="ece310873-bib-0033" ref-type="bibr">2019</xref>, <xref rid="ece310873-bib-0034" ref-type="bibr">2021</xref>) have a total of 15,388 citations. FigTree is not associated with an official publication, which makes tracking its use more difficult; however, a Google Scholar search suggests upwards of 7700 citations.</p>
    <p>TreeViewer has a GUI interface that can be used to produce simple tree plots without much effort (similar to iTOL or FigTree), though the creation of complex, multi‐annotation plots requires some familiarity with the program. The “Apply to other tree” option reuses a plot style for a different tree; this is similar to changing the input file in an R or Python script, but everything happens through the TreeViewer GUI. The command‐line interface can be used to integrate the software into pipelines and to reproduce the same plot after minor changes. At the same time, the integrated C# scripting environment allows advanced users to manipulate the tree without restriction (like ggtree or ETE). The free and open‐source licensing scheme and cross‐platform compatibility allow users to run TreeViewer with full capabilities on almost any machine (unlike ETE) and without having to pay any fees (unlike iTOL).</p>
  </sec>
  <sec sec-type="conclusions" id="ece310873-sec-0015">
    <label>5</label>
    <title>CONCLUSION</title>
    <p>TreeViewer provides new and versatile capabilities for drawing, annotating, and analysing phylogenetic trees. At present, trees can be annotated with discrete and continuous character data, sequence alignments, age distributions, images, highlights, and stochastic mapping results. The modular design allows both the main software developers and experienced users to expand TreeViewer's capabilities without having to make significant alterations to the main code base.</p>
    <p>The user‐friendly interface and intuitive zoom‐and‐drag functionalities allow inexperienced users to quickly produce a plot and explore the relationships between the taxa included in the tree. Detailed documentation and tutorials are available for users to learn about the capabilities of the program and how to use and combine them. Furthermore, every module has its own manual, accessible from within TreeViewer's user interface. Using the lightweight integrated development environment and the information in the developer's guide (included in the online manual), advanced users can create small scripts and/or new modules to change the structure of the tree or the way in which it is displayed.</p>
    <p>TreeViewer is freely available for Windows, Linux, and macOS (both Intel‐based and Apple Silicon‐based) computers. The source code and compiled executable files can be downloaded from the program's website at <ext-link xlink:href="https://treeviewer.org" ext-link-type="uri">https://treeviewer.org</ext-link>, which also contains links to the documentation, tutorials, and GitHub repository (<ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri">https://github.com/arklumpus/TreeViewer</ext-link>), where users can submit feedback, request help, and/or report bugs.</p>
  </sec>
  <sec id="ece310873-sec-0021">
    <title>AUTHOR CONTRIBUTIONS</title>
    <p><bold>Giorgio Bianchini:</bold> Conceptualization (lead); methodology (lead); software (lead); validation (lead); visualization (lead); writing – original draft (lead); writing – review and editing (equal). <bold>Patricia Sánchez‐Baracaldo:</bold> Funding acquisition (lead); supervision (lead); writing – original draft (supporting); writing – review and editing (equal).</p>
  </sec>
  <sec id="ece310873-sec-0017">
    <title>FUNDING INFORMATION</title>
    <p>Funding support for this work came from a University of Bristol Scholarship to GB and a Royal Society University Research Fellowship to PS‐B. For the purpose of open access, the authors have applied a Creative Commons Attribution (CC BY) licence to any author‐accepted manuscript version arising from this submission.</p>
  </sec>
  <sec sec-type="COI-statement" id="ece310873-sec-0018">
    <title>CONFLICT OF INTEREST STATEMENT</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supporting information</title>
    <supplementary-material id="ece310873-supitem-0001" position="float" content-type="local-data">
      <caption>
        <p>
Data S1
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s001.tre">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="ece310873-supitem-0002" position="float" content-type="local-data">
      <caption>
        <p>
Data S2
</p>
      </caption>
      <media xlink:href="ECE3-14-e10873-s002.tbi">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ece310873-sec-0016">
    <title>ACKNOWLEDGEMENTS</title>
    <p>We would like to acknowledge all the users who have tried the software and given us feedback during its development, in particular the Molecular Palaeo group at the University of Bristol.</p>
  </ack>
  <sec sec-type="data-availability" id="ece310873-sec-0020">
    <title>DATA AVAILABILITY STATEMENT</title>
    <p>The source code for TreeViewer and all associated example files and tutorials are available from the TreeViewer GitHub repository at <ext-link xlink:href="https://github.com/arklumpus/TreeViewer" ext-link-type="uri" specific-use="software is-supplemented-by">https://github.com/arklumpus/TreeViewer</ext-link> and archived on Zenodo at <ext-link xlink:href="https://zenodo.org/doi/10.5281/zenodo.7768343" ext-link-type="uri" specific-use="software is-supplemented-by">https://zenodo.org/doi/10.5281/zenodo.7768343</ext-link>.</p>
  </sec>
  <ref-list content-type="cited-references" id="ece310873-bibl-0001">
    <title>REFERENCES</title>
    <ref id="ece310873-bib-0001">
      <mixed-citation publication-type="journal" id="ece310873-cit-0001"><string-name><surname>Anderegg</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ho</surname>, <given-names>T. M.</given-names></string-name>, <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name>, &amp; <string-name><surname>Fuster</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>The less well‐known little brothers: The SLC9B/NHA sodium proton exchanger subfamily—Structure, function, regulation and potential drug‐target approaches</article-title>. <source>Frontiers in Physiology</source>, <volume>13</volume>, <elocation-id>898508</elocation-id>. <pub-id pub-id-type="doi">10.3389/FPHYS.2022.898508</pub-id>
<pub-id pub-id-type="pmid">35694410</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0002">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0002"><collab collab-type="authors">AvaloniaUI Organization</collab>
. (<year>2013</year>). <article-title>Avalonia UI</article-title>. <ext-link xlink:href="https://avaloniaui.net/" ext-link-type="uri">https://avaloniaui.net/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0003">
      <mixed-citation publication-type="journal" id="ece310873-cit-0003"><string-name><surname>Beach</surname>, <given-names>N. K.</given-names></string-name>, <string-name><surname>Myers</surname>, <given-names>K. S.</given-names></string-name>, <string-name><surname>Donohue</surname>, <given-names>T. J.</given-names></string-name>, &amp; <string-name><surname>Noguera</surname>, <given-names>D. R.</given-names></string-name> (<year>2022</year>). <article-title>Metagenomes from 25 low‐abundance microbes in a partial Nitritation Anammox microbiome</article-title>. <source>Microbiology Resource Announcements</source>, <volume>11</volume>, <elocation-id>e00212–22</elocation-id>. <pub-id pub-id-type="doi">10.1128/MRA.00212-22</pub-id>
<pub-id pub-id-type="pmid">35575561</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0004">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0004"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021a</year>). <article-title>TreeViewer module repository</article-title>. <ext-link xlink:href="https://treeviewer.org/modules" ext-link-type="uri">https://treeviewer.org/modules</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0005">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0005"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021b</year>). <article-title>TreeViewer manual</article-title>. <ext-link xlink:href="https://treeviewer.org/manual" ext-link-type="uri">https://treeviewer.org/manual</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0006">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0006"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021c</year>). <article-title>TreeViewer developer's guide</article-title>. <ext-link xlink:href="https://github.com/arklumpus/TreeViewer/wiki/Developer%E2%80%99s-guide" ext-link-type="uri">https://github.com/arklumpus/TreeViewer/wiki/Developer's‐guide</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0007">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0007"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021d</year>). <article-title>TreeViewer example: Plotting the age distributions in a time‐calibrated tree</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/clock" ext-link-type="uri">https://treeviewer.org/manual/clock</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0008">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0008"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2021e</year>). <article-title>TreeViewer examples</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/examples" ext-link-type="uri">https://treeviewer.org/manual/examples</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0009">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0009"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023a</year>). <article-title>TreeNode: Version 1.5.3</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387417</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0010">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0010"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023b</year>). <article-title>CSharpEditor: Version 1.1.5</article-title>. <pub-id pub-id-type="doi">10.5281/ZENODO.8387453</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0011">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0011"><string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name> (<year>2023c</year>). <article-title>TreeViewer example: Plotting multiple age distributions</article-title>. <ext-link xlink:href="https://treeviewer.org/manual/distributions" ext-link-type="uri">https://treeviewer.org/manual/distributions</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0012">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0012"><string-name><surname>Bryant</surname>, <given-names>D.</given-names></string-name> (<year>2003</year>). <article-title>A classification of consensus methods for phylogenetics</article-title>. DIMACS Series in Discrete Mathematics and Theoretical Computer Science <pub-id pub-id-type="doi">10.1090/dimacs/061</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0013">
      <mixed-citation publication-type="journal" id="ece310873-cit-0013"><string-name><surname>Camacho</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Coulouris</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Avagyan</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Ma</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Papadopoulos</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Bealer</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Madden</surname>, <given-names>T. L.</given-names></string-name> (<year>2009</year>). <article-title>BLAST+: Architecture and applications</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <elocation-id>421</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-10-421</pub-id>
<pub-id pub-id-type="pmid">20003500</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0015">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0015"><string-name><surname>Dang</surname>, <given-names>Q. H.</given-names></string-name> (<year>2015</year>). <article-title>Secure hash standard</article-title>. Federal Inf Process Stds (NIST FIPS) <pub-id pub-id-type="doi">10.6028/NIST.FIPS.180-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0016">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0016"><string-name><surname>Eisfeld</surname>, <given-names>V.</given-names></string-name> (<year>2016</year>). <article-title>File:Guppy—Poecilia reticulata.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Guppy_-_Poecilia_reticulata.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Guppy_‐_Poecilia_reticulata.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0017">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0017"><string-name><surname>Felsenstein</surname>, <given-names>J.</given-names></string-name> (<year>1986</year>). <article-title>The Newick tree format</article-title>. <ext-link xlink:href="http://evolution.genetics.washington.edu/phylip/newicktree.html" ext-link-type="uri">http://evolution.genetics.washington.edu/phylip/newicktree.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0018">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0018"><collab collab-type="authors">Floating‐Point Working Group</collab>
. (<year>2019</year>). <article-title>IEEE Standard for Floating‐Point Arithmetic. IEEE Std 754–2019 (Revision of IEEE 754–2008)</article-title>, 1–84 <pub-id pub-id-type="doi">10.1109/IEEESTD.2019.8766229</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0019">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0019"><collab collab-type="authors">Free Software Foundation</collab>
. (<year>2007</year>). <article-title>GNU Affero General Public License</article-title>. <ext-link xlink:href="https://www.gnu.org/licenses/agpl-3.0.en.html" ext-link-type="uri">https://www.gnu.org/licenses/agpl‐3.0.en.html</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0020">
      <mixed-citation publication-type="journal" id="ece310873-cit-0020"><string-name><surname>Gyimesi</surname>, <given-names>G.</given-names></string-name>, &amp; <string-name><surname>Hediger</surname>, <given-names>M. A.</given-names></string-name> (<year>2022</year>). <article-title>Systematic in silico discovery of novel solute carrier‐like proteins from proteomes</article-title>. <source>PLoS One</source>, <volume>17</volume>, <elocation-id>e0271062</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PONE.0271062</pub-id>
<pub-id pub-id-type="pmid">35901096</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0021">
      <mixed-citation publication-type="journal" id="ece310873-cit-0021"><string-name><surname>Höhna</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Landis</surname>, <given-names>M. J.</given-names></string-name>, <string-name><surname>Heath</surname>, <given-names>T. A.</given-names></string-name>, <string-name><surname>Boussau</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. R.</given-names></string-name>, <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name>, &amp; <string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name> (<year>2016</year>). <article-title>RevBayes: Bayesian phylogenetic inference using graphical models and an interactive model‐specification language</article-title>. <source>Systematic Biology</source>, <volume>65</volume>, <fpage>726</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw021</pub-id>
<pub-id pub-id-type="pmid">27235697</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0022">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0022"><string-name><surname>Hornik</surname>, <given-names>K.</given-names></string-name>, &amp; <string-name><surname>Leisch</surname>, <given-names>F.</given-names></string-name> (<year>1997</year>). <article-title>CRAN: The Comprehensive R Archive Network</article-title>. <ext-link xlink:href="https://cran.r-project.org/" ext-link-type="uri">https://cran.r‐project.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0023">
      <mixed-citation publication-type="journal" id="ece310873-cit-0023"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Dopazo</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Gabaldón</surname>, <given-names>T.</given-names></string-name> (<year>2010</year>). <article-title>ETE: A python environment for tree exploration</article-title>. <source>BMC Bioinformatics</source>, <volume>11</volume>, <elocation-id>24</elocation-id>. <pub-id pub-id-type="doi">10.1186/1471-2105-11-24</pub-id>
<pub-id pub-id-type="pmid">20070885</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0024">
      <mixed-citation publication-type="journal" id="ece310873-cit-0024"><string-name><surname>Huerta‐Cepas</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Serra</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>ETE 3: Reconstruction, analysis, and visualization of Phylogenomic data</article-title>. <source>Molecular Biology and Evolution</source>, <volume>33</volume>, <fpage>1635</fpage>–<lpage>1638</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSW046</pub-id>
<pub-id pub-id-type="pmid">26921390</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0025">
      <mixed-citation publication-type="journal" id="ece310873-cit-0025"><string-name><surname>Hug</surname>, <given-names>L. A.</given-names></string-name>, <string-name><surname>Baker</surname>, <given-names>B. J.</given-names></string-name>, <string-name><surname>Anantharaman</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Brown</surname>, <given-names>C. T.</given-names></string-name>, <string-name><surname>Probst</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Castelle</surname>, <given-names>C. J.</given-names></string-name>, <string-name><surname>Butterfield</surname>, <given-names>C. N.</given-names></string-name>, <string-name><surname>Hernsdorf</surname>, <given-names>A. W.</given-names></string-name>, <string-name><surname>Amano</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Ise</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Suzuki</surname>, <given-names>Y.</given-names></string-name>, <string-name><surname>Dudek</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Relman</surname>, <given-names>D. A.</given-names></string-name>, <string-name><surname>Finstad</surname>, <given-names>K. M.</given-names></string-name>, <string-name><surname>Amundson</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Thomas</surname>, <given-names>B. C.</given-names></string-name>, &amp; <string-name><surname>Banfield</surname>, <given-names>J. F.</given-names></string-name> (<year>2016</year>). <article-title>A new view of the tree of life</article-title>. <source>Nature Microbiology</source>, <volume>1</volume>, <elocation-id>16048</elocation-id>. <pub-id pub-id-type="doi">10.1038/nmicrobiol.2016.48</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0026">
      <mixed-citation publication-type="journal" id="ece310873-cit-0026"><string-name><surname>Iwata</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Yoshinaga</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Mizutani</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Kikawada</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Kikuta</surname>, <given-names>S.</given-names></string-name> (<year>2023</year>). <article-title>Proton gradient mediates hemolymph trehalose influx into aphid bacteriocytes</article-title>. <source>Archives of Insect Biochemistry and Physiology</source>, <volume>112</volume>, <elocation-id>e21971</elocation-id>. <pub-id pub-id-type="doi">10.1002/ARCH.21971</pub-id>
<pub-id pub-id-type="pmid">36205078</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0027">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0027"><string-name><surname>Jonsson</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Kaliski</surname>, <given-names>B.</given-names></string-name> (<year>2003</year>). <article-title>Public‐Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1</article-title>. <pub-id pub-id-type="doi">10.17487/RFC3447</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0028">
      <mixed-citation publication-type="journal" id="ece310873-cit-0028"><string-name><surname>Klau</surname>, <given-names>L. J.</given-names></string-name>, <string-name><surname>Podell</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Creamer</surname>, <given-names>K. E.</given-names></string-name>, <string-name><surname>Demko</surname>, <given-names>A. M.</given-names></string-name>, <string-name><surname>Singh</surname>, <given-names>H. W.</given-names></string-name>, <string-name><surname>Allen</surname>, <given-names>E. E.</given-names></string-name>, <string-name><surname>Moore</surname>, <given-names>B. S.</given-names></string-name>, <string-name><surname>Ziemert</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Letzel</surname>, <given-names>A. C.</given-names></string-name>, &amp; <string-name><surname>Jensen</surname>, <given-names>P. R.</given-names></string-name> (<year>2022</year>). <article-title>The natural product domain seeker version 2 (NaPDoS2) webtool relates ketosynthase phylogeny to biosynthetic function</article-title>. <source>Journal of Biological Chemistry</source>, <volume>298</volume>, <fpage>102480</fpage>–<lpage>102481</lpage>. <pub-id pub-id-type="doi">10.1016/j.jbc.2022.102480</pub-id>
<pub-id pub-id-type="pmid">36108739</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0029">
      <mixed-citation publication-type="journal" id="ece310873-cit-0029"><string-name><surname>Lartillot</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Lepage</surname>, <given-names>T.</given-names></string-name>, &amp; <string-name><surname>Blanquart</surname>, <given-names>S.</given-names></string-name> (<year>2009</year>). <article-title>PhyloBayes 3: A Bayesian software package for phylogenetic reconstruction and molecular dating</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>2286</fpage>–<lpage>2288</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp368</pub-id>
<pub-id pub-id-type="pmid">19535536</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0030">
      <mixed-citation publication-type="journal" id="ece310873-cit-0030"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2007</year>). <article-title>Interactive tree of life (iTOL): An online tool for phylogenetic tree display and annotation</article-title>. <source>Bioinformatics</source>, <volume>23</volume>, <fpage>127</fpage>–<lpage>128</lpage>. <pub-id pub-id-type="doi">10.1093/BIOINFORMATICS/BTL529</pub-id>
<pub-id pub-id-type="pmid">17050570</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0031">
      <mixed-citation publication-type="journal" id="ece310873-cit-0031"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2011</year>). <article-title>Interactive tree of life v2: Online annotation and display of phylogenetic trees made easy</article-title>. <source>Nucleic Acids Research</source>, <volume>39</volume>, <fpage>W475</fpage>–<lpage>W478</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKR201</pub-id>
<pub-id pub-id-type="pmid">21470960</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0032">
      <mixed-citation publication-type="journal" id="ece310873-cit-0032"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2016</year>). <article-title>Interactive tree of life (iTOL) v3: An online tool for the display and annotation of phylogenetic and other trees</article-title>. <source>Nucleic Acids Research</source>, <volume>44</volume>, <fpage>W242</fpage>–<lpage>W245</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKW290</pub-id>
<pub-id pub-id-type="pmid">27095192</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0033">
      <mixed-citation publication-type="journal" id="ece310873-cit-0033"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2019</year>). <article-title>Interactive tree of life (iTOL) v4: Recent updates and new developments</article-title>. <source>Nucleic Acids Research</source>, <volume>47</volume>, <fpage>W256</fpage>–<lpage>W259</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKZ239</pub-id>
<pub-id pub-id-type="pmid">30931475</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0034">
      <mixed-citation publication-type="journal" id="ece310873-cit-0034"><string-name><surname>Letunic</surname>, <given-names>I.</given-names></string-name>, &amp; <string-name><surname>Bork</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>Interactive tree of life (iTOL) v5: An online tool for phylogenetic tree display and annotation</article-title>. <source>Nucleic Acids Research</source>, <volume>49</volume>, <fpage>W293</fpage>–<lpage>W296</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB301</pub-id>
<pub-id pub-id-type="pmid">33885785</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0035">
      <mixed-citation publication-type="journal" id="ece310873-cit-0035"><string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name>, <string-name><surname>Swofford</surname>, <given-names>D. L.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name> (<year>1997</year>). <article-title>Nexus: An extensible file format for systematic information</article-title>. <source>Systematic Biology</source>, <volume>46</volume>, <fpage>590</fpage>–<lpage>621</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.4.590</pub-id>
<pub-id pub-id-type="pmid">11975335</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0036">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0036"><string-name><surname>Maddison</surname>, <given-names>W. P.</given-names></string-name>, &amp; <string-name><surname>Maddison</surname>, <given-names>D. R.</given-names></string-name> (<year>2023</year>). <article-title>Mesquite Project</article-title>. <ext-link xlink:href="http://www.mesquiteproject.org/" ext-link-type="uri">http://www.mesquiteproject.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0037">
      <mixed-citation publication-type="journal" id="ece310873-cit-0037"><string-name><surname>Marx</surname>, <given-names>V.</given-names></string-name> (<year>2013</year>). <article-title>The big challenges of big data</article-title>. <source>Nature</source>, <volume>498</volume>, <fpage>255</fpage>–<lpage>260</lpage>. <pub-id pub-id-type="doi">10.1038/498255a</pub-id>
<pub-id pub-id-type="pmid">23765498</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0038">
      <mixed-citation publication-type="book" id="ece310873-cit-0038"><string-name><surname>McElreath</surname>, <given-names>R.</given-names></string-name> (<year>2020</year>). <part-title>Statistical rethinking</part-title>. In <source>A Bayesian course with examples in R and STAN</source> (<edition designator="2">2nd ed.</edition>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9780429029608</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0039">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0039"><collab collab-type="authors">Microsoft Corporation</collab>
. (<year>2015</year>). <article-title>dotnet/roslyn: The Roslyn. NET compiler provides C# and Visual Basic languages with rich code analysis APIs</article-title>. <ext-link xlink:href="https://github.com/dotnet/roslyn" ext-link-type="uri">https://github.com/dotnet/roslyn</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0040">
      <mixed-citation publication-type="journal" id="ece310873-cit-0040"><string-name><surname>Moreira</surname>, <given-names>F.</given-names></string-name>, <string-name><surname>Arenas</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Videira</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Pereira</surname>, <given-names>F.</given-names></string-name> (<year>2022</year>). <article-title>Evolutionary history of TOPIIA topoisomerases in animals</article-title>. <source>Journal of Molecular Evolution</source>, <volume>90</volume>, <fpage>149</fpage>–<lpage>165</lpage>. <pub-id pub-id-type="doi">10.1007/S00239-022-10048-2/TABLES/4</pub-id>
<pub-id pub-id-type="pmid">35165762</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0041">
      <mixed-citation publication-type="journal" id="ece310873-cit-0041"><string-name><surname>Naafs</surname>, <given-names>B. D. A.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Monteiro</surname>, <given-names>F. M.</given-names></string-name>, &amp; <string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name> (<year>2021</year>). <article-title>The occurrence of 2‐methylhopanoids in modern bacteria and the geological record</article-title>. <source>Geobiology</source>, <volume>20</volume>, <fpage>41</fpage>–<lpage>59</lpage>. <pub-id pub-id-type="doi">10.1111/GBI.12465</pub-id>
<pub-id pub-id-type="pmid">34291867</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0042">
      <mixed-citation publication-type="journal" id="ece310873-cit-0042"><string-name><surname>Ostell</surname>, <given-names>J. M.</given-names></string-name> (<year>1995</year>). <article-title>Integrated access to heterogeneous data from NCBI</article-title>. <source>IEEE Engineering in Medicine and Biology Magazine</source>, <volume>14</volume>, <fpage>730</fpage>–<lpage>736</lpage>. <pub-id pub-id-type="doi">10.1109/51.473267</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0043">
      <mixed-citation publication-type="journal" id="ece310873-cit-0043"><string-name><surname>Paradis</surname>, <given-names>E.</given-names></string-name>, <string-name><surname>Claude</surname>, <given-names>J.</given-names></string-name>, &amp; <string-name><surname>Strimmer</surname>, <given-names>K.</given-names></string-name> (<year>2004</year>). <article-title>APE: Analyses of Phylogenetics and evolution in R language</article-title>. <source>Bioinformatics</source>, <volume>20</volume>, <fpage>289</fpage>–<lpage>290</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg412</pub-id>
<pub-id pub-id-type="pmid">14734327</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0044">
      <mixed-citation publication-type="journal" id="ece310873-cit-0044"><string-name><surname>Parks</surname>, <given-names>D. H.</given-names></string-name>, <string-name><surname>Chuvochina</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Rinke</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Mussig</surname>, <given-names>A. J.</given-names></string-name>, <string-name><surname>Chaumeil</surname>, <given-names>P. A.</given-names></string-name>, &amp; <string-name><surname>Hugenholtz</surname>, <given-names>P.</given-names></string-name> (<year>2022</year>). <article-title>GTDB: An ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome‐based taxonomy</article-title>. <source>Nucleic Acids Research</source>, <volume>50</volume>, <fpage>D785</fpage>–<lpage>D794</lpage>. <pub-id pub-id-type="doi">10.1093/NAR/GKAB776</pub-id>
<pub-id pub-id-type="pmid">34520557</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0045">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0045"><string-name><surname>Pohlmann</surname>, <given-names>R.</given-names></string-name> (<year>2016</year>). <article-title>Killifische Info</article-title>. <ext-link xlink:href="https://www.killifische.info/" ext-link-type="uri">https://www.killifische.info/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0046">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0046"><collab collab-type="authors">Python Software Foundation</collab>
. (<year>2003</year>). <article-title>PyPI The Python Package Index</article-title>. <ext-link xlink:href="https://pypi.org/" ext-link-type="uri">https://pypi.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0047">
      <mixed-citation publication-type="journal" id="ece310873-cit-0047"><string-name><surname>Rabosky</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Chang</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Title</surname>, <given-names>P. O.</given-names></string-name>, <string-name><surname>Cowman</surname>, <given-names>P. F.</given-names></string-name>, <string-name><surname>Sallan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Friedman</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Kaschner</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Garilao</surname>, <given-names>C.</given-names></string-name>, <string-name><surname>Near</surname>, <given-names>T. J.</given-names></string-name>, <string-name><surname>Coll</surname>, <given-names>M.</given-names></string-name>, &amp; <string-name><surname>Alfaro</surname>, <given-names>M. E.</given-names></string-name> (<year>2018</year>). <article-title>An inverse latitudinal gradient in speciation rate for marine fishes</article-title>. <source>Nature</source>, <volume>559</volume>, <fpage>392</fpage>–<lpage>395</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-018-0273-1</pub-id>
<pub-id pub-id-type="pmid">29973726</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0048">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0048"><string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>FigTree v1.4.4</article-title>. <ext-link xlink:href="https://github.com/rambaut/figtree" ext-link-type="uri">https://github.com/rambaut/figtree</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0049">
      <mixed-citation publication-type="journal" id="ece310873-cit-0049"><string-name><surname>Revell</surname>, <given-names>L. J.</given-names></string-name> (<year>2012</year>). <article-title>Phytools: An R package for phylogenetic comparative biology (and other things)</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>3</volume>, <fpage>217</fpage>–<lpage>223</lpage>. <pub-id pub-id-type="doi">10.1111/j.2041-210X.2011.00169.x</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0050">
      <mixed-citation publication-type="journal" id="ece310873-cit-0050"><string-name><surname>Rivest</surname>, <given-names>R. L.</given-names></string-name>, <string-name><surname>Shamir</surname>, <given-names>A.</given-names></string-name>, &amp; <string-name><surname>Adleman</surname>, <given-names>L.</given-names></string-name> (<year>1978</year>). <article-title>A method for obtaining digital signatures and public‐key cryptosystems</article-title>. <source>Communications of the ACM</source>, <volume>21</volume>, <fpage>120</fpage>–<lpage>126</lpage>. <pub-id pub-id-type="doi">10.1145/359340.359342</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0051">
      <mixed-citation publication-type="journal" id="ece310873-cit-0051"><string-name><surname>Ronquist</surname>, <given-names>F.</given-names></string-name>, &amp; <string-name><surname>Huelsenbeck</surname>, <given-names>J. P.</given-names></string-name> (<year>2003</year>). <article-title>MrBayes 3: Bayesian phylogenetic inference under mixed models</article-title>. <source>Bioinformatics</source>, <volume>19</volume>, <fpage>1572</fpage>–<lpage>1574</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btg180</pub-id>
<pub-id pub-id-type="pmid">12912839</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0052">
      <mixed-citation publication-type="journal" id="ece310873-cit-0052"><string-name><surname>Sánchez‐Baracaldo</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Bianchini</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Wilson</surname>, <given-names>J. D.</given-names></string-name>, &amp; <string-name><surname>Knoll</surname>, <given-names>A. H.</given-names></string-name> (<year>2022</year>). <article-title>Cyanobacteria and biogeochemical cycles through earth history</article-title>. <source>Trends in Microbiology</source>, <volume>30</volume>, <fpage>143</fpage>–<lpage>157</lpage>. <pub-id pub-id-type="doi">10.1016/J.TIM.2021.05.008</pub-id>
<pub-id pub-id-type="pmid">34229911</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0053">
      <mixed-citation publication-type="journal" id="ece310873-cit-0053"><string-name><surname>Sasoni</surname>, <given-names>N.</given-names></string-name>, <string-name><surname>Hartman</surname>, <given-names>M. D.</given-names></string-name>, <string-name><surname>García‐Effron</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Guerrero</surname>, <given-names>S. A.</given-names></string-name>, <string-name><surname>Iglesias</surname>, <given-names>A. A.</given-names></string-name>, &amp; <string-name><surname>Arias</surname>, <given-names>D. G.</given-names></string-name> (<year>2022</year>). <article-title>Functional characterization of monothiol and dithiol glutaredoxins from <italic toggle="yes">Leptospira interrogans</italic>
</article-title>. <source>Biochimie</source>, <volume>197</volume>, <fpage>144</fpage>–<lpage>159</lpage>. <pub-id pub-id-type="doi">10.1016/J.BIOCHI.2022.02.006</pub-id>
<pub-id pub-id-type="pmid">35217125</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0054">
      <mixed-citation publication-type="journal" id="ece310873-cit-0054"><string-name><surname>Schoch</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Ciufo</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Domrachev</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Hotton</surname>, <given-names>C. L.</given-names></string-name>, <string-name><surname>Kannan</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Khovanskaya</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>Leipe</surname>, <given-names>D.</given-names></string-name>, <string-name><surname>Mcveigh</surname>, <given-names>R.</given-names></string-name>, <string-name><surname>O'Neill</surname>, <given-names>K.</given-names></string-name>, <string-name><surname>Robbertse</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Sharma</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Soussov</surname>, <given-names>V.</given-names></string-name>, <string-name><surname>Sullivan</surname>, <given-names>J. P.</given-names></string-name>, <string-name><surname>Sun</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Turner</surname>, <given-names>S.</given-names></string-name>, &amp; <string-name><surname>Karsch‐Mizrachi</surname>, <given-names>I.</given-names></string-name> (<year>2020</year>). <article-title>NCBI taxonomy: A comprehensive update on curation, resources and tools</article-title>. <source>Database</source>, <volume>2020</volume>, <fpage>baaa062</fpage>. <pub-id pub-id-type="doi">10.1093/DATABASE/BAAA062</pub-id>
<pub-id pub-id-type="pmid">32761142</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0055">
      <mixed-citation publication-type="journal" id="ece310873-cit-0055"><string-name><surname>Smith</surname>, <given-names>S. A.</given-names></string-name>, &amp; <string-name><surname>Brown</surname>, <given-names>J. W.</given-names></string-name> (<year>2018</year>). <article-title>Constructing a broadly inclusive seed plant phylogeny</article-title>. <source>American Journal of Botany</source>, <volume>105</volume>, <fpage>302</fpage>–<lpage>314</lpage>. <pub-id pub-id-type="doi">10.1002/AJB2.1019</pub-id>
<pub-id pub-id-type="pmid">29746720</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0056">
      <mixed-citation publication-type="journal" id="ece310873-cit-0056"><string-name><surname>Sobol</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Chakraborty</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Martin</surname>, <given-names>G. B.</given-names></string-name>, &amp; <string-name><surname>Sessa</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>The emerging role of PP2C phosphatases in tomato immunity</article-title>. <source>Molecular Plant‐Microbe Interactions</source>, <volume>35</volume>, <fpage>737</fpage>–<lpage>747</lpage>. <pub-id pub-id-type="doi">10.1094/MPMI-02-22-0037-CR/ASSET/IMAGES/LARGE/MPMI-02-22-0037-CRF3.JPEG</pub-id>
<pub-id pub-id-type="pmid">35696659</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0057">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0057"><string-name><surname>Stein</surname>, <given-names>J.</given-names></string-name> (<year>2017</year>). <article-title>NO_COLOR: disabling ANSI color output by default</article-title>. <ext-link xlink:href="https://no-color.org/" ext-link-type="uri">https://no‐color.org/</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0058">
      <mixed-citation publication-type="journal" id="ece310873-cit-0058"><string-name><surname>Suchard</surname>, <given-names>M. A.</given-names></string-name>, <string-name><surname>Lemey</surname>, <given-names>P.</given-names></string-name>, <string-name><surname>Baele</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Ayres</surname>, <given-names>D. L.</given-names></string-name>, <string-name><surname>Drummond</surname>, <given-names>A. J.</given-names></string-name>, &amp; <string-name><surname>Rambaut</surname>, <given-names>A.</given-names></string-name> (<year>2018</year>). <article-title>Bayesian phylogenetic and phylodynamic data integration using BEAST 1.10</article-title>. <source>Virus Evolution</source>, <volume>4</volume>, <fpage>vey016</fpage>. <pub-id pub-id-type="doi">10.1093/ve/vey016</pub-id>
<pub-id pub-id-type="pmid">29942656</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0059">
      <mixed-citation publication-type="miscellaneous" id="ece310873-cit-0059"><string-name><surname>Torres</surname>, <given-names>H.</given-names></string-name> (<year>2010</year>). <article-title>File:Poecilia sphenops.jpg—Wikimedia Commons</article-title>. <ext-link xlink:href="https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg" ext-link-type="uri">https://commons.wikimedia.org/wiki/File:Poecilia_sphenops.jpg</ext-link>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0060">
      <mixed-citation publication-type="journal" id="ece310873-cit-0060"><string-name><surname>Upham</surname>, <given-names>N. S.</given-names></string-name>, <string-name><surname>Esselstyn</surname>, <given-names>J. A.</given-names></string-name>, &amp; <string-name><surname>Jetz</surname>, <given-names>W.</given-names></string-name> (<year>2019</year>). <article-title>Inferring the mammal tree: Species‐level sets of phylogenies for questions in ecology, evolution, and conservation</article-title>. <source>PLoS Biology</source>, <volume>17</volume>, <elocation-id>e3000494</elocation-id>. <pub-id pub-id-type="doi">10.1371/JOURNAL.PBIO.3000494</pub-id>
<pub-id pub-id-type="pmid">31800571</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0061">
      <mixed-citation publication-type="journal" id="ece310873-cit-0061"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, <string-name><surname>Boekhout</surname>, <given-names>T.</given-names></string-name>, <string-name><surname>Theelen</surname>, <given-names>B.</given-names></string-name>, <string-name><surname>Dijksterhuis</surname>, <given-names>J.</given-names></string-name>, <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name>, &amp; <string-name><surname>Seifert</surname>, <given-names>K. A.</given-names></string-name> (<year>2023</year>). <article-title>Da Vinci's yeast: <italic toggle="yes">Blastobotrys davincii</italic> f.a., sp. nov</article-title>. <source>Yeast</source>, <volume>40</volume>, <fpage>7</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1002/YEA.3816</pub-id>
<pub-id pub-id-type="pmid">36168284</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0062">
      <mixed-citation publication-type="journal" id="ece310873-cit-0062"><string-name><surname>Visagie</surname>, <given-names>C. M.</given-names></string-name>, &amp; <string-name><surname>Yilmaz</surname>, <given-names>N.</given-names></string-name> (<year>2023</year>). <article-title>Along the footpath of Penicillium discovery: Six new species from the Woodville big tree Forest Trail</article-title>. <source>Mycologia</source>, <volume>115</volume>, <fpage>87</fpage>–<lpage>106</lpage>. <pub-id pub-id-type="doi">10.1080/00275514.2022.2135915</pub-id>
<pub-id pub-id-type="pmid">36441981</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0063">
      <mixed-citation publication-type="book" id="ece310873-cit-0063"><string-name><surname>Wickham</surname>, <given-names>H.</given-names></string-name> (<year>2016</year>). <source>ggplot2: Elegant graphics for data analysis</source>. <publisher-name>Springer‐Verlag</publisher-name>. <pub-id pub-id-type="doi">10.1007/978-3-319-24277-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0064">
      <mixed-citation publication-type="journal" id="ece310873-cit-0064"><string-name><surname>Wu</surname>, <given-names>C.</given-names></string-name>, &amp; <string-name><surname>Guo</surname>, <given-names>D.</given-names></string-name> (<year>2022</year>). <article-title>Computational docking reveals co‐evolution of C4 carbon delivery enzymes in diverse plants</article-title>. <source>International Journal of Molecular Sciences</source>, <volume>23</volume>, <elocation-id>12688</elocation-id>. <pub-id pub-id-type="doi">10.3390/IJMS232012688/S1</pub-id>
<pub-id pub-id-type="pmid">36293547</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0065">
      <mixed-citation publication-type="journal" id="ece310873-cit-0065"><string-name><surname>Xu</surname>, <given-names>S.</given-names></string-name>, <string-name><surname>Li</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Luo</surname>, <given-names>X.</given-names></string-name>, <string-name><surname>Chen</surname>, <given-names>M.</given-names></string-name>, <string-name><surname>Tang</surname>, <given-names>W.</given-names></string-name>, <string-name><surname>Zhan</surname>, <given-names>L.</given-names></string-name>, <string-name><surname>Dai</surname>, <given-names>Z.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <article-title>Ggtree: A serialized data object for visualization of a phylogenetic tree and annotation data</article-title>. <source>iMeta</source>, <volume>1</volume>, <elocation-id>e56</elocation-id>. <pub-id pub-id-type="doi">10.1002/IMT2.56</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0066">
      <mixed-citation publication-type="journal" id="ece310873-cit-0066"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2020</year>). <article-title>Using ggtree to visualize data on tree‐like structures</article-title>. <source>Current Protocols in Bioinformatics</source>, <volume>69</volume>, <elocation-id>e96</elocation-id>. <pub-id pub-id-type="doi">10.1002/CPBI.96</pub-id>
<pub-id pub-id-type="pmid">32162851</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0067">
      <mixed-citation publication-type="book" id="ece310873-cit-0067"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name> (<year>2022</year>). <source>Data integration, manipulation and visualization of phylogenetic trees</source> (<edition designator="1">1</edition>st ed., pp. <fpage>71</fpage>–<lpage>158</lpage>). <publisher-name>Chapman and Hall/CRC</publisher-name>. <pub-id pub-id-type="doi">10.1201/9781003279242</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0068">
      <mixed-citation publication-type="journal" id="ece310873-cit-0068"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, &amp; <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name> (<year>2018</year>). <article-title>Two methods for mapping and visualizing associated data on phylogeny using Ggtree</article-title>. <source>Molecular Biology and Evolution</source>, <volume>35</volume>, <fpage>3041</fpage>–<lpage>3043</lpage>. <pub-id pub-id-type="doi">10.1093/MOLBEV/MSY194</pub-id>
<pub-id pub-id-type="pmid">30351396</pub-id>
</mixed-citation>
    </ref>
    <ref id="ece310873-bib-0069">
      <mixed-citation publication-type="journal" id="ece310873-cit-0069"><string-name><surname>Yu</surname>, <given-names>G.</given-names></string-name>, <string-name><surname>Smith</surname>, <given-names>D. K.</given-names></string-name>, <string-name><surname>Zhu</surname>, <given-names>H.</given-names></string-name>, <string-name><surname>Guan</surname>, <given-names>Y.</given-names></string-name>, &amp; <string-name><surname>Lam</surname>, <given-names>T. T. Y.</given-names></string-name> (<year>2017</year>). <article-title>Ggtree: An r package for visualization and annotation of phylogenetic trees with their covariates and other associated data</article-title>. <source>Methods in Ecology and Evolution</source>, <volume>8</volume>, <fpage>28</fpage>–<lpage>36</lpage>. <pub-id pub-id-type="doi">10.1111/2041-210X.12628</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="pmc">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">PeerJ</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Francisco, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4349052</article-id>
    <article-id pub-id-type="publisher-id">800</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.800</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Human–Computer Interaction</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Language workbench user interfaces for data analysis</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author">
        <name>
          <surname>Benson</surname>
          <given-names>Victoria M.</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1"/>
      </contrib>
      <contrib id="author-2" contrib-type="author" corresp="yes">
        <name>
          <surname>Campagne</surname>
          <given-names>Fabien</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1"/>
        <email>fac2003@campagnelab.org</email>
      </contrib>
      <aff id="aff-1"><institution>The HRH Prince Alwaleed Bin Talal Bin Abdulaziz Alsaud Institute for Computational Biomedicine, The Weill Cornell Medical College</institution>, <addr-line>New York, NY</addr-line>, <country>United States of America</country></aff>
      <aff id="aff-2"><institution>Department of Physiology and Biophysics, The Weill Cornell Medical College</institution>, <addr-line>New York, NY</addr-line>, <country>United States of America</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib id="editor-1" contrib-type="editor">
        <name>
          <surname>Hochheiser</surname>
          <given-names>Harry</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub" date-type="pub" iso-8601-date="2015-02-24">
      <day>24</day>
      <month>2</month>
      <year iso-8601-date="2015">2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>3</volume>
    <elocation-id>e800</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2014-10-07">
        <day>7</day>
        <month>10</month>
        <year iso-8601-date="2014">2014</year>
      </date>
      <date date-type="accepted" iso-8601-date="2015-02-05">
        <day>5</day>
        <month>2</month>
        <year iso-8601-date="2015">2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2015 Benson and Campagne</copyright-statement>
      <copyright-year>2015</copyright-year>
      <copyright-holder>Benson and Campagne</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/800"/>
    <abstract>
      <p>Biological data analysis is frequently performed with command line software. While this practice provides considerable flexibility for computationally savy individuals, such as investigators trained in bioinformatics, this also creates a barrier to the widespread use of data analysis software by investigators trained as biologists and/or clinicians. Workflow systems such as Galaxy and Taverna have been developed to try and provide generic user interfaces that can wrap command line analysis software. These solutions are useful for problems that can be solved with workflows, and that do not require specialized user interfaces. However, some types of analyses can benefit from custom user interfaces. For instance, developing biomarker models from high-throughput data is a type of analysis that can be expressed more succinctly with specialized user interfaces. Here, we show how Language Workbench (LW) technology can be used to model the biomarker development and validation process. We developed a language that models the concepts of Dataset, Endpoint, Feature Selection Method and Classifier. These high-level language concepts map directly to abstractions that analysts who develop biomarker models are familiar with. We found that user interfaces developed in the Meta-Programming System (MPS) LW provide convenient means to configure a biomarker development project, to train models and view the validation statistics. We discuss several advantages of developing user interfaces for data analysis with a LW, including increased interface consistency, portability and extension by language composition. The language developed during this experiment is distributed as an MPS plugin (available at <uri xlink:href="http://campagnelab.org/software/bdval-for-mps/">http://campagnelab.org/software/bdval-for-mps/</uri>).</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Biological data analysis</kwd>
      <kwd>Bioinformatics training</kwd>
      <kwd>Biomarker development</kwd>
      <kwd>Language workench</kwd>
      <kwd>Data analysis abstractions</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>National Institutes of Health NIAID</funding-source>
        <award-id>5R01AI107762-02</award-id>
      </award-group>
      <award-group id="fund-2">
        <funding-source>National Institutes of Health (NIH)/National Center for Research Resources</funding-source>
        <award-id>UL1 RR024996</award-id>
      </award-group>
      <funding-statement>This investigation was supported by the National Institutes of Health NIAID award 5R01AI107762-02 to Fabien Campagne and by grant UL1 RR024996 (National Institutes of Health (NIH)/National Center for Research Resources) of the Clinical and Translation Science Center at Weill Cornell Medical College. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Popular software available to analyze biological data is often developed with a variety of technology, including programming languages as well as standard and non-standard data formats used to configure the tools for specific analyses. While scientists with a broad computational background have no major difficulty using most of the software tools, this is not the case for scientists whose training did not include computational experience, such as many biologists or physician scientists.</p>
    <sec>
      <title>Helping biologists take advantage of analysis tools</title>
      <p>Several approaches have been used in the past to make it easier to use tools for biological data analysis. These approaches fall under the following broad categories:</p>
      <list list-type="simple" id="list-1">
        <list-item>
          <label>1.</label>
          <p><bold>Custom graphical user interfaces.</bold> User interfaces (UIs) can be programmed with a variety of technology to present the end-user with graphical user interfaces (GUIs) that simplify a specific analysis task. While earlier custom user interfaces were developed as desktop applications (e.g., Clustal-X (<xref rid="ref-21" ref-type="bibr">Thompson et al., 1997</xref>), Viseur (<xref rid="ref-3" ref-type="bibr">Campagne et al., 1999</xref>)), many biological analysis tools are now programmed and offered as web applications (e.g., from the TMHMM server (<xref rid="ref-14" ref-type="bibr">Krogh et al., 2001</xref>) to the vast number of tools described in the Nucleic Acids Research Web Server Special Issue).</p>
        </list-item>
        <list-item>
          <label>2.</label>
          <p><bold>Generic workflow systems.</bold> A minimal workflow system consists of a user interface to create and maintain workflows, and of a runtime engine to execute the workflows. A workflow consists of a set of elements representing units of work (often called workflow components), and connections among the elements representing how data flows from one element to another when the work of an element is completed. Examples of workflow systems include Taverna and Galaxy. These systems were developed to make it easier for biologists to assemble analyses pipelines that require using several tools. Supporting new tools in these systems does not require developing new user interfaces, but in exchange the ability to customize the system is limited to analyses that can be expressed with the workflow abstraction. The workflow abstraction has limited expressiveness. For instance, a workflow system does not support notions of variables or loops, which are often used in scripting or programming languages to automate repetitive tasks. While it is possible to use a scripting or general programming language to implement a work element and therefore perform repetitive tasks inside a workflow component, this requires knowledge beyond that of the workflow system, which the intended audience often does not have.</p>
        </list-item>
        <list-item>
          <label>3.</label>
          <p><bold>Training workshops.</bold> Most universities and medical schools offer training workshops to help biologists and clinical investigators learn the computational skills needed to work with command line analysis tools. Instructors who have taught such workshops know that most of the instructors’ time is spent explaining technical aspects of the operating system and command line user interface rather than the concepts needed to perform a given analysis. Training workshops that focus on teaching workflow systems avoid this problem, but teach their trainees only how to solve the subset of problems that workflow systems can represent.</p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>Language workbench technology</title>
      <p>Readers are refered to <xref rid="ref-23" ref-type="bibr">Voelter et al. (2013)</xref> and <xref rid="ref-9" ref-type="bibr">Erdweg et al. (2013)</xref> for an introduction to Language Workbench (LW) technology. We previously discussed the advantages of LW technology in Bioinformatics in the context of the development of GobyWeb plugin scripts (<xref rid="ref-18" ref-type="bibr">Simi &amp; Campagne, 2014</xref>). In this new study, we investigated whether LW technology—specifically the MPS Language Workbench (see <uri xlink:href="http://www.jetbrains.com/mps/">http://www.jetbrains.com/mps/</uri> and <xref rid="ref-2" ref-type="bibr">Campagne, 2014</xref>)—could be used to model the high-level concepts that an analyst should be aware of when he or she conducts an analysis. The MPS platform is one of several LW platforms that have been developed. Other platforms include Spoofax (<xref rid="ref-13" ref-type="bibr">Kats &amp; Visser, 2010</xref>), Intentional Programming (<xref rid="ref-19" ref-type="bibr">Simonyi, 1995</xref>), or XText (<xref rid="ref-10" ref-type="bibr">Eysholdt &amp; Behrens, 2010</xref>). We have chosen MPS for our study because of FC’s increasing familiarity with the platform (<xref rid="ref-2" ref-type="bibr">Campagne, 2014</xref>).</p>
      <p>The central innovation of the approach we present in this manuscript is to provide the end-user of an analysis tool with user interface elements that directly represent the high-level analysis concepts that the user needs to understand to perform a specific analysis. We will illustrate this idea in this manuscript with an analysis tool that helps end-users develop biomarker models from high-throughput data. We presented an introduction to the biomarker development and validation process in <xref rid="ref-5" ref-type="bibr">Deng &amp; Campagne (2010)</xref>. Similar descriptions are also available in the MAQC-II articles (<xref rid="ref-17" ref-type="bibr">Shi et al., 2010</xref>). This manuscript follows the conventions and definitions given in this published work, which are briefly summarized here.</p>
    </sec>
    <sec>
      <title>The biomarker development process</title>
      <p>Biomarker development studies measure a large number of molecular <italic>features</italic> across a collection of biological specimens, called <italic>samples</italic>. Data obtained for <italic>k</italic> subjects and <italic>n</italic> samples constitute a <italic>dataset</italic> in the form of a table of features. In the MAQC-II study, for instance, microarray assays were used to assemble 6 training datasets and 6 validation datasets. Several microarray <italic>platforms</italic> were used across the study. A total of 13 prediction <italic>endpoints</italic> were defined across these datasets that encoded a specific condition about each subject. For instance, in one dataset, an endpoint was defined by whether a subject of the breast cancer dataset was ER2 positive. Models were developed against this endpoint to try and predict whether the sample, for which gene expression data was available, was ER2 positive. Simply stated, an <italic>endpoint</italic> is what a predictive model is trained to predict. In general, an endpoint may have two or more categories, be a continous value, or a survival outcome for each subject of a dataset.</p>
      <p>All these concepts are well represented and can be directly manipulated by the end-user in the analysis tool developed in this study.</p>
    </sec>
  </sec>
  <sec sec-type="materials|methods">
    <title>Materials &amp; Methods</title>
    <sec>
      <title>MPS language workbench</title>
      <p>We used version 3.1 of the Jetbrains MPS Language Workbench.</p>
    </sec>
    <sec>
      <title>BDVal</title>
      <p>We adapted the BDVal Ant script to make it easier to use BDVal with configuration files automatically generated from the MPS project. This modified script is distributed with BDVal version 1.3 +.</p>
    </sec>
    <sec>
      <title>Unified modeling language diagrams</title>
      <p>The UML diagrams presented in this manuscript were generated automatically using the MPS language and the MPS UML_Diagrams plugin developed by our laboratory (<uri xlink:href="https://github.com/CampagneLaboratory/UML_Diagrams">https://github.com/CampagneLaboratory/UML_Diagrams</uri>).</p>
    </sec>
    <sec>
      <title>User interface buttons and file selection</title>
      <p>Buttons and file selection buttons and dialogs were implemented using the MPS language <uri xlink:href="http:org.campagnelab.ui">org.campagnelab.ui</uri> (<uri xlink:href="http://campagnelab.org/extending-mps-editors-with-buttons-just-got-easier/">http://campagnelab.org/extending-mps-editors-with-buttons-just-got-easier/</uri>). The UI language was used to integrate buttons in the editor of the BDVal language concepts.</p>
    </sec>
    <sec>
      <title>Histogram charts</title>
      <p>Charts were implemented with the <uri xlink:href="http:org.campagnelab.XChart">org.campagnelab.XChart</uri> language, which integrates the XChart library with MPS (<uri xlink:href="https://github.com/CampagneLaboratory/XChart">https://github.com/CampagneLaboratory/XChart</uri>).</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <sec>
      <title>Limitations of existing software</title>
      <p>In a previous report, we described the BDVal software, which automates the development and validation of biomarker models from high-throughput data (<xref rid="ref-6" ref-type="bibr">Dorff et al., 2010</xref>). End-users of BDVal must configure a biomarker development project by creating a number of configuration files, as described in detail in the software online manual (<xref rid="ref-4" ref-type="bibr">Chambwe &amp; Campagne, 2010</xref>). Configuring BDVal projects requires editing a number of files in different formats (including Ant build scripts written in XML, Java property files, and tab delimited files). Our experience suggests that this activity can be challenging and error-prone for non-technically savvy users.</p>
    </sec>
    <sec>
      <title>Modeling the biomarker development process</title>
      <p>We modeled the biomarker development process with the MPS LW by creating concepts to represent each component of a biomarker analysis, as supported by the BDVal software (<xref ref-type="fig" rid="fig-1">Fig. 1</xref>):</p>
      <list list-type="simple" id="list-2">
        <list-item>
          <label>•</label>
          <p><bold>Project</bold> This concept represents a biomarker discovery project and groups multiple datasets needed for analysis.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Sample</bold> A sample is the biological material that was assayed. Each sample is associated with feature values measured by an assay.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Platform</bold> The platform represents the assay used to measure features in the Sample. The platform concept links the assay probe Ids to the genes that the probe measures. Platforms are particularly important for micro-array based assays where multiple probes may measure the expression of the same gene.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>DataSet</bold> A dataset contains feature values for many samples.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Endpoint</bold> An endpoint defines what the models will aim to predict. Endpoints are typically defined by the clinical application at hand (e.g., predict which patient respond to a treatment, or predict which patients have a specific disease).</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Validation protocol</bold> BDVal supports Cross Validation to estimate performance on a training set. Cross-validation can be performed with <italic>k</italic> folds and with <italic>r</italic> random repeats. The parameters <italic>k</italic> and <italic>r</italic> can be configured.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Feature selection approach</bold> A feature selection approach implements a strategy to prioritize features according to their level of association with an endpoint. Several feature selection approaches have been implemented in BDVal and are available to reduce the subset of features used to construct a model. Feature selection is useful when there is a cost or time advantage in measuring few features values for each subject.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Classification approach</bold> A classification approach is able to train a prediction model from feature values in each subject and information about the endpoint for these subjects. Several classification algorithms are implemented in BDVal, including Support Vector Machines with libSVM, Random Forests, Naive Bayes, LogitBoost and the K-Star classification approach.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Modeling approach</bold> The combination of one or more feature selection approaches and a classification approach is a modeling approach and can train a predictive model from a training dataset.</p>
        </list-item>
        <list-item>
          <label>•</label>
          <p><bold>Model</bold> A model contains all the information needed to predict an endpoint when presented with feature values for a subject. BDVal models are written to a self-contained ZIP archive which contains the parameters of the model and threshold value for prediction of an endpoint (<xref rid="ref-6" ref-type="bibr">Dorff et al., 2010</xref>).</p>
        </list-item>
      </list>
      <p>We were able to develop MPS concepts that almost directly represent each of these components of the biomarker discovery process. For clarity, we present these concepts as UML diagrams. <xref ref-type="fig" rid="fig-1">Figure 1</xref> presents the Project, Dataset, Endpoint and Platform concepts. <xref ref-type="fig" rid="fig-2">Figure 2</xref> presents the concepts used to capture the configuration of the user computer. <xref ref-type="fig" rid="fig-3">Figure 3</xref> presents how a modeling approach includes both a choice of Feature Selection, Classification method, and a list of models that can be generated with the approach. <xref ref-type="fig" rid="fig-4">Figure 4</xref> illustrates how we leveraged concept interfaces and inheritance to support auto-completion for different feature selection and classification approaches.</p>
      <fig id="fig-1" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-1</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Main concepts of the BDVal MPS language.</title>
        </caption>
        <graphic xlink:href="peerj-03-800-g001"/>
      </fig>
      <fig id="fig-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Concepts for project configuration.</title>
          <p>The Properties concept represents the configuration of the user computing environment. For instance, end-users can configure the project to use a server-class computer with at least 8 GB of memory and multiple cores, or a desktop computer with at least 1 GB of memory and a single core. This is achieved by selecting the appropriate ComputerType in the Project Properties. Project properties also define the location of two software packages that must be installed on the end-user’s computer and the directory where models will be developed (outputDirectory).</p>
        </caption>
        <graphic xlink:href="peerj-03-800-g002"/>
      </fig>
      <fig id="fig-3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-3</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Concepts for configuring modeling approaches.</title>
          <p>BDVal makes it possible to combine choices for feature selection approaches and choices for classification approaches.</p>
        </caption>
        <graphic xlink:href="peerj-03-800-g003"/>
      </fig>
      <fig id="fig-4" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-4</object-id>
        <label>Figure 4</label>
        <caption>
          <title>Feature selection and classification approaches.</title>
          <p>A FeatureSelection concept interface is implemented by individual concepts that represent each feature selection method supported by BDVal. The inheritance hierarchy is used by the MPS language workbench to offer auto-completion when an end-user needs to identify a feature selection approach (see bottom-right inset). The same mechanism is used to represent the classification approaches supported by BDVal.</p>
        </caption>
        <graphic xlink:href="peerj-03-800-g004"/>
      </fig>
      <p><xref ref-type="fig" rid="fig-4">Figure 4</xref> presents concepts for the feature selection and classification approaches, which map directly to the methods supported by BDVal. Note the use of concept interfaces to indicate that each approach implementation can be used as element of the approach needed to construct a model.</p>
    </sec>
    <sec>
      <title>Generating and running a configured project</title>
      <p>Instances of the Project concept can be configured by the end-user using the MPS user interface. When an instance is fully configured, it can be compiled within the LW. Compilation, also called generation in MPS, creates executable files from an instance of the Project concept and its children (instances of the concepts contained a Project). In the context of BDVal for MPS, generation converts the high-level analysis concepts described in the previous section to the configuration files needed to run BDVal on the end-user’s machine. The generated BDVal files can be executed and will produce results files in configured output directory (a traditional user interface is generated for the Project to help provide feedback as the computation is progressing). The end-user can press the Refresh button (see <xref ref-type="fig" rid="fig-5">Figs. 5</xref> and <xref ref-type="fig" rid="fig-6">6</xref>, in the Status section) to trigger inspection of the output directory.</p>
      <fig id="fig-5" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-5</object-id>
        <label>Figure 5</label>
        <caption>
          <title>Project user interface overview.</title>
          <p>This snapshot presents a view of a BDVal Project instance in the MPS editor. A project contains different sections: Properties, Approach, Status with Result folder, Platform (describing the assay and the datasets produced with this assay). The Dataset section is shown still incomplete to illustrate error highlighting in the MPS language workbench. The editor is fully interactive: end users can add datasets, feature selection methods, additional number of features. Some classification approaches have parameters that are only displayed when the feature selection method is part of the Project (e.g., the SVM Tune-C approach performs a parameter scan for the C cost parameter of a linear support vector machine). These features make the MPS editor a convenient user interface to configure a biomarker development project.</p>
        </caption>
        <graphic xlink:href="peerj-03-800-g005"/>
      </fig>
      <fig id="fig-6" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerj.800/fig-6</object-id>
        <label>Figure 6</label>
        <caption>
          <title>The LW user interface can incorporate interactivity and graphics.</title>
        </caption>
        <graphic xlink:href="peerj-03-800-g006"/>
      </fig>
    </sec>
    <sec>
      <title>Analysis user interface in a language workbench</title>
      <p>Developing a user interface in a LW consists of creating an editor for each concept of a language. We developed editors for each concept to layout information in a logical manner. <xref ref-type="fig" rid="fig-5">Figure 5</xref> presents an instance of the Project concept rendered in the MPS projectional editor (<xref rid="ref-2" ref-type="bibr">Campagne, 2014</xref>). Project <bold>Properties</bold> are shown first because they need to be configured before a project can be executed (see <xref ref-type="fig" rid="fig-2">Fig. 2</xref>).</p>
      <sec>
        <title>Approach section</title>
        <p>This section makes it possible to define which approaches should be used to develop and evaluate models. It includes the description of the cross-validation parameters (i.e., number of folds and number of random repeats) and provides an interactive editor to configure feature selection methods. The figure shows for instance an approach section configured to select features with a T-test followed by SVM iterative feature selection (recursive feature elimination), a simpler selection by SVM weights (SVM Global) and no selection where all the features (Whole Chip) are used to train a model.</p>
        <p>The Approach section ends by showing the number of models. This number is calculated dynamically by considering the different feature selection, classification and parameters entered so far in the editor.</p>
      </sec>
      <sec>
        <title>Status section</title>
        <p>This section offers a button to refresh the status. Pressing this button scans the output directory to identify results directories generated after BDVal is executed. Each directory found is shown with the folder name and the number of models that were generated by the execution.</p>
      </sec>
      <sec>
        <title>Endpoints section</title>
        <p>This section makes it possible for the end-user to define one or more prediction endpoints, and the various possible categories for each endpoint. In the example shown, the Fusion endpoint models the TMPRSS2-ERG gene fusion fusion event described in <xref rid="ref-16" ref-type="bibr">Setlur et al. (2008)</xref>.</p>
      </sec>
      <sec>
        <title>Platform section</title>
        <p>This section indicates the location of the platform file in the GEO database soft format (<xref rid="ref-7" ref-type="bibr">Edgar, Domrachev &amp; Lash, 2002</xref>). The Dataset section was intentionally left blank to illustrate that the content of <xref ref-type="fig" rid="fig-5">Fig. 5</xref> is not a plain text output, but provides error highlighting (red text is automatically highlighted by the MPS editor because the data attributes are required and missing).</p>
        <p>We note that the LW user interface that we implemented is not limited to text. It includes user interface elements such as buttons that an end-user can press to perform some action, and can include images either static or dynamically generated at runtime. This is more evident in <xref ref-type="fig" rid="fig-6">Fig. 6</xref> where the histograms of the AUC and MCC statistics (estimated by cross-validation on the training set) are shown for a set of models developed with BDVal.</p>
      </sec>
    </sec>
    <sec>
      <title>Advantages of language workbench user interfaces</title>
      <sec>
        <title>UI consistency</title>
        <p>We found that a user interface for data analysis implemented in a LW (LW UI) provides an important advantage over traditional approaches: the LW UI provides a consistent experience to the end-user. Custom developed UIs need to be designed for consistency and periodically reviewed to make sure that end-users have a predictable experience throughout the UI (<xref rid="ref-15" ref-type="bibr">Nielsen, 1989</xref>).</p>
        <p>In this context, we note that the LW UI is defined using the <italic>jetbrains.mps.editor</italic> MPS platform language (see <xref rid="ref-2" ref-type="bibr">Campagne, 2014</xref>) and created from this definition by the LW platform. This mainly declarative approach to UI development ensures that most editing and navigation mechanisms provide a consistent user interface to the end-user.</p>
        <p>For instance, auto-completion to set the value of a reference to other nodes already defined in the Project is an example of such a consistent UI behavior. Auto-completion is implemented by the LW platform and always provide a consistent user experience (which needs to be learned once and is then used used many times across LW UIs). Behaviors that are implemented consistently also include: copy and paste, source control, navigation to a referenced node, find usage, undo/redo.</p>
        <p>We explain here the first two behaviors in more details:</p>
        <list list-type="simple" id="list-3">
          <list-item>
            <label>1.</label>
            <p>A Project or a part of a project can be copied and pasted by the end-user. This is useful to make copies of a project before customization to explore a different analysis scenario. For instance, in BDVal, users may copy the Sample Project provided with the tool and start customizing this project to a new dataset and assay platform. With traditional technology for constructing user interfaces, copy and paste would need to be implemented explicitly by the programmer who creates the user interface. In a command line environment, copying a project would require copying a file, but copying a part of a project would require understanding the file format(s) for the file(s) that describe this part of the project. The LW UI provides a uniform mechanism for copy and paste that does not require custom programming nor detailed understanding of the file formats affected by the operation.</p>
          </list-item>
          <list-item>
            <label>2.</label>
            <p>The LW UI provides a tight integration with a source control system (Git, Subversion and CVS are supported). This makes it possible for the end-user to put a BDVal Project under source control to track changes to the analysis configuration. This is an important feature to support reproducible data analysis that requires no special effort from the LW UI developer. <xref ref-type="fig" rid="fig-7">Figure 7</xref> provides an illustration of how the MPS LW visually identifies changes made to a model after a commit, shows differences, and provides the ability to revert specific changes to the model. These features are offered by the platform consistently across all editors for the language, and do not require any custom coding. In contrast, such a source control integration of the software usage would be difficult to achieve with a traditionally developed user application. Developers of such an application would need to capture the state of the application in a file format, write the state to a file, call a source control tool to commit or checkout the application state, and provide a projection from the differences reported by the source control tool, into user interface elements. Because such developments are nontrivial, few if any custom data applications with user interface offer such a tight integration with source control. On the contrary, command line analysis tools integrate more naturally with source control: they process files that their users can put and maintain under source control. Source control over files reports differences at the level of granularity of a line, whereas LW UIs can pinpoint changes at different levels of granularity: from the level of a model property (e.g., see <xref ref-type="fig" rid="fig-7">Fig. 7</xref>), all the way down to the insertion or deletion of a node of a model (e.g., the Project node for instance). Indeed, LW UIs track changes at the logical level established when designing the concepts of the analysis system. For instance, in BDVal for MPS, adding a feature selection approach to an analysis will record a single change to the Project, which will appear clearly as a change in feature selection when looking at revisions in the Difference tool. When the project is generated, this single change may affect several generated files, which if they were tracked in source control at their physical level would make it harder to recognize that these line-level changes are related.</p>
          </list-item>
        </list>
        <fig id="fig-7" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.7717/peerj.800/fig-7</object-id>
          <label>Figure 7</label>
          <caption>
            <title>Seamless integration with source control.</title>
          </caption>
          <graphic xlink:href="peerj-03-800-g007"/>
        </fig>
      </sec>
      <sec>
        <title>Language composition</title>
        <p>A key feature of the MPS LW is to support seamless language composition (see <xref rid="ref-24" ref-type="bibr">Voelter &amp; Solomatov (2010)</xref> and <xref rid="ref-2" ref-type="bibr">Campagne (2014)</xref>, Chapter 2). This feature is particularly useful in a data analysis context because the concepts that represent methods or datasets can be extended by the end-user very easily. For instance, in the context of BDVal, assume an end-user wanted to test the system with a number of random datasets, constructed with varying numbers of subjects and features with random values. With a custom user interface, it would not be possible to change the user interface of the tool to make it easier to configure such random datasets. Using the command line, it would be necessary to create simulated random datasets with the appropriate number of subjects and features, store these in separate files, and configure the project to use these new dataset files.</p>
        <p>In a LW UI, we are able to create a new language that extends the BDVal language. This means that it is possible to define concepts and associated editors that provide different behavior, customized by the end-user. Assume we create such a language, and define the concept RandomDataset in this new language. We can declare that this concept extends Dataset (defined in the <uri xlink:href="http:org.campagnelab.BDVal">org.campagnelab.BDVal</uri> language). We can then define two attributes to encode the number of subjects and samples that the random dataset should have. In the RandomDataset editor, we provide the means to edit these parameters, and a button to create the dataset. The button would be pressed by the end user after he/she has configured the parameters. We can then define a behavior method in the RandomDataset concept that will construct the dataset file and configure the attributes of the super-concept. This behavior will be executed when the button is clicked. When this new language is imported into a model alongside the BDVal language, the end-user is able to create a RandomDataset instance in a BDVal Project, wherever it was previously possible to create a standard Dataset, and use it to configure random datasets. This extension mechanism does not require any modification to the original BDVal language. This simple scenario illustrates how language composition can be useful for data analysis.</p>
        <p>Another way to extend the LW UI is to create new intentions for an existing language. Briefly, intentions are context dependent actions that the end user can activate after positioning the cursor over some specific concept instance (see <xref rid="ref-18" ref-type="bibr">Simi &amp; Campagne (2014)</xref> for illustrations, or <xref rid="ref-2" ref-type="bibr">Campagne, 2014</xref> Chapter 9). The MPS LW allows to define new intentions for concepts of another language. This feature can be used by a data analyst to automate common configurations. For instance, the BDVal language provides an intention that configures a Project with the location of the Sample data files distributed with BDVal. An analyst could define a language that provides intentions suitable to configure a BDVal project with specific analysis protocols (e.g., SVM only model construction, with predefined number of features).</p>
      </sec>
      <sec>
        <title>Portability</title>
        <p>A LW UI is portable because it runs on the MPS LW, which is implemented in Java, and is available for Windows, Linux and Mac OS operating systems. A given analysis tool could limit portability to a specific platform. However, BDVal is also implemented in Java and the Java-based Ant build system, and will run on the same set of platforms as the MPS platform.</p>
      </sec>
      <sec>
        <title>Distribution as language plugin</title>
        <p>We have created an MPS build script that generates an MPS plugin for the BDVal language. This plugin was uploaded to the LW plugin repository and has therefore become available to any user of the MPS platform. The MPS LW provides a convenient user interface to manage the discovery and installation of plugins. Different versions of a plugin can be offered and the user of a previous version is notified when a new version of an installed plugin has become available in the pugin repository. In a way, the MPS plugin repository can serve a similar function to the Galaxy ToolShed (<xref rid="ref-1" ref-type="bibr">Blankenberg et al., 2014</xref>).</p>
        <p>While language plugins can depend on other plugins, it is currently not possible to specify a range of compatible versions for the target of a language dependency declaration (for instance, when specifying that the BDVal plugin depends on the XChart plugin, we are not able to indicate which range of versions of XChart is compatible with a given version of the BDVal plugin). This drawback is expected to limit the ability to evolve languages iteratively while maintaining compatibility with existing deployments.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>To our knowledge, our study is the first to propose and prototype the use of a Language Workbench to facilitate data analysis. Language Workbench technology has been developed in the context of general programming, and has been traditionally applied to developing programming languages that generate executable code. In this report, we have shown that the same technology can be successfully used to model the analysis process for biomarker development. Biomarker model development is an example of a complex biological data analysis that can benefit from high-level abstractions. Indeed, this activity requires using validation protocols such as cross-validation (<xref rid="ref-20" ref-type="bibr">Stone, 1974</xref>) or bootstrap (<xref rid="ref-8" ref-type="bibr">Efron &amp; Tibshirani, 1997</xref>), and fully embedding feature selection in the cross-validation loop (or in the boostrap procedure) in order to avoid selection bias (<xref rid="ref-22" ref-type="bibr">Varma &amp; Simon, 2006</xref>). Testing multiple feature selection approaches, machine learning methods, or parameters of these methods often produces tens of thousands of trained models across splits of cross-validation and parameter choices. The large number of models and intermediate files (such as lists of features used to train the models) produced in these studies can quickly become a daunting data management challenge, even for analysts who know enough programming to automate analyses with a language such as R, Python or Java. The LW UI that we have described in this report facilitates the configuration of complete biomarker model projects, which can be executed to produce a large number of models in a single run. All models and intermediate files are automatically organized and, after completing, the LW UI displays performance evaluation statistics. The LW UI requires no programming experience and helps represent succinct solutions to biomarker development problems.</p>
    <p>The idea of using a language workbench for data visualization (a component of data analysis) is not completely new. We identified precursors of this idea as early as 1975. For instance, a previous attempt was described as DDA (<xref rid="ref-11" ref-type="bibr">Guthery, 1976</xref>), a system designed to help with graphical data analysis. The DDA prototype was built with the LANG-PACK language design system (<xref rid="ref-12" ref-type="bibr">Heindel &amp; Roberto, 1975</xref>). While a language design system, LANG-PACK was not a LW in the modern sense because it was based on parsing technology and therefore did not avoid the issue of ambiguity during language composition. While using similar wording to the present manuscript (i.e.,“language workbench,” “interactive graphical data analysis techniques”), the DDA manuscript described a system to help draw lines on a screen for data visualization, which is a task orders of magnitude simpler than the biomarker data analysis task that we use as a motivating example in the present study.</p>
    <p>We have also been conducting a large-scale test of the idea of using a language workbench for data analysis in related projects. The NYoSh analysis workbench, a data analysis platform constructed with the MPS language workbench, focuses on interactive analysis of high-throughput sequencing data and will be presented in detail in another article (<uri xlink:href="http://workbench.campagnelab.org">http://workbench.campagnelab.org</uri>, Simi and Campagne, manuscript under preparation). The MetaR project (<uri xlink:href="http://metaR.campagnelab.org">http://metaR.campagnelab.org</uri>) is a set of composable languages that help users create heatmaps from tables of data, or prepare other visualizations. Analyses written with MetaR generate to R code that can be executed directly within the MPS language workbench (Simi and Campagne, 2015, unpublished).</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>In this manuscript, we propose that Language Workbench technology can be used to develop interactive user interfaces to help scientists with data analysis. We tested this idea by developing a prototype of a Data Analysis Language Workbench User Interface (DALWUI). This prototype was designed to help end-users develop and evaluate biomarker models from high-throughput datasets. This manuscript presented this prototype and briefly discussed the advantages of LW technology compared to custom graphical user interface development with traditional programming technology, or compared to command line driven data analysis.</p>
    <p>Based on this experience, we propose that LW technology can be used to create a new generation of computational environment for data analysis and expect that these environments will yield key advantages for many data analysts, from the computational expert to the biomedical researcher with limited computational experience.</p>
  </sec>
</body>
<back>
  <ack>
    <p>The authors thank the developers of the Jetbrains MPS Language Workbench. We thank Manuele Simi for discussions and feedback on this manuscript. We thank the reviewers of this manuscript for constructive criticisms that helped clarify and strengthen this report.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn id="conflict-1" fn-type="conflict">
        <p>Fabien Campagne serves as an Academic Editor for PeerJ. He is the author of the book “The MPS Language Workbench, Volume I” and receives royalties from the sale of this book.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn id="contribution-1" fn-type="con">
        <p><xref ref-type="contrib" rid="author-1">Victoria M. Benson</xref> performed the experiments, reviewed drafts of the paper.</p>
      </fn>
      <fn id="contribution-2" fn-type="con">
        <p><xref ref-type="contrib" rid="author-2">Fabien Campagne</xref> conceived and designed the experiments, contributed reagents/materials/analysis tools, wrote the paper, prepared figures and/or tables, reviewed drafts of the paper.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Blankenberg et al. (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blankenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Von Kuster</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Bouvier</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Afgan</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Stoler</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nekrutenko</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Dissemination of scientific software with galaxy toolshed</article-title>
        <source>Genome Biology</source>
        <issue>2</issue>
        <year>2014</year>
        <volume>15</volume>
        <fpage>403</fpage>
        <pub-id pub-id-type="doi">10.1186/gb4161</pub-id>
        <pub-id pub-id-type="pmid">25001293</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Campagne (2014)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <source>The MPS language workbench</source>
        <volume>Vol. I</volume>
        <year>2014</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Fabien Campagne</publisher-name>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Campagne et al. (1999)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Jestin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Reversat</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bernassau</surname>
            <given-names>J-M</given-names>
          </name>
          <name>
            <surname>Maigret</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Visualisation and integration of g protein-coupled receptor related information help the modelling: description and applications of the viseur program</article-title>
        <source>Journal of Computer-Aided Molecular Design</source>
        <issue>6</issue>
        <year>1999</year>
        <volume>13</volume>
        <fpage>625</fpage>
        <lpage>643</lpage>
        <pub-id pub-id-type="doi">10.1023/A:1008170432484</pub-id>
        <pub-id pub-id-type="pmid">10584220</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Chambwe &amp; Campagne (2010)</label>
      <element-citation publication-type="other">
        <person-group>
          <name>
            <surname>Chambwe</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <year>2010</year>
        <comment>The bdval user manual, version 1.2. <italic>Available at <uri xlink:href="http://campagnelab.org/software/bdval/bdval-user-manual/">http://campagnelab.org/software/bdval/bdval-user-manual/</uri></italic></comment>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Deng &amp; Campagne (2010)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Deng</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Introduction to the development and validation of predictive biomarker models from high-throughput data sets</article-title>
        <source>Statistical methods in molecular biology</source>
        <year>2010</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>435</fpage>
        <lpage>470</lpage>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>Dorff et al. (2010)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dorff</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Chambwe</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Srdanovic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Bdval: reproducible large-scale predictive model development and validation in high-throughput datasets</article-title>
        <source>Bioinformatics</source>
        <issue>19</issue>
        <year>2010</year>
        <volume>26</volume>
        <fpage>2472</fpage>
        <lpage>2473</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq463</pub-id>
        <pub-id pub-id-type="pmid">20702395</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Edgar, Domrachev &amp; Lash (2002)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Domrachev</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lash</surname>
            <given-names>AE</given-names>
          </name>
        </person-group>
        <article-title>Gene expression omnibus: Ncbi gene expression and hybridization array data repository</article-title>
        <source>Nucleic Acids Research</source>
        <issue>1</issue>
        <year>2002</year>
        <volume>30</volume>
        <fpage>207</fpage>
        <lpage>210</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/30.1.207</pub-id>
        <pub-id pub-id-type="pmid">11752295</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Efron &amp; Tibshirani (1997)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Efron</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Tibshirani</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Improvements on cross-validation: the 632+ bootstrap method</article-title>
        <source>Journal of the American Statistical Association</source>
        <year>1997</year>
        <volume>92</volume>
        <fpage>548</fpage>
        <lpage>560</lpage>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Erdweg et al. (2013)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Erdweg</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Van der Storm</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Völter</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boersma</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bosman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Cook</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Gerritsen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hulshout</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kelly</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Loh</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Konat</surname>
            <given-names>GDP</given-names>
          </name>
          <name>
            <surname>Molina</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Palatnik</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pohjonen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Schindler</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Schindler</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Solmi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Vergu</surname>
            <given-names>VA</given-names>
          </name>
          <name>
            <surname>Visser</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>van der Vlist</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wachsmuth</surname>
            <given-names>GH</given-names>
          </name>
          <name>
            <surname>van der Woning</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>The state of the art in language workbenches</article-title>
        <source>Software language engineering</source>
        <year>2013</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>197</fpage>
        <lpage>217</lpage>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Eysholdt &amp; Behrens (2010)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Eysholdt</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Behrens</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Xtext: implement your language faster than the quick and dirty way</article-title>
        <conf-name>Proceedings of the ACM international conference companion on object oriented programming systems languages and applications companion</conf-name>
        <year>2010</year>
        <conf-sponsor>Association for Computer Machinery</conf-sponsor>
        <conf-loc>New York</conf-loc>
        <fpage>307</fpage>
        <lpage>309</lpage>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Guthery (1976)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guthery</surname>
            <given-names>SB</given-names>
          </name>
        </person-group>
        <article-title>Dda: an interactive and extensible language for data display and analysis</article-title>
        <source>ACM Sigplan Notices</source>
        <issue>6</issue>
        <year>1976</year>
        <volume>11</volume>
        <fpage>24</fpage>
        <lpage>31</lpage>
        <pub-id pub-id-type="doi">10.1145/957199.804728</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Heindel &amp; Roberto (1975)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Heindel</surname>
            <given-names>LE</given-names>
          </name>
          <name>
            <surname>Roberto</surname>
            <given-names>JT</given-names>
          </name>
        </person-group>
        <source>Lang-pak, an interactive language design system</source>
        <year>1975</year>
        <publisher-loc>Amsterdam</publisher-loc>
        <publisher-name>Elsevier</publisher-name>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Kats &amp; Visser (2010)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kats</surname>
            <given-names>LC</given-names>
          </name>
          <name>
            <surname>Visser</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>The spoofax language workbench: rules for declarative specification of languages and ides</article-title>
        <source>ACM sigplan notices</source>
        <volume>vol. 45</volume>
        <year>2010</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Association for Computer Machinery</publisher-name>
        <fpage>444</fpage>
        <lpage>463</lpage>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Krogh et al. (2001)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Larsson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Von Heijne</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sonnhammer</surname>
            <given-names>EL</given-names>
          </name>
        </person-group>
        <article-title>Predicting transmembrane protein topology with a hidden markov model: application to complete genomes</article-title>
        <source>Journal of Molecular Biology</source>
        <issue>3</issue>
        <year>2001</year>
        <volume>305</volume>
        <fpage>567</fpage>
        <lpage>580</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.2000.4315</pub-id>
        <pub-id pub-id-type="pmid">11152613</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>Nielsen (1989)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nielsen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Coordinating user interfaces for consistency</article-title>
        <source>ACM Sigchi Bulletin</source>
        <issue>3</issue>
        <year>1989</year>
        <volume>20</volume>
        <fpage>63</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1145/67900.67910</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>Setlur et al. (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Setlur</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Mertz</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Hoshida</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Demichelis</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Lupien</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Perner</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sboner</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pawitan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Andrén</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Adami</surname>
            <given-names>H-O</given-names>
          </name>
          <name>
            <surname>Calza</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chinnaiyan</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Rhodes</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Tomlins</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fall</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Mucci</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Kantoff</surname>
            <given-names>PW</given-names>
          </name>
          <name>
            <surname>Stampfer</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Andersson</surname>
            <given-names>S-O</given-names>
          </name>
          <name>
            <surname>Varenhorst</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Johansson</surname>
            <given-names>J-E</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Golub</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>Estrogen-dependent signaling in a molecularly distinct subclass of aggressive prostate cancer</article-title>
        <source>Journal of the National Cancer Institute</source>
        <issue>11</issue>
        <year>2008</year>
        <volume>100</volume>
        <fpage>815</fpage>
        <lpage>825</lpage>
        <pub-id pub-id-type="doi">10.1093/jnci/djn150</pub-id>
        <pub-id pub-id-type="pmid">18505969</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Shi et al. (2010)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shi</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Campbell</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>WD</given-names>
          </name>
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Wen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Walker</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Su</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>T-M</given-names>
          </name>
          <name>
            <surname>Goodsaid</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>Pusztai</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Shaughnessy</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Oberthuer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Paules</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Fielden</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Barlogie</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Fischer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Furlanello</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Gallas</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Megherbi</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Symmans</surname>
            <given-names>WF</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bitter</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Brors</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bushel</surname>
            <given-names>PR</given-names>
          </name>
          <name>
            <surname>Bylesjo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Chou</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Davison</surname>
            <given-names>TS</given-names>
          </name>
          <name>
            <surname>Delorenzi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Deng</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Devanarayan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Dix</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Dopazo</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dorff</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Elloumi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Gonzaludo</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hess</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>Hong</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Huan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Judson</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Juraeva</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lababidi</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lambert</surname>
            <given-names>CG</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lobenhofer</surname>
            <given-names>EK</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>McCall</surname>
            <given-names>MN</given-names>
          </name>
          <name>
            <surname>Nikolsky</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Pennello</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Perkins</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Philip</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Popovici</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Price</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Qian</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Scherer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Sung</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thierry-Mieg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Thierry-Mieg</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thodima</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Trygg</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Vishnuvajjala</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Yousef</surname>
            <given-names>WA</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhong</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arasappan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bao</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Berthold</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Brennan</surname>
            <given-names>RJ</given-names>
          </name>
          <name>
            <surname>Buness</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Catalano</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Cui</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Czika</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Demichelis</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Deng</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dosymbekov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Eils</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Fostel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fulmer-Smentek</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fuscoe</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Gatto</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Halbert</surname>
            <given-names>DN</given-names>
          </name>
          <name>
            <surname>Han</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Harris</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Hatzis</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Herman</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Jurman</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kahlert</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Khuder</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Kohl</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Q-Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Meng</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Madera</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Martinez-Murillo</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Medina</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Meehan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Miclaus</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Moffitt</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Montaner</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Mukherjee</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Mulligan</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Neville</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Nikolskaya</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ning</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Page</surname>
            <given-names>GP</given-names>
          </name>
          <name>
            <surname>Parker</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Parry</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>RL</given-names>
          </name>
          <name>
            <surname>Phan</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Quanz</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ren</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Riccadonna</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Roter</surname>
            <given-names>AH</given-names>
          </name>
          <name>
            <surname>Samuelson</surname>
            <given-names>FW</given-names>
          </name>
          <name>
            <surname>Schumacher</surname>
            <given-names>MM</given-names>
          </name>
          <name>
            <surname>Shambaugh</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Shippy</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Si</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Smalter</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sotiriou</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Soukup</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Staedtler</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Steiner</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Stokes</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Tan</surname>
            <given-names>P-Y</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Tezak</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Thorn</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Tsyganova</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Turpaz</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Vega</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Visintainer</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>von Frese</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Westermann</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Willey</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Woods</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Puri</surname>
            <given-names>RK</given-names>
          </name>
          <name>
            <surname>Scherf</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Tong</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Wolfinger</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>The microarray quality control (maqc)-ii study of common practices for the development and validation of microarray-based predictive models</article-title>
        <source>Nature Biotechnology</source>
        <issue>EPFL-ARTICLE-172455</issue>
        <year>2010</year>
        <volume>28</volume>
        <fpage>827</fpage>
        <lpage>U109</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1665</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Simi &amp; Campagne (2014)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Campagne</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Composable languages for bioinformatics: the nyosh experiment</article-title>
        <source>PeerJ</source>
        <year>2014</year>
        <volume>2</volume>
        <elocation-id>e800</elocation-id>
        <pub-id pub-id-type="doi">10.7717/peerj.241</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Simonyi (1995)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Simonyi</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>The death of computer languages, the birth of intentional programming</article-title>
        <source>Technical report: #MSR-TR-95-52</source>
        <publisher-loc>Redmond</publisher-loc>
        <publisher-name>Microsoft Corporation</publisher-name>
        <year>1995</year>
        <fpage>17</fpage>
        <lpage>18</lpage>
        <comment>
          <italic>Available at <uri xlink:href="http://research.microsoft.com/pubs/69540/tr-95-52.ps">http://research.microsoft.com/pubs/69540/tr-95-52.ps</uri></italic>
        </comment>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Stone (1974)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stone</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Cross-validatory choice and assessment of statistical predictions</article-title>
        <source>Journal of the Royal Statistical Society. Series B (Methodological)</source>
        <year>1974</year>
        <volume>36</volume>
        <fpage>111</fpage>
        <lpage>174</lpage>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Thompson et al. (1997)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Gibson</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Plewniak</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Jeanmougin</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Higgins</surname>
            <given-names>DG</given-names>
          </name>
        </person-group>
        <article-title>The clustal_x windows interface: flexible strategies for multiple sequence alignment aided by quality analysis tools</article-title>
        <source>Nucleic Acids Research</source>
        <issue>24</issue>
        <year>1997</year>
        <volume>25</volume>
        <fpage>4876</fpage>
        <lpage>4882</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/25.24.4876</pub-id>
        <pub-id pub-id-type="pmid">9396791</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Varma &amp; Simon (2006)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Varma</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Simon</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Bias in error estimation when using cross-validation for model selection</article-title>
        <source>BMC Bioinformatics</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>91</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-7-91</pub-id>
        <pub-id pub-id-type="pmid">16504092</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Voelter et al. (2013)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Voelter</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Benz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dietrich</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Engelmann</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Helander</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kats</surname>
            <given-names>LC</given-names>
          </name>
          <name>
            <surname>Visser</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Wachsmuth</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>DSL engineering-designing, implementing and using domain-specific languages</source>
        <year>2013</year>
        <comment>
          <italic>Available at <uri xlink:href="http://dslbook.org">http://dslbook.org</uri></italic>
        </comment>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Voelter &amp; Solomatov (2010)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Voelter</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Solomatov</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Language modularization and composition with projectional language workbenches illustrated with mps</article-title>
        <source>Software Language Engineering</source>
        <year>2010</year>
        <fpage>16</fpage>
        <comment>
          <italic>Available at <uri xlink:href="http://voelter.de/data/pub/Voelter-GTTSE-MPS.pdf">http://voelter.de/data/pub/Voelter-GTTSE-MPS.pdf</uri></italic>
        </comment>
      </element-citation>
    </ref>
  </ref-list>
</back>

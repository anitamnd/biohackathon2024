<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8136008</article-id>
    <article-id pub-id-type="pmid">33961033</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btab251</article-id>
    <article-id pub-id-type="publisher-id">btab251</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Structural Bioinformatics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>VisuaLife: library for interactive visualization in rich web applications</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Kryś</surname>
          <given-names>Justyna D</given-names>
        </name>
        <aff><institution>Faculty of Chemistry, Biological and Chemical Research Center, University of Warsaw</institution>, Warsaw 02-093, <country country="PL">Poland</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2260-2083</contrib-id>
        <name>
          <surname>Gront</surname>
          <given-names>Dominik</given-names>
        </name>
        <xref rid="btab251-cor1" ref-type="corresp"/>
        <aff><institution>Faculty of Chemistry, Biological and Chemical Research Center, University of Warsaw</institution>, Warsaw 02-093, <country country="PL">Poland</country></aff>
        <!--dgront@chem.uw.edu.pl-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btab251-cor1">To whom correspondence should be addressed. <email>dgront@chem.uw.edu.pl</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>10</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-05-07">
      <day>07</day>
      <month>5</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>07</day>
      <month>5</month>
      <year>2021</year>
    </pub-date>
    <volume>37</volume>
    <issue>20</issue>
    <fpage>3662</fpage>
    <lpage>3663</lpage>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>2</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>24</day>
        <month>3</month>
        <year>2021</year>
      </date>
      <date date-type="editorial-decision">
        <day>15</day>
        <month>4</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>19</day>
        <month>4</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btab251.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Visualization is a powerful tool to analyze, understand and present big data. Computational biology, bioinformatics and molecular modeling require dedicated tools, tailored to very complex, highly multidimensional data. Over the recent years, numerous tools have been developed for online presentation, but new challenges like the COVID-19 pandemic require new libraries which will guarantee fast development of online tools for a better understanding of biomedical data/results.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>VisuaLife is a Python library that provides a new approach to visualization in a web browser. It offers 2D and 3D plotting capabilities as well as widgets designed to display the most common biological data types: nucleotide or protein sequences, 3D biomolecular structures and multiple sequence alignments. Components provided by the VisuaLife library can be assembled into a web application to create an analysis tool tailored to provide multidimensional analysis of a specific research problem. VisuaLife, to our best knowledge, is the most modern solution that allows one to implement such a client-side interactivity in Python.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>The git repository of the library is hosted at BitBucket: <ext-link xlink:href="https://bitbucket.org/dgront/visualife/" ext-link-type="uri">https://bitbucket.org/dgront/visualife/</ext-link>. PyPI distribution is also provided for MacOS and Linux. While basic examples are provided in the supporting materials, the full documentation is available at ReadTheDocs website: <ext-link xlink:href="https://visualife.readthedocs.io/" ext-link-type="uri">https://visualife.readthedocs.io/</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Polish National Science Centre</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018/29/B/ST6/01989</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="2"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Visualization plays a very important role in science. This is especially true in the case of biological observations, which typically are very complex and highly multidimensional. In recent years, more and more bioinformatics tools have been devised to present data online, directly from a cloud to a web browser. Such solutions, termed <italic toggle="yes">rich</italic> or <italic toggle="yes">progressive web applications</italic> require neither installation of any additional programs nor downloading data to a client machine. A number of visualization toolkits have been published recently, such as Bio.js: <xref rid="btab251-B5" ref-type="bibr">Yachdav <italic toggle="yes">et al.</italic> (2015</xref>), GenomeSpace: <xref rid="btab251-B3" ref-type="bibr">Qu <italic toggle="yes">et al.</italic> (2016</xref>) and many others <xref rid="btab251-B4" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> (2015</xref>). All these toolkits are written in JavaScript, as currently, this is the only language that ensures interactivity in a web browser. JavaScript, however, is rarely used in a broad academic research. The use of such dedicated frameworks can be very helpful however their adaptation, customization and merging into a single web application is still a highly non-trivial task that requires an expert knowledge that is generally not available to a typical researcher.</p>
    <p>On the other hand, Python has emerged as an extremely popular language in data science, machine learning and general-purpose scripting. Therefore, we decided to develop a software library, implemented in Python, that will allow visualization of biological data and lower the barrier of making interactive presentations without the need to write any JavaScript code (although JavaScript can be very easily combined with VisuaLife).</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Implementation</title>
      <p>VisuaLife is an object-oriented Python library released under the Apache2 license. The library has been designed to work both on the server-side (e.g. on a desktop computer, in a terminal, etc.) and on the client-side (i.e. in a web browser, as a part of an HTML page). Scripts written for one of the two environments are nearly identical to those working in the other. To achieve that, we implemented a hierarchy of viewports, i.e. objects responsible for rendering graphics. Scripts that run in a terminal use SVGViewport and produce vector graphics in SVG file format; scripts that are executed on a client (i.e. in a web browser) use HtmlViewport. Raster graphic is displayed in a web browser window with CanvasViewport. All the viewports share the same interface and provide the same methods to draw basic shapes as like lines, circles, rectangles, etc. VisuaLife scripts executed by a web browser use Brython (<ext-link xlink:href="https://brython.info" ext-link-type="uri">https://brython.info</ext-link>) to seamlessly translate Python to JavaScript. Brython provides methods to access elements on a webpage so a user can, e.g. change styles or bind events to every element that has a known unique identifier. Therefore, the vector graphics created by VisuaLife can be easily made interactive by adding the appropriate Python code. VisuaLife can read several file formats commonly used in bioinformatics and molecular modeling like MOL2, HSSP, PDB, FASTA, MSF or ALN. This I/O functionality can be used both by local scripts to load input files from a disk and in a web browser when an input file is dropped on a web application window.</p>
    </sec>
    <sec>
      <title>2.2 Widgets</title>
      <p>Widgets are interactive web page elements that are used to display given data in a browser, such as biomolecular sequences, structures and their alignments. From a programmer’s perspective, a widget is an object of a given class; the API of that class (i.e. its methods) provides the necessary functionality to operate on given data. More than one object of the same class (e.g. protein sequences displayed as SequenceViewer instances) can be displayed by a single page; objects are then identified by the ID of the enclosing DIV element of that page. A context drop-down menu, which may be attached to a widget, allows a user to manually rather than programmatically control the widget’s behavior. Besides displaying biological data, VisuaLife also provides a few general-use widgets. All of them have been listed in <xref rid="btab251-T1" ref-type="table">Table 1</xref>.</p>
      <fig position="float" id="btab251-F1">
        <label>Fig. 1</label>
        <caption>
          <p>Protein Inspector application with VisuaLife widgets: SequenceViewer, SecondaryStructureViewer, StructureViewer, TooltipWidget and AjaxSender. Interactivity that binds these widgets is included in the HTML page as Python functions</p>
        </caption>
        <graphic xlink:href="btab251f1" position="float"/>
      </fig>
      <table-wrap position="float" id="btab251-T1">
        <label>Table 1</label>
        <caption>
          <p>Widgets available from the VisuaLife library</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">General-purpose widgets</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> FileReaderWidget</monospace>
              </td>
              <td rowspan="1" colspan="1">Reads a file on drag and drop action</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> TableWidget</monospace>
              </td>
              <td rowspan="1" colspan="1">Creates a table</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"> <monospace>TooltipWidget</monospace></td>
              <td rowspan="1" colspan="1">Shows tooltip on a mouseover event</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"> <monospace>AjaxCommunication</monospace></td>
              <td rowspan="1" colspan="1">Used for client-server communication</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Data-specific widgets</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> SequenceViewer</monospace>
              </td>
              <td rowspan="1" colspan="1">Displays nucleic acid or protein sequence</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> SecondaryStructure Viewer</monospace>
              </td>
              <td rowspan="1" colspan="1">Displays protein secondary structure</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> SequenceFeaturesBar</monospace>
              </td>
              <td rowspan="1" colspan="1">Displays annotations along a sequence</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> MSAViewer</monospace>
              </td>
              <td rowspan="1" colspan="1">Displays multiple sequence alignment</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace> StructureViewer</monospace>
              </td>
              <td rowspan="1" colspan="1">Displays 3D structure using NGL library</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>2.3 Distribution and documentation</title>
      <p>The repository with the source code is publicly available on BitBucket. PyPI distribution is also provided for MacOS and Linux. Documentation, which can be found on the visualife.readthedocs.io website, provides a detailed description on installation and use of the software, API documentation, tutorials and a gallery of examples. Every example in that section is a stand-alone HTML page that displays graphical content; the majority of them are interactive. The examples have been also published on the CodePen website where one can experiment with them without any installation required. Finally, we provide a web page with an interactive console with the VisuaLife library included that serves as a library testing ground. Along with VisuaLife, we also built a simple <italic toggle="yes">Protein Inspector</italic> example application that has been described in details in the Tutorial section of VisuaLife documentation. The application displays a 3D structure, sequence and secondary structure of a chosen protein. Interactivity between these three widgets allows a user to analyze all these aspects at one time. All data are downloaded from the Internet (<ext-link xlink:href="https://www.rcsb.org" ext-link-type="uri">https://www.rcsb.org</ext-link> and <ext-link xlink:href="https://www.ebi.ac.uk/" ext-link-type="uri">https://www.ebi.ac.uk/</ext-link>) with REST services.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Conclusion</title>
    <p>In this contribution, we present a library of widgets: web page components that are devised to interactively present biological data online. Plots and widgets can be easily combined into a web application tailored to the user’s data. Interactivity, e.g. respective callback methods as well as program logic that glues these components into a web application can be easily achieved by adding simple Python code to a web page. We believe our choice of programming language will make a big difference as online visualization will no longer be restricted to JavaScript experts. The server-side part of a web application can also be implemented in Python, e.g. with the help of bioinformatics frameworks like Biopython: <xref rid="btab251-B1" ref-type="bibr">Chapman and Chang (2000</xref>) or Bioshell <xref rid="btab251-B2" ref-type="bibr">Macnar <italic toggle="yes">et al.</italic> (2020</xref>). Given the widespread popularity of the Python language among life scientists we hope VisuaLife will become a very popular tool.</p>
    <p><italic toggle="yes">Financial Support</italic>: This work was supported by the Polish National Science Centre (NCN) 2018/29/B/ST6/01989.</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btab251_Supplementary_Data</label>
      <media xlink:href="btab251_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btab251-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chapman</surname><given-names>B.</given-names></string-name>, <string-name><surname>Chang</surname><given-names>J.</given-names></string-name></person-group> (<year>2000</year>) <article-title>Biopython: python tools for computational biology</article-title>. <source>SIGBIO Newsl</source>., <volume>20</volume>, <fpage>15</fpage>–<lpage>19</lpage>.</mixed-citation>
    </ref>
    <ref id="btab251-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Macnar</surname><given-names>J.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>BioShell 3.0: library for processing structural biology data</article-title>. <source>Biomolecules</source>, <volume>10</volume>, <fpage>461</fpage>.<pub-id pub-id-type="pmid">32188163</pub-id></mixed-citation>
    </ref>
    <ref id="btab251-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Qu</surname><given-names>K.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Integrative genomic analysis by interoperation of bioinformatics tools in GenomeSpace</article-title>. <source>Nat. Methods</source>, <volume>13</volume>, <fpage>245</fpage>–<lpage>247</lpage>.<pub-id pub-id-type="pmid">26780094</pub-id></mixed-citation>
    </ref>
    <ref id="btab251-B4">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) Open source libraries and frameworks for biological data visualisation: a guide for developers. Proteomics, 15, 1356-74</mixed-citation>
    </ref>
    <ref id="btab251-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yachdav</surname><given-names>G.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Anatomy of BioJS, an open source community for the life sciences</article-title>. <source>eLife</source>, <volume>4</volume>, <fpage>1</fpage>–<lpage>7</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

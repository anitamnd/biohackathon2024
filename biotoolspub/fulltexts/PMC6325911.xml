<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">G3 (Bethesda)</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genetics</journal-id>
    <journal-id journal-id-type="hwp">G3: Genes, Genomes, Genetics</journal-id>
    <journal-id journal-id-type="pmc">G3: Genes, Genomes, Genetics</journal-id>
    <journal-id journal-id-type="publisher-id">G3: Genes, Genomes, Genetics</journal-id>
    <journal-title-group>
      <journal-title>G3: Genes|Genomes|Genetics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2160-1836</issn>
    <publisher>
      <publisher-name>Genetics Society of America</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6325911</article-id>
    <article-id pub-id-type="publisher-id">GGG_200908</article-id>
    <article-id pub-id-type="doi">10.1534/g3.118.200908</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software and Data Resources</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>OCMA: Fast, Memory-Efficient Factorization of Prohibitively Large Relationship Matrices</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Xiong</surname>
          <given-names>Zhi</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Qingrun</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">
          <sup>†</sup>
        </xref>
        <xref ref-type="aff" rid="aff3">
          <sup>‡</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Platt</surname>
          <given-names>Alexander</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3783-4781</contrib-id>
        <xref ref-type="aff" rid="aff4">
          <sup>§</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Liao</surname>
          <given-names>Wenyuan</given-names>
        </name>
        <xref ref-type="aff" rid="aff5">**</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shi</surname>
          <given-names>Xinghua</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-4662-3177</contrib-id>
        <xref ref-type="aff" rid="aff6">
          <sup>††</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>de los Campos</surname>
          <given-names>Gustavo</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5692-7129</contrib-id>
        <xref ref-type="aff" rid="aff7">
          <sup>‡‡</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Long</surname>
          <given-names>Quan</given-names>
        </name>
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3795-1873</contrib-id>
        <xref ref-type="aff" rid="aff2">
          <sup>†</sup>
        </xref>
        <xref ref-type="aff" rid="aff8">
          <sup>§§</sup>
        </xref>
        <xref ref-type="aff" rid="aff5">**</xref>
        <xref ref-type="aff" rid="aff9">***</xref>
        <xref ref-type="corresp" rid="cor1">
          <sup>1</sup>
        </xref>
      </contrib>
      <aff id="aff1"><label>*</label>Department of Computer Science, Shantou University, China</aff>
      <aff id="aff2"><label>†</label>Department of Biochemistry and Molecular Biology, University of Calgary, Canada</aff>
      <aff id="aff3"><label>‡</label>Annie Charbonneau Cancer Institute, University of Calgary, Canada</aff>
      <aff id="aff4"><label>§</label>Center for Computational Genetics and Genomics, Temple University, USA</aff>
      <aff id="aff5"><label>**</label>Department of Mathematics and Statistics, University of Calgary, Canada</aff>
      <aff id="aff6"><label>††</label>Department of Bioinformatics and Genomics, University of North Carolina at Charlotte, USA</aff>
      <aff id="aff7"><label>‡‡</label>Department of Epidemiology &amp; Biostatistics, Statistics &amp; Probability and Institute for Quantitative Health Science and Engineering, Michigan State University, USA</aff>
      <aff id="aff8"><label>§§</label>Department of Medical Genetics, University of Calgary, Canada</aff>
      <aff id="aff9"><label>***</label>Alberta Childrens Hospital Research Institute, University of Calgary, Canada</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>1</label>Correspondence should be addressed to 3330 Hospital Drive NW, Room 1173, Health Sciences, CentreCalgary, AB T2N 4N1 Canada, E-mail: <email>quan.long@ucalgary.ca</email></corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>27</day>
      <month>11</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <volume>9</volume>
    <issue>1</issue>
    <fpage>13</fpage>
    <lpage>19</lpage>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>10</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>11</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2019 by the Genetics Society of America</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:title="pdf" xlink:type="simple" xlink:href="13.pdf"/>
    <abstract>
      <p>Matrices representing genetic relatedness among individuals (<italic>i.e.</italic>, Genomic Relationship Matrices, GRMs) play a central role in genetic analysis. The eigen-decomposition of GRMs (or its alternative that generates fewer top singular values using genotype matrices) is a necessary step for many analyses including estimation of SNP-heritability, Principal Component Analysis (PCA), and genomic prediction. However, the GRMs and genotype matrices provided by modern biobanks are too large to be stored in active memory. To accommodate the current and future “bigger-data”, we develop a disk-based tool, Out-of-Core Matrices Analyzer (OCMA), using state-of-the-art computational techniques that can nimbly perform eigen and Singular Value Decomposition (SVD) analyses. By integrating memory mapping (mmap) and the latest matrix factorization libraries, our tool is fast and memory-efficient. To demonstrate the impressive performance of OCMA, we test it on a personal computer. For full eigen-decomposition, it solves an ordinary GRM (<italic>N</italic> = 10,000) in 55 sec. For SVD, a commonly used faster alternative of full eigen-decomposition in genomic analyses, OCMA solves the top 200 singular values (SVs) in half an hour, top 2,000 SVs in 0.95 hr, and all 5,000 SVs in 1.77 hr based on a very large genotype matrix (<italic>N</italic> = 1,000,000, <italic>M</italic> = 5,000) on the same personal computer. OCMA also supports multi-threading when running in a desktop or HPC cluster. Our OCMA tool can thus alleviate the computing bottleneck of classical analyses on large genomic matrices, and make it possible to scale up current and emerging analytical methods to big genomics data using lightweight computing resources.</p>
    </abstract>
    <kwd-group>
      <kwd>Eigen decomposition</kwd>
      <kwd>Singular value decomposition</kwd>
      <kwd>Genetic matrices</kwd>
      <kwd>Memory virtualization</kwd>
      <kwd>Gene mapping</kwd>
      <kwd>Genotype-based phenotype prediction</kwd>
      <kwd>Genomic selection</kwd>
    </kwd-group>
    <counts>
      <fig-count count="1"/>
      <table-count count="6"/>
      <equation-count count="0"/>
      <ref-count count="42"/>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <p>Supported by recent advancements of high-throughput sequencing technology, several organizations have developed very large biobanks comprising DNA sequence linked to phenotypic and demographic data, <italic>e.g.</italic>, Genomics England The 100,000 Genomes Project (<xref rid="bib27" ref-type="bibr">Peplow 2016</xref>). Some of these resources have been shared to worldwide scientists and practitioners (<xref rid="bib7" ref-type="bibr">Collins 2012</xref>). This abundance of data brings unprecedented opportunities to develop a broad range of applications in precision medicine such as predicting drug response and disease risk for new patients. The same trend is evident in agriculture, especially with the recent trend of “high-throughput phenotyping” that generates high dimensional phenotypes. However, on the way to enacting this vision, a pressing roadblock is that the datasets are typically too large to be analyzed in the main memory of many existing computing infrastructure, including some High-Performance Computing (HPC) clusters or Cloud computing. As such, effective use of these biobanks is being relegated to the use of HPCs or computing nodes equipped with huge amount of memory (at the level of terabytes). To pave the path to the routine use of precision genomics in all clinics in the near future, it is preferable to carry out most statistical inferences of large genomic matrices involving hundreds of thousands individuals on personal computers, HPC or Cloud computing nodes of limited memory within tens of GB.</p>
  <p>Previously, we have developed JAWAmix5, a hard disk-based solution to large data problems to allow for quick analyses of biobank-sized genotype data on computers with limited memory (<xref rid="bib21" ref-type="bibr">Long <italic>et al.</italic> 2013</xref>). JAWAmix5 offers scalable functions for genotype-phenotype association mappings by storing the genotype data in disk using HDF5-based data structure. However, the continued growth of biobanks has given rise to new challenges that require further development and extension of these memory-efficient approaches. Now, in addition to large amounts of genomic data, the matrix that represents pair-wise genetic similarities between all the participants in a cohort of a biobank (the Genetic Relationship Matrix, or GRM) may require tens of billions of entries, becoming as sizable as the genotype data itself. These GRMs often play central roles in genomic analyses (<xref rid="bib35" ref-type="bibr">Speed and Balding 2015</xref>; <xref rid="bib14" ref-type="bibr">Kim <italic>et al.</italic> 2017</xref>). In particular, the eigen-decomposition of GRMs is the most time-consuming step that is required in many routine analyses such as Principal Component Analysis (PCA), a default model for high-dimensional data visualization (<xref rid="bib31" ref-type="bibr">Ringnér 2008</xref>) and gene expression analyses (<xref rid="bib36" ref-type="bibr">Stegle <italic>et al.</italic> 2012</xref>); estimation of genomic-heritability using seemingly unrelated subjects (<xref rid="bib42" ref-type="bibr">Yang <italic>et al.</italic> 2011</xref>; <xref rid="bib10" ref-type="bibr">de los Campos <italic>et al.</italic> 2015</xref>), a first step to understand the genetic architecture of a trait; linear mixed models (LMM) (<xref rid="bib13" ref-type="bibr">Kang <italic>et al.</italic> 2010</xref>), a popular approach in genotype-phenotype association mapping; Genomic Best Linear Unbiased Predictors (<xref rid="bib6" ref-type="bibr">Clark and van der Werf 2013</xref>), and phenotype predictions (<xref rid="bib9" ref-type="bibr">de los Campos <italic>et al.</italic> 2013</xref>; <xref rid="bib28" ref-type="bibr">Pérez and de los Campos 2014</xref>). Although some of the methods such as SNP-BLUP can avoid explicitly factorizing a GRM (<xref rid="bib15" ref-type="bibr">Koivula <italic>et al.</italic> 2012</xref>), factorizing a matrix is still a main technique needed by most analytic models.</p>
  <p>The frequently used matrix-factorization as an alternative to eigen-decomposition is the Singular Value Decomposition (SVD) of a rectangular matrix (<italic>e.g.</italic>, a genotype matrix) which avoids heavy computations but approximately achieves similar precision. For instance, in the setting of a LMM, David Heckerman’s group has developed a method that selects only a subset of genomic variants to form a genotype low-rank matrix that can be solved faster and lead to fewer false positives (<xref rid="bib18" ref-type="bibr">Lippert <italic>et al.</italic> 2011</xref>; <xref rid="bib20" ref-type="bibr">Listgarten <italic>et al.</italic> 2012</xref>; <xref rid="bib19" ref-type="bibr">2013</xref>). Many tools have soon adopted this approach as an alternative of solving eigen-decomposition of a full GRM.</p>
  <p>Additionally, many emerging novel analytical procedures, such as a recent proposal for correcting the confounding effects of cell-type compositions (<xref rid="bib30" ref-type="bibr">Rahmani <italic>et al.</italic> 2016</xref>) in epigenome-wide association studies and the correction of confounding effects in the analysis of single-cell RNA-Seq data (<xref rid="bib2" ref-type="bibr">Buettner <italic>et al.</italic> 2015</xref>), need factorization of large matrices.</p>
  <p>Researchers have also resorted to approximations to evade the computational burden of calculating very large matrices. For PCA analyses, Alkes Price’s group developed an approximate algorithm using only the top few PCAs (<xref rid="bib11" ref-type="bibr">Galinsky <italic>et al.</italic> 2016</xref>). For calculating the inverse of a GRM of many related animals, one may start with “Core Animals” to approximately solve the whole matrix (<xref rid="bib23" ref-type="bibr">Masuda <italic>et al.</italic> 2016</xref>). In the R statistical programming language community, chunking algorithms and memory-mapping techniques are utilized to reduce the memory use for simple functions such as reading data and conducting linear regression (<italic>e.g.</italic>, The Bigmemory Project, <ext-link ext-link-type="uri" xlink:href="http://www.bigmemory.org">http://www.bigmemory.org</ext-link>). Parallelization strategies using “split-apply-combine” have also been implemented such as in the BGData suite of packages (<xref rid="bib8" ref-type="bibr">de los Campos and Grueneberg 2017</xref>). There are many efforts using Graphics Processing Units (GPUs) to speed up computations, for instance BLASX (<xref rid="bib40" ref-type="bibr">Wang <italic>et al.</italic> 2016</xref>) for numerical computations. Additionally, some researchers used distributed memory to solve the problem of limited memory on a single server, such as Elemental (<xref rid="bib29" ref-type="bibr">Poulson <italic>et al.</italic> 2013</xref>). Although these approaches address individual problems on a case-by-case basis, researchers need universal and exact solutions for eigen-decomposition as well as singular value decomposition of very large GRMs and genotype matrices for various existing and future applications.</p>
  <p>The above applications are evidences that the eigen-decomposition (and its alternative, SVD) in genomic studies is indeed the first-line characterization of the relationship between participating individuals and the solution implementing these on ubiquitously available computer hardware is needed. In this work, we present a novel tool, OCMA, to factorize very large matrices using disk-based solutions. This tool, in conjunction with the other tools developed by us (<xref rid="bib21" ref-type="bibr">Long <italic>et al.</italic> 2013</xref>) and others, will allow researcher to carry out association mapping and phenotype predictions nimbly using limited computational resources.</p>
  <p>In computer science, “<italic>mmap</italic>” (<xref ref-type="fig" rid="fig1">Figure 1</xref>) is a function (or, precisely, a “system-call”) that maps files or devices into memory (precisely, maps to the virtual address space of a computing process). “<italic>mmap</italic>” was originally designed as part of Berkeley Software Distribution version of Unix (<xref rid="bib24" ref-type="bibr">McKusick <italic>et al.</italic> 2014</xref>) and is now universally supported by all major operating systems (<italic>i.e.</italic>, Mac OS, Windows and Linux). This function efficiently handles data exchange between memory and disk, allowing program developers to carry out computational tasks as though the data in the disk were in memory without taking care of implementation details such as allocating memory, looking up addresses, reading data, writing used data, and de-allocating the memory again when it is no longer needed (<xref rid="bib34" ref-type="bibr">Song <italic>et al.</italic> 2016</xref>). As a result, it appears that the calculations happen “out of the memory”, a technique called “<italic>out-of-core</italic>” in computer science. Mmap has been extensively used in many computing fields such as high-performance computing (<xref rid="bib38" ref-type="bibr">Van Essen <italic>et al.</italic> 2013</xref>; <xref rid="bib34" ref-type="bibr">Song <italic>et al.</italic> 2016</xref>), graph computation (<xref rid="bib17" ref-type="bibr">Lin <italic>et al.</italic> 2014</xref>), system virtual machine (<xref rid="bib41" ref-type="bibr">Wang <italic>et al.</italic> 2015</xref>), and databases (<xref rid="bib22" ref-type="bibr">Lou and Ludewigt 2015</xref>). Mmap has also been used in bioinformatics in recent years, including the indexing of next-generating sequencing reads (<xref rid="bib32" ref-type="bibr">Salavert <italic>et al.</italic> 2016</xref>) and tree-based backward search (<xref rid="bib33" ref-type="bibr">Salavert <italic>et al.</italic> 2015</xref>).</p>
  <fig id="fig1" fig-type="figure" position="float">
    <label>Figure 1</label>
    <caption>
      <p>Illustrating schema of <italic>mmap</italic>. The horizontal bar represents the physical address in the disk and the vertical bar represents the virtual address from the perspective of a computing process in the memory.</p>
    </caption>
    <graphic xlink:href="13f1"/>
  </fig>
  <sec sec-type="methods" id="s1">
    <title>Methods</title>
    <p>The <italic>Intel Math Kernel Library</italic> (<xref rid="bib39" ref-type="bibr">Wang <italic>et al.</italic> 2014</xref>) is a collection of optimized functions that represent the state-of-the-art for numerical computation. Using the core algorithm supplied by the Intel MKL and the memory-disk mapping enabled by mmap, here, we develop a tool called Out-of-Core Matrices Analyzer (OCMA) that solves eigen-decomposition of GRMs and SVD in the disk (<italic>i.e.</italic>, out-of-core).</p>
    <p>In order to integrate Intel MKL with mmap, we have thoroughly assessed various options of implementation to optimize the performance of OCMA. In the current version, OCMA adopts the ILP64 library that needs the support of 64-bit machines to accommodate very large indexes of matrices. We have selected the “ssyevd” subroutine that computes all eigenvalues and, optionally, all eigenvectors of a real symmetric matrix, using divide and conquer algorithm. We have re-engineered the interface of “ssyevd” so that the large matrices used in it can be disk-based using mmap (Supplementary Note I). Similarly, we have identified “sgesdd” that computes the SVD of a general rectangular matrix using a divide and conquer method. Additionally, to meet many applications that one only needs a small number of singular values and eigenvectors, we have also implemented a function that calculates the top <italic>k</italic> singular-values (<italic>k</italic> &lt; min (<italic>N, M</italic>) where <italic>N</italic> and <italic>M</italic> are the dimensions of a matrix, typically standing for the number of individuals and the number of genetic markers in a genotype matrix). This function is supported by the “sgesvdx” in Intel MKL. These subroutines require more workspace but are faster in some cases, especially for large matrices. Intel MKL provides a two-level C interface to LAPACK, consisting of a high-level interface and a middle-level interface. The high-level interface handles all workspace memory allocation internally, while the middle-level interface requires the user to provide workspace arrays as in the original FORTRAN interface. To facilitate mmap-based solutions, we have used the middle-level interface that is similar to its original FORTRAN interface. The details of the implementation are presented in Supplementary Note I.</p>
    <p>OCMA supports parallel computing. By default, OCMA will automatically decide how many threads to use based on the available hardware. (In our tests to be presented in Results, the OCMA process uses four threads, which is based on the hardware of the desktop computer we use.) Additionally, the users can also utilize environment variable (MKL_NUM_THREADS) to specify the number of threads (OCMA Users’ Manual).</p>
    <sec id="s2">
      <title>Data Availability</title>
      <p>We used the UK Biobank data that is available through application to the data generator (<ext-link ext-link-type="uri" xlink:href="https://www.ukbiobank.ac.uk">https://www.ukbiobank.ac.uk</ext-link>). Supplemental material available at Figshare: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.25387/g3.7384973">https://doi.org/10.25387/g3.7384973</ext-link>.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="s3">
    <title>Results</title>
    <p>OCMA provides two main functions: eigen-decomposition for square symmetric matrices (<italic>e.g.</italic>, GRMs) and singular value decomposition (SVD) for rectangular matrices (<italic>e.g.</italic>, genotype matrices). The users can also select to calculate a subset of top singular values/vectors. The input files can be prepared using plain text or the mainstream binary format (detailed in the Users Manual). OCMA also supports the format transformation between text and binary files. The output files will be the eigenvalues/vectors (or singular values/vectors) in the same format as the input. All three operating systems (Linux, Mac OS, and Windows) are fully supported.</p>
    <p>An example command using OCMA may be:</p>
    <p>$&gt; ocma eigen single disk n A E Q</p>
    <p>where ‘<bold>ocma</bold>’ is the name of the executable; ‘<bold>eigen</bold>’ stands for eigen-decomposition (alternatively one may use ‘singular’ for SVD); ‘<bold>single</bold>’ stands for single-precision (alternatively one may use ‘double’ for double precision); ‘<bold>disk</bold>’ specifies the function that uses disk-based solution (alternatively one may use ‘memory’ for smaller matrices); ‘<bold>n</bold>’ is the dimension of the matrix; ‘<bold>A</bold>’ is the filename of the input matrix; ‘<bold>E</bold>’ is the filename of the output file that stores the eigenvalues of matrix A; and ‘<bold>Q</bold>’ is the filename of the output file that stores the eigenvectors of matrix A.</p>
    <p>We first compared the results of an eigenvalue decomposition and an SVD computed using OCMA with the same factorization carried out using MATLAB functions “eig” and “svd” (version 2012b) (<xref rid="t1" ref-type="table">Table 1</xref>). As expected, the outcome of OCMA and MATLAB is highly consistent as quantified by the three standard distances (that is called <italic>norm</italic>) used in numerical computing (<xref rid="t1" ref-type="table">Table 1</xref>). Additionally, these initial comparisons also show that, for relatively small matrices that MATLAB can handle, OCMA is 4 – 11 times faster than MATLAB for the computation of eigen-decomposition and around 2 – 3 times faster than MATLAB for the SVD (<xref rid="t1" ref-type="table">Table 1</xref>).</p>
    <table-wrap id="t1" position="float">
      <label>Table 1</label>
      <caption>
        <title>The algorithm of OCMA calculates the right outcome. Eigenvectors (or singular vectors) are compared using Infinite norm <inline-formula><mml:math id="me1"><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo><mml:mtext>*</mml:mtext><mml:mo>‖</mml:mo></mml:mrow></mml:mrow><mml:mn>∞</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mtext>max</mml:mtext><mml:mo>{</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>...</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>}</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, Taxicab norm <inline-formula><mml:math id="me2"><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo><mml:mtext>*</mml:mtext><mml:mo>‖</mml:mo></mml:mrow></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>∑</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, and Euclidean norm <inline-formula><mml:math id="me3"><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo><mml:mtext>*</mml:mtext><mml:mo>‖</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:munderover><mml:mstyle mathsize="140%" displaystyle="true"><mml:mo>∑</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>. We use <inline-formula><mml:math id="me4"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>c</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me5"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>c</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> to denote the vectors calculated by OCMA and <inline-formula><mml:math id="me6"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="me7"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> to denote the vectors calculated by MATLAB (version 2012b). The comparison for eigen-decomposition is presented in the upper table, and the comparison for singular-value decomposition is presented in the lower one. In the upper table, <italic>N</italic> denotes the number of individuals. In lower table, <italic>N</italic> = 1,000,000, and <italic>M</italic> denotes the number of genetic markers. The configuration of the personal computer: Intel Core i7-6700 CPU (4 cores), Memory = 24GB. Disk = Samsung SSD 850 EVO 250GB. The operating system is Windows 7. Time is measured by wall-clock (instead of CPU time)</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="17.18%" span="1"/>
        <col width="18.01%" span="1"/>
        <col width="17.09%" span="1"/>
        <col width="17.24%" span="1"/>
        <col width="15.24%" span="1"/>
        <col width="15.24%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>N</italic>
            </th>
            <th valign="middle" colspan="3" align="center" scope="colgroup" rowspan="1">
              <inline-formula>
                <mml:math id="me8">
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mrow>
                        <mml:mo>‖</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>λ</mml:mi>
                            <mml:mrow>
                              <mml:mi>o</mml:mi>
                              <mml:mi>c</mml:mi>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>−</mml:mo>
                          <mml:msub>
                            <mml:mi>λ</mml:mi>
                            <mml:mrow>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>t</mml:mi>
                              <mml:mi>l</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>b</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>‖</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                    <mml:mo>/</mml:mo>
                    <mml:mrow>
                      <mml:mrow>
                        <mml:mo>‖</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>λ</mml:mi>
                            <mml:mrow>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>t</mml:mi>
                              <mml:mi>l</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>b</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>‖</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Computation time (s)</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">
              <inline-formula>
                <mml:math id="me9">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>∞</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">
              <inline-formula>
                <mml:math id="me10">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>1</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">
              <inline-formula>
                <mml:math id="me11">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="top" align="center" scope="col" rowspan="1" colspan="1">OCMA</th>
            <th valign="top" align="center" scope="col" rowspan="1" colspan="1">MATLAB</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">1000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.2*10<sup>−7</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">7.6*10<sup>−8</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.1*10<sup>−7</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">0.1</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">0.4</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">2000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">2.8*10<sup>−7</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">8.1*10<sup>−8</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.0*10<sup>−7</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">0.5</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">2.8</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">5000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.3*10<sup>−7</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">2.1*10<sup>−7</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">2.4*10<sup>−7</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">6.4</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">35.5</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">10000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.6*10<sup>−6</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.7*10<sup>−7</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">6.3*10<sup>−7</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">46.2</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">294.0</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">20000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">3.3*10<sup>−6</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.4*10<sup>−6</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.3*10<sup>−6</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">246.4</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">2905.1</td>
          </tr>
        </tbody>
      </table>
      <table frame="border" rules="groups">
        <col width="17.18%" span="1"/>
        <col width="18.01%" span="1"/>
        <col width="17.09%" span="1"/>
        <col width="17.24%" span="1"/>
        <col width="15.24%" span="1"/>
        <col width="15.24%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>M</italic>
            </th>
            <th valign="middle" colspan="3" align="center" scope="colgroup" rowspan="1">
              <inline-formula>
                <mml:math id="me12">
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mrow>
                        <mml:mo>‖</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>s</mml:mi>
                            <mml:mrow>
                              <mml:mi>o</mml:mi>
                              <mml:mi>c</mml:mi>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>−</mml:mo>
                          <mml:msub>
                            <mml:mi>s</mml:mi>
                            <mml:mrow>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>t</mml:mi>
                              <mml:mi>l</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>b</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>‖</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                    <mml:mo>/</mml:mo>
                    <mml:mrow>
                      <mml:mrow>
                        <mml:mo>‖</mml:mo>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>s</mml:mi>
                            <mml:mrow>
                              <mml:mi>m</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>t</mml:mi>
                              <mml:mi>l</mml:mi>
                              <mml:mi>a</mml:mi>
                              <mml:mi>b</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                        <mml:mo>‖</mml:mo>
                      </mml:mrow>
                    </mml:mrow>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Computation time (s)</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">
              <inline-formula>
                <mml:math id="me13">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>∞</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">
              <inline-formula>
                <mml:math id="me14">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>1</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">
              <inline-formula>
                <mml:math id="me15">
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mo>‖</mml:mo>
                          <mml:mtext>*</mml:mtext>
                          <mml:mo>‖</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:math>
              </inline-formula>
            </th>
            <th valign="top" align="center" scope="col" rowspan="1" colspan="1">OCMA</th>
            <th valign="top" align="center" scope="col" rowspan="1" colspan="1">MATLAB</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">100</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">2.9*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.2*10<sup>−4</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">8.9*10<sup>−5</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">10.2</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">12.3</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">200</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">2.1*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">9.2*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">6.6*10<sup>−5</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">14.8</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">29.6</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">500</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.9*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">7.7*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.6*10<sup>−5</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">47.5</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">90.4</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">1000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.6*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.3*10<sup>−4</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">8.5*10<sup>−5</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">89.5</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">206.4</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">2000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.2*10<sup>−5</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">1.1*10<sup>−4</sup></td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">7.1*10<sup>−5</sup></td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">226.1</td>
            <td valign="top" align="char" char="." rowspan="1" colspan="1">726.9</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>To assess memory usage and computational time for analyses involving genomic big-data we used GRM describing additive genetic relationships among 100,000 distantly related (GRM between pairs of individuals smaller than 0.03) from the interim release of the UK-Biobank. This GRM was computed using 589,028 SNP genotypes from the Affymetrix UK BiLEVE Axiom and Affymetrix UK Biobank Axiom arrays (<xref rid="bib7" ref-type="bibr">Collins 2012</xref>). The GRM was computed using the BGData R-package (<xref rid="bib8" ref-type="bibr">de los Campos and Grueneberg 2017</xref>). Further details about the criteria used for subject and SNP inclusion can be found in (<xref rid="bib14" ref-type="bibr">Kim <italic>et al.</italic> 2017</xref>) and the procedure to compute GRM is in Supplementary Note III.</p>
    <p>When the GRM is small enough to be fully loaded in memory, we can directly compare the disk-based solution to the memory-based one (<xref rid="t2" ref-type="table">Table 2</xref>, <italic>N</italic> = 10,000 to 50,000). In most cases, the overhead incurred by disk-memory mapping only causes a modest slow-down in the disk-based solution compared to the memory-based one. Notably, taking advantage of the efficient implementation offered by Intel MKL, OCMA can decompose a regular matrix of <italic>N</italic> = 10,000 in less than a minute. More importantly, OCMA rapidly solves much larger GRMs that are impossible to load in memory (<xref rid="t2" ref-type="table">Table 2</xref>, <italic>N</italic> = 60,000 to 100,000). In particular, it solves a GRM of 100,000×100,000 in only 5 days in our personal computer that has only a memory of 24GB (Supplementary Table S4).</p>
    <table-wrap id="t2" position="float">
      <label>Table 2</label>
      <caption>
        <title>Runtime and memory consumption of OCMA in a Linux personal computer for eigen decomposition. The same hardware in <xref rid="t1" ref-type="table">Table 1</xref> is used. Operating system is CentOS Linux release 7.3.1611. Four threads are used for the test. The three columns in the “Calculation time” stand for the runtime for three tools: GCTA (<xref rid="bib42" ref-type="bibr">Yang <italic>et al.</italic> 2011</xref>), OCMA using memory only, and OCMA using disk (based on mmap technique). The careful interpretation of the comparison between GCTA and OCMA is explained in the main text and Supplementary Notes II. *The usage is slightly larger than the physical memory because of the swapping by the operating system. **GCTA was tested in an HPC cluster when the memory of a personal computer is insufficient. Time is measured by wall-clock (instead of CPU time). Memory consumption is estimated using the formula on the GCTA website and the Intel MKL specification (detailed in the Supplementary Notes). The sign “/” indicates that the system does not allow the calculation to happen due to limited memory and swap spaces or it exceeds the maximal runtime in the HPC</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="12.03%" span="1"/>
        <col width="18.05%" span="1"/>
        <col width="17.73%" span="1"/>
        <col width="18.37%" span="1"/>
        <col width="17.18%" span="1"/>
        <col width="16.64%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>N</italic>
            </th>
            <th valign="middle" colspan="3" align="center" scope="colgroup" rowspan="1">Computation time</th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Memory usage</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">GCTA (GREML)</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">OCMA (Memory)</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">OCMA (Disk)</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">GCTA</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">OCMA (Memory)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">10000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">286.0 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">41.6 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">55.0 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.6 GB</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.1 GB</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">20000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">2988 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">214.5 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">231.8 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">6.4 GB</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">4.5 GB</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">30000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14760 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">690.1 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">889.0 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14.4 GB</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">10.1 GB</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">40000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">8.4 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.44 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.13 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">25.6 GB</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">17.9 GB</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">50000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14.2 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.94 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">4.20 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">40.0 GB**</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">27.9 GB*</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">60000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">27.3 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">8.61 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">57.6 GB**</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">70000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">50.3 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14.85 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">80000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">91.3 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">40.90 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">90000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">84.89 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">100000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">127.91 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>Although the core innovation here is that OCMA can handle very large arrays in disk without the needs of large memory, OCMA’s memory-based algorithm by-itself is at least up-to-date with, if not faster than, state-of-the-art GRM analysis tools. Two of the most notable tools using GRM for association mapping and heritability analysis are GCTA (<xref rid="bib42" ref-type="bibr">Yang <italic>et al.</italic> 2011</xref>) and EMMAX (<xref rid="bib13" ref-type="bibr">Kang <italic>et al.</italic> 2010</xref>). EMMAX is not actively maintained and is orders of magnitude slower than OCMA. The most recent release of GCTA (1.9x.beta) is much faster and less resource intensive than its previous versions, but doesn’t provide a single function for only solving eigen-decomposition for the purpose of a comparison. However, the GREML (genomic-relatedness-based restricted maximum-likelihood) function that involves matrix inverse is a frequently used function estimating heritability etc. in genetic analyses, which provides a benchmark for comparison, albeit indirect. While the runtime and memory usage of GREML are higher than the use of matrix-factorization alone, we have derived formulas to use these results to estimate the actual use of resources (detailed and justified in the Supplementary Note II) in matrix-factorization. These estimates (<xref rid="t1" ref-type="table">Table 1</xref>, <italic>N</italic> = 10,000 to 50,000) show that OCMA is more efficient than GCTA when the memory is sufficient for GCTA to perform.</p>
    <p>The above comparisons are based on the Linux version of OCMA. As mmap is a call at the level of operating system, the implementations of OCMA are quite different under different platforms. We have implemented the Mac OS and Windows version of OCMA. The performance of OCMA in the Windows system is presented in <xref rid="t3" ref-type="table">Table 3</xref>. The performance on Mac OS is similar to that on Linux. This is to be expected due to their shared Unix kernel. The performance on Windows is even faster than the Linux version, presumably due to the extra optimization by the operating system.</p>
    <table-wrap id="t3" position="float">
      <label>Table 3</label>
      <caption>
        <title>Comparison of the runtime of OCMA under the Windows and Linux operating systems for eigen decomposition. The same machine described in the <xref rid="t1" ref-type="table">Table 1</xref> and <xref rid="t2" ref-type="table">2</xref> was used. Four threads are used in the test. Time is measured by wall-clock (instead of CPU time). The sign “/” indicates that the system does not allow the calculation to happen due to limited memory and swap spaces</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="12.13%" span="1"/>
        <col width="24.29%" span="1"/>
        <col width="25.17%" span="1"/>
        <col width="18.03%" span="1"/>
        <col width="20.38%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>N</italic>
            </th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Windows</th>
            <th colspan="2" valign="top" align="center" scope="colgroup" rowspan="1">Linux</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">10000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">46.2 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">46.2 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">41.6 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">55.0 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">20000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">246.4 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">252.6 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">214.5 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">231.8 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">30000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">760.7 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">775.3 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">690.1 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">889.0 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">40000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.50 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.51 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.44 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.13 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">50000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.02 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.05 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.94 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">4.20 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">60000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.96 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">2.25 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">8.61 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">70000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3.43 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14.85 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">80000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">18.31 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">40.90 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">90000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">52.53 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">84.89 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">100000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">132.91 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">127.91 h</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>The performance of OCMA calculating SVDs (using the options “single” and “singular”) for very large genotype matrices (1 million simulated individuals times thousands of markers) is presented in <xref rid="t4" ref-type="table">Table 4</xref>. Evidently, the calculation of SVD is much faster and even less memory-intensive. Further, the performance of OCMA calculating a subset of SVs is displayed in <xref rid="t5" ref-type="table">Table 5</xref>. The runtime of calculating a small subset of SVs is not significantly faster than calculating all the SVs. This is because, for SVD computations, a significant proportion of runtime is spent on calculating the product of the matrix and its transpose (<italic>i.e.</italic>, A’ × A, where A is the <italic>N</italic> × <italic>M</italic> matrix). As this is a necessary step in the “sgesvdx” function of Intel MKL, calculating a subset of SVDs doesn’t save much time in this implementation.</p>
    <table-wrap id="t4" position="float">
      <label>Table 4</label>
      <caption>
        <title>Runtime of OCMA for Singular Value Decomposition (SVD). Sample size <italic>N</italic> = 1 million. <italic>M</italic> is the number of selected genetic markers. The same machine described in the <xref rid="t1" ref-type="table">Tables 1</xref> and <xref rid="t2" ref-type="table">2</xref> is used. Four threads are used in the test. Time is measured by wall-clock (instead of CPU time). The sign “/” indicates that the system does not allow the calculation to happen due to limited memory and swap spaces</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="10.85%" span="1"/>
        <col width="22.3%" span="1"/>
        <col width="22.96%" span="1"/>
        <col width="23.1%" span="1"/>
        <col width="20.79%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>M</italic>
            </th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Windows</th>
            <th colspan="2" valign="top" align="center" scope="colgroup" rowspan="1">Linux</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">1000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">89.5 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">102.5 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">93.6 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">309.9 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">2000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">226.1 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">230.9 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">208.0 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3564 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">3000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">450.8 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">523.4 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">391.8 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">11232 s</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">4000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.41 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.42 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">4.94 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">5000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.50 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.77 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">6.58 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">6000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3.21 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3.38 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">9.94 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">7000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">8.95 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">16.09 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">8000</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">16.40 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">21.16 h</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <table-wrap id="t5" position="float">
      <label>Table 5</label>
      <caption>
        <title>Runtime of OCMA for a subset of singular values. Sample size <italic>N</italic> = 1 million. <italic>M</italic>, the number of selected genetic markers, is 5,000. <italic>K</italic> is the number of top SVs. The same machine described in the <xref rid="t1" ref-type="table">Table 1</xref> and <xref rid="t2" ref-type="table">2</xref> is used. Four threads are used in the test. Time is measured by wall-clock (instead of CPU time)</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="10.85%" span="1"/>
        <col width="22.3%" span="1"/>
        <col width="22.96%" span="1"/>
        <col width="23.1%" span="1"/>
        <col width="20.79%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>K</italic>
            </th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Windows</th>
            <th colspan="2" valign="top" align="center" scope="colgroup" rowspan="1">Linux</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Memory</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">Disk</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">10</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.206 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.46 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">20</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.207 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.60 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">50</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.30 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.209 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.79 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">100</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.31 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.31 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.211 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.87 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">200</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.32 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.32 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.215 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">4.95 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">500</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.32 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.32 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.225 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.01 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">1000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.33 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.33 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.230 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.10 h</td>
          </tr>
          <tr>
            <td valign="middle" align="center" scope="row" rowspan="1" colspan="1">2000</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.83 h</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">0.95 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">/</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">5.65 h</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>In addition to laptop/desktop-based data analyses, OCMA also supports HPC-based parallel computations that use many threads. We have tested OCMA on an HPC server and the results are presented in <xref rid="t6" ref-type="table">Table 6</xref>. As a comparison of the effectiveness of parallelization, we also have tested OpenBLAS, an optimized BLAS library using multi-thread. The same method, “ssyevd” in OpenBLAS is used for this test. Evidently, the parallelization in Intel MKL, which is adopted by OCMA, is more effective than the OpenBLAS alternative (<xref rid="t6" ref-type="table">Table 6</xref>).</p>
    <table-wrap id="t6" position="float">
      <label>Table 6</label>
      <caption>
        <title>Comparison between OCMA and OpenBLAS, a multi-thread package for matrix factorization. The same function (“ssyevd”) in OpenBLAS is used. The computing node has two E5-2690V4 CPUs with 28 cores in total. The total memory available is 192GB. Environmental variables MKL_NUM_THREADS and OPENBLAS_NUM_THREADS are used to specify the number of threads in OCMA and OpenBLAS respectively</title>
      </caption>
      <table frame="border" rules="groups">
        <col width="16.65%" span="1"/>
        <col width="16.14%" span="1"/>
        <col width="16.14%" span="1"/>
        <col width="26.45%" span="1"/>
        <col width="24.62%" span="1"/>
        <thead>
          <tr>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">
              <italic>N</italic>
            </th>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">Memory</th>
            <th rowspan="2" valign="middle" align="center" scope="col" colspan="1">#Threads</th>
            <th valign="middle" colspan="2" align="center" scope="colgroup" rowspan="1">Runtime</th>
          </tr>
          <tr>
            <th valign="middle" colspan="1" align="center" scope="colgroup" rowspan="1">OCMA</th>
            <th valign="middle" align="center" scope="col" rowspan="1" colspan="1">OpenBLAS</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="2" valign="middle" align="center" scope="row" colspan="1">10000</td>
            <td rowspan="2" valign="middle" align="char" char="." colspan="1">1.1GB</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">10</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">16.4 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">29.3 s</td>
          </tr>
          <tr>
            <td valign="middle" colspan="1" align="char" char="." scope="row" rowspan="1">20</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">14.3 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">24.3 s</td>
          </tr>
          <tr>
            <td rowspan="2" valign="middle" align="center" scope="row" colspan="1">20000</td>
            <td rowspan="2" valign="middle" align="char" char="." colspan="1">4.5GB</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">10</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">125.9 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">187.0 s</td>
          </tr>
          <tr>
            <td valign="middle" colspan="1" align="char" char="." scope="row" rowspan="1">20</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">73.1 s</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">156.5 s</td>
          </tr>
          <tr>
            <td rowspan="2" valign="middle" align="center" scope="row" colspan="1">50000</td>
            <td rowspan="2" valign="middle" align="char" char="." colspan="1">27.9GB</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">10</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.47 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.76 h</td>
          </tr>
          <tr>
            <td valign="middle" colspan="1" align="char" char="." scope="row" rowspan="1">20</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.25 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">0.52 h</td>
          </tr>
          <tr>
            <td rowspan="2" valign="middle" align="center" scope="row" colspan="1">100000</td>
            <td rowspan="2" valign="middle" align="char" char="." colspan="1">111.8GB</td>
            <td valign="middle" align="char" char="." rowspan="1" colspan="1">10</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3.63 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">4.90 h</td>
          </tr>
          <tr>
            <td valign="middle" colspan="1" align="char" char="." scope="row" rowspan="1">20</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">1.90 h</td>
            <td valign="middle" align="center" rowspan="1" colspan="1">3.54 h</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>As mmap involves complicated disk-memory data exchange, the memory usage of OCMA in practice is a dynamic function depending on the system status. However, based on the specification of Intel MKL and our implementation, we can provide a static analysis of the memory and disk usage. Quantitative analyses of the memory and disk usage of <italic>mmap</italic> are discussed and presented in Supplementary Tables 1-3. Intuitively there is an additional overhead incurred in the operating system, as the CPU must wait for data exchange between memory and disk. Under the desktop with Windows system, we monitored the CPU usage during the test and find this effect does exist but falls in a reasonable range. Supplementary Figures 1 and 2 show this effect for Eigen-decomposition and SVD respectively.</p>
    <sec id="s4">
      <title>Software Availability</title>
      <p>The source code and executable are freely available at GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/precisionomics/OCMA">https://github.com/precisionomics/OCMA</ext-link>. The repository provides OCMA for Windows (ocma-0.1.zip) and Linux/Unix systems (ocma-0.1.tar.gz). Upon decompression, one will see two folders: src and bin. The folder src contains all the source code, and the folder bin contains the compiled binary executable. Under the folder bin, two small matrices, SM10 and M3_4 for testing purpose are also provided.</p>
      <p>The users can also build their own binary executable. The program is written in the C language, and it uses Intel MKL. Thus, in order to compile the source code, one needs to install C compiler, <italic>e.g.</italic>, the Intel C/C++ Compilers, the GNU C Compiler or Visual Studio C Compiler. Additionally, one needs to install Intel MKL. When C compiler and Intel MKL are available in the system, one can enter the src folder and modify the makefile based on the C compiler and the Intel MKL paths; then type make or nmake to compile. After that, the ocma executable will be generated in the bin folder.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s5">
    <title>Discussion</title>
    <p>OCMA allows researchers to factorize symmetric and non-symmetric of very large real-valued matrices, including GRMs, genotype matrices and any other real-valued matrices. Thus, OCMA enables many Big-Data applications that use distance and similarity matrices that do not use GRMs. Furthermore, the recent trend of analyzing multiple traits together in association mapping (<xref rid="bib16" ref-type="bibr">Korte <italic>et al.</italic> 2012</xref>; <xref rid="bib3" ref-type="bibr">Casale <italic>et al.</italic> 2015</xref>) and genomic selection (<xref rid="bib37" ref-type="bibr">Tsuruta <italic>et al.</italic> 2011</xref>; <xref rid="bib12" ref-type="bibr">Jia and Jannink 2012</xref>; <xref rid="bib4" ref-type="bibr">Chen <italic>et al.</italic> 2016</xref>; <xref rid="bib5" ref-type="bibr">2017</xref>) involves matrices yet larger. The OCMA algorithm will be helpful in solving such larger matrices. Moreover, the study of Gene-Environment Interaction (GxE) in both health and agriculture also involves large matrices (<xref rid="bib25" ref-type="bibr">Montesinos-López <italic>et al.</italic> 2016</xref>; <xref rid="bib26" ref-type="bibr">Moore <italic>et al.</italic> 2018</xref>), which can be solved nimbly by OCMA.</p>
    <p>As one may figure out from Figure S1, from the perspective of CPU usage, the swap within the operating system outperforms mmap for a matrix that is a little bit larger than the physical memory, especially in the case of calculating SVD. This might be because of the fact that the swap is supported by continuous and dedicated disk spaces designed to meet the specific requirements of memory virtualization. In contrast, mmap uses general file system that usually does not provide continuous space. So the mmap may consume more time than swap when the space for swap is sufficient. However, swap cannot meet the requirements of analyzing very large files. This is because (1) the performance of swap heavily relies on the setting of the operating system and how many other processes are sharing it; (2) swap requires administrators to set the parameters which is not available for the end users of an HPC; and (3) swap cannot be very large as it requires continuous and dedicated spaces in the disk. In contrast, mmap offers a scalable and flexible file mapping between the memory and the general file system, which does not suffer from the above limitations, therefore can be applied to very large files.</p>
    <p>A trade-off in the design of OCMA is how to strike a good balance between space/speed and the nature of its memory visit. For instance, based on the Intel MKL website, it is recommended to use “ssyevr” for eigenvalue problems because “<italic>its underlying algorithm is fast and uses less workspace</italic>”. We have tested the function “ssyevr” against “ssyevd” (the function we adopted), and indeed we find that “ssyevr” uses around 65% memory that is required by “ssyevd”. However, “ssyevr” is slower when solving large matrices sized at the level of tens of thousands. In case of a very large matrix for which mmap is needed, the performance of “ssyevr” decreased dramatically. For instance, for a GRM of 80,000 that “ssyevd” can solve in 18.31 hr using a desktop with 24GB memory and 4 threads, “ssyevr” cannot be finished in 5 days. We expect this is because of the pattern of memory visit of “ssyevr”, which requires intensive workspace visits that needs more frequent data exchange between memory and disk. So although “ssyevr” needs less workspace (in terms of either memory or disk), its more frequent workspace visits leads to very poor performance in the context of an out-of-core implementation.</p>
    <p>As an immediate future development, we plan to implement more factorization functions such as QR decomposition and Cholesky decomposition. Moreover, we will integrate OCMA with various tools especially the ones we have developed and maintained for years. For instance we will integrate OCMA with BGLR, a tool that we have developed for phenotype predictions using genomics data (<xref rid="bib9" ref-type="bibr">de los Campos <italic>et al.</italic> 2013</xref>; <xref rid="bib28" ref-type="bibr">Pérez and de los Campos 2014</xref>).</p>
    <p>The initial release of OCMA is based on C language that is the default for <italic>mmap</italic>. We will develop APIs (Application Programming Interfaces) for R, Java and Python to accommodate broader communities. The extremely fast function in Intel MKL is optimized for Intel architectures that are supporting most current personal computers in the current market. Therefore, OCMA may be sub-optimal if running on other machines. However, other vendors, such as AMD, provide similar libraries. We are extending OCMA using the AMD Core Math Library, to cover the non-dominant architectures.</p>
    <p>Another non-trivial extension will be the integration of OCMA with our existing tool JAWAMix5, a tool that enables out-of-core association mapping at the level of population genotype files (<xref rid="bib21" ref-type="bibr">Long <italic>et al.</italic> 2013</xref>). The JAWAmix5 (<xref rid="bib21" ref-type="bibr">Long <italic>et al.</italic> 2013</xref>) package uses HDF5 (<ext-link ext-link-type="uri" xlink:href="https://www.hdfgroup.org">https://www.hdfgroup.org</ext-link>) for accessing genotype data stored in disk. HDF5 builds indexes of genotype data to allow fast random access to data. JAWAmix5 offers scalable functions for the generation of GRM and association mappings using standard linear models as well as linear mixed models (<xref rid="bib21" ref-type="bibr">Long <italic>et al.</italic> 2013</xref>). However, HDF5 is not efficient for complicated matrix operations because the index-based techniques are efficient only if the data are in a natural order and not frequently updated. So, JAWAmix5 loads matrices into the memory and conduct matrix factorization in memory. This was fine at that time (2013) however becomes increasingly a bottleneck when analyzing a sample with tens of thousands individuals. Although mmap is not as efficient as HDF5, it does allow users use memory mapping without concerning the properties of the composition of the underlying data.</p>
    <p>HDF5 and mmap are two fundamentally different techniques. HDF5 facilitates a hierarchical indexing of the data so that they can be stored in the disk but randomly accessed by the computing processes as though they are in the main memory. This is convenient for some data that are naturally straightforward to index. However, if the reading and writing of the files cannot be well predicted, the HDF5-based solution could be very slow even if the file size is small. In contrast, mmap, despite its lower efficiency for well-formatted data (comparing with HDF5), offers a full “memory virtualization.” That is, one can just use disk as if it were memory regardless the type and organization of data, as well as how the users are going to read and write them. The operating system will handle which part of the data will be loaded and swapped. In statistical genomics, the genotype data (<italic>e.g.</italic>, a VCF file) meet the requirements of HDF5 perfectly because the genomic coordinate system offers a natural index and it is rarely updated during the statistical analyses. However, when there are many other intermediate quantities, <italic>e.g.</italic>, metrics to assist the decomposition of a matrix, for which one needs to generate and update frequently, the perfect choice may be mmap, which does not rely on the order of data. HDF5 and mmap nicely complement the advantages of each other. For the moment, based on JAWAmix5’s functions of association mapping and calculation of GRM and OCMA’s function of factorization of matrices, one can carry out GWAS using our out-of-core technologies. We plan to develop more functions for genomic predictions, <italic>e.g.</italic>, GBLUP and ssGBLUP (<xref rid="bib1" ref-type="bibr">Aguilar <italic>et al.</italic> 2014</xref>) that have been extensively used in the fields.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p><italic>Funding</italic>. This work was supported by Natural Science Foundation of Guangdong Province (2018A030313438) and Special Funds for Discipline and Specialty Construction of Guangdong Higher Education Institutions (2016KTSCX040) to Z.X.; University of Calgary Startup and URGC Seed Grants, Canada Foundation for Innovation, and NSERC Discovery Grant to Q.L.; NSERC Discovery Grant to Q.Z.; and NIH to G.D.L.C. (R01 NIGMS 101219) and X.S. (R15HG009565).</p>
    <p><italic>Dataset</italic>. G.D.L.C. has access to the genotype data of the UK Biobank and all the data analysis related to the UK Biobank data were done by G.D.L.C.</p>
  </ack>
  <fn-group>
    <fn id="fn1">
      <p>Supplemental material available at Figshare: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.25387/g3.7384973">https://doi.org/10.25387/g3.7384973</ext-link>.</p>
    </fn>
    <fn id="fn2">
      <p>Communicating editor: D. J. de Koning</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>Literature Cited</title>
    <ref id="bib1">
      <mixed-citation publication-type="other">Aguilar, I., I. Misztal, S. Tsuruta, A. Legarra, and H. Wang, 2014 PREGSF90 – POSTGSF90: Computational Tools for the Implementation of Single-step Genomic Selection and Genome-wide Association with Ungenotyped Individuals in BLUPF90 Programs. Proceedings of 10th World Congress of Genetics Applied to Livestock Production 2014: 680. <pub-id pub-id-type="doi">10.13140/2.1.4801.5045</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buettner</surname><given-names>F.</given-names></name><name><surname>Natarajan</surname><given-names>K. N.</given-names></name><name><surname>Casale</surname><given-names>F. P.</given-names></name><name><surname>Proserpio</surname><given-names>V.</given-names></name><name><surname>Scialdone</surname><given-names>A.</given-names></name><etal/></person-group>, <year>2015</year> <article-title>Computational analysis of cell-to-cell heterogeneity in single-cell RNA-sequencing data reveals hidden subpopulations of cells.</article-title><source>Nat. Biotechnol.</source><volume>33</volume>: <fpage>155</fpage>–<lpage>160</lpage>. <pub-id pub-id-type="doi">10.1038/nbt.3102</pub-id><pub-id pub-id-type="pmid">25599176</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Casale</surname><given-names>F. P.</given-names></name><name><surname>Rakitsch</surname><given-names>B.</given-names></name><name><surname>Lippert</surname><given-names>C.</given-names></name><name><surname>Stegle</surname><given-names>O.</given-names></name></person-group>, <year>2015</year> <article-title>Efficient set tests for the genetic analysis of correlated traits.</article-title><source>Nat. Methods</source><volume>12</volume>: <fpage>755</fpage>–<lpage>758</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3439</pub-id><pub-id pub-id-type="pmid">26076425</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>H.</given-names></name><name><surname>Iqbal</surname><given-names>M.</given-names></name><name><surname>Yang</surname><given-names>R.-C.</given-names></name><name><surname>Spaner</surname><given-names>D.</given-names></name></person-group>, <year>2016</year> <article-title>Effect of Lr34/Yr18 on agronomic and quality traits in a spring wheat mapping population and implications for breeding.</article-title><source>Mol. Breed.</source><volume>36</volume>: <fpage>53</fpage><pub-id pub-id-type="doi">10.1007/s11032-016-0478-7</pub-id></mixed-citation>
    </ref>
    <ref id="bib5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>Y.</given-names></name><name><surname>Ren</surname><given-names>X.</given-names></name><name><surname>Zheng</surname><given-names>Y.</given-names></name><name><surname>Zhou</surname><given-names>X.</given-names></name><name><surname>Huang</surname><given-names>L.</given-names></name><etal/></person-group>, <year>2017</year> <article-title>Genetic mapping of yield traits using RIL population derived from Fuchuan Dahuasheng and ICG6375 of peanut (<italic>Arachis hypogaea</italic> L.).</article-title><source>Mol. Breed.</source><volume>37</volume>: <fpage>17</fpage><pub-id pub-id-type="doi">10.1007/s11032-016-0587-3</pub-id><pub-id pub-id-type="pmid">28216998</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Clark</surname><given-names>S. A.</given-names></name><name><surname>van der Werf</surname><given-names>J.</given-names></name></person-group>, <year>2013</year> <article-title>Genomic best linear unbiased prediction (gBLUP) for the estimation of genomic breeding values.</article-title><source>Methods Mol. Biol.</source><volume>1019</volume>: <fpage>321</fpage>–<lpage>330</lpage>. <pub-id pub-id-type="doi">10.1007/978-1-62703-447-0_13</pub-id><pub-id pub-id-type="pmid">23756897</pub-id></mixed-citation>
    </ref>
    <ref id="bib7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Collins</surname><given-names>R.</given-names></name></person-group>, <year>2012</year> <article-title>What makes UK Biobank special?</article-title><source>Lancet</source><volume>379</volume>: <fpage>1173</fpage>–<lpage>1174</lpage>. <pub-id pub-id-type="doi">10.1016/S0140-6736(12)60404-8</pub-id><pub-id pub-id-type="pmid">22463865</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <mixed-citation publication-type="other">de los Campos, G., and A. Grueneberg, 2017 A Suite of Packages for Analysis of Big Genomic Data [R package BGData version 1.0.0]. <ext-link ext-link-type="uri" xlink:href="https://github.com/QuantGen/BGData">https://github.com/QuantGen/BGData</ext-link></mixed-citation>
    </ref>
    <ref id="bib9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>de los Campos</surname><given-names>G.</given-names></name><name><surname>Hickey</surname><given-names>J. M.</given-names></name><name><surname>Pong-Wong</surname><given-names>R.</given-names></name><name><surname>Daetwyler</surname><given-names>H. D.</given-names></name><name><surname>Calus</surname><given-names>M. P. L.</given-names></name></person-group>, <year>2013</year> <article-title>Whole-genome regression and prediction methods applied to plant and animal breeding.</article-title><source>Genetics</source><volume>193</volume>: <fpage>327</fpage>–<lpage>345</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.112.143313</pub-id><pub-id pub-id-type="pmid">22745228</pub-id></mixed-citation>
    </ref>
    <ref id="bib10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>de los Campos</surname><given-names>G.</given-names></name><name><surname>Sorensen</surname><given-names>D.</given-names></name><name><surname>Gianola</surname><given-names>D.</given-names></name></person-group>, <year>2015</year> <article-title>Genomic heritability: What is it?</article-title><source>PLoS Genet.</source><volume>11</volume>: <fpage>e1005048</fpage><pub-id pub-id-type="doi">10.1371/journal.pgen.1005048</pub-id><pub-id pub-id-type="pmid">25942577</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Galinsky</surname><given-names>K. J.</given-names></name><name><surname>Bhatia</surname><given-names>G.</given-names></name><name><surname>Loh</surname><given-names>P.-R.</given-names></name><name><surname>Georgiev</surname><given-names>S.</given-names></name><name><surname>Mukherjee</surname><given-names>S.</given-names></name><etal/></person-group>, <year>2016</year> <article-title>Fast principal-component analysis reveals convergent evolution of ADH1B in Europe and East Asia.</article-title><source>Am. J. Hum. Genet.</source><volume>98</volume>: <fpage>456</fpage>–<lpage>472</lpage>. <pub-id pub-id-type="doi">10.1016/j.ajhg.2015.12.022</pub-id><pub-id pub-id-type="pmid">26924531</pub-id></mixed-citation>
    </ref>
    <ref id="bib12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jia</surname><given-names>Y.</given-names></name><name><surname>Jannink</surname><given-names>J.-L.</given-names></name></person-group>, <year>2012</year> <article-title>Multiple-trait genomic selection methods increase genetic value prediction accuracy.</article-title><source>Genetics</source><volume>192</volume>: <fpage>1513</fpage>–<lpage>1522</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.112.144246</pub-id><pub-id pub-id-type="pmid">23086217</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kang</surname><given-names>H. M.</given-names></name><name><surname>Sul</surname><given-names>J. H.</given-names></name><name><surname>Service</surname><given-names>S. K.</given-names></name><name><surname>Zaitlen</surname><given-names>N. A.</given-names></name><name><surname>Kong</surname><given-names>S.-Y.</given-names></name><etal/></person-group>, <year>2010</year> <article-title>Variance component model to account for sample structure in genome-wide association studies.</article-title><source>Nat. Genet.</source><volume>42</volume>: <fpage>348</fpage>–<lpage>354</lpage>. <pub-id pub-id-type="doi">10.1038/ng.548</pub-id><pub-id pub-id-type="pmid">20208533</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>H.</given-names></name><name><surname>Grueneberg</surname><given-names>A.</given-names></name><name><surname>Vazquez</surname><given-names>A. I.</given-names></name><name><surname>Hsu</surname><given-names>S.</given-names></name><name><surname>de los Campos</surname><given-names>G.</given-names></name></person-group>, <year>2017</year> <article-title>Will big data close the missing heritability gap?</article-title><source>Genetics</source><volume>207</volume>: <fpage>1135</fpage>–<lpage>1145</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.117.300271</pub-id><pub-id pub-id-type="pmid">28893854</pub-id></mixed-citation>
    </ref>
    <ref id="bib15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Koivula</surname><given-names>M.</given-names></name><name><surname>Strandén</surname><given-names>I.</given-names></name><name><surname>Su</surname><given-names>G.</given-names></name><name><surname>Mäntysaari</surname><given-names>E. A.</given-names></name></person-group>, <year>2012</year> <article-title>Different methods to calculate genomic predictions–comparisons of BLUP at the single nucleotide polymorphism level (SNP-BLUP), BLUP at the individual level (G-BLUP), and the one-step approach (H-BLUP).</article-title><source>J. Dairy Sci.</source><volume>95</volume>: <fpage>4065</fpage>–<lpage>4073</lpage>. <pub-id pub-id-type="doi">10.3168/jds.2011-4874</pub-id><pub-id pub-id-type="pmid">22720963</pub-id></mixed-citation>
    </ref>
    <ref id="bib16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Korte</surname><given-names>A.</given-names></name><name><surname>Vilhjalmsson</surname><given-names>B. J.</given-names></name><name><surname>Segura</surname><given-names>V.</given-names></name><name><surname>Platt</surname><given-names>A.</given-names></name><name><surname>Long</surname><given-names>Q.</given-names></name><etal/></person-group>, <year>2012</year> <article-title>A mixed-model approach for genome-wide association studies of correlated traits in structured populations.</article-title><source>Nat. Genet.</source><volume>44</volume>: <fpage>1066</fpage>–<lpage>1071</lpage>. <pub-id pub-id-type="doi">10.1038/ng.2376</pub-id><pub-id pub-id-type="pmid">22902788</pub-id></mixed-citation>
    </ref>
    <ref id="bib17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lin</surname><given-names>Z.</given-names></name><name><surname>Kahng</surname><given-names>M.</given-names></name><name><surname>Sabrin</surname><given-names>K. M.</given-names></name><name><surname>Chau</surname><given-names>D. H. P.</given-names></name><name><surname>Lee</surname><given-names>H.</given-names></name><etal/></person-group>, <year>2014</year> <article-title>MMap: Fast billion-scale graph computation on a PC via memory mapping.</article-title><source>Proc. IEEE Int. Conf. Big Data</source><volume>2014</volume>: <fpage>159</fpage>–<lpage>164</lpage>.<pub-id pub-id-type="pmid">25866846</pub-id></mixed-citation>
    </ref>
    <ref id="bib18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lippert</surname><given-names>C.</given-names></name><name><surname>Listgarten</surname><given-names>J.</given-names></name><name><surname>Liu</surname><given-names>Y.</given-names></name><name><surname>Kadie</surname><given-names>C. M.</given-names></name><name><surname>Davidson</surname><given-names>R. I.</given-names></name><etal/></person-group>, <year>2011</year> <article-title>FaST linear mixed models for genome-wide association studies.</article-title><source>Nat. Methods</source><volume>8</volume>: <fpage>833</fpage>–<lpage>835</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.1681</pub-id><pub-id pub-id-type="pmid">21892150</pub-id></mixed-citation>
    </ref>
    <ref id="bib19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Listgarten</surname><given-names>J.</given-names></name><name><surname>Lippert</surname><given-names>C.</given-names></name><name><surname>Heckerman</surname><given-names>D.</given-names></name></person-group>, <year>2013</year> <article-title>FaST-LMM-Select for addressing confounding from spatial structure and rare variants.</article-title><source>Nat. Genet.</source><volume>45</volume>: <fpage>470</fpage>–<lpage>471</lpage>. <pub-id pub-id-type="doi">10.1038/ng.2620</pub-id><pub-id pub-id-type="pmid">23619783</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Listgarten</surname><given-names>J.</given-names></name><name><surname>Lippert</surname><given-names>C.</given-names></name><name><surname>Kadie</surname><given-names>C. M.</given-names></name><name><surname>Davidson</surname><given-names>R. I.</given-names></name><name><surname>Eskin</surname><given-names>E.</given-names></name><etal/></person-group>, <year>2012</year> <article-title>Improved linear mixed models for genome-wide association studies.</article-title><source>Nat. Methods</source><volume>9</volume>: <fpage>525</fpage>–<lpage>526</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.2037</pub-id><pub-id pub-id-type="pmid">22669648</pub-id></mixed-citation>
    </ref>
    <ref id="bib21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Long</surname><given-names>Q.</given-names></name><name><surname>Zhang</surname><given-names>Q.</given-names></name><name><surname>Vilhjalmsson</surname><given-names>B. J.</given-names></name><name><surname>Forai</surname><given-names>P.</given-names></name><name><surname>Seren</surname><given-names>Ü.</given-names></name><etal/></person-group>, <year>2013</year> <article-title>JAWAMix5: an out-of-core HDF5-based java implementation of whole-genome association studies using mixed models.</article-title><source>Bioinformatics</source><volume>29</volume>: <fpage>1220</fpage>–<lpage>1222</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt122</pub-id><pub-id pub-id-type="pmid">23479353</pub-id></mixed-citation>
    </ref>
    <ref id="bib22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lou</surname><given-names>T. P.</given-names></name><name><surname>Ludewigt</surname><given-names>B.</given-names></name></person-group>, <year>2015</year> <article-title>MMAPDNG: A new, fast code backed by a memory-mapped database for simulating delayed γ-ray emission with MCNPX package.</article-title><source>Comput. Phys. Commun.</source><volume>194</volume>: <fpage>10</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1016/j.cpc.2015.04.005</pub-id></mixed-citation>
    </ref>
    <ref id="bib23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Masuda</surname><given-names>Y.</given-names></name><name><surname>Misztal</surname><given-names>I.</given-names></name><name><surname>Tsuruta</surname><given-names>S.</given-names></name><name><surname>Legarra</surname><given-names>A.</given-names></name><name><surname>Aguilar</surname><given-names>I.</given-names></name><etal/></person-group>, <year>2016</year> <article-title>Implementation of genomic recursions in single-step genomic best linear unbiased predictor for US Holsteins with a large number of genotyped animals.</article-title><source>J. Dairy Sci.</source><volume>99</volume>: <fpage>1968</fpage>–<lpage>1974</lpage>. <pub-id pub-id-type="doi">10.3168/jds.2015-10540</pub-id><pub-id pub-id-type="pmid">26805987</pub-id></mixed-citation>
    </ref>
    <ref id="bib24">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>McKusick</surname><given-names>M. K.</given-names></name><name><surname>Neville-Neil</surname><given-names>G. V.</given-names></name><name><surname>Watson</surname><given-names>R. N. M.</given-names></name></person-group>, <year>2014</year> <source>The Design and Implementation of the FreeBSD Operating System</source>, <publisher-name>Addison-Wesley Professional</publisher-name>.</mixed-citation>
    </ref>
    <ref id="bib25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Montesinos-López</surname><given-names>O. A.</given-names></name><name><surname>Montesinos-López</surname><given-names>A.</given-names></name><name><surname>Crossa</surname><given-names>J.</given-names></name><name><surname>Toledo</surname><given-names>F. H.</given-names></name><name><surname>Pérez-Hernández</surname><given-names>O.</given-names></name><etal/></person-group>, <year>2016</year> <article-title>A Genomic Bayesian Multi-trait and Multi-environment Model.</article-title><source>G3 (Bethesda)</source><volume>6</volume>: <fpage>2725</fpage>–<lpage>2744</lpage>. <pub-id pub-id-type="doi">10.1534/g3.116.032359</pub-id><pub-id pub-id-type="pmid">27342738</pub-id></mixed-citation>
    </ref>
    <ref id="bib26">
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Moore</surname><given-names>R.</given-names></name><name><surname>Casale</surname><given-names>F. P.</given-names></name><name><surname>Bonder</surname><given-names>M. J.</given-names></name><name><surname>Horta</surname><given-names>D.</given-names></name><name><surname>Consortium</surname><given-names>B.</given-names></name><etal/></person-group>, <year>2018</year> <article-title>A linear mixed model approach to study multivariate gene-environment interactions.</article-title><source>bioRxiv</source>. <pub-id pub-id-type="doi">10.1101/270611</pub-id></mixed-citation>
    </ref>
    <ref id="bib27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Peplow</surname><given-names>M.</given-names></name></person-group>, <year>2016</year> <article-title>The 100,000 Genomes Project.</article-title><source>BMJ</source><volume>353</volume>: <fpage>i1757</fpage><pub-id pub-id-type="doi">10.1136/bmj.i1757</pub-id><pub-id pub-id-type="pmid">27075170</pub-id></mixed-citation>
    </ref>
    <ref id="bib28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pérez</surname><given-names>P.</given-names></name><name><surname>de los Campos</surname><given-names>G.</given-names></name></person-group>, <year>2014</year> <article-title>Genome-wide regression and prediction with the BGLR statistical package.</article-title><source>Genetics</source><volume>198</volume>: <fpage>483</fpage>–<lpage>495</lpage>. <pub-id pub-id-type="doi">10.1534/genetics.114.164442</pub-id><pub-id pub-id-type="pmid">25009151</pub-id></mixed-citation>
    </ref>
    <ref id="bib29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Poulson</surname><given-names>J.</given-names></name><name><surname>Marker</surname><given-names>B.</given-names></name><name><surname>van de Geijn</surname><given-names>R. A.</given-names></name><name><surname>Hammond</surname><given-names>J. R.</given-names></name><name><surname>Romero</surname><given-names>N. A.</given-names></name></person-group>, <year>2013</year> <article-title>Elemental: A new framework for distributed memory dense matrix computations.</article-title><source>ACM Trans. Math. Softw.</source><volume>39</volume>: <pub-id pub-id-type="doi">10.1145/2427023.2427030</pub-id></mixed-citation>
    </ref>
    <ref id="bib30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rahmani</surname><given-names>E.</given-names></name><name><surname>Zaitlen</surname><given-names>N.</given-names></name><name><surname>Baran</surname><given-names>Y.</given-names></name><name><surname>Eng</surname><given-names>C.</given-names></name><name><surname>Hu</surname><given-names>D.</given-names></name><etal/></person-group>, <year>2016</year> <article-title>Sparse PCA corrects for cell type heterogeneity in epigenome-wide association studies.</article-title><source>Nat. Methods</source><volume>13</volume>: <fpage>443</fpage>–<lpage>445</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3809</pub-id><pub-id pub-id-type="pmid">27018579</pub-id></mixed-citation>
    </ref>
    <ref id="bib31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ringnér</surname><given-names>M.</given-names></name></person-group>, <year>2008</year> <article-title>What is principal component analysis?</article-title><source>Nat. Biotechnol.</source><volume>26</volume>: <fpage>303</fpage>–<lpage>304</lpage>. <pub-id pub-id-type="doi">10.1038/nbt0308-303</pub-id><pub-id pub-id-type="pmid">18327243</pub-id></mixed-citation>
    </ref>
    <ref id="bib32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salavert</surname><given-names>J.</given-names></name><name><surname>Tomás</surname><given-names>A.</given-names></name><name><surname>Medina</surname><given-names>I.</given-names></name><name><surname>Sadakane</surname><given-names>K.</given-names></name><name><surname>Blanquer</surname><given-names>I.</given-names></name></person-group>, <year>2016</year> <article-title>Pair-end inexact mapping on hybrid GPU environments and out-of-core indexes.</article-title><source>Curr. Bioinform.</source><volume>11</volume>: <fpage>459</fpage>–<lpage>469</lpage>. <pub-id pub-id-type="doi">10.2174/1574893611666160212235359</pub-id></mixed-citation>
    </ref>
    <ref id="bib33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salavert</surname><given-names>J.</given-names></name><name><surname>Tomás</surname><given-names>A.</given-names></name><name><surname>Tárraga</surname><given-names>J.</given-names></name><name><surname>Medina</surname><given-names>I.</given-names></name><name><surname>Dopazo</surname><given-names>J.</given-names></name><etal/></person-group>, <year>2015</year> <article-title>Fast inexact mapping using advanced tree exploration on backward search methods.</article-title><source>BMC Bioinformatics</source><volume>16</volume>: <fpage>18</fpage><pub-id pub-id-type="doi">10.1186/s12859-014-0438-3</pub-id><pub-id pub-id-type="pmid">25626517</pub-id></mixed-citation>
    </ref>
    <ref id="bib34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Song</surname><given-names>N. Y.</given-names></name><name><surname>Son</surname><given-names>Y.</given-names></name><name><surname>Han</surname><given-names>H.</given-names></name><name><surname>Yeom</surname><given-names>H. Y.</given-names></name></person-group>, <year>2016</year> <article-title>Efficient memory-mapped I/O on fast storage device.</article-title><source>ACM Trans. Storage</source><volume>12</volume>: <fpage>19</fpage><pub-id pub-id-type="doi">10.1145/2846100</pub-id></mixed-citation>
    </ref>
    <ref id="bib35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Speed</surname><given-names>D.</given-names></name><name><surname>Balding</surname><given-names>D. J.</given-names></name></person-group>, <year>2015</year> <article-title>Relatedness in the post-genomic era: is it still useful?</article-title><source>Nat. Rev. Genet.</source><volume>16</volume>: <fpage>33</fpage>–<lpage>44</lpage>. <pub-id pub-id-type="doi">10.1038/nrg3821</pub-id><pub-id pub-id-type="pmid">25404112</pub-id></mixed-citation>
    </ref>
    <ref id="bib36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stegle</surname><given-names>O.</given-names></name><name><surname>Parts</surname><given-names>L.</given-names></name><name><surname>Piipari</surname><given-names>M.</given-names></name><name><surname>Winn</surname><given-names>J.</given-names></name><name><surname>Durbin</surname><given-names>R.</given-names></name></person-group>, <year>2012</year> <article-title>Using probabilistic estimation of expression residuals (PEER) to obtain increased power and interpretability of gene expression analyses.</article-title><source>Nat. Protoc.</source><volume>7</volume>: <fpage>500</fpage>–<lpage>507</lpage>. <pub-id pub-id-type="doi">10.1038/nprot.2011.457</pub-id><pub-id pub-id-type="pmid">22343431</pub-id></mixed-citation>
    </ref>
    <ref id="bib37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tsuruta</surname><given-names>S.</given-names></name><name><surname>Misztal</surname><given-names>I.</given-names></name><name><surname>Aguilar</surname><given-names>I.</given-names></name><name><surname>Lawlor</surname><given-names>T. J.</given-names></name></person-group>, <year>2011</year> <article-title>Multiple-trait genomic evaluation of linear type traits using genomic and phenotypic data in US Holsteins.</article-title><source>J. Dairy Sci.</source><volume>94</volume>: <fpage>4198</fpage>–<lpage>4204</lpage>. <pub-id pub-id-type="doi">10.3168/jds.2011-4256</pub-id><pub-id pub-id-type="pmid">21787955</pub-id></mixed-citation>
    </ref>
    <ref id="bib38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Van Essen</surname><given-names>B.</given-names></name><name><surname>Hsieh</surname><given-names>H.</given-names></name><name><surname>Ames</surname><given-names>S.</given-names></name><name><surname>Pearce</surname><given-names>R.</given-names></name><name><surname>Gokhale</surname><given-names>M.</given-names></name></person-group>, <year>2015</year> <article-title>DI-MMAP—a scalable memory-map runtime for out-of-core data-intensive applications.</article-title><source>Cluster Comput.</source><volume>18</volume>: <fpage>15</fpage>–<lpage>28</lpage>. <pub-id pub-id-type="doi">10.1007/s10586-013-0309-0</pub-id></mixed-citation>
    </ref>
    <ref id="bib39">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>E.</given-names></name><name><surname>Zhang</surname><given-names>Q.</given-names></name><name><surname>Shen</surname><given-names>B.</given-names></name><name><surname>Zhang</surname><given-names>G.</given-names></name><name><surname>Lu</surname><given-names>X.</given-names></name><etal/></person-group>, <year>2014</year> <article-title>Intel math kernel library</article-title>, pp. <fpage>167</fpage>–<lpage>188</lpage> in <source>High-Performance Computing on the Intel Xeon Phi</source>, <publisher-name>Springer International Publishing</publisher-name>, <publisher-loc>Cham, Switzerland</publisher-loc>
<pub-id pub-id-type="doi">10.1007/978-3-319-06486-4</pub-id></mixed-citation>
    </ref>
    <ref id="bib40">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>L.</given-names></name><name><surname>Wu</surname><given-names>W.</given-names></name><name><surname>Xu</surname><given-names>Z.</given-names></name><name><surname>Xiao</surname><given-names>J.</given-names></name><name><surname>Yang</surname><given-names>Y.</given-names></name></person-group>, <year>2016</year> <collab>A high performance level-3 BLAS library for heterogeneous multi-GPU computing. Proceedings of the 2016 International Conference on Supercomputing 2016:20</collab><publisher-name>ACM</publisher-name>, <publisher-loc>New York, New York</publisher-loc><pub-id pub-id-type="doi">10.1145/2925426.2926256</pub-id></mixed-citation>
    </ref>
    <ref id="bib41">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Z.</given-names></name><name><surname>Li</surname><given-names>J.</given-names></name><name><surname>Wu</surname><given-names>C.</given-names></name><name><surname>Yang</surname><given-names>D.</given-names></name><name><surname>Wang</surname><given-names>Z.</given-names></name><etal/></person-group>, <year>2015</year> <collab>HSPT: Practical implementation and efficient management of embedded shadow page tables for cross-ISA system virtual machines. Proceedings of the 11th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments</collab>. <year>2015</year>: <fpage>53</fpage>–<lpage>64</lpage>. <pub-id pub-id-type="doi">10.1145/2731186.2731188</pub-id></mixed-citation>
    </ref>
    <ref id="bib42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>J.</given-names></name><name><surname>Lee</surname><given-names>S. H.</given-names></name><name><surname>Goddard</surname><given-names>M. E.</given-names></name><name><surname>Visscher</surname><given-names>P. M.</given-names></name></person-group>, <year>2011</year> <article-title>GCTA: a tool for genome-wide complex trait analysis.</article-title><source>Am. J. Hum. Genet.</source><volume>88</volume>: <fpage>76</fpage>–<lpage>82</lpage>. <pub-id pub-id-type="doi">10.1016/j.ajhg.2010.11.011</pub-id><pub-id pub-id-type="pmid">21167468</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?subarticle report9846?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">F1000Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">F1000Res</journal-id>
    <journal-id journal-id-type="pmc">F1000Research</journal-id>
    <journal-title-group>
      <journal-title>F1000Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2046-1402</issn>
    <publisher>
      <publisher-name>F1000Research</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4670004</article-id>
    <article-id pub-id-type="pmid">26672762</article-id>
    <article-id pub-id-type="doi">10.12688/f1000research.6767.1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
        <subj-group>
          <subject>Bioinformatics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CyREST: Turbocharging Cytoscape Access for External Tools via a RESTful API</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>[version 1; referees: 2 approved]</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Ono</surname>
          <given-names>Keiichiro</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Muetze</surname>
          <given-names>Tanja</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kolishovski</surname>
          <given-names>Georgi</given-names>
        </name>
        <xref ref-type="aff" rid="a3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Shannon</surname>
          <given-names>Paul</given-names>
        </name>
        <xref ref-type="aff" rid="a4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Demchak</surname>
          <given-names>Barry</given-names>
        </name>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <aff id="a1"><label>1</label>Department of Medicine, University of California, San Diego, CA, 92093-0688, USA</aff>
      <aff id="a2"><label>2</label>Imperial College London, London, SW7 2AZ, UK</aff>
      <aff id="a3"><label>3</label>Bioconductor, Boston, MA, 02125, USA</aff>
      <aff id="a4"><label>4</label>Fred Hutchinson Cancer Research Institute, Seattle, WA, 98109, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:idekerlab.bdemchak@gmail.com">idekerlab.bdemchak@gmail.com</email>
      </corresp>
      <fn fn-type="con">
        <p>KO designed and implemented the software. KO and BD wrote this manuscript. TM and GK helped design and implement the RCy3 harmonization library and sample workflows. PS supervised TM and GK, and reviewed this manuscript. All authors have seen and agreed to the final content of the manuscript.</p>
      </fn>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>5</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>4</volume>
    <elocation-id>478</elocation-id>
    <history>
      <date date-type="accepted">
        <day>15</day>
        <month>7</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2015 Ono K et al.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="f1000research-4-7270.pdf"/>
    <abstract>
      <p>As bioinformatic workflows become increasingly complex and involve multiple specialized tools, so does the difficulty of reliably reproducing those workflows. Cytoscape is a critical workflow component for executing network visualization, analysis, and publishing tasks, but it can be operated only manually via a point-and-click user interface. Consequently, Cytoscape-oriented tasks are laborious and often error prone, especially with multistep protocols involving many networks.</p>
      <p>In this paper, we present the new cyREST Cytoscape app and accompanying harmonization libraries. Together, they improve workflow reproducibility and researcher productivity by enabling popular languages (e.g., Python and R, JavaScript, and C#) and tools (e.g., IPython/Jupyter Notebook and RStudio) to directly define and query networks, and perform network analysis, layouts and renderings. We describe cyREST’s API and overall construction, and present Python- and R-based examples that illustrate how Cytoscape can be integrated into large scale data analysis pipelines.</p>
      <p>cyREST is available in the Cytoscape app store (http://apps.cytoscape.org) where it has been downloaded over 1900 times since its release in late 2014.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Workflow</kwd>
      <kwd>Reproducibility</kwd>
      <kwd>Cytoscape</kwd>
      <kwd>Service Oriented Architecture</kwd>
      <kwd>Interoperability</kwd>
      <kwd>REST</kwd>
      <kwd>Resource Oriented Development</kwd>
      <kwd>Microservice</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>National Resource for Network Biology (NRNB)</funding-source>
        <award-id>P41 RR031228</award-id>
        <award-id>GM103504</award-id>
      </award-group>
      <funding-statement>This work was supported with funding from the National Resource for Network Biology (NRNB) under award numbers P41 RR031228 and GM103504 assigned to Trey Ideker.</funding-statement>
      <funding-statement>
        <italic>I confirm that the funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</italic>
      </funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Because of its robust network analysis and visualization capabilities coupled with its vibrant user and developer community, Cytoscape 3 has become a tool of choice for studying large network-oriented *omics data sets on common workstations and for publishing results. However, even as Cytoscape
<sup><xref rid="ref-1" ref-type="bibr">1</xref></sup> is well positioned to handle customized *omics workflows, bioinformaticians’ need to quickly and efficiently create complex, varied, and repeatable workflows exceeds the capabilities of Cytoscape’s existing automation features. At the same time, bioinformaticians have embraced a class of highly flexible tools consisting of fully fledged programming environments (e.g., IPython/Jupyter Notebook
<sup><xref rid="ref-2" ref-type="bibr">2</xref></sup>, RStudio, and MATLAB) coupled with programming languages (e.g., Python and R) and highly capable and flexible bioinformatic libraries.</p>
    <p>Inasmuch as these tools address the data collection and analysis portions of typical bioinformatic workflows, Cytoscape complements them by addressing visualization, additional analysis, and network publication. To date, combining these tools with Cytoscape has seen only limited success, largely because of the limitations of Cytoscape’s automation interfaces and its point-and-click user interface. Consequently, this integration has been labor intensive, inconvenient, and often unrepeatable, particularly as the complexity of analysis and visualization processing increases.</p>
    <p>We created the cyREST Cytoscape app to enable automated access to the Cytoscape network and visualization models directly from within these tools, thereby exposing Cytoscape visualization, analysis, and publishing features in complex, varied, and reproducible bioinformatic workflows as shown in
<xref ref-type="fig" rid="f1">Figure 1</xref>.</p>
    <fig fig-type="figure" id="f1" orientation="portrait" position="float">
      <label>Figure 1. </label>
      <caption>
        <title>Cytoscape working with other components to create bioinformatic workflows.</title>
      </caption>
      <graphic xlink:href="f1000research-4-7270-g0000"/>
    </fig>
    <p>cyREST transforms Cytoscape into a REST-based microservice
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup> easily callable by workflows coded in REST-enabled languages such as Python, R, and Java. It is complemented by language-specific libraries that simplify Cytoscape access and harmonize native data models with Cytoscape’s network model as shown in
<xref ref-type="fig" rid="f2">Figure 2</xref>. (REST
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup> is short for Representational State Transfer.)</p>
    <fig fig-type="figure" id="f2" orientation="portrait" position="float">
      <label>Figure 2. </label>
      <caption>
        <title>Relationship of Cytoscape to Bioinformatics-oriented Tools and Languages, where cyREST is in green.</title>
        <p>Harmonization libraries are green and blue, representing an interface between workflow code and cyREST.</p>
      </caption>
      <graphic xlink:href="f1000research-4-7270-g0001"/>
    </fig>
    <p>cyREST complements Cytoscape’s existing Command Line Tool, where cyREST operates on Cytoscape’s data and Command executes Cytoscape commands. Since its original beta release date in late 2014, cyREST has been downloaded over 1900 times.</p>
    <p>In this paper, we explain how cyREST relates to existing Cytoscape-oriented automation solutions, and then describe the design and use of cyREST itself. Finally, we give examples of cyREST’s use from applications written in Python (using IPython Notebook) and R (using RStudio).</p>
    <sec>
      <title>Existing tools</title>
      <p>Several Cytoscape apps and plugins tackle tool interoperability and workflow reproducibility challenges (
<xref ref-type="table" rid="T1">Table 1</xref>), most notably Cytoscape 3’s Command core module, but also including plugins deprecated along with Cytoscape 2.</p>
      <table-wrap id="T1" orientation="portrait" position="anchor">
        <label>Table 1. </label>
        <caption>
          <title>Existing Cytoscape apps to control Cytoscape from scripts.</title>
        </caption>
        <table frame="hsides" rules="groups" content-type="article-table">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Application Name</th>
              <th align="left" rowspan="1" colspan="1">Description</th>
              <th align="left" rowspan="1" colspan="1">Supported
<break/>Version</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Command</bold>
                <sup>
                  <xref rid="ref-5" ref-type="bibr">5</xref>
                </sup>
              </td>
              <td valign="top" rowspan="1" colspan="1">A domain specific language to automate simple
<break/>tasks in Cytoscape</td>
              <td valign="top" rowspan="1" colspan="1">3.x and 2.x</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Cyrface</bold>
                <sup>
                  <xref rid="ref-6" ref-type="bibr">6</xref>
                </sup>
              </td>
              <td rowspan="1" colspan="1">An interface to call R packages from Cytoscape</td>
              <td rowspan="1" colspan="1">3.x</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>ScriptingEngine</bold>
                <sup>
                  <xref rid="ref-8" ref-type="bibr">8</xref>
                </sup>
              </td>
              <td valign="top" rowspan="1" colspan="1">Exposes Cytoscape API to scripting engines for
<break/>JVM (JavaScript, Jython, JRuby, etc.)</td>
              <td valign="top" rowspan="1" colspan="1">2.x</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>CytoscapeRPC</bold>
                <sup>
                  <xref rid="ref-15" ref-type="bibr">15</xref>
                </sup>
              </td>
              <td valign="top" rowspan="1" colspan="1">Plugin to call low-level Cytoscape API through
<break/>XML-RPC</td>
              <td valign="top" rowspan="1" colspan="1">2.x</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>RCytoscape</bold>
                <sup>
                  <xref rid="ref-17" ref-type="bibr">17</xref>
                </sup>
              </td>
              <td valign="top" rowspan="1" colspan="1">Bioconductor package to call Cytoscape from R
<break/>using CytoscapeRPC</td>
              <td valign="top" rowspan="1" colspan="1">2.x</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Cytoscape 3’s Command Line Tool
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup> facilitates task automation via its own domain specific language, which provides access to high-level Cytoscape functions using a separate REST server within Cytoscape. While Command can execute individual commands (e.g., for loading and applying layouts) and sequences of commands (as scripts), it has no provision for accessing the network, style, and visualization information available through cyREST. Command is a complement to cyREST, where the combination greatly improves interoperability between Cytoscape and workflow-capable external tools, which contribute looping and control flow. A workflow can intermix Command and cyREST calls without conflict – they address different capabilities within Cytoscape.</p>
      <p>A notable alternative to cyREST is the Cyrface app
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup>, which allows R and Bioconductor
<sup><xref rid="ref-7" ref-type="bibr">7</xref></sup> functions to be executed
<italic>from</italic> Cytoscape 3, with the results returned
<italic>to</italic> Cytoscape 3 – the opposite of a cyREST call. While this approach enables Cytoscape to act as the workflow orchestrator, it requires that a target application act as a server, which often requires idiosyncratic and complex support for each target application. So far, this approach has been taken only for interfacing to R.</p>
      <p>Numerous approaches to interoperability were implemented as ScriptingEngine
<sup><xref rid="ref-8" ref-type="bibr">8</xref></sup>-based plugins for Cytoscape 2, now deprecated. Such plugins were created for executing scripts written in languages (e.g., JRuby
<sup><xref rid="ref-9" ref-type="bibr">9</xref></sup>, Jython
<sup><xref rid="ref-10" ref-type="bibr">10</xref></sup>, Groovy
<sup><xref rid="ref-11" ref-type="bibr">11</xref></sup>, Clojure
<sup><xref rid="ref-12" ref-type="bibr">12</xref></sup>, and JavaScript
<sup><xref rid="ref-13" ref-type="bibr">13</xref></sup>). While these scripts had full access to Cytoscape’s comprehensive public API, their tight coupling to the Cytoscape runtime made them difficult to write, debug, and maintain. Because they were built on top of the Java virtual machine (JVM) and shared Cytoscape’s JVM, they had little access to increasingly capable and standardized third party native libraries (e.g., SciPy
<sup><xref rid="ref-14" ref-type="bibr">14</xref></sup> for Python). By contrast, the cyREST approach allows control of Cytoscape by best-of-breed tools and languages running independently as separate processes and leveraging best-of-breed native libraries. Conversely, while plugin implementations could interact with the user via dialog boxes directly within Cytoscape 2, scripts executing in separate processes run within their own windows, disconnected from Cytoscape 3.</p>
      <p>Similar to the cyREST approach, the CytoscapeRPC plugin
<sup><xref rid="ref-15" ref-type="bibr">15</xref></sup> enabled independent scripts (e.g., Python) to create, query, and modify networks and visual styles in Cytoscape 2, but using an XML-RPC
<sup><xref rid="ref-16" ref-type="bibr">16</xref></sup> protocol instead of REST. Given the rapid adoption of REST conventions and supporting infrastructure, use of XML-RPC is becoming less common. Notably, RCytoscape
<sup><xref rid="ref-17" ref-type="bibr">17</xref></sup> is a Bioconductor package that leveraged CytoscapeRPC to enabled R applications to control Cytoscape 2. For Cytoscape 3, RCytoscape has been replaced by the RCy3 package in Bioconductor release 3.2, which leverages cyREST instead and is described below.</p>
    </sec>
  </sec>
  <sec>
    <title>What is cyREST?</title>
    <p>cyREST is a Cytoscape app that exposes Cytoscape network-related data structures and publishing functionality as a microservice callable via a REST protocol by external tools and languages. To date, it offers over 113 API calls, as documented at
<ext-link ext-link-type="uri" xlink:href="http://idekerlab.github.io/cyREST">http://idekerlab.github.io/cyREST</ext-link>, where each API call accepts JSON-encoded values
<sup><xref rid="ref-18" ref-type="bibr">18</xref></sup> and returns JSON-encoded results.</p>
    <p>Given that most modern tools and languages can call JSON-oriented REST services either directly or through well-vetted libraries, cyREST enables near-universal access to Cytoscape. However, such tools and languages often define data structures well tuned for use with their own specialized libraries that manipulate network-oriented data. To ease and accelerate the programming process, cyREST provides harmonization libraries designed to make calling cyREST natural and native within a tool or language. Harmonization libraries are described below.</p>
    <p>Note that while cyREST enables Cytoscape to act as a service, it is intended to serve only one client application at a time, where the client and Cytoscape run on the same workstation. Cytoscape itself remains capable of working on a single Cytoscape session at a time and maintains a visible window accessible to a user – Cytoscape does not operate in so-called headless mode. As a result, a client application is free to implement a workflow that intentionally sets up a network within Cytoscape so that a user can work further with it.</p>
    <p>This section describes both the cyREST design and implementation and the implementation of harmonization libraries. It then presents example workflows created by combining standard data analysis tools with Cytoscape/cyREST.</p>
    <sec>
      <title>Design</title>
      <p>cyREST is a Cytoscape app that exposes the Cytoscape network data model to external tools and languages. It presents an API based on principles of REST, as do other popular biology-related data services, including those provided by EBI
<sup><xref rid="ref-19" ref-type="bibr">19</xref></sup>. As a result, cyREST leverages REST facilities in existing tools and languages already built and vetted for use with other REST-based services. The definition and packaging of individual API functions takes advantage of lessons learned in building similar interfaces for Cytoscape 2.</p>
      <p>cyREST APIs represent all Cytoscape data objects and functions as resources according to principles of Resource-oriented Design (ROD)
<sup><xref rid="ref-20" ref-type="bibr">20</xref></sup>. Data objects include networks, tables, and Visual Styles. Functions include applying layout algorithms on networks, updating Visual Styles, and performing statistical analysis. Under REST and ROD, each resource is encoded as a URL where hierarchy is represented as segments within the URL. For example, the URL
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/tables/count">http://localhost:1234/v1/tables/count</ext-link> can be decomposed into a REST server (
<ext-link ext-link-type="uri" xlink:href="http://localhost">http://localhost</ext-link>), port number (1234), an API version (v1), a resource (tables), and an attribute of the resource (count). So, this URL represents the count of global tables maintained by Cytoscape.
<xref ref-type="table" rid="T2">Table 2</xref> shows a sampling of resources available under the
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1">http://localhost:1234/v1</ext-link> URL, with a more comprehensive list in the cyREST document at
<ext-link ext-link-type="uri" xlink:href="http://idekerlab.github.io/cyREST">http://idekerlab.github.io/cyREST</ext-link>).</p>
      <table-wrap id="T2" orientation="portrait" position="anchor">
        <label>Table 2. </label>
        <caption>
          <title>Examples of Cytoscape data resources exposed by cyREST.</title>
        </caption>
        <table frame="hsides" rules="groups" content-type="article-table">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">URL Segment</th>
              <th align="left" rowspan="1" colspan="1">Data Resource</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks</bold>
              </td>
              <td rowspan="1" colspan="1">list of all networks (as networkId)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks/networkId/edges</bold>
              </td>
              <td rowspan="1" colspan="1">edges within network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks/networkId/nodes</bold>
              </td>
              <td rowspan="1" colspan="1">nodes within network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks/networkId/tables</bold>
              </td>
              <td rowspan="1" colspan="1">tables within network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks/networkId/views</bold>
              </td>
              <td rowspan="1" colspan="1">views of network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>networks/networkId/groups</bold>
              </td>
              <td rowspan="1" colspan="1">node groupings within network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>session</bold>
              </td>
              <td rowspan="1" colspan="1">session-wide attributes (e.g., name)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>styles</bold>
              </td>
              <td rowspan="1" colspan="1">visual styles that can apply to networks</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>styles/styleName/mappings</bold>
              </td>
              <td rowspan="1" colspan="1">values of visual properties for style styleName</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>cyREST follows ROD recommendations for sensible mappings between CRUD operations (create, read, update, and delete) and HTTP operations (POST, GET, PUT, DELETE) on data objects. Unless otherwise specified in the cyREST documentation, all HTTP operations accept or return values encoded as JSON. For example, GET
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/networks">http://localhost:1234/v1/networks</ext-link> returns a list of networkIds in an array (e.g., [1,2,3]). GET
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/networks/networkId">http://localhost:1234/v1/networks/networkId</ext-link> returns all nodes, edges, tables, and other data relating to network networkId in the Cytoscape.js
<sup><xref rid="ref-21" ref-type="bibr">21</xref></sup> JSON format.</p>
      <p>For functions, ROD provides less guidance for CRUD/HTTP mappings or URL encoding. cyREST addresses this by grouping actions under
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/apply">http://localhost:1234/v1/apply</ext-link> (using GET operations) as illustrated in
<xref ref-type="table" rid="T3">Table 3</xref>.</p>
      <table-wrap id="T3" orientation="portrait" position="anchor">
        <label>Table 3. </label>
        <caption>
          <title>Examples of Cytoscape function resources exposed by cyREST.</title>
        </caption>
        <table frame="hsides" rules="groups" content-type="article-table">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">URL Segment</th>
              <th align="left" rowspan="1" colspan="1">Function Resource</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>edgebundling/networkId</bold>
              </td>
              <td rowspan="1" colspan="1">apply edge bundling to edges in network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>fit/networkId</bold>
              </td>
              <td rowspan="1" colspan="1">fit network networkId to its window</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>layouts/algorithm/networkId</bold>
              </td>
              <td rowspan="1" colspan="1">apply a layout algorithm to network networkId</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>styles/styleName/networkId</bold>
              </td>
              <td rowspan="1" colspan="1">apply visual style styleName to network networkId</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Implementation</title>
      <p>cyREST is implemented as a Cytoscape app written in the Java programming language. It uses the Jersey JAX-RS
<sup><xref rid="ref-22" ref-type="bibr">22</xref></sup> library to implement the RESTful API, and provides access to data object and function operations as calls to public Cytoscape APIs. Under REST, each client request is phrased as an HTTP command (e.g., GET
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/networksHTTP/1.1">http://localhost:1234/v1/networks HTTP/1.1</ext-link>) and the reply is returned as a JSON structure.</p>
      <p>cyREST uses an embedded Grizzly HTTP server to receive and process client requests, where each HTTP request’s URL is mapped to a method in a resource manager class created by cyREST and registered with Grizzly. Each resource method declares the URL it services. When Grizzly receives a REST request, it calls the resource function registered for the URL, which calculates and returns a REST reply. For example, the NetworkResource defines a function that returns the number of Cytoscape networks in the current session, shown in the code fragment below. Note that the fragment defines its associated HTTP command, URL, and JSON output via Java annotations.</p>
      <p>
        <preformat>
          <styled-content style="font-size:15px;font-weight:bold;">@Path(</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">"/v1/networks"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold">)</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#0000FF;">public class</styled-content>
          <styled-content style="font-size:15px;font-weight:bold">NetworkResource</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#0000FF;">extends</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">    AbstractResource {
  @GET
  @Path(</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">"/count"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">)
  @Produces(MediaType.APPLICATION_JSON)</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#0000FF;">  public</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">String getNetworkCount() {</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#009900;">    // Call Cytoscape to get count of network
        - return value as COUNT</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#0000FF;">    return</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">        getNumberObjectString(JsonTags.COUNT,
        networkManager.getNetworkSet().size());
}</styled-content>
        </preformat>
      </p>
      <p>As with most Cytoscape apps, cyREST is initialized in its cyActivator function, which creates resource classes that reference all Cytoscape APIs to be used in servicing client requests. These include factories and managers for networks, network views, visual mapping, layout algorithms, groups, tables, sessions, and others.</p>
      <p>The default HTTP port for cyREST is 1234, which can be changed by creating or modify the Cytoscape rest.port property (via Cytoscape’s Edit | Preferences | Properties dialog). Note that security-conscious workstations should firewall the cyREST port to prevent unintended outside access.</p>
      <p>To test for the availability of a cyREST server, use an Internet browser to view the URL
<ext-link ext-link-type="uri" xlink:href="http://localhost:1234/v1/">http://localhost:1234/v1/</ext-link>, which returns JSON-formatted version information similar to:</p>
      <p>
        <preformat>
          <styled-content style="font-size:15px;font-weight:bold;">{</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">	"apiVersion"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">"v1"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">,</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">
	"numberOfCores"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:4,</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">
	"memoryStatus"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">: {</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">	       "usedMemory"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:517,</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">
	       "freeMemory"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:1445,</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">
	       "totalMemory"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:1963,</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">	
	       "maxMemory"</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">:6917
	}
}</styled-content>
        </preformat>
      </p>
      <p>Each cyREST function is exercised and validated before release by a suite of JUnit-based tests.</p>
    </sec>
    <sec>
      <title>Harmonization libraries</title>
      <p>While most programming languages make calling REST APIs and composing or parsing JSON simple, the data returned by cyREST may not be organized efficiently for ease of use in a particular language or with that language’s libraries. To maximize programmer productivity, we provide harmonization libraries (see
<xref ref-type="fig" rid="f2">Figure 2</xref>) to perform efficient cyREST calls on one hand, and present an interface easily used by programmers on the other hand. To date, we provide harmonization libraries for Python and R, and we expect to produce others.</p>
    </sec>
    <sec>
      <title>py2cytoscape harmonization library for Python</title>
      <p>The Python programming language has become popular among scientists and data analysts because of its rich collection of open source data analysis packages and a large developer community. It is an excellent tool for data cleansing, manipulation, analysis, and visualization; its igraph
<sup><xref rid="ref-23" ref-type="bibr">23</xref></sup>, NetworkX
<sup><xref rid="ref-24" ref-type="bibr">24</xref></sup>, and graph-tool
<sup><xref rid="ref-25" ref-type="bibr">25</xref></sup> packages are useful components in network data analysis workflows. In a workflow, it functions well as a glue that connects multiple heterogeneous computing resources, public databases, and private data files to build data analysis pipelines on workstations and computing clusters.</p>
      <p>We created the py2cytoscape library to enable Python-based workflows to easily incorporate Cytoscape functionality by wrapping Python calls to cyREST and performing automatic translations between these packages’ data structures and cyREST’s JSON. For example, the following code creates a new Cytoscape network by using py2cytoscape calls, and replaces 16 lines that would be necessary when calling cyREST directly – see
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/py2cytoscape/blob/develop/README.md">https://github.com/idekerlab/py2cytoscape/blob/develop/README.md</ext-link> for the direct cyREST calls.</p>
      <p>
        <preformat>
          <styled-content style="font-size:15px;font-weight:bold;">from py2cytoscape.data.cyrest_client</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#0000FF;">import</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">    CyRestClient

cy = CyRestClient()
network = cy.network.create(name=</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">’My Network’</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">, 
    collection=</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;color:#9400D1;">’My  network  collection’</styled-content>
          <styled-content style="font-size:15px;font-weight:bold;">)
print(network.get_id())</styled-content>
        </preformat>
      </p>
      <p>py2cytoscape is open source and is available from the PyPI repository (
<ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/py2cytoscape">https://pypi.python.org/pypi/py2cytoscape</ext-link>).</p>
      <p>Note that py2cytoscape provides a widget that renders a network in cytoscape.js JSON format and then visualizes the network interactively within a Jupyter/IPython Notebook
<sup><xref rid="ref-26" ref-type="bibr">26</xref></sup> document, an example of which is at
<ext-link ext-link-type="uri" xlink:href="http://nbviewer.ipython.org/github/idekerlab/py2cytoscape/blob/develop/examples/New_wrapper_api_sample.ipynb">http://nbviewer.ipython.org/github/idekerlab/py2cytoscape/blob/develop/examples/New_wrapper_api_sample.ipynb</ext-link>.</p>
    </sec>
    <sec>
      <title>RCy3 harmonization library for R</title>
      <p>R is a particularly important platform for biologists because of the complimentary Bioconductor library. We are collaborating with the Bioconductor group to produce the RCy3 harmonization library for R
<sup><xref rid="ref-27" ref-type="bibr">27</xref></sup>, which leverages cyREST to realize native R network visualization, analysis, and publishing functions. Its igraph, graph
<sup><xref rid="ref-28" ref-type="bibr">28</xref></sup>, and RBGL
<sup><xref rid="ref-29" ref-type="bibr">29</xref></sup> packages are useful components for network data analysis workflows.</p>
    </sec>
    <sec>
      <title>Sample workflows</title>
      <p>A typical workflow performs data acquisition and integration, analysis, network visualization, and publishing. Often, these steps are performed one at a time by humans executing one discreet tool after another, possibly resulting in high labor costs, low throughput, high error rates, and an inability to reproduce the workflow reliably. In contrast,
<xref ref-type="fig" rid="f1">Figure 1</xref> shows a workflow orchestrated by external tools such as Python and R, which interact with Cytoscape to perform parts of the workflow. As supplementary material, we provide downloadable sample workflows that incorporate and demonstrate cyREST functionality using py2cytoscape and RCy3 harmonization libraries.</p>
      <p>Note that Cytoscape/cyREST is designed to run on the same workstation as the workflow that calls it – Cytoscape maintains its own application window, and workflows may find advantage in soliciting users directly within Cytoscape.</p>
    </sec>
    <sec>
      <title>Python examples</title>
      <p>Our Python-based sample workflows are simple reflections of real world data analysis and visualization pipelines (see
<xref ref-type="fig" rid="f1">Figure 1</xref>) and use standard Python packages as much as possible. They are located in
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cy-rest-python">https://github.com/idekerlab/cy-rest-python</ext-link> and are viewable using the nbviewer web application (
<ext-link ext-link-type="uri" xlink:href="http://nbviewer.ipython.org/">http://nbviewer.ipython.org/</ext-link>) in Jupyter Notebook format.</p>
      <p>Some Python packages are more capable or faster than equivalent Cytoscape functions, so the examples use them instead of calling Cytoscape. For example, Pandas
<sup><xref rid="ref-30" ref-type="bibr">30</xref></sup> prepares and analyzes data by using NumPy
<sup><xref rid="ref-31" ref-type="bibr">31</xref></sup> and SciPy library for processor-intensive tasks such as community detection.</p>
      <p>The examples use the py2cytoscape harmonization libraries to demonstrate efficient cooperation between Python workflows by using NetworkX, igraph, and Cytoscape to integrate and visualize data generated in external tools. They show:</p>
      <list list-type="bullet">
        <list-item>
          <p>Data import from multiple data sources (remote/local)</p>
        </list-item>
        <list-item>
          <p>Reformat and integration</p>
        </list-item>
        <list-item>
          <p>Statistical network analysis</p>
        </list-item>
        <list-item>
          <p>Visualization</p>
        </list-item>
      </list>
      <p>For instance, the “Import KEGG pathways from web service” example demonstrates a typical biological data integration and visualization process involving KEGG databases
<sup><xref rid="ref-32" ref-type="bibr">32</xref></sup>:</p>
      <list list-type="bullet">
        <list-item>
          <p>Send a disease name query to the KEGG API</p>
        </list-item>
        <list-item>
          <p>Filter the result and reformat it</p>
        </list-item>
        <list-item>
          <p>Import disease pathway data directly from the KEGG database</p>
        </list-item>
        <list-item>
          <p>Visualize pathway data in Cytoscape</p>
        </list-item>
        <list-item>
          <p>Embed the result as an interactive network diagram in the Jupyter Notebook</p>
        </list-item>
      </list>
      <p>This workflow is simple to do with Cytoscape – the alternative would be a custom program or manual, file based operations that are hard to reproduce. With this workflow script, collaborators or reviewers can easily execute the same process on their environment, which is essential for reproducible scientific research.</p>
    </sec>
    <sec>
      <title>R examples</title>
      <p>For network analysis and visualization, igraph is an important and much used package by R users, and our sample R workflows (
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cy-rest-R">https://github.com/idekerlab/cy-rest-R</ext-link>) use it to complement the graph analysis features in Cytoscape.</p>
      <p>In our Workflow 1 example, we scripted typical network visualization techniques using igraph’s graph analysis functions and Cytoscape’s data visualization features. First, we used igraph to detect community structure using a fast greedy modularity optimization algorithm
<sup><xref rid="ref-33" ref-type="bibr">33</xref></sup>, and we calculated basic statistics of the network, including PageRank
<sup><xref rid="ref-34" ref-type="bibr">34</xref></sup> and betweenness centrality
<sup><xref rid="ref-35" ref-type="bibr">35</xref></sup>. Our R code calls Cytoscape to create the resulting network, set properties for both layout and visual mapping, and generate an interactive network visualization. Output of this workflow helps users to visually understand the basic structure of the network (see
<xref ref-type="fig" rid="f3">Figure 3</xref>, which shows community structures color coded and used as weights for the Kamada-Kawai layout algorithm
<sup><xref rid="ref-36" ref-type="bibr">36</xref></sup>).</p>
      <fig fig-type="figure" id="f3" orientation="portrait" position="float">
        <label>Figure 3. </label>
        <caption>
          <title>Yeast network
<sup><xref rid="ref-37" ref-type="bibr">37</xref></sup> visualization with sample R script and Cytoscape.</title>
        </caption>
        <graphic xlink:href="f1000research-4-7270-g0002"/>
      </fig>
      <p>In many cases, users apply an automatic layout algorithm early in a workflow to visually check the overall structure of a network. However, such layouts are often based on a simple force simulation and tend to produce uninformative “hairballs.” Our example illuminated network sub structures by using a community detection algorithm and igraph’s statistical analysis algorithms and visual styling. The alternative would be manual operation of both R and Cytoscape, which is laborious and error prone even for proficient users, and which is not reusable for subsequent networks.</p>
    </sec>
  </sec>
  <sec>
    <title>Future development</title>
    <p>In this paper, we demonstrated Python- and R-based workflow examples. In the near future, we expect to demonstrate cyREST usage in MATLAB and JavaScript (via Node.js
<sup><xref rid="ref-38" ref-type="bibr">38</xref></sup>). While the cyREST and Command apps implement different automation features, we expect to unify the two APIs through a common implementation library in the Cytoscape core in the next Cytoscape release. Existing Cytoscape implementations manage a single Cytoscape session on behalf of a single user, can produce screen visualizations, and can potentially solicit user input even while under the control of cyREST. Future versions of Cytoscape will run headlessly and service multiple sessions simultaneously.</p>
  </sec>
  <sec>
    <title>Summary</title>
    <p>Cytoscape is a highly popular desktop application for network biology analysis, visualization, and publication. The cyREST app extends Cytoscape into the realm of reproducible and high volume bioinformatic workflows by exposing a RESTful API that recasts Cytoscape as a visualization and rendering microservice. Using cyREST, data acquisition and analysis workflows previously limited to low quality (if any) visualizations can now leverage Cytoscape’s substantial library of network layouts, visualization features, and rendering options. Similarly, cyREST’s seamless integration with research and publication tools such as IPython/Jupyter Notebook improves individual researcher productivity by avoiding the need to manually operate Cytoscape.</p>
    <p>Because it presents a RESTful interface, cyREST benefits can be realized in workflows built in most modern programming languages, and represents a significant contribution to productivity and reproducibility in data driven biology.</p>
  </sec>
  <sec>
    <title>Software availability</title>
    <p>CyREST software is available from the Cytoscape App Store:
<ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/cyrest">http://apps.cytoscape.org/apps/cyrest</ext-link>
</p>
    <p>Latest source code of cyREST:
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cyREST">https://github.com/idekerlab/cyREST</ext-link>
</p>
    <p>Full REST API v1 document:
<ext-link ext-link-type="uri" xlink:href="http://idekerlab.github.io/cyREST/">http://idekerlab.github.io/cyREST/</ext-link>
</p>
    <p>Py2cytoscape is in beta and is installable from PyPI repository:
<ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/py2cytoscape">https://pypi.python.org/pypi/py2cytoscape</ext-link>
</p>
    <p>Py2cytoscape source code:
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/py2cytoscape">https://github.com/idekerlab/py2cytoscape</ext-link>
</p>
    <p>Python sample workflows in Jupyter Notebook format:
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cy-rest-python">https://github.com/idekerlab/cy-rest-python</ext-link>
</p>
    <p>R sample workflows:
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cy-rest-R">https://github.com/idekerlab/cy-rest-R</ext-link>
</p>
    <p>License for cyREST, py2cytoscape, and all example workflows: MIT:
<ext-link ext-link-type="uri" xlink:href="http://opensource.org/licenses/MIT">http://opensource.org/licenses/MIT</ext-link>
</p>
    <p>RCy3 source code:
<ext-link ext-link-type="uri" xlink:href="https://github.com/tmuetze/Bioconductor_RCy3_the_new_RCytoscape">https://github.com/tmuetze/Bioconductor_RCy3_the_new_RCytoscape</ext-link>
</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>Some of the basic Python and R sample workflows are based on material developed by Dr. Kazuhiro Takemoto. Some of the basic Python workflows were written by Kozo Nishida. We incorporated numerous valuable editorial suggestions from Dr. Christian Zmasek and William Longabaugh into this paper.</p>
  </ack>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>P</given-names></name><name><surname>Markiel</surname><given-names>A</given-names></name><name><surname>Ozier</surname><given-names>O</given-names></name><etal/></person-group>:
<article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks.</article-title><source><italic>Genome Res.</italic></source><year>2003</year>;<volume>13</volume>(<issue>11</issue>):<fpage>2498</fpage>–<lpage>2504</lpage>.
<pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id><!--<pub-id pub-id-type="pmcid">403769</pub-id>--><?supplied-pmid 14597658?><pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pérez</surname><given-names>F</given-names></name><name><surname>Granger</surname><given-names>BE</given-names></name></person-group>:
<article-title>IPython: a system for Interactive Scientific Computing.</article-title><source><italic>Comput Sci Eng.</italic></source><year>2007</year>;<volume>9</volume>(<issue>3</issue>):<fpage>21</fpage>–<lpage>29</lpage>.
<pub-id pub-id-type="doi">10.1109/MCSE.2007.53</pub-id></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lewis</surname><given-names>J</given-names></name><name><surname>Fowler</surname><given-names>M</given-names></name></person-group>:
<article-title>Microservices</article-title>.<year>2014</year><ext-link ext-link-type="uri" xlink:href="http://martinfowler.com/articles/microservices.html">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fielding</surname><given-names>RT</given-names></name><name><surname>Taylor</surname><given-names>RN</given-names></name></person-group>:
<article-title>Principled design of the modern web architecture.</article-title><source><italic>ACM Trans Internet Technol.</italic></source><year>2002</year>;<volume>2</volume>(<issue>2</issue>):<fpage>115</fpage>–<lpage>150</lpage>.
<pub-id pub-id-type="doi">10.1145/514183.514185</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="book"><article-title>Command Tool</article-title>.<year>2013</year><ext-link ext-link-type="uri" xlink:href="http://wiki.cytoscape.org/Cytoscape3/UserManual/-CommandTool">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gonçalves</surname><given-names>E</given-names></name><name><surname>Saez-Rodriguez</surname><given-names>J</given-names></name></person-group>:
<article-title><italic>Cyrface</italic>: An interface from
<italic>Cytoscape</italic> to
<italic>R</italic> that provides a user interface to
<italic>R</italic> packages. [v1; ref status: indexed,
<ext-link ext-link-type="uri" xlink:href="http://f1000r.es/1tv">http://f1000r.es/1tv</ext-link>].</article-title><source><italic>F1000Res.</italic></source><year>2013</year>;<volume>2</volume>:<fpage>192</fpage>.
<pub-id pub-id-type="doi">10.12688/f1000research.2-192.v1</pub-id><!--<pub-id pub-id-type="pmcid">3962008</pub-id>--><?supplied-pmid 24715956?><pub-id pub-id-type="pmid">24715956</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gentleman</surname><given-names>RC</given-names></name><name><surname>Carey</surname><given-names>VJ</given-names></name><name><surname>Bates</surname><given-names>DM</given-names></name><etal/></person-group>:
<article-title>Bioconductor: open software development for computational biology and bioinformatics.</article-title><source><italic>Genome Biol.</italic></source><year>2004</year>;<volume>5</volume>(<issue>10</issue>):<fpage>R80</fpage>.
<pub-id pub-id-type="doi">10.1186/gb-2004-5-10-r80</pub-id><!--<pub-id pub-id-type="pmcid">545600</pub-id>--><?supplied-pmid 15461798?><pub-id pub-id-type="pmid">15461798</pub-id></mixed-citation>
    </ref>
    <ref id="ref-8">
      <label>8</label>
      <mixed-citation publication-type="book"><article-title>ScriptingPlugins</article-title>. December<year>2009</year><ext-link ext-link-type="uri" xlink:href="http://wiki.cytoscape.org/ScriptingPlugins">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-9">
      <label>9</label>
      <mixed-citation publication-type="book"><article-title>RubyScriptingEngine</article-title>. October<year>2012</year><ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/rubyscriptingengine">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-10">
      <label>10</label>
      <mixed-citation publication-type="book"><article-title>PythonScriptingEngine</article-title>. October<year>2012</year><ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/pythonscriptingengine">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-11">
      <label>11</label>
      <mixed-citation publication-type="journal"><article-title>GroovyEngine</article-title>. August<year>2011</year><ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/groovyengine">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-12">
      <label>12</label>
      <mixed-citation publication-type="book"><article-title>ClojureEngine</article-title>. August<year>2011</year><ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/clojureengine">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-13">
      <label>13</label>
      <mixed-citation publication-type="book"><article-title>JavaScriptEngine</article-title>. August<year>2011</year><ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/javascriptengine">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-14">
      <label>14</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jones</surname><given-names>E</given-names></name><name><surname>Oliphant</surname><given-names>T</given-names></name><name><surname>Peterson</surname><given-names>P</given-names></name></person-group>:
<article-title>{SciPy}: Open source scientific tools for {Python}</article-title>.<year>2001</year>.</mixed-citation>
    </ref>
    <ref id="ref-15">
      <label>15</label>
      <mixed-citation publication-type="book"><article-title>CytoscapeRPC</article-title>. October<year>2011</year><ext-link ext-link-type="uri" xlink:href="https://wiki.nbic.nl/index.php/CytoscapeRPC">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-16">
      <label>16</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cerami</surname><given-names>E</given-names></name></person-group>:
<article-title>Web services essentials: distributed applications with XML-RPC, SOAP, UDDI &amp; WSDL</article-title>. "O’Reilly Media, Inc.",<year>2002</year><ext-link ext-link-type="uri" xlink:href="http://spurrier.gatorglory.com/PDFs/O%27Reilly%20-%20Web%20Services%20Essentials.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-17">
      <label>17</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>PT</given-names></name><name><surname>Grimes</surname><given-names>M</given-names></name><name><surname>Kutlu</surname><given-names>B</given-names></name><etal/></person-group>:
<article-title>RCytoscape: tools for exploratory network analysis.</article-title><source><italic>BMC Bioinformatics.</italic></source><year>2013</year>;<volume>14</volume>(<issue>1</issue>):<fpage>217</fpage>.
<pub-id pub-id-type="doi">10.1186/1471-2105-14-217</pub-id><!--<pub-id pub-id-type="pmcid">3751905</pub-id>--><?supplied-pmid 23837656?><pub-id pub-id-type="pmid">23837656</pub-id></mixed-citation>
    </ref>
    <ref id="ref-18">
      <label>18</label>
      <mixed-citation publication-type="book"><article-title>Json</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://www.json.org">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-19">
      <label>19</label>
      <mixed-citation publication-type="book"><article-title>EMBL-EBI Web Services</article-title>. April<year>2015</year><ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/Tools/webservices">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-20">
      <label>20</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sletten</surname><given-names>B</given-names></name></person-group>:
<article-title>Resource-Oriented Architecture: The Rest of Rest</article-title>. December<year>2009</year><ext-link ext-link-type="uri" xlink:href="http://www.infoq.com/articles/roa-rest-of-rest">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-21">
      <label>21</label>
      <mixed-citation publication-type="book"><article-title>Cytoscape.js</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://js.cytoscape.org/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-22">
      <label>22</label>
      <mixed-citation publication-type="book"><article-title>Apache CXF</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://cxf.apache.org/docs/jax-rs.html">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-23">
      <label>23</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Csardi</surname><given-names>G</given-names></name><name><surname>Nepusz</surname><given-names>T</given-names></name></person-group>:
<article-title>The igraph software package for complex network research.</article-title><source><italic>InterJournal, Complex Systems.</italic></source><year>2005</year>;<volume>1695</volume>(<issue>5</issue>):<fpage>1</fpage>–<lpage>9</lpage>.
<ext-link ext-link-type="uri" xlink:href="http://www.necsi.edu/events/iccs6/papers/c1602a3c126ba822d0bc4293371c.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-24">
      <label>24</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>AA</surname><given-names>Hagberg</given-names></name><name><surname>Schult</surname><given-names>DA</given-names></name><name><surname>Swart</surname><given-names>P</given-names></name></person-group>:
<article-title>Exploring Network Structure, Dynamics, and Function using NetworkX</article-title>. In
<source><italic>Proceedings of the 7th Python in Science Conferences (SciPy 2008).</italic></source><year>2008</year>;<volume>2008</volume>:<fpage>11</fpage>–<lpage>16</lpage>.
<ext-link ext-link-type="uri" xlink:href="http://math.lanl.gov/~hagberg/Papers/hagberg-2008-exploring.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-25">
      <label>25</label>
      <mixed-citation publication-type="book"><article-title>graph-tool: Efficient network analysis</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://graph-tool.skewed.de/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-26">
      <label>26</label>
      <mixed-citation publication-type="book"><article-title>Jupyter</article-title>.
<ext-link ext-link-type="uri" xlink:href="https://jupyter.org/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-27">
      <label>27</label>
      <mixed-citation publication-type="book"><article-title>The R Project for Statistical Computing</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://www.rproject.org/">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-28">
      <label>28</label>
      <mixed-citation publication-type="book"><article-title>graph</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://www.bioconductor.org/packages/release/bioc/html/graph.html">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-29">
      <label>29</label>
      <mixed-citation publication-type="book"><article-title>RBGL</article-title>.
<ext-link ext-link-type="uri" xlink:href="http://www.bioconductor.org/packages/release/bioc/html/RBGL.html">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-30">
      <label>30</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McKinney</surname><given-names>W</given-names></name></person-group>:
<article-title>pandas: a Python data analysis library</article-title>.<year>2015</year><ext-link ext-link-type="uri" xlink:href="http://pandas.pydata.org">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-31">
      <label>31</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McKinney</surname><given-names>W</given-names></name></person-group>:
<article-title>Python for data analysis: Data wrangling with Pandas, NumPy, and IPython</article-title>. " O’Reilly Media, Inc.",<year>2012</year><ext-link ext-link-type="uri" xlink:href="http://www.citeulike.org/user/tnhh/article/11846316">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-32">
      <label>32</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kawashima</surname><given-names>S</given-names></name><name><surname>Katayama</surname><given-names>T</given-names></name><name><surname>Sato</surname><given-names>Y</given-names></name><etal/></person-group>:
<article-title>KEGG API A web service using SOAP/WSDL to access the KEGG system.</article-title><source><italic>Genome Informatics.</italic></source><year>2003</year>;<volume>14</volume>:<fpage>673</fpage>–<lpage>674</lpage>.
<ext-link ext-link-type="uri" xlink:href="https://www.jsbi.org/pdfs/journal1/GIW03/GIW03P172.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-33">
      <label>33</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Clauset</surname><given-names>A</given-names></name><name><surname>Newman</surname><given-names>MEJ</given-names></name><name><surname>Moore</surname><given-names>C</given-names></name></person-group>:
<article-title>Finding community structure in very large networks.</article-title><source><italic>Phys Rev E Stat Nonlin Soft Matter Phys.</italic></source><year>2004</year>;<volume>70</volume>(<issue>6 Pt 2</issue>):<fpage>66111</fpage>.
<pub-id pub-id-type="doi">10.1103/PhysRevE.70.066111</pub-id><?supplied-pmid 15697438?><pub-id pub-id-type="pmid">15697438</pub-id></mixed-citation>
    </ref>
    <ref id="ref-34">
      <label>34</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Page</surname><given-names>L</given-names></name><name><surname>Brin</surname><given-names>S</given-names></name><name><surname>Motwani</surname><given-names>R</given-names></name><etal/></person-group>:
<article-title>The PageRank Citation Ranking: Bringing Order to the Web</article-title>.<year>1999</year><ext-link ext-link-type="uri" xlink:href="http://citeseer.ist.psu.edu/viewdoc/download;jsessionid=917C50A145BC52B389D6B484D798B2FF?doi=10.1.1.31.1768&amp;rep=rep1&amp;type=pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-35">
      <label>35</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Freeman</surname><given-names>LC</given-names></name></person-group>:
<article-title>Centrality in social networks conceptual clarification.</article-title><source><italic>Social Networks.</italic></source><year>1978–1979</year>;<volume>1</volume>(<issue>3</issue>):<fpage>215</fpage>–<lpage>239</lpage>.
<pub-id pub-id-type="doi">10.1016/0378-8733(78)90021-7</pub-id></mixed-citation>
    </ref>
    <ref id="ref-36">
      <label>36</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kamada</surname><given-names>T</given-names></name><name><surname>Kawai</surname><given-names>S</given-names></name></person-group>:
<article-title>An algorithm for drawing general undirected graphs.</article-title><source><italic> Inf Process Lett.</italic></source><year>1989</year>;<volume>31</volume>(<issue>1</issue>):<fpage>7</fpage>–<lpage>15</lpage>.
<pub-id pub-id-type="doi">10.1016/0020-0190(89)90102-6</pub-id></mixed-citation>
    </ref>
    <ref id="ref-37">
      <label>37</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname><given-names>TI</given-names></name><name><surname>Rinaldi</surname><given-names>NJ</given-names></name><name><surname>Robert</surname><given-names>F</given-names></name><etal/></person-group>:
<article-title>Transcriptional regulatory networks in
<italic>Saccharomyces cerevisiae</italic>.</article-title><source><italic>Science.</italic></source><year>2002</year>;<volume>298</volume>(<issue>5594</issue>):<fpage>799</fpage>–<lpage>804</lpage>.
<pub-id pub-id-type="doi">10.1126/science.1075090</pub-id><?supplied-pmid 12399584?><pub-id pub-id-type="pmid">12399584</pub-id></mixed-citation>
    </ref>
    <ref id="ref-38">
      <label>38</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tilkov</surname><given-names>S</given-names></name><name><surname>Vinoski</surname><given-names>S</given-names></name></person-group>:
<article-title>Node.js: Using Javascript to Build High-Performance Network Programs.</article-title><source><italic>IEEE Internet Computing.</italic></source><year>2010</year>;<issue>6</issue>:<fpage>80</fpage>–<lpage>83</lpage>.
<pub-id pub-id-type="doi">10.1109/MIC.2010.145</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report9846" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.7270.r9846</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wu</surname>
          <given-names>Guanming</given-names>
        </name>
        <xref ref-type="aff" rid="r9846a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r9846a1"><label>1</label>Ontario Institute for Cancer Research, Toronto, ON, Canada</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <related-article id="d35e2101" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.6767.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors describe a Cytoscape app, CyREST, which exposes core Cytoscape functions as REST APIs for external software components to process network related data sets in automatic and reproducible workflows built using almost any programming languages. Users of workflows can visualize network data in Cytoscape via its powerful visualization features. The accompanied harmonization libraries for Python and R make the use of CyREST much easier and simpler. The manuscript is well organized, and the described app should be highly valuable for users working with big data related to networks for analysis and visualization.</p>
    <p>Minor comments:</p>
    <p> 
<list list-type="order"><list-item><p>Figure 1: The difference between R/Bioconductor and Python is not clear to me. The double-arrowed line for Python is longer than R/Bioconductor, but I am not sure what extra is covered by Python. Python is a full-fledged programming language and capable for anything. Should some specific packages listed for Python? Further, probably the line for Cytoscape should be extended to cover two boxes for Curated Data Sets and Publications.</p></list-item><list-item><p>Figure 2: Will it be better to call “Network (REST protocol)” just as “REST Protocol” to avoid confusing with other uses of "network" in the manuscript?</p></list-item><list-item><p>What is the development status of RCy3? It will be nicer to indicate its status somewhere. From the manuscript, it seems that this is still in work-in-progress?</p></list-item></list>Typos:</p>
    <p> 
<list list-type="order"><list-item><p>In abstract: e.g. Python
<bold><italic>and R</italic></bold>, JavaScript, and C#</p></list-item><list-item><p>There are several typos in this page:
<ext-link ext-link-type="uri" xlink:href="https://github.com/idekerlab/cy-rest-R,%20e.g">https://github.com/idekerlab/cy-rest-R</ext-link>, e.g. 
<bold>Cytoscaep</bold>,
<bold>Lesons</bold>, etc.</p></list-item></list>
</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report9848" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.7270.r9848</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Nepomnyachiy</surname>
          <given-names>Sergey</given-names>
        </name>
        <xref ref-type="aff" rid="r9848a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r9848a1"><label>1</label>Department of Computer Science &amp; Engineering, Polytechnic Institute of New York University, Brooklyn, NY, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <related-article id="d35e2188" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.6767.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors present a Cytoscape app that turns it into a REST server. Most core functionality of Cytoscape can now be triggered by external agents using HTTP requests, rather than by point-and-clicking UI. This enables workflow automation and distribution that was hardly possible before. The fact that the protocol is HTTP based, allows working with it programmatically using any modern language. CyREST comes with libraries for Python and R that make the communication with Cytoscape through REST API even simpler, by enveloping the calls in methods and wrapping the returning JSON in objects.</p>
    <p>Perhaps in the future work section the authors could shed some light on the plans to allow users extending the set of REST handlers. The virtues of Cytsocape are beyond the core functionality and currently there is no way for a Cyto-app developer to map her own functions to REST (those are hard-wired in the code of CyREST app). A simple registry for binding 3rd party Cyto-app functions to URLs at runtime could bring the community to bring their on plug-in REST. </p>
    <p>Possible typos</p>
    <p>page 6:</p>
    <p>The default HTTP port for cyREST is 1234, which can be changed by creating or
<italic><bold>modify</bold></italic> the Cytoscape rest.port property</p>
    <p>page 7:</p>
    <p>This workflow is simple to do with Cytoscape – the alternative would be a custom program
<italic><bold>or manual, file based operations</bold></italic> that are hard to reproduce.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>

<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<?covid-19-tdm?>
<?noissn?>
<front>
  <journal-meta>
    <journal-id journal-id-type="publisher-id">978-3-030-51831-8</journal-id>
    <journal-id journal-id-type="doi">10.1007/978-3-030-51831-8</journal-id>
    <journal-id journal-id-type="nlm-ta">Application and Theory of Petri Nets and Concurrency</journal-id>
    <journal-title-group>
      <journal-title>Application and Theory of Petri Nets and Concurrency</journal-title>
      <journal-subtitle>41st International Conference, PETRI NETS 2020, Paris, France, June 24–25, 2020, Proceedings</journal-subtitle>
    </journal-title-group>
    <isbn publication-format="print">978-3-030-51830-1</isbn>
    <isbn publication-format="electronic">978-3-030-51831-8</isbn>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7324237</article-id>
    <article-id pub-id-type="publisher-id">19</article-id>
    <article-id pub-id-type="doi">10.1007/978-3-030-51831-8_19</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SNexpression: A Symbolic Calculator for Symmetric Net Expressions</article-title>
    </title-group>
    <contrib-group content-type="book editors">
      <contrib contrib-type="editor">
        <name>
          <surname>Janicki</surname>
          <given-names>Ryszard</given-names>
        </name>
        <address>
          <email>janicki@mcmaster.ca</email>
        </address>
        <xref ref-type="aff" rid="Aff8">8</xref>
      </contrib>
      <contrib contrib-type="editor">
        <name>
          <surname>Sidorova</surname>
          <given-names>Natalia</given-names>
        </name>
        <address>
          <email>N.Sidorova@TUE.nl</email>
        </address>
        <xref ref-type="aff" rid="Aff9">9</xref>
      </contrib>
      <contrib contrib-type="editor">
        <name>
          <surname>Chatain</surname>
          <given-names>Thomas</given-names>
        </name>
        <address>
          <email>chatain@lsv.fr</email>
        </address>
        <xref ref-type="aff" rid="Aff10">10</xref>
      </contrib>
      <aff id="Aff8"><label>8</label><institution-wrap><institution-id institution-id-type="GRID">grid.25073.33</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 8227</institution-id><institution>McMaster University, </institution></institution-wrap>Hamilton, ON Canada </aff>
      <aff id="Aff9"><label>9</label><institution-wrap><institution-id institution-id-type="GRID">grid.6852.9</institution-id><institution-id institution-id-type="ISNI">0000 0004 0398 8763</institution-id><institution>Eindhoven University of Technology, </institution></institution-wrap>Eindhoven, The Netherlands </aff>
      <aff id="Aff10"><label>10</label><institution-wrap><institution-id institution-id-type="GRID">grid.464035.0</institution-id><institution-id institution-id-type="ISNI">0000 0001 2063 800X</institution-id><institution>LSV, CNRS &amp; ENS Paris-Saclay, </institution></institution-wrap>Cachan, France </aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Capra</surname>
          <given-names>Lorenzo</given-names>
        </name>
        <address>
          <email>lorenzo.capra@unimi.it</email>
        </address>
        <xref ref-type="aff" rid="Aff11">11</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>De Pierro</surname>
          <given-names>Massimiliano</given-names>
        </name>
        <address>
          <email>massimiliano.depierro@unito.it</email>
        </address>
        <xref ref-type="aff" rid="Aff12">12</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Franceschinis</surname>
          <given-names>Giuliana</given-names>
        </name>
        <address>
          <email>giuliana.franceschinis@uniupo.it</email>
        </address>
        <xref ref-type="aff" rid="Aff13">13</xref>
      </contrib>
      <aff id="Aff11"><label>11</label><institution-wrap><institution-id institution-id-type="GRID">grid.4708.b</institution-id><institution-id institution-id-type="ISNI">0000 0004 1757 2822</institution-id><institution>Dip. di Informatica, </institution><institution>Università di Milano, </institution></institution-wrap>Milan, Italy </aff>
      <aff id="Aff12"><label>12</label><institution-wrap><institution-id institution-id-type="GRID">grid.7605.4</institution-id><institution-id institution-id-type="ISNI">0000 0001 2336 6580</institution-id><institution>Dip. di Informatica, </institution><institution>Università di Torino, </institution></institution-wrap>Turin, Italy </aff>
      <aff id="Aff13"><label>13</label><institution-wrap><institution-id institution-id-type="GRID">grid.16563.37</institution-id><institution-id institution-id-type="ISNI">0000000121663741</institution-id><institution>DISIT, </institution><institution>Università del Piemonte Orientale, </institution></institution-wrap>Alessandria, Italy </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>02</day>
      <month>06</month>
      <year>2020</year>
    </pub-date>
    <volume>12152</volume>
    <fpage>381</fpage>
    <lpage>391</lpage>
    <permissions>
      <copyright-statement>© Springer Nature Switzerland AG 2020</copyright-statement>
      <license>
        <license-p>This article is made available via the PMC Open Access Subset for unrestricted research re-use and secondary analysis in any form or by any means with acknowledgement of the original source. These permissions are granted for the duration of the World Health Organization (WHO) declaration of COVID-19 as a global pandemic.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">The paper presents SNexpression: a tool for the symbolic structural analysis of Symmetric Nets (SN). It can operate at a low level, handling expressions required to compute the structural properties of interest, but features also a net-based way of interaction allowing to submit commands referring directly to the net structure avoiding error prone input of low level expressions. The User Interface implements a command line interpreter and provides also a multi-page notebook to keep track of the submitted commands and their result.</p>
    </abstract>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© Springer Nature Switzerland AG 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par2">The SNexpression tool has been developed with the aim of providing support to the structural analysis of Symmetric Nets (SN), a High-Level Petri Net (HLPN) formalism, without <italic>unfolding</italic> the net, allowing one to work at symbolic and parametric<xref ref-type="fn" rid="Fn1">1</xref> level. A recently added feature is the possibility of deriving a set of <italic>symbolic</italic> ordinary differential equations (Symbolic ODE - SODE) from a Stochastic SN (SSN) model, making it possible an efficient computation of the average marking of colored tokens into places. A first version of SNexpression was presented in [<xref ref-type="bibr" rid="CR6">6</xref>], but significant improvements/extensions have been implemented since then.</p>
    <p id="Par4">The theoretical work behind the tool has been published in a few papers defining the language for expressing the structural relations in symbolic form and the operators to be applied to the SN arc functions to derive several structural relations [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR7">7</xref>] or to generate a set of SODE from a model satisfying certain properties [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]. The basic idea consists of using a syntax similar to the SN arc expressions one, to symbolically represent structural relations useful for checking invariance properties, to deduce model behavioral properties, etc. Each symbolic structural relation is representative of several structural relations defined on the model unfolding: the latter can be derived from the former by instantiating it on specific colors. This approach has advantages: the compact representation, the similarity of the languages used to describe the model and that used to express the structural properties, and to some extent the possibility to apply it to models with parametric color class size, hence providing results that are valid for a family of similar models.</p>
    <sec id="Sec2">
      <title>Definitions and Notation</title>
      <p id="Par5">SNs were introduced (with the name Well-Formed Nets) in [<xref ref-type="bibr" rid="CR8">8</xref>]. It is a formalism, similar to Colored Petri Nets, featuring a syntax designed to naturally make symmetries explicit when the modelled system is symmetric (e.g. composed of several similarly behaving entities). A little SN model is depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, it is a small portion of a Distributed Memory fault tolerance mechanism model presented in [<xref ref-type="bibr" rid="CR2">2</xref>]; the picture has been drawn with the GreatSPN GUI [<xref ref-type="bibr" rid="CR1">1</xref>] and then (manually) translated into the textual format accepted by SNexpression (file with .sn extension). The automatic export from the GreatSPN GUI to the SNexpression net format is a planned future work. This is a natural choice since GreatSPN has been the first tool to support Symmetric Nets, moreover the GUI has been designed to allow extensions to the syntax (in SNexpression arc function terms may have both guards and filters) and handle several formalisms.<fig id="Fig1"><label>Fig. 1.</label><caption><p>A fragment of a distributed memory SSN model.</p></caption><graphic xlink:href="501622_1_En_19_Fig1_HTML" id="MO1"/></fig>
</p>
      <p id="Par6">For the sake of space in this section we shall only describe in some detail the color structure of a SN, assuming that the reader is familiar with PN and HLPN formalisms and the definition of places, transitions, input, output and inhibitor arcs, marking. The color structure of a SN is built upon the basic color classes <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}= \{C_i, i = 1, \ldots , n\}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq1.gif"/></alternatives></inline-formula> which are finite and disjoint sets<xref ref-type="fn" rid="Fn2">2</xref>, may be (circularly) <italic>ordered</italic> or <italic>partitioned into static subclasses </italic><inline-formula id="IEq2"><alternatives><tex-math id="M2">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{i,j}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq2.gif"/></alternatives></inline-formula>. Transition and place <italic>color domains</italic> are defined as Cartesian products of classes : <inline-formula id="IEq3"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D = \bigotimes C_i^{e_i}, e_i \ge 0, i= 1, \ldots , n$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq3.gif"/></alternatives></inline-formula> (class <inline-formula id="IEq4"><alternatives><tex-math id="M4">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq4.gif"/></alternatives></inline-formula> appears <inline-formula id="IEq5"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq5.gif"/></alternatives></inline-formula> times in the product). The color domain <italic>cd</italic>(<italic>p</italic>) of place <italic>p</italic> defines the possible colors (tuples of color elements from <italic>cd</italic>(<italic>p</italic>)) of the tokens in its marking; the color domain <italic>cd</italic>(<italic>t</italic>) of transition <italic>t</italic> defines its possible firing modes: these are tuples of color elements, and distinct typed variable names (<italic>var</italic>(<italic>t</italic>)) are used to refer to such elements in any tuple in <italic>cd</italic>(<italic>t</italic>).</p>
      <p id="Par8">Let us consider the model in Fig. <xref rid="Fig1" ref-type="fig">1</xref>: <inline-formula id="IEq6"><alternatives><tex-math id="M6">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}=\{A, B,C,D\}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq6.gif"/></alternatives></inline-formula>, classes <italic>A</italic> and <italic>D</italic> are partitioned into static subclasses; the <inline-formula id="IEq7"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$cd(DMinput) = {A^2,B,C,D}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq7.gif"/></alternatives></inline-formula> and a tuple in this place could be <inline-formula id="IEq8"><alternatives><tex-math id="M8">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle dmt1,dmt2,dmv3,val2,rdok\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq8.gif"/></alternatives></inline-formula>; <inline-formula id="IEq9"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$cd(CheckCMP) =A,B,C $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq9.gif"/></alternatives></inline-formula> (<inline-formula id="IEq10"><alternatives><tex-math id="M10">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$var(CheckCMP) = \{ a,b,c \}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq10.gif"/></alternatives></inline-formula>) and one possible firing mode, also called instance, of this transition is <inline-formula id="IEq11"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a=dmt1,b=dmv2,c=val1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq11.gif"/></alternatives></inline-formula>. The enabling conditions of a transition instance and the effect of its firing depend on the functions on its input, inhibitor and output arcs. Guards can be associated with transitions, to constrain the set of valid instances. Transition <italic>CheckCMP</italic> has several input and output places and its instances must satisfy predicate <inline-formula id="IEq12"><alternatives><tex-math id="M12">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a \in A_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq12.gif"/></alternatives></inline-formula>; the function on the arc from <italic>DMinput</italic> is <inline-formula id="IEq13"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle S\_A\{1\}-a,a,b,c,S\_D\{4\}\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq13.gif"/></alternatives></inline-formula>, while the functions on the arcs connecting it to place <italic>DMmaster</italic> are <inline-formula id="IEq14"><alternatives><tex-math id="M14">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle a,b\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq14.gif"/></alternatives></inline-formula>. The domain of an arc function linking place <italic>p</italic> to transition <italic>t</italic> is <italic>cd</italic>(<italic>t</italic>), whereas its codomain is <italic>Bag</italic>[<italic>cd</italic>(<italic>p</italic>)]<xref ref-type="fn" rid="Fn3">3</xref>. Its general form is: <inline-formula id="IEq18"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \sum _i \lambda _i . T_i [g_i],\,\lambda _i \in \mathbb {N}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq18.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq19"><alternatives><tex-math id="M16">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq19.gif"/></alternatives></inline-formula> is a function-tuple <inline-formula id="IEq20"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle f_1, \ldots , f_k \rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq20.gif"/></alternatives></inline-formula> denoting the Cartesian product of <italic>class functions</italic>
<inline-formula id="IEq21"><alternatives><tex-math id="M18">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq21.gif"/></alternatives></inline-formula>. Each class-function <italic>f</italic> is a linear function defined on a subset of variables of <italic>var</italic>(<italic>t</italic>) of the same type. Let <inline-formula id="IEq22"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$var_{C_i}(t)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq22.gif"/></alternatives></inline-formula> be the subset of <italic>var</italic>(<italic>t</italic>) of type <inline-formula id="IEq23"><alternatives><tex-math id="M20">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq23.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq24"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widetilde{C_i}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq24.gif"/></alternatives></inline-formula> the set of static subclasses of <inline-formula id="IEq25"><alternatives><tex-math id="M22">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq25.gif"/></alternatives></inline-formula>, then <inline-formula id="IEq26"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f:cd(t)\rightarrow Bag[C_i]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq26.gif"/></alternatives></inline-formula> is so defined:<disp-formula id="Equ1"><alternatives><tex-math id="M24">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f = \sum _{v_k \in var_{C_i}(t)} \alpha _k. v_k +\sum _{v_k \in var_{C_i}(t)} \gamma _k. !v_k +\sum _{q \in \{1,\ldots ,|\widetilde{C_i}|\}} \beta _{q} . S_{i,q}\,+ \eta . S_{i}$$\end{document}</tex-math><graphic xlink:href="501622_1_En_19_Chapter_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq27"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _k,\gamma _k, \beta _q, \eta \in {\mathbb Z}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq27.gif"/></alternatives></inline-formula>. <inline-formula id="IEq28"><alternatives><tex-math id="M26">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_k \in var_{C_i}(t)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq28.gif"/></alternatives></inline-formula> in this context denotes the projection of a transition instance on the <inline-formula id="IEq29"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k^{th}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq29.gif"/></alternatives></inline-formula> element of type <inline-formula id="IEq30"><alternatives><tex-math id="M28">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq30.gif"/></alternatives></inline-formula> in its color domain; symbol ! denotes the <italic>successor</italic> operator mapping the value of <inline-formula id="IEq31"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_k$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq31.gif"/></alternatives></inline-formula> to its successor (the type of <inline-formula id="IEq32"><alternatives><tex-math id="M30">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_k$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq32.gif"/></alternatives></inline-formula> must be ordered). <inline-formula id="IEq33"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{i,q}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq33.gif"/></alternatives></inline-formula>/<inline-formula id="IEq34"><alternatives><tex-math id="M32">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq34.gif"/></alternatives></inline-formula> is a constant function mapping to the set <inline-formula id="IEq35"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{i,q}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq35.gif"/></alternatives></inline-formula>/<inline-formula id="IEq36"><alternatives><tex-math id="M34">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq36.gif"/></alternatives></inline-formula>. Boolean expressions <inline-formula id="IEq37"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq37.gif"/></alternatives></inline-formula> (guards) on <italic>var</italic>(<italic>t</italic>) may be associated with transitions or individual tuples; their terms are <italic>standard predicates</italic> checking whether two variables hold the same value, or if a variable “belongs” to a given static subclass; if <inline-formula id="IEq38"><alternatives><tex-math id="M36">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq38.gif"/></alternatives></inline-formula> is false for a given transition instance, the associated tuple evaluates to the empty-multiset. Scalars in class-functions must be such that no negative coefficients result from the evaluation of any color satisfying the guard possibly associated with the corresponding tuple/transition. Figure <xref rid="Fig1" ref-type="fig">1</xref> contains examples of arc expressions involving several classes; in the table examples of functions operating on ordered classes (see Fig. <xref rid="Fig4" ref-type="fig">4</xref>) are also shown.</p>
      <p id="Par10">The calculus on which SNexpression operates, handles expressions of a language (<inline-formula id="IEq39"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {L}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq39.gif"/></alternatives></inline-formula>) introduced in [<xref ref-type="bibr" rid="CR5">5</xref>], very similar to arc functions but with additional constraints and a couple of extensions: the constraints are on the basic class functions (only <inline-formula id="IEq40"><alternatives><tex-math id="M38">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i, !^n v_i, S-v_i, S_i, S_{i,q}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq40.gif"/></alternatives></inline-formula> are allowed) and on their coefficients which cannot be negative, while the extensions are the use of intersection of basic class functions as tuple elements, and the possibility to use a predicate also as a <italic>filter</italic> placed as a prefix in front of a tuple (filtering out the elements not satisfying the filter predicate from the tuple evaluation). A number of unary and binary operators are defined on these expressions, which are useful when defining structural properties on SN models. The SNexpression tool implements a calculus on <inline-formula id="IEq41"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {L}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq41.gif"/></alternatives></inline-formula> and provides several off-the-shelf formulas to compute interesting structural properties of SN models.</p>
      <p id="Par11">To the best of our knowledge no other tools implement a general calculus for structural analysis of HLPNs. Even very advanced tools, e.g. Snoopy [<xref ref-type="bibr" rid="CR9">9</xref>], take advantage of symmetry properties in the color structure to efficiently perform the net unfolding [<xref ref-type="bibr" rid="CR10">10</xref>], but do not exploit it for structural analysis.</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Tool Architecture and Functions</title>
    <p id="Par12">The architecture of SNexpression is organized in three layers, depicted in Fig. <xref rid="Fig2" ref-type="fig">2</xref>: the Library for Symbolic Calculus (LSC), the SN management framework (SNF), and the Command Line Interface (CLI). The LSC is a sort of Computer Algebra System that handles base-level SN expressions. The SNF middle layer manages more abstract objects, such as structural relation formulae, directly derived from a SN definition that may be loaded into the system; it also provides the algorithms needed to automatically derive the SODE for a given SSN model, based on a manipulation of SSN annotations.<fig id="Fig2"><label>Fig. 2.</label><caption><p>Architecture of SNexpression.</p></caption><graphic xlink:href="501622_1_En_19_Fig2_HTML" id="MO3"/></fig>
</p>
    <p id="Par13">The CLI is a shell surrounding both the library and the SN framework, through which the user can operate directly on base-level expressions, using the CLI as a sort of symbolic calculator, or at a higher level, performing structural analysis of (S)SN models previously loaded.</p>
    <p id="Par14">To help the users operation during a session the CLI provides a multi-page textual notebook where it is possible to annotate and save formulae to be submitted, or results, or comments, in other words anything useful to support multi-step complex analysis. Since the format of the LSC output is pretty similar to the syntax of CLI input, copy-and-paste from the notebook to the command window and vice-versa may be conveniently used.</p>
    <p id="Par15">SNexpression is implemented in Java. The LSC is distributed as a standalone jar file, so that programmers can use it in other projects. Its API is available at URL: <ext-link ext-link-type="uri" xlink:href="http://www.di.unito.it/%7edepierro/SNexpression/libAPI">www.di.unito.it/~depierro/SNexpression/libAPI</ext-link>, we plan to make the LSC soon available as open-source project. At the current release, the CLI and the SNF are built as a unique executable, but we plan to make also the SNF accessible through a public API. Since the CLI reads from the standard input, it might be integrated in other tools. The following sections discuss the functions of the three layers of the tool architecture in more detail.</p>
    <sec id="Sec4">
      <title>The LSC: A Computer Algebra System for SN Expressions</title>
      <p id="Par16">The major functionalities and the design of the LSC are summarized here. The library implements a (parametric) rewriting system: algebraic rules are used to rewrite symbolic expressions composed of terms of <inline-formula id="IEq42"><alternatives><tex-math id="M40">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {L}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq42.gif"/></alternatives></inline-formula>, and the associated set of operators: sum, difference, intersection, composition, transpose. Rewriting stops when no more rules apply, in which case the resulting term is considered in “normal form”. Final expressions manipulated by the LSC match a sort of <italic>disjunctive normal form</italic>, where only SN functions, guards, filters and sum/intersection operators may occur.</p>
      <p id="Par17">With respect to earlier versions, the LSC currently supports both set- and bag-expressions (i.e. espressions returning multisets), with the only exception of composition, which is partially implemented for bag-expressions: its complete definition is work in progress. The support operator provides a convenient bridge between bag- and set-expressions.</p>
      <p id="Par18">Thanks to its modular layout and intuitive API, the LSC may also be used as a standalone component. As a direct consequence of its design, it is possible to directly build and manipulate objects (terms) at three different levels: class-functions, guards/filters, and function-tuples. Each level has its own set of operators, similar among the levels. Guards/Filters (standard predicates), class-functions, and single function-tuples have a canonical representative, which coincides with their normal form. There is no canonical form for sums (bags) of function-tuples: in general, however, equivalence between expressions may be syntactically checked by using the difference operator.</p>
      <p id="Par19"><italic>Library Architecture and API.</italic> The library consists of around one hundred Java classes/interfaces, divided in ten packages. The adopted design has many advantages. <italic>Ease of extension/maintenance:</italic> changes or updates (e.g., adding new language elements) are low-cost. <italic>Modular testing/debugging:</italic> every single element of the language can be managed in a uniform way. <italic>Efficiency:</italic> term normalization complexity is alleviated by a reduced use of recursion (the normalization times for many examples, some of which very complex, vary from msec. to sec.).</p>
      <p id="Par20">A code snippet illustrating the several steps needed to create and normalize a SN expression (the transpose of a tuple composition) is listed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. A (simplified) UML class-diagram describing the top of the LSC type hierarchy, and its connections to the lower levels, can be found in the tool home page, together with a small portion of the library’s API concerning simplification methods.<fig id="Fig3"><label>Fig. 3.</label><caption><p>Snippet showing creation and simplification of “function-tuple” expressions.</p></caption><graphic xlink:href="501622_1_En_19_Fig3_HTML" id="MO4"/></fig>
</p>
    </sec>
    <sec id="Sec5">
      <title>The Symmetric Nets Management Framework</title>
      <p id="Par21">The SNF implements the method to load a SN description and those to compute some symbolic structural relations on it, listed in Table <xref rid="Tab1" ref-type="table">1</xref>: some relations are functions on sets, others return multisets. For the structural relations computation it exploits the functions implemented in the library (difference, transpose, composition) on one hand, and the information on the loaded SN structure on the other hand: the model structure allows to select transition pairs that might be in structural conflict or causal connection relation, then the arc functions labeling the involved arcs are processed through the symbolic calculus implemented by the LSC. For the mutual exclusion structural relation an ad-hoc computation algorithm [<xref ref-type="bibr" rid="CR7">7</xref>] is applied after pre-processing the selected arc expressions through the library methods.</p>
      <p id="Par22">Finally, the SNF implements the algorithm to derive a set of Symbolic Ordinary Differential Equations from a (partially unfolded) SN [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>]: it exploits the library to compute the (multiset) transpose of the arc expressions and to derive the <italic>enabling degree</italic> of homogeneous sets of transition instances. It operates with just one command <inline-formula id="IEq43"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$print\_ode$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq43.gif"/></alternatives></inline-formula> after having loaded the SN to be translated. A file .ode is produced, including the set of SODE (one for each model place) ready to be solved using Rstudio.</p>
    </sec>
    <sec id="Sec6">
      <title>The Command Line Interface</title>
      <p id="Par23">The CLI is the user interface of the tool: despite its simplicity it provides the essential commands to access the main functions of the LSC and of the SNF implementing four kinds of commands: definition of classes or language expressions; application of operators to expressions and simplification; loading a SN and computing some structural relations on it; derivation of a set of SODE from a SN, which in turn needs the computation of some structural relations. The syntax of all commands is described in the manual: Table <xref rid="Tab1" ref-type="table">1</xref> summarizes the main types of commands; a few detailed examples are described in Sect. <xref rid="Sec7" ref-type="sec">3</xref>. By convention the <italic>color classes</italic> are denoted with capital letters (<italic>A</italic>, <italic>B</italic>, <italic>C</italic>, ...) while small letters, possibly indexed with an integer, denote <italic>variables</italic> whose type is the corresponding capital letter class (e.g. <italic>a</italic> or <inline-formula id="IEq44"><alternatives><tex-math id="M42">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a\_2$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq44.gif"/></alternatives></inline-formula> of type <italic>A</italic>). Classes may be partitioned into static subclasses denoted by the class capital letter followed by an integer index (e.g. <inline-formula id="IEq45"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A\{1\}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq45.gif"/></alternatives></inline-formula> subclass of <italic>A</italic>). Classes have finite cardinality, but it can be defined to be parametric (by default any class has a parametric cardinality <italic>n</italic> greater than or equal to two; when a class is partitioned into static subclasses only one subclass may have parametric cardinality). Domains are Cartesian products of color classes, if one class appears more than once in a domain, it is listed once followed by the number of repetitions.<table-wrap id="Tab1"><label>Table 1.</label><caption><p>Summary of the main commands implemented in the CLI.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Description</th><th align="left">CLI syntax (examples)</th></tr></thead><tbody><tr><td align="left" colspan="2">Defining a class and showing its definition</td></tr><tr><td align="left">A (possibly ordered) class</td><td align="left"><italic>set</italic> <italic>C</italic> <italic>ordered</italic></td></tr><tr><td align="left">and its subclasses</td><td align="left"><inline-formula id="IEq46"><alternatives><tex-math id="M44">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$set~M := \left\{ 10, 3, \left[ 4,n \right] \right\} $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq46.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">Show class definition</td><td align="left"><italic>class</italic>(<italic>A</italic>)</td></tr><tr><td align="left" colspan="2">Symbol definition</td></tr><tr><td align="left">Define domain symbol</td><td align="left"><inline-formula id="IEq47"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$dom := A~\hat{}~2, B, C~\hat{}~3$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq47.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">Define expression symbol</td><td align="left"><inline-formula id="IEq48"><alternatives><tex-math id="M46">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$exp := @A~\hat{ }~3 &lt;a\_1*S-a\_2, (a\_1+a\_2)*S-a\_3&gt;$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq48.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">(with domain prefix)</td><td align="left">(<inline-formula id="IEq49"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$*$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq49.gif"/></alternatives></inline-formula>: intersection, <inline-formula id="IEq50"><alternatives><tex-math id="M48">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a\_i$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq50.gif"/></alternatives></inline-formula> and <inline-formula id="IEq51"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S-a\_j$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq51.gif"/></alternatives></inline-formula>: basic functions)</td></tr><tr><td align="left">may include a <italic>filter</italic></td><td align="left"><inline-formula id="IEq52"><alternatives><tex-math id="M50">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$@D~\hat{ }~2 [d\_1 !=d\_2 , d\_2 ~in~ D\{1\}] &lt;d\_2, S-d\_1&gt;$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq52.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">and a <italic>guard</italic></td><td align="left"><inline-formula id="IEq53"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$@A~\hat{ }~3 &lt; a\_1,a\_3&gt; [a\_3 ~in~ M\{2\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq53.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">Define multiset expression</td><td align="left"><inline-formula id="IEq54"><alternatives><tex-math id="M52">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$mexp := @C,D ~mset: 2&lt;d\_1,c\_1&gt;+&lt;S\_D,c\_1&gt;$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq54.gif"/></alternatives></inline-formula></td></tr><tr><td align="left" colspan="2">Operators application</td></tr><tr><td align="left">support (applies to bag-expressions)</td><td align="left"><inline-formula id="IEq55"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${ \!&lt;\!&lt;} mset~expression {&gt;\!&gt;}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq55.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">transpose</td><td align="left"><inline-formula id="IEq56"><alternatives><tex-math id="M54">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$expression{'}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq56.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">difference</td><td align="left"><inline-formula id="IEq57"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$expression1 - expression 2$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq57.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">composition</td><td align="left"><italic>expression</italic>1.<italic>expression</italic>2</td></tr><tr><td align="left"/><td align="left">implementation for bag-expressions is not yet complete</td></tr><tr><td align="left">simplify expression</td><td align="left"><italic>s</italic>(<italic>e</italic>) rewrites an expression into a normalized form</td></tr><tr><td align="left">simplify and fold</td><td align="left"><italic>sf</italic>(<italic>e</italic>) merges terms or expressions (<inline-formula id="IEq58"><alternatives><tex-math id="M56">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ne $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq58.gif"/></alternatives></inline-formula> constraints)</td></tr><tr><td align="left" colspan="2">Symmetric Nets Framework commands</td></tr><tr><td align="left" colspan="2"><bold>Nets management commands</bold></td></tr><tr><td align="left">Load net</td><td align="left">load “DistMem.sn”</td></tr><tr><td align="left">Input/output/inhib. places and arc expr</td><td align="left">I(t) / O(t) / H(t)</td></tr><tr><td align="left">Symbols for arc (bag-)expressions</td><td align="left">I(t,p) / O(t,p) / H(t,p)</td></tr><tr><td align="left" colspan="2"><bold>Structural properties</bold></td></tr><tr><td align="left">Conflict</td><td align="left"><italic>SC</italic>(<italic>t</italic>1, <italic>t</italic>2, <italic>p</italic>) or <italic>SC</italic>(<italic>t</italic>1, <italic>t</italic>2)</td></tr><tr><td align="left">Self-Conflict</td><td align="left"><italic>SC</italic>(<italic>t</italic>, <italic>p</italic>) or <italic>SC</italic>(<italic>t</italic>)</td></tr><tr><td align="left">Causal Connection</td><td align="left"><italic>SCC</italic>(<italic>t</italic>1, <italic>t</italic>2, <italic>p</italic>)</td></tr><tr><td align="left">Mutual Exclusion</td><td align="left"><italic>SME</italic>(<italic>t</italic>1, <italic>t</italic>2, <italic>p</italic>)</td></tr><tr><td align="left">Added By (set/ multiset)</td><td align="left"><italic>AB</italic>/<italic>ABmset</italic>(<italic>t</italic>, <italic>p</italic>)</td></tr><tr><td align="left">Removed By (set/multiset)</td><td align="left"><italic>RB</italic>/<italic>RBmset</italic>(<italic>t</italic>, <italic>p</italic>)</td></tr><tr><td align="left">Derivation of a set of SODE</td><td align="left"><inline-formula id="IEq59"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$print\_ode$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq59.gif"/></alternatives></inline-formula></td></tr></tbody></table></table-wrap>
</p>
      <p id="Par24">The expressions can be interpreted as functions mapping into multisets or functions mapping on sets, the latter case is the default. The prefix <italic>mset:</italic> indicates that an expression denotes a function mapping on multisets. The expressions syntax takes the form of a <italic>sum of tuples</italic>, each tuple may be prefixed with a <italic>filter</italic> and suffixed with a <italic>guard</italic> (both filter and guard take the form of SN <italic>standard predicates</italic>). The tuple elements are intersections (<inline-formula id="IEq60"><alternatives><tex-math id="M58">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$*$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq60.gif"/></alternatives></inline-formula>) of basic functions: projection, complement, successor, constant (whole class or one static subclass).</p>
      <p id="Par25">Operators can be applied to expressions: there are two unary operators, support and transpose, and two binary operators, difference and composition. The support operator can be applied to a multiset-expression to obtain the corresponding expression mapping on sets; the transpose operator is available both for expressions mapping on multisets and for those mapping on sets: the result of its application is an expression of the same type. The difference can be applied to any pair of expressions (of the same type) while the composition is completely implemented for expressions mapping on sets and on a significant subset of multiset expressions. These operators are the basis for the SN structural analysis implemented in the SN Management Framework. For instance the structural conflict between two transitions <inline-formula id="IEq61"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq61.gif"/></alternatives></inline-formula> and <inline-formula id="IEq62"><alternatives><tex-math id="M60">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t_2$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq62.gif"/></alternatives></inline-formula> sharing an input place <italic>p</italic> is computed as follows: <inline-formula id="IEq63"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SC(t_1,t_2,p) = {&lt;\!&lt;\!I(t_1,p)\!-\!O(t_1,p)\!&gt;\!&gt;'\! .\!&lt;\!&lt;\!I(t_2,p)&gt;\!&gt;} ~+~ $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq63.gif"/></alternatives></inline-formula>
<inline-formula id="IEq64"><alternatives><tex-math id="M62">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${&lt;\!&lt;O(t_1,p)-I(t_1,p)\!&gt;\!&gt;'\!.\!&lt;\!&lt;H(t_2,p)\!&gt;\!&gt;}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq64.gif"/></alternatives></inline-formula> where <inline-formula id="IEq65"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I(t,p)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq65.gif"/></alternatives></inline-formula> and <inline-formula id="IEq66"><alternatives><tex-math id="M64">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(t,p)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq66.gif"/></alternatives></inline-formula> are respectively the expressions on the input and output arcs connecting <italic>p</italic> and <italic>t</italic>. This could be useful to identify the groups of immediate transitions that are potentially in conflict and define how such conflicts should be solved.</p>
      <p id="Par26">To support the user in performing experiments with the tool, the CLI embeds a multi-page notebook: it is possible to copy-and-paste commands annotated in the notebook to the command window and then copy-and-paste results from the command window back in the notebook. When the color classes involved in the expressions processed by the tool have parametric cardinality, the result of a computation is not a single expression but a list of expressions, each with associated a different range of possible values for the classes cardinality: indeed one of the strong points of the tool is its ability to handle expressions without necessarily fixing the color classes sizes, so that the obtained result is valid for a family of models differing only in the size of (some) color classes.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Use Cases: Exploiting SNexpression</title>
    <p id="Par27">
      <fig id="Fig4">
        <label>Fig. 4.</label>
        <caption>
          <p>An SN model of a relay race.</p>
        </caption>
        <graphic xlink:href="501622_1_En_19_Fig4_HTML" id="MO5"/>
      </fig>
    </p>
    <p id="Par28">The goal of this section is to show on a few practical examples some features of SNexpression. Let us consider the relay race model in Fig. <xref rid="Fig4" ref-type="fig">4</xref> (described in [<xref ref-type="bibr" rid="CR7">7</xref>]), representing a set of teams (class <italic>C</italic>), each composed of four athletes (ordered class <italic>N</italic>, <inline-formula id="IEq67"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|N|=4$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq67.gif"/></alternatives></inline-formula>), competing in a relay race. Some symbolic structural properties of interest are the <italic>causal connection</italic> and <italic>structural conflict</italic> involving transition <italic>Run</italic> and the immediate transitions <italic>pass</italic>, <italic>Win</italic> and <italic>notWin</italic>; these properties are useful (among others) for model validation purposes, or to correctly define immediate transition weights. Let us consider the commands summary in Table <xref rid="Tab2" ref-type="table">2</xref><table-wrap id="Tab2"><label>Table 2.</label><caption><p>Examples of structural relation expressions.</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left">1) <inline-formula id="IEq68"><alternatives><tex-math id="M66">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SCC(pass,Run,Running) = @C,N \langle c\_1,!3n\_1,S-n\_1\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq68.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">2) <inline-formula id="IEq69"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SCC(pass,Win,Finished) = @C [n\_1 = \, !3n\_2]\langle c\_1,S\_N,S\_N\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq69.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">3) <inline-formula id="IEq70"><alternatives><tex-math id="M68">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SC(Win) = @C \langle S-c\_1\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq70.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">4) <inline-formula id="IEq71"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SME(Win, notWin, Winner) = @C,N~\hat{}~2 \langle S\_C\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq71.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">5) <inline-formula id="IEq72"><alternatives><tex-math id="M70">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s(fscc2.fsc3) = @C [n\_1 = !3n\_2]\langle S-c\_1,S\_N,S\_N\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq72.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">where <inline-formula id="IEq73"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$fscc2 :=@C [n\_1 = !3n\_2]\langle c\_1,S\_N,S\_N\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq73.gif"/></alternatives></inline-formula>, <inline-formula id="IEq74"><alternatives><tex-math id="M72">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$fsc3 := @C \langle S-c\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq74.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">6) <inline-formula id="IEq75"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SC(RD\_MST,CheckCMP) = (\langle a\_1,S\_A,S\_B,S\_C,S\_D\{4\}\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq75.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">   <inline-formula id="IEq76"><alternatives><tex-math id="M74">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ + \langle (S\_A\{1\} * S-a\_1),a\_1,b\_1,c\_1,S\_D\{4\}\rangle )[a\_1~in~A\{1\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq76.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">7) <inline-formula id="IEq77"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$SC(CheckCMP,RD\_MST) = \langle a\_2,b\_1,c\_1\rangle [a\_1 != a\_2,d\_1~in~D\{4\},$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq77.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">   <inline-formula id="IEq78"><alternatives><tex-math id="M76">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ a\_1~in~A\{1\}, a\_2~in~A\{1\}] + \langle a\_1,S\_B,S\_C\rangle [d\_1~in~D\{4\},a\_1~in~A\{1\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq78.gif"/></alternatives></inline-formula></td></tr></tbody></table></table-wrap>
</p>
    <p id="Par29">1) computes the instances <inline-formula id="IEq79"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle c,n',n''\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq79.gif"/></alternatives></inline-formula> of <italic>pass</italic> that may enable an instance <inline-formula id="IEq80"><alternatives><tex-math id="M78">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle c\_1,n\_1\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq80.gif"/></alternatives></inline-formula> of <italic>Run</italic>: through <italic>Running</italic>; the result shows that such instances involve an athlete of the same team (<inline-formula id="IEq81"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c\_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq81.gif"/></alternatives></inline-formula>) with sequence number <inline-formula id="IEq82"><alternatives><tex-math id="M80">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n'$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq82.gif"/></alternatives></inline-formula> equal to the predecessor<xref ref-type="fn" rid="Fn4">4</xref> of <inline-formula id="IEq86"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n\_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq86.gif"/></alternatives></inline-formula>, provided that <inline-formula id="IEq87"><alternatives><tex-math id="M82">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n'' \ne n\_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq87.gif"/></alternatives></inline-formula> (i.e. the team has not run the last section yet). 2) computes the instances <inline-formula id="IEq88"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle c,n',n''\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq88.gif"/></alternatives></inline-formula> of <italic>pass</italic> enabling instance <inline-formula id="IEq89"><alternatives><tex-math id="M84">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle c\_1\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq89.gif"/></alternatives></inline-formula> of <italic>Win</italic>: the result has a filter and denotes the instances involving the same team <inline-formula id="IEq90"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c\_1$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq90.gif"/></alternatives></inline-formula>, and the last section runner (the predecessor of <inline-formula id="IEq91"><alternatives><tex-math id="M86">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n''$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq91.gif"/></alternatives></inline-formula>). 3) computes the structural auto-conflicts among different instances of <italic>Win</italic>, while the result of 4) shows that <italic>Win</italic> and <italic>notWin</italic> are mutually exclusive: indeed, <italic>Winner</italic> is input place for <italic>notWin</italic> and inhibitor place (with arc function <inline-formula id="IEq92"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\langle S_C\rangle $$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq92.gif"/></alternatives></inline-formula>) for <italic>Win</italic>. In SSNs with immediate transitions it is useful to check for confusion, i.e., situations where the model is underspecified (a situation solved by using priorities). In our example, this may arise due to the fact that different instances of <italic>Win</italic> are in conflict with each other. There would be confusion if an instance of <italic>pass</italic> fired while an instance of <italic>Win</italic> is enabled: this could cause the enabling of another instance of <italic>Win</italic> in conflict with the former. 5) shows how to obtain the <italic>confusing</italic> instances of <italic>pass</italic> by composing the results of 2) and 3): in this case the SNF is not involved.</p>
    <p id="Par31">Other structural relations can be computed on the model in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, whose arc functions are a bit more complex as illustrated by relations 6) and 7) in Table <xref rid="Tab2" ref-type="table">2</xref>. The resulting expressions have the same domain as the <inline-formula id="IEq93"><alternatives><tex-math id="M88">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^{nd}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq93.gif"/></alternatives></inline-formula> parameter of SC, namely <italic>A</italic>, <italic>B</italic>, <italic>C</italic> for 6) and <inline-formula id="IEq94"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A~\hat{}~2,B,C,D$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq94.gif"/></alternatives></inline-formula> for 7). The terms are pair-wise disjoint: this enhances readability and interpretation.</p>
    <p id="Par32">The tool can be used for other purposes. A recent implementation concerns the automatic generation of Symbolic ODE from an SSN model (command <inline-formula id="IEq95"><alternatives><tex-math id="M90">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$print\_ode$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq95.gif"/></alternatives></inline-formula>). The technique applies only to models whose underlying stochastic process is density dependent. One condition for an SSN to satisfy such property is the coverage of places by P-invariants. In [<xref ref-type="bibr" rid="CR4">4</xref>] an application to a botnet model has been illustrated (this is one of the examples that can be downloaded from the tool’s web page). SNexpression can be used to check if a given P-indexed vector of multiset expressions defines a set of <italic>colored</italic> P-invariants, and possibly prove the coverage of all place instances. The expressions in the P-indexed vector denote functions from the place color domains to the P-invariant’s domain. An example of P-vector of expressions <inline-formula id="IEq96"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C,L \rightarrow Bag[L]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq96.gif"/></alternatives></inline-formula> is: <inline-formula id="IEq97"><alternatives><tex-math id="M92">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$pinv[NoConBot ]:= @C,L ~mset: \langle l\rangle [c~in~C\{1\} + c~in~C\{2\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq97.gif"/></alternatives></inline-formula>; <inline-formula id="IEq98"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$pinv[ConBot ] := @C,L ~mset: \langle l\rangle [c~in~C\{2\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq98.gif"/></alternatives></inline-formula>; <inline-formula id="IEq99"><alternatives><tex-math id="M94">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$pinv[InactBot] := @C,L ~mset: \langle l\rangle [c~in~C\{3\} + c~in~C\{4\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq99.gif"/></alternatives></inline-formula>; <inline-formula id="IEq100"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$pinv[ActBot] := @C,L ~mset: \langle l\rangle [c~in~C\{3\} + c~in~C\{4\}]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq100.gif"/></alternatives></inline-formula>. In order to prove that this vector corresponds to a set of P-invariants we need to show, for each transition <italic>t</italic>, that the sum over all places of the compositions of P-invariant’s function (<italic>pinv</italic>[<italic>p</italic>]) with the difference <inline-formula id="IEq101"><alternatives><tex-math id="M96">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(t,p)- I(t,p)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq101.gif"/></alternatives></inline-formula> results in the null function. Due to space constraints we show only the result for transition <italic>ConnectBot</italic>: <inline-formula id="IEq102"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s(pinv[NoConBot].f4 + pinv[ConBot].f5) = null$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq102.gif"/></alternatives></inline-formula> where <inline-formula id="IEq103"><alternatives><tex-math id="M98">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f4 := @C,L mset:&lt;\!0_C,0_L\!&gt; - I(ConnectBotNet,NoConnBot)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq103.gif"/></alternatives></inline-formula> and <inline-formula id="IEq104"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f5 := O(ConnectBotNet,ConnBot)$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq104.gif"/></alternatives></inline-formula>. The same result holds for all transitions, thus <italic>pinv</italic>[] is a P-invariant: it represents |<italic>L</italic>| invariants, indicating that the number of tokens with second component <inline-formula id="IEq105"><alternatives><tex-math id="M100">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l \in L$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq105.gif"/></alternatives></inline-formula> is constant, and have the correct label in <italic>C</italic>. In the tool web page other P-invariants for this model are available.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusions and Installation Instructions</title>
    <p id="Par33">SNexpression implements a symbolic calculus useful for studying the structure of a Symmetric Net and deriving information on its behavioral properties. It has also been used to derive a set of SODE from an SSN model for performance analysis purposes. Several extensions are planned: completing the composition of bag-expressions, further automation of net structural calculus (e.g., checking P-invariants or building Extended Conflict Sets), automatizing the SN partial unfolding procedure which is a preliminary step for the generation of the SODE from a SN model, providing access to the different software layers with suitable APIs. Finally, we plan to build a bridge between GreatSPN and SNexpression.</p>
    <p id="Par34">A free version of the tool is available: download the archive SNEx.zip from the project homepage <ext-link ext-link-type="uri" xlink:href="http://www.di.unito.it/%7edepierro/SNexpression">www.di.unito.it/~depierro/SNexpression</ext-link>, unzip its content into a folder. The extracted file structure contains the main program SnexCLI.jar and, in the folder lib, the library SNexLib.jar. To launch the tool in an OS shell run: java -jar&lt;path to SNexCLI.jar&gt; (JRE 1.8 or above is necessary). At the project’s web page, the user can find a reference manual and some examples to immediately start using it.</p>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par3">The method is parametric in the size of the <italic>color classes.</italic></p>
    </fn>
    <fn id="Fn2">
      <label>2</label>
      <p id="Par7">In the tool color classes are denoted with a single capital letter: A, B, C, ... and the Cartesian product of classes is denoted as a comma separated list of classes.</p>
    </fn>
    <fn id="Fn3">
      <label>3</label>
      <p id="Par9">A multiset on set <italic>D</italic> is a map <inline-formula id="IEq15"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D\rightarrow \mathbb {N}$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq15.gif"/></alternatives></inline-formula>. <italic>Bag</italic>[<italic>D</italic>] denotes the set of all multisets on <italic>D</italic>. If <inline-formula id="IEq16"><alternatives><tex-math id="M102">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m \in Bag[D]$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq16.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq17"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d \in D$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq17.gif"/></alternatives></inline-formula>, <italic>m</italic>[<italic>d</italic>] is the multiplicity of <italic>d</italic> in <italic>m</italic>.</p>
    </fn>
    <fn id="Fn4">
      <label>4</label>
      <p id="Par30">Since <inline-formula id="IEq83"><alternatives><tex-math id="M104">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|N|=4$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq83.gif"/></alternatives></inline-formula> the predecessor <inline-formula id="IEq84"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$!^{-1}n$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq84.gif"/></alternatives></inline-formula> of <italic>n</italic> coincides with the third successor <inline-formula id="IEq85"><alternatives><tex-math id="M106">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$!^3n$$\end{document}</tex-math><inline-graphic xlink:href="501622_1_En_19_Chapter_IEq85.gif"/></alternatives></inline-formula>.</p>
    </fn>
  </fn-group>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Amparore</surname>
            <given-names>EG</given-names>
          </name>
          <name>
            <surname>Balbo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Beccuti</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Donatelli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Franceschinis</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Fiondella</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Puliafito</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>30 years of GreatSPN</article-title>
        <source>Principles of Performance and Reliability Modeling and Evaluation</source>
        <year>2016</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>227</fpage>
        <lpage>254</lpage>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Ballarini, P., Capra, L., Franceschinis, G., De Pierro, M.: Memory fault tolerance software mechanisms: design and configuration support through SWN models. In: 3rd International Conference on Application of Concurrency to System Design ACSD 2003, Guimaraes, Portugal, 18–20 June 2003, pp. 111–121 (2003)</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Beccuti, M., Capra, L., De Pierro, M., Franceschinis, G., Follia, L., Pernice, S.: A tool for the automatic derivation of symbolic ODE from symmetric net models. In: 27th IEEE International Symposium MASCOTS 2019, Rennes, France, October 21–25 2019, pp. 36–48 (2019)</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Beccuti</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Capra</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>De Pierro</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Franceschinis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pernice</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Bakhshi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ballarini</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Barbot</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Castel-Taleb</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Remke</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Deriving symbolic ordinary differential equations from stochastic symmetric nets without unfolding</article-title>
        <source>Computer Performance Engineering</source>
        <year>2018</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>30</fpage>
        <lpage>45</lpage>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Capra</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>De Pierro</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Franceschinis</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Ciardo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Darondeau</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A high level language for structural relations in well-formed nets</article-title>
        <source>Applications and Theory of Petri Nets 2005</source>
        <year>2005</year>
        <publisher-loc>Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>168</fpage>
        <lpage>187</lpage>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Capra, L., De Pierro, M., Franceschinis, G.: A tool for symbolic manipulation of arc functions in symmetric net models. In: Proceedings of the 7th International Conference VALUETOOLS 2013, Torino, Italy, pp. 320–323, ICST. Belgium (2013)</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Capra, L., De Pierro, M., Franceschinis, G.: Computing structural properties of symmetric nets. In: Proceedings of the 15th International Conference on Quantitative Evaluation of Systems, QEST 15, Madrid, ES. IEEE CS (2015)</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiola</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Dutheillet</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Franceschinis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Haddad</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Stochastic well-formed coloured nets for symmetric modelling applications</article-title>
        <source>IEEE Trans. Comput.</source>
        <year>1993</year>
        <volume>42</volume>
        <issue>11</issue>
        <fpage>1343</fpage>
        <lpage>1360</lpage>
        <pub-id pub-id-type="doi">10.1109/12.247838</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Heiner</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Herajy</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rohr</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Schwarick</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Haddad</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pomello</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Snoopy – a unifying petri net tool</article-title>
        <source>Application and Theory of Petri Nets</source>
        <year>2012</year>
        <publisher-loc>Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>398</fpage>
        <lpage>407</lpage>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Liu, F., Heiner, M., Yang, M.: An efficient method for unfolding colored Petri nets. In: Winter Simulation Conference, WSC 2012, Berlin, Germany, 9–12 December 2012, pp. 295:1–295:12 (2012)</mixed-citation>
    </ref>
  </ref-list>
</back>

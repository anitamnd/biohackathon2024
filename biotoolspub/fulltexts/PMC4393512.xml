<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4393512</article-id>
    <article-id pub-id-type="pmid">25432166</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btu780</article-id>
    <article-id pub-id-type="publisher-id">btu780</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Faster sequence homology searches by clustering subsequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Suzuki</surname>
          <given-names>Shuji</given-names>
        </name>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kakuta</surname>
          <given-names>Masanori</given-names>
        </name>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ishida</surname>
          <given-names>Takashi</given-names>
        </name>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Akiyama</surname>
          <given-names>Yutaka</given-names>
        </name>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="btu780-AFF1">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="btu780-COR1">*</xref>
      </contrib>
      <aff id="btu780-AFF1"><sup>1</sup>Graduate School of Information Science and Engineering, Tokyo Institute of Technology and <sup>2</sup>Education Academy of Computational Life Sciences (ACLS), Tokyo Institute of Technology, Tokyo 152-8550, Japan</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btu780-COR1">*To whom correspondence should be addressed.</corresp>
      <fn id="FN1">
        <p>Associate Editor: John Hancock</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>4</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>27</day>
      <month>11</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>11</month>
      <year>2014</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>31</volume>
    <issue>8</issue>
    <fpage>1183</fpage>
    <lpage>1190</lpage>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>7</month>
        <year>2014</year>
      </date>
      <date date-type="rev-recd">
        <day>25</day>
        <month>10</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>11</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author 2014. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<uri xlink:type="simple" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</uri>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> Sequence homology searches are used in various fields. New sequencing technologies produce huge amounts of sequence data, which continuously increase the size of sequence databases. As a result, homology searches require large amounts of computational time, especially for metagenomic analysis.</p>
      <p><bold>Results:</bold> We developed a fast homology search method based on database subsequence clustering, and implemented it as GHOSTZ. This method clusters similar subsequences from a database to perform an efficient seed search and ungapped extension by reducing alignment candidates based on triangle inequality. The database subsequence clustering technique achieved an ∼2-fold increase in speed without a large decrease in search sensitivity. When we measured with metagenomic data, GHOSTZ is ∼2.2–2.8 times faster than RAPSearch and is ∼185–261 times faster than BLASTX.</p>
      <p><bold>Availability and implementation:</bold> The source code is freely available for download at <ext-link ext-link-type="uri" xlink:href="http://www.bi.cs.titech.ac.jp/ghostz/">http://www.bi.cs.titech.ac.jp/ghostz/</ext-link></p>
      <p>
        <bold>Contact:</bold>
        <email>akiyama@cs.titech.ac.jp</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>DNA sequencing technologies have improved rapidly. The HiSeq2500 can produce several hundred billion base pairs (bp) of sequence data in a single run and its throughput is <bold>∼</bold>10 000 times higher than that of old-generation sequencers. Most sequencers produce information in short fragments (reads) that range in length from 100 to 1000 bp. Thus, it is necessary to determine the location of each read in a genome, to use known biological information even when a reference genome is available. This process is called mapping, and many effective mapping programs, such as BWA (<xref rid="btu780-B12" ref-type="bibr">Li and Durbin, 2009</xref>, <xref rid="btu780-B13" ref-type="bibr">2010</xref>) and Bowtie (<xref rid="btu780-B10" ref-type="bibr">Langmead and Salzberg, 2012</xref>; <xref rid="btu780-B11" ref-type="bibr">Langmead <italic>et al.</italic>, 2009</xref>), have been developed for this purpose.</p>
    <p>In metagenomic analysis, environmental samples frequently include DNA sequences from many different species, and the reference database often does not contain closely related genome sequences. Thus, more sensitive approaches are required to identify novel genes in these samples. In a typical metagenomic analysis, reads are translated into protein coding sequences and assigned to protein families by running homology searches against publicly available databases, such as COG (<xref rid="btu780-B20" ref-type="bibr">Tatusov <italic>et</italic>
<italic>al.</italic>, 1997</xref>, <xref rid="btu780-B21" ref-type="bibr">2003</xref>) and Pfam (<xref rid="btu780-B5" ref-type="bibr">Finn <italic>et</italic>
<italic>al.</italic>, 2010</xref>). The BLASTX program (<xref rid="btu780-B1" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 1990</xref>, <xref rid="btu780-B2" ref-type="bibr">1997</xref>) is commonly used for such binning and classification searches. To identify homologs that may not have high nucleotide sequence identities, BLASTX translates nucleotide sequences into protein sequences, because protein sequences are often more similar than the original nucleotide sequences (<xref rid="btu780-B9" ref-type="bibr">Kurokawa <italic>et al.</italic>, 2007</xref>; <xref rid="btu780-B23" ref-type="bibr">Turnbaugh <italic>et</italic>
<italic>al.</italic>, 2006</xref>). However, the search speed of BLASTX has become insufficient for analysis of the large quantities of sequence data now available.</p>
    <p>Several currently available homology search tools are faster than BLAST, but possess decreased sensitivity. For example, BLAT (<xref rid="btu780-B8" ref-type="bibr">Kent, 2002</xref>) is <bold>∼</bold>50 times faster than BLAST; however, the search sensitivity of BLAT is much lower than that of BLAST and is often insufficient for metagenome sequence analysis. Thus, novel homology search tools, such as RAPSearch (<xref rid="btu780-B25" ref-type="bibr">Ye <italic>et</italic>
<italic>al.</italic>, 2011</xref>), have recently been developed. RAPSearch has sufficient sensitivity for metagenomic analysis and a faster homology search speed than BLAST or BLAT because it uses a reduced amino acid alphabet (<xref rid="btu780-B17" ref-type="bibr">Murphy <italic>et</italic>
<italic>al.</italic>, 2000</xref>) and a suffix array (<xref rid="btu780-B15" ref-type="bibr">Manber and Myers, 1993</xref>). In addition, RAPSearch2 has been improved to use hash tables instead of suffix arrays, making it more memory efficient (<xref rid="btu780-B26" ref-type="bibr">Zhao <italic>et</italic>
<italic>al.</italic>, 2012</xref>).</p>
    <p>However, several large metagenome projects, such as the Human Microbiome Project (HMP) (<xref rid="btu780-B22" ref-type="bibr">The Human Microbiome Project Consortium, 2012</xref>), the Metagenomics of the Human Intestinal Tract (MetaHIT) (<xref rid="btu780-B19" ref-type="bibr">Qin <italic>et</italic>
<italic>al.</italic>, 2010</xref>) and the Earth Microbiome Project (<xref rid="btu780-B7" ref-type="bibr">Gilbert <italic>et</italic>
<italic>al.</italic>, 2010</xref>), have recently produced unprecedentedly large amounts of sequence information. For instance, HMP has sequenced 681 human metagenome whole-genome shotgun samples. Therefore, there is a high demand for analysis of large amounts of metagenomic data. In addition, the numbers of reference sequences in databases will continue to increase with further improvements of sequencing technologies. For instance, the size of the National Center for Biotechnology Information (NCBI) non-redundant protein database (nr) increased from <bold>∼</bold>4.1 billion amino acid residues in 2010 to <bold>∼</bold>16.7 billion residues in 2014. Therefore, the speed of homology searches needs to be increased to facilitate metagenomic analysis.</p>
    <p>To address the problem of increasing database size, CaBLASTP (<xref rid="btu780-B4" ref-type="bibr">Daniels <italic>et</italic>
<italic>al.</italic>, 2013</xref>) introduced a compression approach and achieved a faster homology search than BLAST using the compressed database. CaBLASTP initially searches against a coarse database from which redundant subsequences have been removed, and then it uses these initial results to search the original database for similar sequences. This approach provides a more efficient homology search than BLAST, but the compression approach has proven to be difficult to apply to RAPSearch and BLAT, because their faster but less sensitive homology searches often fail to identify similar sequences in the compressed database, critically decreasing the sensitivity of the final search results.</p>
    <p>To address some of these problems, we developed a new faster homology search method using database subsequence clustering. Current homology searches require a large amount of time to extend alignments without gaps, because the seed searches tend to produce large numbers of seeds (<xref rid="btu780-B24" ref-type="bibr">Vouzis and Sahinidis, 2011</xref>). However, only a small number of seeds produce ungapped extension scores that are higher than the score threshold, and the wasted computation time involved accounts for a large fraction of the time required for the ungapped extensions. Our method clusters subsequences from a database and filters out the non-representative seeds within these clusters to minimize the computation time spent on ungapped extensions. In our method, the subsequences in a cluster are more similar to representative subsequences than those obtained using CaBLASTP. Therefore, our method does not require high sensitivity in the initial search for representative subsequences in a cluster. In this research, we developed a novel fast homology search method that uses hash tables, and then applied our subsequence clustering technique to the index to further accelerate the sequence homology search algorithm. We implemented this algorithm as GHOSTZ.</p>
  </sec>
  <sec>
    <title>2 Methods</title>
    <sec>
      <title>2.1 Flow of the proposed homology search method using subsequence clustering</title>
      <p>GHOSTZ adopts the seed-extension approach used in BLAST. The flow of GHOSTZ is shown in <xref ref-type="fig" rid="btu780-F1">Figure 1</xref>. Subsequences are extracted from a database, and similar subsequences are clustered. Then, hash tables are constructed that contain indexes for the subsequences and the clusters. The homology search method uses the hash tables to select the seeds for the alignments from representative sequences in the clusters. The distance between a query subsequence and the cluster representative is calculated, and then the lower bounds of the distance between the query subsequence and other members of the cluster are computed based on triangle inequality, as shown in <xref ref-type="fig" rid="btu780-F2">Figure 2</xref>. If the computed lower bound is lower than or equal to the distance threshold, the seed is taken into the next step, that is, ungapped extension, to investigate the homology between the query and the member sequences of the cluster. This filtering, using the lower bounds of the distance, is referred to herein as ‘similarity filtering’. Finally, chain filtering is used to bring similar extended seeds together, and a gapped extension is performed to obtain an alignment from the extended seed that contains gaps.
<fig id="btu780-F1" position="float"><label>Fig. 1.</label><caption><p>Flow of the proposed homology search method based on database subsequence clustering. Clustering of database subsequences and similarity filtering (shaded box) are included in this method</p></caption><graphic xlink:href="btu780f1p"/></fig>
<fig id="btu780-F2" position="float"><label>Fig. 2.</label><caption><p>Example of similarity filtering. <inline-formula><mml:math id="MM1"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the query subsequence. <inline-formula><mml:math id="MM2"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM3"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are the representative subsequences in the cluster 0 and the cluster 1, respectively. The lower bound of the distance between <inline-formula><mml:math id="MM4"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the member subsequence <inline-formula><mml:math id="MM5"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in the cluster 0 is calculated from the distance <inline-formula><mml:math id="MM6"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. When the lower bound of <inline-formula><mml:math id="MM7"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo> ≤ </mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mtext>distance</mml:mtext></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, the seed for <inline-formula><mml:math id="MM8"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM9"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is taken into the next step. The lower bound of the distance between <inline-formula><mml:math id="MM10"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the member subsequence <inline-formula><mml:math id="MM11"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in the cluster 1 is calculated from distance <inline-formula><mml:math id="MM12"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. When the lower bound of <inline-formula><mml:math id="MM13"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mtext>distance</mml:mtext></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, the seed for <inline-formula><mml:math id="MM14"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM15"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is not taken into the next step</p></caption><graphic xlink:href="btu780f2p"/></fig></p>
      <p>In the database subsequence clustering and seed search processes, the query and database amino acid sequences are both converted to a reduced amino acid alphabet to increase search sensitivity. We used a 10-letter reduced amino acid alphabet (A, {K, R}, {E, D, N, Q}, C, G, H, {I, L, V, M}, {F, Y, W}, P, {S, T}), which was derived based on the BLOSUM62 matrix (<xref rid="btu780-B17" ref-type="bibr">Murphy <italic>et</italic>
<italic>al.</italic>, 2000</xref>). This reduced alphabet has been used successfully in previously reported research on homology searches (<xref rid="btu780-B25" ref-type="bibr">Ye <italic>et</italic>
<italic>al.</italic>, 2011</xref>). For the ungapped and gapped extensions, the alignments are performed with the standard 20 amino acids.</p>
    </sec>
    <sec>
      <title>2.2 Database subsequence clustering and construction of hash tables</title>
      <p>The database subsequence clustering approach was developed for efficient homology sequence searches. In this method, subsequences in a database are clustered for use in similarity filtering; however, we do not cluster subsequences for seed themselves used in seed searches, but instead use longer subsequences, overlapping subsequences for seed (<xref ref-type="fig" rid="btu780-F3">Fig. 3</xref>). To avoid confusion of terms, we use ‘subsequence for seed’ for subsequences used in general seed searches, denoted by <italic>S</italic>. And we use ‘subsequence for clustering’ for subsequences used in the database subsequence clustering and similarity filtering processes. These are denoted by <italic>C</italic>. All subsequences for clustering depend on a subsequence for seed. Therefore, GHOSTZ first builds a hash table of subsequences for seed, and then determines which subsequences should be used for clustering, using this hash table. Database subsequence clustering is performed using these subsequences. Therefore, we will first describe the construction of hash tables of subsequences for seed, and then describe the construction of subsequences for clustering and database subsequence clustering.
<fig id="btu780-F3" position="float"><label>Fig. 3.</label><caption><p>Relationship between a subsequence used for clustering and the starting position of the seed</p></caption><graphic xlink:href="btu780f3p"/></fig></p>
      <p>Here, the text <inline-formula><mml:math id="MM29"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes a sequence of symbols and the length of <italic>T</italic> is <inline-formula><mml:math id="MM30"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula>. Each symbol is an element of an alphabet Σ (<inline-formula><mml:math id="MM31"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math></inline-formula> of protein is 20). <inline-formula><mml:math id="MM32"><mml:mrow><mml:mi>T</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM33"><mml:mrow><mml:mi>T</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are substrings. The sequence of a query is <italic>Q</italic>. The sequences <italic>D</italic><sub>0</sub>, <italic>D</italic><sub>1</sub>, … ,<inline-formula><mml:math id="MM34"><mml:mrow><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in a database are connected by inserting delimiters to transform them into a single long sequence <inline-formula><mml:math id="MM35"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>#</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>#</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>#</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>#</mml:mo><mml:msub><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:msub><mml:mo>#</mml:mo></mml:mrow></mml:math></inline-formula> (marked by the special symbol <inline-formula><mml:math id="MM36"><mml:mo>#</mml:mo></mml:math></inline-formula>). A seed is a pair of identical or similar subsequences of <italic>Q</italic> and <italic>D</italic>. <inline-formula><mml:math id="MM37"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM38"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is the subsequence of <italic>Q</italic> and <italic>D</italic> for a seed, and <inline-formula><mml:math id="MM39"><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> is a seed. The hash table used to identify subsequences for seed stores the pair of hash values of <inline-formula><mml:math id="MM40"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the starting point <italic>i</italic> of <inline-formula><mml:math id="MM41"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
      <p>In BLAST-like seed-extension algorithms, the search speed can be increased by decreasing the number of seeds. The number of seeds can be decreased if longer subsequences are used for seeds, because this decreases the number of randomly matched cases. However, this also causes a decrease in the search sensitivity. Thus, tolerances are required in the matching to retain sufficient search sensitivity. In BLASTX, the length of the subsequence for seed is three and neighborhood words are identified, as well as exact subsequences (<xref rid="btu780-B2" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 1997</xref>). A neighborhood word is a subsequence that is similar to each subsequence (<xref rid="btu780-B1" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 1990</xref>). BLAST uses a large variety of subsequences of each subsequence in a seed search to increase the search sensitivity using neighborhood words. However, neighborhood words are ineffective for longer subsequences for seed because the variety of neighborhood words is great.</p>
      <p>GHOSTZ identifies long subsequences by employing a reduced amino acid alphabet in the seed search. The amino acid alphabet in the subsequences is converted to the reduced amino acid alphabet, and then the hash value for this subsequence is calculated. The variety of subsequences for each original subsequence becomes one, using the reduced amino acid alphabet. In addition, use of the reduced amino acid alphabet allows GHOSTZ to find longer subsequences without a large decrease in search sensitivity. In GHOSTZ, the length of the subsequence for seed is determined by the sum of the match scores of the subsequence. Because the frequency of each amino acid differs in the subsequences, the probability of finding each particular subsequence is different. Therefore, different subsequences may have different lengths. A score definition has previously been proposed for calculating matches between reduced amino acid alphabets (<xref rid="btu780-B16" ref-type="bibr">Melo and Marti-Renom, 2006</xref>). However, in this study we used a simpler definition. We defined the match scores of the groups of reduced amino acid alphabets by the largest match score in the group based on the original score matrix. For example, in the BLOSUM62 score matrix, the match scores of amino acids F, Y and W, are 6, 7 and 11, respectively; thus, the match score for the group including F, Y and W is 11. To avoid insignificant hits, only subsequences with scores that exceed the score threshold <italic>T</italic><sub>seed</sub> are hashed as subsequences for seed. For example, when <italic>T</italic><sub>seed</sub> = 39, ‘HDGLNP’ is not used in the seed search because its score is 38 and does not exceed <italic>T</italic><sub>seed</sub>. However, ‘HDGLNPA’ is used in the seed search because its score is 42, which exceeds <italic>T</italic><sub>seed</sub>. In addition, in our implementation, the length of subsequences for seed is restricted to 6–8 residues, because a perfect hash function is used.</p>
      <p>After building the hash table of subsequences for seed, the subsequences for clustering are constructed, and database subsequence clustering is performed as follows: If <italic>i</italic> is the starting point of <inline-formula><mml:math id="MM42"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and <italic>L</italic> is the length of the subsequence used for clustering, then let <inline-formula><mml:math id="MM43"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>L</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>L</mml:mi><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> be the subsequence for clustering. For clustering, a subsequence for clustering with <italic>i</italic> as the center is used, instead of a subsequence for seed with <italic>i</italic> as the starting point. The relationship between <inline-formula><mml:math id="MM44"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM45"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is shown in <xref ref-type="fig" rid="btu780-F3">Figure 3</xref>. If <inline-formula><mml:math id="MM46"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> has delimiters, <inline-formula><mml:math id="MM47"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are not used for clustering because <inline-formula><mml:math id="MM48"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> contains the subsequence of several sequences in the database. <inline-formula><mml:math id="MM49"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> becomes a member of a cluster if it has the same hash value of <inline-formula><mml:math id="MM50"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> as the cluster representative <inline-formula><mml:math id="MM51"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the distance between the representative of a cluster <inline-formula><mml:math id="MM52"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM53"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is lower than or equal to the distance threshold <italic>T</italic><sub>cluster</sub>. Hamming distance, which is the number of mismatches between sequences, is used to measure this distance. To reduce the computation time required for clustering, a greedy algorithm similar to CD-HIT (<xref rid="btu780-B6" ref-type="bibr">Fu <italic>et al.</italic>, 2012</xref>; <xref rid="btu780-B14" ref-type="bibr">Li and Godzik, 2006</xref>) was employed. The algorithm for database subsequence clustering is shown in <xref ref-type="fig" rid="btu780-F4">Figure 4</xref>. In this algorithm, the first subsequence sampled always becomes a cluster representative. All subsequences are compared with each cluster representative, and the subsequence becomes a new cluster representative if it is not a member of any other cluster. Before running the database subsequence clustering, we recommend that similar sequences are arranged close to each other in the input file, using a clustering tool such as CD-HIT, because this allows the clustering algorithm to cluster subsequences more efficiently. After subsequence clustering, the results are used to construct three tables to be used as indexes for the seed searches. The <italic>B<sub>e</sub></italic> hash table stores the hash values of <inline-formula><mml:math id="MM54"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and the starting points <italic>i</italic> of <inline-formula><mml:math id="MM55"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for the representatives of clusters where the number of members in the cluster is only one. The <italic>B<sub>r</sub></italic> hash table stores the hash values of <inline-formula><mml:math id="MM56"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, their cluster IDs and the starting points <italic>i</italic> of <inline-formula><mml:math id="MM57"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> that are representative of a cluster (not stored in <italic>B<sub>e</sub></italic>). The <italic>B<sub>m</sub></italic> table stores the mapping from the cluster IDs to the starting points <italic>i</italic> of <inline-formula><mml:math id="MM58"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> whose <inline-formula><mml:math id="MM59"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are members of that cluster. These three tables are used for the seed search. Examples of <italic>B<sub>e</sub></italic>, <italic>B<sub>r</sub></italic> and <italic>B<sub>m</sub></italic> are shown in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Figure S1A–C</ext-link>.
<fig id="btu780-F4" position="float"><label>Fig. 4.</label><caption><p>Pseudo-code for database subsequence clustering</p></caption><graphic xlink:href="btu780f4p"/></fig></p>
    </sec>
    <sec>
      <title>2.3 Seed search and similarity filtering</title>
      <p>The seed search is performed with <italic>B<sub>e</sub></italic>, <italic>B<sub>r</sub></italic>, <italic>B<sub>m</sub></italic> and the hash table of queries. The hash table of the queries is constructed before the seed search. This hash table contains the hash values of <inline-formula><mml:math id="MM60"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, the query IDs and the starting points of subsequences for the corresponding hash values. An example of a hash table of queries is shown in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Figure S1D</ext-link>.</p>
      <p>In the seed search, seeds of query subsequences and representative subsequences in the database are found using <italic>B<sub>e</sub></italic> and <italic>B<sub>r</sub></italic>. If the seeds are from <italic>B<sub>e</sub></italic>, an ungapped extension is performed because there are no other subsequences in the cluster. If the seeds are from <italic>B<sub>r</sub></italic>, the similarity filtering process is performed. Then, the hamming distance between a query and the database subsequence is calculated. Given two sequences <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub>, we denote by <inline-formula><mml:math id="MM61"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> the distance between <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub>. The distance should satisfy the following triangle inequality:
<disp-formula id="btu780-M1"><label>(1)</label><mml:math id="MM62"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo> ≤ </mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      <p>If <inline-formula><mml:math id="MM63"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the subsequence of the query, <inline-formula><mml:math id="MM64"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (<inline-formula><mml:math id="MM65"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>) is the sequence of a cluster member, and <inline-formula><mml:math id="MM66"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (<inline-formula><mml:math id="MM67"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>) is the subsequence of a representative cluster member, then the lower bound of the distance between <inline-formula><mml:math id="MM68"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM69"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> from this inequality will be:
<disp-formula id="btu780-M2"><label>(2)</label><mml:math id="MM70"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo> ≥ </mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
</p>
      <p>This lower bound of the distance between <inline-formula><mml:math id="MM71"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>Q</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="MM72"><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is calculated, and the seed is extended without gaps if this lower bound of the distance is less than or equal to the distance threshold <italic>T</italic><sub>distance</sub>. The relationships among the query, the cluster representative and the cluster members are shown in <xref ref-type="fig" rid="btu780-F5">Figure 5</xref>. The pseudo-code for the seed search and similarity filtering is shown in <xref ref-type="fig" rid="btu780-F6">Figure 6</xref>.
<fig id="btu780-F5" position="float"><label>Fig. 5.</label><caption><p>Relationships among a query subsequence, a representative cluster subsequence and a member of the cluster that satisfies the triangle inequality</p></caption><graphic xlink:href="btu780f5p"/></fig>
<fig id="btu780-F6" position="float"><label>Fig. 6.</label><caption><p>Pseudo-code for seed search, similarity filtering and ungapped extension in the case of multiple cluster members</p></caption><graphic xlink:href="btu780f6p"/></fig></p>
    </sec>
    <sec>
      <title>2.4 Ungapped extension</title>
      <p>Gapped extension generally requires large amounts of computation time; therefore, most homology search algorithms perform an ungapped extension before a gapped extension. We used an ungapped extension to filter candidate seeds in the output from the seed search. Only seeds with ungapped extension scores that exceed the score threshold <italic>T</italic><sub>ungapped</sub> are stored and extended with gaps after the ungapped extension is complete. In the ungapped extension, the cutoff technique that is used in BLAST (<xref rid="btu780-B1" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 1990</xref>) is used to accelerate the extension process. The <italic>T</italic><sub>ungapped</sub> and the other parameters for ungapped extensions are the same as the BLAST default parameters.</p>
      <p>To access memory efficiently when performing the ungapped extension, seed searches are performed for multiple queries simultaneously. If the hash values of query subsequences are the same, their starting points are packed using the hash table. Then, an ungapped extension is performed for the queries that have identical hash values in sequential order, because this increases the cache hit ratio when accessing the positions of the sequences in the database (line 9–31 in <xref ref-type="fig" rid="btu780-F6">Fig. 6</xref>).</p>
    </sec>
    <sec>
      <title>2.5 Chain filtering and gapped extension</title>
      <p>Chain filtering is performed after an ungapped extension because some seeds overlap. Therefore, the number of gapped extensions can be reduced by merging overlapping seeds. After chain filtering, the seeds are extended with gaps using a score-limited dynamic programming technique (<xref rid="btu780-B2" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 1997</xref>).</p>
    </sec>
    <sec>
      <title>2.6 Execution of the homology search method without subsequence clustering</title>
      <p>The flow of the homology search without subsequence clustering is shown in <xref ref-type="fig" rid="btu780-F7">Figure 7</xref>. This method is almost identical to that used in GHOSTZ, except that subsequence clustering and similarity filtering are not used for the seed search. This method, without subsequence clustering, was used to evaluate the improvement in processing time obtained by subsequence clustering. Here, the query subsequences are searched against all the subsequences in the database using hash tables. Next, all seeds are directly extended using the ungapped extension process. Finally, chain filtering is performed to merge similar seeds, and gapped extension is used to extend the seed sequences.
<fig id="btu780-F7" position="float"><label>Fig. 7.</label><caption><p>Flow of the proposed homology search method without database subsequence clustering for the purpose of comparison</p></caption><graphic xlink:href="btu780f7p"/></fig></p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Datasets and the computing environment</title>
      <p>We evaluated the performance of the homology searches with and without subsequence clustering. We used the amino acid sequences in the Kyoto Encyclopedia of Genes and Genomes (KEGG) GENES database (as of May 2013). This database contains <bold>∼</bold>10 million protein sequences, which comprise a total of <bold>∼</bold>3.6 billion residues. For the query sequences, we used three datasets: soil microbiome metagenomic sequences (accession number, SRR407548, read length = 150 bp), human microbiome metagenomic sequences (accession number, SRS011098, read length = 101 bp) and marine microbiome metagenomic sequences (accession number, ERR315856, read length = 104 bp). SRR407548 and ERR315856 were obtained from the DNA Data Bank of Japan Sequence Read Archive, which is a member of the International Nucleotide Sequence Database Collaboration and which archives data in close collaboration with the NCBI Sequence Read Archive and the European Bioinformatics Institute Sequence Read Archive. SRS011098 was obtained from the Data Analysis and Coordination Center for the HMP web site (<ext-link ext-link-type="uri" xlink:href="http://www.hmpdacc.org/">http://www.hmpdacc.org/</ext-link>). We used the whole metagenomic shotgun sequencing data from SRS011098. For all datasets, 10 000 DNA short reads were randomly selected and used. The evaluation tests were performed on a workstation with a 2.93 GHz Intel Xeon 5670 processor, 54 GB memory and SUSE Linux Enterprise Server 11 Service Pack (SP) 1.</p>
      <p>For the homology search with and without subsequence clustering, we used a seed score threshold of <italic>T</italic><sub>seed</sub> = 39. <italic>T</italic><sub>seed</sub> was determined to be similar in sensitivity to RAPSearch. The parameters used for gapped and ungapped extensions were the same as the BLASTX default parameters. To perform the database subsequence clustering efficiently, similar sequences were arranged close to each other in the database file, based on the results of CD-HIT.</p>
    </sec>
    <sec>
      <title>3.2 Relationship between subsequence length and acceleration ratio and accuracy</title>
      <p>The subsequence clustering method has three parameters: the length of the subsequence <italic>L</italic>, the distance threshold for the representative of a cluster <italic>T</italic><sub>cluster</sub> and the distance threshold for the similarity check <italic>T</italic><sub>distance</sub>. The subsequence length <italic>L</italic> particularly affects the performance of the search method because <italic>T</italic><sub>cluster</sub> and <italic>T</italic><sub>distance</sub> depend on <italic>L</italic>; therefore, we first determined the optimal length of a subsequence using <italic>L</italic> = 6, 8, 10, 12 and 14 and fixed distance thresholds of <italic>T</italic><sub>cluster</sub> = 0.1 <italic>L</italic> and <italic>T</italic><sub>distance</sub> = 0.2 <italic>L</italic>. We used 10 000 randomly selected DNA short reads from soil microbiome metagenomic sequences (SRR407548) and the KEGG GENES database. The acceleration ratios with different <italic>L</italic> for the subsequence clustering search method over the method without subsequence clustering are shown in <xref ref-type="table" rid="btu780-T1">Table 1</xref>. As shown, the speed of the search method that included subsequence clustering increased when <italic>L</italic> decreased.
<table-wrap id="btu780-T1" position="float"><label>Table 1.</label><caption><p>Computation times for homology searches using different subsequence lengths for the SRR407548 reads against the KEGG GENES database</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th colspan="1" rowspan="1"/><th colspan="1" rowspan="1">Computation time (s)</th><th colspan="1" rowspan="1">Acceleration ratio</th></tr></thead><tbody align="left"><tr><td colspan="1" rowspan="1">Without clustering</td><td colspan="1" rowspan="1">936.5</td><td colspan="1" rowspan="1">1.0</td></tr><tr><td colspan="1" rowspan="1"><italic>L</italic> = 6</td><td colspan="1" rowspan="1">348.7</td><td colspan="1" rowspan="1">2.7</td></tr><tr><td colspan="1" rowspan="1"><italic>L</italic> = 8</td><td colspan="1" rowspan="1">384.3</td><td colspan="1" rowspan="1">2.4</td></tr><tr><td colspan="1" rowspan="1"><italic>L</italic> = 10</td><td colspan="1" rowspan="1">460.8</td><td colspan="1" rowspan="1">2.0</td></tr><tr><td colspan="1" rowspan="1"><italic>L</italic> = 12</td><td colspan="1" rowspan="1">460.8</td><td colspan="1" rowspan="1">2.0</td></tr><tr><td colspan="1" rowspan="1"><italic>L</italic> = 14</td><td colspan="1" rowspan="1">509.3</td><td colspan="1" rowspan="1">1.8</td></tr></tbody></table><table-wrap-foot><fn id="btu780-TF1"><p><italic>Note</italic>: <italic>L</italic> is the length of the subsequence. The acceleration in processing speed is given as the ratio of the time used for the search method with subsequence clustering relative to the time used for the search method without subsequence clustering.</p></fn></table-wrap-foot></table-wrap></p>
      <p>The accuracy of the homology search for the different query sequences was estimated using the search results obtained by the Smith–Waterman local alignment algorithm implemented in SSEARCH (<xref rid="btu780-B18" ref-type="bibr">Pearson, 1991</xref>) as the correct result. The performance was estimated in terms of the fraction of the results that corresponded to the correct result. A search result was considered to be correct when the subject sequence with the highest score in SSEARCH was the same as the subject sequence obtained by our search method with subsequence clustering. The accuracy of <italic>L</italic> = 10 was better than the accuracy of the other lengths (<xref ref-type="fig" rid="btu780-F8">Fig. 8</xref>). Therefore, we determined that <italic>L</italic> = 10 was the optimal subsequence length because it yielded a good balance between sensitivity and computation time. GHOSTZ, using database subsequence clustering, achieved an <bold>∼</bold>2-fold increase in processing speed, without a large decrease in search accuracy.
<fig id="btu780-F8" position="float"><label>Fig. 8.</label><caption><p>Search accuracy of GHOSTZ for the SRR407548 sequence alignments against the KEGG GENES database. The percentage of correct answers is shown on the vertical axis. The <italic>E</italic>-values of the alignments are shown on the horizontal axis</p></caption><graphic xlink:href="btu780f8p"/></fig></p>
    </sec>
    <sec>
      <title>3.3 Comparison of the proposed search method with other methods</title>
      <p>To further evaluate GHOSTZ, we compared its search accuracy and computation time with the accuracy and computation time of NCBI BLAST (version 2.2.28+), BLAT (version 34 standalone) and RAPSearch (version 2.12). The metagenomic DNA sequences (SRR407548, SRS011098 and ERR315856) and the KEGG GENES database were used to evaluate these tools. The BLASTX program was executed with the command line options ‘-outfmt 6 -comp_based_stats 0’, which instructed the program to output in tabular format. Composition-based statistics (<xref rid="btu780-B3" ref-type="bibr">Altschul <italic>et</italic>
<italic>al.</italic>, 2005</xref>) were not used because this method was not employed in SSEARCH. The BLAT program does not include a function to translate the DNA reads to protein sequences; therefore, we translated the DNA reads into protein sequences based on the standard codon table. The BLAT program was executed with the command line options ‘-q = prot -t = prot -out = blast8’, which instructed the program to use protein queries and a protein database, and to output the data in the BLAST tabular format. The RAPSearch program was executed with the default command line options. The proposed homology search method was executed with <italic>L</italic> = 10.</p>
      <p>The accuracy was evaluated in the same way as the relationship between the length of the subsequence and the acceleration ratio. The results for SRR407548, SRS011098 and ERR315856 are shown in <xref ref-type="fig" rid="btu780-F9">Figure 9</xref>, <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Figures S2</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">S3</ext-link>, respectively. The accuracy of GHOSTZ was better than that of BLAT and was almost equal to that of RAPSearch. However, the accuracy of GHOSTZ was lower than that of BLASTX, especially for hits with <italic>E</italic>-values above <inline-formula><mml:math id="MM85"><mml:mrow><mml:mn>1.0</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. However, hits with such high <italic>E</italic>-values are not used in practice because they are unreliable. For instance, <xref rid="btu780-B23" ref-type="bibr">Turnbaugh <italic>et al.</italic> (2006)</xref> used hits with <italic>E</italic>-values below <inline-formula><mml:math id="MM86"><mml:mrow><mml:mn>1.0</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, and <xref rid="btu780-B9" ref-type="bibr">Kurokawa <italic>et al.</italic> (2007)</xref> used hits with <italic>E</italic>-values below <inline-formula><mml:math id="MM87"><mml:mrow><mml:mn>1.0</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Therefore, we consider that GHOSTZ has sufficient search accuracy for most metagenomic applications.
<fig id="btu780-F9" position="float"><label>Fig. 9.</label><caption><p>Search accuracy of different search methods for the SRR407548 sequence alignments against the KEGG GENES database. The percentage of correct answers is shown on the vertical axis. The <italic>E</italic>-values of the alignments are shown on the horizontal axis</p></caption><graphic xlink:href="btu780f9p"/></fig></p>
      <p>The computation time of each method was also evaluated. The software was run with the same commands that were used to evaluate the search accuracy. The computation times of the tested methods for SRR407548, SRS011098 and ERR315856 are shown in <xref ref-type="table" rid="btu780-T2">Table 2</xref>, <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Tables S1</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">S2</ext-link>, respectively. GHOSTZ had the fastest search speed of the software packages tested. GHOSTZ achieved <bold>∼</bold>185.2–261.3 times faster processing than BLASTX, and <bold>∼</bold>2.2–2.8 times faster processing than RAPSearch.
<table-wrap id="btu780-T2" position="float"><label>Table 2.</label><caption><p>Computation times for the SRR407548 reads against the KEGG GENES database</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th colspan="1" rowspan="1"/><th colspan="1" rowspan="1">Computation time (s)</th><th colspan="1" rowspan="1">Acceleration ratio</th></tr></thead><tbody align="left"><tr><td colspan="1" rowspan="1">GHOSTZ</td><td align="char" char="." colspan="1" rowspan="1">460.8</td><td align="char" char="." colspan="1" rowspan="1">261.3</td></tr><tr><td colspan="1" rowspan="1">RAPSearch</td><td align="char" char="." colspan="1" rowspan="1">1285.5</td><td align="char" char="." colspan="1" rowspan="1">93.7</td></tr><tr><td colspan="1" rowspan="1">BLAT</td><td align="char" char="." colspan="1" rowspan="1">2514.9</td><td align="char" char="." colspan="1" rowspan="1">47.9</td></tr><tr><td colspan="1" rowspan="1">BLASTX</td><td align="char" char="." colspan="1" rowspan="1">120395.2</td><td align="char" char="." colspan="1" rowspan="1">1.0</td></tr></tbody></table><table-wrap-foot><fn id="btu780-TF2"><p><italic>Note</italic>: The acceleration in processing speed for the search method using subsequence clustering relative to BLASTX using one thread.</p></fn></table-wrap-foot></table-wrap></p>
      <p>We also measured the search accuracy and computation time of each tool using different parameters. We used 10 000 randomly selected DNA short reads from SRR407548 and the KEGG GENES database. Because it is difficult to compare many plots showing the results for various parameters, we used single-value accuracy, which is calculated as the ratio of correctly searched queries to all queries whose <italic>E</italic>-values <inline-formula><mml:math id="MM88"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>1.0</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. These evaluations were performed on the same workstation used for the other evaluation, but the version of the operating system had been updated from SUSE Linux Enterprise Server 11 SP1 to SP3. Using this computing environment and these measurements, the computation time of GHOSTZ was 396.3 s and the accuracy was 0.84. <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Tables S3, S4</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">S5</ext-link> show the accuracy and computation time of RAPSearch, BLAT and BLASTX, respectively, using different parameters. RAPSearch showed a drastic decrease in accuracy in the fast mode, and the accuracy of BLAT was not drastically improved the accuracy, even using a smaller tile size parameter. Using the fastest parameter, the accuracy of BLASTX was similar to that of GHOSTZ; however, the computation time required was much greater.</p>
    </sec>
    <sec>
      <title>3.4 Evaluation of memory size</title>
      <p>The amount of memory required for running GHOSTZ depends on the size of database. Current computing systems often have relatively small memory sizes relative to the size of current databases. Therefore, GHOSTZ divides a database into several chunks. GHOSTZ sequentially searches each database chunk, and merges its results with the results of previous chunk searches, when this chunk division is performed before the construction of its database indexes. The default chunk size is 1 GB. Using this approach, GHOSTZ dramatically reduces working memory requirements. However, even using this technique, GHOSTZ requires more memory than RAPSearch. When we used 10 000 randomly selected DNA short reads from soil microbiome metagenomic sequences (SRR407548) and the KEGG GENES database, GHOSTZ required <bold>∼</bold>41 GB of memory for constructing the indexes of the database, and <bold>∼</bold>7 GB for the homology search itself (<xref ref-type="table" rid="btu780-T3">Table 3</xref>). In contrast, RAPSearch required only <bold>∼</bold>4 GB for the homology search. However, GHOSTZ can reduce the memory required by decreasing the database chunk size. As shown in <xref ref-type="table" rid="btu780-T3">Table 3</xref>, the memory required for GHOSTZ increases nearly linearly in proportion to the size of the database chunks. If a database is divided into a larger number of chunks, the memory required decreases accordingly. Of course, a trade-off exists between database chunk size and search speed. Homology search computation times increase as the size of a database chunk decreases. This is so because the number of clusters increases and the cache hit ratio in ungapped extension decreases. However, the situation is not dire, as shown in <xref ref-type="table" rid="btu780-T4">Table 4</xref>, the search speed of GHOSTZ with 128 MB chunks is <bold>∼</bold>12% slower than that with 1 GB chunks. Therefore, using smaller database chunks, GHOSTZ is executable even on a typical PC.
<table-wrap id="btu780-T3" position="float"><label>Table 3.</label><caption><p>Memory usage for database construction and homology search with various database chunk sizes</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th colspan="1" rowspan="1">Tool (chunk size)</th><th colspan="1" rowspan="1">Memory size for constructing index (GB)</th><th colspan="1" rowspan="1">Memory size for homology search (GB)</th></tr></thead><tbody align="left"><tr><td colspan="1" rowspan="1">GHOSTZ (128 MB)</td><td align="char" char="." colspan="1" rowspan="1">5.4</td><td align="char" char="." colspan="1" rowspan="1">1.4</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (256 MB)</td><td align="char" char="." colspan="1" rowspan="1">10.1</td><td align="char" char="." colspan="1" rowspan="1">2.2</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (512 MB)</td><td align="char" char="." colspan="1" rowspan="1">21.0</td><td align="char" char="." colspan="1" rowspan="1">3.8</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (1 GB)</td><td align="char" char="." colspan="1" rowspan="1">41.0</td><td align="char" char="." colspan="1" rowspan="1">6.7</td></tr><tr><td colspan="1" rowspan="1">RAPSearch</td><td align="char" char="." colspan="1" rowspan="1">6.9</td><td align="char" char="." colspan="1" rowspan="1">4.1</td></tr></tbody></table><table-wrap-foot><fn id="btu780-TF3"><p><italic>Note</italic>: The first, second and third columns show the size of the database chunks, the memory required for constructing the index (GB) and the memory required for the homology search (GB), respectively. We searched the KEGG GENES (3.9 GB) database.</p></fn></table-wrap-foot></table-wrap>
<table-wrap id="btu780-T4" position="float"><label>Table 4.</label><caption><p>Computation time for database construction and homology search with various database chunk sizes</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th colspan="1" rowspan="1">Tool (chunk size)</th><th colspan="1" rowspan="1">Computation time (s)</th><th colspan="1" rowspan="1">Acceleration ratio</th></tr></thead><tbody align="left"><tr><td colspan="1" rowspan="1">GHOSTZ (128 MB)</td><td align="char" char="." colspan="1" rowspan="1">545.2</td><td align="char" char="." colspan="1" rowspan="1">0.88</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (256 MB)</td><td align="char" char="." colspan="1" rowspan="1">488.2</td><td align="char" char="." colspan="1" rowspan="1">0.94</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (512 MB)</td><td align="char" char="." colspan="1" rowspan="1">479.1</td><td align="char" char="." colspan="1" rowspan="1">0.96</td></tr><tr><td colspan="1" rowspan="1">GHOSTZ (1 GB)</td><td align="char" char="." colspan="1" rowspan="1">460.8</td><td align="char" char="." colspan="1" rowspan="1">1.00</td></tr><tr><td colspan="1" rowspan="1">RAPSearch</td><td align="char" char="." colspan="1" rowspan="1">1285.5</td><td align="char" char="." colspan="1" rowspan="1">0.35</td></tr></tbody></table><table-wrap-foot><fn id="btu780-TF4"><p><italic>Note</italic>: The first, second and third columns show the size of the database chunks, the computation time and the acceleration in processing speed relative to GHOSTZ, respectively, using 1 GB database chunks. We searched the KEGG GENES (3.9 GB) database.</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In the evaluation experiment, GHOSTZ achieved an <bold>∼</bold>2-fold increase in speed, relative to GHOSTZ without clustering. This acceleration can probably be attributed to the reduction in the number of ungapped extensions that were required when using GHOSTZ. To validate this hypothesis, we compared the total number of ungapped extensions required by each method. In the database subsequence clustering approach, similarity filtering requires comparable computing time to the ungapped extension process; therefore, we added the number of similarity filterings performed to the number of ungapped extensions. We found that the number of ungapped extensions could be reduced to approximately one-third of the original number using database subsequence clustering. Currently, ungapped extension is one of the primary bottlenecks in fast homology searches. Thus, we think that this effective decrease in ungapped extensions contributed to the large acceleration we observed when using subsequence clustering for homology searches.</p>
    <p>CaBLASTP, which is based on a compression approach, achieved 2.4–3.1-fold faster processing speed than the original BLASTP (<xref rid="btu780-B4" ref-type="bibr">Daniels <italic>et</italic>
<italic>al.</italic>, 2013</xref>). The acceleration achieved by GHOSTZ was <bold>∼</bold>2-fold faster than the speed of GHOSTZ without clustering, which is comparable to that of CaBLASTP. However, we achieved a processing speed that was much faster than that of the BLAST homology search algorithm. As described earlier, the compression approach used in CaBLASTP requires high search sensitivity and cannot be applied to faster, but less sensitive, homology search algorithms. In the initial processing, the compression search algorithm needs to find remote homologs in a coarse database, and less sensitive homology search algorithms often fail to find such sequences. In contrast, the clustering targets used in our approach are subsequences in a database, which does not depend on search sensitivity. In addition, GHOSTZ uses hamming distance in database subsequence clustering to measure the dissimilarity between sequences, whereas CaBLASTP uses sequence similarity. Using distance allows search seeds to be pruned efficiently using triangle inequality in an ungapped extension process, contributing to the acceleration in processing.</p>
    <p>GHOSTZ allows the indexes of a database to be constructed anew, so that users who wish to use other parameters can use this method. Construction of database indexes for a 1 GB database requires <bold>∼</bold>3 h of computation time. However, when a huge number of DNA reads obtained using next-generation sequencing are to be processed, the computation time for homology searches is generally much greater than the time required for database construction. Therefore, we consider that the computational time involved in rebuilding database indexes and clustering is not likely to be a problem in practice.</p>
    <sec>
      <title>4.1 Evaluation of computing time for more queries</title>
      <p>Reading of database files, including indexes, accounts for a larger fraction of the computing time required for GHOSTZ, compared with the other tools evaluated, especially if the number of queries is small. In Section 3, we used 10 000 queries for evaluation because of the limitations imposed by our computational resources. Thus, the performance of GHOSTZ might have been underestimated. To investigate the point, we evaluated the computation time required for GHOSTZ and RAPSearch for 1000, 10 000, 100 000 and 1 000 000 queries. The queries were randomly selected from SRR407548 and searched against the KEGG GENES database. These evaluation tests were performed on a workstation with a 2.93 GHz Intel Xeon 5670 processor, 54 GB memory and SUSE Linux Enterprise Server 11 Service Pack 3. The acceleration ratio of GHOSTZ relative to RAPSearch is shown in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btu780/-/DC1">Supplementary Figure S4</ext-link>. When 1000 queries were used, the acceleration was only 2.9. In contrast, GHOSTZ was <bold>∼</bold>3.8-fold faster than RAPSearch when the number of queries was 1 000 000. These results indicate that GHOSTZ achieves its full potential only when working on a sufficient number of queries.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>We developed a new homology search algorithm with subsequence clustering. We reduced the number of ungapped alignment extensions by clustering subsequences in a database, and achieved a 2-fold acceleration in processing speed without a drop in search sensitivity. The algorithm was designed for functional and taxonomic annotation in metagenome analysis. The proposed database subsequence clustering method could also be useful in proteome research, which requires a huge number of sequence homology searches.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_31_8_1183__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="msword" xlink:href="supp_btu780_SupplementaryData.doc"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors thank Prof. Ken Kurokawa and Dr Takuji Yamada for their helpful discussion of metagenomic analysis.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by a Grant-in-Aid for the <funding-source>Japan Society for the Promotion of Science (JSPS) Fellows</funding-source> [Grant number <award-id>248766</award-id>], the Strategic Programs for Innovative Research (SPIRE) Field 1 Supercomputational Life Science of the Ministry of Education, Culture, Sports, Science and Technology (MEXT) in <funding-source>Japan and Cancer Research Development</funding-source> funding from the <funding-source>National Cancer Center, Japan</funding-source>.</p>
    <p><italic>Conflict of Interest:</italic> none declared.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="btu780-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S.F.</given-names></name><etal/></person-group><italic>.</italic> (<year>1990</year>) <article-title>Basic local alignment search tool</article-title>. <source>J. Mol. Biol.</source>, <volume>215</volume>, <fpage>403</fpage>–<lpage>410</lpage>.<pub-id pub-id-type="pmid">2231712</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S.F.</given-names></name><etal/></person-group><italic>.</italic> (<year>1997</year>) <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>. <source>Nucleic Acids Res.</source>, <volume>25</volume>, <fpage>3389</fpage>–<lpage>3402</lpage>.<pub-id pub-id-type="pmid">9254694</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S.F.</given-names></name><etal/></person-group><italic>.</italic> (<year>2005</year>) <article-title>Protein database searches using compositionally adjusted substitution matrices</article-title>. <source>FEBS J.</source>, <volume>272</volume>, <fpage>5101</fpage>–<lpage>5109</lpage>.<pub-id pub-id-type="pmid">16218944</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Daniels</surname><given-names>N.M.</given-names></name><etal/></person-group><italic>.</italic> (<year>2013</year>) <article-title>Compressive genomics for protein databases</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>29</volume>, <fpage>i283</fpage>–<lpage>i290</lpage>.<pub-id pub-id-type="pmid">23812995</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Finn</surname><given-names>R.D.</given-names></name><etal/></person-group><italic>.</italic> (<year>2010</year>) <article-title>The pfam protein families database</article-title>. <source>Nucleic Acids Res.</source>, <volume>38</volume> (<issue>Suppl. 1</issue>), <fpage>D211</fpage>–<lpage>D222</lpage>.<pub-id pub-id-type="pmid">19920124</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fu</surname><given-names>L.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) <article-title>CD-HIT: accelerated for clustering the next-generation sequencing data</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>28</volume>, <fpage>3150</fpage>–<lpage>3152</lpage>.<pub-id pub-id-type="pmid">23060610</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gilbert</surname><given-names>J.A.</given-names></name><etal/></person-group><italic>.</italic> (<year>2010</year>) <article-title>Meeting report: the terabase metagenomics workshop and the vision of an Earth microbiome project</article-title>. <source>Stand. Genomic Sci.</source>, <volume>3</volume>, <fpage>243</fpage>–<lpage>248</lpage>.<pub-id pub-id-type="pmid">21304727</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kent</surname><given-names>W.J.</given-names></name></person-group> (<year>2002</year>) <article-title>BLAT–the BLAST-like alignment tool</article-title>. <source>Genome Res.</source>, <volume>12</volume>, <fpage>656</fpage>–<lpage>664</lpage>.<pub-id pub-id-type="pmid">11932250</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kurokawa</surname><given-names>K.</given-names></name><etal/></person-group><italic>.</italic> (<year>2007</year>) <article-title>Comparative metagenomics revealed commonly enriched gene sets in human gut microbiomes</article-title>. <source>DNA Res.</source>, <volume>14</volume>, <fpage>169</fpage>–<lpage>181</lpage>.<pub-id pub-id-type="pmid">17916580</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Langmead</surname><given-names>B.</given-names></name><name><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group> (<year>2012</year>) <article-title>Fast gapped-read alignment with Bowtie 2</article-title>. <source>Nat. Methods</source><italic>,</italic>
<volume>9</volume>, <fpage>357</fpage>–<lpage>359</lpage>.<pub-id pub-id-type="pmid">22388286</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Langmead</surname><given-names>B.</given-names></name><etal/></person-group><italic>.</italic> (<year>2009</year>) <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>. <source>Genome Biol.</source>, <volume>10</volume>, <fpage>R25</fpage>.<pub-id pub-id-type="pmid">19261174</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H.</given-names></name><name><surname>Durbin</surname><given-names>R.</given-names></name></person-group> (<year>2009</year>) <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>25</volume>, <fpage>1754</fpage>–<lpage>1760</lpage>.<pub-id pub-id-type="pmid">19451168</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H.</given-names></name><name><surname>Durbin</surname><given-names>R.</given-names></name></person-group> (<year>2010</year>) <article-title>Fast and accurate long-read alignment with Burrows-Wheeler transform</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>26</volume>, <fpage>589</fpage>–<lpage>595</lpage>.<pub-id pub-id-type="pmid">20080505</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>W.</given-names></name><name><surname>Godzik</surname><given-names>A.</given-names></name></person-group> (<year>2006</year>) <article-title>CD-HIT: a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>22</volume>, <fpage>1658</fpage>–<lpage>1659</lpage>.<pub-id pub-id-type="pmid">16731699</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Manber</surname><given-names>U.</given-names></name><name><surname>Myers</surname><given-names>G.</given-names></name></person-group> (<year>1993</year>) <article-title>Suffix arrays: a new method for on-line string searches</article-title>. <source>SIAM J. Comput.</source><italic>,</italic>
<volume>22</volume>, <fpage>935</fpage>–<lpage>948</lpage>.</mixed-citation>
    </ref>
    <ref id="btu780-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Melo</surname><given-names>F.</given-names></name><name><surname>Marti-Renom</surname><given-names>M.A.</given-names></name></person-group> (<year>2006</year>) <article-title>Accuracy of sequence alignment and fold assessment using reduced amino acid alphabets</article-title>. <source>Proteins</source>, <volume>63</volume>, <fpage>986</fpage>–<lpage>995</lpage>.<pub-id pub-id-type="pmid">16506243</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Murphy</surname><given-names>L.R.</given-names></name><etal/></person-group><italic>.</italic> (<year>2000</year>) <article-title>Simplified amino acid alphabets for protein fold recognition and implications for folding</article-title>. <source>Protein Eng.</source>, <volume>13</volume>, <fpage>149</fpage>–<lpage>152</lpage>.<pub-id pub-id-type="pmid">10775656</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pearson</surname><given-names>W.R.</given-names></name></person-group> (<year>1991</year>) <article-title>Searching protein sequence libraries: comparison of the sensitivity and selectivity of the Smith-Waterman and FASTA algorithms</article-title>. <source>Genomics</source><italic>,</italic>
<volume>11</volume>, <fpage>635</fpage>–<lpage>650</lpage>.<pub-id pub-id-type="pmid">1774068</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qin</surname><given-names>J.</given-names></name><etal/></person-group><italic>.</italic> (<year>2010</year>) <article-title>A human gut microbial gene catalogue established by metagenomic sequencing</article-title>. <source>Nature</source><italic>,</italic>
<volume>464</volume>, <fpage>59</fpage>–<lpage>65</lpage>.<pub-id pub-id-type="pmid">20203603</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tatusov</surname><given-names>R.L.</given-names></name><etal/></person-group><italic>.</italic> (<year>1997</year>) <article-title>A genomic perspective on protein families</article-title>. <source>Science</source><italic>,</italic>
<volume>278</volume>, <fpage>631</fpage>–<lpage>637</lpage>.<pub-id pub-id-type="pmid">9381173</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tatusov</surname><given-names>R.L.</given-names></name><etal/></person-group><italic>.</italic> (<year>2003</year>) <article-title>The COG database: an updated version includes eukaryotes</article-title>. <source>BMC Bioinformatics</source><italic>,</italic>
<volume>4</volume>, <fpage>41</fpage>.<pub-id pub-id-type="pmid">12969510</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B22">
      <mixed-citation publication-type="journal"><collab>The Human Microbiome Project Consortium</collab> (<year>2012</year>) <article-title>Structure, function and diversity of the healthy human microbiome</article-title>. <source>Nature</source><italic>,</italic>
<volume>486</volume>, <fpage>207</fpage>–<lpage>214</lpage>.<pub-id pub-id-type="pmid">22699609</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Turnbaugh</surname><given-names>P.J.</given-names></name><etal/></person-group><italic>.</italic> (<year>2006</year>) <article-title>An obesity-associated gut microbiome with increased capacity for energy harvest</article-title>. <source>Nature</source><italic>,</italic>
<volume>444</volume>, <fpage>1027</fpage>–<lpage>1031</lpage>.<pub-id pub-id-type="pmid">17183312</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vouzis</surname><given-names>P.D.</given-names></name><name><surname>Sahinidis</surname><given-names>N.V.</given-names></name></person-group> (<year>2011</year>) <article-title>GPU-BLAST: using graphics processors to accelerate protein sequence alignment</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>27</volume>, <fpage>182</fpage>–<lpage>188</lpage>.<pub-id pub-id-type="pmid">21088027</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ye</surname><given-names>Y.</given-names></name><etal/></person-group><italic>.</italic> (<year>2011</year>) <article-title>RAPSearch: a fast protein similarity search tool for short reads</article-title>. <source>BMC Bioinformatics</source><italic>,</italic>
<volume>12</volume>, <fpage>159</fpage>.<pub-id pub-id-type="pmid">21575167</pub-id></mixed-citation>
    </ref>
    <ref id="btu780-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhao</surname><given-names>Y.</given-names></name><etal/></person-group><italic>.</italic> (<year>2012</year>) <article-title>RAPSearch2: a fast and memory-efficient protein similarity search tool for next-generation sequencing data</article-title>. <source>Bioinformatics</source><italic>,</italic>
<volume>28</volume>, <fpage>125</fpage>–<lpage>126</lpage>.<pub-id pub-id-type="pmid">22039206</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

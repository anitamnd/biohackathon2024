<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7470961</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkaa506</article-id>
    <article-id pub-id-type="publisher-id">gkaa506</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/7</subject>
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods Online</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>scIGANs: single-cell RNA-seq imputation using generative adversarial networks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-9834-3006</contrib-id>
        <name>
          <surname>Xu</surname>
          <given-names>Yungang</given-names>
        </name>
        <!--<email>yungang.xu@uth.tmc.edu</email>-->
        <aff><institution>Centre for Computational Systems Medicine, School of Biomedical Informatics, The University of Texas Health Science Centre at Houston</institution>, TX 77030, <country country="US">USA</country></aff>
        <xref ref-type="author-notes" rid="FN1"/>
        <xref ref-type="corresp" rid="COR2"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Zhigang</given-names>
        </name>
        <aff><institution>School of Information Management and Statistics, Hubei University of Economics</institution>, Wuhan, Hubei 430205, <country country="CN">China</country></aff>
        <aff><institution>Hubei Centre for Data and Analysis, Hubei University of Economics</institution>, Wuhan, Hubei 430205, <country country="CN">China</country></aff>
        <xref ref-type="author-notes" rid="FN1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>You</surname>
          <given-names>Lei</given-names>
        </name>
        <aff><institution>Centre for Computational Systems Medicine, School of Biomedical Informatics, The University of Texas Health Science Centre at Houston</institution>, TX 77030, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Liu</surname>
          <given-names>Jiajia</given-names>
        </name>
        <!--<email>1710848@tongji.edu.cn</email>-->
        <aff><institution>Centre for Computational Systems Medicine, School of Biomedical Informatics, The University of Texas Health Science Centre at Houston</institution>, TX 77030, <country country="US">USA</country></aff>
        <aff><institution>College of Electronic and Information Engineering, Tongji University</institution>, Shanghai, Shanghai 201804, <country country="CN">China</country></aff>
        <xref ref-type="corresp" rid="COR3"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fan</surname>
          <given-names>Zhiwei</given-names>
        </name>
        <aff><institution>Centre for Computational Systems Medicine, School of Biomedical Informatics, The University of Texas Health Science Centre at Houston</institution>, TX 77030, <country country="US">USA</country></aff>
        <aff><institution>West China School of Public Health and West China Fourth Hospital, Sichuan University</institution>, Chengdu, Chengdu 610040, <country country="CN">China</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-7191-6495</contrib-id>
        <name>
          <surname>Zhou</surname>
          <given-names>Xiaobo</given-names>
        </name>
        <!--<email>xiaobo.zhou@uth.tmc.edu</email>-->
        <aff><institution>Centre for Computational Systems Medicine, School of Biomedical Informatics, The University of Texas Health Science Centre at Houston</institution>, TX 77030, <country country="US">USA</country></aff>
        <aff><institution>Department of Paediatric Surgery, McGovern Medical School, The University of Texas Health Science Centre at Houston</institution>, Houston, TX 77030, <country country="US">USA</country></aff>
        <xref ref-type="corresp" rid="COR1"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +1 713 500 3923; Fax: +1 713 500 3929; Email: <email>xiaobo.zhou@uth.tmc.edu</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Yungang Xu. Email: <email>yungang.xu@uth.tmc.edu</email></corresp>
      <corresp id="COR3">Correspondence may also be addressed to Jiajia Liu. Email: <email>1710848@tongji.edu.cn</email></corresp>
      <fn id="FN1">
        <p>The authors wish it to be known that, in their opinion, the first two authors should be regarded as joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>04</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-06-26">
      <day>26</day>
      <month>6</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>6</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>48</volume>
    <issue>15</issue>
    <fpage>e85</fpage>
    <lpage>e85</lpage>
    <history>
      <date date-type="accepted">
        <day>17</day>
        <month>6</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="received">
        <day>10</day>
        <month>2</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact <email>journals.permissions@oup.com</email></license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkaa506.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Single-cell RNA-sequencing (scRNA-seq) enables the characterization of transcriptomic profiles at the single-cell resolution with increasingly high throughput. However, it suffers from many sources of technical noises, including insufficient mRNA molecules that lead to excess false zero values, termed dropouts. Computational approaches have been proposed to recover the biologically meaningful expression by borrowing information from similar cells in the observed dataset. However, these methods suffer from oversmoothing and removal of natural cell-to-cell stochasticity in gene expression. Here, we propose the generative adversarial networks (GANs) for scRNA-seq imputation (scIGANs), which uses generated cells rather than observed cells to avoid these limitations and balances the performance between major and rare cell populations. Evaluations based on a variety of simulated and real scRNA-seq datasets show that scIGANs is effective for dropout imputation and enhances various downstream analysis. ScIGANs is robust to small datasets that have very few genes with low expression and/or cell-to-cell variance. ScIGANs works equally well on datasets from different scRNA-seq protocols and is scalable to datasets with over 100 000 cells. We demonstrated in many ways with compelling evidence that scIGANs is not only an application of GANs in omics data but also represents a competing imputation method for the scRNA-seq data.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R01CA241930</award-id>
        <award-id>R01GM123037</award-id>
        <award-id>AR069395</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="16"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>Single-cell RNA-sequencing (scRNA-seq) revolutionizes the traditional profiling of gene expression, making it able to fully characterize the transcriptomes of individual cells at the unprecedented throughput. A major problem for scRNA-seq is the sparsity of the expression matrix with a tremendous number of zero values. Most of these zero or near-zero values are artificially caused by technical defects including but not limited to insufficient mRNA molecules, low capture rate and sequencing depth, or other technological factors so that the observed zero does not reflect the underlying true expression level, which is called dropout (<xref rid="B1" ref-type="bibr">1</xref>). A pressing need in scRNA-seq data analysis remains identifying and handling the dropout events that, otherwise, will severely hinder downstream analysis and attenuate the power of scRNA-seq on a wide range of biological and biomedical applications. Therefore, applying computational approaches to address problems of missingness and noises is very important and timely, particularly considering the increasingly popular and large amount of scRNA-seq data.</p>
    <p>Several methods have been recently proposed and widely used to address the challenges resulted from excess zero values in scRNA-seq. MAGIC (<xref rid="B1" ref-type="bibr">1</xref>) imputes missing expression values by sharing information across similar cells, based on the idea of heat diffusion. ScImpute (<xref rid="B2" ref-type="bibr">2</xref>) learns each gene's dropout probability in each cell and then imputes the dropout values borrowing information from other similar cells selected based on the genes unlikely affected by dropout events. SAVER (<xref rid="B3" ref-type="bibr">3</xref>) borrows information across genes using a Bayesian approach to estimate unobserved true expression levels of genes. DrImpute (<xref rid="B4" ref-type="bibr">4</xref>) impute dropouts by simply averaging the expression values of similar cells defined by clustering. VIPER (<xref rid="B5" ref-type="bibr">5</xref>) borrows information from a sparse set of local neighborhood cells of similar expression patterns to impute the expression measurements in the cells of interest based on nonnegative sparse regression models. Meanwhile, some other methods aim at the same goal by denoizing the scRNA-seq data. DCA (<xref rid="B6" ref-type="bibr">6</xref>) uses a deep count autoencoder network to denoise scRNA-seq datasets by learning the count distribution, overdispersion, and sparsity of the data. ENHANCE (<xref rid="B7" ref-type="bibr">7</xref>) recovers denoized expression values based on principal component analysis on raw scRNA-seq data. During the preparation of this manuscript, we also noticed another imputation method DeepImpute (<xref rid="B8" ref-type="bibr">8</xref>), which uses a deep neural network with dropout layers and loss functions to learn patterns in the data, allowing for scRNA-seq imputation.</p>
    <p>While existing studies have adopted varying approaches for dropout imputation and yielded promising results, they either borrow information from similar cells or aggregate (co-expressed or similar) genes of the observed data, which will lead to oversmoothing (e.g. MAGIC) and remove natural cell-to-cell stochasticity in gene expression (e.g. scImpute). Moreover, the imputation performance will be significantly reduced for rare cells, which have limited information and are common for many scRNA-seq studies. Alternatively, SCRABBLE (<xref rid="B9" ref-type="bibr">9</xref>) attempts to leverage bulk data as a constraint on matrix regularization to impute dropout events. However, most scRNA-seq studies often lack matched bulk RNA-seq data and thus limit its practicality. Additionally, due to the non-trivial distinction between true and false zero counts, imputation and denoizing need account for both the intra-cell-type dependence and inter-cell-type specificity. Given the above concerns, a deep generative model would be a better choice to learn the true data distribution and then generate new data points with some variations, which are then independently used to impute the missing values and avoid overfitting.</p>
    <p>Deep generative models have been widely used for missing value imputation in fields (<xref rid="B10" ref-type="bibr">10–12</xref>), however, other than scRNA-seq. Although a deep generative model was used for scRNA-seq analysis (<xref rid="B13" ref-type="bibr">13</xref>), it's not explicitly designed for dropout imputation. Among deep generative models, generative adversarial networks (GANs) have evoked increasing interest in the computer vision community since its first introduction in 2014 (<xref rid="B14" ref-type="bibr">14</xref>). GANs has become an active area of research with multiple variants developed (<xref rid="B15" ref-type="bibr">15–19</xref>) and holds promising in data imputation (<xref rid="B20" ref-type="bibr">20</xref>) because of its capability of learning and mimicking any distribution of data. Given the great success of GANs in inpainting, we hypothesize that similar deep neural net architectures could be used to impute dropouts in scRNA-seq data.</p>
    <p>In this study, we propose scIGANs, a GANs framework for scRNA-seq imputation (Figure <xref ref-type="fig" rid="F1">1A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref>). Inspired by its established applications in inpainting, we convert the expression profile of every single cell to an image, wherein the pixels are represented by the normalized gene expression. And then dropout imputation becomes the process of inpainting an image by recovering the missing pieces that represent the dropout events. Because of the inherent advantages of GANs, scIGANs does not impose an assumption of specific statistical distributions for gene expression levels and dropout probabilities. It also does not force the imputation of genes that are not affected by dropout events. Moreover, scIGANs generates a set of realistic single cells instead of directly borrowing information from observed cells to impute the dropout events, which can avoid overfitting for the cell type of big population and meanwhile promise enough imputation power for rare cells. We systematically evaluate the performance of scIGANs and compare it with 11 state-of-the-art scRNA-seq imputation methods using three simulated and 19 real datasets measured across different experimental protocols (Figure <xref ref-type="fig" rid="F1">1B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). We demonstrate its superior performance in recovering the biologically meaningful expression, identifying subcellular states of the same cell types, improving differential expression and temporal dynamics analysis. ScIGANs is robust to the dataset that has a small number of genes with low expression and cell-to-cell variance. Additionally, scIGANs works equally well on datasets generated by different scRNA-seq protocols and is well scalable to data size.</p>
    <fig id="F1" orientation="portrait" position="float">
      <label>Figure 1.</label>
      <caption>
        <p>Overview of generative adversarial networks for single-cell RNA-seq imputation and systematic evaluations. (<bold>A</bold>) The high-level architecture of scIGANs. The expression profile of each cell is reshaped to a square image, which is fed to the GANs (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>). The trained generator is used to generate a set of realistic cells that are used to impute the raw scRNA-seq expression matrix (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1B</xref>). KNN, <italic>k</italic>-nearest neighbors. MSE, mean squared error. (<bold>B</bold>) A schematic view of the datasets and strategies used for benchmark comparison between scIGANs and other 11 imputation methods. Colored bars in the right panel indicate the corresponding analyses and evaluations present in the result sections and datasets defined in the left panel. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref>.</p>
      </caption>
      <graphic xlink:href="gkaa506fig1"/>
    </fig>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>The idea and design of scIGANs</title>
      <p>Generative adversarial networks (GANs), first introduced in 2014 (<xref rid="B14" ref-type="bibr">14</xref>), evoked much interest in the computer vision community and has become an active area of research with multiple variants developed (<xref rid="B15" ref-type="bibr">15–19</xref>). Inspired by its excellent performance in generating realistic images (<xref rid="B21" ref-type="bibr">21–25</xref>) and recent application to generating realistic scRNA-seq data (<xref rid="B26" ref-type="bibr">26</xref>), we propose scIGANs, the generative adversarial networks for scRNA-seq imputation (Figure <xref ref-type="fig" rid="F1">1A</xref>). The basic idea is that scIGANs can learn the non-linear gene–gene dependencies from complex, multi-cell type samples and train a generative model to generate realistic expression profiles of defined cell types (<xref rid="B26" ref-type="bibr">26</xref>). To train scIGANs, the real single-cell expression profiles are first reshaped to images and fed to GANs, wherein each cell corresponds to an image with the normalized gene expression representing the pixel (Figure <xref ref-type="fig" rid="F1">1A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>). The generator generates fake images by transforming a 100-dimensional latent variable into single-cell gene expression profiles (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>). The discriminator evaluates whether the images are authentic or generated. These two networks are trained concurrently whilst competing against one another to improve the performance of both (Figure <xref ref-type="fig" rid="F1">1A</xref>).</p>
      <p>Once trained, the generative model is used to generate scRNA-seq data of defined cell types. And then we propose to infer the true expression of dropouts from the generated realistic cells. The most important benefit of using generated cells instead of the real cells for scRNA-seq imputation is to avoid overfitting for the cell type of big population but insufficient power for rare cells. The generator can produce a set of cells of any number with the expression profiles faithfully characterizing the demand cell type; then the k-nearest neighbors (KNN) approach is used to impute the dropouts of the same cell type in the real scRNA-seq data (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1B</xref>). The scIGANs is implemented in Python and R and compiled as a command-line tool compatible with both CPU and GPU platform. The core model is built on the PyTorch framework and adopted to accommodate scRNA-seq data as input. It's publicly available at <ext-link ext-link-type="uri" xlink:href="https://github.com/xuyungang/scIGANs">https://github.com/xuyungang/scIGANs</ext-link>.</p>
    </sec>
    <sec id="SEC2-2">
      <title>The strategy for scIGANs training</title>
      <p>Training the GANs is a strategy to define a game between two competing networks. The generator network maps a source of noise to the input space. The discriminator network receives either a generated sample or a true data sample and must distinguish between the two. The generator is trained to fool the discriminator. Formally, the game between the generator <inline-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$G$\end{document}</tex-math></inline-formula> and discriminator <inline-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$D$\end{document}</tex-math></inline-formula> is the minimax objective <inline-formula><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$ \underset{G}{{\rm{min}}}\underset{D}{\max } \underset{x \sim {\mathbb{P}_r}}{\mathbb{E}} [ {\log ( {D( x )} )} ] - \underset{\tilde{x} \sim {\mathbb{P}_g}}{\mathbb{E}} [ {\log ( {1 - D( {\tilde{x}} )} )} ]$\end{document}</tex-math></inline-formula>; where <inline-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$D$\end{document}</tex-math></inline-formula> is the discriminator that can be any network, <inline-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\mathbb{P}_r}$\end{document}</tex-math></inline-formula> is the real data distribution and <inline-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\mathbb{P}_g}$\end{document}</tex-math></inline-formula> is the model distribution implicitly defined by <inline-formula><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\tilde{x} = {\rm{\ }}G( z ),{\rm{\ }}z \sim p( z )$\end{document}</tex-math></inline-formula>; <inline-formula><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$G$\end{document}</tex-math></inline-formula> is the generator which can be any network, <inline-formula><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$z$\end{document}</tex-math></inline-formula> can be sampled from any noise distribution <inline-formula><tex-math id="M10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$p$\end{document}</tex-math></inline-formula>, such as the uniform distribution or a spherical Gaussian distribution.</p>
      <p>It is difficult to train the original GANs model since minimizing the objective function corresponds to minimizing the Jensen-Shannon divergence between <inline-formula><tex-math id="M11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\mathbb{P}_r}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\mathbb{P}_g}$\end{document}</tex-math></inline-formula>, which is not continuous for the generator's parameters. Earth-Mover (Wasserstein-1) distance <inline-formula><tex-math id="M13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$W( {q,p} )$\end{document}</tex-math></inline-formula> is used to deal with such difficulty (<xref rid="B27" ref-type="bibr">27</xref>). Such a model is called Wasserstein GANs(WGANs) which the objective function is constructed as <inline-formula><tex-math id="M14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\underset{G}{{\rm{min}}} \underset{D \in \mathcal{D}} {\max } \underset{x \sim {\mathbb{P}_r}}{\mathbb{E}} [D(x)] - \underset{\tilde{x} \sim {\mathbb{P}_g}}{\mathbb{E}} [D(\tilde{x})]$\end{document}</tex-math></inline-formula>; where <inline-formula><tex-math id="M15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal{D}$\end{document}</tex-math></inline-formula> is the set of 1-Lipschitz function, the definition of other symbols are the same as the original GANs model. To enforce the Lipschitz constraint on the critic, one can clip the weights of the critic to lie within a compact space <inline-formula><tex-math id="M16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$[ { - c,c} ]$\end{document}</tex-math></inline-formula>. The set of functions satisfying this constraint is a subset of the <italic>k</italic>-Lipschitz functions for some <inline-formula><tex-math id="M17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$k$\end{document}</tex-math></inline-formula> which depends on <inline-formula><tex-math id="M18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$c$\end{document}</tex-math></inline-formula> and the critic architecture. Researchers introduced an alternative way to enforce the Lipschitz constraint, usually called improved WGANs(IWGANs), which is widely used in training GANs models (<xref rid="B19" ref-type="bibr">19</xref>). The objective is <inline-formula><tex-math id="M19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\underset{G}{{\rm{min}}}\underset{D \in \mathcal{D}} {\max } \underset{\tilde{x} \sim {\mathbb{P}_g}} {\mathbb{E}} [D(\tilde{x})] - \underset{x \sim {\mathbb{P}_r}} {\mathbb{E}} [D(x)] + \lambda \underset{\hat{x} \sim {\mathbb{P}_{\hat{x}}}} {\mathbb{E}} [{(\parallel {\nabla _{\hat{x}}}D(\hat{x}){\parallel _2} - 1)^2}]$\end{document}</tex-math></inline-formula>; where <inline-formula><tex-math id="M20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\hat{x}$\end{document}</tex-math></inline-formula> is sampled from the straight lines between pairs of points sampled from the real data distribution and the generator distribution. <inline-formula><tex-math id="M21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\lambda$\end{document}</tex-math></inline-formula> is a predefined parameter. BEGAN (<xref rid="B28" ref-type="bibr">28</xref>) is an equilibrium enforcing method paired with a loss derived from the Wasserstein distance (<xref rid="B19" ref-type="bibr">19</xref>) for training auto-encoder based Generative Adversarial networks. The BEGAN objective is:<disp-formula><tex-math id="M22">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}\left\{ {\begin{array}{@{}*{1}{l}@{}} {{L_D} = \ L(x) - {k_{t.}}L(G({z_D}))\quad \ {\rm{for}}\ {\theta _D}}\\ {{L_G} = \ L(G({z_D}))\quad \ {\rm{for}}\ {\theta _G}}\\ {{k_{t + 1}} = {k_t}\ + {\lambda _k}(\gamma L(x) - L(G({z_D})))\quad {\rm{for\ each\ training\ step}}\ t} \end{array}} \right.\end{equation*}$$\end{document}</tex-math></disp-formula>where<disp-formula><tex-math id="M23">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}L \left( \nu \right) = {\left| {\nu - D\left( \nu \right)} \right|^\eta }\ \ {\rm{where}}\ \left\{ {\begin{array}{@{}*{1}{c}@{}} {D:{\mathbb{R}^{{N_x}}} \mapsto {\mathbb{R}^{{N_x}}}\ {\rm{is\ the\ autoencoder\ function}}.{\rm{\ }}}\\ {\eta \in \left\{ {1,2} \right\}\ {\rm{is\ the\ target\ norm}}.{\rm{\ }}}\\ {\nu \in {\mathbb{R}^{{N_x}}}\ {\rm{is\ a\ sample\ of\ dimension\ }}{N_x}\ } \end{array}} \right.\end{equation*}$$\end{document}</tex-math></disp-formula></p>
      <p>BEGAN uses Proportional Control Theory to maintain the balance between the generator and discriminator losses which is relaxed with the introduction of a new hyper-parameter <inline-formula><tex-math id="M24">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\gamma \in [ {0,1} ]$\end{document}</tex-math></inline-formula> defined as <inline-formula><tex-math id="M25">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\gamma \ = \ \mathbb{E}[ {L( {G( z )} )} ]/\mathbb{E}[ {L( x )} ]$\end{document}</tex-math></inline-formula>. This is implemented using a variable<inline-formula><tex-math id="M26">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\ {k_t} \in [ {0,1} ]$\end{document}</tex-math></inline-formula> to control how much emphasis is put on <inline-formula><tex-math id="M27">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L( {G( {{z_D}} )} )$\end{document}</tex-math></inline-formula> during gradient descent. We initialize <inline-formula><tex-math id="M28">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\ {k_0} = \ 0$\end{document}</tex-math></inline-formula>. <inline-formula><tex-math id="M29">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\lambda _k}$\end{document}</tex-math></inline-formula> is the proportional gain for<inline-formula><tex-math id="M30">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\ k$\end{document}</tex-math></inline-formula>; in machine learning terms, it is the learning rate for <inline-formula><tex-math id="M31">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$k$\end{document}</tex-math></inline-formula>. We used 0.001 as default for scIGANs and all experiments in this manuscript. In essence, this can be thought of as a form of closed-loop feedback control in which<inline-formula><tex-math id="M32">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\ {k_t}$\end{document}</tex-math></inline-formula> is adjusted at each step to maintain equation <inline-formula><tex-math id="M33">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\gamma \ = \ \mathbb{E}[ {L( {G( z )} )} ]/\mathbb{E}[ {L( x )} ]$\end{document}</tex-math></inline-formula>. In this work, we use this method to train our scIGANs.</p>
    </sec>
    <sec id="SEC2-3">
      <title>The procedures for scIGANs training and dropout imputation</title>
      <p>To be noted that scIGANs is designed scalable to the datasets with any number of cell types and genes, though we here assume an example dataset with 9 cell types and 32*32 = 1024 genes to elucidate how it works. The generator network of scIGANs is defined as <inline-formula><tex-math id="M34">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$G( {z,L{a_z};\theta } )$\end{document}</tex-math></inline-formula>. The inputs of the generator are: <inline-formula><tex-math id="M35">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$z \sim {\rm{norm}}( {0,1} )$\end{document}</tex-math></inline-formula>, and label <inline-formula><tex-math id="M36">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_z} \sim U( {1,9} )$\end{document}</tex-math></inline-formula>. Denote <inline-formula><tex-math id="M37">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\theta$\end{document}</tex-math></inline-formula> as the parameters need to be learned. The generator is defined as following the steps (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>):</p>
      <list list-type="order">
        <list-item>
          <p>Do transposed convolution on <inline-formula><tex-math id="M38">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$z$\end{document}</tex-math></inline-formula> by <italic>GConv1_1</italic> and get the <italic>tensor</italic><inline-formula><tex-math id="M39">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${z_n}$\end{document}</tex-math></inline-formula> of dimension (32,32,32).</p>
        </list-item>
        <list-item>
          <p>Do transposed convolution on <inline-formula><tex-math id="M40">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_z}$\end{document}</tex-math></inline-formula> by <italic>GConv1_2</italic> and get the <italic>tensor</italic><inline-formula><tex-math id="M41">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_n}$\end{document}</tex-math></inline-formula> of dimension (8,32,32).</p>
        </list-item>
        <list-item>
          <p>Concatenate <inline-formula><tex-math id="M42">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${z_n}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M43">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_n}$\end{document}</tex-math></inline-formula> to get <italic>GConcat1</italic> of dimension (40,32,32).</p>
        </list-item>
        <list-item>
          <p>Do convolution on <italic>GConcat1</italic> by <italic>GConv2_1</italic> and <italic>GConv2_2</italic> to get the tensor of dimension (1,32,32), which is the output of the Generator.</p>
        </list-item>
      </list>
      <p>The discriminator network is defined as <inline-formula><tex-math id="M44">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$D( {x,L{a_x};w} )$\end{document}</tex-math></inline-formula>. The inputs of discriminator are samples of real data <inline-formula><tex-math id="M45">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$x \sim {\mathbb{P}_r}( {{\rm{or\ }}\tilde{x} \sim {\mathbb{P}_g}} )$\end{document}</tex-math></inline-formula> representing the reshaped expression profile of an individual cell, and label of <inline-formula><tex-math id="M46">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$x( {{\rm{or\ }}\tilde{x}} )$\end{document}</tex-math></inline-formula> denoted by <inline-formula><tex-math id="M47">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_x}$\end{document}</tex-math></inline-formula> representing the cell type or subpopulation. Denote <inline-formula><tex-math id="M48">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$w$\end{document}</tex-math></inline-formula> as the parameters need to be learned. The discriminator is defined as following the steps (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>):</p>
      <list list-type="order">
        <list-item>
          <p>Do convolution on <inline-formula><tex-math id="M49">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$x{\rm{\ or\ }}\tilde{x}$\end{document}</tex-math></inline-formula> by <italic>DConv1_1</italic> and get the <italic>tensor</italic> of dimension (16,32,32).</p>
        </list-item>
        <list-item>
          <p>Do convolution on <inline-formula><tex-math id="M50">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$L{a_x}$\end{document}</tex-math></inline-formula> by <italic>DConv1_2</italic> and get the tensor of dimension (16,32,32).</p>
        </list-item>
        <list-item>
          <p>Concatenate results of steps (1) and (2) as <italic>Dconcat1</italic>, which is a tensor of the dimension (32,32,32).</p>
        </list-item>
        <list-item>
          <p>Convert the <italic>Dconcat1</italic> to a vector of length 16 using a fully connected network (FCN).</p>
        </list-item>
        <list-item>
          <p>Do convolution on the result of step (4) by <italic>GConv2_1</italic> and <italic>GConv2_2</italic> to get the tensor of dimension (1,32,32), which is the output of the Discriminator.</p>
        </list-item>
      </list>
      <p>With a well-trained GANs model, for a given cell <inline-formula><tex-math id="M51">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${c_i}$\end{document}</tex-math></inline-formula> which belongs to the subpopulation <inline-formula><tex-math id="M52">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${K_c}_i$\end{document}</tex-math></inline-formula>, we generate a candidate set <inline-formula><tex-math id="M53">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${A^{{K_c}_i}}$\end{document}</tex-math></inline-formula> with <inline-formula><tex-math id="M54">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${n_{can}}$\end{document}</tex-math></inline-formula> expression profiles. Denote <inline-formula><tex-math id="M55">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${c^{\prime}_i}_{knn}$\end{document}</tex-math></inline-formula> as the <inline-formula><tex-math id="M56">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$k$\end{document}</tex-math></inline-formula> nearest neighbors using Euclidian distance in the set <inline-formula><tex-math id="M57">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${A^{{K_c}_i}}$\end{document}</tex-math></inline-formula>. We then use the following equation to impute <inline-formula><tex-math id="M58">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$j$\end{document}</tex-math></inline-formula>th gene in the cell <inline-formula><tex-math id="M59">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${c_i}$\end{document}</tex-math></inline-formula> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1B</xref>):<inline-formula><tex-math id="M60">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\ \ {\hat{c}_{i,j}} = \{ _{c _{iknn, j}^{'},\ else}^{c_{i, j},\, if\, c_{i, j} \gt 0}$\end{document}</tex-math></inline-formula>.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Data processing and normalization</title>
      <p>The data of a scRNA-seq study are usually organized as a read count matrix with <inline-formula><tex-math id="M61">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$N$\end{document}</tex-math></inline-formula> rows representing genes and <inline-formula><tex-math id="M62">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$M$\end{document}</tex-math></inline-formula> columns representing cells, which is the input of scIGANs. Since scIGANs is trained similarly to the training for image processing, we need to transfer the expression profile of each cell to a grayscale image (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>). To this end, scIGANs firstly normalizes the raw count matrix by the maximum read count of each sample (cell) so that all genes of each sample will have the expression values in a [0,1] range. scIGANs then reshapes the expression profile of each cell to a square image in a column-wise manner, with the normalized gene expression values representing the pixels of the image. The image size will be <inline-formula><tex-math id="M63">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$n \times n$\end{document}</tex-math></inline-formula>, where <inline-formula><tex-math id="M64">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$n$\end{document}</tex-math></inline-formula> is the minimum integer so that <inline-formula><tex-math id="M65">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$n \times n \ge {\rm{\ N}}$\end{document}</tex-math></inline-formula>. If the gene number is less than <inline-formula><tex-math id="M66">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$n \times n$\end{document}</tex-math></inline-formula>, extra zeroes will be filled. Then, a scRNA-seq matrix with <inline-formula><tex-math id="M67">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$M$\end{document}</tex-math></inline-formula> cells will be represented as <inline-formula><tex-math id="M68">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$M$\end{document}</tex-math></inline-formula> grayscale images and used to train a conditional GANs with the cell labels.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Simulated scRNA-seq datasets</title>
      <p>We first simulated a simple scRNA-seq data with 150 cells and 20180 genes using the default CIDR simulation function <italic>scSimulator(N = 3, k = 50)</italic> (<xref rid="B29" ref-type="bibr">29</xref>). Three cell types are generated with 50 cells for each [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: CIDR_sim]. The raw data has a dropout rate of 52.8%. Figure <xref ref-type="fig" rid="F2">2A</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2A, and Table S2</xref> are derived from this data. We then tested the performance of different imputation methods on different dropout rates simulated by Splatter (<xref rid="B30" ref-type="bibr">30</xref>). We took the same simulation strategy used by SCRABBLE (<xref rid="B9" ref-type="bibr">9</xref>) with the same parameters for the Splatter simulator. Specifically, three scRNA-seq datasets with three different dropout rates (71%, 83% and 87%) were simulated; each dataset has 800 genes and 1000 cells grouped into three clusters (cell types) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Splatter_sim]. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2B–E and Table S3</xref> were derived from these datasets. To test the robustness of imputation methods, we repeated 100 times of the above Splatter simulations and generated 100 datasets for each of the above three different dropout rates [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Splatter_sim100]. Figure <xref ref-type="fig" rid="F2">2B</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3A–F, and Table S4</xref> (EXCEL) were derived from these datasets.</p>
      <fig id="F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>ScIGANs recovers single-cell gene expression from dropouts without extra noise. (<bold>A</bold>) The UMAP plots of the CIDR simulated scRNA-seq data for Full, Dropout, and imputed matrix by 12 methods. Multiple clustering measurements are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2A and Table S2</xref>. (<bold>B</bold>) The adjusted rand index (ARI), a representative clustering measurement to indicate performance and robustness of all methods on the Splatter simulated data with three different dropout rates (71%, 83%, and 87%) and 100 replicates for each. Full list of clustering measurements provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref>. (<bold>C</bold>) The selected UMAP plots of real scRNA-seq data for the human brain. (<bold>D</bold>) The selected clustering measurements for the scRNA-seq data of the human brain. ACC, accuracy; AUC, area under the curve of ROC (receiver operating characteristics); <italic>F</italic> score, the harmonic mean of precision and recall; NMI, normalized mutual information. The full list of all considered clustering measurements is provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S5</xref>. (<bold>E</bold>) The evaluation of robustness in avoiding extra noise using scRNA-seq data of spike-in RNAs. All UMAP plots are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3H</xref>. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S2 and S3</xref>.</p>
        </caption>
        <graphic xlink:href="gkaa506fig2"/>
      </fig>
    </sec>
    <sec id="SEC2-6">
      <title>Real scRNA-seq datasets</title>
      <sec id="SEC2-6-1">
        <title>Human brain scRNA-seq data</title>
        <p>We used scRNA-seq data of 466 cells capturing the cellular complexity of the adult and fetal human brain at a whole transcriptome level [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Human_brain] (<xref rid="B31" ref-type="bibr">31</xref>). Tag tables were downloaded from the data repository NCBI Gene Expression Omnibus (GEO access number: GSE67835) and combined into one table with columns representing cells and rows representing genes. We excluded the uncertain hybrid cells and remained 420 cells in eight cell types with the expression of 22 085 genes. This dataset was used to generate Figure <xref ref-type="fig" rid="F2">2C</xref>-<xref ref-type="fig" rid="F2">D</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3G, and Table S5</xref>.</p>
      </sec>
      <sec id="SEC2-6-2">
        <title>ERCC spike-in RNAs scRNA-seq data</title>
        <p>In a scRNA-seq dataset for mESCs (<xref rid="B32" ref-type="bibr">32</xref>) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: ERCC], ERCC spike-in RNAs were added to each cell and sequenced. ERCC spike-in RNAs consist of 92 RNA transcripts in the length of 250–2000 nt, which are widely used in scRNA-seq experiments to remove the confounding noises from biological variability. Since spike-in RNAs are added to samples with the identical amount to capture the technical noise, the readout for the spike-in RNAs should be free of cell-to-cell variability and the detected variance of expression, if exists, should only come from technical confounders other than biological contexts (e.g. cell types). Therefore, the expression profiles of spike-in RNAs that were added to individual cells should not be able to cluster these cells into different subgroups regarding cell types or other biological states. Therefore, we used the ERCC spike-in read counts from the real scRNA-seq data for mESCs to evaluate the imputation methods on denoizing the technical variation without introducing extra noise. This data was used to generate Figure <xref ref-type="fig" rid="F2">2E</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3H-I, and Table S6</xref>.</p>
      </sec>
      <sec id="SEC2-6-3">
        <title>Cell-cycle phase scRNA-seq data</title>
        <p>To evaluate the performance of different imputation methods on identifying different cellular states of the same cell type, we analyzed a single-cell RNA-seq data from mESCs (<xref rid="B32" ref-type="bibr">32</xref>) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Cell_cycle_phase]. A set of 96 asynchronously dividing cells for each cell-cycle phase of G1, S and G2M was captured using the Fluidigm C1 system, and sequencing libraries were prepared and processed. In this dataset, 288 mESCs were profiled and characterized by 38293 transcripts with a dropout rate of 74.4%. This dataset was used to generate Figure <xref ref-type="fig" rid="F3">3A</xref>, B and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4, and Table S7</xref>. Specifically, the cell states of individual cells in Figure <xref ref-type="fig" rid="F3">3B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4B</xref> were inferred by R package Seurat (v3.1) based on a collection of predefined cell cycle marker genes (<xref rid="B33" ref-type="bibr">33</xref>,<xref rid="B34" ref-type="bibr">34</xref>).</p>
        <fig id="F3" orientation="portrait" position="float">
          <label>Figure 3.</label>
          <caption>
            <p>ScIGANs enables the identification of cell-cycle states and dynamics. (<bold>A</bold>) The UMAP plots of the real scRNA-seq data for cell-cycle states of homogeneous mouse ESCs. The full list of all clustering metrics is provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4A and Table S7</xref>. (<bold>B</bold>) Cells are projected to the cell-cycle phase spaces based on a collection of cell-cycle marker genes. The plots for all other methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4B</xref>. (<bold>C</bold>) Cell cycle dynamics are shown as the hierarchical clustering of 44 cell-cycle-regulated genes across 6.8k mouse ESCs. Full dynamic cell-cycle profiles from the scRNA-seq data before and after imputation by different methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4C–N</xref>. The barplots show the quantitative concordance between the assigned cell-cycle phases by hierarchical clustering and the true phases that these genes serve as the markers. F score, the harmonic mean of precision and recall; AUC, area under the curve of ROC (receiver operating characteristics); ACC, accuracy. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4</xref>.</p>
          </caption>
          <graphic xlink:href="gkaa506fig3"/>
        </fig>
      </sec>
      <sec id="SEC2-6-4">
        <title>Mouse ESC scRNA-seq dataset for cell-cycle dynamics</title>
        <p>Mouse embryonic stem cells (mESC) were profiled using the droplet-microfluidic scRNA-seq approach with 1 biological replicate (933 cells) and two technical replicates (2509 and 3443 cells for each) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Mouse_ESC]. The processed count matrix was downloaded from Gene Expression Omnibus (GEO) with the access ID GSE65525. All other 11 imputation methods and scIGANs were used to impute the raw matrix with an exception that SCRABBLE and DrImpute failed to impute this data because take longer than a month to finish the imputation. This data was used to generate Figure <xref ref-type="fig" rid="F3">3C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4C–N</xref>.</p>
        <p>Cell cycle dynamics assessment was performed according to Figure <xref ref-type="fig" rid="F6">6E</xref> and <xref ref-type="fig" rid="F6">F</xref> of reference (<xref rid="B35" ref-type="bibr">35</xref>). Briefly, the Pearson's correlation was applied among a list of previously categorized 44 cell-cycle genes based on their expression across these ∼6.8k cells. Genes were ordered by hierarchical clustering on the correlation matrix and their previously categorized cell-cycle phases were indicated as linked dots representing cell-cycle oscillations (Figure <xref ref-type="fig" rid="F3">3C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4C–N</xref>). Clustering measurements were also applied to the gene clusters against their pre-assigned cell-cycle phased (barplots in Figure <xref ref-type="fig" rid="F3">3C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4C–N</xref>), which represent the performances of imputation methods by clustering the cell-cycle genes across cells.</p>
      </sec>
      <sec id="SEC2-6-5">
        <title>Human ESC scRNA-seq dataset for differential expression analysis</title>
        <p>To compare the performance of different imputation methods on detecting differentially expressed genes (DEGs), we utilized a dataset with both bulk and single-cell RNA-seq experiments on human embryonic stem cells (ESC) and the differentiated definitive endoderm cells (DEC) (<xref rid="B36" ref-type="bibr">36</xref>) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Human_ESCs]. This dataset includes six samples of bulk RNA-seq (four for H1 ESC and two for DEC) and scRNA-seq of 350 single cells (212 cells for H1 ESC and 138 cells for DEC). The percentage of zero expression is 14.8% for the bulk dataset and 49.1% for the single-cell dataset. This dataset was used to generate Figure <xref ref-type="fig" rid="F4">4</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S5–S7</xref>.</p>
        <fig id="F4" orientation="portrait" position="float">
          <label>Figure 4.</label>
          <caption>
            <p>ScIGANs increases the correspondence between single-cell and bulk differential expression analysis. (<bold>A</bold>) The correspondence of differentially expressed genes (DEGs) between bulk and single-cell RNA-seq with different imputation approaches. The yellow and green bars (connoted dots) highlight the poorest agreement of AutoImpute and scGAIN with all other methods. (<bold>B</bold>) The barplots show the performances of DEG detections from raw and imputed scRNA-seq datasets based on the gold standard defined by the bulk RNA-seq dataset. <italic>F</italic> score, the harmonic mean of precision and recall; AUC, area under the curve of ROC (receiver operating characteristics); ACC, accuracy; Comb., the combined overall performance as the average of the AUC, ACC and <italic>F</italic> score. (<bold>C</bold>) The correlations between log fold-changes of differentially expressed genes from bulk and single-cell RNA-seq datasets. Detailed legends and the plots of results from all other imputation methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>. (<bold>D</bold>) The expression for one of five selected signature genes of H1 and DEC cells, respectively. All plots of other genes with different imputation methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>. (<bold>E</bold>, <bold>F</bold>) The UMAP plots of the single cells overlaid by the expression of SOX2 and CECR4, which is the marker gene of H1 and DEC cells, respectively. Raw (E) and scIGANs imputed (F) data are shown and data from all other methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S5–S7</xref>.</p>
          </caption>
          <graphic xlink:href="gkaa506fig4"/>
        </fig>
        <p>We used scIGANs and 11 other imputation methods to impute the gene expression for single cells and then used DESeq2 (<xref rid="B37" ref-type="bibr">37</xref>) to perform differential expression analysis on the raw and 11 imputed data, respectively. DEGs are genes with the absolute log fold changes (H1/DEC) ≥ 1.5, adjust-<italic>P</italic> ≤ 0.05, and base mean ≥ 10. Taking the DEGs from bulk RNA-seq data as the gold standard, the overall performances of DEG detection from imputed scRNA-seq datasets were defined as the correspondences of DEGs between bulk RNA-seq and scRNA-seq (Figure <xref ref-type="fig" rid="F4">4A</xref>). To more fairly quantitate the performance of DEG detection using scRNA-seq data, we took the DEG detection as the process of predicting a gene is DEG or not, based on the gold standard from bulk RNA-seq. Then we calculated the accuracy (ACC), <italic>F</italic> score (also <italic>F</italic>1-score or F-measure), and the area under the receiver operating characteristic curve (AUC) for each DEG detection from the imputed scRNA-seq datasets. The overall performance was defined as the average of the above three measurements (Figure <xref ref-type="fig" rid="F4">4B</xref>). Additionally, a set of top 1000 DEGs (500 best up-regulated and 500 best down-regulated genes based on the adjust-<italic>P</italic> values) from bulk RNA-seq data were used to calculate the correlations between log fold changes of DEGs from bulk and single-cell RNA-seq datasets. between scRNA-seq and bulk RNA-seq data (Figure <xref ref-type="fig" rid="F4">4C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>). To further illustrate the improvement of imputation on DEG detection, five signature genes highlighted in Figure <xref ref-type="fig" rid="F1">1C</xref> of the source paper (<xref rid="B37" ref-type="bibr">37</xref>) for H1 and DEC, respectively, were plotted out (Figure <xref ref-type="fig" rid="F4">4D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>). The expression of two marker genes (SOX2 for H1 cell and CXCR4 for DEC cell) were overlaid to the UMAP space of single cells to show the expression signature of these two cell types (Figure <xref ref-type="fig" rid="F4">4E</xref>, F and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>).</p>
      </sec>
      <sec id="SEC2-6-6">
        <title>Time-course scRNA-seq data for cellular trajectory analysis</title>
        <p>We utilize a time-course scRNA-seq data derived from the differentiation from H1 ESC to definitive endoderm cells (DEC) (<xref rid="B36" ref-type="bibr">36</xref>) [dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>: Time_cousre]. A total of 758 cells were profiled at 0 (cell number <italic>n</italic> = 92), 12 (<italic>n</italic> = 102), 24 (<italic>n</italic> = 66), 36 (<italic>n</italic> = 172), 72 (<italic>n</italic> = 138) and 96 (<italic>n</italic> = 188) hours after inducing the differentiation from H1 ESCs to DECs (Figure <xref ref-type="fig" rid="F5">5A</xref>). We apply scIGANs and all other 11 imputation methods to the raw scRNA-seq data with known time points and then reconstruct the trajectories using Monocle3 (<xref rid="B38" ref-type="bibr">38</xref>). This dataset was used to generate Figure <xref ref-type="fig" rid="F5">5</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>.</p>
        <fig id="F5" orientation="portrait" position="float">
          <label>Figure 5.</label>
          <caption>
            <p>scIGANs improves time-course scRNA-seq data analysis and reconstructing differentiation trajectory. (<bold>A</bold>) The time points of scRNA-seq sampling along with the differentiation from the pluripotent state (H1 cells) through mesendoderm to definitive endoderm cells (DEC). (<bold>B</bold>, <bold>C</bold>) The trajectories reconstructed by monocle3 from the raw (C) and scIGANs imputed (D) scRNA-seq data. (<bold>D</bold>, <bold>E</bold>) The expression dynamics of two pluripotent (left) and DEC (right) signature genes are shown in the order of the pseudotime. The plots of all other imputation methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>.</p>
          </caption>
          <graphic xlink:href="gkaa506fig5"/>
        </fig>
      </sec>
    </sec>
    <sec id="SEC2-7">
      <title>Subsampled scRNA-seq datasets</title>
      <p>We subsampled the scRNA-seq data derived from human embryonic stem cells (ESC) and the differentiated definitive endoderm cells (DEC) (<xref rid="B36" ref-type="bibr">36</xref>). This dataset has expression profiles of 350 single cells (212 for H1 ESC and 138 for DEC) across 19 097 genes. Three different sampling strategies were used to generate different sub-datasets for robustness tests. These datasets were used to generate Figure <xref ref-type="fig" rid="F6">6</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>.</p>
      <list list-type="order">
        <list-item>
          <p>datasets with a subset of genes that have top- and lower-mean of expressions across all 350 cells, denoted as mean.top and mean.low (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). Specifically, the expression matrix (genes in rows and cells in columns) was sorted by the row-wise means (descending) and the first and last 5000 genes were selected, representing two subsets with high and low expressions, respectively. Then 1024 (32*32) genes were randomly picked from these 5000 genes to generate the two test datasets, mean.top and mean.low with the zero-rate of 6.34% and 97.25%, respectively.</p>
        </list-item>
        <list-item>
          <p>datasets with a subset of genes that have top- and lower-standard deviation (sd) of expressions across all 350 cells, denoted as sd.top and sd.low (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). Specifically, the expression matrix (genes in rows and cells in columns) was sorted by the row-wise standard deviation (descending) and the first and last 5000 genes were selected, representing two subsets with high and low expression standard deviations, respectively. Then 1024 (32*32) genes were randomly picked from these 5000 genes to generate the two test datasets, sd.top and sd.low with the zero-rate of 8.72% and 92.42%, respectively.</p>
        </list-item>
        <list-item>
          <p>dataset with a subset of 1024 genes randomly selected from all 19097 genes, denoted as global.random (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). It has the zero-rate of 49.51%.</p>
        </list-item>
      </list>
      <fig id="F6" orientation="portrait" position="float">
        <label>Figure 6.</label>
        <caption>
          <p>scIGANs is robust to a small set of genes with very low expression or cross-cell variance. (<bold>A</bold>, <bold>B</bold>) The UMAP visualizations of H1 and DEC cells using only 1024 genes from raw (A) or scIGANs imputed (B) expression matrix based on three different sampling strategies. The sampling strategies are described in Methods. (<bold>C</bold>, <bold>D</bold>) The boxplots show the mean (C) or standard deviation (sd, D) of the 1024 sampled genes before and after scIGANs imputation. The same series of plots for all other imputation methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>.</p>
        </caption>
        <graphic xlink:href="gkaa506fig6"/>
      </fig>
    </sec>
    <sec id="SEC2-8">
      <title>Cross-platform scRNA-seq datasets</title>
      <p>To evaluate how scIGANs works equally well for different scRNA-seq protocols/platforms, we collected a cross-platform benchmark dataset derived from 3 human lung adenocarcinoma cell lines, including H1975, H2228 and HCC827 (<xref rid="B39" ref-type="bibr">39</xref>). The three cell lines were mixed equally and processed by 10X Genomics/Chromium, CEL-seq2/Fluidigm, and Drop-seq/Droplet, by which the datasets were generated and referred to as sc_10X, sc_CEL-seq2 and sc_Drop-seq, respectively (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). We clustered the cells and calculate the clustering metrics based on the raw matrix and matrix imputed by different methods (Figure <xref ref-type="fig" rid="F7">7A</xref>-<xref ref-type="fig" rid="F7">B</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S10–S11, and Table S8</xref>). We also calculated the Spearman correlation coefficients between the expression profiles of the same cell types from different sequencing methods (Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12A</xref>). Taking H1975 cell between sc_10X and sc_CEL-seq2 as an example, the Spearman correlation coefficients were calculated for each cell-cell pair, of which one H1975 cell from the sc_10X dataset and the other H1975 cell from the sc_CEL-seq2 dataset. Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12A</xref> are plotted using a random subsample of 500 cell-cell pairs for each comparison.</p>
      <fig id="F7" orientation="portrait" position="float">
        <label>Figure 7.</label>
        <caption>
          <p>scIGANs is scalable to scRNA-seq methods and data sizes. (<bold>A</bold>) The UMAP visualizations of the same cell populations sequenced by three different scRNA-seq methods (protocols/platforms). 10X, 10X Genomics/Chromium; CEL-seq2, CEL-seq2/Fluidigm; Drop-seq, Drop-seq/Droplet. (<bold>B</bold>) Cross-platform performances of different methods represented as the F scores for cell type clusters against the pre-defined cell types. The same series of plots and source data for all other clustering metrics are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S11 and Table S8</xref>. (<bold>C</bold>) Cell-cell correspondence of the expression profiles between 10X and CEL-seq2, shown as the Spearman correlation coefficients from the expression profiles of the same cell types before and after imputation by different imputation methods. Correlations between other sequencing methods are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12A</xref>. (<bold>D</bold>) The running time (in hour) of the imputation methods on datasets with different sizes (cell numbers). The failed jobs in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S9</xref> are assigned auxiliary values of 49 hours for plotting purposes. Also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S10–S12</xref>.</p>
        </caption>
        <graphic xlink:href="gkaa506fig7"/>
      </fig>
    </sec>
    <sec id="SEC2-9">
      <title>scRNA-seq datasets with different cell numbers</title>
      <p>To test the scalability of scIGANs and 11 other imputation methods to data sizes, we created a set of scRNA-seq datasets by randomly sampling 1000 (pmbc_1k), 5000 (pmbc_5k), 25000 (pmbc_25k), 50 000 (pmbc_50k) and 100 000 (pmbc_100k) cells from the PMBC 10k dataset (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>, <ext-link ext-link-type="uri" xlink:href="https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/pbmc_10k_v3">https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/pbmc_10k_v3</ext-link>). These datasets were used to test the running time and memory usage of each method on different data sizes (cell numbers). All methods were tested on a single node of the TACC Lonestar 5 (LS5) system (<ext-link ext-link-type="uri" xlink:href="https://portal.tacc.utexas.edu/user-guides/lonestar5">https://portal.tacc.utexas.edu/user-guides/lonestar5</ext-link>). Specifically, we assessed the scalability to the data sizes of each method by computational time (in hours) and memory usage (in gigabytes, GB) using the values ‘Elapsed’ and ‘AveRSS’ from the job information returned from Slurm command <italic>sacct</italic>. To be noted that, some methods were failed on some datasets because they need either more than 48 h (Failed_T) or more than 64 GB of the memory (Failed_M), which exceeds the limit of the TACC Lonestar system (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S9</xref>). Correspondingly, these failed jobs were assigned 49 hours for running time and 65GB for memory usage, respectively, so that all methods can be plotted at all data points in Figure <xref ref-type="fig" rid="F7">7D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12B</xref>. scIGANs was also tested on an in-house GPU system configured with one NVIDIA Tesla V100 32GB Graphic Card, from which the measurements are labeled as scIGANs_GPU in Figure <xref ref-type="fig" rid="F7">7D</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12B and Table S9</xref>.</p>
    </sec>
    <sec id="SEC2-10">
      <title>Implementation</title>
      <p>ScIGANs is implemented in Python (&gt;2.7) and R (&gt;3.6) with a Linux/Unix wrapper script. An expression matrix of the single cells is the only required input file. Optionally, a file with the cell labels (cell type or subpopulation information) can be provided to direct scIGANs for cell type-specific imputation. If there are no prior cell labels provided, scIGANs will pre-cluster the cells using a spectral clustering method. ScIGANs can run on either CPUs or GPUs. The output is the imputed expression matrix of the same dimensions, of which only the true zero values will be imputed without change other expression values.</p>
    </sec>
    <sec id="SEC2-11">
      <title>Quantitative measurements of single-cell clusters</title>
      <p>We used 11 numeric metrics to quantitate the clustering of single cells. RI, the Rand index, is a measure of the similarity between two data clusters. ARI, the adjusted Rand index, is adjusted for the chance grouping of elements. MI, mutual information, is used in determining the similarity of two different clusters of a dataset. As such, it provides some advantages over the traditional Rand index. AMI, adjusted mutual information, is a variation of mutual information used for comparing clusters. VI, the variation of information, is a measure of the distance between two clusters and a simple linear expression involving the mutual information. NVI the normalized VI. ID and NID refer to the information distance and normalized information distance. All these metrics are computed using clustComp() from R package ‘aricode’ (<ext-link ext-link-type="uri" xlink:href="https://cran.r-project.org/web/packages/aricode/">https://cran.r-project.org/web/packages/aricode/</ext-link>). <italic>F</italic> score (also <italic>F</italic>1-score or <italic>F</italic>-measure) is the harmonic mean of precision and recall. AUC, the area under the receiver operating characteristic (ROC) curve, is the probability that a classifier will rank a randomly chosen positive instance higher than a randomly chosen negative one. ACC, accuracy. The above three classification metrics are defined by comparing the independent clustering of cells to the true cell labels. Clustering was done using <italic>prediction()</italic> from the R package SC3 (<xref rid="B40" ref-type="bibr">40</xref>). The in-house R scripts for these metrics are provided in the codes for reproducibility (<ext-link ext-link-type="uri" xlink:href="https://github.com/xuyungang/scIGANs_Reproducibility">https://github.com/xuyungang/scIGANs_Reproducibility</ext-link>).</p>
    </sec>
    <sec id="SEC2-12">
      <title>Statistical information</title>
      <p>All statistical tests are implemented by R (version 3.6.1). Specifically, the Pearson correlation tests (Figure <xref ref-type="fig" rid="F4">4C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>) were done by the R function <italic>cor.test()</italic> with default parameters; the student's t-tests (Figure <xref ref-type="fig" rid="F6">6C</xref>, <xref ref-type="fig" rid="F6">D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>) were done by the R function <italic>t.test()</italic> with default parameters; the differentially expressed genes (DEGs) were identified by DESeq2 with the <italic>P</italic>-adjust ≤ 0.05, log<sub>2</sub>FoldChange ≥ 1.5, and baseMean ≥ 10 (Figure <xref ref-type="fig" rid="F4">4A</xref>–<xref ref-type="fig" rid="F4">C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>); the Spearman correlation were done by the R function <italic>cor()</italic> with default parameters (Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12A</xref>).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS</title>
    <sec id="SEC3-1">
      <title>ScIGANs recovers single-cell gene expression from dropouts without inflicting extra noise</title>
      <p>Recovery of the biologically meaningful expression from dropout events is the major goal of scRNA-seq imputation to benefit the downstream analyses and biological discoveries. We use both simulated and real scRNA-seq datasets to illustrate the performance and robustness of scIGANs in rescuing dropouts and avoiding additional noise from imputation (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>).</p>
      <p>First, simulated datasets are used to evaluate the imputation performance since they have known ‘truth’ and can thus benchmark different methods. In a single dataset with a 52.8% zero rate that was simulated according to an independent single-cell clustering method CIDR (<xref rid="B29" ref-type="bibr">29</xref>), scIGANs performs superiorly over all other 11 methods in recovering the gene expression and cell population clusters (Figure <xref ref-type="fig" rid="F2">2A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2A; Table S2</xref>). Although GANs is a supervised model that requires pre-defined cell labels, we implemented scIGANs to accommodate scRNA-seq data without prior labels, instead to learn the labels by applying spectral clustering (<xref rid="B41" ref-type="bibr">41</xref>) on the input data. Trained by the same simulated data without labels (scIGANs w/o), scIGANs slightly reduces the performance but still holds the superiority over the other 11 compared methods, except for scImpute (<xref rid="B2" ref-type="bibr">2</xref>) (Figure <xref ref-type="fig" rid="F2">2A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2A; Table S2</xref>).</p>
      <p>Second, we test the performance of scIGANs and other methods on datasets with different dropout rates simulated by Splatter (<xref rid="B30" ref-type="bibr">30</xref>). ScIGANs ranks in the top in rescuing the population clusters (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2B-D</xref>) and has the highest resistance to dropout rate increase (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2E; Table S3</xref>). Moreover, to evaluate the robustness of imputation methods, we use the same simulation strategy described by SCRABBLE (<xref rid="B42" ref-type="bibr">42</xref>) to repeat the above Splatter simulation 100 times for each dropout rate. We evaluate the performance by multiple quantitative clustering metrics (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref>). The second-ranked SCRABBLE performs superiorly over all other 10 methods; however, it has worse concordance among simulated replicates with a higher dropout rate (Figure <xref ref-type="fig" rid="F2">2B</xref>). In contrast, scIGANs ranks at the top among all methods and has the most robust performance among the replicates with increasing dropout rates (Figure <xref ref-type="fig" rid="F2">2B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3A–F; Table S4</xref>).</p>
      <p>Third, we evaluate the imputation methods using a real scRNA-seq dataset from the Human brain, which contains 420 cells in eight well-defined cell types after we exclude uncertain hybrid cells (<xref rid="B31" ref-type="bibr">31</xref>). However, the raw data doesn’t show clear clustering of all cell types because of the dropouts and technical noise. After imputation, scIGANs enhances the cell type clusters to the maximum extent so that all eight cell types could be separated and identified (Figure <xref ref-type="fig" rid="F2">2C</xref>). Quantitative evaluations of the clustering following different imputation methods highlight the superiority of scIGANs over the others, even trained without the prior cell labels (Figure <xref ref-type="fig" rid="F2">2D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3G; Table S5</xref>).</p>
      <p>Last, we test another important yet difficult to quantify robustness, i.e. to what extent the imputation method will not introduce extra noise by, for example, mistakenly imputing biological ‘zeros’ or over-imputation. None of the existing imputation methods evaluated their robustness in avoiding extra noise using real scRNA-seq data. Spike-in RNAs (e.g. ERCC spike-in developed by the External RNA Controls Consortium) are a common set of external RNA controls that are equally added to an RNA analysis experiment after sample isolation. It is widely used in scRNA-seq experiments to remove the confounding noises from biological variance. Because the spike-in RNAs are added to samples with the identical amount to capture the technical noise, the readout for the spike-in RNAs should be free of cell-to-cell variability and the detected variances of expression, if exists, should only come from technical confounders other than biological contexts (e.g. cell types). Therefore, the expression of spike-in RNAs that were added to individual cells should not be able to cluster these cells into different subgroups, such as cell types or other biological states. We here use the ERCC spike-in read counts from a real scRNA-seq study (<xref rid="B32" ref-type="bibr">32</xref>) to evaluate the imputation methods on denoising the technical variance without introducing extra noise. These 92 ERCC RNAs were added to 288 single-cell libraries of three sets of 96 cells with different cell-cycle states. However, the raw counts failed to cluster these cells into one cluster due to the dropouts of spike-in RNAs (Figure <xref ref-type="fig" rid="F2">2E</xref>). We expect that the imputation can impute the artificial zeros without exposing the variability of cell states to spike-in profiles and thus all cells should have the same spike-in profiles and will be clustered into a single group. ScIGANs successfully recovers the spike-in profiles with minimum cell-to-cell variability and clustered all cells closely into one group, even though it was trained with supervisory cell labels (Figure <xref ref-type="fig" rid="F2">2E</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3H-I</xref>). However, other imputation methods suffer from introducing extra noises and thus make the clustering even worse (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3H, I; Table S6</xref>). Altogether, scIGANs performs superiorly on imputing the dropouts and avoiding extra noise.</p>
    </sec>
    <sec id="SEC3-2">
      <title>ScIGANs enables the identification of subcellular states of the homogeneous cell population</title>
      <p>Single-cell RNA-seq is typically used to identify different cell types from heterogeneous tissues or cell populations. However, cell populations that seem homogeneous, in terms of expression of cell surface markers, comprise many different cellular states with hidden cell-to-cell variability that can have significant effects on cell function (<xref rid="B43" ref-type="bibr">43</xref>,<xref rid="B44" ref-type="bibr">44</xref>), such as cellular functions, developmental stages, cell cycle phase, and adjacent microenvironments. Therefore, many biological discoveries require deeper investigation beyond the cell types towards implied cellular states, such as cell-cycle phases of the same cell type. It was reported that cell cycles contribute to phenotypic and functional cell heterogeneity even in monoclonal cell lines (<xref rid="B45" ref-type="bibr">45–47</xref>). However, identifying the cell-cycle phases of individual cells from a homogeneous cell population is more challenging for scRNA-seq data due to the prevalence of dropout and high technical variance, which was recently reported more attributable than cell cycle to the single-cell transcriptomic variability (<xref rid="B46" ref-type="bibr">46</xref>). We thereby test how imputation could benefit the identification of cell cycle variability from two scRNA-seq studies (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>).</p>
      <p>First, we reanalyze a scRNA-seq dataset from mouse embryonic stem cells (mESC) that were sorted for G1, S and G2M phases of the cell cycle (<xref rid="B32" ref-type="bibr">32</xref>). Due to the dropout and other technical noise, the raw data does not show cluster structures regarding the three different cell-cycle phases (Figure <xref ref-type="fig" rid="F3">3A</xref>) and has the poorest clustering measurements (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4A</xref>). All other imputation methods fail to recover the cluster structure regarding the cell-cycle states (Figure <xref ref-type="fig" rid="F3">3A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4A; Table S7</xref>). Only scIGANs shows significant improvement in detecting cell-cycle states with the best performance (Figure <xref ref-type="fig" rid="F3">3A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4A</xref>). Using a collection of independently predefined cell-cycle marker genes from Seurat (<xref rid="B33" ref-type="bibr">33</xref>,<xref rid="B34" ref-type="bibr">34</xref>), scIGANs significantly improves the identification of the cell cycle states superior over all other methods, shown as the most of sorted cells are correctly assigned in the cell-cycle phase spaces (Figure <xref ref-type="fig" rid="F3">3B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4B</xref>).</p>
      <p>Second, we assess the performance of different imputation methods on pinpointing the cell-cycle dynamics using a large scRNA-seq data of about 6.8k mouse ESCs (<xref rid="B35" ref-type="bibr">35</xref>). The previous work confirmed that ES cells lack strong cell-cycle oscillations in mRNA abundance, but they do show evidence of limited G2/M phase-specific transcription (<xref rid="B35" ref-type="bibr">35</xref>). Imputation by scIGANs significantly improved the cell-cycle oscillations with especially a more obvious G2/M phase-specific transcription (Figure <xref ref-type="fig" rid="F3">3C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4C-N</xref>). All the above results demonstrate that scIGANs performs better than all other methods on recovering and capturing the subcellular states and very subtle cell-cycle dynamics among single cells of the homogeneous population.</p>
    </sec>
    <sec id="SEC3-3">
      <title>ScIGANs improves the differential expression analysis</title>
      <p>Differential expression analysis refers broadly to the task of identifying those genes with expression levels that depend on some variables, like cell type or state. Ultimately, most single-cell studies start with identifying cell populations and characterizing genes that determine the cell types and drive them different from one to another. Using the scRNA-seq data (<xref rid="B36" ref-type="bibr">36</xref>) that have matched bulk RNA-seq data (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>), we compare the performances of different imputation methods on improving the identification of differentially expressed genes (DEGs). This dataset has six samples of bulk RNA-seq (four for H1 ESC and two for definitive endoderm cells, DEC) and 350 samples of scRNA-seq (212 for H1 ESC and 138 for DEC). DESeq2 (<xref rid="B37" ref-type="bibr">37</xref>) is used to identify DEGs for both bulk and single-cell RNA-seq data between the H1 and DEC cells. The raw scRNA-seq has a much higher zero expression rate than bulk RNA-seq (49.1% versus 14.8%) and shares fewest DEGs with bulk samples (Figure <xref ref-type="fig" rid="F4">4A</xref>). After imputation, the number of DEGs is increased toward the DEGs numbers of bulk samples (except the four other deep learning-based methods, AutoImpute (<xref rid="B48" ref-type="bibr">48</xref>), DCA (<xref rid="B6" ref-type="bibr">6</xref>), DeepImpute (<xref rid="B8" ref-type="bibr">8</xref>) and scGAIN (<xref rid="B49" ref-type="bibr">49</xref>), which detect much fewer DEGs than raw data). Especially highlighted by the yellow and green bars in Figure <xref ref-type="fig" rid="F4">4A</xref>, the AutoImpute and scGAIN detect significantly fewer DEGs and show the poorest agreement with other methods. In contrast, scIGANs imputation identifies the highest number of dataset-specific DEGs and shares a significant number of DEGs with bulk RNA-seq (Figure <xref ref-type="fig" rid="F4">4A</xref>). To more fairly quantitate the performance of DEG detection using scRNA-seq data, we define the accuracy (ACC), F score (also F1-score or F-measure), and the area under the receiver operating characteristic curve (AUC) for each DEG detection from the imputed scRNA-seq datasets, by taking DEGs from bulk RNA-seq as the gold standard (refer to Materials and Methods for details). The overall performance was defined as the average of the above three measurements. ScIGANs ranks in second place with scImpute, slight behind VIPER (Figure <xref ref-type="fig" rid="F4">4B</xref>).</p>
      <p>Additionally, we use a set of top 1000 DEGs from bulk samples (500 up-regulated and 500 down-regulated genes) as a benchmark to evaluate the correspondence of DEG detection between single-cell and bulk RNA-seq data. Without exception, scIGANs-imputed scRNA-seq data show the highest correspondence with bulk RNA-seq, depicted as the most number of shared top 1000 DEGs and highest correlation of the fold-changes versus bulk RNA-seq (Figure <xref ref-type="fig" rid="F4">4C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>). Moreover, the expressions of five marker genes for H1 and DEC cells are investigated to compare the extent to which the imputation methods recover the expression patterns of signature genes. Results show that scIGANs best reflect the expression signatures of both H1 and DEC cells by removing undesirable variation resulted from dropouts (Figure <xref ref-type="fig" rid="F4">4D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>). Projection of cells to the UMAP space overlaid by the expression of signature genes furtherly highlights the performance of scIGANs on recovering the expression patterns of signature genes (Figure <xref ref-type="fig" rid="F4">4E</xref>, <xref ref-type="fig" rid="F4">F</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>). In summary, scIGANs improves the identification of DEGs from scRNA-seq data with the best performance among other competing methods.</p>
    </sec>
    <sec id="SEC3-4">
      <title>ScIGANs enhances the inference of cellular trajectory</title>
      <p>Beyond characterizing cells by types, scRNA-seq also largely benefits organizing cells by time-course or developmental stages, i.e. cellular trajectory. In general, trajectory analysis starts with reducing the dimensionality of the expression data, then reconstructs a trajectory along which the cells are presumed to travel, and finally projects each cell onto this trajectory at the proper position. Although single-cell experiments can illuminate trajectories in a wide variety of biological settings (<xref rid="B38" ref-type="bibr">38</xref>,<xref rid="B50" ref-type="bibr">50–52</xref>), none of the single-cell trajectory inference methods account for dropout events. We speculate that inferring the cellular trajectory on scRNA-seq data after imputation could improve the accuracy of pseudotime ordering. We utilize a time-course scRNA-seq data derived from the differentiation from H1 ESC to definitive endoderm cells (DEC) (<xref rid="B36" ref-type="bibr">36</xref>). A total of 158 cells were profiled at 0, 12, 24, 36, 72 and 96 h after inducing the differentiation from H1 ESCs (Figure <xref ref-type="fig" rid="F5">5A</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). We apply scIGANs and all other 11 imputation methods to the raw scRNA-seq data with known time points and then reconstruct the trajectories using Mococle3 (<xref rid="B38" ref-type="bibr">38</xref>). Imputation by scIGANs produces the highest correspondence between the inferred pseudotime and real-time course (Figure <xref ref-type="fig" rid="F5">5B</xref>-<xref ref-type="fig" rid="F5">C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>), suggesting that scIGANs recovers more accurate transcriptome dynamics along the time course. We also investigate the signature genes of pluripotency (e.g. NANOG and POU5F1) and DECs (e.g. CER1 and HNF1B) and find that scIGANs improves the gene expression dynamics after imputation (Figure <xref ref-type="fig" rid="F5">5D</xref>, E) and has better performance than other imputation methods (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>). These results demonstrate that scIGANs can help to improve the single-cell trajectory analysis and recover the temporal dynamics of gene expression.</p>
    </sec>
    <sec id="SEC3-5">
      <title>ScIGANs is robust to the small dataset of few genes with low expression or cell-to-cell variance</title>
      <p>In general, other imputation methods (e.g. SAVER (<xref rid="B3" ref-type="bibr">3</xref>) and scImpute (<xref rid="B2" ref-type="bibr">2</xref>)) heavily rely on a set of pre-selected informative genes that are highly expressed and unlikely to suffer from the dropout. Imputation is then performed from the most similar cells defined by these informative genes. In contrast, scIGANs automatically learns the gene-gene and cell-cell dependencies from the whole dataset. More important, scIGANs converts each single-cell expression profile to an image so that a one-dimension ‘feature’ vector is reshaped to a two-dimension matrix with each element representing the expression of a single gene (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1A</xref>). Like image processing, scIGANs is then trained by convolution on the matrix so that the two-dimension gene-gene relations within each cell are captured. Therefore, we hypothesize that scIGANs is more robust to genes of low expression or with less cell-to-cell variance.</p>
      <p>From the aforementioned scRNA-seq data with 350 cells (212 H1 ESC and 138 DEC) (<xref rid="B36" ref-type="bibr">36</xref>), we randomly sample small sets of genes (<italic>n</italic> = 1024 for each) from the 5000-gene sets with top/lower means or variances, as well as a set of 1024 genes randomly picked from all expressed genes (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>; refer to Materials and Methods for details). Visualizations based on the 1024 genes (only ∼5% of detected genes) with very low expression or variance show that the two types of cells are almost mixed up without any cluster characterization for the raw expression profiles (Figure <xref ref-type="fig" rid="F4">4E</xref> and <xref ref-type="fig" rid="F6">6A</xref>). Imputation by scIGANs successfully recovered the two cell clusters for both datasets with only 1024 genes of low expression and variance, respectively (Figure <xref ref-type="fig" rid="F6">6B</xref>). However, all other methods failed in identifying the two cell types from these datasets (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>). Moreover, scIGANs significantly changes the mean and variance of expression after imputation, while they are not always the same cases for other methods (Figure <xref ref-type="fig" rid="F6">6C</xref>, D and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>). All these results show that scIGANs is robust to a small dataset composed of very few genes (∼5% of detected genes) with very low expression or cell-to-cell variance, which are less informative for other imputation methods. It's the strong support to the expectation that scIGANs can learn very limited gene–gene and cell–cell dependencies from a small set of lowly or close-to-uniform expressed genes.</p>
    </sec>
    <sec id="SEC3-6">
      <title>ScIGANs is scalable to scRNA-seq methods and data sizes</title>
      <p>The last but not least concern on scRNA-seq imputation raises in terms of the scalability to data sizes and sequencing methods, since the scRNA-seq becomes increasingly high-throughput in cell numbers and available on different protocols/platforms. To evaluate scIGANs and compare it with other methods regarding this concern, we collected a set of real scRNA-seq data to test the scalability to data sizes and sequencing methods (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>).</p>
      <p>We first test how scIGANs works equally well on scRNA-seq data from different single-cell methods. We use the datasets from three 3 human lung adenocarcinoma cell lines (H2228, H1975, HCC827) generated by 10X Genomics/Chromium, CEL-seq2/Fluidigm and Drop-seq/Droplet, respectively, which represent two single-cell platforms, i.e. droplet-based and plate-based. The cell clusters from raw data with dropouts show that 10X Genomics/Chromium generate the best outcomes while CEL-seq2/Fluidigm and Drop-seq/Droplet are more affected by the dropouts (Figure <xref ref-type="fig" rid="F7">7A</xref><xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10</xref>), which is consistent with the observation from a very recently publish benchmarking work (<xref rid="B34" ref-type="bibr">34</xref>). Imputation is expected to attenuate the dropout effects between different scRNA-seq methods; however, the performance varies largely across imputation methods. ScIGANs is among the four top-ranked methods showing a minor difference in the performances across different sequencing methods (Figure <xref ref-type="fig" rid="F7">7B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S11; Table S8</xref>). To further test how imputation could improve the correspondence of single-cell gene expression profiled by different sequencing methods, we calculated the Spearman correlation coefficient from the expression profiles of the same cell type generated by different sequencing methods (refer to Materials and Methods for details). With a high agreement with the clustering metrics (Figure <xref ref-type="fig" rid="F7">7B</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S11; Table S8</xref>), scIGANs is top-ranked in recovering the highly correspondent expression profiles of the same cell types generated from different scRNA-seq methods (Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12A</xref>). These results demonstrate that scIGANs shows equally high performance on scRNA-seq datasets generated by different scRNA-seq methods (protocols/platforms).</p>
      <p>Second, we assess the computational intensity of imputation methods using five datasets of 1000 (1k), 5000 (5k), 25 000 (25k), 50 000 (50k) and 100 000 (100k) cells created by random sampling from the PMBC 10k dataset (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>, Materials and Methods). As shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S9</xref>, many methods, including SAVER and scImpute, failed the jobs on the datasets with 50k or more cells because of the high requirements of memory (&gt;64GB). Specifically, SCRABBLE failed on all datasets because of requiring more than 48 h, even on the 1k dataset. Only scIGANs, DeepImpute, and MAGIC complete all jobs on five datasets. Among these three outstanding methods, scIGANs shows comparable scalability to data sizes in terms of the running time and memory usage, especially when accelerated by GPU (Figure <xref ref-type="fig" rid="F7">7D</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S12B; Table S9</xref>). Therefore, superior over most of the other tested methods, scIGANs can impute the scRNA-seq dataset with &gt;100k cells, which covers the throughputs of most scRNA-seq studies. To sum up, scIGANs is scalable to data sizes and scRNA-seq methods and promises equal performance.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>DISCUSSION</title>
    <p>Here, we propose the generative adversarial networks for scRNA-seq imputation (scIGANs). ScIGANs converts the expression profiles of individual cells to images and feeds them to generative adversarial networks. The trained generative network produces expression profiles representing the realistic cells of defined types. The generated cells, rather than the observed cells, are then used to impute the dropouts of the real cells. We assess scIGANs regarding its performances on the recovery of gene expression and various downstream applications using simulated and real scRNA-seq datasets. We provide compelling evidence that scIGANs performs superior over the other 11 peer imputation methods. Most importantly, using generated rather than observed cells, scIGANs avoids overfitting for the cell type of big population and meanwhile promise enough imputation power for rare cells.</p>
    <p>While there are many methods for scRNA-seq imputation, we specifically show how the GANs can improve the imputation and downstream applications, representing one of three pioneering applications of GANs to genomic data. Two other recent manuscripts used GANs to simulate (generate) realistic scRNA-seq data with the applications of either integrating multiple scRNA-seq datasets (<xref rid="B18" ref-type="bibr">18</xref>) or augmenting the sparse and underrepresented cell populations in scRNA-seq data (<xref rid="B26" ref-type="bibr">26</xref>). We, for the first time, advance the applications of GANs to scRNA-seq for dropout imputation. Inspired by the great success of GANs in inpainting and highly relevant work that applied GANs for ‘realistic’ generation of scRNA-seq data (<xref rid="B26" ref-type="bibr">26</xref>), we speculate that the generated realistic cells can not only augment the observed dataset but also benefit the dropout imputation since it was proved that the generated data mimics the distribution of the real data in their original space with stable fidelity (<xref rid="B26" ref-type="bibr">26</xref>). Our multiple downstream assessments and applications on simulated and real scRNA-seq datasets demonstrated its advantage in dropout imputation, superior over other peer methods. Especially for cells coming from very small populations, generated data were proved to faithfully augment the sparse cell populations (<xref rid="B26" ref-type="bibr">26</xref>) and thus reduce the sampling bias and improve the imputation power, which, however, are suffered by all other imputation methods. Additionally, GANs can learn dependencies between genes beyond pairwise correlations (<xref rid="B26" ref-type="bibr">26</xref>), which enables scIGANs more sensitive and robust to small datasets with very low or uniform expressions. We demonstrated these advantages by ERCC spike-in RNAs (Figure <xref ref-type="fig" rid="F2">2E</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3H-I</xref>) and downsampling real scRNA-seq data (Figure <xref ref-type="fig" rid="F6">6</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>).</p>
    <p>The underlying basis of scIGANs is that the real scRNA-seq data is derived from sampling, which does not have enough cells to characterize the true expression profiles of each cell type, even for the major cell populations; and the generated realistic cells could augment the observations, especially for sparse and underrepresented cell populations, and thus improve the dropout imputation of scRNA-seq data. There are many benefits of using realistic rather than the observed cells for imputation. First, the generated cells characterize the expression profiles of real cells, and faithfully represent the cell heterogeneity. Therefore, the realistic cells are ideal to serve as extra samples and independently impute the observed dropouts to avoid the ‘circular logic’ issue (overfitting) suffered by other methods (e.g. scImpute), which borrow information from the observed data <italic>per se</italic>. Second, the realistic cells will augment the rare cell-types, and thus overcome potential sampling biases to avoid imputation performance skewed to dominant cell populations. Additionally, benefitting from the power of GANs in adversarially discriminating between real and realistic data, and the augmentation from generated data, scIGANs is more sensitive to subcellular states like the cell-cycle phases investigated in this study. Imputation by scIGANs enables the investigation of scRNA-seq data beyond the identification and characterization of cell types but go deeper into subcellular states and capture cell-to-cell variability of the homogenous cell populations. This is critical for the applications of scRNA-seq to pinpoint the state transitions along the cellular trajectory or identify and remove the subcellular confounding factors (e.g. cell-cycle phases) (<xref rid="B46" ref-type="bibr">46</xref>). Our evaluations on cell-cycle phase detection and trajectory construction show the superiority of scIGANs over all other 11 tested methods.</p>
    <p>During the submission of this work, another work using GANs for scRNA-seq imputation (referred to as scGAIN) was posted in BioRxiv (<xref rid="B49" ref-type="bibr">49</xref>). We added it in all evaluations and downstream analyses in our work and found that scGAIN is not as good as scIGANs in all evaluations. We, therefore, want to specifically discuss the reasons for this difference.</p>
    <p>First, scGAIN and scIGANs use different network architectures in their GANs. ScIGANs uses convolutional neural networks (CNN) while scGAIN uses full connected networks (FCN). FCN may hold good performance on high-quality data with low or no dropout and noise. However, we focus on detecting and imputing the dropouts. For this purpose, FCN will not promise good performance. Instead, through multi-layer networks, convolutional neural networks (CNN) will map the features to adjacent positions, thereby forming representative local features and being captured by subsequent networks. This idea is widely used in stock market prediction (<xref rid="B53" ref-type="bibr">53</xref>,<xref rid="B54" ref-type="bibr">54</xref>). Specifically, in scRNA-seq data imputation, we extract high-quality information from features by concatenating a pooling layer to each convolutional layer. We use max pooling, which means to retain the highest expressions from the local area of the feature space. After multilayer mapping of the feature space, the effect of dropout in a local area will be attenuated by the high-quality information (high expression). Therefore, CNN with convolution-pooling architecture will automatically filter out the dropouts and noise and not compromise feature extraction. This explains why scIGANs works better than scGAIN and other methods in identifying subcellular states (Figure <xref ref-type="fig" rid="F3">3</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4</xref>), such as the cell-cycle phase, which always is implied and confounded with technical noise in scRNA-seq data.</p>
    <p>Second, during either training or imputation steps, scGAIN requires a mask matrix to identify which entries in the input matrix are targets for imputation, which was pre-defined by a hard threshold. In contrast, the expression matrix is the only required input for scIGANs. Once trained, scIGANs uses the KNN algorithm to heuristically define and impute dropouts. The uniform expression cutoff for dropouts may largely compromise the performance since genes have different expression patterns among cells. This is why scGAIN has the worst performance in DEG detection, which heavily relies on the expression patterns across cells (Figure <xref ref-type="fig" rid="F4">4A</xref> and <xref ref-type="fig" rid="F4">B</xref>).</p>
    <p>Third, along with the changes in the generator and discriminator models from a standard GAN, scGAIN uses different loss functions. The discriminator no longer takes two sets of samples (real or fake); instead, the discriminator distinguishes between observed and imputed portions (probability) of that sample. In contrast, scIGANs takes each cell as a whole and distinguishes the fake from real based on the overall expression profile of each cell rather than individual genes. Additionally, scIGANs reshapes the expression profiles of individual cells into a two-dimension ‘images’ and takes these ‘images’ rather than the original one-dimension vectors as samples for training. In this way, scIGANs can learn the non-linear gene-gene dependencies from complex and multi-cell type samples, which enable scIGANs more robust to a small set of genes with very low expression or cross-cell variance (Figure <xref ref-type="fig" rid="F6">6</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>).</p>
    <p>In summary, scIGANs is a method that takes advantage of both the gene-to-gene and cell-to-cell relationships to recover the true expression level of each gene in each cell, removing technical variation without compromising biological variabilities across cells. ScIGANs is also compatible with other single-cell analysis methods since it does not change the dimension (i.e. the number of genes and cells) of the input data and it effectively recovers the dropouts without affecting the non-dropout expressions. Additionally, ScIGANs is robust to small datasets that have few genes with low expression and/or cell-to-cell variance. Last but not least, scIGANs is also scalable to data sizes and works equally well on datasets generated by different scRNA-seq protocols/platforms. Altogether, scIGANs is not only an application of GANs in omics data but also represents a competing imputation method for the scRNA-seq data.</p>
  </sec>
  <sec sec-type="data-availability" id="SEC5">
    <title>DATA AVAILABILITY</title>
    <p>ScIGANs is an open-source tool available in the GitHub repository with a usage tutorial (<ext-link ext-link-type="uri" xlink:href="https://github.com/xuyungang/scIGANs">https://github.com/xuyungang/scIGANs</ext-link>). The sources and pre-processes of all data are described in Methods. The processed datasets and codes used to reproduce the Figures and Tables are available at GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/xuyungang/scIGANs_Reproducibility">https://github.com/xuyungang/scIGANs_Reproducibility</ext-link>).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>gkaa506_Supplemental_Files</label>
      <media xlink:href="gkaa506_supplemental_files.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>ACKNOWLEDGEMENTS</title>
    <p><italic>Author's contributions</italic>: Y.X., Z.Z. and X.Z. conceived the study. Z.Z. developed the scIGANs model and Y.X. wrapped it up to a package. Y.X. analyzed all scRNA-seq datasets, interpreted the results and wrapped up the reproducibility codes on GitHub. Z.Z., L.Y., J.L. and Z.F. helped to test the methods and reproduce the analyses. Y.X. wrote the manuscript and all authors revised it. All authors read and approved the final version of the manuscript.</p>
  </ack>
  <sec id="SEC6">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkaa506#supplementary-data">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC7">
    <title>FUNDING</title>
    <p>National Institutes of Health (NIH) [R01CA241930, R01GM123037, AR069395]. Funding for open access charge: National Institutes of Health.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <notes id="NT1">
    <title>Notes</title>
    <p>Present address: Yungang Xu, Department of Pathology and Laboratory Medicine, Children's Hospital of Philadelphia and University of Pennsylvania, Philadelphia, PA 19104, USA.</p>
  </notes>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Van Dijk</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Sharma</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Nainys</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Yim</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Kathail</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Carr</surname><given-names>A.J.</given-names></name>, <name name-style="western"><surname>Burdziak</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Moon</surname><given-names>K.R.</given-names></name>, <name name-style="western"><surname>Chaffer</surname><given-names>C.L.</given-names></name>, <name name-style="western"><surname>Pattabiraman</surname><given-names>D.</given-names></name></person-group><article-title>Recovering gene interactions from single-cell data using data diffusion</article-title>. <source>Cell</source>. <year>2018</year>; <volume>174</volume>:<fpage>716</fpage>–<lpage>729</lpage>.<pub-id pub-id-type="pmid">29961576</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>W.V.</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>J.J.</given-names></name></person-group><article-title>An accurate and robust imputation method scImpute for single-cell RNA-seq data</article-title>. <source>Nat. Commun.</source><year>2018</year>; <volume>9</volume>:<fpage>997</fpage>.<pub-id pub-id-type="pmid">29520097</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Torre</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Dueck</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Shaffer</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Bonasio</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Murray</surname><given-names>J.I.</given-names></name>, <name name-style="western"><surname>Raj</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>N.R.</given-names></name></person-group><article-title>SAVER: gene expression recovery for single-cell RNA sequencing</article-title>. <source>Nat. Methods</source>. <year>2018</year>; <volume>15</volume>:<fpage>539</fpage>–<lpage>542</lpage>.<pub-id pub-id-type="pmid">29941873</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gong</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Kwak</surname><given-names>I.-Y.</given-names></name>, <name name-style="western"><surname>Pota</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Koyano-Nakagawa</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Garry</surname><given-names>D.J.</given-names></name></person-group><article-title>DrImpute: imputing dropout events in single cell RNA sequencing data</article-title>. <source>BMC Bioinformatics</source>. <year>2018</year>; <volume>19</volume>:<fpage>220</fpage>.<pub-id pub-id-type="pmid">29884114</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Zhou</surname><given-names>X.</given-names></name></person-group><article-title>VIPER: variability-preserving imputation for accurate gene expression recovery in single-cell RNA sequencing studies</article-title>. <source>Genome Biol.</source><year>2018</year>; <volume>19</volume>:<fpage>196</fpage>.<pub-id pub-id-type="pmid">30419955</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eraslan</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Simon</surname><given-names>L.M.</given-names></name>, <name name-style="western"><surname>Mircea</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Mueller</surname><given-names>N.S.</given-names></name>, <name name-style="western"><surname>Theis</surname><given-names>F.J.</given-names></name></person-group><article-title>Single-cell RNA-seq denoising using a deep count autoencoder</article-title>. <source>Nat. Commun.</source><year>2019</year>; <volume>10</volume>:<fpage>390</fpage>.<pub-id pub-id-type="pmid">30674886</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Barkley</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Yanai</surname><given-names>I.</given-names></name></person-group><article-title>Accurate denoising of single-cell RNA-Seq data using unbiased principal component analysis</article-title>. <year>2019</year>; <comment>bioRxiv doi:</comment><comment>17 June 2019, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/655365</pub-id>.</mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Arisdakessian</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Poirion</surname><given-names>O.</given-names></name>, <name name-style="western"><surname>Yunits</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Zhu</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Garmire</surname><given-names>L.X.</given-names></name></person-group><article-title>DeepImpute: an accurate, fast, and scalable deep neural network method to impute single-cell RNA-seq data</article-title>. <source>Genome Biol.</source><year>2019</year>; <volume>20</volume>:<fpage>211</fpage>.<pub-id pub-id-type="pmid">31627739</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peng</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Zhu</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Yin</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Tan</surname><given-names>K.</given-names></name></person-group><article-title>SCRABBLE: single-cell RNA-seq imputation constrained by bulk RNA-seq data</article-title>. <source>Genome Biol.</source><year>2019</year>; <volume>20</volume>:<fpage>88</fpage>.<pub-id pub-id-type="pmid">31060596</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Mattei</surname><given-names>P.-A.</given-names></name>, <name name-style="western"><surname>Frellsen</surname><given-names>J.</given-names></name></person-group><person-group person-group-type="editor"><name name-style="western"><surname>Kamalika</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Ruslan</surname><given-names>S</given-names></name></person-group><source>Proceedings of the 36th International Conference on Machine Learning</source>. <year>2019</year>; <volume>97</volume>:<publisher-name>PMLR, Proceedings of Machine Learning Research</publisher-name><fpage>4413</fpage>–<lpage>4423</lpage>.</mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Xie</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Xing</surname><given-names>E.P.</given-names></name></person-group><article-title>Missing value imputation based on deep generative models</article-title>. <year>2018</year>; <comment>arXiv doi:</comment><comment>05 August 2018, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1808.01684">https://arxiv.org/abs/1808.01684</uri>.</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Mattei</surname><given-names>P.A.</given-names></name>, <name name-style="western"><surname>Frellsen</surname><given-names>J.</given-names></name></person-group><article-title>missiwae: seep generative modelling and imputation of incomplete data</article-title>. <year>2018</year>; <comment>arXiv doi:</comment><comment>04 February 2019, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1812.02633">https://arxiv.org/abs/1812.02633</uri>.</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lopez</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Regier</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Cole</surname><given-names>M.B.</given-names></name>, <name name-style="western"><surname>Jordan</surname><given-names>M.I.</given-names></name>, <name name-style="western"><surname>Yosef</surname><given-names>N.</given-names></name></person-group><article-title>Deep generative modeling for single-cell transcriptomics</article-title>. <source>Nat. Methods</source>. <year>2018</year>; <volume>15</volume>:<fpage>1053</fpage>–<lpage>1058</lpage>.<pub-id pub-id-type="pmid">30504886</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Goodfellow</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Pouget-Abadie</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Mirza</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Xu</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Warde-Farley</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Ozair</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Courville</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Bengio</surname><given-names>Y.</given-names></name></person-group><source>Advances in neural information processing systems</source>. <year>2014</year>; <fpage>2672</fpage>–<lpage>2680</lpage>.</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Radford</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Metz</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Chintala</surname><given-names>S.</given-names></name></person-group><article-title>Unsupervised representation learning with deep convolutional generative adversarial networks</article-title>. <year>2015</year>; <comment>arXiv doi:</comment><comment>07 January 2016, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1511.06434">https://arxiv.org/abs/1511.06434</uri>.</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Duan</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Houthooft</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Schulman</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Sutskever</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Abbeel</surname><given-names>P.</given-names></name></person-group><source>Advances in neural information processing systems</source>. <year>2016</year>; <fpage>2172</fpage>–<lpage>2180</lpage>.</mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Miyato</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Kataoka</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Koyama</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Yoshida</surname><given-names>Y.</given-names></name></person-group><article-title>Spectral normalization for generative adversarial networks</article-title>. <year>2018</year>; <comment>arXiv doi:</comment><comment>16 February 2018, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1802.05957">https://arxiv.org/abs/1802.05957</uri>.</mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Ghahramani</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Watt</surname><given-names>F.M.</given-names></name>, <name name-style="western"><surname>Luscombe</surname><given-names>N.M.</given-names></name></person-group><article-title>Generative adversarial networks simulate gene expression and predict perturbations in single cells</article-title>. <year>2018</year>; <comment>bioRxiv doi:</comment><comment>30 July 2018, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/262501</pub-id>.</mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Gulrajani</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Ahmed</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Arjovsky</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Dumoulin</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Courville</surname><given-names>A.C.</given-names></name></person-group><source>Advances in neural information processing systems</source>. <year>2017</year>; <fpage>5767</fpage>–<lpage>5777</lpage>.</mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Yoon</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Jordon</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Van Der Schaar</surname><given-names>M.</given-names></name></person-group><article-title>Gain: missing data imputation using generative adversarial nets</article-title>. <year>2018</year>; <comment>arXiv doi:</comment><comment>07 June 2018, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1806.02920">https://arxiv.org/abs/1806.02920</uri>.</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Ledig</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Theis</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Huszár</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Caballero</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Cunningham</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Acosta</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Aitken</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Tejani</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Totz</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Z.</given-names></name></person-group><source>Proceedings of the IEEE conference on computer vision and pattern recognition</source>. <year>2017</year>; <fpage>4681</fpage>–<lpage>4690</lpage>.</mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Brock</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Lim</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Ritchie</surname><given-names>J.M.</given-names></name>, <name name-style="western"><surname>Weston</surname><given-names>N.</given-names></name></person-group><article-title>Neural photo editing with introspective adversarial networks</article-title>. <year>2016</year>; <comment>arXiv doi:</comment><comment>06 February 2017, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1609.07093">https://arxiv.org/abs/1609.07093</uri>.</mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wolterink</surname><given-names>J.M.</given-names></name>, <name name-style="western"><surname>Leiner</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Viergever</surname><given-names>M.A.</given-names></name>, <name name-style="western"><surname>Išgum</surname><given-names>I.</given-names></name></person-group><article-title>Generative adversarial networks for noise reduction in low-dose CT</article-title>. <source>IEEE Trans. Med. Imaging</source>. <year>2017</year>; <volume>36</volume>:<fpage>2536</fpage>–<lpage>2545</lpage>.<pub-id pub-id-type="pmid">28574346</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Sindagi</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Patel</surname><given-names>V.M.</given-names></name></person-group><article-title>Image de-raining using a conditional generative adversarial network</article-title>. <year>2019</year>; <publisher-name>IEEE Trans. Circuits Syst. Video Technol</publisher-name><comment>doi:10.1109/TCSVT.2019.2920407</comment>.</mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Koltun</surname><given-names>V.</given-names></name></person-group><source>Proceedings of the IEEE international conference on computer vision</source>. <year>2017</year>; <fpage>1511</fpage>–<lpage>1520</lpage>.</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marouf</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Machart</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Bansal</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Kilian</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Magruder</surname><given-names>D.S.</given-names></name>, <name name-style="western"><surname>Krebs</surname><given-names>C.F.</given-names></name>, <name name-style="western"><surname>Bonn</surname><given-names>S.</given-names></name></person-group><article-title>Realistic in silico generation and augmentation of single-cell RNA-seq data using generative adversarial networks</article-title>. <source>Nat. Commun.</source><year>2020</year>; <volume>11</volume>:<fpage>166</fpage>.<pub-id pub-id-type="pmid">31919373</pub-id></mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Yan</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Yu</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Shi</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Mou</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Kalra</surname><given-names>M.K.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Sun</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>G.</given-names></name></person-group><article-title>Low-Dose CT image denoising using a generative adversarial network with wasserstein distance and perceptual loss</article-title>. <source>IEEE Trans. Med. Imaging</source>. <year>2018</year>; <volume>37</volume>:<fpage>1348</fpage>–<lpage>1357</lpage>.<pub-id pub-id-type="pmid">29870364</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Berthelot</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Schumm</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Metz</surname><given-names>L.</given-names></name></person-group><article-title>Began: boundary equilibrium generative adversarial networks</article-title>. <year>2017</year>; <comment>arXiv doi:</comment><comment>31 May 2017, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1703.10717">https://arxiv.org/abs/1703.10717</uri>.</mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lin</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Troup</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Ho</surname><given-names>J.W.K.</given-names></name></person-group><article-title>CIDR: Ultrafast and accurate clustering through imputation for single-cell RNA-seq data</article-title>. <source>Genome Biol.</source><year>2017</year>; <volume>18</volume>:<fpage>59</fpage>.<pub-id pub-id-type="pmid">28351406</pub-id></mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zappia</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Phipson</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Oshlack</surname><given-names>A.</given-names></name></person-group><article-title>Splatter: simulation of single-cell RNA sequencing data</article-title>. <source>Genome Biol.</source><year>2017</year>; <volume>18</volume>:<fpage>174</fpage>.<pub-id pub-id-type="pmid">28899397</pub-id></mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Spyros</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Steven</surname><given-names>A.S.</given-names></name>, <name name-style="western"><surname>Ye</surname><given-names>Z.</given-names></name>, <name name-style="western"><surname>Martin</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Christine</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Lawrence</surname><given-names>M.S.</given-names></name>, <name name-style="western"><surname>Melanie</surname><given-names>G.G.</given-names></name>, <name name-style="western"><surname>Ben</surname><given-names>A.B.</given-names></name>, <name name-style="western"><surname>Stephen</surname><given-names>R.Q.</given-names></name></person-group><article-title>A survey of human brain transcriptome diversity at the single cell level</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source><year>2015</year>; <volume>112</volume>:<fpage>7285</fpage>–<lpage>7290</lpage>.<pub-id pub-id-type="pmid">26060301</pub-id></mixed-citation>
    </ref>
    <ref id="B32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Buettner</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Natarajan</surname><given-names>K.N.</given-names></name>, <name name-style="western"><surname>Casale</surname><given-names>F.P.</given-names></name>, <name name-style="western"><surname>Proserpio</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Scialdone</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Theis</surname><given-names>F.J.</given-names></name>, <name name-style="western"><surname>Teichmann</surname><given-names>S.A.</given-names></name>, <name name-style="western"><surname>Marioni</surname><given-names>J.C.</given-names></name>, <name name-style="western"><surname>Stegie</surname><given-names>O.</given-names></name></person-group><article-title>Computational analysis of cell-to-cell heterogeneity in single-cell RNA-sequencing data reveals hidden subpopulations of cells</article-title>. <source>Nat. Biotechnol.</source><year>2015</year>; <volume>33</volume>:<fpage>155</fpage>–<lpage>160</lpage>.<pub-id pub-id-type="pmid">25599176</pub-id></mixed-citation>
    </ref>
    <ref id="B33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stuart</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Butler</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Hoffman</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Hafemeister</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Papalexi</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Mauck</surname><given-names>W.M.</given-names><suffix>3rd</suffix></name>, <name name-style="western"><surname>Hao</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Stoeckius</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Smibert</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Satija</surname><given-names>R.</given-names></name></person-group><article-title>Comprehensive integration of Single-Cell data</article-title>. <source>Cell</source>. <year>2019</year>; <volume>177</volume>:<fpage>1888</fpage>–<lpage>1902</lpage>.<pub-id pub-id-type="pmid">31178118</pub-id></mixed-citation>
    </ref>
    <ref id="B34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Butler</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Hoffman</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Smibert</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Papalexi</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Satija</surname><given-names>R.</given-names></name></person-group><article-title>Integrating single-cell transcriptomic data across different conditions, technologies, and species</article-title>. <source>Nat. Biotechnol.</source><year>2018</year>; <volume>36</volume>:<fpage>411</fpage>–<lpage>420</lpage>.<pub-id pub-id-type="pmid">29608179</pub-id></mixed-citation>
    </ref>
    <ref id="B35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klein</surname><given-names>A.M.</given-names></name>, <name name-style="western"><surname>Mazutis</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Akartuna</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Tallapragada</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Veres</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Peshkin</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Weitz</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Kirschner</surname><given-names>M.W.</given-names></name></person-group><article-title>Droplet barcoding for Single-Cell transcriptomics applied to embryonic stem cells</article-title>. <source>Cell</source>. <year>2015</year>; <volume>161</volume>:<fpage>1187</fpage>–<lpage>1201</lpage>.<pub-id pub-id-type="pmid">26000487</pub-id></mixed-citation>
    </ref>
    <ref id="B36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chu</surname><given-names>L.F.</given-names></name>, <name name-style="western"><surname>Leng</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Hou</surname><given-names>Z.</given-names></name>, <name name-style="western"><surname>Mamott</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Vereide</surname><given-names>D.T.</given-names></name>, <name name-style="western"><surname>Choi</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Kendziorski</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Stewart</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Thomson</surname><given-names>J.A.</given-names></name></person-group><article-title>Single-cell RNA-seq reveals novel regulators of human embryonic stem cell differentiation to definitive endoderm</article-title>. <source>Genome Biol.</source><year>2016</year>; <volume>17</volume>:<fpage>173</fpage>.<pub-id pub-id-type="pmid">27534536</pub-id></mixed-citation>
    </ref>
    <ref id="B37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Love</surname><given-names>M.I.</given-names></name>, <name name-style="western"><surname>Huber</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Anders</surname><given-names>S.</given-names></name></person-group><article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol.</source><year>2014</year>; <volume>15</volume>:<fpage>550</fpage>.<pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="B38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Qiu</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Mao</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Tang</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Chawla</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Pliner</surname><given-names>H.A.</given-names></name>, <name name-style="western"><surname>Trapnell</surname><given-names>C.</given-names></name></person-group><article-title>Reversed graph embedding resolves complex single-cell trajectories</article-title>. <source>Nat. Methods</source>. <year>2017</year>; <volume>14</volume>:<fpage>979</fpage>.<pub-id pub-id-type="pmid">28825705</pub-id></mixed-citation>
    </ref>
    <ref id="B39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tian</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Dong</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Freytag</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Le Cao</surname><given-names>K.A.</given-names></name>, <name name-style="western"><surname>Su</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>JalalAbadi</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Amann-Zalcenstein</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Weber</surname><given-names>T.S.</given-names></name>, <name name-style="western"><surname>Seidi</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Jabbari</surname><given-names>J.S.</given-names></name><etal>et al</etal>.</person-group><article-title>Benchmarking single cell RNA-sequencing analysis pipelines using mixture control experiments</article-title>. <source>Nat. Methods</source>. <year>2019</year>; <volume>16</volume>:<fpage>479</fpage>–<lpage>487</lpage>.<pub-id pub-id-type="pmid">31133762</pub-id></mixed-citation>
    </ref>
    <ref id="B40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kiselev</surname><given-names>V.Y.</given-names></name>, <name name-style="western"><surname>Kirschner</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Schaub</surname><given-names>M.T.</given-names></name>, <name name-style="western"><surname>Andrews</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Yiu</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Chandra</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Natarajan</surname><given-names>K.N.</given-names></name>, <name name-style="western"><surname>Reik</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Barahona</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Green</surname><given-names>A.R.</given-names></name><etal>et al</etal>.</person-group><article-title>SC3: consensus clustering of single-cell RNA-seq data</article-title>. <source>Nat. Methods</source>. <year>2017</year>; <volume>14</volume>:<fpage>483</fpage>–<lpage>486</lpage>.<pub-id pub-id-type="pmid">28346451</pub-id></mixed-citation>
    </ref>
    <ref id="B41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zare</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Shooshtari</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Gupta</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Brinkman</surname><given-names>R.R.</given-names></name></person-group><article-title>Data reduction for spectral clustering to analyze high throughput flow cytometry data</article-title>. <source>BMC Bioinformatics</source>. <year>2010</year>; <volume>11</volume>:<fpage>403</fpage>.<pub-id pub-id-type="pmid">20667133</pub-id></mixed-citation>
    </ref>
    <ref id="B42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Peng</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Zhu</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Yin</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Tan</surname><given-names>K.</given-names></name></person-group><article-title>SCRABBLE: single-cell RNA-seq imputation constrained by bulk RNA-seq data</article-title>. <source>Genome Biol.</source><year>2019</year>; <volume>20</volume>:<fpage>88</fpage>.<pub-id pub-id-type="pmid">31060596</pub-id></mixed-citation>
    </ref>
    <ref id="B43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Paul</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Arkin</surname><given-names>Y.A.</given-names></name>, <name name-style="western"><surname>Giladi</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Jaitin</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Kenigsberg</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Keren-Shaul</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Winter</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Lara-Astiaso</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Gury</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Weiner</surname><given-names>A.</given-names></name><etal>et al</etal>.</person-group><article-title>Transcriptional heterogeneity and lineage commitment in myeloid progenitors</article-title>. <source>Cell</source>. <year>2015</year>; <volume>163</volume>:<fpage>1663</fpage>–<lpage>1677</lpage>.<pub-id pub-id-type="pmid">26627738</pub-id></mixed-citation>
    </ref>
    <ref id="B44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wilson</surname><given-names>N.K.</given-names></name>, <name name-style="western"><surname>Kent</surname><given-names>D.G.</given-names></name>, <name name-style="western"><surname>Buettner</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Shehata</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Macaulay</surname><given-names>I.C.</given-names></name>, <name name-style="western"><surname>Calero-Nieto</surname><given-names>F.J.</given-names></name>, <name name-style="western"><surname>Sánchez Castillo</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Oedekoven</surname><given-names>C.A.</given-names></name>, <name name-style="western"><surname>Diamanti</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Schulte</surname><given-names>R.</given-names></name><etal>et al</etal>.</person-group><article-title>Combined single-cell functional and gene expression analysis resolves heterogeneity within stem cell populations</article-title>. <source>Cell Stem Cell</source>. <year>2015</year>; <volume>16</volume>:<fpage>712</fpage>–<lpage>724</lpage>.<pub-id pub-id-type="pmid">26004780</pub-id></mixed-citation>
    </ref>
    <ref id="B45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Buettner</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Natarajan</surname><given-names>K.N.</given-names></name>, <name name-style="western"><surname>Casale</surname><given-names>P.F.</given-names></name>, <name name-style="western"><surname>Proserpio</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Scialdone</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Theis</surname><given-names>F.J.</given-names></name>, <name name-style="western"><surname>Teichmann</surname><given-names>S.A.</given-names></name>, <name name-style="western"><surname>Marioni</surname><given-names>J.C.</given-names></name>, <name name-style="western"><surname>Stegle</surname><given-names>O.</given-names></name></person-group><article-title>Computational analysis of cell-to-cell heterogeneity in single-cell RNA-sequencing data reveals hidden subpopulations of cells</article-title>. <source>Nat. Biotechnol.</source><year>2015</year>; <volume>33</volume>:<fpage>155</fpage>–<lpage>160</lpage>.<pub-id pub-id-type="pmid">25599176</pub-id></mixed-citation>
    </ref>
    <ref id="B46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McDavid</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Finak</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Gottardo</surname><given-names>R.</given-names></name></person-group><article-title>The contribution of cell cycle to heterogeneity in single-cell RNA-seq data</article-title>. <source>Nat. Biotechnol.</source><year>2016</year>; <volume>34</volume>:<fpage>591</fpage>.<pub-id pub-id-type="pmid">27281413</pub-id></mixed-citation>
    </ref>
    <ref id="B47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rapsomaniki</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Lun</surname><given-names>X.-K.</given-names></name>, <name name-style="western"><surname>Woerner</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Laumanns</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Bodenmiller</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Martínez</surname><given-names>M.</given-names></name></person-group><article-title>CellCycleTRACER accounts for cell cycle and volume in mass cytometry data</article-title>. <source>Nat. Commun.</source><year>2018</year>; <volume>9</volume>:<fpage>632</fpage>.<pub-id pub-id-type="pmid">29434325</pub-id></mixed-citation>
    </ref>
    <ref id="B48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Talwar</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Mongia</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Sengupta</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Majumdar</surname><given-names>A.</given-names></name></person-group><article-title>AutoImpute: autoencoder based imputation of single-cell RNA-seq data</article-title>. <source>Sci Rep-Uk</source>. <year>2018</year>; <volume>8</volume>:<fpage>16329</fpage>.</mixed-citation>
    </ref>
    <ref id="B49">
      <label>49.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Gunady</surname><given-names>M.K.</given-names></name>, <name name-style="western"><surname>Kancherla</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Bravo</surname><given-names>H.C.</given-names></name>, <name name-style="western"><surname>Feizi</surname><given-names>S.</given-names></name></person-group><article-title>scGAIN: single cell RNA-seq data imputation using generative adversarial networks</article-title>. <year>2019</year>; <comment>bioRxiv doi:</comment><comment>12 November 2019, preprint: not peer reviewed</comment><pub-id pub-id-type="doi">10.1101/837302</pub-id>.</mixed-citation>
    </ref>
    <ref id="B50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Albergante</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Hsu</surname><given-names>J.Y.</given-names></name>, <name name-style="western"><surname>Lareau</surname><given-names>C.A.</given-names></name>, <name name-style="western"><surname>Bosco</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Guan</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Zhou</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Gorban</surname><given-names>A.N.</given-names></name>, <name name-style="western"><surname>Bauer</surname><given-names>D.E.</given-names></name>, <name name-style="western"><surname>Aryee</surname><given-names>M.J.</given-names></name><etal>et al</etal>.</person-group><article-title>Single-cell trajectories reconstruction, exploration and mapping of omics data with STREAM</article-title>. <source>Nat. Commun.</source><year>2019</year>; <volume>10</volume>:<fpage>1903</fpage>.<pub-id pub-id-type="pmid">31015418</pub-id></mixed-citation>
    </ref>
    <ref id="B51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bendall</surname><given-names>S.C.</given-names></name>, <name name-style="western"><surname>Davis</surname><given-names>K.L.</given-names></name>, <name name-style="western"><surname>Amir</surname><given-names>E.-A.</given-names></name>, <name name-style="western"><surname>Tadmor</surname><given-names>M.D.</given-names></name>, <name name-style="western"><surname>Simonds</surname><given-names>E.F.</given-names></name>, <name name-style="western"><surname>Chen</surname><given-names>T.J.</given-names></name>, <name name-style="western"><surname>Shenfeld</surname><given-names>D.K.</given-names></name>, <name name-style="western"><surname>Nolan</surname><given-names>G.P.</given-names></name>, <name name-style="western"><surname>Pe’er</surname><given-names>D.</given-names></name></person-group><article-title>Single-cell trajectory detection uncovers progression and regulatory coordination in human B cell development</article-title>. <source>Cell</source>. <year>2014</year>; <volume>157</volume>:<fpage>714</fpage>–<lpage>725</lpage>.<pub-id pub-id-type="pmid">24766814</pub-id></mixed-citation>
    </ref>
    <ref id="B52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schiebinger</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Shu</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Tabaka</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Cleary</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Subramanian</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Solomon</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Gould</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Liu</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Lin</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Berube</surname><given-names>P.</given-names></name><etal>et al</etal>.</person-group><article-title>Optimal-transport analysis of single-cell gene expression identifies developmental trajectories in reprogramming</article-title>. <source>Cell</source>. <year>2019</year>; <volume>176</volume>:<fpage>928</fpage>.<pub-id pub-id-type="pmid">30712874</pub-id></mixed-citation>
    </ref>
    <ref id="B53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gunduz</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Yaslan</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Cataltepe</surname><given-names>Z.</given-names></name></person-group><article-title>Intraday prediction of Borsa Istanbul using convolutional neural networks and feature correlations</article-title>. <source>Knowl-Based Syst</source>. <year>2017</year>; <volume>137</volume>:<fpage>138</fpage>–<lpage>148</lpage>.</mixed-citation>
    </ref>
    <ref id="B54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hoseinzade</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Haratizadeh</surname><given-names>S.</given-names></name></person-group><article-title>CNNpred: CNN-based stock market prediction using a diverse set of variables</article-title>. <source>Expert Syst. Appl.</source><year>2019</year>; <volume>129</volume>:<fpage>273</fpage>–<lpage>285</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Database (Oxford)</journal-id>
    <journal-id journal-id-type="iso-abbrev">Database (Oxford)</journal-id>
    <journal-id journal-id-type="publisher-id">databa</journal-id>
    <journal-title-group>
      <journal-title>Database: The Journal of Biological Databases and Curation</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-0463</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
      <publisher-loc>UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7812716</article-id>
    <article-id pub-id-type="doi">10.1093/database/baaa113</article-id>
    <article-id pub-id-type="publisher-id">baaa113</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Article</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00960</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Large-scale regulatory and signaling network assembly through linked open data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-3093-5873</contrib-id>
        <name>
          <surname>Lefebvre</surname>
          <given-names>M</given-names>
        </name>
        <aff><institution content-type="department">UMR 1332 Biologie du Fruit et Pathologie, INRAE, Univ. Bordeaux</institution>, 72 Avenue Edouard Bourlaux, CS20032, 33882, Villenave d’Ornon cedex, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gaignard</surname>
          <given-names>A</given-names>
        </name>
        <aff><institution content-type="department">Université de Nantes, CNRS, INSERM, l’Institut du Thorax</institution> F-44000, Nantes, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Folschette</surname>
          <given-names>M</given-names>
        </name>
        <aff><institution content-type="department">Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL - Centre de Recherche en Informatique Signal et Automatique de Lille</institution>, F-59000 Lille, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bourdon</surname>
          <given-names>J</given-names>
        </name>
        <aff><institution content-type="department">Université de Nantes, Centrale Nantes, CNRS, UMR 6004 - LS2N - Laboratoire des Sciences du Numérique de Nantes</institution>, F-44000 Nantes, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-5192-0745</contrib-id>
        <name>
          <surname>Guziolowski</surname>
          <given-names>C</given-names>
        </name>
        <aff><institution content-type="department">Université de Nantes, Centrale Nantes, CNRS, UMR 6004 - LS2N - Laboratoire des Sciences du Numérique de Nantes</institution>, F-44000 Nantes, <country country="FR">France</country></aff>
        <!--<email>carito.guziolowski@ls2n.fr</email>-->
        <xref ref-type="corresp" rid="COR0001"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR0001">*Corresponding author: Tel: (+33) 2 51 12 58 85; Email: <email xlink:href="carito.guziolowski@ls2n.fr">carito.guziolowski@ls2n.fr</email></corresp>
      <p>Citation details: Lefebvre, M., Gaignard, A., Folschette, M., <italic>et al</italic>. Large-scale regulatory and signaling network assembly through linked open data. <italic>Database</italic> (2021) Vol. 2021: article ID baaa113; doi:10.1093/database/baaa113</p>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-01-18">
      <day>18</day>
      <month>1</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>1</month>
      <year>2021</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>2021</volume>
    <elocation-id>baaa113</elocation-id>
    <history>
      <date date-type="accepted">
        <day>11</day>
        <month>12</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>30</day>
        <month>11</month>
        <year>2020</year>
      </date>
      <date date-type="received">
        <day>25</day>
        <month>6</month>
        <year>2020</year>
      </date>
      <date date-type="editorial-decision">
        <day>02</day>
        <month>12</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/" license-type="cc-by">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="baaa113.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Huge efforts are currently underway to address the organization of biological knowledge through linked open databases. These databases can be automatically queried to reconstruct regulatory and signaling networks. However, assembling networks implies manual operations due to source-specific identification of biological entities and relationships, multiple life-science databases with redundant information and the difficulty of recovering logical flows in biological pathways. We propose a framework based on Semantic Web technologies to automate the reconstruction of large-scale regulatory and signaling networks in the context of tumor cells modeling and drug screening. The proposed tool is pyBRAvo (python Biological netwoRk Assembly), and here we have applied it to a dataset of 910 gene expression measurements issued from liver cancer patients. The tool is publicly available at <ext-link ext-link-type="uri" xlink:href="https://github.com/pyBRAvo/pyBRAvo">https://github.com/pyBRAvo/pyBRAvo</ext-link>.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>SyMeTRIC Connect Talent project</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Research Agency</institution>
          </institution-wrap>
        </funding-source>
        <award-id>ANR-10-BTBR-02-04-11.</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="12"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>Introduction</title>
    <p>Systems biology is a research area aimed at obtaining a better understanding of biological interactions at several levels. The associated activities require combining multiple databases to integrate information, and computational modeling (<xref rid="R1" ref-type="bibr">1</xref>) addresses the complexity of this integration process. Graph-based modeling approaches are particularly suitable for elucidating biological systems because they structure information in an organized (possibly causal) way to represent the relation between complex components such as genes, proteins and protein complexes. For instance, graph structures represent inhibition of activation in gene regulatory networks (GRNs) or protein stimulation in signaling networks (SNs). These networks can be easily transferred to computational models, which can perform complex combinatorial analyses or simulations to extract network properties or predict system states. Several systems biology approaches use computational models built upon biological networks to understand human diseases. For example, researchers have previously undertaken the construction and kinetic modeling of a Parkinson’s disease interaction map (<xref rid="R2" ref-type="bibr">2</xref>), while others have combined the cross-talk of multiple T-cell receptor pathways to understand immune response (<xref rid="R3" ref-type="bibr">3</xref>).</p>
    <p>To assemble such graphs, multiple data or knowledge bases must be integrated. This integration effort is currently facilitated through several initiatives aimed at better organization of biological knowledge and its open availability, such as Reactome (<xref rid="R4" ref-type="bibr">4</xref>), Kyoto Encyclopedia of Genes and Genomes (KEGG) (<xref rid="R5" ref-type="bibr">5</xref>), PathwayCommons (PC) (<xref rid="R6" ref-type="bibr">6</xref>), WikiPathways (<xref rid="R7" ref-type="bibr">7</xref>), Pathway Interaction Database-NCI (<xref rid="R8" ref-type="bibr">8</xref>), Consensus PathDB (<xref rid="R9" ref-type="bibr">9</xref>), OmniPath (<xref rid="R10" ref-type="bibr">10</xref>) and hiPathDB (<xref rid="R11" ref-type="bibr">11</xref>), among others. These databases can be automatically queried to reconstruct a large variety of biological networks such as GRNs or SNs.</p>
    <p>Some of these databases, such as KEGG, WikiPathways, PC ChiBE (<xref rid="R12" ref-type="bibr">12</xref>) and Reactome, provide an explicit representation and a user-oriented visualization to better understand biological phenomena. However, they do not include query mechanisms to automate the reconstruction of possibly complete (across multiple pathways) upstream subgraphs from a list of genes of interest. For other databases, specific tools have been developed to automate network reconstruction from a list of input genes. These tools include CyPath2 (<xref rid="R13" ref-type="bibr">13</xref>), PCViz (<ext-link ext-link-type="uri" xlink:href="https://www.pathwaycommons.org/pcviz/">https://www.pathwaycommons.org/pcviz/</ext-link>), PyPath (<xref rid="R10" ref-type="bibr">10</xref>) and ReactomeFIViz (<xref rid="R14" ref-type="bibr">14</xref>), all of which produce graphs representing biological networks. However, due to their modeling choices, derived computational models often fail in representing causal biological flows. For example, the CyPath2, PCViz, ReactomeFIViz and PyPath tools represent protein complexes as a set of interacting entity members (cycles) without including the complex itself as a node in the graph. In contrast, KEGG, WikiPathways, ChiBE and Reactome visualization tools keep protein complexes in the visualization as nodes. The first modeling choice may strongly influence computational modeling because cycles can generate oscillations in simulations. These artificial oscillations do not represent a biological reality.</p>
    <p>Single-source tools for reconstruction of GRNs and SNs such as ReactomeFIViz and KEGGscape (18) do not enable tackling the challenges arising from the integration of biological data from multiple sources. PC and OmniPath are two large-scale initiatives in that direction: they integrate several existing data sources—PC covers 24 resources and OmniPath covers 34 resources—thus allowing to combine multiple knowledge bases. However, scientists face a massive amount of query results when querying resources, and they consequently need efficient and scalable algorithms to exploit their richness.</p>
    <p>We identified the following issues that need to be addressed to enable better modeling of biological systems: (i) combining multiple data sources, possibly at multiple scales; (ii) automating the exhaustive reconstruction of multi-source multi-pathway networks and (iii) leveraging biological semantic models to represent causal biological flows. In this paper, we propose pyBRAvo as a computational framework based on Semantic Web technologies (BioPAX ontology) and multiple public data source (PC) to automate the reconstruction of human multi-source and multi-pathway GRNs and SNs.</p>
  </sec>
  <sec id="s2">
    <title>Material and methods</title>
    <sec id="s2-s1">
      <title>PathwayCommons</title>
      <p>PC  (<xref rid="R6" ref-type="bibr">6</xref>) is a large-scale initiative aimed at integrating biological pathway data collected and curated from multiple data sources and making the information accessible. At the time we evaluated our tool, PC version 11 encompassed 22 data sources, 9500 pathways, 3 million interactions and 1.5 million entities. In the updated version 12, PC integrates 22 data sources and provides information on more than 11,500 pathways, 2.4 million interactions and 1.2 million entities. Some of the data sources focus on pathway information such as SMPdb, Reactome, KEGG or WikiPathways, while other sources focus on biological interactions such as BioGRID or IntAct. PC relies on Linked Data (<xref rid="R15" ref-type="bibr">15</xref>) principles to make this massive pathway knowledge interpretable from both human and computational points of view. Linked Data provides standards to represent and link resources as public knowledge graphs on the web, and resource description framework (RDF) (<xref rid="R16" ref-type="bibr">16</xref>) is the W3C standard used to represent these knowledge graphs. It is particularly suitable for representing biological knowledge because it allows the representation of directed labeled graphs. In addition, these resources as well as their relations can be strongly typed with controlled vocabularies or more formal ontologies. In particular, PC leverages the BioPAX ontology (<xref rid="R17" ref-type="bibr">17</xref>) to provide a standard and uniform view of these multiple and diverse databases. Finally, thanks to the support of Semantic Web standards and technologies, especially the SPARQL query language, this massive biological pathway knowledge graph can be queried on live up-to-date biological data to mine and retrieve specific graph patterns.</p>
    </sec>
    <sec id="s2-s2">
      <title>Gene regulatory and SNs reconstruction</title>
      <sec id="s2-s2-s1">
        <title>Network reconstruction algorithm</title>
        <p>With pyBRAvo, we propose a method to automatically assemble GRNs and SNs based on query rewriting. pyBRAvo leverages publicly available datasets through the PC initiative. <xref ref-type="fig" rid="F1">Figure 1</xref> presents the network reconstruction algorithm.
pyBRAvo first takes a list of genes or protein names as input. This list is then augmented with three optional text-based processings (gray boxes) aimed at decomposing protein complexes, inserting synonyms and inserting suffixes commonly found in PC. These processings are described in the ‘Query expansion and network unification’ section. Then, the query generation step produces two pattern-matching expressions (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods A.2</xref>) according to the specific kind of network to be reconstructed (i.e. GRNs or SNs). The generated query is executed on the remote PC data source, and results are recursively explored until no new controllers can be found or the maximum exploration depth has been reached. Users obtain their results in the form of a formal graph, which can be either an influence graph or an hyper-graph (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods A.3</xref>).</p>
        <fig orientation="portrait" fig-type="figure" id="F1" position="float">
          <label>Figure 1.</label>
          <caption>
            <p>Exploration of large pathway databases to assemble gene regulatory and signaling networks.</p>
          </caption>
          <graphic xlink:href="baaa113f1"/>
        </fig>
      </sec>
      <sec id="s2-s2-s2">
        <title>Query expansion and network unification</title>
        <p>To match the maximum number of entities during the network reconstruction process, we propose the following optional pre- and post-processings, as shown in <xref ref-type="fig" rid="F1">Figure 1</xref>.</p>
        <sec id="s2-s2-s2-s1">
          <title>Complex decomposition.</title>
          <p>Protein complexes can be identified in BioPAX knowledge bases either through their semantic type (<monospace>bp:Complex</monospace>) or by a label concatenating several names, separated with special characters. For performance concerns, we favored a syntactical approach that consists of splitting the label into several names and adding these names to the list of biological entities to be explored in following iterations.</p>
        </sec>
        <sec id="s2-s2-s2-s2">
          <title>Label expansion.</title>
          <p>Although BioPAX allows modeling several forms of biological entities, some databases express specific forms through a prefix or a suffix in entity labels, such as <italic>expression of</italic> or <italic>mutant form</italic>. To maximize entity retrieval, we dynamically expand the regulation and signaling queries with a set of predefined prefixes and suffixes when reconstructing the interaction network. These prefixes and suffixes are removed when entities are added to the regulation or SN.</p>
        </sec>
        <sec id="s2-s2-s2-s3">
          <title>Synonym expansion.</title>
          <p>To enhance the matching of genes or protein names, we account for common synonyms as registered in the NCBI Gene Info database (<monospace>Homo_sapiens.gene_info</monospace>). For each biological entity name retrieved through PC, we extend the regulation or signaling queries with their synonyms for further exploration.</p>
        </sec>
        <sec id="s2-s2-s2-s4">
          <title>Network unification.</title>
          <p>Finally, we reuse the NCBI Gene Info database to merge synonym graph nodes into nodes identified with their common name. This computation (of merging synonyms) is done for each analysis. Thus, two graphs are always proposed: one that is unified and another that is not.</p>
        </sec>
      </sec>
    </sec>
    <sec id="s2-s3">
      <title>Experimental datasets</title>
      <p>Two datasets are used in this work as the basis of use-cases to illustrate the application of pyBRAvo. Both datasets pertain to the study of human hepatocellular carcinoma (HCC).</p>
      <sec id="s2-s3-s1">
        <title>EMT signature-based dataset of 910 genes</title>
        <p>A gene expression profile based on the differential expression (DE) of 16 283 genes in human liver cells was obtained from the LIHC-US project (Liver HCC—TCGA, US, Release 21. <ext-link ext-link-type="uri" xlink:href="https://dcc.icgc.org/releases/release_21/Projects/LIHC-US">https://dcc.icgc.org/releases/release_21/Projects/LIHC-US</ext-link>) of the International Cancer Genome Consortium (ICGC) database (<xref rid="R18" ref-type="bibr">18</xref>). The RNAseq expression of these genes was measured across a population of 294 patients with liver cancer. The DE of genes was obtained by comparing patients with liver cancer at an invasive stage with patients whose cancer was at an early and non-invasive stage. Similar to a previously used approach (<xref rid="R19" ref-type="bibr">19</xref>), this comparison was based on the detection of epithelial–mesenchymal transition (EMT), the process by which cells acquire invasive and migratory abilities. The output of this DE analysis is a list of 910 genes that were notably over-expressed (fold-change &gt; 2) or under-expressed (fold-change &lt;−0.5) under the constraint <italic>P</italic> &lt; 10<sup>−5</sup>. These 910 genes are used as input for our software in the ‘Gene regulatory network reconstruction’ and ‘Signaling network reconstruction’ sections.</p>
        <p>Metabolic model-based dataset of 39 genes. In (<xref rid="R20" ref-type="bibr">20</xref>), pyBRAvo was used to feed a probabilistic model aimed at predicting the impact of drugs on cell growth rate in the context of HCC. More precisely, in this use-case, we used the iLivercancer1715 model proposed by (<xref rid="R21" ref-type="bibr">21</xref>). This metabolic model consists of 4663 metabolic reactions and 5735 metabolites, together with an objective function that describes the biomass growth of the HCC tumor cell. Since the model is reconstructed based on the human metabolic reaction model, deriving the list of 2881 genes with a direct effect on the metabolic reactions of HCC is straightforward. Notice that a single reaction deletion analysis can be used to filter the obtained list to the genes having an effect on the objective function of the metabolic model, similar to a flux balance analysis. This filtered list, containing <bold>39 genes</bold>, serves as the list of target genes in an upstream gene regulation network reconstruction by pyBRAvo in the ‘Gene regulatory networks for drug screening applications’ section.</p>
      </sec>
    </sec>
    <sec id="s2-s4">
      <title>Evaluation metric computation: coverage</title>
      <p>To illustrate the construction of SNs (see the ‘Signaling network reconstruction’ section), we compared pyBRAvo (see the ‘Query expansion and network unification’ section) with the algorithm proposed using PyPath functionalities (see the ‘Signaling network reconstruction’ section). Both tools retrieve graphs from a list of input genes. The coverage metric used for this study measures the number of input genes belonging to the output graph. It is computed based on the following formula: <disp-formula id="M0001"><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} S = |{\rm ON}| \div |{\rm IG}| \times 100 \end{equation*}$$\end{document}</tex-math></disp-formula> where ON is the set of input genes belonging to the output graph and IG is the set of input genes, ON ⊆ IG. This metric represents how well the knowledge of the database, extracted with the specific tool (pyBRAvo or PyPath), covers the initial gene dataset. The coverage was used to interpret our results when reconstructing SNs and GRNs.</p>
    </sec>
  </sec>
  <sec id="s3">
    <title>Results</title>
    <p>We applied pyBRAvo to reconstruct two different types of networks using the same gene expression profile. In the first one (‘Gene regulatory network reconstruction’ section), we built a regulatory network and modeled it using Iggy, a tool based on Answer Set Programming that performs a <italic>sign-consistency</italic> analysis comparing biological networks with experimental observations (<xref rid="R22" ref-type="bibr">22</xref>). In the second one (‘Signaling network reconstruction’ section), we used pyBRAvo to reconstruct an SN and compared the obtained results using PyPath, a Python package designed to query the OmniPath database (version of October 2019) to work with molecular network interpretations from this database. Finally, we show in the ‘Gene regulatory networks for drug screening applications’ section how pyBRAvo can be used in a drug-screening application to enrich potential target genes and associated candidate drugs.</p>
    <sec id="s3-s1">
      <title>GNN reconstruction</title>
      <p>We used pyBRAvo to query the PC database (version 11), excluding both miRTarBase and MSigDB sub-databases, to generate a regulatory network that explains the upstream events of the 910 genes selected based on the EMT signature (see the ‘Experimental datasets’ section). The miRTarBase database was excluded because it contains negative interactions due to miRNA entities, for which we had no experimental observations. MSigDB was excluded because of the absence of signs/roles in the effect of all its interactions; MSigDB interactions are obtained via computational predictions on the gene binding sites. The reconstruction was limited to a recursion depth of 10 levels. This graph was obtained using the Python command line script of pyBRAvo (Command: <monospace>python pyBRAvo.py -reg -md 10 -sy -su -co -f input.csv -excl mirtarbase msigdb</monospace>); this call used the search of synonyms, complex decomposition and label expansion options explained in the ‘Query expansion and network unification’ section. The search took 25 minutes and 11 seconds of computation time (On a standard laptop computer with an Intel Core i7-6600U CPU of 4 × 2.60GHz, 16Gb memory and running Ubuntu 18.04.) when the private SPARQL endpoint was used. Computing the same pyBRAvo call using the PC SPARQL endpoint took 98 minutes and 9 seconds.</p>
      <p>We obtained a directed and partially signed graph composed of 1678 nodes and 4425 edges, among which 3719 are signed (as <italic>activation</italic>, <italic>inhibition</italic>) and 599 are labeled by pyBRAvo as PART_OF to denote the oriented relation between a protein and the protein complex it belongs to. Among the 1678 nodes, 330 can be identified as protein complexes, and 27 of them are protein complexes of small molecules; the other 1321 nodes can be identified as proteins or genes. The edges of this graph represent transcriptional regulation interactions and complex formation interactions. From the 910 queried genes, pyBRAvo recovered the upstream events for 691 (76% of coverage) of them. The reason that not all 910 original genes were found is that not all genes are documented in the queried resources of PC as being regulated by transcription factors. Independently from this study, we used the same list of 910 genes to query the KEGG database for upstream (transcriptional) regulators and we obtained only 63 genes (6% coverage) that were upstream regulated.</p>
      <sec id="s3-s1-s1">
        <title>Provenance</title>
        <p>In this case study, we were interested in understanding how different databases provide information that enables the construction of a graph explaining the EMT signature genes. In <xref ref-type="fig" rid="F2">Figure 2</xref>, we show a graph that was retrieved; its edges are colored according to the source database. The Cytoscape session of this figure is available online (<ext-link ext-link-type="uri" xlink:href="https://github.com/pyBRAvo/pyBRAvo/blob/master/cytoscape-vis/regulation_paper_sept.cys">https://github.com/pyBRAvo/pyBRAvo/blob/master/cytoscape-vis/regulation_paper_sept.cys</ext-link>). In <xref rid="T1" ref-type="table">Table 1</xref>, we show the number of different edges retrieved per database. Since Pathways Commons information remains highly heterogeneous, each database uses its own vocabulary to represent the knowledge. Therefore, the options of <italic>complex decomposition</italic>, <italic>synonym expansion</italic> and <italic>label expansion</italic> provided by pyBRAvo are useful to obtain a more complete and less disconnected graph. Indeed, without these options, the graph has only 172 nodes and is made of five disconnected cliques.</p>
        <fig orientation="portrait" fig-type="figure" id="F2" position="float">
          <label>Figure 2.</label>
          <caption>
            <p>GRN returned by pyBRAvo. The color code of the edges gives their provenance: orange for CTD, purple for Panther, green for PID, red for Reactome and gray for the expansion of protein complexes. The edge tips depend on the interactions type: triangle for an activation, bar for an inhibition, arrow with bar for an unknown interaction type and diamond for a complex composition. This graphical export was made with Cytoscape 3.7 (<xref rid="R13" ref-type="bibr">13</xref>), following the instructions of <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods G</xref>.</p>
          </caption>
          <graphic xlink:href="baaa113f2"/>
        </fig>
        <table-wrap id="T1" orientation="portrait" position="float">
          <label>Table 1.</label>
          <caption>
            <p>Distribution of the provenance of the 4425 transcriptional regulation edges returned by pyBRAvo</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="char" char="." span="1"/>
              <col align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th valign="bottom" align="left" rowspan="1" colspan="1">
Database name</th>
                <th valign="bottom" align="center" rowspan="1" colspan="1">Edges</th>
                <th valign="bottom" align="center" rowspan="1" colspan="1">Signed edges</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
CTD</td>
                <td rowspan="1" colspan="1">3136</td>
                <td rowspan="1" colspan="1">3052</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">PID</td>
                <td rowspan="1" colspan="1">646</td>
                <td rowspan="1" colspan="1">646</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Panther</td>
                <td rowspan="1" colspan="1">42</td>
                <td rowspan="1" colspan="1">19</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Reactome</td>
                <td rowspan="1" colspan="1">2</td>
                <td rowspan="1" colspan="1">2</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">pyBRAvo (PART_OF)</td>
                <td rowspan="1" colspan="1">599</td>
                <td valign="top" align="center" rowspan="1" colspan="1"/>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>The first column gives the name of each database that returned edges, where PART_OF stands for pyBRAvo’s specific result: edges representing the association of proteins with the protein complexes they belong to. The second column gives the total number of edges found in the database, which can be of signed type (<italic>activation</italic> or <italic>inhibition</italic>) or unsigned type. The third column gives the number of signed edges among them.</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec id="s3-s1-s2">
        <title>Feeding computational modeling tools for Systems Biology users</title>
        <p>What we understand as a computational model is a mathematical framework that uses either a computational simulator or a solver to discover underlying properties of a (biological) graph, such as a computational prediction of unobserved species behavior. In a computational modeling tool, mathematical equations, logical rules or constraints are involved. One of the motivations in conceiving pyBRAvo was to ease the automatic transfer from knowledge databases toward such computational models.</p>
        <p>To illustrate this transfer, we built a discrete mathematical model integrating the pyBRAvo regulatory network without the 106 unsigned edges, obtained from Pathways Commons, and the up- and down-regulation DE measurements of the 910 genes obtained from ICGC. This mathematical model follows the <italic>sign-consistency</italic> approach implemented in the Iggy framework (<xref rid="R23" ref-type="bibr">23</xref>), which uses <italic>clasp</italic>, a conflict-driven Answer Set solver used in the study of NP-hard search problems (<xref rid="R24" ref-type="bibr">24</xref>). Iggy tests the consistency between the network logic (signs and directionality) and the DE information of the genes (up/down shifts of regulation). Interactions labeled as activations and inhibitions were modeled by Iggy using plus and minus signs, respectively. Interactions labeled as <italic>PART_OF</italic> were modeled by Iggy using a plus sign, and we considered protein complex formations as positive influences. The model had to be minimally corrected in 148 interactions before being consistent with the experimental observed up/down shifts. Afterwards, we obtained 82 predictions in unmeasured network components (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>). We validated these model predictions by comparing them with the original DE data of the genes that were not used for the graph reconstruction or as experimental observations. Here, we consider that a gene with positively (resp. negatively) differentially expression should be predicted positively (resp. negatively). Among the 82 predicted genes, 63 were found in the 15 373 genes from the experimental DE data. Of these 63 genes, 29 had a prediction matching the experimental data and 34 had a converse prediction. It is beyond the scope of this paper to analyze these computational prediction results. However, we deemed it important to present a concrete example of how pyBRAvo processing of information can provide a bridge from the PC regulatory knowledge to concrete modeling frameworks such as Iggy. In <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref>, we give details for this case study concerning the evolution of the graph retrieved using the same pyBRAvo options for 2 and 10 levels of depth.</p>
      </sec>
    </sec>
    <sec id="s3-s2">
      <title>SN reconstruction</title>
      <p>In this section, we illustrate how SNs, in the forms of <italic>influence graphs</italic>, are obtained with pyBRAvo (see the ‘Gene regulatory and signaling networks reconstruction’ section) using the 910 genes selected on the basis of EMT signatures (see the ‘Experimental datasets’ section). The specificity of this SN reconstruction process is demonstrated through a comparison of pyBRAvo with a similar state-of-the-art tool, PyPath (<xref rid="R10" ref-type="bibr">10</xref>). We focus on global characteristics of the reconstruction process, such as the size of the retrieved graphs and the computational time. We also deepen this analysis by using classical graph metrics, such as the number of cliques and the nature of the motifs in the retrieved graphs.</p>
      <sec id="s3-s2-s1">
        <title>Recursive upstream retrieval algorithm using PyPath</title>
        <p>PyPath is a Python module conceived to query and manipulate the OmniPath database. PyPath provides various functionalities such as the search for protein identifiers and their up- or downstream elements documented in the OmniPath database. PyPath allows searching for direct predecessors from a list of target nodes; however, the complete reconstruction of a SN related to the upstream events from a list of target nodes is not available. Therefore, we implemented an algorithm using the PyPath functions as described in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>. This algorithm does not require specific ID management (aliases, synonyms) because OmniPath already provides pre-processed IDs. Indeed, in OmniPath, all identifiers from the original databases (Gene Symbol, Entez Gene ID, Ensembl Gene or Protein, HGNC name, etc.) have been converted to SwissProt. Our tests using this tool were conducted during October 2019.</p>
        <sec id="s3-s2-s1-s1">
          <title>Experimental setup.</title>
          <p>To give an overview of the performance of pyBRAvo and PyPath, we evaluated each tool with various settings as shown in <xref rid="T2" ref-type="table">Table 2</xref>. The evaluation of both tools was based on the following metrics: (1) the reconstruction execution time, (2) the number of nodes and edges of the output graph and (3) the coverage of the input gene list (see the ‘Evaluation metric computation: coverage’ section). For both reconstructions, we chose to recover only signed interactions (pyBRAvo option <monospace>-unk</monospace>).</p>
          <table-wrap id="T2" orientation="portrait" position="float">
            <label>Table 2.</label>
            <caption>
              <p>pyBRAvo allows multiple configurations for the upstream exploration calls as described in the ‘Gene regulatory and signaling networks reconstruction’ section</p>
            </caption>
            <table frame="hsides" rules="groups">
              <colgroup span="1">
                <col align="left" span="1"/>
                <col span="1"/>
                <col span="1"/>
                <col span="1"/>
                <col span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th valign="bottom" rowspan="2" align="left" colspan="1">Tool shortname</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">Synonyms</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">Complex</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">Label</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">Excluded</th>
                </tr>
                <tr>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">expansion</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">decomposition</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">expansion</th>
                  <th valign="bottom" colspan="1" align="left" rowspan="1">database</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td rowspan="1" colspan="1">
pyBRAvo—fast<sup>a</sup></td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">Reach</td>
                </tr>
                <tr>
                  <td rowspan="1" colspan="1">
pyBRAvo—synonyms<sup>b</sup></td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">Reach</td>
                </tr>
                <tr>
                  <td rowspan="1" colspan="1">
pyBRAvo—synonyms+complex<sup>c</sup></td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">Reach</td>
                </tr>
                <tr>
                  <td rowspan="1" colspan="1">
pyBRAvo—synonyms+complex+label<sup>d</sup></td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">Yes</td>
                  <td rowspan="1" colspan="1">Reach</td>
                </tr>
                <tr>
                  <td rowspan="1" colspan="1">
PyPath without loading</td>
                  <td rowspan="1" colspan="1">NA</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">NA</td>
                  <td rowspan="1" colspan="1">–</td>
                </tr>
                <tr>
                  <td rowspan="1" colspan="1">
PyPath with loading</td>
                  <td rowspan="1" colspan="1">NA</td>
                  <td rowspan="1" colspan="1">No</td>
                  <td rowspan="1" colspan="1">NA</td>
                  <td rowspan="1" colspan="1">–</td>
                </tr>
              </tbody>
            </table>
            <table-wrap-foot>
              <p><sup>a</sup>Option <monospace>-fa</monospace>, <sup>b</sup>Option <monospace>-sy</monospace>, <sup>c</sup>Option <monospace>-sy -co</monospace>, <sup>d</sup>Option <monospace>-sy -co -su.</monospace> The fast option only explores BioPAX display names (<monospace>bp:displayNames</monospace>); the <italic>synonyms</italic> option explores synonyms that have been retrieved from the NCBI Gene database; the <italic>complex</italic> option splits a protein complex into its protein components, and these proteins are integrated into the following upstream search and finally, the <italic>label expansion</italic> option allows including several forms (added suffixes, prefixes) of an entity in the upstream search. The PyPath loading option accounts for the time it takes to load the database before the algorithm is executed.</p>
            </table-wrap-foot>
          </table-wrap>
        </sec>
      </sec>
      <sec id="s3-s2-s2">
        <title>Execution time</title>
        <p>We compared the execution time (pyBRAvo and PyPath calls where executed from a standard laptop machine equipped with Intel<sup>®</sup> Xeon<sup>®</sup> CPU E5-2620 0 @ 2.00GHz x 18 and 32Gb of RAM memory) needed by pyBRAvo and PyPath to separately reconstruct a signed SN from the same dataset, by varying the reconstruction depth from 2 to 10 levels with a step of 2 (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>). This comparison was done using the settings shown in <xref rid="T2" ref-type="table">Table 2</xref>. We briefly review these results in the following paragraphs, and more details can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods E</xref>.</p>
        <sec id="s3-s2-s2-s1">
          <title>Cost of update.</title>
          <p>pyBRAvo queries of the private server are faster, although the data may be outdated in the long term. Depending on the call, the private SPARQL endpoint allows pyBRAvo to obtain a reduction of the computation time in a range of 31–49% of the time obtained when querying the PC endpoint. While pyBRAvo allows reconstructing biological networks on ‘fresh’ publicly available data, we note that client–server communication overheads must be considered with respect to computation time. In the context of large-scale biological network reconstructions, we thus recommend deploying a private SPARQL server. This will enhance computation time, as well as limit overloading public resources. A detailed comparison with PyPath computational time for similar queries is shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods E</xref>.</p>
        </sec>
        <sec id="s3-s2-s2-s2">
          <title>Cost of modeling choice.</title>
          <p>The pyBRAvo option <italic>complex decomposition</italic> greatly increases computational time for graph reconstruction (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>). This increase occurs because pyBRAvo includes the protein complexes as nodes in the graph and links them to their protein members. Although PyPath also includes the members of protein complexes, it does not represent a node protein complex in the graph (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods E</xref>). A PyPath modeling choice may generate artificial oscillations between members of a protein complex. In particular, for the reconstruction of 10 levels of depth, the PyPath graph had 6814 interactions; 31.5% of them belonged to a cycle of size 2 (i.e.  a motif <inline-formula id="ILM0001"><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$A \rightarrow B$\end{document}</tex-math></inline-formula>, <inline-formula id="ILM0002"><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$B \rightarrow A$\end{document}</tex-math></inline-formula>). For the pyBRAvo graph, only 5.6% of 5252 interactions were in a cycle of size 2. Moreover, when computing the number of cliques (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>), we observe that the pyBRAvo graph contains at most two cliques of size 5, while PyPath has 1392 of size 5 and its largest clique is of size 10.</p>
        </sec>
        <sec id="s3-s2-s2-s3">
          <title>Cost of identifiers homogenization.</title>
          <p>An explicit representation of the PC BioPAX information, using the entity symbols, generates graphs with components that refer to the same entity being artificially disconnected. pyBRAvo proposes to homogenize protein identifiers in two ways (see the ‘Query expansion and network unification’ section): (i) by performing a post-treatment that removes suffixes and prefixes, also called <italic>unification</italic>; and (ii) by performing an upstream exploration of their symbol synonyms and/or performing a label expansion. Therefore, the respective calls (option <italic>synonyms</italic>) are more expensive.</p>
        </sec>
      </sec>
      <sec id="s3-s2-s3">
        <title>Graph</title>
        <p>The results with respect to graph content are summarized in <xref ref-type="fig" rid="F3">Figure 3</xref>. We do not consider outdated vs.  updated calls of either PyPath or pyBRAvo because the results were identical. We observe that each additional pyBRAvo option, presented above, improves the quantity of nodes and edges of the retrieved graph. This increase in the number of nodes and edges grows rapidly until reaching a plateau at the fourth level of recursion depth. This stabilization likely occurs because further explorations point to components that have already been found. The large gap that opens when using the <monospace>pyBRAvo</monospace>—<monospace>complex</monospace> call appears because of the new entities created and explored.</p>
        <fig orientation="portrait" fig-type="figure" id="F3" position="float">
          <label>Figure 3.</label>
          <caption>
            <p>Comparative analyses of the networks obtained with pyBRAvo and PyPath. The horizontal axis represents the level of reconstruction depth of the SN. Bars plot show measures of the number of nodes; lines show the number of edges, the <italic>y</italic>-axis (left) is shown in a logarithmic scale.</p>
          </caption>
          <graphic xlink:href="baaa113f3"/>
        </fig>
        <p>We focus now on the signed SNs obtained for the 10-level upstream exploration query with PyPath and pyBRAvo (call <monospace>pyBRAvo</monospace>—<monospace>synonyms+complex+label</monospace> in <xref rid="T2" ref-type="table">Table 2</xref>). The PyPath graph is composed of 6814 signed edges, labeled as <italic>stimulation</italic>, <italic>inhibition</italic> and <italic>stimulation and inhibition</italic> (291 edges), while the pyBRAvo graph has 5252 edges labeled as <italic>activation</italic>, <italic>inhibition</italic> and <italic>part_of</italic>. The PyPath graph contains only protein nodes (2049), while the pyBRAvo graph is composed of 2642 nodes of two different kinds, proteins (1571) and complexes (1071). Most of these complexes are protein complexes (1067), while the rest are small molecule complexes. This different nature of the entities may create the observed difference in node and edge size shown in <xref ref-type="fig" rid="F3">Figure 3</xref>.</p>
        <p>We measured a coverage of 16.48% of the 910 input genes for the PyPath graph and of 10.9% for the pyBRAvo graph. These results indicate that in both databases (OmniPath and PC), the tools recovered upstream signaling events for only a small fraction of the 910 genes. PyPath information, however, had a better coverage for this dataset. We can see in <xref rid="T3" ref-type="table">Table 3</xref> that PyPath and pyBRAvo query different types of resources.</p>
        <table-wrap id="T3" orientation="portrait" position="float">
          <label>Table 3.</label>
          <caption>
            <p>Sources used to build the graphs using either PyPath (querying OmniPath) or pyBRAvo (querying PC)</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th valign="bottom" colspan="1" align="left" rowspan="1">Database</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">Data sources (number of signed interactions)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
OmniPath</td>
                <td rowspan="1" colspan="1">Adhesome (1347), ARN (707), CA1 (2205), CellPhoneDB (108), Guide2Pharma (88), HPMR (791), Macrophage (1237), NRF2ome (576), PDZBase (156), Ramilowski2015 (575), SignaLink3 (5138), Signor (6466), SPIKE (4947), TRIP (497)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
PC</td>
                <td rowspan="1" colspan="1">CTD (245), PANTHER (39), PID (2037), Reactome (570)</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>In <xref rid="T4" ref-type="table">Table 4</xref>, we show the different topological properties of both graphs. We can observe, for example, that the PyPath graph has more connected components than the pyBRAvo graph (37 vs. 18), suggesting that the information in PC, as interpreted by pyBRAvo, appears easier to assemble with respect to signed controlled signaling reactions. The pyBRAvo graph presents signed self-loops, which are real biological mechanisms useful in dynamic modeling. The PyPath graph shows 15.7% of multiple edges as related to the same pair of nodes, while the proportion is 3.7% in the pyBRAvo graph. This outcome shows that an interaction can be retrieved multiple times by different data sources contained in either Omnipath or PC, and repeated retrieval happens more often in Omnipath than in PC. From the number of cliques computed, we observe that the PyPath graph has a larger proportion of cliques than the pyBRAvo graph (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>). In (<xref rid="R25" ref-type="bibr">25</xref>), it was observed that cliques in interaction graphs (protein–protein networks) can be associated with protein complex entities. Since the PyPath graph does not contain entities related to protein complexes, this information may need to be retrieved from an enumeration of cliques; whereas, in the pyBRAvo graph, this enumeration of cliques is not necessary because the graph is composed of protein complex nodes. SNs are known to present a structure in which chains of cascades are combined. From the diameter and characteristic path length information, we observe that the pyBRAvo graph is composed of longer (27 vs. 14 in diameter) chains (directed paths) than PyPath. We interpret these longer chains of entities as being a result of the complex formation in pyBRAvo’s representation. In <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>, we observe that this distribution of shortest length paths is more dispersed in the pyBRAvo graph compared with the PyPath graph. These chains are an essential way of representing the signaling knowledge; a computational model that includes them enables a better representation of biological reality.</p>
        <table-wrap id="T4" orientation="portrait" position="float">
          <label>Table 4.</label>
          <caption>
            <p>Network analysis of the PyPath and pyBRAvo signed and directed graphs</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th valign="bottom" colspan="1" align="left" rowspan="1">Property</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">PyPath</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">PyPath<sup><italic>L</italic></sup></th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">pyBRAvo</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">pyBRAvo<sup><italic>L</italic></sup></th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
N. Nodes</td>
                <td rowspan="1" colspan="1">2049</td>
                <td rowspan="1" colspan="1">1955</td>
                <td rowspan="1" colspan="1">2642</td>
                <td rowspan="1" colspan="1">2587</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">N. Edges</td>
                <td rowspan="1" colspan="1">6814</td>
                <td rowspan="1" colspan="1">6469</td>
                <td rowspan="1" colspan="1">5252</td>
                <td rowspan="1" colspan="1">5206</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Clustering coefficient</td>
                <td rowspan="1" colspan="1">0.066</td>
                <td rowspan="1" colspan="1">0.066</td>
                <td rowspan="1" colspan="1">0.063</td>
                <td rowspan="1" colspan="1">0.026</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Connected components</td>
                <td rowspan="1" colspan="1">37</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">18</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Network diameter</td>
                <td rowspan="1" colspan="1">14</td>
                <td rowspan="1" colspan="1">14</td>
                <td rowspan="1" colspan="1">27</td>
                <td rowspan="1" colspan="1">27</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Percentage of shortest paths</td>
                <td rowspan="1" colspan="1">33%</td>
                <td rowspan="1" colspan="1">35%</td>
                <td rowspan="1" colspan="1">30%</td>
                <td rowspan="1" colspan="1">31%</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Characteristic path length</td>
                <td rowspan="1" colspan="1">4.8</td>
                <td rowspan="1" colspan="1">4.9</td>
                <td rowspan="1" colspan="1">8.5</td>
                <td rowspan="1" colspan="1">8.5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Avg. number of neighbors</td>
                <td rowspan="1" colspan="1">5.6</td>
                <td rowspan="1" colspan="1">5.5</td>
                <td rowspan="1" colspan="1">3.8</td>
                <td rowspan="1" colspan="1">3.8</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Self-loops</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">16</td>
                <td rowspan="1" colspan="1">16</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Multi-edge node pairs</td>
                <td rowspan="1" colspan="1">1076</td>
                <td rowspan="1" colspan="1">1000</td>
                <td rowspan="1" colspan="1">196</td>
                <td rowspan="1" colspan="1">191</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Maximal clique size</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Cliques of size 3</td>
                <td rowspan="1" colspan="1">2581</td>
                <td rowspan="1" colspan="1">2581</td>
                <td rowspan="1" colspan="1">604</td>
                <td rowspan="1" colspan="1">604</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>The upper ‘L’ refers to the largest connected component found in each respective graph. Both graphs represent signaling knowledge as stored in Omnipath and PC, respectively, on October 2019.</p>
          </table-wrap-foot>
        </table-wrap>
        <p>We also compared the largest connected component of both tools in terms of the betweenness centrality score with respect to the number of neighbors, and plotted the names of the 10 top-ranked species having the highest betweenness centrality score (see <xref ref-type="fig" rid="F4">Figure 4</xref>). We observe that 2 of the 10 top-ranked species are shared in both graphs; whereas, the other species are specific to each approach. A last analysis of these graphs was for detecting the types of motifs within them. To this end, we used the MotifNet web service (<xref rid="R26" ref-type="bibr">26</xref>). We observe that several of the 3-size motifs were shared (four out of five for pyBRAvo, and four out of six for PyPath) between both graphs. However, pyBRAvo has fewer motifs including cycles than PyPath (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S10</xref>). For the case of 4-size motifs (data not shown), the difference is more marked: the PyPath graph contains 69 significant motifs, while the pyBRAvo graph has only 42. The main difference between the types of motifs is the absence of 4-size motifs containing three to six cycles in pyBRAvo. These motif analysis results point to the strong inter-connectivity within the PyPath graph. All in all, these results illustrate how signaling knowledge is currently represented by the different knowledge sources.</p>
        <fig orientation="portrait" fig-type="figure" id="F4" position="float">
          <label>Figure 4.</label>
          <caption>
            <p>Betweenness centrality vs. number of neighbor nodes for the largest component graph obtained with PyPath and pyBRAvo, respectively, when querying signaling knowledge in Omnipath and PC. The names of the 10 species having the highest betweenness centrality score are shown, and blue names and blue stars correspond to species top-ranked in both graphs.</p>
          </caption>
          <graphic xlink:href="baaa113f4"/>
        </fig>
        <p>The Cytoscape session containing the 10-level SN extracted using pyBRAvo is available online (<ext-link ext-link-type="uri" xlink:href="https://github.com/pyBRAvo/pyBRAvo/blob/master/cytoscape-vis/signaling_10levels_withoutUNK.cys">https://github.com/pyBRAvo/pyBRAvo/blob/master/cytoscape-vis/signaling_10levels_withoutUNK.cys</ext-link>). In <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S11</xref>, we visualize two small subgraphs of the predecessors of matrix metallopeptidase 2 (MMP2) protein as generated by pyBRAvo using the <italic>influence graph</italic> and <italic>hypergraph/reaction</italic> options (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Methods A.4</xref>). This hypergraph/reaction option is specific to pyBRAvo and is not available in PyPath.</p>
      </sec>
    </sec>
    <sec id="s3-s3">
      <title>GRNs for drug screening applications</title>
      <p>In this section, we use the 39 genes selected on the basis of the metabolic model (see the ‘Experimental datasets’ section) and show how pyBRAvo enables increasing the number of candidate drugs based on a list of target genes through inclusion of genes with a putative non-direct effect on metabolism.</p>
      <sec id="s3-s3-s1">
        <title>Retrieving potential drugs</title>
        <p>Based on a list of 40 input genes identified with their gene symbol, we leverage the DrugBank (<xref rid="R27" ref-type="bibr">27</xref>) dataset publicly available as linked data through the Bio2RDF (<xref rid="R28" ref-type="bibr">28</xref>) SPARQL endpoint (<ext-link ext-link-type="uri" xlink:href="https://bio2rdf.org/sparql">https://bio2rdf.org/sparql</ext-link>). For each of the candidate gene targets, the principle consists of generating a graph pattern that links drugs to gene names through the DrugBank <italic>target</italic> and <italic>gene-name</italic> edges. These patterns are implemented in a SPARQL query that is executed online through the Bio2RDF endpoint. In this query, we filter only drugs with an “approved” status. These 39 gene targets lead to one approved drug.</p>
      </sec>
      <sec id="s3-s3-s2">
        <title>Augmenting drug targets</title>
        <p>pyBRAvo is then launched to assemble a GRN with all query expansion features (suffixes, synonyms, complex decomposition) with a single recursion depth and excluding the PC miRTarBase and MSigDB data sources. From the resulting regulation graph, we retrieve all associated activators or inhibitors, which leads to 38 additional candidate target genes.</p>
      </sec>
      <sec id="s3-s3-s3">
        <title>Retrieving potential new drugs</title>
        <p>We next launch the DrugBank exploration process again, as described in the previous paragraph, focusing on this new gene list. As the result, we obtain a list of 46 candidate drugs targeting the regulators of the initial gene list. <xref rid="T5" ref-type="table">Table 5</xref> summarizes the proposed drug-screening process.</p>
        <table-wrap id="T5" orientation="portrait" position="float">
          <label>Table 5.</label>
          <caption>
            <p>In the context of <italic>in silico</italic> drug screening, pyBRAvo allows augmenting the list of candidate drugs based on reconstructed gene regulation networks</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
              <col align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th valign="bottom" colspan="1" align="left" rowspan="1">
Initial target genes</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">Candidate drugs</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">New target genes</th>
                <th valign="bottom" colspan="1" align="left" rowspan="1">New candidate drugs</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
39</td>
                <td rowspan="1" colspan="1">
                  <bold>1</bold>
                </td>
                <td rowspan="1" colspan="1">38</td>
                <td rowspan="1" colspan="1">
                  <bold>46</bold>
                </td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>We also ran this experiment on the complete list of 2881 genes involved in the direct regulation of metabolic reactions described in the <monospace>iLivercancer1715</monospace> model. This led to 525 approved drugs, a result that is clearly humanly impossible to assess and possibly irrelevant. This result mainly arose from not focusing on the targeted metabolic objective of the network (biomass production). On the other hand, if we restricted the study to the filtered list of 39 genes, we obtained only one drug, which would clearly be unusable in the context of a drug-screening application.</p>
        <p>In this experiment, we showed that running pyBRAvo provides a list of candidate drugs with an indirect effect on the biomass production. Although an evaluation of the biological or clinical relevance of the retrieved potential drugs was beyond the scope of this work, we provide the indication of each of the candidate drugs in the Jupyter notebook available online (<ext-link ext-link-type="uri" xlink:href="https://github.com/pyBRAvo/pyBRAvo/blob/master/drugbank-usecase/Notebook/drugbank-metabolism.ipynb">https://github.com/pyBRAvo/pyBRAvo/blob/master/drugbank-usecase/Notebook/drugbank-metabolism.ipynb</ext-link>). We believe that GRNs and associated metrics such as centrality could provide interesting perspectives when prioritizing drugs in <italic>in silico</italic> screening applications. This experiment can be reproduced based on the online Jupyter notebook.</p>
      </sec>
    </sec>
    <sec id="s3-s4">
      <title>System implementation</title>
      <p>pyBRAvo was designed as a Python module to be used through an application programming interface in any Python script or directly in Command Line Interfaces. The proposed use cases were aimed at facilitating integration and fine-tuning of pyBRAvo in bioinformatics tools and workflows. pyBRAvo is also provided with several Jupyter notebooks to reproduce the experiments presented here as well as for training purposes. pyBRAvo source code and notebooks are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/pyBRAvo/pyBRAvo">https://github.com/pyBRAvo/pyBRAvo</ext-link>.</p>
    </sec>
  </sec>
  <sec id="s4">
    <title>Discussion and conclusion</title>
    <p>The pyBRAvo framework allows the automatic reconstruction of GRNs and SNs. The reconstruction is based on Semantic Web querying techniques of semantically integrated data sources. A primary novelty relies on the global nature of the obtained networks, and it is based on the iterative reconstruction process that queries knowledge bases combining interactions across all documented pathways.</p>
    <p>In pyBRAvo, we choose to use entity names (gene name, protein names, and so forth) to query the data sources for upstream interactions. Another possibility would be to use gene or protein IDs. Our choice was motivated by the multi-scale nature of the regulation and signaling processes. For instance, the transcription of a gene to mRNA and the translation of mRNA to a protein are implicit interactions that are usually not represented in the data sources. It is thus relevant to link a gene with its mRNA and the associated protein to obtain a complete reconstruction when querying the data sources. Furthermore, the reconstruction benefits from several improvements, namely, complex decomposition, label expansions, synonym expansions and network unification, that allow a deeper exploration of the knowledge base. It proves that the use of entity names together with these improvements enables going far beyond the simple use of gene or protein identifiers as shown in <xref ref-type="fig" rid="F3">Figure 3</xref>.</p>
    <p>In principle, pyBRAvo shares some characteristics with pyPath, a method that relies on the OmniPath database to reconstruct SNs on a large scale. In a comparison at a coarse-grained scale, the two sets of results appear comparable with respect to the size and the number of edges. Nevertheless, a deeper inspection of the results shows that several artifacts appear in the pyPath reconstruction, such as the large number of cycles, cliques and 4- and 3-size motifs, possibly resulting from protein complexes management in Omnipath (see <xref rid="T4" ref-type="table">Table 4</xref>). It is highly necessary to reduce such artifact edges when the obtained networks are used as input to build predictive models in both logical and probabilistic frameworks. We observe that PyPath extracted graphs tend to increase the graph connectivity. This signaling flow, carefully detailed in the BioPAX content, is kept when using pyBRAvo to extract the graph.</p>
    <p>In addition, these predictive models have to be considered very carefully. Indeed, most of the knowledge aggregated in the databases results from independent experiments. It is crucial to introduce a validation step by testing the model with experimental data, for instance, before using it in predictive approaches. Nevertheless, we strongly believe that adding such an automatic reconstruction step prior to the prediction step will permit more rapid design of large-scale predictive models while limiting errors due to manual data curation tasks.</p>
    <p>By leveraging Semantic Web technologies and the BioPAX ontology, pyBRAvo is able to mine any biological network knowledge expressed with commonly accepted pathway terms, concepts and relations. It could additionally be enriched using other external RDF datasets, such as DrugBank or DisGenet (<xref rid="R29" ref-type="bibr">29</xref>), with an adapted querying process. This can largely enrich the construction of systems biology models based on disease descriptions for instance. In addition, Semantic Web technologies enable performing complex queries on multiple data sources without the need to locally host possibly massive datasets.</p>
    <p>Assembling the vast amount of knowledge that is now publicly available is challenging. pyBRAvo has been designed with a particular focus on data and knowledge reuse. Through this work, we wish to encourage the Systems Biology community to combine their efforts toward developing machine actionable and causality-oriented biological resources, leveraging community standards, and ensuring rich and shared semantics.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>baaa113_Supp</label>
      <media xlink:href="baaa113_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgement</title>
    <p>The authors would like to thank Nathalie Théret and Vincent Legagneux for providing experimental data and their biological expertise for the ‘Results’ section.</p>
  </ack>
  <sec id="s5">
    <title>Supplementary data</title>
    <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Database</italic> Online.</p>
  </sec>
  <sec id="s6">
    <title>Funding</title>
    <p>This work has been partly funded by the Region Pays de la Loire through the SyMeTRIC Connect Talent project. It also benefited from the support of the French government via the National Research Agency in the context of the investment expenditure program IDEALG ANR-10-BTBR-02-04-11.</p>
  </sec>
  <sec id="s7">
    <title>Conflicts of interest.</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="R1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kitano</surname><given-names>H.</given-names></name></person-group> (<year>2002</year>) <article-title>Computational systems biology</article-title>. <source><italic toggle="yes">Nature</italic></source>, <volume>420</volume>, <fpage>206</fpage>–<lpage>210</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nature01254</pub-id><pub-id pub-id-type="pmid">12432404</pub-id></mixed-citation>
    </ref>
    <ref id="R2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fujita</surname><given-names>K.A.</given-names></name>, <name name-style="western"><surname>Ostaszewski</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Matsuoka</surname><given-names>Y.</given-names></name></person-group><etal>et al.</etal> (<year>2014</year>) <article-title>Integrating pathways of Parkinson’s disease in a molecular interaction map</article-title>. <source><italic toggle="yes">Mol. Neurobiol.</italic></source>, <volume>49</volume>, <fpage>88</fpage>–<lpage>102</lpage>.<pub-id pub-id-type="pmid">23832570</pub-id></mixed-citation>
    </ref>
    <ref id="R3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rodriguez-Jorge</surname><given-names>O.</given-names></name>, <name name-style="western"><surname>Kempis-Calanis</surname><given-names>L.A.</given-names></name>, <name name-style="western"><surname>Abou-Jaoude</surname><given-names>W.</given-names></name></person-group><etal>et al.</etal> (<year>2019</year>) <article-title>Cooperation between T cell receptor and Toll-like receptor 5 signaling for CD4+ T cell activation</article-title>. <source><italic toggle="yes">Sci. Signaling</italic></source>, <volume>12</volume>, <page-range>eaar3641</page-range>. doi: <pub-id pub-id-type="doi">10.1126/scisignal.aar3641</pub-id></mixed-citation>
    </ref>
    <ref id="R4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Croft</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Mundo</surname><given-names>A.F.</given-names></name>, <name name-style="western"><surname>Haw</surname><given-names>R.</given-names></name></person-group><etal>et al.</etal> (<year>2014</year>) <article-title>The Reactome pathway knowledgebase</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>42</volume>, <fpage>D472</fpage>–<lpage>D477</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkt1102</pub-id><pub-id pub-id-type="pmid">24243840</pub-id></mixed-citation>
    </ref>
    <ref id="R5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kanehisa</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Goto</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Hattori</surname><given-names>M.</given-names></name></person-group><etal>et al.</etal> (<year>2006</year>) <article-title>From genomics to chemical genomics: new developments in KEGG</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>34</volume>, <fpage>D354</fpage>–<lpage>D357</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkj102</pub-id><pub-id pub-id-type="pmid">16381885</pub-id></mixed-citation>
    </ref>
    <ref id="R6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cerami</surname><given-names>E.G.</given-names></name>, <name name-style="western"><surname>Gross</surname><given-names>B.E.</given-names></name>, <name name-style="western"><surname>Demir</surname><given-names>E.</given-names></name></person-group><etal>et al.</etal> (<year>2011</year>) <article-title>PathwayCommons, a web resource for biological pathway data</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>39</volume>, <fpage>D685</fpage>–<lpage>D690</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkaaq1039</pub-id><pub-id pub-id-type="pmid">21071392</pub-id></mixed-citation>
    </ref>
    <ref id="R7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Slenter</surname><given-names>D.N.</given-names></name>, <name name-style="western"><surname>Kutmon</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Hanspers</surname><given-names>K.</given-names></name></person-group><etal>et al.</etal> (<year>2018</year>) <article-title>WikiPathways: a multifaceted pathway database bridging metabolomics to other omics research</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>46</volume>, <fpage>D661</fpage>–<lpage>D667</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkx1064</pub-id><pub-id pub-id-type="pmid">29136241</pub-id></mixed-citation>
    </ref>
    <ref id="R8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schaefer</surname><given-names>C.F.</given-names></name>, <name name-style="western"><surname>Anthony</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Krupa</surname><given-names>S.</given-names></name></person-group><etal>et al.</etal> (<year>2009</year>) <article-title>PID: the pathway interaction database</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>37</volume>, <fpage>D674</fpage>–<lpage>D679</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkn653</pub-id><pub-id pub-id-type="pmid">18832364</pub-id></mixed-citation>
    </ref>
    <ref id="R9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kamburov</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Stelzl</surname><given-names>U.</given-names></name>, <name name-style="western"><surname>Lehrach</surname><given-names>H.</given-names></name></person-group><etal>et al.</etal> (<year>2013</year>) <article-title>The ConsensusPathDB interaction database: 2013 update</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>41</volume>, <fpage>793</fpage>–<lpage>800</lpage>.</mixed-citation>
    </ref>
    <ref id="R10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Turei</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Korcsmaros</surname><given-names>T.</given-names></name> and <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J.</given-names></name></person-group> (<year>2016</year>) <article-title>OmniPath: guidelines and gateway for literature-curated signaling pathway resources</article-title>. <source><italic toggle="yes">Nat. Methods</italic></source>, <volume>13</volume>, <fpage>966</fpage>–<lpage>967</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nmeth.4077</pub-id><pub-id pub-id-type="pmid">27898060</pub-id></mixed-citation>
    </ref>
    <ref id="R11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yu</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Seo</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Rho</surname><given-names>K.</given-names></name></person-group><etal>et al.</etal> (<year>2012</year>) <article-title>hiPathDB: a human-integrated pathway database with facile visualization</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>40</volume>, <fpage>D797</fpage>–<lpage>D802</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkr1127</pub-id><pub-id pub-id-type="pmid">22123737</pub-id></mixed-citation>
    </ref>
    <ref id="R12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Babur</surname><given-names>O.</given-names></name>, <name name-style="western"><surname>Dogrusoz</surname><given-names>U.</given-names></name> and <name name-style="western"><surname>Demir</surname><given-names>E.</given-names></name></person-group><etal>et al.</etal> (<year>2010</year>) <article-title>ChiBE: interactive visualization and manipulation of BioPAX pathway models</article-title>. <source><italic toggle="yes">Bioinformatics</italic></source>, <volume>26</volume>, <fpage>429</fpage>–<lpage>431</lpage>. doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btp665</pub-id><pub-id pub-id-type="pmid">20007251</pub-id></mixed-citation>
    </ref>
    <ref id="R13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shannon</surname><given-names>P.</given-names></name></person-group><etal>et al.</etal> (<year>2003</year>) <article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title>. <source><italic toggle="yes">Genome Res.</italic></source>, <volume>13</volume>, <fpage>2498</fpage>–<lpage>2504</lpage>. doi: <pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id><pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="R14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>G.</given-names></name> and <name name-style="western"><surname>Stein</surname><given-names>L.</given-names></name></person-group> (<year>2012</year>) <article-title>A network module-based method for identifying cancer prognostic signatures</article-title>. <source><italic toggle="yes">Genome Biol.</italic></source>, <volume>13</volume>, <page-range>R112</page-range>. doi: <pub-id pub-id-type="doi">10.1186/gb-2012-13-12-r112</pub-id></mixed-citation>
    </ref>
    <ref id="R15">
      <label>15.</label>
      <mixed-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Bizer</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Heath</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Idehen</surname><given-names>K.</given-names></name></person-group>, <etal>et al.</etal> (<year>2008</year>) <article-title>Linked data on the web (ldow2008)</article-title>. <source>In: <italic toggle="yes">Proceedings of the 17th International Conference on World Wide Web</italic></source>. <publisher-name>WWW ’08, ACM</publisher-name>, <conf-loc>New York, NY, USA</conf-loc>, <fpage>pp. 1265</fpage>–<lpage>1266</lpage>.</mixed-citation>
    </ref>
    <ref id="R16">
      <label>16.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Hayes</surname><given-names>P.</given-names></name></person-group> (<year>2004</year>) <source><italic toggle="yes">RDF Semantics</italic></source>, <ext-link ext-link-type="uri" xlink:href="http://www.w3.org/TR/2004/REC-rdf-mt-20040210/">http://www.w3.org/TR/2004/REC-rdf-mt-20040210/</ext-link>.</mixed-citation>
    </ref>
    <ref id="R17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Demir</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Cary</surname><given-names>M.P.</given-names></name>, <name name-style="western"><surname>Paley</surname><given-names>S.</given-names></name></person-group><etal>et al.</etal> (<year>2010</year>) <article-title>The BioPAX community standard for pathway data sharing</article-title>. <source><italic toggle="yes">Nat. Biotechnol.</italic></source>, <volume>28</volume>, <page-range>935</page-range>. doi: <pub-id pub-id-type="doi">10.1038/nbt.1666</pub-id></mixed-citation>
    </ref>
    <ref id="R18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><collab>International Cancer Genome Consortium</collab></person-group><etal>et al.</etal> (<year>2010</year>) <article-title>International network of cancer genome projects</article-title>. <source><italic toggle="yes">Nature</italic></source>, <volume>464</volume>, <fpage>993</fpage>–<lpage>998</lpage>.<pub-id pub-id-type="pmid">20393554</pub-id></mixed-citation>
    </ref>
    <ref id="R19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Folschette</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Legagneux</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Poret</surname><given-names>A.</given-names></name></person-group><etal>et al.</etal> (<year>2020</year>) <article-title>A pipeline to create predictive functional networks: application to the tumor progression of hepatocellular carcinoma</article-title>. <source><italic toggle="yes">BMC Bioinformatics</italic></source>, <volume>21</volume>, <page-range>18</page-range>. doi: <pub-id pub-id-type="doi">10.1186/s12859-019-3316-1</pub-id></mixed-citation>
    </ref>
    <ref id="R20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mhamdi</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Bourdon</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Larhlimi</surname><given-names>A.</given-names></name></person-group><etal>et al.</etal> (<year>2020</year>) <article-title>Bayesian integrative modeling of genome-scale metabolic and regulatory networks</article-title>. <source><italic toggle="yes">Informatics</italic></source>, <volume>7</volume>, <page-range>1</page-range>
<ext-link ext-link-type="uri" xlink:href="https://www.mdpi.com/2227-9709/7/1/1">https://www.mdpi.com/2227-9709/7/1/1</ext-link>.</mixed-citation>
    </ref>
    <ref id="R21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gatto</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Nookaew</surname><given-names>I.</given-names></name> and <name name-style="western"><surname>Nielsen</surname><given-names>J.</given-names></name></person-group> (<year>2014</year>) <article-title>Chromosome 3p loss of heterozygosity is associated with a unique metabolic network in clear cell renal carcinoma</article-title>. <source><italic toggle="yes">Proc. Natl. Acad. Sci.,</italic></source><volume>111</volume>, <fpage>E866</fpage>–<lpage>E875</lpage>. doi: <pub-id pub-id-type="doi">10.1073/pnas.1319196111</pub-id><pub-id pub-id-type="pmid">24550497</pub-id></mixed-citation>
    </ref>
    <ref id="R22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Miannay</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Minvielle</surname><given-names>S.</given-names></name> and <name name-style="western"><surname>Magrangeas</surname><given-names>F.</given-names></name></person-group>, <etal>et al.</etal> (<year>2018</year>) <article-title>Constraints on signaling network logic reveal functional subgraphs on Multiple Myeloma OMIC data</article-title>. <source><italic toggle="yes">BMC Syst. Biol.</italic></source>, <volume>12</volume>, <page-range>32</page-range>.</mixed-citation>
    </ref>
    <ref id="R23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thiele</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Cerone</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Saez-Rodriguez</surname><given-names>J.</given-names></name></person-group><etal>et al.</etal> (<year>2015</year>) <article-title>Extended notions of sign consistency to relate experimental data to signaling and regulatory network topologies</article-title>. <source><italic toggle="yes">BMC Bioinformatics</italic></source>, <volume>16</volume>, <page-range>345</page-range>. doi: <pub-id pub-id-type="doi">10.1186/s12859-015-0733-7</pub-id></mixed-citation>
    </ref>
    <ref id="R24">
      <label>24.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Gebser</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Kaufmann</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Neumann</surname><given-names>A.</given-names></name></person-group><etal>et al.</etal> (<year>2007</year>) <chapter-title>clasp: A conflict-driven answer set solver</chapter-title>, <publisher-name>Springer Berlin Heidelberg</publisher-name>, <source>In <italic toggle="yes">Logic Programming and Nonmonotonic Reasoning</italic></source>. <publisher-loc>Berlin, Heidelberg</publisher-loc>, <fpage>pp. 260</fpage>–<lpage>265</lpage>.</mixed-citation>
    </ref>
    <ref id="R25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Palla</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Derenyi</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Farkas</surname><given-names>I.</given-names></name></person-group><etal>et al.</etal> (<year>2005</year>) <article-title>Uncovering the overlapping community structure of complex networks in nature and society</article-title>. <source><italic toggle="yes">Nature</italic></source>, <volume>435</volume>, <fpage>814</fpage>–<lpage>818</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nature03607</pub-id><pub-id pub-id-type="pmid">15944704</pub-id></mixed-citation>
    </ref>
    <ref id="R26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Smoly</surname><given-names>I.Y.</given-names></name>, <name name-style="western"><surname>Lerman</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Ziv-Ukelson</surname><given-names>M.</given-names></name></person-group><etal>et al.</etal> (<year>2017</year>) <article-title>MotifNet: a web-server for network motif analysis</article-title>. <source><italic toggle="yes">Bioinformatics</italic></source>, <volume>33</volume>, <fpage>1907</fpage>–<lpage>1909</lpage>. doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btx056</pub-id><pub-id pub-id-type="pmid">28165111</pub-id></mixed-citation>
    </ref>
    <ref id="R27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wishart</surname><given-names>D.S.</given-names></name>, <name name-style="western"><surname>Feunang</surname><given-names>Y.D.</given-names></name>, <name name-style="western"><surname>Guo</surname><given-names>A.C.</given-names></name></person-group><etal>et al.</etal> (<year>2018</year>) <article-title>DrugBank 5.0: a major update to the DrugBank database for 2018</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>46</volume>, <fpage>D1074</fpage>–<lpage>D1082</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gkx1037</pub-id><pub-id pub-id-type="pmid">29126136</pub-id></mixed-citation>
    </ref>
    <ref id="R28">
      <label>28.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Dumontier</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Callahan</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Cruz-Toledo</surname><given-names>J.</given-names></name></person-group><etal>et al.</etal> (<year>2014</year>) <article-title>Bio2rdf release 3: a larger connected network of linked data for the life sciences</article-title>. <source>In: <italic toggle="yes">Proceedings of the 2014 International Conference on Posters &amp; Demonstrations Track – Volume 1272</italic></source>. <publisher-name>ISWC-PD’14</publisher-name>, <publisher-loc>Aachen, DEU</publisher-loc>, <fpage>pp. 401</fpage>–<lpage>404</lpage>. <ext-link ext-link-type="uri" xlink:href="http://CEUR-WS.org">CEUR-WS.org</ext-link>.</mixed-citation>
    </ref>
    <ref id="R29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Piñero</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Ramírez-Anguita</surname><given-names>J.M.</given-names></name>, <name name-style="western"><surname>Saüch-Pitarch</surname><given-names>J.</given-names></name></person-group><etal>et al.</etal> (<year>2019</year>) <article-title>The DisGeNET knowledge platform for disease genomics: 2019 update</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>48</volume>, <fpage>D845</fpage>–<lpage>D855</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

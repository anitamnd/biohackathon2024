<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10307940</article-id>
    <article-id pub-id-type="pmid">37326967</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad388</article-id>
    <article-id pub-id-type="publisher-id">btad388</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>WarpSTR: determining tandem repeat lengths using raw nanopore signals</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Sitarčík</surname>
          <given-names>Jozef</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
        <xref rid="btad388-cor1" ref-type="corresp"/>
        <!--jozef.sitarcik@uniba.sk-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3898-3447</contrib-id>
        <name>
          <surname>Vinař</surname>
          <given-names>Tomáš</given-names>
        </name>
        <aff><institution>Faculty of Mathematics, Physics, and Informatics, Comenius University</institution>, Bratislava 842 48, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brejová</surname>
          <given-names>Broňa</given-names>
        </name>
        <aff><institution>Faculty of Mathematics, Physics, and Informatics, Comenius University</institution>, Bratislava 842 48, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krampl</surname>
          <given-names>Werner</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Department of Molecular Biology, Faculty of Natural Sciences, Comenius University</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Budiš</surname>
          <given-names>Jaroslav</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Radvánszky</surname>
          <given-names>Ján</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Institute of Clinical and Translational Research, Biomedical Research Center, Slovak Academy of Sciences</institution>, Bratislava 845 05, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lucká</surname>
          <given-names>Mária</given-names>
        </name>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>KInIT—Kempelen Institute of Intelligent Technologies</institution>, <addr-line>Bottova, 7939/2A</addr-line>, Bratislava 811 09, <country country="SK">Slovakia</country></aff>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Alkan</surname>
          <given-names>Can</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad388-cor1">Corresponding author. Comenius University Science Park, Bratislava 841 04, Slovakia. E-mail: <email>jozef.sitarcik@uniba.sk</email> (J.S.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-16">
      <day>16</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>6</issue>
    <elocation-id>btad388</elocation-id>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>06</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>11</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>28</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad388.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Short tandem repeats (STRs) are regions of a genome containing many consecutive copies of the same short motif, possibly with small variations. Analysis of STRs has many clinical uses but is limited by technology mainly due to STRs surpassing the used read length. Nanopore sequencing, as one of long-read sequencing technologies, produces very long reads, thus offering more possibilities to study and analyze STRs. Basecalling of nanopore reads is however particularly unreliable in repeating regions, and therefore direct analysis from raw nanopore data is required.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we present WarpSTR, a novel method for characterizing both simple and complex tandem repeats directly from raw nanopore signals using a finite-state automaton and a search algorithm analogous to dynamic time warping. By applying this approach to determine the lengths of 241 STRs, we demonstrate that our approach decreases the mean absolute error of the STR length estimate compared to basecalling and STRique.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>WarpSTR is freely available at <ext-link xlink:href="https://github.com/fmfi-compbio/warpstr" ext-link-type="uri">https://github.com/fmfi-compbio/warpstr</ext-link></p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>European Union’s Horizon 2020 research and innovation programme</institution>
          </institution-wrap>
        </funding-source>
        <award-id>872539</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Short tandem repeats (STRs) are repetitive genomic elements containing many consecutive copies of the same short motif, typically of length 1–6 bp. The number of consecutive repeats often varies among individuals and is one of the largest sources of intraspecies genetic diversity (<xref rid="btad388-B11" ref-type="bibr">Gelfand <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad388-B14" ref-type="bibr">Gymrek <italic toggle="yes">et al.</italic> 2016</xref>). STRs are involved in the determination of quantitative traits and complex multifactorial diseases, and &gt;50 STR loci in the human genome have been unambiguously associated with severe human monogenic diseases (repeat expansion disorders; REDs). REDs are typically caused by repeat length expansions of certain STRs over a pathogenicity threshold (<xref rid="btad388-B13" ref-type="bibr">Gymrek 2017</xref>, <xref rid="btad388-B7" ref-type="bibr">Depienne and Mandel 2021</xref>). Accurate determination of STR lengths is thus critical to differentiate between normal range, premutation range (having intergenerationally unstable lengths but without clinical symptoms), and pathogenic range alleles, but also because in several REDs, the STR length correlates with disease onset and severity (<xref rid="btad388-B9" ref-type="bibr">Doyu <italic toggle="yes">et al.</italic> 1992</xref>, <xref rid="btad388-B20" ref-type="bibr">Liu <italic toggle="yes">et al.</italic> 2020</xref>).</p>
    <p>Up until recently, the STR lengths were estimated mostly by conventional methods of molecular biology (i.e. Southern blotting and PCR-based techniques). In general, their use is complicated by the highly variable range of allele lengths to be detected, by the immense length of the expanded ones, and by the stable secondary structures formed by these repeats. Moreover, the accuracy of these methods decreases significantly with the length and complexity of the STR motif. Therefore, although several improvements have been introduced to overcome these challenges, there is still no single method that would reliably identify and size all possible ranges of normal and expanded alleles, and it is recommended to use them in different parallel combinations. These methods are however limited to characterization of individual loci and are not suitable for genome-scale screening (<xref rid="btad388-B26" ref-type="bibr">Radvansky and Kadasi 2010</xref>, <xref rid="btad388-B2" ref-type="bibr">Bahlo <italic toggle="yes">et al.</italic> 2018</xref>). In contrast, short-read sequencing allows to study STRs in more detail and on the whole-genome scale. However, properly genotyping STRs of lengths surpassing the used read length is difficult and at best limited to the identification of the presence of such alleles, but not their size (<xref rid="btad388-B33" ref-type="bibr">Willems <italic toggle="yes">et al.</italic> 2017</xref>, <xref rid="btad388-B5" ref-type="bibr">Dashnow <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad388-B4" ref-type="bibr">Budiš <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B8" ref-type="bibr">Dolzhenko <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B15" ref-type="bibr">Halman and Oshlack 2020</xref>).</p>
    <p>Recently, long-read technologies (such as Pacific Biosciences, and Oxford Nanopore) offered new possibilities for studying even larger expanded STRs (<xref rid="btad388-B29" ref-type="bibr">Sedlazeck <italic toggle="yes">et al.</italic> 2018</xref>). However, higher sequencing error rates pose additional challenges. One of the first tools using long reads, PacmonSTR (<xref rid="btad388-B30" ref-type="bibr">Ummat and Bashir 2014</xref>), modifies a traditional alignment algorithm to take higher error rates of Pacific Biosciences reads into account. The resulting estimate of the repeat number is subsequently corrected by a pair-hidden Markov model. RepeatHMM (<xref rid="btad388-B19" ref-type="bibr">Liu <italic toggle="yes">et al.</italic> 2017</xref>) performs error correction of repeat sequences in Oxford Nanopore reads by aligning them with the template of perfect repeats of the specified pattern using asymmetric sequence alignment. Then, RepeatHMM uses a hidden Markov model (HMM) to estimate the number of repeats directly from the corrected read sequences. In both tools, the results from individual reads are pooled together using Gaussian mixture models (GMMs) to predict the final genotype. TandemGenotypes (<xref rid="btad388-B23" ref-type="bibr">Mitsuhashi <italic toggle="yes">et al.</italic> 2019</xref>) uses a tailored alignment strategy based on last-split (<xref rid="btad388-B10" ref-type="bibr">Frith and Kawaguchi 2015</xref>) to obtain more confident alignments between the reference repeat region and reads. The change in the repeat number present in the read compared to the reference is then computed as a sum of contributions from the number of unaligned bases in the reference and the read.</p>
    <p>Other tools, such as NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) and STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>), attempt to overcome high error rates in nanopore sequences by using the raw sequencing signal. The raw signal is comprised of measurements of electrical current as DNA passes through a nanopore. The signal is affected by a context of <italic toggle="yes">k</italic> nucleotides (typically <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>) and each context is read ∼8–9 times on average. The portion of the signal corresponding to the shift by one base is called an <italic toggle="yes">event</italic>. Typically, the raw signal is first translated into the DNA sequence by a basecalling software using complex machine learning models. The above-mentioned tools use the raw signal to overcome errors introduced through imperfect basecalling.</p>
    <p>NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) uses an expected signal corresponding to five copies (and later three copies) of the repeating motif to match sections of the real signal using a dynamic time warping (DTW) algorithm (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>). The results are clustered into two clusters to obtain the final copy number call. STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>) uses both flanking sequences and the repeating pattern to build a profile HMM, where match states correspond to <italic toggle="yes">k</italic>-mers in these sequences; the STRique model does not allow for variation within the repeat. The copy number is then determined by counting match states as the raw signal is aligned to the profile HMM.</p>
    <p>We present a novel approach for the length determination of short tandem repeats (STRs) in a genome from the raw signal of nanopore sequencing reads. Our method models an STR locus using a finite-state automaton and uses an adapted version of the DTW algorithm (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>) to find an accurate sequence of the read within the STR locus. Our approach improves on the methods introduced by NanoSatellite and STRique in several ways. First, we recognize that basecalling is typically much more accurate in non-repeating regions (such as sequences flanking an STR) than in regions containing short repeats, and thus, it is more efficient (and even more accurate) to simply use basecalled sequences to locate the flanks and subsequently isolate the signal corresponding to the STR locus. Second, instead of using greedy heuristics as in NanoSatellite, we model the whole STR locus by a finite-state automaton and modify the DTW algorithm to align the full length of the signal corresponding to the STR locus to this automaton, determining the corresponding sequence length by the number of states passed by the alignment path. This is similar to the STRique profile HMM; however, there are several major differences. First, in WarpSTR, the finite-state automaton enables much greater customization. This allows us to model more complex STRs that include combinations of heterogeneous motifs or are interrupted, which are common occurrences in medically relevant STRs (<xref rid="btad388-B1" ref-type="bibr">Andrew <italic toggle="yes">et al.</italic> 1994</xref>, <xref rid="btad388-B24" ref-type="bibr">Musova <italic toggle="yes">et al.</italic> 2009</xref>, <xref rid="btad388-B27" ref-type="bibr">Radvansky <italic toggle="yes">et al.</italic> 2011</xref>, <xref rid="btad388-B28" ref-type="bibr">Radvanszky <italic toggle="yes">et al.</italic> 2021</xref>). Second, WarpSTR attenuates the signal normalization problem using a novel signal polishing phase. Finally, we use Bayesian GMMs to summarize the information from multiple overlapping reads and to derive the final genotypes. Using nanopore reads from whole-genome sequencing of human genomes and comparing our results to high-confidence variant calls determined by integrative approaches, we determine that our approach is significantly more accurate than STRique.</p>
  </sec>
  <sec>
    <title>2 Methods</title>
    <p>The speed of DNA passing through a pore varies significantly, which makes signal-based analysis challenging (<xref rid="btad388-B22" ref-type="bibr">Midha <italic toggle="yes">et al.</italic> 2019</xref>). To address this problem, DTW technique (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>), which has been used e.g. in speech processing, has been adapted to nanopore signal analysis (<xref rid="btad388-B21" ref-type="bibr">Loose <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad388-B16" ref-type="bibr">Han <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad388-B17" ref-type="bibr">2020</xref>). Briefly, DTW uses dynamic programming to find the lowest cost alignment between two sequences of signal values <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. To model variable signal speed, each signal value from <italic toggle="yes">S</italic> can be aligned to arbitrarily many values from <italic toggle="yes">T</italic>, and vice versa. The dynamic programming computes a two-dimensional matrix <italic toggle="yes">M</italic>, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the cost of the best alignment of <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, using a recurrent formula <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>; here, <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a distance between signal values <italic toggle="yes">s</italic> and <italic toggle="yes">t</italic>. At the end of the computation, the cost of the best alignment is represented by <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the best alignment can be recovered using standard back-tracing techniques used in dynamic programming.</p>
    <p>To align a known DNA sequence <italic toggle="yes">S</italic> to a raw signal by DTW, we first estimate an ‘ideal’ signal observed by sequencing <italic toggle="yes">S</italic>. Namely, we decompose string <italic toggle="yes">S</italic> to a sequence of overlapping <italic toggle="yes">k</italic>-mers and for each <italic toggle="yes">k</italic>-mer use the value from the lookup table of the expected signal values provided by Oxford Nanopore Technologies (<ext-link xlink:href="https://github.com/nanoporetech/kmer_models/" ext-link-type="uri">https://github.com/nanoporetech/kmer_models/</ext-link>). This signal can be then aligned to the real signal using dynamic programming, minimizing an error function based on the difference between the two compared signal points. In contrast to sequence alignment, alignment of multiple points in one signal to one point in the other signal is not penalized by DTW due to the expected wide variation in signal speeds.</p>
    <p>In our work, we adapt DTW for alignment of a repetitive sequence pattern of an undetermined length. Using the alignment of the known sequence pattern to the raw signal helps to inform the decisions in case of ambiguities and ultimately results in a more accurate interpretation of the raw signal. Once the pattern, representing an STR, is aligned to the raw signal, its instantiation is fixed, and the length of the instantiation determines the length of the STR represented by the nanopore read.</p>
    <sec>
      <title>2.1 WarpSTR overview</title>
      <p>WarpSTR consists of a sequence of steps that include locating reads corresponding to a given STR locus, estimating STR locus length in each of the reads independently (by aligning the raw signal to a finite-state automaton), and finally summarizing the results using a Bayesian GMM. <xref rid="btad388-F1" ref-type="fig">Figure 1</xref> summarizes the whole pipeline; individual steps of the pipeline are described in the following sections. WarpSTR assumes that the input data were preprocessed by basecalling the raw reads and mapped to a reference genome using standard methods. For each read overlapping the target STR locus given by its genomic coordinates, the flanking sequences are then found in the basecalled sequence using local alignment, and the mapping between the called bases and the raw signal, which is an interim output of the Guppy basecaller (<xref rid="btad388-B32" ref-type="bibr">Wick <italic toggle="yes">et al.</italic> 2019</xref>), is used to locate the corresponding signal positions. In the experiments, we have used Guppy v.4.0.15 and the flanking sequence length of 110 bases.</p>
      <fig position="float" id="btad388-F1">
        <label>Figure 1.</label>
        <caption>
          <p>Overview of the WarpSTR analysis.</p>
        </caption>
        <graphic xlink:href="btad388f1" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 STR representation by a finite-state automaton</title>
      <p>An STR locus of an individual haplotype may differ from the reference genome in the number of repeats and in substitutions in individual repeat instances. To represent the variability of each STR, we use a finite-state automaton as shown in <xref rid="btad388-F2" ref-type="fig">Fig. 2</xref>, constructed from a simple regular expression. In our software, we currently support IUPAC nucleotides, regions that can be skipped denoted by {}, and repeats occurring at least once denoted by (). For example, the DM2 locus, which consists of a CAGG repeat, potentially interrupted with CAGA or CAGC, can be modeled as (CAGG{CAGM}), where M is the IUPAC code for nucleotides A or C. Such simple regular expressions are sufficient to represent loci that were of interest in our analyses; however, it is straightforward to extend the approach to more complex regular expressions. In the finite-state automaton, we also include flanking sequences from the reference genome. For each STR locus, two automata are built, one for the forward and one for the reverse strand.</p>
      <fig position="float" id="btad388-F2">
        <label>Figure 2.</label>
        <caption>
          <p>A finite-state automaton modeling a DM1 STR locus (CAG) and its flanking sequences (shown in gray).</p>
        </caption>
        <graphic xlink:href="btad388f2" position="float"/>
      </fig>
      <p>In the next step, we extend the state space of the automaton to the <italic toggle="yes">k</italic>-mer space to keep track of the context of the last <italic toggle="yes">k</italic> nucleotides and transform the original automaton to a new finite-state automaton over <italic toggle="yes">k</italic>-mers (see example in <xref rid="btad388-F3" ref-type="fig">Fig. 3</xref>). Briefly, each path of length <italic toggle="yes">k</italic> in the original automaton will be represented in the new automaton as a state. The two states corresponding to <italic toggle="yes">k</italic>-mers <italic toggle="yes">a</italic> and <italic toggle="yes">b</italic> are connected by a transition if <italic toggle="yes">a</italic> and <italic toggle="yes">b</italic> overlap by <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> nucleotides and if the corresponding transition is also present in the original automaton. After this transformation, we can assign to each state the expected value of the nanopore signal aligned to this state.</p>
      <fig position="float" id="btad388-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Extended finite-state automaton over the <italic toggle="yes">k</italic>-mer space.</p>
        </caption>
        <graphic xlink:href="btad388f3" position="float"/>
      </fig>
      <p>To align the raw read signal <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the finite-state automaton, we use dynamic programming analogous to DTW, where subproblem <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the cost of the best alignment of the first <italic toggle="yes">i</italic> signal points <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> under the condition that we finish in state <italic toggle="yes">j</italic>. Values <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can be computed using the following recurrence:
</p>
      <disp-formula id="E1">
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>M</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>j</mml:mi>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mrow>
                  <mml:mi>min</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mo>{</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo>}</mml:mo>
                  <mml:mo>∪</mml:mo>
                  <mml:mtext>pred</mml:mtext>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mo>{</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>M</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>−</mml:mo>
                  <mml:mn>1</mml:mn>
                  <mml:mo>,</mml:mo>
                  <mml:mi>k</mml:mi>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>}</mml:mo>
            <mml:mo>+</mml:mo>
            <mml:mo>|</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>−</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>e</mml:mi>
                </mml:mrow>
                <mml:mi>j</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>|</mml:mo>
            <mml:mo>.</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>Here, <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mtext>pred</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the set of all predecessor <italic toggle="yes">k</italic>-mers of state <italic toggle="yes">j</italic> in the automaton and <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the expected signal level for the <italic toggle="yes">k</italic>-mer represented by state <italic toggle="yes">j</italic>. A straightforward implementation of this recurrence works in <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">mnd</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time, where <italic toggle="yes">m</italic> is the length of the signal, <italic toggle="yes">n</italic> is the number of states in the automaton, and <italic toggle="yes">d</italic> is the maximum size of <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mtext>pred</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. By counting the number of state transitions and subtracting the flanking sequences, we obtain the estimated length of the STR (see <xref rid="btad388-F4" ref-type="fig">Fig. 4</xref> for an illustration).</p>
      <fig position="float" id="btad388-F4">
        <label>Figure 4.</label>
        <caption>
          <p>A part of the warping path produced by the WarpSTR search algorithm using the state automaton for DM1 locus. States representing <italic toggle="yes">k</italic>-mers are shown on the left, while the part of the dynamic programming matrix is shown on the right. The warping path, i.e. the path through states with the lowest cost is shown as the sequence of lines with corresponding nucleotides.</p>
        </caption>
        <graphic xlink:href="btad388f4" position="float"/>
      </fig>
      <p>When there is no user-defined regular expression modeling the repeat, WarpSTR creates it automatically from the reference genome using an input file listing genomic coordinates of target STRs and their repeat patterns. The software creates the expression using the exact copies of the pattern found in the reference and any incomplete copies or interruptions. For example, if the reference sequence of the STR region was GGG followed by six repeats of the pattern AGAGGG, the automatically generated regular expression was GGG(AGAGGG). These automatically created regular expressions can be adjusted by the user to add flexibility, for example interruptions not present in the reference genome.</p>
    </sec>
    <sec>
      <title>2.3 Signal normalization</title>
      <p>Nanopore signal is scaled and shifted differently in each sequencing read and it needs to be normalized before analysis so that the resulting values can be compared to the expected signal levels defined in the <italic toggle="yes">k</italic>-mer tables. The most common approach is based on the assumption that each read represents a sufficiently long random sequence, and thus basic statistics, such as the mean, the median, and the variance should match across different reads. We apply the median normalization strategy outlined in tombo (<ext-link xlink:href="https://nanoporetech.github.io/tombo/" ext-link-type="uri">https://nanoporetech.github.io/tombo/</ext-link>), which for a raw signal sequence <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> computes values <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mtext>shift</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mn>46.5</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mn>53.5</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mtext>scale</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mtext>shift</mml:mtext><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the <italic toggle="yes">j</italic>th percentile of values <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The normalized signal <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is obtained from <italic toggle="yes">R</italic> as <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mtext>shift</mml:mtext><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mtext>scale</mml:mtext></mml:mrow></mml:math></inline-formula>.</p>
      <p>Characteristics of a signal produced from a long repetitive region may differ substantially from a random sequence, and consequently, the values obtained by the median normalization may not match those in the expected signal level tables. This is likely one of the reasons why basecalling in these regions often exhibits large errors. To address the problem, we first use the standard normalization and our DTW algorithm to obtain an initial alignment of the raw signal to the finite-state automaton. We then polish the signal by a new spline-based polishing procedure (described below and in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S1</xref>), realign the signal to the automaton, and finally determine the final length of the STR.</p>
      <p>To <italic toggle="yes">polish the signal</italic>, we aggregate all signal values aligned to a particular state <italic toggle="yes">j</italic> and compute their mean <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and standard deviation <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). State <italic toggle="yes">j</italic> represents a <italic toggle="yes">k</italic>-mer for which the lookup table of signal values shows an expected value <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Ideally, values <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> will be identical, but in practice they often differ (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>). To address this problem, we estimate a non-linear transformation function <italic toggle="yes">f</italic> interpolating pairs of values <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> by a B-spline (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). Before estimating <italic toggle="yes">f</italic>, we remove the pairs of <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for which <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is too different from <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or where <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is very large, as in such cases, the state <italic toggle="yes">j</italic> most likely contains misaligned signal values. Finally, function <italic toggle="yes">f</italic> is used to transform the original signal values <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the polished signal values <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. <xref rid="btad388-F5" ref-type="fig">Figure 5</xref> illustrates that even small changes resulting from polishing can lead to changes in the subsequent second alignment and the resulting repeat count.</p>
      <fig position="float" id="btad388-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Signal polishing effect on the alignment. Example alignment of the signal to the expected signal from the state automaton before (top) and after polishing (bottom). Before polishing, the normalized signal values are much higher than the expected signal values, and some of these differences decrease after polishing. More importantly, a spurious repeat in the highlighted windows disappears after polishing.</p>
        </caption>
        <graphic xlink:href="btad388f5" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.4 Adaptive restriction of event size</title>
      <p>In some cases, the expected signal levels in different states are very similar to each other, and the noise present in the raw signal may drive the algorithm to match the same real event to multiple distant states by using several very small events to get to a new state. This would overestimate the STR length. We have solved this problem by requiring a given minimum number <italic toggle="yes">s</italic> of signal points to be aligned to each state, eliminating short events altogether.</p>
      <p>Setting this parameter is important for accuracy. Using a too large fixed value may cause short consecutive events to be skipped altogether. To remediate this problem, we set the parameter adaptively, i.e. we decrease the minimum number of signal points adaptively when short consecutive events occur in the signal.</p>
      <p>To find parts of the signal with short consecutive events, we use the result of alignment with <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula>. Alignment result is split into non-overlapping windows containing signal points aligned with <italic toggle="yes">m</italic> events (in experiments, we used <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>). Each such window of <italic toggle="yes">w</italic> signal values is further looped through in an overlapping sliding window manner with a sliding window length 2<italic toggle="yes">p</italic> to obtain <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mi>w</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mi>p</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> subwindows. Similarly as in <xref rid="btad388-B34" ref-type="bibr">Zhang <italic toggle="yes">et al.</italic> (2021)</xref>, for each subwindow <italic toggle="yes">S</italic> of length 2<italic toggle="yes">p</italic> signal values, Welch’s unequal variances <italic toggle="yes">t</italic>-test is calculated as follows: <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, respectively, <italic toggle="yes">y</italic> represents the standard deviation and <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> represents the mean of <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. When an extreme value <italic toggle="yes">t</italic> is calculated, it denotes that there is a significant context change in that subwindow. By simple local optima picking of <italic toggle="yes">t</italic> values from all subwindows, we obtain the set of peaks, denoting the expected number of context changes in the whole window. When the window has more context changes than <italic toggle="yes">m</italic>, WarpSTR presumes that some short events were missed. Thus, in the second signal polishing phase, the values of <italic toggle="yes">s</italic> are decreased by one for those particular windows.</p>
    </sec>
    <sec>
      <title>2.5 Summarizing the results</title>
      <p>After running the search algorithm, we obtain a length estimate for each read overlapping a particular STR locus. For diploid organisms, there could be two different alleles with different lengths (one inherited from each parent). Thus, we want to summarize all of the estimates by either one value (if the locus is homozygous) or two values (if the locus is heterozygous).</p>
      <p>WarpSTR first filters out apparent outliers by removing estimates that are further than two standard deviations from the mean estimate. To separate reads into two groups, we used Bayesian GMMs with a maximum of two components from the Python scikit-learn library (<xref rid="btad388-B25" ref-type="bibr">Pedregosa <italic toggle="yes">et al.</italic> 2011</xref>) (with settings tied covariance type, the weight concentration prior 0.25, 5 initiations, 1000 iterations). WarpSTR declares an STR locus as homozygous if the number of reads in the smaller cluster does not exceed 20% of all unfiltered reads. In this case, the median allele length is reported as the final estimate. Otherwise, the STR locus is declared as heterozygous, and the medians of the two discovered clusters are reported.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Experiments</title>
    <p>We have used publicly available nanopore data sets for human samples NA12878 (<xref rid="btad388-B18" ref-type="bibr">Jain <italic toggle="yes">et al.</italic> 2018</xref>) and NA24385 (<ext-link xlink:href="https://labs.epi2me.io/gm24385_2020.09/" ext-link-type="uri">https://labs.epi2me.io/gm24385_2020.09/</ext-link> and <ext-link xlink:href="https://labs.epi2me.io/gm24385_2020.11/" ext-link-type="uri">https://labs.epi2me.io/gm24385_2020.11/</ext-link>) produced with R9.4.1 nanopore flow cells. We have downloaded the raw fast5 files and BAM files produced using minimap2 and human reference genome version hg38. The NA12878 data set was used for finding the optimal settings of hyperparameters while the NA24385 data set was used for final evaluation only.</p>
    <p>To compare to other tools, which cannot handle complex STRs, we have selected STR regions with a single repeating pattern of length between 2 and 6 (i.e. no homopolymeric repeats); the reference sequence of STR region had to be longer than 30 bp and could not contain a homopolymeric sequence longer than 6. To this end, we have used information provided in HipSTR (<xref rid="btad388-B33" ref-type="bibr">Willems <italic toggle="yes">et al.</italic> 2017</xref>). To preserve the diversity of repeating patterns and genomic locations, we have grouped the loci based on the repeating pattern length and chromosome. The whole set was then randomly subsampled so that the number of loci from each group was at most 10. The resulting data set has 433 STR regions. The input regular expressions required by WarpSTR were automatically generated using the repeat pattern and the reference genome. In the second experiment, we use complex STRs to further demonstrate WarpSTR capabilities.</p>
    <p>High-confidence benchmark VCF files assembled by a complex integrative analysis from multiple sequencing data sets (<xref rid="btad388-B35" ref-type="bibr">Zook <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B31" ref-type="bibr">Wagner <italic toggle="yes">et al.</italic> 2022</xref>) (v.3.3.2 for NA12878, v.4.2.1 for NA24358) were used as a gold standard. Entries in the VCF files represent predicted variations compared to the reference genome, while also showing types of variations (i.e. whether it is a substitution, insertion, or deletion) and genotype information, i.e. whether the variation is homozygous, or heterozygous, in which case it could contain either one or two alternative genotypes.</p>
    <p>As the VCF files stored combined predictions of eight different genotype callers, we first had to calculate the actual allele lengths for each site from the genotype. The allele lengths were computed by adding the length of insertions or subtracting the length of deletions from the reference allele length. For example, in case of reference allele length of 40 with a heterozygous insertion of a single alternative allele of length 4, and a homozygous deletion of 2 nucleotides, the final allele lengths were given as 38 (deletion of 2 nucleotides from the reference length of 40) and 42 (addition of 4 nucleotides and deletion of 2 nucleotides). To discard spurious or low-confidence allele length estimations, caller estimations were combined as follows. If only one caller had allele length estimation, then it was discarded. When two callers had allele length estimations and both of them were equal, then the estimation was taken as the true answer. When <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> callers had estimations and <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> of these callers had the same estimation, then it was taken as the true answer. In other cases or when there were no entries in the VCF file for a locus, the locus was discarded. This resulted in a final set of 241 loci with ground truth information.</p>
    <sec>
      <title>3.1 Obtaining predictions for comparison</title>
      <p>We compare our results to STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>) (v0.4.2.) with default parameters. The length of flanks was set to 150 as recommended by STRique authors. We discarded reads where the repeat region was incorrectly extracted by STRique or with the weak signal alignment scores for flanks (&lt;3.8) or where the resulting prediction was 0. While we wanted to include NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) in the comparison, the tool is no longer maintained and authors recommend to use STRique as a replacement.</p>
      <p>In addition to established tools, we also compare to a straightforward baseline approach, which obtains allele lengths directly from basecalled reads instead of using raw signal analysis. This emulates a straightforward analysis that would be performed by a user unconcerned with the issues introduced in the basecalling process. We first align the left and right flanking sequences of length 110 to each read. The read is used if both flanks map with high enough score and in a correct order. The allele length is then predicted as the distance between the flank matches. These predictions were further processed by filtering and clustering in the same manner as in WarpSTR, to obtain the final result.</p>
    </sec>
    <sec>
      <title>3.2 Results</title>
      <p>First, we compared STR length estimates for individual reads using the mean absolute error (MAE) and median absolute error (MedAE). For length calls <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the gold standard answer <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, these measures are defined as <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mtext>MAE</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>avg</mml:mtext></mml:mrow></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub></mml:mrow><mml:mo>{</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mtext>MedAE</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub></mml:mrow><mml:mo>{</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. The results are shown in <xref rid="btad388-T1" ref-type="table">Table 1</xref>.</p>
      <table-wrap position="float" id="btad388-T1">
        <label>Table 1.</label>
        <caption>
          <p>The performance comparison of WarpSTR, STRique, and the baseline on 241 loci.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1">WarpSTR</th>
              <th rowspan="1" colspan="1">Baseline</th>
              <th rowspan="1" colspan="1">STRique</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Discarded reads</td>
              <td rowspan="1" colspan="1">10.75%</td>
              <td rowspan="1" colspan="1">10.75%</td>
              <td rowspan="1" colspan="1">26.81%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># loci with the lowest MAE</td>
              <td rowspan="1" colspan="1">204</td>
              <td rowspan="1" colspan="1">36</td>
              <td rowspan="1" colspan="1">0</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># loci with the lowest MedAE</td>
              <td rowspan="1" colspan="1">237</td>
              <td rowspan="1" colspan="1">152</td>
              <td rowspan="1" colspan="1">64</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Global MAE</td>
              <td rowspan="1" colspan="1">3.84</td>
              <td rowspan="1" colspan="1">4.89</td>
              <td rowspan="1" colspan="1">334.8</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Global MedAE</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">4</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Average <italic toggle="yes">D</italic></td>
              <td rowspan="1" colspan="1">0.73</td>
              <td rowspan="1" colspan="1">0.96</td>
              <td rowspan="1" colspan="1">11.74</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Median <italic toggle="yes">D</italic></td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># of loci with <italic toggle="yes">D</italic> = 0</td>
              <td rowspan="1" colspan="1">205</td>
              <td rowspan="1" colspan="1">182</td>
              <td rowspan="1" colspan="1">37</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—1 thread</td>
              <td rowspan="1" colspan="1">345.43</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">926.08</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—2 threads</td>
              <td rowspan="1" colspan="1">196.79</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">481.83</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—4 threads</td>
              <td rowspan="1" colspan="1">123.52</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">274.1</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—8 threads</td>
              <td rowspan="1" colspan="1">106.47</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">256.72</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>WarpSTR produced estimates with the lowest MAE in 204 out of 241 loci. STRique performs poorly under this measure due to outliers occurring frequently even after score filtering recommended by the authors (we assume that this may be due to imprecise signal extraction in STRique). MedAE (median-based measure) is less prone to such outliers, but it created many ties between the tools. However, WarpSTR still performed the best in almost all cases. <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref> illustrates the distribution of MedAE across loci. When we combine predictions for reads from all loci to a single global MAE and MedAE score, WarpSTR also performs the best. WarpSTR uses data more efficiently than STRique (only 11% of reads were discarded due to inaccurate alignment of flanking sequences in WarpSTR, while STRique discards more than 26%).</p>
      <p>Interestingly, the MAE for individual loci is influenced by the repeated pattern length (see <xref rid="btad388-F6" ref-type="fig">Fig. 6</xref>). The patterns of length two are in general the most difficult for both methods. In such case, the expected signal has only two alternating values, a pattern easily confused with noise (see also <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2</xref> for another class of difficult patterns). Even in these cases, WarpSTR outperforms basecalling in approximately half of the loci. For longer patterns, the error is generally lower and WarpSTR very consistently produces the best results.</p>
      <fig position="float" id="btad388-F6">
        <label>Figure 6.</label>
        <caption>
          <p>MAE for WarpSTR and basecalling for individual loci colored by repeating pattern length. 25 loci that have very high MAE in both methods are not shown; these are most likely due to large expansions not captured by VCF callers in the gold standard.</p>
        </caption>
        <graphic xlink:href="btad388f6" position="float"/>
      </fig>
      <p>So far we have compared predictions for individual reads. These were then combined to an overall genotype for each tool using the filtering and clustering procedure described in Section 2 (the same method was used for all tools). Let <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> be the final predicted allele lengths and <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> the true alleles, assuming <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. As the error metric, we use <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> if the prediction or the true answer or both are heterozygous, and <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> if both are homozygous. As we can see in <xref rid="btad388-T1" ref-type="table">Table 1</xref>, WarpSTR performs better than other tools, providing perfect results in 85% of the loci (205 out of 241).</p>
      <p><xref rid="btad388-T1" ref-type="table">Table 1</xref> also shows a comparison of the running time. As the tools have very different preprocessing and postprocessing steps, we only compare the core part of the pipelines (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3</xref>). WarpSTR is generally faster than STRique; apart from implementation differences, the main reason is that WarpSTR uses only matching states in the model, whereas STRique also uses insertion and deletion states.</p>
      <p>One of the advantages of WarpSTR is its ability to analyze STRs with a complex structure, compared to other methods, which are limited by a single repeat pattern. We will illustrate this strength on two clinically relevant complex STR loci: HD (Huntington’s disease) (<xref rid="btad388-B1" ref-type="bibr">Andrew <italic toggle="yes">et al.</italic> 1994</xref>) and DM2 (Myotonic dystrophy type 2) (<xref rid="btad388-B28" ref-type="bibr">Radvanszky <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <p>The HD locus consists of AGC and CGC repeats separated by a four-codon sequence AACAGCCGCCAC, which is not prone to repeat. Thus, the input sequence for WarpSTR was (AGC)AACAGCCGCCAC(CGC). For the reads included in the NA24385 sample, the WarpSTR predicted alleles of lengths 84 and 105, which agreed with the gold standard answer. Basecalling prediction was 83 and 102 (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S4</xref>). STRique cannot be run on this locus, as it works only for simple repeat patterns.</p>
      <p>Thanks to the usage of a state automaton, it is possible to count the number of occurrences of each repeating part of the input sequence, as given by parentheses in the WarpSTR input sequence, and these can be further clustered into genotypes. In the gold standard, HD has 17 and 24 repeats of AGC, and 12 repeats of CGC, and using WarpSTR, we came to the same result (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S5</xref>).</p>
      <p>The DM2 locus is particularly complex, consisting of CAGG repeats with CAGA or CAGC interruptions, followed by CAGA repeats and finally CA repeats. The input sequence for WarpSTR was given as ((CAGG)CAGM)(CAGA)(CA), where CAGM denotes both CAGA and CAGC interruptions. <xref rid="btad388-F7" ref-type="fig">Figure 7</xref> shows clustered predictions of DM2 for NA24385 subject split per repeat unit, also listing counts of individual interruptions. The first allele was predicted to contain 16 CAGG repeats, of which 2 are CAGA interruptions and 1 CAGC interruption, followed by 8 CAGA repeats and 21 CA repeats. The second allele was predicted as 18 CAGG repeats, of which 2 are CAGA interruptions and 1 CAGC interruption, followed by 6 CAGA repeats and 25 CA repeats. In the case of DM2 locus, it was not possible to derive the gold standard answer from the benchmark VCF files, since there was no agreement between individual variant callers used in the underlying integrative analysis. The baseline approach also failed, since the apparent errors introduced during basecalling made it impossible to reliably distinguish and count repeat units of this locus. Thus, we have no comparison to the gold standard or other approaches. This further demonstrates the ability of WarpSTR to analyze loci that are difficult to approach by other methods.</p>
      <fig position="float" id="btad388-F7">
        <label>Figure 7.</label>
        <caption>
          <p>Clustered predictions of DM2 for NA24385 subject split per repeat unit.</p>
        </caption>
        <graphic xlink:href="btad388f7" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>In this article, we have investigated the problem of estimating the lengths of STRs from nanopore sequencing reads. Nanopore sequencing is a promising technology, providing very long sequencing reads at a reasonable cost and throughput (a single Promethion flowcell can sequence a human genome at a high depth). Long-read sequences provide a unique opportunity to study the role of STRs in various diseases, since previously employed short-read technology has problems with genotyping larger loci that can be even several hundred bases long.</p>
    <p>Since basecalled reads from nanopore sequencing typically exhibit lower accuracy in STR regions, sometimes to the point at which the repeats are unrecognizable, we opted for analyzing the raw sequencing signal instead. We have adapted a commonly used DTW technique to work with representations of the STRs based on a finite-state automaton and determined the length of an STR by alignment of the raw signal to such an automaton. Proper scaling and shifting of the raw signal are also difficult in regions with repetitive sequences. To address this problem, we have developed a new method for polishing the raw signal using splines. Another innovation is an adaptive setting of the minimum event size for parts of the raw signal. The resulting software tool called WarpSTR is able to genotype STR alleles with high accuracy while outperforming baseline approach employing the basecalled sequences and STRique, another tool recently developed for this purpose.</p>
    <p>In WarpSTR, basecalled sequences are used only to quickly locate reads relevant to a particular locus, as well as to isolate portions of raw sequencing signal that correspond to the STR locus. To this end, we only use flanking sequences, which are typically non-repetitive and easily mappable. Thus, even though WarpSTR uses the basecalled sequences, it does not suffer from the problems related to read misalignment that typically affects approaches based solely on read mapping.</p>
    <p>One obvious extension would be to enrich the underlying finite-state automaton to allow for previously unmapped insertions, deletions, and substitutions. This would likely require employment of a probability-based scoring scheme instead of the simple scoring scheme used in the present work. In fact, defining a probabilistic model for the problem would allow us to use more advanced techniques to deal with high levels of uncertainty in nanopore raw signals, and perhaps allow us to predict a posterior distribution of STR length instead of a single value that can potentially harbor systematic errors.</p>
    <p>Finally, at present, we use a simple clustering scheme to summarize the results as a genotyping call, but perhaps techniques modeling typical errors observed in STR analysis would lead to a further improvement.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad388_Supplementary_Data</label>
      <media xlink:href="btad388_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This research was supported by grants from the Slovak Research Grant Agency VEGA 1/0538/22 (T.V.) and 1/0463/20 (B.B.), by grants from Slovak Research and Development Agency APVV-18-0319 (J.R.) and APVV-18-0239 (T.V.), by funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 872539 (PANGAIA) and No 956229 (ALPACA), by Operational program Integrated Infrastructure within the project ‘Research in the SANET network and possibilities of its further use and development’, ITMS code 313011W988, co-financed by the European Regional Development Fund, by Life Defender—Protector of Life, ITMS code: 313010ASQ6, co-financed by the European Regional Development Fund (Operational Programme Integrated Infrastructure), and by Ministry of Education, Science, Research and Sport of the Slovak Republic under the Contract No. 0827/2021.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad388-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Andrew</surname><given-names>SE</given-names></string-name>, <string-name><surname>Goldberg</surname><given-names>YP</given-names></string-name>, <string-name><surname>Theilmann</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>A CCG repeat polymorphism adjacent to the CAG repeat in the Huntington disease gene: implications for diagnostic accuracy and predictive testing</article-title>. <source>Hum Mol Genet</source><year>1994</year>;<volume>3</volume>:<fpage>65</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">8162053</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bahlo</surname><given-names>M</given-names></string-name>, <string-name><surname>Bennett</surname><given-names>MF</given-names></string-name>, <string-name><surname>Degorski</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Recent advances in the detection of repeat expansions with short-read next-generation sequencing</article-title>. <source>F1000Res</source><year>2018</year>;<volume>7</volume>:<fpage>736</fpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bellman</surname><given-names>R</given-names></string-name>, <string-name><surname>Kalaba</surname><given-names>R.</given-names></string-name></person-group><article-title>On adaptive control processes</article-title>. <source>IRE Trans Automat Contr</source><year>1959</year>;<volume>4</volume>:<fpage>1</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Budiš</surname><given-names>J</given-names></string-name>, <string-name><surname>Kucharík</surname><given-names>M</given-names></string-name>, <string-name><surname>Ďuriš</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Dante: genotyping of known complex and expanded short tandem repeats</article-title>. <source>Bioinformatics</source><year>2019</year>;<volume>35</volume>:<fpage>1310</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30203023</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dashnow</surname><given-names>H</given-names></string-name>, <string-name><surname>Lek</surname><given-names>M</given-names></string-name>, <string-name><surname>Phipson</surname><given-names>B</given-names></string-name></person-group><etal>et al</etal><article-title>STRetch: detecting and discovering pathogenic short tandem repeat expansions</article-title>. <source>Genome Biol</source><year>2018</year>;<volume>19</volume>:<fpage>121</fpage>.<pub-id pub-id-type="pmid">30129428</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>De Roeck</surname><given-names>A</given-names></string-name>, <string-name><surname>De Coster</surname><given-names>W</given-names></string-name>, <string-name><surname>Bossaerts</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>NanoSatellite: accurate characterization of expanded tandem repeat length and sequence through whole genome long-read sequencing on PromethION</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>239</fpage>.<pub-id pub-id-type="pmid">31727106</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Depienne</surname><given-names>C</given-names></string-name>, <string-name><surname>Mandel</surname><given-names>J-L.</given-names></string-name></person-group><article-title>30 years of repeat expansion disorders: what have we learned and what are the remaining challenges?</article-title><source>Am J Hum Genet</source><year>2021</year>;<volume>108</volume>:<fpage>764</fpage>–<lpage>85</lpage>.<pub-id pub-id-type="pmid">33811808</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dolzhenko</surname><given-names>E</given-names></string-name>, <string-name><surname>Deshpande</surname><given-names>V</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>ExpansionHunter: a sequence-graph-based tool to analyze variation in short tandem repeat regions</article-title>. <source>Bioinformatics</source><year>2019</year>;<volume>35</volume>:<fpage>4754</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">31134279</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Doyu</surname><given-names>M</given-names></string-name>, <string-name><surname>Sobue</surname><given-names>G</given-names></string-name>, <string-name><surname>Mukai</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Severity of X-linked recessive bulbospinal neuronopathy correlates with size of the tandem CAG repeat in androgen receptor gene</article-title>. <source>Ann Neurol</source><year>1992</year>;<volume>32</volume>:<fpage>707</fpage>–<lpage>10</lpage>.<pub-id pub-id-type="pmid">1449253</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frith</surname><given-names>MC</given-names></string-name>, <string-name><surname>Kawaguchi</surname><given-names>R.</given-names></string-name></person-group><article-title>Split-alignment of genomes finds orthologies more accurately</article-title>. <source>Genome Biol</source><year>2015</year>;<volume>16</volume>:<fpage>106</fpage>.<pub-id pub-id-type="pmid">25994148</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gelfand</surname><given-names>Y</given-names></string-name>, <string-name><surname>Rodriguez</surname><given-names>A</given-names></string-name>, <string-name><surname>Benson</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>TRDB—the tandem repeats database</article-title>. <source>Nucleic Acids Res</source><year>2007</year>;<volume>35</volume>:<fpage>D80</fpage>–<lpage>87</lpage>.<pub-id pub-id-type="pmid">17175540</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Giesselmann</surname><given-names>P</given-names></string-name>, <string-name><surname>Brändl</surname><given-names>B</given-names></string-name>, <string-name><surname>Raimondeau</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Analysis of short tandem repeat expansions and their methylation state with nanopore sequencing</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>1478</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">31740840</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gymrek</surname><given-names>M.</given-names></string-name></person-group><article-title>A genomic view of short tandem repeats</article-title>. <source>Curr Opin Genet Dev</source><year>2017</year>;<volume>44</volume>:<fpage>9</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">28213161</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gymrek</surname><given-names>M</given-names></string-name>, <string-name><surname>Willems</surname><given-names>T</given-names></string-name>, <string-name><surname>Guilmatre</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Abundant contribution of short tandem repeats to gene expression variation in humans</article-title>. <source>Nat Genet</source><year>2016</year>;<volume>48</volume>:<fpage>22</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">26642241</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Halman</surname><given-names>A</given-names></string-name>, <string-name><surname>Oshlack</surname><given-names>A.</given-names></string-name></person-group><article-title>Accuracy of short tandem repeats genotyping tools in whole exome sequencing data</article-title>. <source>F1000Res</source><year>2020</year>;<volume>9</volume>:<fpage>200</fpage>.<pub-id pub-id-type="pmid">32665844</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>R</given-names></string-name>, <string-name><surname>Li</surname><given-names>Y</given-names></string-name>, <string-name><surname>Gao</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>An accurate and rapid continuous wavelet dynamic time warping algorithm for end-to-end mapping in ultra-long nanopore sequencing</article-title>. <source>Bioinformatics</source><year>2018</year>;<volume>34</volume>:<fpage>i722</fpage>–<lpage>i731</lpage>.<pub-id pub-id-type="pmid">30423085</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>R</given-names></string-name>, <string-name><surname>Wang</surname><given-names>S</given-names></string-name>, <string-name><surname>Gao</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>Novel algorithms for efficient subsequence searching and mapping in nanopore raw signals towards targeted sequencing</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>1333</fpage>–<lpage>43</lpage>.<pub-id pub-id-type="pmid">31593235</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jain</surname><given-names>M</given-names></string-name>, <string-name><surname>Koren</surname><given-names>S</given-names></string-name>, <string-name><surname>Miga</surname><given-names>KH</given-names></string-name></person-group><etal>et al</etal><article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>. <source>Nat Biotechnol</source><year>2018</year>;<volume>36</volume>:<fpage>338</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">29431738</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>P</given-names></string-name>, <string-name><surname>Wang</surname><given-names>D</given-names></string-name></person-group><etal>et al</etal><article-title>Interrogating the “unsequenceable” genomic trinucleotide repeat disorders by long-read sequencing</article-title>. <source>Genome Med</source><year>2017</year>;<volume>9</volume>:<fpage>65</fpage>.<pub-id pub-id-type="pmid">28720120</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Tong</surname><given-names>Y</given-names></string-name>, <string-name><surname>Wang</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-wide detection of short tandem repeat expansions by long-read sequencing</article-title>. <source>BMC Bioinformatics</source><year>2020</year>;<volume>21</volume>:<fpage>542</fpage>.<pub-id pub-id-type="pmid">33371889</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loose</surname><given-names>M</given-names></string-name>, <string-name><surname>Malla</surname><given-names>S</given-names></string-name>, <string-name><surname>Stout</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Real-time selective sequencing using nanopore technology</article-title>. <source>Nat Methods</source><year>2016</year>;<volume>13</volume>:<fpage>751</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">27454285</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Midha</surname><given-names>MK</given-names></string-name>, <string-name><surname>Wu</surname><given-names>M</given-names></string-name>, <string-name><surname>Chiu</surname><given-names>K-P</given-names></string-name></person-group><etal>et al</etal><article-title>Long-read sequencing in deciphering human genetics to a greater depth</article-title>. <source>Hum Genet</source><year>2019</year>;<volume>138</volume>:<fpage>1201</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">31538236</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mitsuhashi</surname><given-names>S</given-names></string-name>, <string-name><surname>Frith</surname><given-names>MC</given-names></string-name>, <string-name><surname>Mizuguchi</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem-genotypes: robust detection of tandem repeat expansions from long DNA reads</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>58</fpage>.<pub-id pub-id-type="pmid">30890163</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Musova</surname><given-names>Z</given-names></string-name>, <string-name><surname>Mazanec</surname><given-names>R</given-names></string-name>, <string-name><surname>Krepelova</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Highly unstable sequence interruptions of the CTG repeat in the myotonic dystrophy gene</article-title>. <source>Am J Med Genet A</source><year>2009</year>;<volume>149A</volume>:<fpage>1365</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">19514047</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Scikit-learn: machine learning in Python</article-title>. <source>J Mach Learning Res</source><year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvansky</surname><given-names>J</given-names></string-name>, <string-name><surname>Kadasi</surname><given-names>L.</given-names></string-name></person-group><article-title>The expanding world of myotonic dystrophies: how can they be detected?</article-title><source>Genet Test Mol Biomarkers</source><year>2010</year>;<volume>14</volume>:<fpage>733</fpage>–<lpage>41</lpage>.<pub-id pub-id-type="pmid">20939737</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvansky</surname><given-names>J</given-names></string-name>, <string-name><surname>Ficek</surname><given-names>A</given-names></string-name>, <string-name><surname>Minarik</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>Effect of unexpected sequence interruptions to conventional PCR and repeat primed PCR in myotonic dystrophy type 1 testing</article-title>. <source>Diagn Mol Pathol</source><year>2011</year>;<volume>20</volume>:<fpage>48</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">21326039</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvanszky</surname><given-names>J</given-names></string-name>, <string-name><surname>Hyblova</surname><given-names>M</given-names></string-name>, <string-name><surname>Radvanska</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Characterisation of non-pathogenic premutation-range myotonic dystrophy type 2 alleles</article-title>. <source>JCM</source><year>2021</year>;<volume>10</volume>:<fpage>3934</fpage>.<pub-id pub-id-type="pmid">34501382</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sedlazeck</surname><given-names>FJ</given-names></string-name>, <string-name><surname>Lee</surname><given-names>H</given-names></string-name>, <string-name><surname>Darby</surname><given-names>CA</given-names></string-name></person-group><etal>et al</etal><article-title>Piercing the dark matter: bioinformatics of long-range sequencing and mapping</article-title>. <source>Nat Rev Genet</source><year>2018</year>;<volume>19</volume>:<fpage>329</fpage>–<lpage>46</lpage>.<pub-id pub-id-type="pmid">29599501</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ummat</surname><given-names>A</given-names></string-name>, <string-name><surname>Bashir</surname><given-names>A.</given-names></string-name></person-group><article-title>Resolving complex tandem repeats with long reads</article-title>. <source>Bioinformatics</source><year>2014</year>;<volume>30</volume>:<fpage>3491</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">25028725</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wagner</surname><given-names>J</given-names></string-name>, <string-name><surname>Olson</surname><given-names>ND</given-names></string-name>, <string-name><surname>Harris</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>Benchmarking challenging small variants with linked and long reads</article-title>. <source>Cell Genomics</source><year>2022</year>;<volume>2</volume>:<fpage>100128</fpage>.<pub-id pub-id-type="pmid">36452119</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wick</surname><given-names>RR</given-names></string-name>, <string-name><surname>Judd</surname><given-names>LM</given-names></string-name>, <string-name><surname>Holt</surname><given-names>KE</given-names></string-name></person-group><etal>et al</etal><article-title>Performance of neural network basecalling tools for oxford nanopore sequencing</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>129</fpage>.<pub-id pub-id-type="pmid">31234903</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Willems</surname><given-names>T</given-names></string-name>, <string-name><surname>Zielinski</surname><given-names>D</given-names></string-name>, <string-name><surname>Yuan</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-wide profiling of heritable and de novo str variations</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>590</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">28436466</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>H</given-names></string-name>, <string-name><surname>Li</surname><given-names>H</given-names></string-name>, <string-name><surname>Jain</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Real-time mapping of nanopore raw signals</article-title>. <source>Bioinformatics</source><year>2021</year>;<volume>37</volume>:<fpage>i477</fpage>–<lpage>i483</lpage>.<pub-id pub-id-type="pmid">34252938</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zook</surname><given-names>JM</given-names></string-name>, <string-name><surname>McDaniel</surname><given-names>J</given-names></string-name>, <string-name><surname>Olson</surname><given-names>ND</given-names></string-name></person-group><etal>et al</etal><article-title>An open resource for accurately benchmarking small variant and reference calls</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>561</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">30936564</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10307940</article-id>
    <article-id pub-id-type="pmid">37326967</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad388</article-id>
    <article-id pub-id-type="publisher-id">btad388</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>WarpSTR: determining tandem repeat lengths using raw nanopore signals</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Sitarčík</surname>
          <given-names>Jozef</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
        <xref rid="btad388-cor1" ref-type="corresp"/>
        <!--jozef.sitarcik@uniba.sk-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3898-3447</contrib-id>
        <name>
          <surname>Vinař</surname>
          <given-names>Tomáš</given-names>
        </name>
        <aff><institution>Faculty of Mathematics, Physics, and Informatics, Comenius University</institution>, Bratislava 842 48, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brejová</surname>
          <given-names>Broňa</given-names>
        </name>
        <aff><institution>Faculty of Mathematics, Physics, and Informatics, Comenius University</institution>, Bratislava 842 48, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Krampl</surname>
          <given-names>Werner</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Department of Molecular Biology, Faculty of Natural Sciences, Comenius University</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Budiš</surname>
          <given-names>Jaroslav</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Radvánszky</surname>
          <given-names>Ján</given-names>
        </name>
        <aff><institution>Comenius University Science Park</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Geneton Ltd</institution>, Bratislava 841 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>Institute of Clinical and Translational Research, Biomedical Research Center, Slovak Academy of Sciences</institution>, Bratislava 845 05, <country country="SK">Slovakia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lucká</surname>
          <given-names>Mária</given-names>
        </name>
        <aff><institution>Slovak Centre of Scientific and Technical Information</institution>, Bratislava 811 04, <country country="SK">Slovakia</country></aff>
        <aff><institution>KInIT—Kempelen Institute of Intelligent Technologies</institution>, <addr-line>Bottova, 7939/2A</addr-line>, Bratislava 811 09, <country country="SK">Slovakia</country></aff>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Alkan</surname>
          <given-names>Can</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad388-cor1">Corresponding author. Comenius University Science Park, Bratislava 841 04, Slovakia. E-mail: <email>jozef.sitarcik@uniba.sk</email> (J.S.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-16">
      <day>16</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>6</issue>
    <elocation-id>btad388</elocation-id>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>06</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>11</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>28</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad388.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Short tandem repeats (STRs) are regions of a genome containing many consecutive copies of the same short motif, possibly with small variations. Analysis of STRs has many clinical uses but is limited by technology mainly due to STRs surpassing the used read length. Nanopore sequencing, as one of long-read sequencing technologies, produces very long reads, thus offering more possibilities to study and analyze STRs. Basecalling of nanopore reads is however particularly unreliable in repeating regions, and therefore direct analysis from raw nanopore data is required.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we present WarpSTR, a novel method for characterizing both simple and complex tandem repeats directly from raw nanopore signals using a finite-state automaton and a search algorithm analogous to dynamic time warping. By applying this approach to determine the lengths of 241 STRs, we demonstrate that our approach decreases the mean absolute error of the STR length estimate compared to basecalling and STRique.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>WarpSTR is freely available at <ext-link xlink:href="https://github.com/fmfi-compbio/warpstr" ext-link-type="uri">https://github.com/fmfi-compbio/warpstr</ext-link></p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>European Union’s Horizon 2020 research and innovation programme</institution>
          </institution-wrap>
        </funding-source>
        <award-id>872539</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Short tandem repeats (STRs) are repetitive genomic elements containing many consecutive copies of the same short motif, typically of length 1–6 bp. The number of consecutive repeats often varies among individuals and is one of the largest sources of intraspecies genetic diversity (<xref rid="btad388-B11" ref-type="bibr">Gelfand <italic toggle="yes">et al.</italic> 2007</xref>, <xref rid="btad388-B14" ref-type="bibr">Gymrek <italic toggle="yes">et al.</italic> 2016</xref>). STRs are involved in the determination of quantitative traits and complex multifactorial diseases, and &gt;50 STR loci in the human genome have been unambiguously associated with severe human monogenic diseases (repeat expansion disorders; REDs). REDs are typically caused by repeat length expansions of certain STRs over a pathogenicity threshold (<xref rid="btad388-B13" ref-type="bibr">Gymrek 2017</xref>, <xref rid="btad388-B7" ref-type="bibr">Depienne and Mandel 2021</xref>). Accurate determination of STR lengths is thus critical to differentiate between normal range, premutation range (having intergenerationally unstable lengths but without clinical symptoms), and pathogenic range alleles, but also because in several REDs, the STR length correlates with disease onset and severity (<xref rid="btad388-B9" ref-type="bibr">Doyu <italic toggle="yes">et al.</italic> 1992</xref>, <xref rid="btad388-B20" ref-type="bibr">Liu <italic toggle="yes">et al.</italic> 2020</xref>).</p>
    <p>Up until recently, the STR lengths were estimated mostly by conventional methods of molecular biology (i.e. Southern blotting and PCR-based techniques). In general, their use is complicated by the highly variable range of allele lengths to be detected, by the immense length of the expanded ones, and by the stable secondary structures formed by these repeats. Moreover, the accuracy of these methods decreases significantly with the length and complexity of the STR motif. Therefore, although several improvements have been introduced to overcome these challenges, there is still no single method that would reliably identify and size all possible ranges of normal and expanded alleles, and it is recommended to use them in different parallel combinations. These methods are however limited to characterization of individual loci and are not suitable for genome-scale screening (<xref rid="btad388-B26" ref-type="bibr">Radvansky and Kadasi 2010</xref>, <xref rid="btad388-B2" ref-type="bibr">Bahlo <italic toggle="yes">et al.</italic> 2018</xref>). In contrast, short-read sequencing allows to study STRs in more detail and on the whole-genome scale. However, properly genotyping STRs of lengths surpassing the used read length is difficult and at best limited to the identification of the presence of such alleles, but not their size (<xref rid="btad388-B33" ref-type="bibr">Willems <italic toggle="yes">et al.</italic> 2017</xref>, <xref rid="btad388-B5" ref-type="bibr">Dashnow <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad388-B4" ref-type="bibr">Budiš <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B8" ref-type="bibr">Dolzhenko <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B15" ref-type="bibr">Halman and Oshlack 2020</xref>).</p>
    <p>Recently, long-read technologies (such as Pacific Biosciences, and Oxford Nanopore) offered new possibilities for studying even larger expanded STRs (<xref rid="btad388-B29" ref-type="bibr">Sedlazeck <italic toggle="yes">et al.</italic> 2018</xref>). However, higher sequencing error rates pose additional challenges. One of the first tools using long reads, PacmonSTR (<xref rid="btad388-B30" ref-type="bibr">Ummat and Bashir 2014</xref>), modifies a traditional alignment algorithm to take higher error rates of Pacific Biosciences reads into account. The resulting estimate of the repeat number is subsequently corrected by a pair-hidden Markov model. RepeatHMM (<xref rid="btad388-B19" ref-type="bibr">Liu <italic toggle="yes">et al.</italic> 2017</xref>) performs error correction of repeat sequences in Oxford Nanopore reads by aligning them with the template of perfect repeats of the specified pattern using asymmetric sequence alignment. Then, RepeatHMM uses a hidden Markov model (HMM) to estimate the number of repeats directly from the corrected read sequences. In both tools, the results from individual reads are pooled together using Gaussian mixture models (GMMs) to predict the final genotype. TandemGenotypes (<xref rid="btad388-B23" ref-type="bibr">Mitsuhashi <italic toggle="yes">et al.</italic> 2019</xref>) uses a tailored alignment strategy based on last-split (<xref rid="btad388-B10" ref-type="bibr">Frith and Kawaguchi 2015</xref>) to obtain more confident alignments between the reference repeat region and reads. The change in the repeat number present in the read compared to the reference is then computed as a sum of contributions from the number of unaligned bases in the reference and the read.</p>
    <p>Other tools, such as NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) and STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>), attempt to overcome high error rates in nanopore sequences by using the raw sequencing signal. The raw signal is comprised of measurements of electrical current as DNA passes through a nanopore. The signal is affected by a context of <italic toggle="yes">k</italic> nucleotides (typically <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>) and each context is read ∼8–9 times on average. The portion of the signal corresponding to the shift by one base is called an <italic toggle="yes">event</italic>. Typically, the raw signal is first translated into the DNA sequence by a basecalling software using complex machine learning models. The above-mentioned tools use the raw signal to overcome errors introduced through imperfect basecalling.</p>
    <p>NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) uses an expected signal corresponding to five copies (and later three copies) of the repeating motif to match sections of the real signal using a dynamic time warping (DTW) algorithm (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>). The results are clustered into two clusters to obtain the final copy number call. STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>) uses both flanking sequences and the repeating pattern to build a profile HMM, where match states correspond to <italic toggle="yes">k</italic>-mers in these sequences; the STRique model does not allow for variation within the repeat. The copy number is then determined by counting match states as the raw signal is aligned to the profile HMM.</p>
    <p>We present a novel approach for the length determination of short tandem repeats (STRs) in a genome from the raw signal of nanopore sequencing reads. Our method models an STR locus using a finite-state automaton and uses an adapted version of the DTW algorithm (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>) to find an accurate sequence of the read within the STR locus. Our approach improves on the methods introduced by NanoSatellite and STRique in several ways. First, we recognize that basecalling is typically much more accurate in non-repeating regions (such as sequences flanking an STR) than in regions containing short repeats, and thus, it is more efficient (and even more accurate) to simply use basecalled sequences to locate the flanks and subsequently isolate the signal corresponding to the STR locus. Second, instead of using greedy heuristics as in NanoSatellite, we model the whole STR locus by a finite-state automaton and modify the DTW algorithm to align the full length of the signal corresponding to the STR locus to this automaton, determining the corresponding sequence length by the number of states passed by the alignment path. This is similar to the STRique profile HMM; however, there are several major differences. First, in WarpSTR, the finite-state automaton enables much greater customization. This allows us to model more complex STRs that include combinations of heterogeneous motifs or are interrupted, which are common occurrences in medically relevant STRs (<xref rid="btad388-B1" ref-type="bibr">Andrew <italic toggle="yes">et al.</italic> 1994</xref>, <xref rid="btad388-B24" ref-type="bibr">Musova <italic toggle="yes">et al.</italic> 2009</xref>, <xref rid="btad388-B27" ref-type="bibr">Radvansky <italic toggle="yes">et al.</italic> 2011</xref>, <xref rid="btad388-B28" ref-type="bibr">Radvanszky <italic toggle="yes">et al.</italic> 2021</xref>). Second, WarpSTR attenuates the signal normalization problem using a novel signal polishing phase. Finally, we use Bayesian GMMs to summarize the information from multiple overlapping reads and to derive the final genotypes. Using nanopore reads from whole-genome sequencing of human genomes and comparing our results to high-confidence variant calls determined by integrative approaches, we determine that our approach is significantly more accurate than STRique.</p>
  </sec>
  <sec>
    <title>2 Methods</title>
    <p>The speed of DNA passing through a pore varies significantly, which makes signal-based analysis challenging (<xref rid="btad388-B22" ref-type="bibr">Midha <italic toggle="yes">et al.</italic> 2019</xref>). To address this problem, DTW technique (<xref rid="btad388-B3" ref-type="bibr">Bellman and Kalaba 1959</xref>), which has been used e.g. in speech processing, has been adapted to nanopore signal analysis (<xref rid="btad388-B21" ref-type="bibr">Loose <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad388-B16" ref-type="bibr">Han <italic toggle="yes">et al.</italic> 2018</xref>, <xref rid="btad388-B17" ref-type="bibr">2020</xref>). Briefly, DTW uses dynamic programming to find the lowest cost alignment between two sequences of signal values <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. To model variable signal speed, each signal value from <italic toggle="yes">S</italic> can be aligned to arbitrarily many values from <italic toggle="yes">T</italic>, and vice versa. The dynamic programming computes a two-dimensional matrix <italic toggle="yes">M</italic>, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the cost of the best alignment of <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, using a recurrent formula <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>; here, <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a distance between signal values <italic toggle="yes">s</italic> and <italic toggle="yes">t</italic>. At the end of the computation, the cost of the best alignment is represented by <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the best alignment can be recovered using standard back-tracing techniques used in dynamic programming.</p>
    <p>To align a known DNA sequence <italic toggle="yes">S</italic> to a raw signal by DTW, we first estimate an ‘ideal’ signal observed by sequencing <italic toggle="yes">S</italic>. Namely, we decompose string <italic toggle="yes">S</italic> to a sequence of overlapping <italic toggle="yes">k</italic>-mers and for each <italic toggle="yes">k</italic>-mer use the value from the lookup table of the expected signal values provided by Oxford Nanopore Technologies (<ext-link xlink:href="https://github.com/nanoporetech/kmer_models/" ext-link-type="uri">https://github.com/nanoporetech/kmer_models/</ext-link>). This signal can be then aligned to the real signal using dynamic programming, minimizing an error function based on the difference between the two compared signal points. In contrast to sequence alignment, alignment of multiple points in one signal to one point in the other signal is not penalized by DTW due to the expected wide variation in signal speeds.</p>
    <p>In our work, we adapt DTW for alignment of a repetitive sequence pattern of an undetermined length. Using the alignment of the known sequence pattern to the raw signal helps to inform the decisions in case of ambiguities and ultimately results in a more accurate interpretation of the raw signal. Once the pattern, representing an STR, is aligned to the raw signal, its instantiation is fixed, and the length of the instantiation determines the length of the STR represented by the nanopore read.</p>
    <sec>
      <title>2.1 WarpSTR overview</title>
      <p>WarpSTR consists of a sequence of steps that include locating reads corresponding to a given STR locus, estimating STR locus length in each of the reads independently (by aligning the raw signal to a finite-state automaton), and finally summarizing the results using a Bayesian GMM. <xref rid="btad388-F1" ref-type="fig">Figure 1</xref> summarizes the whole pipeline; individual steps of the pipeline are described in the following sections. WarpSTR assumes that the input data were preprocessed by basecalling the raw reads and mapped to a reference genome using standard methods. For each read overlapping the target STR locus given by its genomic coordinates, the flanking sequences are then found in the basecalled sequence using local alignment, and the mapping between the called bases and the raw signal, which is an interim output of the Guppy basecaller (<xref rid="btad388-B32" ref-type="bibr">Wick <italic toggle="yes">et al.</italic> 2019</xref>), is used to locate the corresponding signal positions. In the experiments, we have used Guppy v.4.0.15 and the flanking sequence length of 110 bases.</p>
      <fig position="float" id="btad388-F1">
        <label>Figure 1.</label>
        <caption>
          <p>Overview of the WarpSTR analysis.</p>
        </caption>
        <graphic xlink:href="btad388f1" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 STR representation by a finite-state automaton</title>
      <p>An STR locus of an individual haplotype may differ from the reference genome in the number of repeats and in substitutions in individual repeat instances. To represent the variability of each STR, we use a finite-state automaton as shown in <xref rid="btad388-F2" ref-type="fig">Fig. 2</xref>, constructed from a simple regular expression. In our software, we currently support IUPAC nucleotides, regions that can be skipped denoted by {}, and repeats occurring at least once denoted by (). For example, the DM2 locus, which consists of a CAGG repeat, potentially interrupted with CAGA or CAGC, can be modeled as (CAGG{CAGM}), where M is the IUPAC code for nucleotides A or C. Such simple regular expressions are sufficient to represent loci that were of interest in our analyses; however, it is straightforward to extend the approach to more complex regular expressions. In the finite-state automaton, we also include flanking sequences from the reference genome. For each STR locus, two automata are built, one for the forward and one for the reverse strand.</p>
      <fig position="float" id="btad388-F2">
        <label>Figure 2.</label>
        <caption>
          <p>A finite-state automaton modeling a DM1 STR locus (CAG) and its flanking sequences (shown in gray).</p>
        </caption>
        <graphic xlink:href="btad388f2" position="float"/>
      </fig>
      <p>In the next step, we extend the state space of the automaton to the <italic toggle="yes">k</italic>-mer space to keep track of the context of the last <italic toggle="yes">k</italic> nucleotides and transform the original automaton to a new finite-state automaton over <italic toggle="yes">k</italic>-mers (see example in <xref rid="btad388-F3" ref-type="fig">Fig. 3</xref>). Briefly, each path of length <italic toggle="yes">k</italic> in the original automaton will be represented in the new automaton as a state. The two states corresponding to <italic toggle="yes">k</italic>-mers <italic toggle="yes">a</italic> and <italic toggle="yes">b</italic> are connected by a transition if <italic toggle="yes">a</italic> and <italic toggle="yes">b</italic> overlap by <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> nucleotides and if the corresponding transition is also present in the original automaton. After this transformation, we can assign to each state the expected value of the nanopore signal aligned to this state.</p>
      <fig position="float" id="btad388-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Extended finite-state automaton over the <italic toggle="yes">k</italic>-mer space.</p>
        </caption>
        <graphic xlink:href="btad388f3" position="float"/>
      </fig>
      <p>To align the raw read signal <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the finite-state automaton, we use dynamic programming analogous to DTW, where subproblem <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> represents the cost of the best alignment of the first <italic toggle="yes">i</italic> signal points <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> under the condition that we finish in state <italic toggle="yes">j</italic>. Values <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can be computed using the following recurrence:
</p>
      <disp-formula id="E1">
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>M</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>j</mml:mi>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mrow>
                  <mml:mi>min</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>k</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mo>{</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo>}</mml:mo>
                  <mml:mo>∪</mml:mo>
                  <mml:mtext>pred</mml:mtext>
                  <mml:mo stretchy="false">(</mml:mo>
                  <mml:mi>j</mml:mi>
                  <mml:mo stretchy="false">)</mml:mo>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mo>{</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>M</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>−</mml:mo>
                  <mml:mn>1</mml:mn>
                  <mml:mo>,</mml:mo>
                  <mml:mi>k</mml:mi>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>}</mml:mo>
            <mml:mo>+</mml:mo>
            <mml:mo>|</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>−</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>e</mml:mi>
                </mml:mrow>
                <mml:mi>j</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>|</mml:mo>
            <mml:mo>.</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>Here, <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mtext>pred</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the set of all predecessor <italic toggle="yes">k</italic>-mers of state <italic toggle="yes">j</italic> in the automaton and <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the expected signal level for the <italic toggle="yes">k</italic>-mer represented by state <italic toggle="yes">j</italic>. A straightforward implementation of this recurrence works in <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">mnd</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> time, where <italic toggle="yes">m</italic> is the length of the signal, <italic toggle="yes">n</italic> is the number of states in the automaton, and <italic toggle="yes">d</italic> is the maximum size of <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mtext>pred</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. By counting the number of state transitions and subtracting the flanking sequences, we obtain the estimated length of the STR (see <xref rid="btad388-F4" ref-type="fig">Fig. 4</xref> for an illustration).</p>
      <fig position="float" id="btad388-F4">
        <label>Figure 4.</label>
        <caption>
          <p>A part of the warping path produced by the WarpSTR search algorithm using the state automaton for DM1 locus. States representing <italic toggle="yes">k</italic>-mers are shown on the left, while the part of the dynamic programming matrix is shown on the right. The warping path, i.e. the path through states with the lowest cost is shown as the sequence of lines with corresponding nucleotides.</p>
        </caption>
        <graphic xlink:href="btad388f4" position="float"/>
      </fig>
      <p>When there is no user-defined regular expression modeling the repeat, WarpSTR creates it automatically from the reference genome using an input file listing genomic coordinates of target STRs and their repeat patterns. The software creates the expression using the exact copies of the pattern found in the reference and any incomplete copies or interruptions. For example, if the reference sequence of the STR region was GGG followed by six repeats of the pattern AGAGGG, the automatically generated regular expression was GGG(AGAGGG). These automatically created regular expressions can be adjusted by the user to add flexibility, for example interruptions not present in the reference genome.</p>
    </sec>
    <sec>
      <title>2.3 Signal normalization</title>
      <p>Nanopore signal is scaled and shifted differently in each sequencing read and it needs to be normalized before analysis so that the resulting values can be compared to the expected signal levels defined in the <italic toggle="yes">k</italic>-mer tables. The most common approach is based on the assumption that each read represents a sufficiently long random sequence, and thus basic statistics, such as the mean, the median, and the variance should match across different reads. We apply the median normalization strategy outlined in tombo (<ext-link xlink:href="https://nanoporetech.github.io/tombo/" ext-link-type="uri">https://nanoporetech.github.io/tombo/</ext-link>), which for a raw signal sequence <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> computes values <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mtext>shift</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mn>46.5</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mn>53.5</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mtext>scale</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mtext>shift</mml:mtext><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>perc</mml:mtext></mml:mrow></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the <italic toggle="yes">j</italic>th percentile of values <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The normalized signal <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>…</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is obtained from <italic toggle="yes">R</italic> as <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mtext>shift</mml:mtext><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mtext>scale</mml:mtext></mml:mrow></mml:math></inline-formula>.</p>
      <p>Characteristics of a signal produced from a long repetitive region may differ substantially from a random sequence, and consequently, the values obtained by the median normalization may not match those in the expected signal level tables. This is likely one of the reasons why basecalling in these regions often exhibits large errors. To address the problem, we first use the standard normalization and our DTW algorithm to obtain an initial alignment of the raw signal to the finite-state automaton. We then polish the signal by a new spline-based polishing procedure (described below and in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S1</xref>), realign the signal to the automaton, and finally determine the final length of the STR.</p>
      <p>To <italic toggle="yes">polish the signal</italic>, we aggregate all signal values aligned to a particular state <italic toggle="yes">j</italic> and compute their mean <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and standard deviation <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). State <italic toggle="yes">j</italic> represents a <italic toggle="yes">k</italic>-mer for which the lookup table of signal values shows an expected value <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Ideally, values <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> will be identical, but in practice they often differ (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>). To address this problem, we estimate a non-linear transformation function <italic toggle="yes">f</italic> interpolating pairs of values <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> by a B-spline (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). Before estimating <italic toggle="yes">f</italic>, we remove the pairs of <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for which <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is too different from <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or where <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is very large, as in such cases, the state <italic toggle="yes">j</italic> most likely contains misaligned signal values. Finally, function <italic toggle="yes">f</italic> is used to transform the original signal values <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the polished signal values <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. <xref rid="btad388-F5" ref-type="fig">Figure 5</xref> illustrates that even small changes resulting from polishing can lead to changes in the subsequent second alignment and the resulting repeat count.</p>
      <fig position="float" id="btad388-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Signal polishing effect on the alignment. Example alignment of the signal to the expected signal from the state automaton before (top) and after polishing (bottom). Before polishing, the normalized signal values are much higher than the expected signal values, and some of these differences decrease after polishing. More importantly, a spurious repeat in the highlighted windows disappears after polishing.</p>
        </caption>
        <graphic xlink:href="btad388f5" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>2.4 Adaptive restriction of event size</title>
      <p>In some cases, the expected signal levels in different states are very similar to each other, and the noise present in the raw signal may drive the algorithm to match the same real event to multiple distant states by using several very small events to get to a new state. This would overestimate the STR length. We have solved this problem by requiring a given minimum number <italic toggle="yes">s</italic> of signal points to be aligned to each state, eliminating short events altogether.</p>
      <p>Setting this parameter is important for accuracy. Using a too large fixed value may cause short consecutive events to be skipped altogether. To remediate this problem, we set the parameter adaptively, i.e. we decrease the minimum number of signal points adaptively when short consecutive events occur in the signal.</p>
      <p>To find parts of the signal with short consecutive events, we use the result of alignment with <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula>. Alignment result is split into non-overlapping windows containing signal points aligned with <italic toggle="yes">m</italic> events (in experiments, we used <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>). Each such window of <italic toggle="yes">w</italic> signal values is further looped through in an overlapping sliding window manner with a sliding window length 2<italic toggle="yes">p</italic> to obtain <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mi>w</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mi>p</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> subwindows. Similarly as in <xref rid="btad388-B34" ref-type="bibr">Zhang <italic toggle="yes">et al.</italic> (2021)</xref>, for each subwindow <italic toggle="yes">S</italic> of length 2<italic toggle="yes">p</italic> signal values, Welch’s unequal variances <italic toggle="yes">t</italic>-test is calculated as follows: <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, respectively, <italic toggle="yes">y</italic> represents the standard deviation and <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> represents the mean of <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. When an extreme value <italic toggle="yes">t</italic> is calculated, it denotes that there is a significant context change in that subwindow. By simple local optima picking of <italic toggle="yes">t</italic> values from all subwindows, we obtain the set of peaks, denoting the expected number of context changes in the whole window. When the window has more context changes than <italic toggle="yes">m</italic>, WarpSTR presumes that some short events were missed. Thus, in the second signal polishing phase, the values of <italic toggle="yes">s</italic> are decreased by one for those particular windows.</p>
    </sec>
    <sec>
      <title>2.5 Summarizing the results</title>
      <p>After running the search algorithm, we obtain a length estimate for each read overlapping a particular STR locus. For diploid organisms, there could be two different alleles with different lengths (one inherited from each parent). Thus, we want to summarize all of the estimates by either one value (if the locus is homozygous) or two values (if the locus is heterozygous).</p>
      <p>WarpSTR first filters out apparent outliers by removing estimates that are further than two standard deviations from the mean estimate. To separate reads into two groups, we used Bayesian GMMs with a maximum of two components from the Python scikit-learn library (<xref rid="btad388-B25" ref-type="bibr">Pedregosa <italic toggle="yes">et al.</italic> 2011</xref>) (with settings tied covariance type, the weight concentration prior 0.25, 5 initiations, 1000 iterations). WarpSTR declares an STR locus as homozygous if the number of reads in the smaller cluster does not exceed 20% of all unfiltered reads. In this case, the median allele length is reported as the final estimate. Otherwise, the STR locus is declared as heterozygous, and the medians of the two discovered clusters are reported.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Experiments</title>
    <p>We have used publicly available nanopore data sets for human samples NA12878 (<xref rid="btad388-B18" ref-type="bibr">Jain <italic toggle="yes">et al.</italic> 2018</xref>) and NA24385 (<ext-link xlink:href="https://labs.epi2me.io/gm24385_2020.09/" ext-link-type="uri">https://labs.epi2me.io/gm24385_2020.09/</ext-link> and <ext-link xlink:href="https://labs.epi2me.io/gm24385_2020.11/" ext-link-type="uri">https://labs.epi2me.io/gm24385_2020.11/</ext-link>) produced with R9.4.1 nanopore flow cells. We have downloaded the raw fast5 files and BAM files produced using minimap2 and human reference genome version hg38. The NA12878 data set was used for finding the optimal settings of hyperparameters while the NA24385 data set was used for final evaluation only.</p>
    <p>To compare to other tools, which cannot handle complex STRs, we have selected STR regions with a single repeating pattern of length between 2 and 6 (i.e. no homopolymeric repeats); the reference sequence of STR region had to be longer than 30 bp and could not contain a homopolymeric sequence longer than 6. To this end, we have used information provided in HipSTR (<xref rid="btad388-B33" ref-type="bibr">Willems <italic toggle="yes">et al.</italic> 2017</xref>). To preserve the diversity of repeating patterns and genomic locations, we have grouped the loci based on the repeating pattern length and chromosome. The whole set was then randomly subsampled so that the number of loci from each group was at most 10. The resulting data set has 433 STR regions. The input regular expressions required by WarpSTR were automatically generated using the repeat pattern and the reference genome. In the second experiment, we use complex STRs to further demonstrate WarpSTR capabilities.</p>
    <p>High-confidence benchmark VCF files assembled by a complex integrative analysis from multiple sequencing data sets (<xref rid="btad388-B35" ref-type="bibr">Zook <italic toggle="yes">et al.</italic> 2019</xref>, <xref rid="btad388-B31" ref-type="bibr">Wagner <italic toggle="yes">et al.</italic> 2022</xref>) (v.3.3.2 for NA12878, v.4.2.1 for NA24358) were used as a gold standard. Entries in the VCF files represent predicted variations compared to the reference genome, while also showing types of variations (i.e. whether it is a substitution, insertion, or deletion) and genotype information, i.e. whether the variation is homozygous, or heterozygous, in which case it could contain either one or two alternative genotypes.</p>
    <p>As the VCF files stored combined predictions of eight different genotype callers, we first had to calculate the actual allele lengths for each site from the genotype. The allele lengths were computed by adding the length of insertions or subtracting the length of deletions from the reference allele length. For example, in case of reference allele length of 40 with a heterozygous insertion of a single alternative allele of length 4, and a homozygous deletion of 2 nucleotides, the final allele lengths were given as 38 (deletion of 2 nucleotides from the reference length of 40) and 42 (addition of 4 nucleotides and deletion of 2 nucleotides). To discard spurious or low-confidence allele length estimations, caller estimations were combined as follows. If only one caller had allele length estimation, then it was discarded. When two callers had allele length estimations and both of them were equal, then the estimation was taken as the true answer. When <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> callers had estimations and <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> of these callers had the same estimation, then it was taken as the true answer. In other cases or when there were no entries in the VCF file for a locus, the locus was discarded. This resulted in a final set of 241 loci with ground truth information.</p>
    <sec>
      <title>3.1 Obtaining predictions for comparison</title>
      <p>We compare our results to STRique (<xref rid="btad388-B12" ref-type="bibr">Giesselmann <italic toggle="yes">et al.</italic> 2019</xref>) (v0.4.2.) with default parameters. The length of flanks was set to 150 as recommended by STRique authors. We discarded reads where the repeat region was incorrectly extracted by STRique or with the weak signal alignment scores for flanks (&lt;3.8) or where the resulting prediction was 0. While we wanted to include NanoSatellite (<xref rid="btad388-B6" ref-type="bibr">De Roeck <italic toggle="yes">et al.</italic> 2019</xref>) in the comparison, the tool is no longer maintained and authors recommend to use STRique as a replacement.</p>
      <p>In addition to established tools, we also compare to a straightforward baseline approach, which obtains allele lengths directly from basecalled reads instead of using raw signal analysis. This emulates a straightforward analysis that would be performed by a user unconcerned with the issues introduced in the basecalling process. We first align the left and right flanking sequences of length 110 to each read. The read is used if both flanks map with high enough score and in a correct order. The allele length is then predicted as the distance between the flank matches. These predictions were further processed by filtering and clustering in the same manner as in WarpSTR, to obtain the final result.</p>
    </sec>
    <sec>
      <title>3.2 Results</title>
      <p>First, we compared STR length estimates for individual reads using the mean absolute error (MAE) and median absolute error (MedAE). For length calls <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the gold standard answer <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, these measures are defined as <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mtext>MAE</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>avg</mml:mtext></mml:mrow></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub></mml:mrow><mml:mo>{</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mtext>MedAE</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>median</mml:mtext></mml:mrow></mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:msub></mml:mrow><mml:mo>{</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. The results are shown in <xref rid="btad388-T1" ref-type="table">Table 1</xref>.</p>
      <table-wrap position="float" id="btad388-T1">
        <label>Table 1.</label>
        <caption>
          <p>The performance comparison of WarpSTR, STRique, and the baseline on 241 loci.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1">WarpSTR</th>
              <th rowspan="1" colspan="1">Baseline</th>
              <th rowspan="1" colspan="1">STRique</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Discarded reads</td>
              <td rowspan="1" colspan="1">10.75%</td>
              <td rowspan="1" colspan="1">10.75%</td>
              <td rowspan="1" colspan="1">26.81%</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># loci with the lowest MAE</td>
              <td rowspan="1" colspan="1">204</td>
              <td rowspan="1" colspan="1">36</td>
              <td rowspan="1" colspan="1">0</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># loci with the lowest MedAE</td>
              <td rowspan="1" colspan="1">237</td>
              <td rowspan="1" colspan="1">152</td>
              <td rowspan="1" colspan="1">64</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Global MAE</td>
              <td rowspan="1" colspan="1">3.84</td>
              <td rowspan="1" colspan="1">4.89</td>
              <td rowspan="1" colspan="1">334.8</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Global MedAE</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">4</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Average <italic toggle="yes">D</italic></td>
              <td rowspan="1" colspan="1">0.73</td>
              <td rowspan="1" colspan="1">0.96</td>
              <td rowspan="1" colspan="1">11.74</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Median <italic toggle="yes">D</italic></td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"># of loci with <italic toggle="yes">D</italic> = 0</td>
              <td rowspan="1" colspan="1">205</td>
              <td rowspan="1" colspan="1">182</td>
              <td rowspan="1" colspan="1">37</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—1 thread</td>
              <td rowspan="1" colspan="1">345.43</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">926.08</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—2 threads</td>
              <td rowspan="1" colspan="1">196.79</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">481.83</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—4 threads</td>
              <td rowspan="1" colspan="1">123.52</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">274.1</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Running time—8 threads</td>
              <td rowspan="1" colspan="1">106.47</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">256.72</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>WarpSTR produced estimates with the lowest MAE in 204 out of 241 loci. STRique performs poorly under this measure due to outliers occurring frequently even after score filtering recommended by the authors (we assume that this may be due to imprecise signal extraction in STRique). MedAE (median-based measure) is less prone to such outliers, but it created many ties between the tools. However, WarpSTR still performed the best in almost all cases. <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref> illustrates the distribution of MedAE across loci. When we combine predictions for reads from all loci to a single global MAE and MedAE score, WarpSTR also performs the best. WarpSTR uses data more efficiently than STRique (only 11% of reads were discarded due to inaccurate alignment of flanking sequences in WarpSTR, while STRique discards more than 26%).</p>
      <p>Interestingly, the MAE for individual loci is influenced by the repeated pattern length (see <xref rid="btad388-F6" ref-type="fig">Fig. 6</xref>). The patterns of length two are in general the most difficult for both methods. In such case, the expected signal has only two alternating values, a pattern easily confused with noise (see also <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2</xref> for another class of difficult patterns). Even in these cases, WarpSTR outperforms basecalling in approximately half of the loci. For longer patterns, the error is generally lower and WarpSTR very consistently produces the best results.</p>
      <fig position="float" id="btad388-F6">
        <label>Figure 6.</label>
        <caption>
          <p>MAE for WarpSTR and basecalling for individual loci colored by repeating pattern length. 25 loci that have very high MAE in both methods are not shown; these are most likely due to large expansions not captured by VCF callers in the gold standard.</p>
        </caption>
        <graphic xlink:href="btad388f6" position="float"/>
      </fig>
      <p>So far we have compared predictions for individual reads. These were then combined to an overall genotype for each tool using the filtering and clustering procedure described in Section 2 (the same method was used for all tools). Let <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> be the final predicted allele lengths and <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> the true alleles, assuming <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. As the error metric, we use <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> if the prediction or the true answer or both are heterozygous, and <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mi>D</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> if both are homozygous. As we can see in <xref rid="btad388-T1" ref-type="table">Table 1</xref>, WarpSTR performs better than other tools, providing perfect results in 85% of the loci (205 out of 241).</p>
      <p><xref rid="btad388-T1" ref-type="table">Table 1</xref> also shows a comparison of the running time. As the tools have very different preprocessing and postprocessing steps, we only compare the core part of the pipelines (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3</xref>). WarpSTR is generally faster than STRique; apart from implementation differences, the main reason is that WarpSTR uses only matching states in the model, whereas STRique also uses insertion and deletion states.</p>
      <p>One of the advantages of WarpSTR is its ability to analyze STRs with a complex structure, compared to other methods, which are limited by a single repeat pattern. We will illustrate this strength on two clinically relevant complex STR loci: HD (Huntington’s disease) (<xref rid="btad388-B1" ref-type="bibr">Andrew <italic toggle="yes">et al.</italic> 1994</xref>) and DM2 (Myotonic dystrophy type 2) (<xref rid="btad388-B28" ref-type="bibr">Radvanszky <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <p>The HD locus consists of AGC and CGC repeats separated by a four-codon sequence AACAGCCGCCAC, which is not prone to repeat. Thus, the input sequence for WarpSTR was (AGC)AACAGCCGCCAC(CGC). For the reads included in the NA24385 sample, the WarpSTR predicted alleles of lengths 84 and 105, which agreed with the gold standard answer. Basecalling prediction was 83 and 102 (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S4</xref>). STRique cannot be run on this locus, as it works only for simple repeat patterns.</p>
      <p>Thanks to the usage of a state automaton, it is possible to count the number of occurrences of each repeating part of the input sequence, as given by parentheses in the WarpSTR input sequence, and these can be further clustered into genotypes. In the gold standard, HD has 17 and 24 repeats of AGC, and 12 repeats of CGC, and using WarpSTR, we came to the same result (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S5</xref>).</p>
      <p>The DM2 locus is particularly complex, consisting of CAGG repeats with CAGA or CAGC interruptions, followed by CAGA repeats and finally CA repeats. The input sequence for WarpSTR was given as ((CAGG)CAGM)(CAGA)(CA), where CAGM denotes both CAGA and CAGC interruptions. <xref rid="btad388-F7" ref-type="fig">Figure 7</xref> shows clustered predictions of DM2 for NA24385 subject split per repeat unit, also listing counts of individual interruptions. The first allele was predicted to contain 16 CAGG repeats, of which 2 are CAGA interruptions and 1 CAGC interruption, followed by 8 CAGA repeats and 21 CA repeats. The second allele was predicted as 18 CAGG repeats, of which 2 are CAGA interruptions and 1 CAGC interruption, followed by 6 CAGA repeats and 25 CA repeats. In the case of DM2 locus, it was not possible to derive the gold standard answer from the benchmark VCF files, since there was no agreement between individual variant callers used in the underlying integrative analysis. The baseline approach also failed, since the apparent errors introduced during basecalling made it impossible to reliably distinguish and count repeat units of this locus. Thus, we have no comparison to the gold standard or other approaches. This further demonstrates the ability of WarpSTR to analyze loci that are difficult to approach by other methods.</p>
      <fig position="float" id="btad388-F7">
        <label>Figure 7.</label>
        <caption>
          <p>Clustered predictions of DM2 for NA24385 subject split per repeat unit.</p>
        </caption>
        <graphic xlink:href="btad388f7" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>In this article, we have investigated the problem of estimating the lengths of STRs from nanopore sequencing reads. Nanopore sequencing is a promising technology, providing very long sequencing reads at a reasonable cost and throughput (a single Promethion flowcell can sequence a human genome at a high depth). Long-read sequences provide a unique opportunity to study the role of STRs in various diseases, since previously employed short-read technology has problems with genotyping larger loci that can be even several hundred bases long.</p>
    <p>Since basecalled reads from nanopore sequencing typically exhibit lower accuracy in STR regions, sometimes to the point at which the repeats are unrecognizable, we opted for analyzing the raw sequencing signal instead. We have adapted a commonly used DTW technique to work with representations of the STRs based on a finite-state automaton and determined the length of an STR by alignment of the raw signal to such an automaton. Proper scaling and shifting of the raw signal are also difficult in regions with repetitive sequences. To address this problem, we have developed a new method for polishing the raw signal using splines. Another innovation is an adaptive setting of the minimum event size for parts of the raw signal. The resulting software tool called WarpSTR is able to genotype STR alleles with high accuracy while outperforming baseline approach employing the basecalled sequences and STRique, another tool recently developed for this purpose.</p>
    <p>In WarpSTR, basecalled sequences are used only to quickly locate reads relevant to a particular locus, as well as to isolate portions of raw sequencing signal that correspond to the STR locus. To this end, we only use flanking sequences, which are typically non-repetitive and easily mappable. Thus, even though WarpSTR uses the basecalled sequences, it does not suffer from the problems related to read misalignment that typically affects approaches based solely on read mapping.</p>
    <p>One obvious extension would be to enrich the underlying finite-state automaton to allow for previously unmapped insertions, deletions, and substitutions. This would likely require employment of a probability-based scoring scheme instead of the simple scoring scheme used in the present work. In fact, defining a probabilistic model for the problem would allow us to use more advanced techniques to deal with high levels of uncertainty in nanopore raw signals, and perhaps allow us to predict a posterior distribution of STR length instead of a single value that can potentially harbor systematic errors.</p>
    <p>Finally, at present, we use a simple clustering scheme to summarize the results as a genotyping call, but perhaps techniques modeling typical errors observed in STR analysis would lead to a further improvement.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad388_Supplementary_Data</label>
      <media xlink:href="btad388_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This research was supported by grants from the Slovak Research Grant Agency VEGA 1/0538/22 (T.V.) and 1/0463/20 (B.B.), by grants from Slovak Research and Development Agency APVV-18-0319 (J.R.) and APVV-18-0239 (T.V.), by funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 872539 (PANGAIA) and No 956229 (ALPACA), by Operational program Integrated Infrastructure within the project ‘Research in the SANET network and possibilities of its further use and development’, ITMS code 313011W988, co-financed by the European Regional Development Fund, by Life Defender—Protector of Life, ITMS code: 313010ASQ6, co-financed by the European Regional Development Fund (Operational Programme Integrated Infrastructure), and by Ministry of Education, Science, Research and Sport of the Slovak Republic under the Contract No. 0827/2021.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad388-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Andrew</surname><given-names>SE</given-names></string-name>, <string-name><surname>Goldberg</surname><given-names>YP</given-names></string-name>, <string-name><surname>Theilmann</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>A CCG repeat polymorphism adjacent to the CAG repeat in the Huntington disease gene: implications for diagnostic accuracy and predictive testing</article-title>. <source>Hum Mol Genet</source><year>1994</year>;<volume>3</volume>:<fpage>65</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">8162053</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bahlo</surname><given-names>M</given-names></string-name>, <string-name><surname>Bennett</surname><given-names>MF</given-names></string-name>, <string-name><surname>Degorski</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>Recent advances in the detection of repeat expansions with short-read next-generation sequencing</article-title>. <source>F1000Res</source><year>2018</year>;<volume>7</volume>:<fpage>736</fpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bellman</surname><given-names>R</given-names></string-name>, <string-name><surname>Kalaba</surname><given-names>R.</given-names></string-name></person-group><article-title>On adaptive control processes</article-title>. <source>IRE Trans Automat Contr</source><year>1959</year>;<volume>4</volume>:<fpage>1</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Budiš</surname><given-names>J</given-names></string-name>, <string-name><surname>Kucharík</surname><given-names>M</given-names></string-name>, <string-name><surname>Ďuriš</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Dante: genotyping of known complex and expanded short tandem repeats</article-title>. <source>Bioinformatics</source><year>2019</year>;<volume>35</volume>:<fpage>1310</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30203023</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dashnow</surname><given-names>H</given-names></string-name>, <string-name><surname>Lek</surname><given-names>M</given-names></string-name>, <string-name><surname>Phipson</surname><given-names>B</given-names></string-name></person-group><etal>et al</etal><article-title>STRetch: detecting and discovering pathogenic short tandem repeat expansions</article-title>. <source>Genome Biol</source><year>2018</year>;<volume>19</volume>:<fpage>121</fpage>.<pub-id pub-id-type="pmid">30129428</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>De Roeck</surname><given-names>A</given-names></string-name>, <string-name><surname>De Coster</surname><given-names>W</given-names></string-name>, <string-name><surname>Bossaerts</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>NanoSatellite: accurate characterization of expanded tandem repeat length and sequence through whole genome long-read sequencing on PromethION</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>239</fpage>.<pub-id pub-id-type="pmid">31727106</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Depienne</surname><given-names>C</given-names></string-name>, <string-name><surname>Mandel</surname><given-names>J-L.</given-names></string-name></person-group><article-title>30 years of repeat expansion disorders: what have we learned and what are the remaining challenges?</article-title><source>Am J Hum Genet</source><year>2021</year>;<volume>108</volume>:<fpage>764</fpage>–<lpage>85</lpage>.<pub-id pub-id-type="pmid">33811808</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dolzhenko</surname><given-names>E</given-names></string-name>, <string-name><surname>Deshpande</surname><given-names>V</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>ExpansionHunter: a sequence-graph-based tool to analyze variation in short tandem repeat regions</article-title>. <source>Bioinformatics</source><year>2019</year>;<volume>35</volume>:<fpage>4754</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">31134279</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Doyu</surname><given-names>M</given-names></string-name>, <string-name><surname>Sobue</surname><given-names>G</given-names></string-name>, <string-name><surname>Mukai</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Severity of X-linked recessive bulbospinal neuronopathy correlates with size of the tandem CAG repeat in androgen receptor gene</article-title>. <source>Ann Neurol</source><year>1992</year>;<volume>32</volume>:<fpage>707</fpage>–<lpage>10</lpage>.<pub-id pub-id-type="pmid">1449253</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frith</surname><given-names>MC</given-names></string-name>, <string-name><surname>Kawaguchi</surname><given-names>R.</given-names></string-name></person-group><article-title>Split-alignment of genomes finds orthologies more accurately</article-title>. <source>Genome Biol</source><year>2015</year>;<volume>16</volume>:<fpage>106</fpage>.<pub-id pub-id-type="pmid">25994148</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gelfand</surname><given-names>Y</given-names></string-name>, <string-name><surname>Rodriguez</surname><given-names>A</given-names></string-name>, <string-name><surname>Benson</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>TRDB—the tandem repeats database</article-title>. <source>Nucleic Acids Res</source><year>2007</year>;<volume>35</volume>:<fpage>D80</fpage>–<lpage>87</lpage>.<pub-id pub-id-type="pmid">17175540</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Giesselmann</surname><given-names>P</given-names></string-name>, <string-name><surname>Brändl</surname><given-names>B</given-names></string-name>, <string-name><surname>Raimondeau</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Analysis of short tandem repeat expansions and their methylation state with nanopore sequencing</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>1478</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">31740840</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gymrek</surname><given-names>M.</given-names></string-name></person-group><article-title>A genomic view of short tandem repeats</article-title>. <source>Curr Opin Genet Dev</source><year>2017</year>;<volume>44</volume>:<fpage>9</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">28213161</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gymrek</surname><given-names>M</given-names></string-name>, <string-name><surname>Willems</surname><given-names>T</given-names></string-name>, <string-name><surname>Guilmatre</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Abundant contribution of short tandem repeats to gene expression variation in humans</article-title>. <source>Nat Genet</source><year>2016</year>;<volume>48</volume>:<fpage>22</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">26642241</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Halman</surname><given-names>A</given-names></string-name>, <string-name><surname>Oshlack</surname><given-names>A.</given-names></string-name></person-group><article-title>Accuracy of short tandem repeats genotyping tools in whole exome sequencing data</article-title>. <source>F1000Res</source><year>2020</year>;<volume>9</volume>:<fpage>200</fpage>.<pub-id pub-id-type="pmid">32665844</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>R</given-names></string-name>, <string-name><surname>Li</surname><given-names>Y</given-names></string-name>, <string-name><surname>Gao</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>An accurate and rapid continuous wavelet dynamic time warping algorithm for end-to-end mapping in ultra-long nanopore sequencing</article-title>. <source>Bioinformatics</source><year>2018</year>;<volume>34</volume>:<fpage>i722</fpage>–<lpage>i731</lpage>.<pub-id pub-id-type="pmid">30423085</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Han</surname><given-names>R</given-names></string-name>, <string-name><surname>Wang</surname><given-names>S</given-names></string-name>, <string-name><surname>Gao</surname><given-names>X</given-names></string-name></person-group><etal>et al</etal><article-title>Novel algorithms for efficient subsequence searching and mapping in nanopore raw signals towards targeted sequencing</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>1333</fpage>–<lpage>43</lpage>.<pub-id pub-id-type="pmid">31593235</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jain</surname><given-names>M</given-names></string-name>, <string-name><surname>Koren</surname><given-names>S</given-names></string-name>, <string-name><surname>Miga</surname><given-names>KH</given-names></string-name></person-group><etal>et al</etal><article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>. <source>Nat Biotechnol</source><year>2018</year>;<volume>36</volume>:<fpage>338</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">29431738</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>P</given-names></string-name>, <string-name><surname>Wang</surname><given-names>D</given-names></string-name></person-group><etal>et al</etal><article-title>Interrogating the “unsequenceable” genomic trinucleotide repeat disorders by long-read sequencing</article-title>. <source>Genome Med</source><year>2017</year>;<volume>9</volume>:<fpage>65</fpage>.<pub-id pub-id-type="pmid">28720120</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Tong</surname><given-names>Y</given-names></string-name>, <string-name><surname>Wang</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-wide detection of short tandem repeat expansions by long-read sequencing</article-title>. <source>BMC Bioinformatics</source><year>2020</year>;<volume>21</volume>:<fpage>542</fpage>.<pub-id pub-id-type="pmid">33371889</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loose</surname><given-names>M</given-names></string-name>, <string-name><surname>Malla</surname><given-names>S</given-names></string-name>, <string-name><surname>Stout</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Real-time selective sequencing using nanopore technology</article-title>. <source>Nat Methods</source><year>2016</year>;<volume>13</volume>:<fpage>751</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">27454285</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Midha</surname><given-names>MK</given-names></string-name>, <string-name><surname>Wu</surname><given-names>M</given-names></string-name>, <string-name><surname>Chiu</surname><given-names>K-P</given-names></string-name></person-group><etal>et al</etal><article-title>Long-read sequencing in deciphering human genetics to a greater depth</article-title>. <source>Hum Genet</source><year>2019</year>;<volume>138</volume>:<fpage>1201</fpage>–<lpage>15</lpage>.<pub-id pub-id-type="pmid">31538236</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mitsuhashi</surname><given-names>S</given-names></string-name>, <string-name><surname>Frith</surname><given-names>MC</given-names></string-name>, <string-name><surname>Mizuguchi</surname><given-names>T</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem-genotypes: robust detection of tandem repeat expansions from long DNA reads</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>58</fpage>.<pub-id pub-id-type="pmid">30890163</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Musova</surname><given-names>Z</given-names></string-name>, <string-name><surname>Mazanec</surname><given-names>R</given-names></string-name>, <string-name><surname>Krepelova</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Highly unstable sequence interruptions of the CTG repeat in the myotonic dystrophy gene</article-title>. <source>Am J Med Genet A</source><year>2009</year>;<volume>149A</volume>:<fpage>1365</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">19514047</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname><given-names>F</given-names></string-name></person-group><etal>et al</etal><article-title>Scikit-learn: machine learning in Python</article-title>. <source>J Mach Learning Res</source><year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="btad388-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvansky</surname><given-names>J</given-names></string-name>, <string-name><surname>Kadasi</surname><given-names>L.</given-names></string-name></person-group><article-title>The expanding world of myotonic dystrophies: how can they be detected?</article-title><source>Genet Test Mol Biomarkers</source><year>2010</year>;<volume>14</volume>:<fpage>733</fpage>–<lpage>41</lpage>.<pub-id pub-id-type="pmid">20939737</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvansky</surname><given-names>J</given-names></string-name>, <string-name><surname>Ficek</surname><given-names>A</given-names></string-name>, <string-name><surname>Minarik</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>Effect of unexpected sequence interruptions to conventional PCR and repeat primed PCR in myotonic dystrophy type 1 testing</article-title>. <source>Diagn Mol Pathol</source><year>2011</year>;<volume>20</volume>:<fpage>48</fpage>–<lpage>51</lpage>.<pub-id pub-id-type="pmid">21326039</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Radvanszky</surname><given-names>J</given-names></string-name>, <string-name><surname>Hyblova</surname><given-names>M</given-names></string-name>, <string-name><surname>Radvanska</surname><given-names>E</given-names></string-name></person-group><etal>et al</etal><article-title>Characterisation of non-pathogenic premutation-range myotonic dystrophy type 2 alleles</article-title>. <source>JCM</source><year>2021</year>;<volume>10</volume>:<fpage>3934</fpage>.<pub-id pub-id-type="pmid">34501382</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sedlazeck</surname><given-names>FJ</given-names></string-name>, <string-name><surname>Lee</surname><given-names>H</given-names></string-name>, <string-name><surname>Darby</surname><given-names>CA</given-names></string-name></person-group><etal>et al</etal><article-title>Piercing the dark matter: bioinformatics of long-range sequencing and mapping</article-title>. <source>Nat Rev Genet</source><year>2018</year>;<volume>19</volume>:<fpage>329</fpage>–<lpage>46</lpage>.<pub-id pub-id-type="pmid">29599501</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ummat</surname><given-names>A</given-names></string-name>, <string-name><surname>Bashir</surname><given-names>A.</given-names></string-name></person-group><article-title>Resolving complex tandem repeats with long reads</article-title>. <source>Bioinformatics</source><year>2014</year>;<volume>30</volume>:<fpage>3491</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">25028725</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wagner</surname><given-names>J</given-names></string-name>, <string-name><surname>Olson</surname><given-names>ND</given-names></string-name>, <string-name><surname>Harris</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>Benchmarking challenging small variants with linked and long reads</article-title>. <source>Cell Genomics</source><year>2022</year>;<volume>2</volume>:<fpage>100128</fpage>.<pub-id pub-id-type="pmid">36452119</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wick</surname><given-names>RR</given-names></string-name>, <string-name><surname>Judd</surname><given-names>LM</given-names></string-name>, <string-name><surname>Holt</surname><given-names>KE</given-names></string-name></person-group><etal>et al</etal><article-title>Performance of neural network basecalling tools for oxford nanopore sequencing</article-title>. <source>Genome Biol</source><year>2019</year>;<volume>20</volume>:<fpage>129</fpage>.<pub-id pub-id-type="pmid">31234903</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Willems</surname><given-names>T</given-names></string-name>, <string-name><surname>Zielinski</surname><given-names>D</given-names></string-name>, <string-name><surname>Yuan</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-wide profiling of heritable and de novo str variations</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>590</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">28436466</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>H</given-names></string-name>, <string-name><surname>Li</surname><given-names>H</given-names></string-name>, <string-name><surname>Jain</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Real-time mapping of nanopore raw signals</article-title>. <source>Bioinformatics</source><year>2021</year>;<volume>37</volume>:<fpage>i477</fpage>–<lpage>i483</lpage>.<pub-id pub-id-type="pmid">34252938</pub-id></mixed-citation>
    </ref>
    <ref id="btad388-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zook</surname><given-names>JM</given-names></string-name>, <string-name><surname>McDaniel</surname><given-names>J</given-names></string-name>, <string-name><surname>Olson</surname><given-names>ND</given-names></string-name></person-group><etal>et al</etal><article-title>An open resource for accurately benchmarking small variant and reference calls</article-title>. <source>Nat Biotechnol</source><year>2019</year>;<volume>37</volume>:<fpage>561</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">30936564</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

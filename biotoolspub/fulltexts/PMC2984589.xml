<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2984589</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-11-531</article-id>
    <article-id pub-id-type="pmid">20973958</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-11-531</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BALL - biochemical algorithms library 1.3</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Hildebrandt</surname>
          <given-names>Andreas</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>anhi@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Dehof</surname>
          <given-names>Anna Katharina</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>anne@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Rurainski</surname>
          <given-names>Alexander</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>aleru@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Bertsch</surname>
          <given-names>Andreas</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>bertsch@informatik.uni-tuebingen.de</email>
      </contrib>
      <contrib contrib-type="author" id="A5">
        <name>
          <surname>Schumann</surname>
          <given-names>Marcel</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>schumann@informatik.uni-tuebingen.de</email>
      </contrib>
      <contrib contrib-type="author" id="A6">
        <name>
          <surname>Toussaint</surname>
          <given-names>Nora C</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>toussaint@informatik.uni-tuebingen.de</email>
      </contrib>
      <contrib contrib-type="author" id="A7">
        <name>
          <surname>Moll</surname>
          <given-names>Andreas</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>amoll@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A8">
        <name>
          <surname>Stöckel</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>dstoeckel@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A9">
        <name>
          <surname>Nickels</surname>
          <given-names>Stefan</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>nicste@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A10">
        <name>
          <surname>Mueller</surname>
          <given-names>Sabine C</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>sabmue@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A11">
        <name>
          <surname>Lenhof</surname>
          <given-names>Hans-Peter</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>lenhof@bioinf.uni-sb.de</email>
      </contrib>
      <contrib contrib-type="author" id="A12">
        <name>
          <surname>Kohlbacher</surname>
          <given-names>Oliver</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>oliver.kohlbacher@uni-tuebingen.de</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Center for Bioinformatics Saar, Saarland University, Saarbrücken, Germany</aff>
    <aff id="I2"><label>2</label>Center for Bioinformatics Tübingen, Eberhard-Karls-Universität Tübingen, Germany</aff>
    <aff id="I3"><label>3</label>Intel Visual Computing Institute of Saarland University, Germany</aff>
    <pub-date pub-type="collection">
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>10</month>
      <year>2010</year>
    </pub-date>
    <volume>11</volume>
    <fpage>531</fpage>
    <lpage>531</lpage>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>5</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>10</month>
        <year>2010</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright ©2010 Hildebrandt et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2010</copyright-year>
      <copyright-holder>Hildebrandt et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/11/531"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>The Biochemical Algorithms Library (BALL) is a comprehensive rapid application development framework for structural bioinformatics. It provides an extensive C++ class library of data structures and algorithms for molecular modeling and structural bioinformatics. Using BALL as a programming toolbox does not only allow to greatly reduce application development times but also helps in ensuring stability and correctness by avoiding the error-prone reimplementation of complex algorithms and replacing them with calls into the library that has been well-tested by a large number of developers. In the ten years since its original publication, BALL has seen a substantial increase in functionality and numerous other improvements.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>Here, we discuss BALL's current functionality and highlight the key additions and improvements: support for additional file formats, molecular edit-functionality, new molecular mechanics force fields, novel energy minimization techniques, docking algorithms, and support for cheminformatics.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>BALL is available for all major operating systems, including Linux, Windows, and MacOS X. It is available free of charge under the Lesser GNU Public License (LPGL). Parts of the code are distributed under the GNU Public License (GPL). BALL is available as source code and binary packages from the project web site at <ext-link ext-link-type="uri" xlink:href="http://www.ball-project.org">http://www.ball-project.org</ext-link>. Recently, it has been accepted into the debian project; integration into further distributions is currently pursued.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Developing programs for structural bioinformatics is a difficult and often tedious task. Even if the algorithms have been carefully designed, the programmer has to solve a variety of complex and recurring problems not fundamentally related to the algorithm at hand, but necessary for real-world applications. Not only more advanced tasks like inferring missing atoms or bonds, energy evaluations, or structural minimization require considerable programming effort that can hardly be repeated for every new project, but also the most basic and mundane steps. For example, many molecular file formats are as hard to parse correctly as they are to write. To avoid costly and error-prone re-inventing of the wheel for any new structural bioinformatics application, two approaches can be imagined: a collection of loosely coupled tools and utilities for recurring subtasks, or powerful libraries and frameworks for rapid application development (<italic>RAD</italic>). Obviously, the second approach encompasses the first, i.e., creating small, specialized tools for a pipeline concept is trivial when relying on such a library. In addition, it allows its users simple access to the molecular data structures and algorithms that form building blocks of many algorithmic approaches and that often require complex implementations. With the Biochemical Algorithms Library (BALL) [<xref ref-type="bibr" rid="B1">1</xref>], we have created a versatile C++ class library for structural bioinformatics that is supplemented with a Python interface for scripting functionality and a number of applications like the molecular modeling frontend BALLView [<xref ref-type="bibr" rid="B2">2</xref>]. BALL has been used successfully for a large number of projects, both of our own (e.g. [<xref ref-type="bibr" rid="B3">3</xref>-<xref ref-type="bibr" rid="B7">7</xref>]) and of external researchers (for a small selection of recent publications, see e.g. [<xref ref-type="bibr" rid="B8">8</xref>-<xref ref-type="bibr" rid="B14">14</xref>]). In recent years, BALL has seen a significant increase in functionality and substantial useability improvements. It has been ported to further operating systems; indeed, it currently supports all major brands. Moreover, BALL has evolved from a commercial product into a free-of-charge, open source software licensed under the Lesser GNU Public License (LGPL).</p>
    <p>Several frameworks for structural bioinformatics have been reported in the literature; most of them, however, with a different focus, scope, or intended audience. Hence, comparison with these projects is difficult in general. Among those projects, the most similar in scope and functionality are commercial packages like the suites from Schrödinger [<xref ref-type="bibr" rid="B15">15</xref>] or the Chemical Computing Group's Molecular Operating Environment (MOE) [<xref ref-type="bibr" rid="B16">16</xref>]. While these packages typically focus on sophisticated graphical user interfaces for concrete modelling tasks, they also provide powerful scripting interfaces aimed at developers. Notable open source projects in the field include Biopython [<xref ref-type="bibr" rid="B17">17</xref>], PyMOL [<xref ref-type="bibr" rid="B18">18</xref>] (which provides extensive scripting functionality apart from the molecular viewer), CDK [<xref ref-type="bibr" rid="B19">19</xref>], MESHI [<xref ref-type="bibr" rid="B20">20</xref>], JOELib [<xref ref-type="bibr" rid="B21">21</xref>], the EGAD Library [<xref ref-type="bibr" rid="B22">22</xref>], and StrBioLib [<xref ref-type="bibr" rid="B23">23</xref>]. To the best of our knowledge, BALL offers the widest range of functionality for rapidly and robustly developing applications in structural bioinformatics, it is growing fast and can be easily extended. It addresses users of the implemented techniques as well as designers of completely new approaches. An overview of BALL's design can be found in Figure <xref ref-type="fig" rid="F1">1</xref>.</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>Overview of the structure of BALL</bold>. The diagram shows the general layout of the structure of BALL, where every box symbolizes one library or fundamental layer.</p>
      </caption>
      <graphic xlink:href="1471-2105-11-531-1"/>
    </fig>
    <p>A full description of BALL's functionality would fall well outside of the scope of this note; the current version (1.3 at the time of writing) contains more than 730 classes and more than 700,000 lines of code (a comprehensive overview can be found in the online documentation at <ext-link ext-link-type="uri" xlink:href="http://www.ball-project.org">http://www.ball-project.org</ext-link>). Instead, we want to briefly point out some of BALL's most important features, particularly highlighting those that have been added since [<xref ref-type="bibr" rid="B1">1</xref>]. In addition, we will show some ways in which the use of such an <italic>RAD </italic>framework can simplify the life of scientists and developers.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>BALL has been implemented in C++, with some extensions written in Python.</p>
  </sec>
  <sec>
    <title>Results</title>
    <p>From the start of its development in 1996, BALL's design principles have been wide functionality, ease of use, openness, and robustness.</p>
    <sec>
      <title>Wide functionality</title>
      <p>To demonstrate BALL's rich functionality, we describe a typical application - namely docking - and point out how BALL simplifies its implementation. In this case, a large amount of time and code is devoted to the problem of importing the docking partners into suitable structural representations and preparing them for further use. Typically, this preparation consists in reading the molecules from diverse file formats, checking their content, adding missing information, running the actual docking algorithm, and, finally, analysing its result.</p>
      <p>Reading the data doubtlessly belongs to the most recurring tasks in molecular software development. BALL supports a rich variety of molecular structure formats. While the previously published version [<xref ref-type="bibr" rid="B1">1</xref>] only supported the molecular file formats PDB and MOL2, version 1.3 additionally reads and writes MOL, HIN, XYZ, KCF, and SD files. Besides molecular files, it also supports a variety of other data sources, like DCD, DSN6, GAMESS, JCAMP, SCWRL, and TRR. Export to most of these formats is possible as well. Apart from importing molecules from external sources, the new version also offers rich functionality for generating and editing molecules. For instance, given only the amino acid sequence and the corresponding torsion angles, BALL's <monospace>PeptideBuilder</monospace> creates a 3D structure of that peptide. More general molecular structures, e.g., of ligands, can be generated from SMILES-expressions or programmatically by explicitly inserting atoms and bonds.</p>
      <p>The next step - not only in docking but in all applications processing molecular structures - is to validate the structures and to prepare the data for the following tasks. Some atoms, in particular, hydrogens, are often missing, and structural information such as connectivity or bond orders are often incorrect or even missing. For proteins, DNA, and RNA, BALL can automatically infer much of the missing information from an extensible fragment database. This can also be used for validating given structures. A rotamer library allows the user to easily determine a protein's most likely side-chain conformations or to easily switch between several rotameric states. Both, fragment database and rotamer library have been significantly improved since BALL's first publication. Other molecules with a more diverse chemistry, such as ligands, require more sophisticated approaches to infer missing structural information. BALL's new <monospace>BondOrderAssigner</monospace>[<xref ref-type="bibr" rid="B5">5</xref>] heuristically determines all possible bond order assignments for a given ligand sorted by their probability. Favorable 3D conformations can be achieved by employing BALL's new <monospace>QuickOptimizer</monospace>, a randomized MDSimulator/Minimizer in combination with several force fields (see below). Also among the new features are a kekulizer and an aromaticity processor.</p>
      <p>Once the input has been prepared, the two core problems in protein docking are the generation of docking poses and their evaluation. For both tasks, BALL offers rich functionality. The first is facilitated by the preparation functionality (as described above) and BALL's transformation processors. Here, BALL's selection mechanisms also simplify matters by allowing, for instance, the selection of certain parts of the molecule through easily formulated expressions. Via a selector class, certain predicates like element type can be used as a selection filter. Additionally, BALL now provides an expression class which allows selecting subsets of objects by given SMILES and SMARTS strings as well as by BALL predicates.</p>
      <p>The second task often amounts to energy evaluations and/or the checking of certain criteria. The former version of BALL provided the force field classes CHARMM [<xref ref-type="bibr" rid="B24">24</xref>] and AMBER [<xref ref-type="bibr" rid="B25">25</xref>]. In the current version, an implementation of the Merck Molecular Force Field (MMFF94) [<xref ref-type="bibr" rid="B26">26</xref>], a fully parameterized force field that allows handling of virtually all kinds of organic molecules, has been added as well as some non-differentiable scoring functions.</p>
      <p>Force fields can not only be used for scoring: BALL's minimizer and molecular dynamics classes can be combined with all of the implemented force fields. Minimizers and simulation classes also support selection, allowing the user to freely specify a set of movable atoms from all atoms used for force field computation. This is useful in a variety of contexts, e.g. when estimated hydrogen positions have to be reoptimized. Since the last version, we have greatly extended the minimization capabilities [<xref ref-type="bibr" rid="B27">27</xref>], now offering standard (steepest descent, conjugate gradient) and the best currently known methods (L-BFGS and shifted L-VMM).</p>
      <p>In addition to the features described above, version 1.3 has been greatly extended with further functionality. For instance, secondary structure prediction and hydrogen-bond detection [<xref ref-type="bibr" rid="B28">28</xref>] are now available.</p>
      <p>In summary, BALL has developed into a powerful tool for <italic>RAD </italic>covering fundamental functionality as well as complex applications like molecular docking and drug design. Due to its modular architecture, all classes and algorithms can be combined in a building block manner to easily implement even complex methods.</p>
    </sec>
    <sec>
      <title>Ease of use</title>
      <p>One measure of the usefulness of an <italic>RAD </italic>platform is the time it saves compared to developing the functionality from scratch. Hence, ease of use and a shallow learning curve are important goals for any large-scale framework. On the other hand, after some time of familiarization with the library, users will usually want to fine-tune the methods, choose detailed parameters, or even exchange parts of the algorithms. Supporting these advanced users bears the risk of conflicting with the ease-of-use principle, for instance, by confusing the user with a wide array of tuneable options. BALL has been very carefully designed to address both groups of users, experts and novices alike, simultaneously. For example, most algorithms implemented in BALL accept a wide range of options to fine-tune their behavior, but all of these come with sensible defaults. In this way, a novice user can just instantiate a class and use it successfully, while experts can adapt the options to their individual needs. Similarly, the versatile Python interface offered by BALL appeals to both groups of users, albeit in different ways: while novice users and non-programming experts can profit from the easy-to-learn scripting languages, experts can use it to create powerful scripts.</p>
      <p>SIP is used to automatically create python classes for all relevant C++ classes to allow for the same class interfaces. The Python class has the same name as the C++ class, so porting code that uses BALL from C++ to Python (and vice versa) is usually a trivial task. For instance, the following C++ code</p>
      <p>// <italic>read a PDB file</italic></p>
      <p>PDBFile file (" test . pdb");</p>
      <p>System S;</p>
      <p>file &gt;&gt; S;</p>
      <p>file . close ( );</p>
      <p>// <italic>add missing information</italic></p>
      <p>// <italic>e . g . hydrogens and bonds</italic></p>
      <p>FragmentDB fragment_db (" ");</p>
      <p>S . apply (fragment_db . normalize_names);</p>
      <p>S . apply (fragment_db . add_hydrogens);</p>
      <p>S . apply (fragment_db . build_bonds);</p>
      <p>// <italic>check for charges, bond lengths </italic>,</p>
      <p>// <italic>and missing atoms</italic></p>
      <p>ResidueChecker checker (fragment_db);</p>
      <p>S . apply (checker);</p>
      <p>// <italic>create an AMBER force field</italic></p>
      <p>AmberFF FF;</p>
      <p>S . deselect ( );</p>
      <p>FF . setup (S);</p>
      <p>Selector selector (" element (H) ");</p>
      <p>S . apply (selector);</p>
      <p>// <italic>optimize the hydrogen ' s positions</italic></p>
      <p>ConjugateGradientMinimizer minimizer;</p>
      <p>minimizer . setup (FF);</p>
      <p>minimizer . setEnergyOutputFrequency (1);</p>
      <p>minimizer . minimize (50);</p>
      <p>// <italic>write a PDB File</italic></p>
      <p>file . open (" test_out . pdb", ios : : out);</p>
      <p>file &lt;&lt; S;</p>
      <p>file . close ( );</p>
      <p>translates to</p>
      <p># <italic>read a PDB file</italic></p>
      <p>file = PDBFile (" test . pdb")</p>
      <p>system = System ( )</p>
      <p>file . read (system)</p>
      <p>file . close ( )</p>
      <p># <italic>add missing information</italic></p>
      <p># <italic>e . g . hydrogens and bonds</italic></p>
      <p>Fragment_db = FragmentDB(" ")</p>
      <p>system . apply (fragment_db . normalize_names)</p>
      <p>system . apply (fragment_db . add_hydrogens)</p>
      <p>system . apply (fragment_db . build_bonds)</p>
      <p># <italic>check for charges, bond lengths </italic>,</p>
      <p># <italic>and missing atoms</italic></p>
      <p>checker = ResidueChecker (fragment_db)</p>
      <p>system . apply (checker)</p>
      <p># <italic>create an AMBER force field</italic></p>
      <p>FF = AmberFF( )</p>
      <p>system . deselect ( )</p>
      <p>FF . setup (system)</p>
      <p>selector = Selector (" element (H) ")</p>
      <p>system . apply (selector)</p>
      <p># <italic>optimize the hydrogen ' s positions</italic></p>
      <p>minimizer = ConjugateGradientMinimizer ( )</p>
      <p>minimizer . setup (FF)</p>
      <p>minimizer . setEnergyOutputFrequency (1)</p>
      <p>minimizer . minimize (50)</p>
      <p># <italic>write a PDB File</italic></p>
      <p>outfile = PDBFile (" test_out . pdb", File .MODE_OUT)</p>
      <p>outfile . write (system).</p>
      <p>outfile . close ( )</p>
      <p>Since the Python interface is fully integrated into the molecular viewer and modeling tool BALLView [<xref ref-type="bibr" rid="B2">2</xref>], the effects of the scripts can be visualized directly. Also, the interface provides a simple way to automatize BALLView's behaviour.</p>
      <p>Finally, a number of tutorials guide inexperienced users through the writing of their first applications.</p>
      <p>These tutorials are provided with BALL's extensive documentation and have recently been supplemented with a code library for recurring tasks on our wiki <ext-link ext-link-type="uri" xlink:href="http://ball-trac.bioinf.uni-sb.de/wiki">http://ball-trac.bioinf.uni-sb.de/wiki</ext-link>.</p>
    </sec>
    <sec>
      <title>Robustness</title>
      <p>Apart from substantially simplifying the creation of applications, the use of <italic>RAD </italic>frameworks can also help greatly in ensuring their correctness and improving their robustness, since the code in the library has often been used and tested in a variety of situations by a large number of people. To improve robustness, BALL employs a large number of regression tests that are regularly executed on a number of different platforms. In this way, it is easy to determine whether a change in some part of the code will lead to a regression in another part, or whether a new compiler release, for instance, will result in different behavior.</p>
    </sec>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p>The Biochemical Algorithms Library BALL is a comprehensive rapid application development framework for structural bioinformatics. BALL has been carefully designed to address programming experts as well as novices. Users can take advantage of BALL's rich functionality being offered an extensive framework of data structures and algorithms through both, C++ and the python scripting interface. A variety of standard structural bioinformatics algorithms are offered and new algorithms can be easily added.</p>
    <p>With the new release 1.3 BALL is complemented with a number of key features, e.g. additional file formats, molecular edit-functionality, and new molecular mechanics force fields. Fundamental parts of BALL's core have been rewritten, and the build system was switched to CMake to increase portability.</p>
  </sec>
  <sec>
    <title>Availability and Requirements</title>
    <p><italic>Project name</italic>: BALL - Biochemical Algorithms Library</p>
    <p><italic>Project home page</italic>: <ext-link ext-link-type="uri" xlink:href="http://www.ball-project.org">http://www.ball-project.org</ext-link></p>
    <p><italic>Operating systems</italic>: Linux, Windows, and MacOS X</p>
    <p><italic>Programming language</italic>: C++, python</p>
    <p><italic>License</italic>: Lesser GNU Public License (LGPL)</p>
    <p><italic>Restrictions to use by non-academics</italic>: None</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>AH, HPL, and OK are heading the project. All authors contributed significantly to the project through programming, documenting, and testing. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>Over the years, numerous people have contributed to BALL either by programming, reporting bugs, or sharing their thoughts and suggestions. The authors want to express their gratitude to all of them. OK acknowledges financial support from DFG (SFB 685/B1 and SFB 766/A9), AH financial support from the Intel Visual Computing Institute (IVCI) of Saarland University, AH and HPL financial support from DFG (BIZ4:1-4).</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kohlbacher</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <article-title>BALL-rapid software prototyping in computational molecular biology</article-title>
        <source>Bioinformatics</source>
        <year>2000</year>
        <volume>16</volume>
        <fpage>815</fpage>
        <lpage>824</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/16.9.815</pub-id>
        <pub-id pub-id-type="pmid">11108704</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Moll</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <name>
          <surname>Kohlbacher</surname>
          <given-names>O</given-names>
        </name>
        <article-title>BALLView: a tool for research and education in molecular modeling</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>365</fpage>
        <lpage>366</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti818</pub-id>
        <pub-id pub-id-type="pmid">16332707</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="other">
        <name>
          <surname>Phillips</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Georgiev</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Dehof</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Nickels</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Marsalek</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Slusallek</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Measuring Properties of Molecular Surfaces Using Ray Casting</article-title>
        <source>Proceedings of 9th International Workshop on High Performance Computational Biology</source>
        <year>2010</year>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Röttig</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Rausch</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Kohlbacher</surname>
          <given-names>O</given-names>
        </name>
        <article-title>Combining structure and sequence information allows automated prediction of substrate specificities within enzyme families</article-title>
        <source>PLoS Comput Biol</source>
        <year>2010</year>
        <volume>6</volume>
        <fpage>e1000636</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000636</pub-id>
        <pub-id pub-id-type="pmid">20072606</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="other">
        <name>
          <surname>Dehof</surname>
          <given-names>AK</given-names>
        </name>
        <name>
          <surname>Rurainski</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Automated Bond Order Assignment as an Optimization Problem</article-title>
        <source>GCB</source>
        <year>2009</year>
        <fpage>201</fpage>
        <lpage>209</lpage>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kneissl</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Leonhardt</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Tautermann</surname>
          <given-names>CS</given-names>
        </name>
        <article-title>Revisiting automated G-protein coupled receptor modeling: the benefit of additional template structures for a neurokinin-1 receptor model</article-title>
        <source>J Med Chem</source>
        <year>2009</year>
        <volume>52</volume>
        <issue>10</issue>
        <fpage>3166</fpage>
        <lpage>3173</lpage>
        <pub-id pub-id-type="doi">10.1021/jm8014487</pub-id>
        <pub-id pub-id-type="pmid">19397376</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Blossey</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Rjasanow</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Kohlbacher</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <article-title>Electrostatic potentials of proteins in water: a structured continuum approach</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <issue>2</issue>
        <fpage>e99</fpage>
        <lpage>103</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl312</pub-id>
        <pub-id pub-id-type="pmid">17237112</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Brylinski</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Skolnick</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Comparison of structure-based and threading-based approaches to protein functional annotation</article-title>
        <source>Proteins</source>
        <year>2010</year>
        <volume>78</volume>
        <fpage>118</fpage>
        <lpage>134</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.22566</pub-id>
        <pub-id pub-id-type="pmid">19731377</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Maghsoudi</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Tafreshi</surname>
          <given-names>NK</given-names>
        </name>
        <name>
          <surname>Khodagholi</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Zakeri</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Esfandiarei</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Hadi-Alijanvand</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Sabbaghian</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Maghsoudi</surname>
          <given-names>AH</given-names>
        </name>
        <name>
          <surname>Sajadi</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Zohri</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Moosavi</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Zeinoddini</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Targeting enteroviral 2A protease by a 16-mer synthetic peptide: inhibition of 2Apro-induced apoptosis in a stable Tet-on HeLa cell line</article-title>
        <source>Virology</source>
        <year>2010</year>
        <volume>399</volume>
        <fpage>39</fpage>
        <lpage>45</lpage>
        <pub-id pub-id-type="doi">10.1016/j.virol.2009.12.017</pub-id>
        <pub-id pub-id-type="pmid">20096913</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Materese</surname>
          <given-names>CK</given-names>
        </name>
        <name>
          <surname>Savelyev</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Papoian</surname>
          <given-names>GA</given-names>
        </name>
        <article-title>Counterion atmosphere and hydration patterns near a nucleosome core particle</article-title>
        <source>J Am Chem Soc</source>
        <year>2009</year>
        <volume>131</volume>
        <issue>41</issue>
        <fpage>15005</fpage>
        <lpage>15013</lpage>
        <pub-id pub-id-type="doi">10.1021/ja905376q</pub-id>
        <pub-id pub-id-type="pmid">19778017</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Savelyev</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Papoian</surname>
          <given-names>GA</given-names>
        </name>
        <article-title>Molecular renormalization group coarse-graining of polymer chains: application to double-stranded DNA</article-title>
        <source>Biophys J</source>
        <year>2009</year>
        <volume>96</volume>
        <issue>10</issue>
        <fpage>4044</fpage>
        <lpage>4052</lpage>
        <pub-id pub-id-type="doi">10.1016/j.bpj.2009.02.067</pub-id>
        <pub-id pub-id-type="pmid">19450476</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Segev</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Wyttenbach</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Bowers</surname>
          <given-names>MT</given-names>
        </name>
        <name>
          <surname>Gerber</surname>
          <given-names>RB</given-names>
        </name>
        <article-title>Conformational evolution of ubiquitin ions in electrospray mass spectrometry: molecular dynamics simulations at gradually increasing temperatures</article-title>
        <source>Phys Chem Chem Phys</source>
        <year>2008</year>
        <volume>10</volume>
        <issue>21</issue>
        <fpage>3077</fpage>
        <lpage>3082</lpage>
        <pub-id pub-id-type="doi">10.1039/b718610j</pub-id>
        <pub-id pub-id-type="pmid">18688371</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Xu</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Jiao</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Berger</surname>
          <given-names>B</given-names>
        </name>
        <article-title>A parameterized algorithm for protein structure alignment</article-title>
        <source>J Comput Biol</source>
        <year>2007</year>
        <volume>14</volume>
        <issue>5</issue>
        <fpage>564</fpage>
        <lpage>577</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2007.R003</pub-id>
        <pub-id pub-id-type="pmid">17683261</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Xu</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Berger</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Fast and accurate algorithms for protein side-chain packing</article-title>
        <source>Journal of ACM</source>
        <year>2006</year>
        <volume>53</volume>
        <fpage>533</fpage>
        <lpage>557</lpage>
        <pub-id pub-id-type="doi">10.1145/1162349.1162350</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <name>
          <surname>Schrödinger</surname>
          <given-names>LLC</given-names>
        </name>
        <source>Schrödinger Product Catalog</source>
        <year>2010</year>
        <ext-link ext-link-type="uri" xlink:href="http://www.schrodinger.com/">http://www.schrodinger.com/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="other">
        <collab>Chemical Computing Group</collab>
        <source>MOE: Molecular Operating Environment</source>
        <year>2010</year>
        <ext-link ext-link-type="uri" xlink:href="http://www.chemcomp.com/">http://www.chemcomp.com/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chapman</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Chang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Biopython: Python tools for computational biology</article-title>
        <source>ACM SIGBIO Newsletter</source>
        <year>2000</year>
        <volume>20</volume>
        <issue>2</issue>
        <fpage>19</fpage>
        <pub-id pub-id-type="doi">10.1145/360262.360268</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="other">
        <name>
          <surname>DeLano</surname>
          <given-names>WL</given-names>
        </name>
        <article-title>The PyMOL molecular graphics system</article-title>
        <year>2002</year>
        <ext-link ext-link-type="uri" xlink:href="http://www.pymol.org">http://www.pymol.org</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Steinbeck</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Han</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Kuhn</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Horlacher</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Luttmann</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Willighagen</surname>
          <given-names>E</given-names>
        </name>
        <article-title>The Chemistry Development Kit (CDK): An open-source Java library for chemo-and bioinformatics</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>2003</year>
        <volume>43</volume>
        <issue>2</issue>
        <fpage>493</fpage>
        <lpage>500</lpage>
        <pub-id pub-id-type="pmid">12653513</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kalisman</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Levi</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Maximova</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Reshef</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Zafriri-Lynn</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Gleyzer</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Keasar</surname>
          <given-names>C</given-names>
        </name>
        <article-title>MESHI: a new library of Java classes for molecular modeling</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <issue>20</issue>
        <fpage>3931</fpage>
        <lpage>3932</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti630</pub-id>
        <pub-id pub-id-type="pmid">16105898</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="other">
        <name>
          <surname>Wegner</surname>
          <given-names>J</given-names>
        </name>
        <article-title>JOELib</article-title>
        <year>2005</year>
        <ext-link ext-link-type="uri" xlink:href="http://www-ra.informatik.uni-tuebingen.de/software/joelib/index.html">http://www-ra.informatik.uni-tuebingen.de/software/joelib/index.html</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chowdry</surname>
          <given-names>AB</given-names>
        </name>
        <name>
          <surname>Reynolds</surname>
          <given-names>KA</given-names>
        </name>
        <name>
          <surname>Hanes</surname>
          <given-names>MS</given-names>
        </name>
        <name>
          <surname>Voorhies</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Pokala</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Handel</surname>
          <given-names>TM</given-names>
        </name>
        <article-title>An object-oriented library for computational protein design</article-title>
        <source>J Comput Chem</source>
        <year>2007</year>
        <volume>28</volume>
        <issue>14</issue>
        <fpage>2378</fpage>
        <lpage>2388</lpage>
        <pub-id pub-id-type="doi">10.1002/jcc.20727</pub-id>
        <pub-id pub-id-type="pmid">17471459</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chandonia</surname>
          <given-names>J</given-names>
        </name>
        <article-title>StrBioLib: a Java library for development of custom computational structural biology applications</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <issue>15</issue>
        <fpage>2018</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm269</pub-id>
        <pub-id pub-id-type="pmid">17537750</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Brooks</surname>
          <given-names>BR</given-names>
        </name>
        <name>
          <surname>Bruccoleri</surname>
          <given-names>RE</given-names>
        </name>
        <name>
          <surname>Olafson</surname>
          <given-names>BD</given-names>
        </name>
        <name>
          <surname>States</surname>
          <given-names>DJ</given-names>
        </name>
        <name>
          <surname>Swaminathan</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Karplus</surname>
          <given-names>M</given-names>
        </name>
        <article-title>CHARMM: A program for macromolecular energy, minimization, and dynamics calculations</article-title>
        <source>Journal of Computational Chemistry</source>
        <year>1983</year>
        <volume>4</volume>
        <issue>2</issue>
        <fpage>187</fpage>
        <lpage>217</lpage>
        <pub-id pub-id-type="doi">10.1002/jcc.540040211</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ponder</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Case</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Force fields for protein simulations</article-title>
        <source>Advances in Protein Chemistry</source>
        <year>2003</year>
        <volume>66</volume>
        <fpage>27</fpage>
        <lpage>85</lpage>
        <comment>full_text</comment>
        <pub-id pub-id-type="pmid">14631816</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Halgren</surname>
          <given-names>TA</given-names>
        </name>
        <article-title>Merck molecular force field. I. Basis, form, scope, parameterization, and performance of MMFF94</article-title>
        <source>Journal of Computational Chemistry</source>
        <year>1996</year>
        <volume>17</volume>
        <issue>5-6</issue>
        <fpage>490</fpage>
        <lpage>519</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1096-987X(199604)17:5/6&lt;490::AID-JCC1&gt;3.0.CO;2-P</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rurainski</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Hildebrandt</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Lenhof</surname>
          <given-names>HP</given-names>
        </name>
        <article-title>A consensus line search algorithm for molecular potential energy functions</article-title>
        <source>Journal of Computational Chemistry</source>
        <year>2009</year>
        <volume>30</volume>
        <issue>9</issue>
        <fpage>1499</fpage>
        <lpage>1509</lpage>
        <pub-id pub-id-type="doi">10.1002/jcc.21175</pub-id>
        <pub-id pub-id-type="pmid">19086059</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Kabsch</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Sander</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and geometrical features</article-title>
        <source>Biopolymers - Peptide Science Section</source>
        <year>1983</year>
        <volume>22</volume>
        <issue>12</issue>
        <fpage>2577</fpage>
        <lpage>2637</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.360221211</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4168710</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-15-S9-S10</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-15-S9-S10</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Proceedings</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CASPER: context-aware scheme for paired-end reads from high-throughput amplicon sequencing</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Kwon</surname>
          <given-names>Sunyoung</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Lee</surname>
          <given-names>Byunghan</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A3">
        <name>
          <surname>Yoon</surname>
          <given-names>Sungroh</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>sryoon@snu.ac.kr</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Bioinformatics Institute, Interdisciplinary Program in Bioinformatics, Seoul National University, 1 Gwanak-ro, Gwanak-gu, 151-747 Seoul, Korea</aff>
    <aff id="I2"><label>2</label>Department of Electrical and Computer Engineering, Seoul National University, 1 Gwanak-ro, Gwanak-gu, 151-744 Seoul, Korea</aff>
    <pub-date pub-type="collection">
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>9</month>
      <year>2014</year>
    </pub-date>
    <volume>15</volume>
    <issue>Suppl 9</issue>
    <supplement>
      <named-content content-type="supplement-title">Proceedings of the Fourth Annual RECOMB Satellite Workshop on Massively Parallel Sequencing (RECOMB-Seq 2014)</named-content>
      <named-content content-type="supplement-editor">Mihai Pop and Ali Bashir</named-content>
    </supplement>
    <fpage>S10</fpage>
    <lpage>S10</lpage>
    <permissions>
      <copyright-statement>Copyright © 2014 Kwon et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2014</copyright-year>
      <copyright-holder>Kwon et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/15/S9/S10"/>
    <abstract>
      <p>Merging the forward and reverse reads from paired-end sequencing is a critical task that can significantly improve the performance of downstream tasks, such as genome assembly and mapping, by providing them with virtually elongated reads. However, due to the inherent limitations of most paired-end sequencers, the chance of observing erroneous bases grows rapidly as the end of a read is approached, which becomes a critical hurdle for accurately merging paired-end reads. Although there exist several sophisticated approaches to this problem, their performance in terms of quality of merging often remains unsatisfactory. To address this issue, here we present a <bold>c</bold>ontext-<bold>a</bold>ware scheme for <bold>p</bold>aired-<bold>e</bold>nd <bold>r</bold>eads (CASPER): a computational method to rapidly and robustly merge overlapping paired-end reads. Being particularly well suited to amplicon sequencing applications, CASPER is thoroughly tested with both simulated and real high-throughput amplicon sequencing data. According to our experimental results, CASPER significantly outperforms existing state-of-the art paired-end merging tools in terms of accuracy and robustness. CASPER also exploits the parallelism in the task of paired-end merging and effectively speeds up by multithreading. CASPER is freely available for academic use at http://best.snu.ac.kr/casper.</p>
    </abstract>
    <kwd-group>
      <kwd>paired-end merging</kwd>
      <kwd>amplicon sequencing</kwd>
      <kwd>high-throughput short-read sequencing</kwd>
      <kwd>sequence analysis</kwd>
    </kwd-group>
    <conference>
      <conf-date>31 March-1 April 2014</conf-date>
      <conf-name>RECOMB-Seq: Fourth Annual RECOMB Satellite Workshop on Massively Parallel Sequencing</conf-name>
      <conf-loc>Pittsburgh, PA, USA</conf-loc>
    </conference>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>The advent and widespread use of next-generation sequencing (NGS) [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>] has posed new challenges and opportunities for informatics [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B5">5</xref>] due to the high-throughput nature and the relatively short and noisy reads compared to the traditional Sanger sequencing. NGS thus sparked the development of new pipelines (for base-calling, genome assembly/mapping, and other essential tasks) that consider the characteristics of the NGS platforms used.</p>
    <p>In paired-end sequencing, a DNA fragment is read from either end of the fragment, and some NGS platforms (such as Illumina HiSeq, MiSeq, and GAIIx) inherently generate paired-end reads [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>]. When a fragment is larger than the sum of the forward and reverse reads, there exists a gap between the two reads [<xref ref-type="bibr" rid="B6">6</xref>]. Otherwise, the forward and reverse reads overlap, which can ideally give the effect of elongating reads. Having longer reads provides many benefits to downstream tasks in the informatics pipeline [<xref ref-type="bibr" rid="B7">7</xref>,<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B8">8</xref>]. The read length of today's sequencers tends to continuously increase: <italic>e.g</italic>., at the time of writing, Illumina MiSeq can produce 2 × 300 bp reads using its reagent kit v3 (<ext-link ext-link-type="uri" xlink:href="http://www.illumina.com">http://www.illumina.com</ext-link>).</p>
    <p>However, NGS techniques including the Illumina platform tend to result in rapid degradation of the sequencing quality as the end of a read is approached (Figure <xref ref-type="fig" rid="F1">1</xref>). As a result, the overlapping region (formed by the ends of forward and reverse reads) in a paired-end read frequently contains errors originating from sequencing and/or base-calling. Sequencing results are often annotated with per-base <italic>quality scores </italic>representing the error probability [<xref ref-type="bibr" rid="B9">9</xref>].</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>Overlap between paired-end reads</bold>. Next-generation sequencing techniques including the Illumina platform tend to result in rapid degradation of the sequencing quality as the end of a read is approached [<xref ref-type="bibr" rid="B12">12</xref>]. Consequently, the overlapping region (formed by the ends of forward and reverse reads) in a paired-end read frequently contains errors originating from sequencing and/or base-calling.</p>
      </caption>
      <graphic xlink:href="1471-2105-15-S9-S10-1"/>
    </fig>
    <p>Such limitations of sequencing technology often prevent the accurate merging of paired-end reads, so the pursuit of new tools for the reliable merging of overlapping paired-end reads has become an active area of research, <italic>e.g</italic>., SHERA [<xref ref-type="bibr" rid="B7">7</xref>], FLASH [<xref ref-type="bibr" rid="B6">6</xref>], PANDAseq [<xref ref-type="bibr" rid="B10">10</xref>], and COPE [<xref ref-type="bibr" rid="B11">11</xref>]. Most of these tools start by finding the best overlap between a pair of forward and reverse reads and then try to merge them by resolving mismatching bases in the overlap. The best overlap is sought by considering the overlap alignment [<xref ref-type="bibr" rid="B7">7</xref>], the fraction of (mis)matching bases [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B11">11</xref>], or quality scores [<xref ref-type="bibr" rid="B10">10</xref>,<xref ref-type="bibr" rid="B11">11</xref>]. The mismatch resolution is mostly achieved by considering quality scores [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B10">10</xref>] and replacing the base with the lower quality score by the base with the higher quality score. Quality-score-based resolution often produces incorrect results, especially when the quality scores of mismatching bases do not differ significantly [<xref ref-type="bibr" rid="B12">12</xref>]. It was proposed to use quality scores and <italic>k</italic>-mer frequency together as the merge criterion [<xref ref-type="bibr" rid="B11">11</xref>], but the resulting methodology tends to be time-consuming and of unsatisfactory accuracy according to our experience. Due to the importance of paired-end merging, some sequence assemblers (<italic>e.g</italic>., ALLPATHS-LG [<xref ref-type="bibr" rid="B13">13</xref>]) contain a module for merging paired-end reads as a preprocessing stage, although the performance, flexibility, and applicability of such internal modules tends to be limited compared to the aforementioned methods dedicated to paired-end merging.</p>
    <p>To overcome the limitations of the current approaches to merging paired-end reads from amplicon sequencing, here we propose a computational method called <italic>context-aware scheme for paired-end reads </italic>(CASPER). In this scheme, when the difference between the quality scores of mismatching bases is significant, CASPER relies on the quality scores for correction. If not, CASPER instead examines <italic>k</italic>-mer-based contexts around the mismatch and makes a statistical decision (up to <italic>k </italic>partial decisions for each mismatch). CASPER then makes a final decision based on the ensemble of the earlier partial decisions. According to our experiments, CASPER significantly outperforms the existing approaches in terms of accuracy of merging and resilience to noise. Furthermore, the time demand of CASPER remains reasonable in most cases, taking only a few tens of seconds to process one million reads. CASPER is freely available for academic use at http://best.snu.ac.kr/casper.</p>
  </sec>
  <sec>
    <title>Proposed method</title>
    <p>Figure <xref ref-type="fig" rid="F2">2</xref> shows the overall flow of the proposed CASPER approach that consists of five main steps: (1) preprocessing, (2) constructing a table of <italic>k</italic>-mer counts, (3) finding the best overlap position, (4) resolving mismatches in the overlap, and (5) merging forward and reverse reads. Before explaining the details of each step, we present the assumptions and definitions to be used in the explanation.</p>
    <fig id="F2" position="float">
      <label>Figure 2</label>
      <caption>
        <p><bold>Overall flow of CASPER</bold>. The proposed CASPER methodology consists of five main steps: (1) preprocessing, (2) constructing a table of <italic>k</italic>-mer counts, (3) finding the best overlap position, (4) resolving mismatches in the overlap, and (5) merging forward and reverse reads.</p>
      </caption>
      <graphic xlink:href="1471-2105-15-S9-S10-2"/>
    </fig>
    <p>In paired-end sequencing, the sequencer produces two reads for each DNA fragment. Suppose that the fragment length is <italic>m </italic>(bases), and the lengths of forward and reverse reads are both <italic>n</italic>. An overlap between the two reads occurs when <italic>m &lt;</italic>2<italic>n</italic>. The sequence of a fragment is denoted by <italic>S </italic>= 〈<italic>s</italic><sub>1</sub><italic>, s</italic><sub>2</sub><italic>, . . . , s<sub>m</sub></italic>〉, <italic>s<sub>i </sub></italic>ϵ {A, C, G, T}. We denote the forward and reverse reads from <italic>S </italic>by <italic>X </italic>= 〈<italic>x</italic><sub>1</sub><italic>, x</italic><sub>2</sub><italic>, . . . , x<sub>n</sub></italic>〉 and <italic>W </italic>= 〈<italic>w</italic><sub>1</sub><italic>, w</italic><sub>2</sub><italic>, . . . , w<sub>n</sub></italic>〉, respectively. The <italic>i</italic>-th base in <italic>X </italic>(<italic>i.e</italic>., <italic>x<sub>i</sub></italic>) is also denoted by <italic>X</italic>(<italic>i</italic>), and the subsequence of <italic>X </italic>ranging from the <italic>i</italic>-th to <italic>j</italic>-th bases (<italic>i.e</italic>., 〈<italic>x<sub>i</sub>, . . . , x<sub>j</sub></italic>〉) is denoted by <italic>X</italic>(<italic>i </italic>: <italic>j</italic>).</p>
    <p>With no sequencing error (<italic>e.g</italic>., substitution, insertion, and deletion), <italic>x<sub>i </sub></italic>= <italic>s<sub>i </sub></italic>and <inline-formula><mml:math id="M1" name="1471-2105-15-S9-S10-i1" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi><mml:mo class="MathClass-bin">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for 1 <italic>≤ i ≤ n</italic>, where <inline-formula><mml:math id="M2" name="1471-2105-15-S9-S10-i23" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> represents the Watson-Crick complementary base of <inline-formula><mml:math id="M3" name="1471-2105-15-S9-S10-i2" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (<italic>e.g</italic>., Ā is T, <italic>vice versa</italic>). In practice, bases may be called incorrectly, and each called base is accompanied by a (Phred) <italic>quality score </italic>denoted by <italic>Q </italic>and defined as <italic>Q </italic>= <italic>−</italic>10 log<sub>10</sub><italic>p</italic>, where <italic>p </italic>is the probability that the corresponding base call is incorrect [<xref ref-type="bibr" rid="B9">9</xref>]. Sequences <italic>X </italic>and <italic>W </italic>are assumed to be accompanied by <inline-formula><mml:math id="M4" name="1471-2105-15-S9-S10-i3" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:mfenced close="⟩" open="⟨"><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:mo class="MathClass-op">…</mml:mo><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M5" name="1471-2105-15-S9-S10-i4" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>W</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:mfenced close="⟩" open="⟨"><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:mo class="MathClass-op">…</mml:mo><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math></inline-formula>, respectively. Symbol 'N' represents any base (indecisive base-call) and is normally accompanied by the lowest quality score available. We assume that there are few indel-type sequencing errors, as is commonly the case with the Illumina platform.</p>
    <sec>
      <title>Preprocessing, <italic>k</italic>-mer counting, and overlap detection (steps 1-3)</title>
      <p>In the first step of CASPER, every reverse read <italic>W </italic>in the input is preprocessed to facilitate the downstream steps. Specifically, CASPER reverses the order of bases in <italic>W </italic>and then complements each base. <italic>W </italic>and <italic>Q<sub>W </sub></italic>are converted to <italic>Y </italic>= 〈<italic>y</italic><sub>1</sub><italic>, y</italic><sub>2</sub><italic>, . . . , y<sub>n</sub></italic>〉 and <inline-formula><mml:math id="M6" name="1471-2105-15-S9-S10-i5" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>Y</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:mfenced close="⟩" open="⟨"><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:mo class="MathClass-op">…</mml:mo><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math></inline-formula>, respectively. <inline-formula><mml:math id="M7" name="1471-2105-15-S9-S10-i6" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo class="MathClass-op"> ¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi><mml:mo class="MathClass-bin">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M8" name="1471-2105-15-S9-S10-i7" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi><mml:mo class="MathClass-bin">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for 1 <italic>≤ i ≤ n</italic>. In the remainder of this paper, the term 'reverse read' refers to <italic>Y </italic>instead of <italic>W</italic>.</p>
      <p>In the second step of CASPER, a table of <italic>k</italic>-mer counts is constructed from the input reads, where <italic>k </italic>is a user-specified parameter (Table <xref ref-type="table" rid="T1">1</xref>). There has been active research on efficient <italic>k</italic>-mer counting. For instance, Jellyfish [<xref ref-type="bibr" rid="B14">14</xref>] provides a time-efficient, parallel solution to <italic>k</italic>-mer counting. Methods focused on memory efficiency also exist, <italic>e.g</italic>., bloom-filter-based BFcounter [<xref ref-type="bibr" rid="B15">15</xref>] and DSK [<xref ref-type="bibr" rid="B16">16</xref>]. In CASPER, we adopt and customize Jellyfish for building a table of <italic>k</italic>-mer counts. We denote this table by <italic>T<sub>k </sub></italic>. For <italic>k</italic>-mer <italic>X</italic>(<italic>i </italic>: <italic>i </italic>+ <italic>k − </italic>1) = (<italic>x</italic><sub><italic>i</italic></sub>, <italic>x</italic><sub><italic>i</italic>+1</sub>, . . . , <italic>x</italic><sub><italic>i</italic>+<italic>k−</italic>1</sub>), <italic>T<sub>k </sub></italic>[<italic>X</italic>(<italic>i </italic>: <italic>i </italic>+ <italic>k − </italic>1)] indicates the number of occurrences of this <italic>k</italic>-mer in all forward and reverse reads of the input data.</p>
      <table-wrap id="T1" position="float">
        <label>Table 1</label>
        <caption>
          <p>User-specified parameters of CASPER and the default values used for experiments</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left">Parameter</th>
              <th align="left">Default</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">
                <italic>K</italic>
              </td>
              <td align="left">17</td>
              <td align="left">The size of <italic>k</italic>-mers (in bp) used to represent contexts around mismatching bases</td>
            </tr>
            <tr>
              <td align="left">
                <italic>Ω</italic>
              </td>
              <td align="left">10</td>
              <td align="left">The minimum length (in bp) of the overlap between forward and reverse reads</td>
            </tr>
            <tr>
              <td align="left">
                <italic>γ</italic>
              </td>
              <td align="left">0.5</td>
              <td align="left">CASPER abandons merging if the mismatch ratio in the overlap is greater than <italic>γ</italic></td>
            </tr>
            <tr>
              <td align="left">
                <italic>δ</italic>
              </td>
              <td align="left">19</td>
              <td align="left">Context-based mismatch resolution starts if quality scores differ less than <italic>δ</italic></td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Algorithm 1 shows pseudo-code of the remaining steps of CASPER. In the third step of CASPER, it is decided as to how much it needs to shift (to the right) the reverse read <italic>Y </italic>with respect to the forward read <italic>X </italic>in such a way that the fraction of mismatching bases in the overlap region is minimized (lines 1-8). The resulting overlap region is considered the best. The (mis)match ratio is widely used in the literature to locate the optimal overlap between paired-end reads [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B11">11</xref>]. Parameter <italic>ω </italic>specifies the minimum length of an overlap. If too many mismatches exist in the overlap (<italic>i.e</italic>., the mismatch ratio exceeds a user-specified 'give-up' threshold <italic>γ</italic>), CASPER does not merge the reads (line 9).</p>
    </sec>
    <sec>
      <title>Resolving mismatching bases in forward and reverse reads (step 4)</title>
      <p>In the fourth step of CASPER, the mismatching bases in the overlap region are corrected. Ideally, for each position of the overlap region, the base in the forward read should match the base in the reverse read. Due to experimental error and other non-idealities, however, these two bases often mismatch. To merge paired-end reads successfully, we need to resolve mismatching bases. The basic principle is simple: overwrite the incorrect base with the correct base, assuming that the base either in forward or reverse read is correct. The remaining question is which of the two bases is correct. Lines 10-28 in Algorithm 1 reveal how CASPER answers this question. CASPER scans the overlap region twice, once for quality-based resolution and once more for context-based resolution.</p>
      <p>Note that in lines 11-28 of the code, position <italic>i </italic>in forward read <italic>X </italic>corresponds to position <italic>i′ </italic>in reverse read <italic>Y </italic>. We assume that the two bases <italic>X</italic>(<italic>i</italic>) and <italic>Y </italic>(<italic>i′</italic>) are not 'N' (if both <italic>X</italic>(<italic>i</italic>) and <italic>Y </italic>(<italic>i′</italic>) are 'N', then they are skipped; if either one is 'N', then the other base is informative).</p>
      <sec>
        <title>First pass: quality-score-based correction (lines 10-14)</title>
        <p>For each pair of mismatching bases in the overlap between the forward and reverse reads, CASPER first considers the difference in their quality scores. For <italic>X</italic>(<italic>i</italic>) and <italic>Y </italic>(<italic>i′</italic>), let <italic>b<sub>h </sub></italic>(<italic>b<sub>l</sub></italic>) denote the base with the higher (lower) quality score. For a user-specified parameter <italic>δ</italic>, if <italic>|Q<sub>X </sub></italic>(<italic>i</italic>) <italic>− Q<sub>Y </sub></italic>(<italic>i′</italic>)<italic>| &gt; δ</italic>, then CASPER replaces <italic>b<sub>l </sub></italic>by <italic>b<sub>h</sub></italic>. The rationale behind this is that a significantly higher quality score of <italic>b<sub>h </sub></italic>is a strong indicator of its correctness. This is in fact the basis on which most of the current approaches to paired-end merging are grounded. CASPER is differentiated from them by the second step.</p>
      </sec>
      <sec>
        <title>Second pass: context-based correction (lines 15-28)</title>
        <p>A more interesting scenario arises when the difference in quality scores is moderate. In such cases, CASPER no longer makes decisions based on the quality scores, since we cannot assume that the error probability of <italic>b<sub>h </sub></italic>is negligible relative to that of <italic>b<sub>l </sub></italic>[<xref ref-type="bibr" rid="B12">12</xref>]. For the cases where <italic>|Q<sub>X </sub></italic>(<italic>i</italic>) <italic>− Q<sub>Y </sub></italic>(<italic>i′</italic>)<italic>| ≤ δ</italic>, CASPER therefore makes context-based decisions by examining the bases before and after the mismatching position, instead of relying on quality scores.</p>
        <p>For bases <italic>X</italic>(<italic>i</italic>) and <italic>Y </italic>(<italic>i′</italic>), we consider <italic>k </italic>different (but progressively overlapping) windows along the reads and define the <italic>j</italic>-th context (for 1 <italic>≤ j ≤ k</italic>) in terms of two subsequences of <italic>X </italic>and <italic>Y </italic>:</p>
        <p>
          <disp-formula>
            <mml:math id="M9" name="1471-2105-15-S9-S10-i8" overflow="scroll">
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi mathvariant="script">C</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>j</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mrow>
                  <mml:mo class="MathClass-open">(</mml:mo>
                  <mml:mrow>
                    <mml:mi>i</mml:mi>
                    <mml:mo class="MathClass-punc">,</mml:mo>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>′</mml:mi>
                      </mml:mrow>
                    </mml:msup>
                  </mml:mrow>
                  <mml:mo class="MathClass-close">)</mml:mo>
                </mml:mrow>
                <mml:mo class="MathClass-rel">=</mml:mo>
                <mml:mrow>
                  <mml:mo class="MathClass-open">⟨</mml:mo>
                  <mml:mrow>
                    <mml:mi>X</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                        <mml:mo class="MathClass-bin">-</mml:mo>
                        <mml:mi>k</mml:mi>
                        <mml:mo class="MathClass-bin">+</mml:mo>
                        <mml:mi>j</mml:mi>
                        <mml:mo class="MathClass-rel">:</mml:mo>
                        <mml:mi>i</mml:mi>
                        <mml:mo class="MathClass-bin">+</mml:mo>
                        <mml:mi>j</mml:mi>
                        <mml:mo class="MathClass-bin">-</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                    <mml:mo class="MathClass-punc">,</mml:mo>
                    <mml:mi>Y</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:msup>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>′</mml:mi>
                          </mml:mrow>
                        </mml:msup>
                        <mml:mo class="MathClass-bin">-</mml:mo>
                        <mml:mi>k</mml:mi>
                        <mml:mo class="MathClass-bin">+</mml:mo>
                        <mml:mi>j</mml:mi>
                        <mml:mo class="MathClass-rel">:</mml:mo>
                        <mml:msup>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>′</mml:mi>
                          </mml:mrow>
                        </mml:msup>
                        <mml:mo class="MathClass-bin">+</mml:mo>
                        <mml:mi>j</mml:mi>
                        <mml:mo class="MathClass-bin">-</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mo class="MathClass-close">⟩</mml:mo>
                </mml:mrow>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>as depicted in Figure <xref ref-type="fig" rid="F3">3</xref>. For each <italic>j</italic>, CASPER estimates <inline-formula><mml:math id="M10" name="1471-2105-15-S9-S10-i9" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo class="MathClass-open">{</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-rel">|</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow><mml:mo class="MathClass-close">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M11" name="1471-2105-15-S9-S10-i10" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo class="MathClass-open">{</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-rel">|</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow><mml:mo class="MathClass-close">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and then constructs a <italic>k</italic>-dimensional decision vector <italic>D </italic>= 〈<italic>d</italic><sub>1</sub><italic>, d</italic><sub>2</sub><italic>, . . . , d<sub>j </sub>, . . . , d<sub>k</sub></italic>〉, where <italic>d<sub>j </sub></italic>is defined as</p>
        <fig id="F3" position="float">
          <label>Figure 3</label>
          <caption>
            <p><bold>Definition of <italic>k</italic>-mer context </bold><inline-formula><mml:math id="M12" name="1471-2105-15-S9-S10-i20" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. For bases <italic>X</italic>(<italic>i</italic>) and <italic>Y </italic>(<italic>i′</italic>), we consider <italic>k </italic>different (but progressively overlapping) windows along the reads and define the <italic>j</italic>-th context (for 1 <italic>≤ j ≤ k</italic>) in terms of two subsequences of <italic>X </italic>and <italic>Y </italic>. The illustration is for <italic>k </italic>= 3 (1 <italic>≤ j ≤ </italic>3).</p>
          </caption>
          <graphic xlink:href="1471-2105-15-S9-S10-3"/>
        </fig>
        <p>
          <disp-formula id="bmcM1">
            <label>(1)</label>
            <mml:math id="M13" name="1471-2105-15-S9-S10-i11" overflow="scroll">
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>d</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>j</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo class="MathClass-rel">=</mml:mo>
                <mml:mfenced open="{">
                  <mml:mrow>
                    <mml:mtable class="array" columnlines="none" equalcolumns="false" equalrows="false">
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mn>1</mml:mn>
                          <mml:mo class="MathClass-punc">,</mml:mo>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">if</mml:mtext>
                          </mml:mstyle>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mi>P</mml:mi>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">{</mml:mo>
                            <mml:mrow>
                              <mml:mi>X</mml:mi>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:mi>i</mml:mi>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                              <mml:mo class="MathClass-rel">|</mml:mo>
                              <mml:msub>
                                <mml:mrow>
                                  <mml:mi mathvariant="script">C</mml:mi>
                                </mml:mrow>
                                <mml:mrow>
                                  <mml:mi>j</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:mi>i</mml:mi>
                                  <mml:mo class="MathClass-punc">,</mml:mo>
                                  <mml:msup>
                                    <mml:mrow>
                                      <mml:mi>i</mml:mi>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>′</mml:mi>
                                    </mml:mrow>
                                  </mml:msup>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">}</mml:mo>
                          </mml:mrow>
                          <mml:mo class="MathClass-rel">&gt;</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left"/>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mi>P</mml:mi>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">{</mml:mo>
                            <mml:mrow>
                              <mml:mi>Y</mml:mi>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:msup>
                                    <mml:mrow>
                                      <mml:mi>i</mml:mi>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>′</mml:mi>
                                    </mml:mrow>
                                  </mml:msup>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                              <mml:mo class="MathClass-rel">|</mml:mo>
                              <mml:msub>
                                <mml:mrow>
                                  <mml:mi mathvariant="script">C</mml:mi>
                                </mml:mrow>
                                <mml:mrow>
                                  <mml:mi>j</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:mi>i</mml:mi>
                                  <mml:mo class="MathClass-punc">,</mml:mo>
                                  <mml:msup>
                                    <mml:mrow>
                                      <mml:mi>i</mml:mi>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>′</mml:mi>
                                    </mml:mrow>
                                  </mml:msup>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">}</mml:mo>
                          </mml:mrow>
                          <mml:mo class="MathClass-punc">;</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mn>0</mml:mn>
                          <mml:mo class="MathClass-punc">,</mml:mo>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">otherwise</mml:mtext>
                          </mml:mstyle>
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">.</mml:mtext>
                          </mml:mstyle>
                        </mml:mtd>
                      </mml:mtr>
                    </mml:mtable>
                  </mml:mrow>
                </mml:mfenced>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>Element <italic>d<sub>j </sub></italic>= 1(0) represents that the base in the forward (reverse) read is correct. Note that this decision rule is based on the Bayesian decision theory [<xref ref-type="bibr" rid="B17">17</xref>], and thus the error involved in decision <italic>dj </italic>is given by <inline-formula><mml:math id="M14" name="1471-2105-15-S9-S10-i12" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>ε</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo class="MathClass-rel">=</mml:mo><mml:mstyle class="text"><mml:mtext class="textsf">min</mml:mtext></mml:mstyle><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo class="MathClass-open">{</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-rel">|</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow><mml:mo class="MathClass-close">}</mml:mo></mml:mrow><mml:mo class="MathClass-punc">,</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo class="MathClass-open">{</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-rel">|</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow><mml:mo class="MathClass-close">}</mml:mo></mml:mrow></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
        <p>In other words, CASPER makes a series of preliminary decisions and stores the results in <italic>D</italic>. The elements in <italic>D </italic>can be considered as the outputs from <italic>k </italic>classifiers. We can make a final decision based on <italic>D </italic>using ensemble learning techniques that can combine results from multiple learners [<xref ref-type="bibr" rid="B18">18</xref>]. CASPER employs the idea of <italic>linear opinion pools </italic>to make a final decision:</p>
        <p>
          <disp-formula id="bmcM2">
            <label>(2)</label>
            <mml:math id="M15" name="1471-2105-15-S9-S10-i13" overflow="scroll">
              <mml:mrow>
                <mml:mstyle class="text">
                  <mml:mtext class="textsf">choose</mml:mtext>
                </mml:mstyle>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mfenced open="{">
                  <mml:mrow>
                    <mml:mtable class="array" columnlines="none" equalcolumns="false" equalrows="false">
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mi>X</mml:mi>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">(</mml:mo>
                            <mml:mrow>
                              <mml:mi>i</mml:mi>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">if</mml:mtext>
                          </mml:mstyle>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mfrac>
                            <mml:mrow>
                              <mml:mn>1</mml:mn>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                          </mml:mfrac>
                          <mml:msubsup>
                            <mml:mrow>
                              <mml:mo> ∑</mml:mo>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>j</mml:mi>
                              <mml:mo class="MathClass-rel">=</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mspace class="thinspace" width="0.3em"/>
                              <mml:mspace class="thinspace" width="0.3em"/>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                          </mml:msubsup>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>d</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>j</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo class="MathClass-rel">&gt;</mml:mo>
                          <mml:mn>0</mml:mn>
                          <mml:mi>.</mml:mi>
                          <mml:mn>5</mml:mn>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mi>Y</mml:mi>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">(</mml:mo>
                            <mml:mrow>
                              <mml:msup>
                                <mml:mrow>
                                  <mml:mi>i</mml:mi>
                                </mml:mrow>
                                <mml:mrow>
                                  <mml:mi>′</mml:mi>
                                </mml:mrow>
                              </mml:msup>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">otherwise</mml:mtext>
                          </mml:mstyle>
                        </mml:mtd>
                      </mml:mtr>
                    </mml:mtable>
                  </mml:mrow>
                </mml:mfenced>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>which can be implemented as voting. If <italic>d<sub>j </sub></italic>were i.i.d., then the error from the final decision would be <italic>ε<sub>j</sub>/k </italic>[<xref ref-type="bibr" rid="B18">18</xref>], but here the <italic>d<sub>j</sub></italic>'s have dependence on each other originating from the definition of the context, and we expect a higher level of error than the theoretical estimate (see 'Experiments on the context definition and probability computation' in Results and Discussion).</p>
        <p>CASPER estimates the probabilities in Eq. (1) using the <italic>k</italic>-mer-count table <italic>T<sub>k </sub></italic>constructed in step 2. By Bayes' theorem, we can express these probabilities as</p>
        <p>
          <disp-formula>
            <mml:math id="M16" name="1471-2105-15-S9-S10-i14" overflow="scroll">
              <mml:mrow>
                <mml:mi>P</mml:mi>
                <mml:mrow>
                  <mml:mo class="MathClass-open">{</mml:mo>
                  <mml:mrow>
                    <mml:mi>X</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                    <mml:mo class="MathClass-rel">|</mml:mo>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi mathvariant="script">C</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>j</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                        <mml:mo class="MathClass-punc">,</mml:mo>
                        <mml:msup>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>′</mml:mi>
                          </mml:mrow>
                        </mml:msup>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mo class="MathClass-close">}</mml:mo>
                </mml:mrow>
                <mml:mo class="MathClass-rel">=</mml:mo>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:mi>X</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:mi>X</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>and</p>
        <p>
          <disp-formula>
            <mml:math id="M17" name="1471-2105-15-S9-S10-i15" overflow="scroll">
              <mml:mrow>
                <mml:mi>P</mml:mi>
                <mml:mrow>
                  <mml:mo class="MathClass-open">{</mml:mo>
                  <mml:mrow>
                    <mml:mi>Y</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                    <mml:mo class="MathClass-rel">|</mml:mo>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi mathvariant="script">C</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>j</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">(</mml:mo>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                        <mml:mo class="MathClass-punc">,</mml:mo>
                        <mml:msup>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>′</mml:mi>
                          </mml:mrow>
                        </mml:msup>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">)</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mo class="MathClass-close">}</mml:mo>
                </mml:mrow>
                <mml:mo class="MathClass-rel">=</mml:mo>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:mi>Y</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:mi>Y</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mi>.</mml:mi>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>Note that the context-based mismatch resolution step assumes that the bases in each of the forward and reverse reads have a similar probability of being correct. This assumption further gives</p>
        <p>
          <disp-formula id="bmcM3">
            <label>(3)</label>
            <mml:math id="M18" name="1471-2105-15-S9-S10-i16" overflow="scroll">
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:mi>X</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:mi>Y</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo class="MathClass-rel">≈</mml:mo>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:mi>X</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>P</mml:mi>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">{</mml:mo>
                      <mml:mrow>
                        <mml:msub>
                          <mml:mrow>
                            <mml:mi mathvariant="script">C</mml:mi>
                          </mml:mrow>
                          <mml:mrow>
                            <mml:mi>j</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-punc">,</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mo class="MathClass-rel">|</mml:mo>
                        <mml:mi>Y</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">is</mml:mtext>
                        </mml:mstyle>
                        <mml:mspace class="thinspace" width="0.3em"/>
                        <mml:mstyle class="text">
                          <mml:mtext class="textsf">correct</mml:mtext>
                        </mml:mstyle>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">}</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>
          <disp-formula id="bmcM4">
            <label>(4)</label>
            <mml:math id="M19" name="1471-2105-15-S9-S10-i17" overflow="scroll">
              <mml:mrow>
                <mml:mo class="MathClass-rel">≈</mml:mo>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>T</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>k</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">[</mml:mo>
                      <mml:mrow>
                        <mml:mi>X</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-bin">-</mml:mo>
                            <mml:mi>k</mml:mi>
                            <mml:mo class="MathClass-bin">+</mml:mo>
                            <mml:mi>j</mml:mi>
                            <mml:mo class="MathClass-rel">:</mml:mo>
                            <mml:mi>i</mml:mi>
                            <mml:mo class="MathClass-bin">+</mml:mo>
                            <mml:mi>j</mml:mi>
                            <mml:mo class="MathClass-bin">-</mml:mo>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">]</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>T</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>k</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                    <mml:mrow>
                      <mml:mo class="MathClass-open">[</mml:mo>
                      <mml:mrow>
                        <mml:mi>Y</mml:mi>
                        <mml:mrow>
                          <mml:mo class="MathClass-open">(</mml:mo>
                          <mml:mrow>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                            <mml:mo class="MathClass-bin">-</mml:mo>
                            <mml:mi>k</mml:mi>
                            <mml:mo class="MathClass-bin">+</mml:mo>
                            <mml:mi>j</mml:mi>
                            <mml:mo class="MathClass-rel">:</mml:mo>
                            <mml:msup>
                              <mml:mrow>
                                <mml:mi>i</mml:mi>
                              </mml:mrow>
                              <mml:mrow>
                                <mml:mi>′</mml:mi>
                              </mml:mrow>
                            </mml:msup>
                            <mml:mo class="MathClass-bin">+</mml:mo>
                            <mml:mi>j</mml:mi>
                            <mml:mo class="MathClass-bin">-</mml:mo>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                          <mml:mo class="MathClass-close">)</mml:mo>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mo class="MathClass-close">]</mml:mo>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>(see Results and Discussion for our experimental result that supports the above formulation).</p>
        <p>Thus, we can rewrite the decision rule in Eq. (1) using <italic>k</italic>-mer counts as follows:</p>
        <p>
          <disp-formula id="bmcM5">
            <label>(5)</label>
            <mml:math id="M20" name="1471-2105-15-S9-S10-i18" overflow="scroll">
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>d</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>j</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo class="MathClass-rel">=</mml:mo>
                <mml:mfenced open="{">
                  <mml:mrow>
                    <mml:mtable class="array" columnlines="none" equalcolumns="false" equalrows="false">
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mn>1</mml:mn>
                          <mml:mo class="MathClass-punc">,</mml:mo>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">if</mml:mtext>
                          </mml:mstyle>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>T</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">[</mml:mo>
                            <mml:mrow>
                              <mml:mi>X</mml:mi>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:mi>i</mml:mi>
                                  <mml:mo class="MathClass-bin">-</mml:mo>
                                  <mml:mi>k</mml:mi>
                                  <mml:mo class="MathClass-bin">+</mml:mo>
                                  <mml:mi>j</mml:mi>
                                  <mml:mo class="MathClass-rel">:</mml:mo>
                                  <mml:mi>i</mml:mi>
                                  <mml:mo class="MathClass-bin">+</mml:mo>
                                  <mml:mi>j</mml:mi>
                                  <mml:mo class="MathClass-bin">-</mml:mo>
                                  <mml:mn>1</mml:mn>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">]</mml:mo>
                          </mml:mrow>
                          <mml:mo class="MathClass-rel">&gt;</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left"/>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:mspace class="thinspace" width="0.3em"/>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>T</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>k</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo class="MathClass-open">[</mml:mo>
                            <mml:mrow>
                              <mml:mi>Y</mml:mi>
                              <mml:mrow>
                                <mml:mo class="MathClass-open">(</mml:mo>
                                <mml:mrow>
                                  <mml:msup>
                                    <mml:mrow>
                                      <mml:mi>i</mml:mi>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>′</mml:mi>
                                    </mml:mrow>
                                  </mml:msup>
                                  <mml:mo class="MathClass-bin">-</mml:mo>
                                  <mml:mi>k</mml:mi>
                                  <mml:mo class="MathClass-bin">+</mml:mo>
                                  <mml:mi>j</mml:mi>
                                  <mml:mo class="MathClass-rel">:</mml:mo>
                                  <mml:msup>
                                    <mml:mrow>
                                      <mml:mi>i</mml:mi>
                                    </mml:mrow>
                                    <mml:mrow>
                                      <mml:mi>′</mml:mi>
                                    </mml:mrow>
                                  </mml:msup>
                                  <mml:mo class="MathClass-bin">+</mml:mo>
                                  <mml:mi>j</mml:mi>
                                  <mml:mo class="MathClass-bin">-</mml:mo>
                                  <mml:mn>1</mml:mn>
                                </mml:mrow>
                                <mml:mo class="MathClass-close">)</mml:mo>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo class="MathClass-close">]</mml:mo>
                          </mml:mrow>
                          <mml:mo class="MathClass-punc">;</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mn>0</mml:mn>
                          <mml:mo class="MathClass-punc">,</mml:mo>
                        </mml:mtd>
                        <mml:mtd class="array" columnalign="left">
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">otherwise</mml:mtext>
                          </mml:mstyle>
                          <mml:mstyle class="text">
                            <mml:mtext class="textsf">.</mml:mtext>
                          </mml:mstyle>
                        </mml:mtd>
                      </mml:mtr>
                    </mml:mtable>
                  </mml:mrow>
                </mml:mfenced>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>In certain cases, the number of partial decisions made per mismatch can be less than <italic>k</italic>. CASPER skips those context windows whose span exceeds the read boundary (lines 20-21). Additionally, when the rightmost position of a window spans a pair of mismatching bases for <italic>j </italic>= <italic>j</italic><sup>∗ </sup><italic>&gt;</italic>1 (<italic>i.e</italic>., <italic>X</italic>(<italic>i </italic>+ <italic>j − </italic>1) <italic>≠ </italic><italic>Y </italic>(<italic>i′ </italic>+ <italic>j − </italic>1)), CASPER skips all of the following contexts for <italic>j ≥ j</italic><sup>∗ </sup>(line 22). Some bases appearing in such contexts may be erroneous, since they are yet to be corrected. In contrast, it is guaranteed that <italic>X</italic>(<italic>i − k </italic>+ <italic>j </italic>: <italic>i − </italic>1) = <italic>Y </italic>(<italic>i′ − k </italic>+ <italic>j </italic>: <italic>i′ − </italic>1) for 1 <italic>≤ j &lt; j</italic><sup>∗</sup>, because the mismatch resolution starts with the leftmost position in the overlap and proceeds to the right.</p>
        <p>Lines 18-28 of Algorithm 1 implement the decision rules represented by Eq. (2) and Eq. (5), also considering the cases in which the number of partial decisions is less than <italic>k</italic>.</p>
      </sec>
    </sec>
    <sec>
      <title>Additional details</title>
      <p>In the final step of CASPER, each pair of forward and reverse reads is merged to produce virtually elongated reads (lines 29-31). The quality score of a base not processed by the mismatch resolution remains unchanged. For a newly replaced base, the quality score of the replacing base is used.</p>
      <p>Assuming sequential execution, the worst-case time complexity of CASPER is <italic>O</italic>(<italic>m </italic>log <italic>m</italic>+<italic>N n</italic><sup>2</sup>), where <italic>N </italic>is the total number of paired-end reads, <italic>n </italic>is the length of each read, and <italic>m </italic>is the number of <italic>k</italic>-mers stored in the <italic>k</italic>-mer table. The worst-case space complexity is <italic>O</italic>(<italic>m </italic>+ <italic>N n</italic>). Note that the <italic>O</italic>(<italic>m </italic>log <italic>m</italic>) time and <italic>O</italic>(<italic>m</italic>) space complexity terms are due to the Jellyfish algorithm [<xref ref-type="bibr" rid="B14">14</xref>] we utilize for <italic>k</italic>-mer counting. By parallelization, the <italic>O</italic>(<italic>N n</italic><sup>2</sup>) term in the time complexity becomes <italic>O</italic>(<italic>N n</italic><sup>2</sup><italic>/t</italic>), where <italic>t </italic>is the number of threads used.</p>
      <p>There are two main parts of CASPER that are suitable for parallelization: <italic>k</italic>-mer counting and the two-step merging process. Counting <italic>k</italic>-mers in different reads or merging different pairs of reads provides ample opportunities for data-level parallelization. The former is handled by the parallel implementation of Jellyfish. For the latter, we implement the proposed merging algorithm using OpenMP (<ext-link ext-link-type="uri" xlink:href="http://www.openmp.org">http://www.openmp.org</ext-link>), an API that supports shared-memory multi-threaded programming.</p>
      <p>One might consider making a context-based decision using two separate <italic>k</italic>-mer tables for forward and reverse reads. The context-based decision rule in Eq. (1) will then use <italic>P </italic>{<italic>X</italic>(<italic>i</italic>)<italic>|X</italic>(<italic>i − k </italic>+ <italic>j </italic>: <italic>i </italic>+ <italic>j − </italic>1)} and <italic>P </italic>{<italic>Y </italic>(<italic>i′</italic>)<italic>|Y </italic>(<italic>i′ −k </italic>+<italic>j </italic>: <italic>i′ </italic>+<italic>j −</italic>1)}, reflecting respectively the forward and reverse contexts. This would make the probability estimation more complicated, since the normalization becomes different. Ideally, the forward and (preprocessed) reverse reads should bear the same information and can be considered two replicates of a fragment. Thus, considering the two reads independently may lose the advantage of having such replicates. According to our experiments, this separate-<italic>k</italic>-mer-table approach, while taking more time than the current implementation of CASPER, has a negligible impact on its performance.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and discussion</title>
    <p>We test the proposed CASPER methodology with the seven datasets listed in Table <xref ref-type="table" rid="T2">2</xref>. To generate A4, A5, S4, and S5, we customize the GemSIM sequencing simulator [<xref ref-type="bibr" rid="B19">19</xref>] and apply it to a public dataset [<xref ref-type="bibr" rid="B20">20</xref>] using the Illumina error models v4 and v5. Note that datasets A4 and S4 are generated with higher error rates than A5 and S5. In S4 and S5, there is a single reference fragment, whereas A4 and A5 have all of the twenty three reference sequences used in the original publication. Datasets C1, C2, and PA are from real sequencing experiments on bacterial 16S ribosomal RNAs [<xref ref-type="bibr" rid="B21">21</xref>,<xref ref-type="bibr" rid="B10">10</xref>].</p>
    <table-wrap id="T2" position="float">
      <label>Table 2</label>
      <caption>
        <p>Details of the datasets used for experiments</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="left">dataset<break/>type</th>
            <th>ID</th>
            <th>target†</th>
            <th align="center"># Total reads</th>
            <th align="center"># Refs<sup>‡</sup></th>
            <th align="center">Fragment length<sup>§</sup></th>
            <th align="center">Read length</th>
            <th align="center">Overlap length</th>
            <th align="center">Simulator (error model) or sequencer used</th>
            <th>Source</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left">Simulated</td>
            <td align="center">A4</td>
            <td align="center">V5</td>
            <td align="center">1,000,000</td>
            <td align="center">23</td>
            <td align="center">160-190</td>
            <td align="center">100</td>
            <td align="center">10-40</td>
            <td align="center">GemSIM (v4<sup>#</sup>)</td>
            <td align="center">[<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>]</td>
          </tr>
          <tr>
            <td/>
            <td align="center">A5</td>
            <td align="center">V5</td>
            <td align="center">1,000,000</td>
            <td align="center">23</td>
            <td align="center">160-190</td>
            <td align="center">100</td>
            <td align="center">10-40</td>
            <td align="center">GemSIM (v5<italic><sup>b</sup></italic>)</td>
            <td align="center">[<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>]</td>
          </tr>
          <tr>
            <td/>
            <td align="center">S4</td>
            <td align="center">V5</td>
            <td align="center">1,000,000</td>
            <td align="center">1</td>
            <td align="center">160</td>
            <td align="center">100</td>
            <td align="center">40</td>
            <td align="center">GemSIM (v4<sup>#</sup>)</td>
            <td align="center">[<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>]</td>
          </tr>
          <tr>
            <td/>
            <td align="center">S5</td>
            <td align="center">V5</td>
            <td align="center">1,000,000</td>
            <td align="center">1</td>
            <td align="center">160</td>
            <td align="center">100</td>
            <td align="center">40</td>
            <td align="center">GemSIM (v5<italic><sup>b</sup></italic>)</td>
            <td align="center">[<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>]</td>
          </tr>
          <tr>
            <td colspan="10">
              <hr/>
            </td>
          </tr>
          <tr>
            <td align="left">Real</td>
            <td align="center">C1</td>
            <td align="center">V3</td>
            <td align="center">716,366</td>
            <td align="center">9</td>
            <td align="center">169-195</td>
            <td align="center">125</td>
            <td align="center">55-81</td>
            <td align="center">Illumina GAIIx</td>
            <td align="center">[<xref ref-type="bibr" rid="B21">21</xref>]</td>
          </tr>
          <tr>
            <td/>
            <td align="center">C2</td>
            <td align="center">V3</td>
            <td align="center">1,350,602</td>
            <td align="center">9</td>
            <td align="center">169-195</td>
            <td align="center">125</td>
            <td align="center">55-81</td>
            <td align="center">Illumina GAIIx</td>
            <td align="center">[<xref ref-type="bibr" rid="B21">21</xref>]</td>
          </tr>
          <tr>
            <td/>
            <td align="center">C3</td>
            <td align="center">V3</td>
            <td align="center">673,845</td>
            <td align="center">1</td>
            <td align="center">198</td>
            <td align="center">108</td>
            <td align="center">18</td>
            <td align="center">Illumina GAIIx</td>
            <td align="center">[<xref ref-type="bibr" rid="B10">10</xref>]</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <p>†hyper-variable regions in 16S rRNA; ‡the number of reference sequences; §excluding the primer (simulated).</p>
        <p>#Illumina error model v4 (forward rate 0.99%, reverse 2.40%); <italic>b</italic>v5 (forward rate 0.28%, reverse 0.34%).</p>
      </table-wrap-foot>
    </table-wrap>
    <p>For performance comparison with the proposed CASPER method, we employ three widely used approaches to merging paired-end reads: COPE [<xref ref-type="bibr" rid="B11">11</xref>], FLASH [<xref ref-type="bibr" rid="B6">6</xref>], and PANDAseq [<xref ref-type="bibr" rid="B10">10</xref>]. All of the four tools compared take quality scores [<xref ref-type="bibr" rid="B9">9</xref>] as input, and the quality score information of each sequence used was prepared in the FASTQ format. The specification of the machine used is as follows: Ubuntu 12.04, 4<italic>× </italic>2.2 GHz Intel Xeon E5-4620 CPUs (8 cores/16 threads each), and 512 GB main memory.</p>
    <sec>
      <title>Performance evaluation and comparison</title>
      <p>Table <xref ref-type="table" rid="T3">3</xref> lists the performance of CASPER and three other tools in terms of runtime (measured with 32 threads used) and other widely used metrics including the accuracy and <italic>F</italic><sub>1 </sub>score [<xref ref-type="bibr" rid="B22">22</xref>]. We use the evaluation methodology proposed in [<xref ref-type="bibr" rid="B10">10</xref>], which examines the completeness of resolving mismatches in the overlap to call the success of a merge (refer to Additional file <xref ref-type="supplementary-material" rid="S1">1</xref> for more details on the definition of evaluation metrics and additional experimental results).</p>
      <table-wrap id="T3" position="float">
        <label>Table 3</label>
        <caption>
          <p>Performance statistics (A4, A5, S4, S5: simulated; C1, C2, PA: real)</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left">Tool</th>
              <th align="center">dataset (# reads)</th>
              <th align="center"># merges</th>
              <th align="center"># correct merges</th>
              <th align="center">time (sec)</th>
              <th align="center">accuracy</th>
              <th align="center">
                <italic>F</italic>
                <sub>1</sub>
              </th>
              <th align="center">dataset (# reads)</th>
              <th align="center"># merges</th>
              <th align="center"># correct merges</th>
              <th align="center">time (sec)</th>
              <th align="center">accuracy</th>
              <th align="center">
                <italic>F</italic>
                <sub>1</sub>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">
                <bold>CASPER</bold>
              </td>
              <td/>
              <td align="right">
                <bold>999,936</bold>
              </td>
              <td align="right">
                <bold>967,842</bold>
              </td>
              <td align="right">
                <bold>30</bold>
              </td>
              <td align="right">
                <bold>0.968</bold>
              </td>
              <td align="right">
                <bold>0.984</bold>
              </td>
              <td/>
              <td align="right">
                <bold>713,782</bold>
              </td>
              <td align="right">
                <bold>667,421</bold>
              </td>
              <td align="right">
                <bold>23</bold>
              </td>
              <td align="right">
                <bold>0.932</bold>
              </td>
              <td align="right">
                <bold>0.965</bold>
              </td>
            </tr>
            <tr>
              <td align="left">COPE</td>
              <td align="center">A4</td>
              <td align="right">262,661</td>
              <td align="right">241,630</td>
              <td align="right">183</td>
              <td align="right">0.242</td>
              <td align="right">0.389</td>
              <td align="center">C1</td>
              <td align="right">603,357</td>
              <td align="right">572,885</td>
              <td align="right">205</td>
              <td align="right">0.800</td>
              <td align="right">0.889</td>
            </tr>
            <tr>
              <td align="left">FLASH</td>
              <td align="center">(1,000,000)</td>
              <td align="right">989,960</td>
              <td align="right">732,040</td>
              <td align="right">20</td>
              <td align="right">0.732</td>
              <td align="right">0.845</td>
              <td align="center">(716,366)</td>
              <td align="right">688,730</td>
              <td align="right">601,561</td>
              <td align="right">22</td>
              <td align="right">0.840</td>
              <td align="right">0.913</td>
            </tr>
            <tr>
              <td align="left">PANDAseq</td>
              <td/>
              <td align="right">991,698</td>
              <td align="right">807,691</td>
              <td align="right">6</td>
              <td align="right">0.808</td>
              <td align="right">0.894</td>
              <td/>
              <td align="right">693,518</td>
              <td align="right">590,898</td>
              <td align="right">5</td>
              <td align="right">0.825</td>
              <td align="right">0.904</td>
            </tr>
            <tr>
              <td colspan="13">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">
                <bold>CASPER</bold>
              </td>
              <td/>
              <td align="right">
                <bold>999,973</bold>
              </td>
              <td align="right">
                <bold>997,201</bold>
              </td>
              <td align="right">
                <bold>30</bold>
              </td>
              <td align="right">
                <bold>0.997</bold>
              </td>
              <td align="right">
                <bold>0.999</bold>
              </td>
              <td/>
              <td align="right">
                <bold>1,345,759</bold>
              </td>
              <td align="right">
                <bold>1,233,831</bold>
              </td>
              <td align="right">
                <bold>40</bold>
              </td>
              <td align="right">
                <bold>0.914</bold>
              </td>
              <td align="right">
                <bold>0.955</bold>
              </td>
            </tr>
            <tr>
              <td align="left">COPE</td>
              <td align="center">A5</td>
              <td align="right">924,634</td>
              <td align="right">915,981</td>
              <td align="right">205</td>
              <td align="right">0.916</td>
              <td align="right">0.956</td>
              <td align="center">C2</td>
              <td align="right">1,105,743</td>
              <td align="right">1,046,420</td>
              <td align="right">319</td>
              <td align="right">0.775</td>
              <td align="right">0.873</td>
            </tr>
            <tr>
              <td align="left">FLASH</td>
              <td align="center">(1,000,000)</td>
              <td align="right">999,578</td>
              <td align="right">977,355</td>
              <td align="right">19</td>
              <td align="right">0.977</td>
              <td align="right">0.989</td>
              <td align="center">(1,350,602)</td>
              <td align="right">1,282,916</td>
              <td align="right">1,101,436</td>
              <td align="right">35</td>
              <td align="right">0.816</td>
              <td align="right">0.898</td>
            </tr>
            <tr>
              <td align="left">PANDAseq</td>
              <td/>
              <td align="right">999,101</td>
              <td align="right">978,527</td>
              <td align="right">6</td>
              <td align="right">0.979</td>
              <td align="right">0.989</td>
              <td/>
              <td align="right">1,298,903</td>
              <td align="right">1,080,593</td>
              <td align="right">9</td>
              <td align="right">0.800</td>
              <td align="right">0.889</td>
            </tr>
            <tr>
              <td colspan="13">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">
                <bold>CASPER</bold>
              </td>
              <td/>
              <td align="right">
                <bold>1,000,000</bold>
              </td>
              <td align="right">
                <bold>960,986</bold>
              </td>
              <td align="right">
                <bold>29</bold>
              </td>
              <td align="right">
                <bold>0.961</bold>
              </td>
              <td align="right">
                <bold>0.980</bold>
              </td>
              <td/>
              <td align="right">
                <bold>671,877</bold>
              </td>
              <td align="right">
                <bold>658,631</bold>
              </td>
              <td align="right">
                <bold>19</bold>
              </td>
              <td align="right">
                <bold>0.977</bold>
              </td>
              <td align="right">
                <bold>0.989</bold>
              </td>
            </tr>
            <tr>
              <td align="left">COPE</td>
              <td align="center">S4</td>
              <td align="right">262,107</td>
              <td align="right">230,595</td>
              <td align="right">181</td>
              <td align="right">0.231</td>
              <td align="right">0.375</td>
              <td align="center">PA</td>
              <td align="left" colspan="5">[COPE does not run on PA]</td>
            </tr>
            <tr>
              <td align="left">FLASH</td>
              <td align="center">(1,000,000)</td>
              <td align="right">999,964</td>
              <td align="right">697,867</td>
              <td align="right">18</td>
              <td align="right">0.698</td>
              <td align="right">0.822</td>
              <td align="center">(673,845)</td>
              <td align="right">660,984</td>
              <td align="right">634,261</td>
              <td align="right">16</td>
              <td align="right">0.941</td>
              <td align="right">0.970</td>
            </tr>
            <tr>
              <td align="left">PANDAseq</td>
              <td/>
              <td align="right">999,976</td>
              <td align="right">785,919</td>
              <td align="right">5</td>
              <td align="right">0.786</td>
              <td align="right">0.880</td>
              <td/>
              <td align="right">660,593</td>
              <td align="right">635,663</td>
              <td align="right">4</td>
              <td align="right">0.943</td>
              <td align="right">0.971</td>
            </tr>
            <tr>
              <td colspan="13">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="left">
                <bold>CASPER</bold>
              </td>
              <td/>
              <td align="right">
                <bold>1,000,000</bold>
              </td>
              <td align="right">
                <bold>997,303</bold>
              </td>
              <td align="right">
                <bold>28</bold>
              </td>
              <td align="right">
                <bold>0.997</bold>
              </td>
              <td align="right">
                <bold>0.999</bold>
              </td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">COPE</td>
              <td align="center">S5</td>
              <td align="right">974,219</td>
              <td align="right">961,366</td>
              <td align="right">162</td>
              <td align="right">0.961</td>
              <td align="right">0.980</td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">FLASH</td>
              <td align="center">(1,000,000)</td>
              <td align="right">999,921</td>
              <td align="right">977,431</td>
              <td align="right">19</td>
              <td align="right">0.977</td>
              <td align="right">0.989</td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
            <tr>
              <td align="left">PANDAseq</td>
              <td/>
              <td align="right">999,947</td>
              <td align="right">976,701</td>
              <td align="right">6</td>
              <td align="right">0.977</td>
              <td align="right">0.988</td>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
              <td/>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Most notably, CASPER exhibits the highest level of accuracy and <italic>F</italic><sub>1 </sub>score over all the datasets used. In particular, for A4/S4 (simulated with higher error rates) and C1/C2/PA (real data), the average accuracy of CASPER is higher than that of COPE, FLASH, and PANDAseq by 86%, 21%, and 15%, respectively. In terms of <italic>F</italic><sub>1 </sub>scores, CASPER outperforms the other tools by 8-55% for A4/S4 and C1/C2/PA. For the simulated datasets with lower error rates (A5/S5), the performance of CASPER remains superior to the alternatives tested, although the performance gap is narrower due to the low error rates used to simulate A5 and S5. The evident robustness of CASPER would make it an invaluable tool for handling noisy sequencing data which are encountered frequently in practice. The performance of the tasks that utilize the paired-end merging results (such as genome assembly and mapping) will also benefit significantly from using CASPER, which can provide longer reads by merging forward and reverse reads robustly.</p>
      <p>As for runtime, CASPER is not the fastest, as expected from the fact that CASPER relies on the time-consuming <italic>k</italic>-mer counting. PANDAseq and FLASH, which do not employ <italic>k</italic>-mer counts, normally take the least amount of runtime. Nonetheless, the runtime of CASPER is obviously reasonable in most cases (taking about thirty seconds), unlike COPE, another <italic>k</italic>-mer-based merger that takes noticeably more time than the <italic>k</italic>-mer-free tools. Clearly, there is a trade-off between the runtime and accuracy of the merging tools, but considering the quality of merges CASPER can provide, we believe that CASPER is the tool that best balances this trade-off.</p>
    </sec>
    <sec>
      <title>Experiments on the context definition and probability computation</title>
      <p>In the context-based mismatch resolution, CASPER makes a call based on the ensemble of up to <italic>k </italic>individual decisions. For comparison, we additionally implement and measure the performance of a version that makes a decision based on only one of the <italic>k </italic>contexts, as shown in Figure <xref ref-type="fig" rid="F4">4</xref>. The distribution of the accuracy values this modified version reports for different <italic>j </italic>values (1 <italic>≤ j ≤ k</italic>) is represented by a box plot. We observe that the ensemble approach is effective for delivering more robust performance, although the observed performance gain is lower than the theoretical one (see 'Second pass: context-based correction' in Proposed Method), presumably due to the dependence between contexts.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Effects of making an integrative decision on the accuracy of merging</bold>. CASPER makes a call based on the ensemble of up to <italic>k </italic>individual decisions. For comparison, we additionally implement and measure the performance a version that makes a decision based on only one of the <italic>k </italic>contexts. For each dataset, the box plot in the figure shows the distribution of the accuracy values this modified version reports for different <italic>j </italic>values (1 <italic>≤ j ≤ k</italic>).</p>
        </caption>
        <graphic xlink:href="1471-2105-15-S9-S10-4"/>
      </fig>
      <p>As stated in 'Second pass: context-based correction' in Proposed Method, the context-based mismatch resolution of CASPER assumes that the bases in each of the forward and reverse reads have similar probabilities of being correct and thus does not consider quality scores when estimating probabilities using <italic>k</italic>-mer contexts. Alternatively, we can include quality scores in the probability estimation by multiplying the ratio of probabilities (<italic>i.e</italic>., <inline-formula><mml:math id="M21" name="1471-2105-15-S9-S10-i19" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:msup><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo class="MathClass-bin">-</mml:mo><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-bin">/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup><mml:mo class="MathClass-bin">/</mml:mo><mml:mn>1</mml:mn><mml:msup><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mo class="MathClass-bin">-</mml:mo><mml:msub><mml:mrow><mml:mi>Q</mml:mi></mml:mrow><mml:mrow><mml:mi>Y</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo class="MathClass-open">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>′</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo class="MathClass-close">)</mml:mo></mml:mrow><mml:mo class="MathClass-bin">/</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>) in Eq. (3) and Eq. (4). We implement both approaches and compare the results in Table <xref ref-type="table" rid="T4">4</xref> which indicates that there is negligible difference between these two approaches, and thus implying that the quality scores add little to the information provided by the <italic>k</italic>-mer contexts.</p>
      <table-wrap id="T4" position="float">
        <label>Table 4</label>
        <caption>
          <p>Comparison of # correct merges with and without considering quality scores during the probability estimation using <italic>k</italic>-mer counts</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="center">dataset</th>
              <th align="center"># reads</th>
              <th align="right" colspan="2">#correct merges</th>
              <th align="center">increase by q-score (%)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td/>
              <td/>
              <td align="right">
                <bold>(without)</bold>
              </td>
              <td>(with)</td>
              <td align="right"/>
            </tr>
            <tr>
              <td colspan="5">
                <hr/>
              </td>
            </tr>
            <tr>
              <td align="center">A4</td>
              <td align="right">1,000,000</td>
              <td align="right">967,842</td>
              <td align="right">967,875</td>
              <td align="right">0.003410</td>
            </tr>
            <tr>
              <td align="center">A5</td>
              <td align="right">1,000,000</td>
              <td align="right">997,201</td>
              <td align="right">997,211</td>
              <td align="right">0.001003</td>
            </tr>
            <tr>
              <td align="center">S4</td>
              <td align="right">1,000,000</td>
              <td align="right">960,986</td>
              <td align="right">960,984</td>
              <td align="right">-0.000208</td>
            </tr>
            <tr>
              <td align="center">S5</td>
              <td align="right">1,000,000</td>
              <td align="right">997,303</td>
              <td align="right">997,303</td>
              <td align="right">0.000000</td>
            </tr>
            <tr>
              <td align="center">C1</td>
              <td align="right">716,366</td>
              <td align="right">667,421</td>
              <td align="right">667,165</td>
              <td align="right">-0.038357</td>
            </tr>
            <tr>
              <td align="center">C2</td>
              <td align="right">1,350,602</td>
              <td align="right">1,233,831</td>
              <td align="right">1,233,012</td>
              <td align="right">-0.066379</td>
            </tr>
            <tr>
              <td align="center">PA</td>
              <td align="right">673,845</td>
              <td align="right">658,631</td>
              <td align="right">658,648</td>
              <td align="right">0.002581</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Effects of algorithm parameters and multithreading on performance</title>
      <sec>
        <title>Parameter k: the length of k-mer</title>
        <p>In general, using larger <italic>k </italic>has the advantage of examining wider contexts, but on the other hand, demands more memory and runtime. In the literature, there exist many <italic>k</italic>-mer-based bioinformatics tools, and different values of <italic>k </italic>are recommended depending on tasks and applications. For instance, the default <italic>k </italic>for seed-and-extend aligners are 11 for BLAST [<xref ref-type="bibr" rid="B23">23</xref>] and 28 for MegaBLAST [<xref ref-type="bibr" rid="B24">24</xref>].</p>
        <p>Figure <xref ref-type="fig" rid="F5">5(a</xref>) shows how the accuracy and runtime of CASPER varies as the <italic>k</italic>-mer size changes from <italic>k </italic>= 2 to <italic>k </italic>= 31 for dataset C1. To clearly show the overhead incurred by <italic>k</italic>-mer counting, Figure <xref ref-type="fig" rid="F5">5(a</xref>) also shows the time taken to count <italic>k</italic>-mers. In this figure, the accuracy of CASPER is seen to increase only up to a certain point as we increase <italic>k</italic>, plateauing out around <italic>k </italic>= 8. As <italic>k </italic>increases, the time to count <italic>k</italic>-mers starts decreasing at first but tends to increase in the long run, due to the IO bottleneck incurred by multithreading (see [<xref ref-type="bibr" rid="B14">14</xref>] for more details of this behavior). The only variation here is the value of <italic>k</italic>, and the total runtime of CASPER is directly proportional to the time taken to perform <italic>k</italic>-mer counting. The default value CASPER uses is <italic>k </italic>= 17, which is a widely used value in genome assembly [<xref ref-type="bibr" rid="B25">25</xref>]. Given the length of fragments in this C1 dataset, smaller values of <italic>k </italic>should work, as is observed in Figure <xref ref-type="fig" rid="F5">5(a</xref>). Users can change <italic>k </italic>depending on their analysis target.</p>
        <fig id="F5" position="float">
          <label>Figure 5</label>
          <caption>
            <p><bold>Effects of parameters <italic>k </italic>and <italic>δ </italic>on performance</bold>. (a) <italic>k</italic>, the size of <italic>k</italic>-mers defining contexts (dataset: C1). (b) <italic>δ</italic>, the threshold for starting context-based decisions (dataset: C1, S4, A4).</p>
          </caption>
          <graphic xlink:href="1471-2105-15-S9-S10-5"/>
        </fig>
      </sec>
      <sec>
        <title>Parameter δ: the threshold for starting context-based mismatch resolution</title>
        <p>Recall from 'Second pass: context-based correction' in Proposed Method that CASPER makes context-based decisions on which of the forward and reverse reads is correct if the quality score difference falls below <italic>δ</italic>. Otherwise, CASPER utilizes the quality score difference for the decisions. Figure <xref ref-type="fig" rid="F5">5(b)</xref> presents the effects of <italic>δ </italic>on the accuracy of CASPER. For the datasets used (A4, S4, C1), we observe a similar trend: as <italic>δ </italic>increases, the accuracy improves and eventually becomes saturated. Note that the number of mismatches handled by the quality-score-based decision increases as we lower <italic>δ</italic>. Thus, the observation that the accuracy degrades as <italic>δ </italic>is lowered strongly implies that the quality-score-based scheme becomes ineffective as <italic>δ </italic>decreases. This observation justifies the switch to the context-based scheme when quality scores do not differ significantly between two mismatching bases. This is also compatible with our motivation for developing CASPER: simply relying on quality scores may incur mistakes in resolving mismatches, when the difference in quality scores is not significant.</p>
      </sec>
      <sec>
        <title>Parameters γ and ω</title>
        <p>CASPER abandons read merging if the mismatch ratio in the overlap region is greater than <italic>γ</italic>. Figure <xref ref-type="fig" rid="F6">6(a)</xref> shows how the accuracy of CASPER is affected by changing the <italic>γ </italic>threshold (data: C1, S4, A4). The values of the other parameters are set to their default. We can observe that the accuracy steeply increases as we change <italic>γ </italic>from 0 to approximately 0.2, but after that, the change in accuracy seems negligible.</p>
        <fig id="F6" position="float">
          <label>Figure 6</label>
          <caption>
            <p><bold>Effects of parameters <italic>γ </italic>and <italic>ω </italic>on performance (dataset: C1, S4, A4)</bold>. (a) CASPER abandons read merging if the mismatch ratio in the overlap is greater than <italic>γ</italic>. (b) <italic>ω</italic>, the minimum length (in bp) of the overlap region between forward and reverse reads.</p>
          </caption>
          <graphic xlink:href="1471-2105-15-S9-S10-6"/>
        </fig>
        <p>Figure <xref ref-type="fig" rid="F6">6(b)</xref> shows how the accuracy changes as we vary the value of <italic>ω </italic>from 3 to 20 for the datasets C1, S4 and A4 (default values were used for the other parameters). In this plot, we do not see any significant change up to <italic>ω </italic>= 10. For larger values of <italic>ω</italic>, the accuracy gradually decreases for A4, whereas the accuracy does not change for the other datasets. This observation can be explained by noticing the size of overlaps in the datasets used. The overlap size is 40 for S4 and 50-81 for C1, as listed in Table <xref ref-type="table" rid="T2">2</xref>. Consequently, there should be no difference in accuracy for these datasets by varying <italic>ω </italic>from 3 to 20. In contrast, the overlap size for A4 is between 10 and 40, and the accuracy of CASPER for A4 becomes affected if we increase <italic>ω </italic>over 10.</p>
      </sec>
      <sec>
        <title>The number of computing threads used for parallelization</title>
        <p>Considering that read pairs can be merged independently of each other, most of the current approaches to merging paired-end reads provide parallel implementations. The task of <italic>k</italic>-mer counting adds another opportunity for parallelization, and CASPER utilizes the parallelized version of Jellyfish [<xref ref-type="bibr" rid="B14">14</xref>] for constructing the <italic>k</italic>-mer-count table.</p>
        <p>Figure <xref ref-type="fig" rid="F7">7(a)</xref> shows how the runtime of CASPER decreases as more threads are used for parallel execution. Due to the part of the code that cannot be parallelized, the effect of multithreading diminishes as the number of threads increases past a certain point. The speedup of <italic>k</italic>-mer counting shows a similar trend, as can be observed in the plot.</p>
        <fig id="F7" position="float">
          <label>Figure 7</label>
          <caption>
            <p><bold>Effects of the number of threads on runtime (dataset: C1)</bold>. (a) the total runtime of CASPER and the time taken to <italic>k</italic>-mer counting only. (b) comparison of different tools.</p>
          </caption>
          <graphic xlink:href="1471-2105-15-S9-S10-7"/>
        </fig>
        <p>Figure <xref ref-type="fig" rid="F7">7(b)</xref> shows a comparison of the four paired-end merging tools under comparison in terms of speedups by multithreading. For the cases where only a few threads are used, the <italic>k</italic>-mer-based methods (CASPER and COPE) are slower than FLASH and PANDAseq. As more threads are utilized, the runtime of CASPER steeply decreases and shows a similar run-time to the two non-<italic>k</italic>-mer approaches. In contrast, although the time demand of COPE is alleviated by multithreading to a certain extent, its runtime remains significantly higher than the others.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>Concluding remarks</title>
    <p>Among the four merging tools tested, CASPER consistently shows the best performance in terms of accuracy and <italic>F</italic><sub>1 </sub>score for the datasets used. We attribute the main reason for this improvement to the mismatching resolution policy employed by CASPER: when the quality scores differ significantly, it trusts the scores and uses them to decide the correct bases; otherwise, it switches to the context-based decision scheme based on <italic>k</italic>-mer counts around the mismatching bases. CASPER is most clearly differentiated from other approaches by this policy.</p>
    <p>One might suggest incorporating quality scores to some extent even when CASPER makes a context-based decision, similarly to an existing approach [<xref ref-type="bibr" rid="B11">11</xref>]. For instance, we could adjust the <italic>k</italic>-mer counts by considering the quality scores of the bases in a <italic>k</italic>-mer. According to our tests (<italic>e.g</italic>., see Table <xref ref-type="table" rid="T4">4</xref>), however, it is difficult to see any significant effect of this hybrid approach on the accuracy of merging once the quality score difference becomes lower than a threshold value.</p>
    <p>The most notable findings from our experiments can thus be summarized as follows: when the difference between the quality scores of a pair of mismatching bases falls below a threshold, the quality scores often fail to deliver decisive information on the identity of the correct base. Instead, using the <italic>k</italic>-mer contexts around the mismatching position is believed to be more informative.</p>
    <p>We envision various opportunities for improving CASPER: (1) Currently, the overlap finding step and the mismatch resolution step run separately. Given that a suboptimal arrangement of the overlap may become optimal after the mismatches therein are corrected, a future revision of CASPER may include simultaneous or iterative optimization of these two steps. (2) The context-based decision of CASPER presently relies on the idea of voting and may further be improved by adopting other types of ensemble learning techniques. In the revision process, care should be taken not to incur excessive computational overhead for learning. (3) CASPER presently considers only substitution type sequencing errors. Although substitutions are the most common error type in Illumina sequencing, indels (especially in homopolymers) are still problematic intervals particularly at read ends. By revising the context-based mismatch-resolution scheme, we may augment CASPER so that it can recognize and address indel-type sequencing errors as well as substitutions. (4) For the current form of dependence on <italic>k</italic>-mer counts, CASPER is particularly well suited for high-coverage amplicon sequencing. According to our experiments (summarized in Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>), however, the degree of sequencing depth required to obtain a high accuracy with CASPER tends to be moderate, suggesting its wide applicability of CASPER. For whole-genome shotgun sequencing, the context around mismatches in the overlap between forward and reverse reads may be defined differently to optimize the effectiveness of CASPER. It would be intriguing to analyze the effect of running CASPER on a variety of downstream tasks such as sequence assembly/mapping and metagenomic diversity estimation.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>SK implemented the method, carried out the experiments, and analyzed the results. BL participated in the experiments and analyzed the results. SY conceived the research, analyzed the results, and wrote the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title/>
    <p><bold>input </bold>: <italic>X, Y, Q<sub>X </sub>, Q<sub>Y </sub></italic>// <italic>X</italic>: forward read, <italic>Y </italic>: reverse read, <italic>Q<sub>X </sub>,Q<sub>Y </sub></italic>: q-scores</p>
    <p><bold>param </bold>: <italic>ω, γ, δ, k </italic>// <italic>ω</italic>: min overlap, <italic>γ</italic>: give-up threshold, <italic>δ</italic>: difference threshold, <italic>k</italic>: <italic>k</italic>-mer size</p>
    <p><bold>output</bold>: <italic>Z </italic>// virtually elongated read by merging forward &amp; reverse reads</p>
    <p>// step 3: find the best overlapping region between forward &amp; reverse reads</p>
    <p><bold>1 </bold>lowestMismatchRatio ← ∞, bestOverlapStartIndex ← 0</p>
    <p><bold>2 for </bold><italic>i ← </italic>1 <bold>to </bold><italic>n − ω </italic>+ 1 <bold>do</bold></p>
    <p><bold>3</bold>    numMismatches ← 0</p>
    <p><bold>4</bold>    <bold>for</bold><italic>j ← i </italic><bold>to</bold><italic> n </italic><bold>do</bold></p>
    <p><bold>5</bold>      <bold>if</bold>X(j) ≠ Y (j − i + 1) <bold>then </bold>numMismatches ← numMismatches + 1</p>
    <p><bold>6</bold>    <inline-formula><mml:math id="M22" name="1471-2105-15-S9-S10-i21" overflow="scroll"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mi>u</mml:mi><mml:mi>m</mml:mi><mml:mi>M</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi><mml:mo class="MathClass-bin">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula><italic>&lt; lowestMismatchRatio </italic><bold>then</bold></p>
    <p><bold>7</bold>    <italic>lowestMismatchRatio←</italic><inline-formula><mml:math id="M23" name="1471-2105-15-S9-S10-i22" overflow="scroll"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>n</mml:mi><mml:mi>u</mml:mi><mml:mi>m</mml:mi><mml:mi>M</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo class="MathClass-bin">-</mml:mo><mml:mi>i</mml:mi><mml:mo class="MathClass-bin">+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula></p>
    <p><bold>8</bold>    bestOverlapStartIndex ← i</p>
    <p><bold>9 if </bold><italic>lowestMismatchRatio &gt; γ </italic><bold>then </bold>return // give up (too many mismatches)</p>
    <p>// step 4 (first pass): qualty-score-based mismatch resolution</p>
    <p><bold>10 for </bold>i ← bestOverlapStartIndex <bold>to </bold>n <bold>do</bold></p>
    <p><bold>11</bold>    <italic>i′ </italic>= <italic>i − bestOverlapStartIndex </italic>+ 1 // for convenience in indexing <italic>Y</italic></p>
    <p><bold>12</bold>    <bold>if</bold><italic>X</italic>(<italic>i</italic>) = <italic>Y </italic>(<italic>i′</italic>) <bold>then </bold>continue // skip matching bases</p>
    <p><bold>13</bold>    <bold>else if </bold><italic>Q<sub>X</sub></italic>(<italic>i</italic>) <italic>− Q<sub>Y</sub></italic>(<italic>i′</italic>) <italic>&gt; δ </italic><bold>then </bold><italic>Y </italic>(<italic>i′</italic>) = <italic>X</italic>(<italic>i</italic>) // q in <italic>X </italic>is significantly better</p>
    <p><bold>14</bold>    <bold>else if </bold><italic>Q<sub>Y</sub></italic>(<italic>i′</italic>) <italic>− Q<sub>X</sub></italic>(<italic>i</italic>) <italic>&gt; δ </italic><bold>then </bold><italic>X</italic>(<italic>i</italic>) = <italic>Y</italic>(<italic>i′</italic>) // q in <italic>Y </italic>is significantly better</p>
    <p>// step 4 (second pass): context-based mismatch resolution</p>
    <p><bold>15 for </bold>i ← bestOverlapStartIndex <bold>to </bold>n <bold>do</bold></p>
    <p><bold>16 </bold><italic>i′ </italic>= <italic>i − bestOverlapStartIndex </italic>+ 1 // for convenience in indexing <italic>Y</italic></p>
    <p><bold>17 if </bold><italic>X</italic>(<italic>i</italic>) = <italic>Y </italic>(<italic>i′</italic>) <bold>then </bold>continue // skip matching bases</p>
    <p><bold>18 </bold><italic>ForwardVotes ← </italic>0, <italic>ReverseVotes ← </italic>0 // otherwise, examine the <italic>k</italic>-mer context</p>
    <p><bold>19 </bold><bold>for </bold><italic>j ← </italic>1 <bold>to </bold><italic>k </italic><bold>do</bold></p>
    <p><bold>20</bold>    <bold>if </bold><italic>i − k </italic>+ <italic>j &lt;</italic>1 <bold>then </bold>continue // index exceeds read boundary (left); continue to next <italic>j</italic></p>
    <p><bold>21</bold>    <bold>if </bold><italic>i </italic>+ <italic>j − </italic>1 <italic>&gt; n </italic><bold>then </bold>break // index exceeds read boundary (right); go to line 27</p>
    <p><bold>22</bold>    <bold>if </bold><italic>j &gt;</italic>1 <bold>and </bold><italic>X</italic>(<italic>i </italic>+ <italic>j − </italic>1) <italic>≠ </italic><italic>Y </italic>(<italic>i′ </italic>+ <italic>j − </italic>1) <bold>then </bold>break // context scan stops; go to line 27</p>
    <p><bold>23</bold>    <italic>Context<sub>X </sub>← T<sub>k</sub></italic>[<italic>X</italic>(<italic>i − k </italic>+ <italic>j </italic>: <italic>i </italic>+ <italic>j − </italic>1)] // <italic>k</italic>-mer counts in forward reads</p>
    <p><bold>24</bold>    <italic>Context<sub>Y </sub>← T<sub>k</sub></italic>[<italic>Y </italic>(<italic>i′ − k </italic>+ <italic>j </italic>: <italic>i′ </italic>+ <italic>j − </italic>1)] // <italic>k</italic>-mer counts in reverse reads</p>
    <p><bold>25</bold>    <bold>if </bold>Context<sub>X </sub>&gt; Context<sub>Y </sub><bold>then </bold>ForwardVotes ← ForwardVotes + 1</p>
    <p><bold>26</bold>    <bold>else if </bold>Context<sub>X </sub>&lt; Context<sub>Y </sub><bold>then </bold>ReverseVotes ← ReverseVotes + 1</p>
    <p><bold>27 if </bold><italic>ForwardVotes &gt; ReverseVotes </italic><bold>then </bold><italic>Y</italic>(<italic>i′</italic>) <italic>← X</italic>(<italic>i</italic>) // use the base in <italic>X</italic></p>
    <p><bold>28 else </bold><italic>X</italic>(<italic>i</italic>) <italic>← Y </italic>(<italic>i′</italic>) // use the base in <italic>Y</italic></p>
    <p>// step 5: merge forward &amp; reverse reads</p>
    <p><bold>29 for </bold><italic>i ← </italic>1 <bold>to </bold><italic>bestOverlapStartIndex − </italic>1 <bold>do </bold><italic>Z</italic>(<italic>i</italic>) <italic>← X</italic>(<italic>i</italic>) // copy first part from <italic>X</italic></p>
    <p><bold>30 for </bold><italic>i ← </italic>1 <bold>to </bold><italic>n </italic><bold>do </bold><italic>Z</italic>(<italic>i </italic>+ <italic>bestOverlapStartIndex − </italic>1) <italic>← Y </italic>(<italic>i</italic>) // copy second part from <italic>Y</italic></p>
    <p><bold>31 </bold>return <italic>Z</italic></p>
    <p><bold>Algorithm 1: </bold>Steps 3-5 of the proposed CASPER algorithm</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p>(PDF): description of performance evaluation methods and additional results.</p>
      </caption>
      <media xlink:href="1471-2105-15-S9-S10-S1.pdf">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>This work was supported in part by the National Research Foundation of Korea (NRF) grant funded by the Korea government (Ministry of Science, ICT and Future Planning) [No. 2011-0009963, and No. 2012M3A9D1054622] and in part by Samsung Electronics Co., Ltd. The authors would like to thank Sungwoon Choi and Hanjoo Kim at Yoon lab for helpful discussions, and Dr. Daniel Mason for proofreading the manuscript.</p>
  </sec>
  <sec>
    <title>Declarations</title>
    <p>Funding for open access charge was supported by Seoul National University.</p>
    <p>This article has been published as part of BMC Bioinformatics Volume 15 Supplement 9, 2014: Proceedings of the Fourth Annual RECOMB Satellite Workshop on Massively Parallel Sequencing (RECOMB-Seq 2014). The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcbioinformatics/supplements/15/S9">http://www.biomedcentral.com/bmcbioinformatics/supplements/15/S9</ext-link>.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schuster</surname>
          <given-names>SC</given-names>
        </name>
        <article-title>Next-generation sequencing transforms today's biology</article-title>
        <source>Nature</source>
        <year>2007</year>
        <volume>200</volume>
        <issue>8</issue>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Shendure</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Ji</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Next-generation dna sequencing</article-title>
        <source>Nature biotechnology</source>
        <year>2008</year>
        <volume>26</volume>
        <issue>10</issue>
        <fpage>1135</fpage>
        <lpage>1145</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt1486</pub-id>
        <?supplied-pmid 18846087?>
        <pub-id pub-id-type="pmid">18846087</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Metzker</surname>
          <given-names>ML</given-names>
        </name>
        <article-title>Sequencing technologies?the next generation</article-title>
        <source>Nature Reviews Genetics</source>
        <year>2009</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>31</fpage>
        <lpage>46</lpage>
        <?supplied-pmid 19997069?>
        <pub-id pub-id-type="pmid">19997069</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>Bioinformatics challenges of new sequencing technology</article-title>
        <source>Trends in Genetics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>3</issue>
        <fpage>142</fpage>
        <lpage>149</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tig.2007.12.006</pub-id>
        <?supplied-pmid 18262676?>
        <pub-id pub-id-type="pmid">18262676</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Genome assembly reborn: recent computational challenges</article-title>
        <source>Briefings in bioinformatics</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>4</issue>
        <fpage>354</fpage>
        <lpage>366</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbp026</pub-id>
        <?supplied-pmid 19482960?>
        <pub-id pub-id-type="pmid">19482960</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Magoč</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <article-title>FLASH: fast length adjustment of short reads to improve genome assemblies</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>21</issue>
        <fpage>2957</fpage>
        <lpage>2963</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr507</pub-id>
        <?supplied-pmid 21903629?>
        <pub-id pub-id-type="pmid">21903629</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rodrigue</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Materna</surname>
          <given-names>AC</given-names>
        </name>
        <name>
          <surname>Timberlake</surname>
          <given-names>SC</given-names>
        </name>
        <name>
          <surname>Blackburn</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Malmstrom</surname>
          <given-names>RR</given-names>
        </name>
        <name>
          <surname>Alm</surname>
          <given-names>EJ</given-names>
        </name>
        <name>
          <surname>Chisholm</surname>
          <given-names>SW</given-names>
        </name>
        <article-title>Unlocking short read sequencing for metagenomics</article-title>
        <source>PLOS One</source>
        <year>2010</year>
        <volume>5</volume>
        <issue>7</issue>
        <fpage>11840</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0011840</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Martin</surname>
          <given-names>JA</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>Z</given-names>
        </name>
        <article-title>Next-generation transcriptome assembly</article-title>
        <source>Nature Reviews Genetics</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>10</issue>
        <fpage>671</fpage>
        <lpage>682</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3068</pub-id>
        <?supplied-pmid 21897427?>
        <pub-id pub-id-type="pmid">21897427</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ewing</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>P</given-names>
        </name>
        <article-title>Base-calling of automated sequencer traces using Phred. II error probabilities</article-title>
        <source> Genome research</source>
        <year>1998</year>
        <volume>8</volume>
        <issue>3</issue>
        <fpage>186</fpage>
        <lpage>194</lpage>
        <?supplied-pmid 9521922?>
        <pub-id pub-id-type="pmid">9521922</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Masella</surname>
          <given-names>AP</given-names>
        </name>
        <name>
          <surname>Bartram</surname>
          <given-names>AK</given-names>
        </name>
        <name>
          <surname>Truszkowski</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Brown</surname>
          <given-names>DG</given-names>
        </name>
        <name>
          <surname>Neufeld</surname>
          <given-names>JD</given-names>
        </name>
        <article-title>PANDAseq: paired-end assembler for Illumina sequences</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>31</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-31</pub-id>
        <?supplied-pmid 22333067?>
        <pub-id pub-id-type="pmid">22333067</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Liu</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Yuan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Yiu</surname>
          <given-names>SM</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Xie</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Shi</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Lam</surname>
          <given-names>TW</given-names>
        </name>
        <etal/>
        <article-title>COPE: an accurate k-mer-based pair-end reads connection tool to facilitate genome assembly</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>22</issue>
        <fpage>2870</fpage>
        <lpage>2874</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts563</pub-id>
        <?supplied-pmid 23044551?>
        <pub-id pub-id-type="pmid">23044551</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="book">
        <name>
          <surname>Kwon</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Park</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Yoon</surname>
          <given-names>S</given-names>
        </name>
        <article-title>In-depth analysis of interrelation between quality scores and real errors in illumina reads</article-title>
        <source>Engineering in Medicine and Biology Society (EMBC), 2013 35th Annual International Conference of the IEEE</source>
        <year>2013</year>
        <publisher-name>IEEE</publisher-name>
        <fpage>635</fpage>
        <lpage>638</lpage>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gnerre</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>MacCallum</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Przybylski</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Ribeiro</surname>
          <given-names>FJ</given-names>
        </name>
        <name>
          <surname>Burton</surname>
          <given-names>JN</given-names>
        </name>
        <name>
          <surname>Walker</surname>
          <given-names>BJ</given-names>
        </name>
        <name>
          <surname>Sharpe</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Shea</surname>
          <given-names>TP</given-names>
        </name>
        <name>
          <surname>Sykes</surname>
          <given-names>S</given-names>
        </name>
        <etal/>
        <article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>
        <source>Proceedings of the National Academy of Sciences</source>
        <year>2011</year>
        <volume>108</volume>
        <issue>4</issue>
        <fpage>1513</fpage>
        <lpage>1518</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1017351108</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Marçais</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Kingsford</surname>
          <given-names>C</given-names>
        </name>
        <article-title>A fast, lock-free approach for efficient parallel counting of occurrences of k-mers</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>6</issue>
        <fpage>764</fpage>
        <lpage>770</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr011</pub-id>
        <?supplied-pmid 21217122?>
        <pub-id pub-id-type="pmid">21217122</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Melsted</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Pritchard</surname>
          <given-names>JK</given-names>
        </name>
        <article-title>Efficient counting of k-mers in dna sequences using a bloom filter</article-title>
        <source>BMC Bioinformatics</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>333</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-333</pub-id>
        <?supplied-pmid 21831268?>
        <pub-id pub-id-type="pmid">21831268</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Rizk</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Lavenier</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Chikhi</surname>
          <given-names>R</given-names>
        </name>
        <article-title>DSK: k-mer counting with very low memory usage</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>652</fpage>
        <lpage>653</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt020</pub-id>
        <?supplied-pmid 23325618?>
        <pub-id pub-id-type="pmid">23325618</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="book">
        <name>
          <surname>Berger</surname>
          <given-names>JO</given-names>
        </name>
        <source>Statistical Decision Theory and Bayesian Analysis</source>
        <year>2004</year>
        <volume>2</volume>
        <publisher-name>Springer, New York</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="book">
        <name>
          <surname>Alpaydin</surname>
          <given-names>E</given-names>
        </name>
        <source>Introduction to Machine Learning</source>
        <year>2004</year>
        <publisher-name>MIT press, Cambridge, Massachusetts</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>McElroy</surname>
          <given-names>KE</given-names>
        </name>
        <name>
          <surname>Luciani</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Thomas</surname>
          <given-names>T</given-names>
        </name>
        <article-title>Gemsim: general, error-model based simulator of next-generation sequencing data</article-title>
        <source>BMC genomics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>74</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-13-74</pub-id>
        <?supplied-pmid 22336055?>
        <pub-id pub-id-type="pmid">22336055</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Quince</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Lanzen</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Davenport</surname>
          <given-names>RJ</given-names>
        </name>
        <name>
          <surname>Turnbaugh</surname>
          <given-names>PJ</given-names>
        </name>
        <article-title>Removing noise from pyrosequenced amplicons</article-title>
        <source>BMC Bioinformatics</source>
        <year>2011</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>38</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-38</pub-id>
        <?supplied-pmid 21276213?>
        <pub-id pub-id-type="pmid">21276213</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Bartram</surname>
          <given-names>AK</given-names>
        </name>
        <name>
          <surname>Lynch</surname>
          <given-names>MD</given-names>
        </name>
        <name>
          <surname>Stearns</surname>
          <given-names>JC</given-names>
        </name>
        <name>
          <surname>Moreno-Hagelsieb</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Neufeld</surname>
          <given-names>JD</given-names>
        </name>
        <article-title>Generation of multimillion-sequence 16s rrna gene libraries from complex microbial communities by assembling paired-end illumina reads</article-title>
        <source>Applied and environmental microbiology</source>
        <year>2011</year>
        <volume>77</volume>
        <issue>11</issue>
        <fpage>3846</fpage>
        <lpage>3852</lpage>
        <pub-id pub-id-type="doi">10.1128/AEM.02772-10</pub-id>
        <?supplied-pmid 21460107?>
        <pub-id pub-id-type="pmid">21460107</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="other">
        <name>
          <surname>Witten</surname>
          <given-names>IH</given-names>
        </name>
        <name>
          <surname>Frank</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Data Mining: Practical Machine Learning Tools and Techniques</article-title>
        <source>Morgan Kaufmann, Burlington, Massachusetts</source>
        <year>2005</year>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Altschul</surname>
          <given-names>SF</given-names>
        </name>
        <name>
          <surname>Madden</surname>
          <given-names>TL</given-names>
        </name>
        <name>
          <surname>Sch¨affer</surname>
          <given-names>AA</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Miller</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Lipman</surname>
          <given-names>DJ</given-names>
        </name>
        <article-title>Gapped blast and psi-blast: a new generation of protein database search programs</article-title>
        <source>Nucleic acids research</source>
        <year>1997</year>
        <volume>25</volume>
        <issue>17</issue>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id>
        <?supplied-pmid 9254694?>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Zhang</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Schwartz</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Wagner</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Miller</surname>
          <given-names>W</given-names>
        </name>
        <article-title>A greedy algorithm for aligning dna sequences</article-title>
        <source>Journal of Computational biology</source>
        <year>2000</year>
        <volume>7</volume>
        <issue>1-2</issue>
        <fpage>203</fpage>
        <lpage>214</lpage>
        <pub-id pub-id-type="doi">10.1089/10665270050081478</pub-id>
        <?supplied-pmid 10890397?>
        <pub-id pub-id-type="pmid">10890397</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Fan</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Tian</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>He</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Cai</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Huang</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Cai</surname>
          <given-names>Q</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Bai</surname>
          <given-names>Y</given-names>
        </name>
        <etal/>
        <article-title>The sequence and de novo assembly of the giant panda genome</article-title>
        <source>Nature</source>
        <year>2009</year>
        <volume>463</volume>
        <issue>7279</issue>
        <fpage>311</fpage>
        <lpage>317</lpage>
        <?supplied-pmid 20010809?>
        <pub-id pub-id-type="pmid">20010809</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

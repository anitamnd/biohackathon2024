<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8991469</article-id>
    <article-id pub-id-type="publisher-id">4648</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-022-04648-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>RGMQL: scalable and interoperable computing of heterogeneous omics big data and metadata in R/Bioconductor</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Pallotta</surname>
          <given-names>Simone</given-names>
        </name>
        <address>
          <email>simone.pallotta@mail.polimi.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5628-9101</contrib-id>
        <name>
          <surname>Cascianelli</surname>
          <given-names>Silvia</given-names>
        </name>
        <address>
          <email>silvia.cascianelli@polimi.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Masseroli</surname>
          <given-names>Marco</given-names>
        </name>
        <address>
          <email>marco.masseroli@polimi.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1">Dipartimento di Elettronica, Informazione e Bioingegneria, Via Ponzio 34/5, 20133 Milan, Italy </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>4</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>7</day>
      <month>4</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>123</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>7</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>3</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Heterogeneous omics data, increasingly collected through high-throughput technologies, can contain hidden answers to very important and still unsolved biomedical questions. Their integration and processing are crucial mostly for tertiary analysis of Next Generation Sequencing data, although suitable big data strategies still address mainly primary and secondary analysis. Hence, there is a pressing need for algorithms specifically designed to explore big omics datasets, capable of ensuring scalability and interoperability, possibly relying on high-performance computing infrastructures.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We propose RGMQL, a R/Bioconductor package conceived to provide a set of specialized functions to extract, combine, process and compare omics datasets and their metadata from different and differently localized sources. RGMQL is built over the GenoMetric Query Language (GMQL) data management and computational engine, and can leverage its open curated repository as well as its cloud-based resources, with the possibility of outsourcing computational tasks to GMQL remote services. Furthermore, it overcomes the limits of the GMQL declarative syntax, by guaranteeing a procedural approach in dealing with omics data within the R/Bioconductor environment. But mostly, it provides full interoperability with other packages of the R/Bioconductor framework and extensibility over the most used genomic data structures and processing functions.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">RGMQL is able to combine the query expressiveness and computational efficiency of GMQL with a complete processing flow in the R environment, being a fully integrated extension of the R/Bioconductor framework. Here we provide three fully reproducible example use cases of biological relevance that are particularly explanatory of its flexibility of use and interoperability with other R/Bioconductor packages. They show how RGMQL can easily scale up from local to parallel and cloud computing while it combines and analyzes heterogeneous omics data from local or remote datasets, both public and private, in a completely transparent way to the user.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-022-04648-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Heterogeneous omics big data</kwd>
      <kwd>Data scalability</kwd>
      <kwd>Distribution transparency</kwd>
      <kwd>Tertiary data analysis</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100010663</institution-id>
            <institution>h2020 european research council</institution>
          </institution-wrap>
        </funding-source>
        <award-id>693174</award-id>
        <principal-award-recipient>
          <name>
            <surname>Masseroli</surname>
            <given-names>Marco</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par21">The rapid progress of Next Generation Sequencing (NGS) technologies and the improvement of data processing pipelines have lead to a dramatic increase in the volume of available omics data with associated high-level features. Both world-wide consortia and private research groups are gathering a huge number of different omics collections [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. A crucial point is to make sense of this amount and variety of omics data, using proper analyses and bioinformatic pipelines to investigate multiple biological and clinical conditions and possibly answer complex issues.</p>
    <p id="Par22">To this aim, suitable big data algorithms as well as integration and processing strategies are fundamental to guarantee scalability and performance, through efficient implementations on high performance computing infrastructures such as clouds, CPU clusters and network infrastructures. Omics datasets are in fact collected within many and heterogeneous data files, structured to trace genomic regions; these files are usually distributed on different repositories and frequently lack of an attribute-based organization or a systematic description of their metadata. Thus, to take advantage of them, available tools for standard knowledge extraction are often inefficient or inappropriate. Even when they have powerful features, rough programmatic interfaces make them not well-suited for biologists and scientists in the biomedical field.</p>
    <p id="Par23">Furthermore, cloud-based approaches and big data algorithms for computational genomics have so far been mainly targeted to speeding up NGS primary and secondary analysis. So, they are focused on read alignment, mapping and feature calling [<xref ref-type="bibr" rid="CR8">8</xref>–<xref ref-type="bibr" rid="CR12">12</xref>], while have been rarely directed to tertiary analysis [<xref ref-type="bibr" rid="CR13">13</xref>–<xref ref-type="bibr" rid="CR15">15</xref>]. Tertiary investigations aim to extract biological knowledge, like discovering how different genomic regions and their products interact with each other under given clinical conditions. Hence, they require multi-sample seamlessly integrated processing and analysis of region data and metadata from heterogenous omics datasets.</p>
    <p id="Par24">The GenoMetric Query Language (GMQL) [<xref ref-type="bibr" rid="CR16">16</xref>–<xref ref-type="bibr" rid="CR18">18</xref>] is a high-level, query language that addresses this kind of tasks performing efficient operations over genomic data and their metadata. Indeed, through parallel computation on cloud-based technologies, it performs implicit iterations over thousands of samples, hosted in its open cluster-based repository. GMQL is thus designed for high scalable performance on large datasets; yet, it supports only batch interactions (via its Web interface or Scala API), requires users to write queries compliant to its syntax, and does not provide direct support for data analysis and visualization.</p>
    <p id="Par25">We developed RGMQL to bridge this gap between the declarative nature of GMQL and the procedural workflows dealing with omics data, commonly carried out in the R/Bioconductor environment. RGMQL is indeed a R/Bioconductor [<xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>] software package able to bring query expressiveness and computational efficiency of GMQL within an interactive data processing flow. It is built over the GMQL data management and computational engine to provide a set of specialized functions that extract, combine, manipulate and compare genomic data and metadata, from both local and remote sources, without requiring any knowledge of GMQL syntax. More important, it is designed to offer complete interoperability and take full advantage of the other packages of data processing, statistical analysis, machine learning and visualization available within the R and Bioconductor frameworks. Notably, it provides extensibility over the most commonly used genomic data structures and processing functions, as to be easily used by researchers used to R programming.</p>
    <p id="Par26">RGMQL can even offer processing outsourcing, i.e., it can assign the analytical computational burden of a processing to a remote GMQL service. Also, it provides data distribution transparency; accordingly, data are always automatically handled and moved based on the actual processing unit (local or remote), without any further user concern. So, RGMQL can easily scale from local to parallel and cloud computing, while processing both local and remote omics datasets in completely transparent way to the user. Notably, data under analysis can be public or private, since when private data are processed remotely they are automatically uploaded in a private area of the GMQL repository, accessible to the proprietary user only.</p>
    <p id="Par27">Hence, RGMQL provides researchers with a valuable ally for omics data tertiary investigation. Being fully integrated within the R/Bioconductor framework, it can straightforwardly cooperate with other packages while it makes really easy to take advantage of GMQL functionalities. Also, it offers GMQL computational facilities and public datasets stored remotely, all ready-to-use for analyses that can involve user proprietary data as well. Furthermore, RGQML is able to guarantee FAIR principles [<xref ref-type="bibr" rid="CR21">21</xref>] (findability, accessibility, interoperability and reusabilty) not only at the data level, but also at the implementation level. The package can be found in Bioconductor and its code in the associated GitHub project. Genomic data and metadata are easy to find using RGMQL functions to explore the content of the remote repository. Data of interest can be materialized in the local file system and within the R environment to be further processed, ensuring interoperability with proprietary data and reusability. The same interoperability and reusability are provided by the package itself, which can cooperate with other R packages while reuses and extends existing R infrastructure and functions.</p>
    <sec id="Sec2">
      <title>Related works</title>
      <p id="Par28">The analysis of high-throughput heterogeneous genomic data has critically become dependent on robust and efficient bioinformatics approaches. Although many steps ahead have been made in the design of software and pipelines for such data processing, mainly addressing region data usually stored in BED (Browser Extensible Data) format, many software suites are still thought to be used on single experimental files; this is the case of the well-known BEDTools [<xref ref-type="bibr" rid="CR22">22</xref>] and BEDOPS [<xref ref-type="bibr" rid="CR23">23</xref>], which are Unix-based command line tools providing manipulation primitives for BED file analysis. Conversely, the GMQL system [<xref ref-type="bibr" rid="CR16">16</xref>–<xref ref-type="bibr" rid="CR18">18</xref>] allows implicit and efficient iterations over all the experimental samples of a dataset of interest; in [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR24">24</xref>] functional and performance comparisons of GMQL with BEDTools and BEDOPS are respectively provided. Furthermore, only the GMQL system has another crucial added value: it is able to handle and perform complex queries and data processing based on both genomic region data and metadata, which are fully organized and supported within the well-defined structure of the Genomic Data Model adopted in the GMQL system.</p>
      <p id="Par29">Despite GMQL original system is certainly the main work related to RGMQL, which inherits all its mentioned strengths, GMQL and RGMQL have highly divergent features. In particular, GMQL only provides batch interactions through its Web application and Scala API, whereas RGMQL works in a continuous R processing flow and ensures full interoperability and analysis of all produced results with the other R/Bioconductor software packages. Although a programmatic interface of GMQL, called PyGMQL [<xref ref-type="bibr" rid="CR25">25</xref>], has been developed for Python programming language, the possibility of taking advantage of GMQL in a seamless and fully integrated way within the R/Bioconductor environment is of key interest for the bioinformatic community. In fact, Bioconductor [<xref ref-type="bibr" rid="CR20">20</xref>] is one of the most used open-source software frameworks for open-development and execution of bioinformatic pipelines and omics data analyses [<xref ref-type="bibr" rid="CR26">26</xref>], which are highly facilitated by the use of R programming language and the availability of many dedicated R/Bioconductor software packages.</p>
      <p id="Par30">Well suited for the analysis and comprehension of high-throughput genomic data [<xref ref-type="bibr" rid="CR26">26</xref>, <xref ref-type="bibr" rid="CR27">27</xref>], Bioconductor strongly encourages extensive reuse of the infrastructure provided by its existing packages, as to enhance interoperability and full compatibility of each library, beyond offering robust high-quality code for data processing and analysis. Its last release (3.14)<xref ref-type="fn" rid="Fn1">1</xref> includes 2,083 software packages and numerous annotation and experimental data packages from published works. Particularly, the <italic>GenomicRanges</italic> and <italic>GenomicFeatures</italic> [<xref ref-type="bibr" rid="CR28">28</xref>] packages are the core of the R/Bioconductor infrastructure for omics data handling: they provide scalable data structures for representing annotated ranges (i.e., regions) on the genome and efficient algorithms for overlap computing, coverage calculation, data extraction and other intra- and inter-range operations. Specifically, GenomicRanges was built to include biologically relevant features upon the <italic>IRanges</italic> class, which represents a general vector of ranges. Its <italic>GRanges</italic> class defines a GRanges object that indeed contains an IRanges one, where ranges are enriched with sequence name (e.g., chromosome name), strand information, sequence length and possibly additional region metadata. Furthermore, its <italic>GRangesList</italic> class is designed to build a data structure grouping together GRanges of the same genome and sharing the same region metadata. Conversely, GenomicFeatures offers methods for extracting and manipulating genomic data annotations in GRanges and GRangesList objects. Beyond direct computational facilities, this core infrastructure mostly supports an increasing amount of other Bioconductor packages, including libraries for sequence analysis, differential expression analysis and data visualization. Yet, these kinds of processing require data to be available in main memory: though GRangesList have additional built-in data compression to cope with this issue, the need of RAM memory resident data and results represents undoubtedly a limit for scalability to big data contexts.</p>
      <p id="Par31">In this scenario, we designed RGMQL to be fully integrated in the R/Bioconductor framework and to seamlessly extend its functionalities, with any RGMQL resulting dataset that can be cast to a GRangesList data structure. Not only it ensures interoperabilty with the other R/Bioconductor packages, but also it provides cloud-based computational scalability and efficiency, extending the capabilities of R/Bioconductor that does not directly support scalable genomic data processing on remote clusters. In fact, although Bioconductor and also the general-purpose Comprehensive R Archive Network (CRAN) [<xref ref-type="bibr" rid="CR19">19</xref>] provide some efficient data manipulation packages used also for genomic data processing, their computational performances are usually enhanced through optimizations, local parallelism or calling lower-level code at run-time. Particularly, the well-known <italic>dplyr</italic> package [<xref ref-type="bibr" rid="CR29">29</xref>], including many useful data manipulation functions (e.g., filter(), select(), arrange()), provides fast performances thanks to embedded key code pieces written in C++ programming language. Only recently, the <italic>sparklyr</italic> [<xref ref-type="bibr" rid="CR30">30</xref>] package has been developed to take advantage of the strength of Apache Spark clusters [<xref ref-type="bibr" rid="CR31">31</xref>], providing compatible back-end for dplyr functions. Nonetheless, to the best of our knowledge RGMQL is the only R/Bioconductor package specifically tailored to comprehensively query heterogeneous genomic data, regardless if locally or remotely located, within a processing context extensible towards parallel computations on cloud-based technologies, even outsourcing the required computing power.</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Implementation</title>
    <p id="Par32">RGMQL is a R/Bioconductor package developed to make available GMQL operators in the R/Bioconductor environment, while ensuring full integration within such a programmatic framework. It is freely available both at <ext-link ext-link-type="uri" xlink:href="https://github.com/DEIB-GECO/RGMQL">https://github.com/DEIB-GECO/RGMQL</ext-link> and at <ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html">https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html</ext-link>, together with its complete documentation and its vignette, with some task-oriented examples of the package functionalities. Currently, in its first 4 years of life it counts more than 3,800 downloads only from Bioconductor.</p>
    <p id="Par33">Here, after a brief description of the GMQL system and of its data model, RGMQL design is thoroughly discussed, with particular attention to its strengths: the full integration within the R/Bioconductor framework and the distributed processing environments.</p>
    <sec id="Sec4">
      <title>GMQL and its genomic data model</title>
      <p id="Par34">The GenoMetric Query Language [<xref ref-type="bibr" rid="CR16">16</xref>–<xref ref-type="bibr" rid="CR18">18</xref>] is a high-level, declarative language developed to efficiently process huge omics datasets and their metadata. Indeed, it expresses operations through compact queries that implicitly imply iterations over all samples. As its name suggests, GMQL is able to process one or multiple datasets based on distal predicates, i.e., conditions related to the genomic distance (in base pairs) between any involved pair of genomic regions; yet, it is also able to support metadata predicates, concerning experimental and clinical properties. Thus, GQML extends conventional operations of relational algebra (e.g., SELECT, PROJECT, UNION, etc.) with further operations specifically designed for genomics, like the domain-specific operations JOIN, COVER, MAP or EXTEND. In Table <xref rid="Tab1" ref-type="table">1</xref>, all GMQL operators are reported and briefly described, together with their corresponding RGMQL functions.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Genometric RGMQL functions with their extension over already existing R functions and mapping to corresponding GMQL operators</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">R package of origin</th><th align="left">RGMQL function</th><th align="left">GMQL operator</th><th align="left">Brief description</th></tr></thead><tbody><tr><td align="left">dplyr</td><td align="left"><italic>arrange()</italic></td><td align="left">ORDER</td><td align="left">It orders samples sample regions based on metadata region attributes</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>collect()</italic></td><td align="left">MATERIALIZE</td><td align="left">Itsaves persistently the content of any dataset obtained after query completion</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>filter()</italic></td><td align="left">SELECT</td><td align="left">It extracts a subset of samples sample regions using region metadata predicates</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>group_by()</italic></td><td align="left">GROUP</td><td align="left">It groups samples sample regions based on region metadata attributes with the same value</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>select()</italic></td><td align="left">PROJECT</td><td align="left">It selects region metadata attributes to be kept and can update create metadata region attributes</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>setdiff()</italic></td><td align="left">DIFFERENCE</td><td align="left">It discards the regions of the first dataset intersecting regions of the second one</td></tr><tr><td align="left">dplyr</td><td align="left"><italic>union()</italic></td><td align="left">UNION</td><td align="left">It puts together samples of two datasets keeping as region attributes those of the first one</td></tr><tr><td align="left">base</td><td align="left"><italic>merge()</italic></td><td align="left">JOIN</td><td align="left">It returns a dataset by joining the regions of two datasets based on distance region predicates</td></tr><tr><td align="left">stats</td><td align="left"><italic>aggregate()</italic></td><td align="left">MERGE</td><td align="left">It combines all the samples of a dataset into a single sample</td></tr><tr><td align="left">–</td><td align="left"><italic>cover()</italic></td><td align="left">COVER</td><td align="left">It collapses the samples of a dataset into a single sample based on specified rules</td></tr><tr><td align="left">–</td><td align="left"><italic>execute()</italic></td><td align="left">–</td><td align="left">It launches the query execution</td></tr><tr><td align="left">–</td><td align="left"><italic>extend()</italic></td><td align="left">EXTEND</td><td align="left">It generates new metadata attributes for each sample from aggregations applied to region attributes</td></tr><tr><td align="left">–</td><td align="left"><italic>map()</italic></td><td align="left">MAP</td><td align="left">It computes aggregated values from overlapping regions of two datasets</td></tr></tbody></table></table-wrap></p>
      <p id="Par35">GMQL relies on a formal, unified data description model, called Genomic Data Model (GDM) [<xref ref-type="bibr" rid="CR24">24</xref>]: it is designed to homogeneously represent semantically heterogeneous omics data and metadata, comprehensively managing the latter ones through a flat attribute-based organization. A GDM dataset is associated with a data schema, where main attributes are fixed (chr, left, right, strand) and represent genomic region coordinates, while all other attributes further characterize each genomic region; conversely, metadata express general properties of each sample and are specified in free attribute-value pair format.</p>
      <p id="Par36">GDM-based datasets are organized, stored and loaded as collections of samples, including both region and metadata files. Specifically, the GMQL project makes available public data of several consortia in an open cluster-based curated repository, including data from The Cancer Genome Atlas (TCGA) [<xref ref-type="bibr" rid="CR3">3</xref>], the Encyclopedia of DNA Elements (ENCODE) [<xref ref-type="bibr" rid="CR5">5</xref>] and the 1000 Genomes Project (1KGP) [<xref ref-type="bibr" rid="CR32">32</xref>]; additionally, any user can have also a personal space to import private datasets, maintaining confidentiality and access control through login sessions.</p>
      <p id="Par37">All datasets can be processed efficiently by GMQL operators through the developed GMQL REST Web Services and Web interface. The underlying architecture ensures scalability and parallelism of processing, and allows using local, remote and distributed File Systems, as well as several deployment strategies on cloud environments or on single Java virtual machines.</p>
      <p id="Par38">The main implementation of the GMQL system, publicly accessible at <ext-link ext-link-type="uri" xlink:href="http://www.gmql.eu/">http://www.gmql.eu/</ext-link>, is installed on a cluster at CINECA, the largest Italian computing centre and one of the most important worldwide. Currently, this GMQL architecture includes an application server and a cluster of machines for execution over the Spark engine and Hadoop Distributed File System. More details about the GMQL system are in [<xref ref-type="bibr" rid="CR18">18</xref>].</p>
    </sec>
    <sec id="Sec5">
      <title>RGMQL design</title>
      <p id="Par39">RGMQL has been designed to offer both the expressive power of the GMQL query language and straightforward usability by any user with only knowledge of the R syntax. In fact, its functions are developed to directly provide extensibility over core data structures and processing functions commonly used in the R/Bioconductor environment, as well as to be fully interoperable with many other R/Bioconductor packages.</p>
      <p id="Par40">Additionally, it can perform complex and computationally intensive queries (involving region data and metadata of GDM-based datasets) with the same efficiency of the GMQL system. Indeed, it shares the GMQL back-end architecture and cloud-based engine to handle and process in parallel also huge genomic datasets, through remote execution performed at GMQL site. Thanks to the underlying GMQL Apache Spark [<xref ref-type="bibr" rid="CR33">33</xref>] engine, RGMQL allows scaling up from local to cluster and cloud execution. The back-end interacts with the R front-end through the <italic>Web Services functions</italic> module depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, which maps the RGMQL functions to the corresponding GMQL operators (Table <xref rid="Tab1" ref-type="table">1</xref>) implemented in Spark. Furthermore, RGMQL supplies several utility functions (Table <xref rid="Tab2" ref-type="table">2</xref>) needed for seamless integration with the GMQL system, exploration of its curated repository and remote access to the GMQL computational resources.<fig id="Fig1"><label>Fig. 1</label><caption><p>Representation of the RGMQL package within the R/Bioconductor environment. <italic>REST Web services</italic> and <italic>Sequential execution</italic> modules can handle alternative RGMQL processing environments, together with their dependency links to <italic>httr</italic> and <italic>rJava</italic> R packages, respectively</p></caption><graphic xlink:href="12859_2022_4648_Fig1_HTML" id="MO1"/></fig><table-wrap id="Tab2"><label>Table 2</label><caption><p>Additional RGMQL functions to handle initialization, remote data exploration, processing and result conversions</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Function type</th><th align="left">RGMQL function</th><th align="left">Brief description</th><th align="left">Input dataset</th><th align="left">Output dataset</th><th align="left">Remote processing required</th></tr></thead><tbody><tr><td align="left" rowspan="17">FUNCTIONS TO HANDLE, READ AND ANALYZE LOCAL AND REMOTE DATASETS, PROVINDING ALSO USEFUL CONVERSIONS</td><td align="left">delete_dataset()</td><td align="left">It deletes a private dataset from remote repository</td><td align="left">Remote dataset</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">download_dataset()</td><td align="left">It downloads a private dataset from remote repository to local path</td><td align="left">Remote dataset</td><td align="left">Local dataset</td><td align="left">YES</td></tr><tr><td align="left">download_as_GRangesList()</td><td align="left">It downloads a private dataset into R environment as a GRangesList</td><td align="left">Remote dataset</td><td align="left">GRangesList</td><td align="left">YES</td></tr><tr><td align="left">export_gmql()</td><td align="left">It creates a GDM-like dataset from a GRangesList</td><td align="left">GRangesList</td><td align="left">Local dataset</td><td align="left">NO</td></tr><tr><td align="left">filter_and_extract()</td><td align="left">It filters based on metadata predicates and generates a new GRanges with a chosen list of region attributes. It works if samples have their region coordinates (chr, ranges, strand) in the same order</td><td align="left">Local dataset/ GRangesList</td><td align="left">GRanges</td><td align="left">NO</td></tr><tr><td align="left">import_gmql()</td><td align="left">It creates a GRangesList from a GDM-like dataset</td><td align="left">Local dataset</td><td align="left">GRangesList</td><td align="left">NO</td></tr><tr><td align="left">read_gmql()</td><td align="left">It reads a GMQLDataset from a dataset (with a valid format) on disk, or from the remoterepository in case of remote processing</td><td align="left">Local/Remote dataset</td><td align="left">GMQLDataset</td><td align="left">YES, if is_local = FALSE</td></tr><tr><td align="left">read_GRangesList()</td><td align="left">It reads a GMQLDataset from a GRangeList</td><td align="left">GRangesList</td><td align="left">GMQLDataset</td><td align="left">NO</td></tr><tr><td align="left">sample_metadata()</td><td align="left">It retrieves metadata of a specific sample in a dataset</td><td align="left">Remote dataset</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">sample_region()</td><td align="left">It retrieves regions data of a specific sample in a dataset</td><td align="left">Remote dataset</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">semijoin()</td><td align="left">It supports the filter method defining semijoin conditions on metadata</td><td align="left">–</td><td align="left">–</td><td align="left">NO</td></tr><tr><td align="left">show_datasets_list()</td><td align="left">It shows all GMQL datasets in remote repository, both public or privately stored by the user</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">show_all_metadata()</td><td align="left">It shows all metadata of a given GMQL dataset either locally or in the remote repository</td><td align="left">–</td><td align="left">–</td><td align="left">NO</td></tr><tr><td align="left">show_samples_list()</td><td align="left">It show all samples of a GMQL dataset on the remote repository</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">show_schema()</td><td align="left">It shows the region attribute schema of a GMQL dataset on the remote repository</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">take()</td><td align="left">It saves as a GRangesList any dataset resulting from local processing. If invoked after collect(), the dataset is materialized also in local File System</td><td align="left">GMQLDataset</td><td align="left">GRangesList</td><td align="left">NO, only for local processing</td></tr><tr><td align="left">upload_dataset()</td><td align="left">It uploads a dataset (GDM or not), and a corresponding GMQL dataset is created on the remote repository</td><td align="left">Local dataset</td><td align="left">Remote dataset</td><td align="left">YES</td></tr><tr><td align="left" rowspan="11">FUNCTIONS TO HANDLE GMQL SERVER AND MONITOR REMOTE JOBS, IF NEEDED</td><td align="left">init_gmql()</td><td align="left">It initializes and runs GMQL server to execute any processing, and also performs a login to GMQL REST services suite, if needed</td><td align="left">–</td><td align="left">–</td><td align="left">NO</td></tr><tr><td align="left">login_gmql()</td><td align="left">Login to GMQL REST services suite as a registered user, specifying username and password, or as guest</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">logout_gmql()</td><td align="left">Logout from GMQL REST services suite</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">register_gmql()</td><td align="left">Register to GMQL REST services suite</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">remote_processing()</td><td align="left">It allows to enable or disable remote processing</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">show_jobs_log()</td><td align="left">It shows the log of a specific job</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">trace_job()</td><td align="left">It traces a specific job</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">show_job_list()</td><td align="left">It shows all jobs (run, succeded or failed) invoked by the user on the remote GMQL server</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">show_queries_list()</td><td align="left">It shows all the GMQL queries saved by the user on the remote repository</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">stop_gmql()</td><td align="left">It stops the GMQL server processing</td><td align="left">–</td><td align="left">–</td><td align="left">NO</td></tr><tr><td align="left">stop_job()</td><td align="left">It stops a specific job</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left" rowspan="6">FUNCTIONS USING QUERIES IN GMQL SYNTAX</td><td align="left">compile_query()</td><td align="left">It compiles a GMQL query inserted as a text string</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">compile_query_fromfile()</td><td align="left">It compiles a GMQL query taken from a file</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">run_query()</td><td align="left">It runs a GMQL query inserted as a text string</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">run_query_fromfile()</td><td align="left">It runs a GMQL query taken from a file</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">save_query()</td><td align="left">It saves into the remote repository a GMQL query, taken from a file</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr><tr><td align="left">save_query_fromfile()</td><td align="left">It saves into the remote repository a GMQL query, inserted as a text string</td><td align="left">–</td><td align="left">–</td><td align="left">YES</td></tr></tbody></table><table-wrap-foot><p>For each function, we report if it requires remote resources and processing, as well as the formats of its input and output data</p></table-wrap-foot></table-wrap></p>
      <p id="Par41">Typically, R/Bioconductor packages are developed to handle data of limited size through the use of a single machine; they usually read datasets in RAM memory all at once, and every R object must reside entirely in memory to be processed. This often prevents the analysis of big data, besides requiring long time to process large sets of data. Conversely, RGMQL overcomes such limitations, guaranteeing the same scalability of GMQL and allowing to work with very large datasets, usually not available in local but cloud repositories. Such big data cannot be handled with standard R data structures allocated in the main memory. Accordingly, in RGMQL we have introduced the <italic>GMQLDataset</italic> class, an abstract R structure that represents each GMQL dataset without containing any information about samples (regions or metadata). A R <italic>GMQLDataset</italic> object is indeed only a reference to the desired resulting GMQL dataset, which keeps trace (through a directed acyclic graph) of all the operators to be sequentially applied on the involved input dataset(s) to obtain it. Processing and real availability of the results are actually deferred until the materialize command is called by invoking an execution function. This lazy execution resembles the lazy loading of the R code objects adopted for packages use. It closes the gap between the interactive computations within R/Bioconductor and the typical GMQL batch execution. In fact, it is needed to perform remote execution at the GMQL site, but it is preserved also for local processing since it allows to eventually optimize the processing.</p>
      <p id="Par42">Hence, RGMQL provides a great flexibility of usage in the R/Bioconductor environment, allowing to use indistinctly remote query outsourcing or local processing on the user machine, even working seamlessly on local or remote data. Users are provided with an easy-to-use and interactive framework leveraging both R/Bioconductor and GMQL. Any processing is part of a continuous workflow although RGMQL does not generate any actual result before an execution function is called at runtime, both in local or remote processing. Deferring the computational effort until a result is actually needed (in the local file system or within the R/Bioconductor environment) for further analyses allows to overcome, but synchronize with, the batch-oriented style of the underlying GMQL system.</p>
    </sec>
    <sec id="Sec6">
      <title>RGMQL integration capabilities: interoperability and extensibility</title>
      <p id="Par43">One of the main strengths of RGMQL is to enable a procedural way of working with genomic datasets. Users can in fact perform multiple operations, interleaving RGMQL manipulations with processing and visualizations involving many other R/Bioconductor packages; the only requirement is including each piece of RGMQL code in an initialization-execution block, so that all intermediate and final results of interest are correctly materialized in the main or mass memory and available for further analyses.</p>
      <p id="Par44">Within such an integrative analytical processing, RGMQL requires full interoperability with the other R/Bioconductor packages. This concerns primarily the dependencies on external packages to convert or bridge idiomatic R constructs and operations to GMQL native syntax. In addition, it greatly regards the needed mapping of GMQL datasets into existing R data structures, suitably and widely-used by other packages in the R/Bioconductor environment. Accordingly, any abstract <italic>GMQLDataset</italic> or any GMQL dataset already saved in mass memory, can be loaded in main memory into a <italic>GRangesList</italic> object, one of the most commonly used R data structure. This makes it accessible in a widely supported format for further processing. Therefore RGMQL is designed to provide not only the efficient data structures, but also several import/export functions that allow data manipulation in <italic>GRangesList</italic> format, regardless the engine chosen to execute the RGMQL processing. An explanatory representation of these functions is reported in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, specifying when to apply each of them based on the data source location.<fig id="Fig2"><label>Fig. 2</label><caption><p>Representation of RGMQL functions for data import/export both locally and remotely. A GMQLDataset is created by the <italic>read_GMQL()</italic> function from a local dataset (in GDM or different tab-delimited format), or from a remote dataset (specifying is_local = FALSE). Any processing is applied on the involved GMQLDataset objects, and the computation and materialization of any result (remotely or locally) is deferred until the <italic>collect()</italic> and <italic>execute()</italic> functions are called. A GMQLDataset can be created also by the <italic>read_GRangesList()</italic> function from a GRangesList. Similarly, a GRangesList can be obtained from a remote dataset through the <italic>download_as_GRangesList()</italic> function, from a local dataset through the <italic>import_GMQL()</italic> function and, in local processing only, directly from a GMQLDataset through the <italic>take()</italic> function</p></caption><graphic xlink:href="12859_2022_4648_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par45">Also, to guarantee full integration and compatibility with the most commonly used R/Bioconductor packages, RGMQL functions were named to override well-known R/Bioconductor processing functions, as to extend their functionalities on <italic>GMQLDataset</italic> instances. In doing this, RGMQL functions move away from the original names of the corresponding GMQL operators, but ease their comprehensibility and application for any scientist used to R/Bioconductor. Particularly, besides a couple of basic functions coming from the <italic>base</italic> and <italic>stats</italic> R packages, RGMQL extends other functions with a well-known meaning that are implemented in the widely-used <italic>dplyr</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] R package for data manipulation; Table <xref rid="Tab1" ref-type="table">1</xref> shows the RGMQL functions together with the R package generally defining their functionalities and the corresponding GMQL operators.</p>
      <p id="Par46">Therefore, RGMQL not only ensures interoperability with other packages, but also full integration within the R/Bioconductor environment: indeed, it provides extensibility over well-known functions and genomic data structures commonly used within such a framework.</p>
    </sec>
    <sec id="Sec7">
      <title>RGMQL distributed processing environments: flexibility and scalability</title>
      <p id="Par47">RGMQL can consume computational power directly from the local CPUs/system, operating in the R/Bioconductor local processing environment, or use remote processing resources offered by the GMQL ecosystem. The former option takes advantage of the GMQL possibility to be deployed on a single Java virtual machine, while the others allocate resources and run (respectively only or partially) on a cluster, which is transparently provided by the remote GMQL server. Although local processing is adequate only for limited data size and not suitable for big data processing, it is a relevant added value to be able to work locally. For example, there are sensitive data that users cannot even export in their own private space on the GMQL remote repository, for restriction constraints.</p>
      <p id="Par48">For remote processing, indeed RGMQL lets users log (with private credentials or simply as a temporary guest) into the remote GMQL infrastructure and also manage large public genomic datasets, there hosted in the cluster-based curated repository. Then, it enables users to consume remote GMQL services, providing two ways of accessing a GMQL system instance: directly through the GMQL REST Web services or indirectly, passing through the GMQL Scala API contained into a compressed .jar file enclosed in the RGMQL package.</p>
      <p id="Par49">Hence, RGMQL implements two different sets of functions and processing modes, henceforth referred as: 1) the <italic>REST Web services</italic> mode, which generates HTTP requests, through the <italic>httr</italic> R package, designed to map closely to the underlying HTTP protocol and providing all standard HTTP functions; and 2) the <italic>Sequential execution</italic> mode, which uses the <italic>rJava</italic> R package to interface with the GMQL Scala API (Fig. <xref rid="Fig1" ref-type="fig">1</xref>).</p>
      <p id="Par50">The <italic>REST Web services</italic> mode does not require any bridging, since it is executed via Web service functions only. By invoking REST services users can upload local datasets into a private area of the remote repository, compile and run remotely a textual query (written in GMQL syntax and passed as argument of the R code) over remote private and/or public datasets, and download datasets resulting from remote processing into a local folder. All operations can be applied both on originally remote datasets or on local ones previously uploaded; this is directly inherited from the GMQL system approach, which allows the addressed repository to be deployed on a local or a distributed Hadoop File System (HDFS) [<xref ref-type="bibr" rid="CR34">34</xref>].</p>
      <p id="Par51">The <italic>Sequential execution</italic> mode, instead, lets users work in local or remote processing with both local and remote datasets, as clearly appears in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. In local processing, the <italic>Sequential execution</italic> module is only interfaced with the Local File System. Conversely, when users choose remote processing and read any data, the system automatically uploads it on the remote system if it is not already there. Once loaded, RGMQL functions are called to process data remotely, hiding the batch-like interactions that are issued sequentially at execution time. In this case, processing instructions are written as RGMQL functions, which need a direct bridging with the corresponding GMQL Scala API. The bridge is built by implementing the whole logic into a “wrapper” class written in Scala, a dialect of the Java programming language, and using the <italic>rJava</italic> R package to implement conversions on both sides, as reported in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. This wrapper class is instantiated in R/Bioconductor and its public methods are called at execution time to run the GMQL operators underlying every RGMQL function. Each method of this wrapper class can indeed directly call the corresponding native GMQL API. However, only primitive data types (integer, numeric, logical and character) are passed with no conversion from R to Scala; all multi-dimensional data types must be converted in Java objects before passing them as arguments to the wrapper class methods. The same applies when implementing the dual logic, passing data back: the conversion is always performed on the R side through <italic>rJava</italic> functions. The RGMQL <italic>execute()</italic> function returns a directed acyclic graph (DAG) including all the GMQL operators to be sequentially applied on the involved dataset(s). A BASE64 serialized version of the DAG is then sent automatically through the direct ’REST Web Services’ path, as to launch the query remotely on the GMQL system.</p>
      <p id="Par52">Notably, in mixed processing the <italic>Sequential execution</italic> module can alternatively process locally both local and remote data (automatically downloaded locally), or ask for outsourced processing of remote or local data (automatically uploaded remotely). Thus, RGMQL offers also data distribution transparency, since data are always automatically handled and moved according to the actual processing unit in use. Regardless of the computing unit, any resulting dataset can be saved (after local processing) or downloaded (after remote processing) in the local File System as a GDM-based dataset. Conversely, when a resulting dataset is still needed in the R/Bioconductor environment, it can be loaded (in local processing) or downloaded (after remote processing) in main memory as a <italic>GRangesList</italic> object, made of a <italic>GRanges</italic> object for each sample and including all its region and metadata attributes. Such kind of loading in <italic>GRangesList</italic> is possible also starting from a GDM-based dataset already in mass memory, as long as the size of the obtained <italic>GRangesList</italic> (or compressed <italic>GRangesList</italic>) object does not exceed the maximum allowed space in RAM.</p>
      <p id="Par53">Overall, the alternative local and remote processing environments offered by RGMQL are easily interchangeable within a single analysis flow. This guarantees high performance scalability, necessary to work on big genomic data, and extreme flexibility of use, as required by the procedural approach of the bioinformatics research, which typically combines different analyses and data sources.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Results</title>
    <p id="Par54">In the following subsections we illustrate clear and fully reproducible example use cases of usefulness, expressive power and flexibility of the RGMQL package in biologically relevant applications. Their complete workflows are available as R Notebooks in the RGMQL GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/DEIB-GECO/RGMQL">https://github.com/DEIB-GECO/RGMQL</ext-link>), together with the vignette and reference manual of the RGMQL package. These examples show the processing capabilities of RGMQL in terms of suitability and scalability offered to perform data-intensive computations on large datasets. Also, they demonstrate RGMQL easiness of use within complete workflows: this is enabled by the data distribution transparency, the flexibility in mixing local and remote data and processing modes, and the full interoperability with other R packages when results are imported as <italic>GenomicRanges</italic> objects.</p>
    <sec id="Sec9">
      <title>Use case 1: Mutational analysis of kidney cancer patients</title>
      <p id="Par55">This example use case shows how RGMQL, together with the remote engine and curated genomic data repository provided by GMQL, permits to easily perform genomic analyses on big datasets; particularly, here we take advantage of RGMQL remote processing to analyze somatic mutational events in specific patients affected by Kidney Renal Clear Cell Carcinoma (KIRC), extracted from a large dataset provided by The Cancer Genome Atlas.</p>
      <p id="Par56">First, the datasets in the remote GMQL curated repository are explored using the <italic>show_datasets_list()</italic> function, and available mutation datasets are identified. The <italic>show_all_metadata()</italic> function is then used to find metadata (e.g., age and type of patients) of mutation datasets of interest. In this example we choose the <italic>GRCh38_TCGA_somatic_mutation_masked_2019_10</italic> dataset, containing somatic mutation data regarding 10,187 samples of 33 TCGA cancer types:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figa_HTML" id="MO3"/>
      <p id="Par57">Specific data of interest are then analyzed remotely using the GMQL engine. First the <italic>filter()</italic> function is used to select the KIRC patients of interest, e.g., those younger than 65 years at initial KIRC diagnosis:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figb_HTML" id="MO4"/>
      <p id="Par58">The <italic>map()</italic> function is used to find and count, for each mutation sample and each gene, all somatic mutations occurring in gene regions. Such regions are identified based on the GRCh38 reference genome annotations from the NCBI Reference Sequence database (RefSeq) [<xref ref-type="bibr" rid="CR35">35</xref>], available in the remote GMQL curated repository:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figc_HTML" id="MO5"/>
      <p id="Par59">Following, only genes with at least one mutation are preserved through the <italic>filter()</italic> function. Additionally, for each sample the mutated genes are counted, storing such counts in a new metadata attribute called ’geneMut_count’, by means of the <italic>extend()</italic> function:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figd_HTML" id="MO6"/>
      <p id="Par60">Eventually, found results can be saved in the local file system as a GDM dataset, and also downloaded in memory as GRangesList. The latter ones can be further straightforwardly analyzed and visualized in the R environment with other useful R functions. Particularly, ’geneMut_count’ values can be used to prioritize the samples (one for each patient) from the most to the least mutated one (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). From this simple evaluation we can notice that somatic mutated gene counts are quite homogeneously distributed across samples, with a lower quartile of 26 and an upper quartile of 45 mutated genes. Only a sample/patient (sample id: S_00140) clearly appears as an outlier, with its 466 mutated genes. Since genes appear mostly characterized by a single somatic mutation (2 is the 99th percentile), a similar behaviour is obtained also when plotting the total number of mutational events occurring in each patient.</p>
      <p id="Par61">More relevantly, obtained results can be thoroughly analyzed by studying and plotting somatic mutation distributions across samples, as to highlight the most mutated genes in the KIRC population of interest. The mutation count of each gene region is evaluated considering the percentage of involved patients (Fig. <xref rid="Fig3" ref-type="fig">3</xref>) or the number of actual mutational events compared to the gene length (Additional file <xref rid="MOESM2" ref-type="media">2</xref>). Although in some samples multiple events exist in the same gene region, the top 20 mutated genes are exactly coincident in both cases and include the VHL and TTN-AS1 genes and the PCDH gene family.<fig id="Fig3"><label>Fig. 3</label><caption><p>Top 20 genes by percentage of the 217 patients under analysis with the gene mutated</p></caption><graphic xlink:href="12859_2022_4648_Fig3_HTML" id="MO7"/></fig></p>
      <p id="Par62">The association between the VHL gene and kidney cancer is widely recognized [<xref ref-type="bibr" rid="CR36">36</xref>–<xref ref-type="bibr" rid="CR38">38</xref>]: it reaches a DisGeneNet association score of 0.9 [<xref ref-type="bibr" rid="CR39">39</xref>] and more than 90% of the renal clear cell carcinoma are known to be characterized by somatic mutations in the VHL gene [<xref ref-type="bibr" rid="CR40">40</xref>, <xref ref-type="bibr" rid="CR41">41</xref>]. Conversely, at present the TTN-AS1 gene, encoding a lncRNA transcribed from the opposite strand of the TTN gene, is known to be primarily associated with myopathy and other cardiac and muscular diseases [<xref ref-type="bibr" rid="CR42">42</xref>].; similarly the protocadherins (Pcdhs), which are predominantly expressed in the nervous system and constitute the largest subfamily of the cadherin superfamily of cell-adhesion molecules, are until now known to be mostly associated with epilepsy and central nervous system neoplasms and disorders [<xref ref-type="bibr" rid="CR43">43</xref>, <xref ref-type="bibr" rid="CR44">44</xref>], but also with several other cancers [<xref ref-type="bibr" rid="CR41">41</xref>, <xref ref-type="bibr" rid="CR44">44</xref>].<fig id="Fig4"><label>Fig. 4</label><caption><p>Top 20 genes by number of mutations per gene length across the 217 patients considered</p></caption><graphic xlink:href="12859_2022_4648_Fig4_HTML" id="MO8"/></fig></p>
      <p id="Par63">The involvement of VHL gene alterations in kidney cancer is confirmed also when inspecting gene mutation counts normalized by gene length. This normalization determines a top 20 gene list (Fig. <xref rid="Fig4" ref-type="fig">4</xref>) including mainly microRNA and small nucleolar RNA genes, favored by their short length (at most about a hundred bases); yet, despite its 12,036 bp length, the VHL gene is still included in this list, together with HIST1H2AC, a gene encoding for a nuclear protein responsible for the nucleosome structure [<xref ref-type="bibr" rid="CR40">40</xref>], and OR8G1, a gene encoding for an olfactory receptor protein, known to be associated with breast, ovarian and pancreatic cancer [<xref ref-type="bibr" rid="CR41">41</xref>]. While the evidences on VHL clearly confirm its involvement in kidney cancer, the other found data-driven associations can be worthy of further investigations.</p>
    </sec>
    <sec id="Sec10">
      <title>Use case 2: Patient-wise hierarchical clustering based on combined omics data</title>
      <p id="Par64">In this use case, whose workflow is schematically illustrated in Additional file <xref rid="MOESM3" ref-type="media">3</xref>, we show how to combine remote public and local omics data in remote processing, before performing further local analyses on the results. Particularly, we investigate the expression data of both messenger RNA and microRNA genes aligned to the GRCh38 reference genome, focusing on TCGA patients affected by Adrenocortical carcinoma (ACC). The miRNA expression data of such patients are supposed available in the working directory of the local file system in GDM format, within the <italic>GRCh38_miRNA_ACC</italic> dataset (available for reproducibility purpose at <ext-link ext-link-type="uri" xlink:href="https://github.com/DEIB-GECO/RGMQL">https://github.com/DEIB-GECO/RGMQL</ext-link>). Corresponding TCGA ACC expression values from RNA-sequencing experiments are instead extracted from the large <italic>GRCh38_TCGA_gene_expression_2019_10</italic> dataset, available on the remote GMQL curated repository (including 11,092 TCGA gene expression profile samples of 33 cancer types):</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Fige_HTML" id="MO9"/>
      <p id="Par65">The two resulting datasets are then processed together remotely, after the local dataset automatic uploading, transparent to the user, in a temporary reserved area of the remote GMQL repository. Specifically, the datasets are joined through the <italic>merge()</italic> function based on their <italic>biospecimen__bio__bcr_analyte_barcode</italic> metadata attribute, keeping for each miRNA region also the mRNA gene region at the minimum distance. This is possible thanks to setting to <italic>MD(1)</italic> the <italic>genometric_predicate</italic> and to <italic>BOTH</italic> the <italic>region_output</italic> parameters of the function:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figf_HTML" id="MO10"/>
      <p id="Par66">Once the joined dataset is computed and downloaded in the local file system, the remote processing mode can be turned off to proceed with further local analyses. The <italic>filter_and_extract()</italic> function can be used to import only raw count values and gene annotations from the result dataset in the local R environment, within a GRanges object:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figg_HTML" id="MO11"/>
      <p id="Par67">From it, we derive a samples-per-features dataset, where each column hosts values of a different miRNA or mRNA gene and each row is named according to the TCGA ID of the corresponding sample. Differently from the previous use case, here we use the official TCGA patient ID to identify each patient profile, as to ease comparison with preexisting analyses of TCGA data. Such identifiers are collected from the <italic>biospecimen__shared__bcr_patient_barcode</italic> key-value pairs in the metadata table. This table is obtained from the downloaded GDM dataset through the <italic>show_all_metadata()</italic> function, simply as follows:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figh_HTML" id="MO12"/>
      <p id="Par68">Analogously, we can import in the R environment some clinical annotations of each sample (e.g., tumor outcome status, stage and grade), which may characterize the gene-driven subgroups of patients that emerge from a patient clustering analysis. For this evaluation, we start from a matrix of raw expression values extracted from the previously obtained <italic>GR_ACC</italic> GRanges object. First, we remove miRNA and mRNA genes with null raw values in 25% of samples or more, so as to discard too lowly-expressed genes that are more easily affected by noise and thus less reliable:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figi_HTML" id="MO13"/>
      <p id="Par69">Then, after data normalization performed through the <italic>normalize()</italic> function of the <italic>BBmisc</italic> package [<xref ref-type="bibr" rid="CR45">45</xref>], we assess and visualize the optimal number of clusters based on the average silhouette width, computed using the <italic>fviz_nbclust()</italic> function of the <italic>factoextra</italic> R package [<xref ref-type="bibr" rid="CR46">46</xref>] (Additional file <xref rid="MOESM4" ref-type="media">4</xref>).</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figj_HTML" id="MO14"/>
      <p id="Par70">Considering the found optimal number of three clusters, we apply the Ward Hierarchical Clustering by means of the <italic>hclust()</italic> R function, using the Spearman correlation-based distance as dissimilarity measure among the expression profiles, computed through the <italic>get_dist()</italic> function of the <italic>factoextra</italic> R package; the obtained dendrogram is plotted and the three clusters are highlighted on it with coloured rectangles by means of the <italic>rect.hclust()</italic> R function. Furthermore, the <italic>fviz_cluster()</italic> function of the same <italic>factoextra</italic> R package can be used to depict the three clusters, selected by the <italic>cutree()</italic> R function, in a ggplot2-based visualization [<xref ref-type="bibr" rid="CR47">47</xref>] (Fig. <xref rid="Fig5" ref-type="fig">5</xref>), using as space dimensions the two principal components of the data:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figk_HTML" id="MO15"/>
      <p id="Par71">
        <fig id="Fig5">
          <label>Fig. 5</label>
          <caption>
            <p>Clusters from patient-wise hierarchical clustering on the first two dimensions of the data principal component analysis. The fraction of variance explained by each dimension is reported as percentage in the corresponding axis label</p>
          </caption>
          <graphic xlink:href="12859_2022_4648_Fig5_HTML" id="MO16"/>
        </fig>
      </p>
      <p id="Par72">The three clusters obtained include 49, 17 and 13 patients, respectively. Each of these clusters can be compared with the previously extracted clinical metadata, as well as with clustering results and survival annotations emerged from the ’Comprehensive Pan-Genomic Characterization of Adrenocortical Carcinoma’ [<xref ref-type="bibr" rid="CR48">48</xref>] and other pan-cancer studies [<xref ref-type="bibr" rid="CR49">49</xref>] performed by the TCGA consortium. Accordingly, mosaic plots are useful for showing how different stratification results overlap with each other; particularly, it is interesting to compare our clustering results with those obtained using the K4 gene signature [<xref ref-type="bibr" rid="CR48">48</xref>], which is indicative of steroid phenotype low and high, with or without proliferation (Fig. <xref rid="Fig6" ref-type="fig">6</xref>).<fig id="Fig6"><label>Fig. 6</label><caption><p>Mosaic plot of the three clusters emerged from patient-wise hierarchical clustering compared with the published clustering results obtained in [<xref ref-type="bibr" rid="CR48">48</xref>] using the K4 gene signature</p></caption><graphic xlink:href="12859_2022_4648_Fig6_HTML" id="MO17"/></fig></p>
      <p id="Par73">Similarly, considering the available median follow-up of 39.3 months, it is relevant to assess prognostic insights arising from each cluster by means of the overall survival status and months annotations (Fig. <xref rid="Fig7" ref-type="fig">7</xref>).<fig id="Fig7"><label>Fig. 7</label><caption><p>Mosaic plot of the three clusters emerged from patient-wise hierarchical clustering compared with the patient overall survival status annotations</p></caption><graphic xlink:href="12859_2022_4648_Fig7_HTML" id="MO18"/></fig></p>
      <p id="Par74">From these comparisons we can notice that all patients in our third cluster have steroid phenotype low without proliferation and are living. Conversely, the first and biggest cluster has a majority of steroid phenotype high cases (82%), half with and half without proliferation; out of them, only 24 are still living, with more than 20% annotated with a recurrence event, while 24 patients are deceased, 14 within the first 2 years after diagnosis. Eventually, the second cluster, despite its heterogeneous phenotype, includes only 3 cases with increased proliferation, of which one is deceased and another one is recurred after 5 years; overall there are only 3 deceased patients, all having high steroid phenotype, while the high majority of this cluster patients is living and disease-free. Thus, the smaller second and third cluster patients, sharing wild type proliferation levels, show better expected prognoses compared with the first cluster patients.</p>
      <p id="Par75">This use case demonstrates the easiness of combining remote and local (also possibly private) data, and of using remote processing for a computationally intensive task, like a join operation on large datasets. It proves also the advantage of locally retrieving only the computed results, which are typically much smaller in size. Furthermore, it shows the usefulness of the <italic>filter_and_extract()</italic> function, which allows selecting from a resulting dataset and importing in the R environment only the specific data of interest for the next processing. The so-obtained GRanges format can indeed be easily manipulated and analyzed also with many R functions from different packages. The use case shows how to use several of them for an effective local exploration of data and visualization of the results from the remote processing of a large dataset, supporting also their clinical/biological assessment and interpretation.</p>
    </sec>
    <sec id="Sec11">
      <title>Use case 3: Identification of transcription factor high accumulation DNA zones</title>
      <p id="Par76">In this last use case, we report a more complex computational workflow (schematically illustrated in Additional file <xref rid="MOESM5" ref-type="media">5</xref>) to stress the usefulness of RGMQL and remote processing in performing complex queries on large datasets; RGMQL provided results can then be straightforwardly analyzed in the local R environment with full interoperability. Particularly, as an example we illustrate how to identify transcription factor (TF) High Occupancy Target (HOT) regions [<xref ref-type="bibr" rid="CR50">50</xref>–<xref ref-type="bibr" rid="CR52">52</xref>]. TFs are proteins that control the rate of transcription of genetic information from DNA to RNA, by binding to specific DNA sequences. Investigating HOT DNA regions, bound by many different transcription factors, is crucial to understand cancer genesis and develop new targeted therapies. RGMQL can automate all the steps needed to identify TF high accumulation DNA zones, interoperably cooperating with the TFHAZ Bioconductor package [<xref ref-type="bibr" rid="CR53">53</xref>].</p>
      <p id="Par77">ChIP-seq data describes protein interactions with the DNA, including those of transcription factors. Their processing is usually specialized in identifying broad domains (covering wider DNA regions) or narrow peaks (limited to local spikes); both of them are worthy to be investigated to find HOT regions. Thus, we consider both BROAD PEAK and NARROW PEAK datasets released from the ENCODE consortium [<xref ref-type="bibr" rid="CR5">5</xref>], available in the remote GMQL curated repository with 2,136 and 11,468 samples, respectively. Using the <italic>filter()</italic> function, we select ChIP-seq data of high quality (<italic>peaks</italic> and <italic>optimal idr thresholded peaks</italic>) focusing on the human embryonic stem cell line H1-hESC, and we group together the so-obtained samples in a single dataset through the <italic>union()</italic> function:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figl_HTML" id="MO19"/>
      <p id="Par78">Then, we filter out all samples subjected to pharmacological treatment or annotated with quality issues, and we further use the <italic>filter()</italic> function to discard all samples regarding histone modifications:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figm_HTML" id="MO20"/>
      <p id="Par79">Also, we add the length of each DNA region in each sample as a new region attribute through the <italic>regions_update</italic> parameter of the <italic>select()</italic> function; then, for each sample we compute the number of regions and the sum of their lengths, and store them as sample metadata using the <italic>extend()</italic> function:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Fign_HTML" id="MO21"/>
      <p id="Par80">Once our main GMQLDataset <italic>TF_rep_good</italic> (including DNA regions that are binding sites of transcription factors) is ready, we use it in two independent but related processings. The first one is needed to extract a threshold able to identify transcription factor bound DNA regions of interest. After aggregating all samples in a single sample through the <italic>aggregate()</italic> function (notice that ’<italic>biosample_term_name</italic>’ is uniquely associated with the value ’H1-hESC’ by dataset construction), we order regions by ascending values of their length through the <italic>arrange()</italic> function; then, we execute the RGMQL query to materialize its result and download it in the local R environment as a GRangesList:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figo_HTML" id="MO22"/>
      <p id="Par81">We further process such result locally to extract from the regions, ordered by their length, the index of their 95th percentile: our threshold is thus the length of the region placed at the so-obtained index. This threshold is useful to distinguish DNA regions worthy to be further examined from too wide regions, having length over the threshold. Such wide regions are indeed outliers that can affect HOT region detection, since their big length can biasedly increase the number of TFs that bind the region.</p>
      <p id="Par82">At this point, going back to the RGQML remote processing and to our main GMQLDataset <italic>TF_rep_good</italic>, we perform a second processing; first, it selects the DNA regions to be further examined based on the just computed threshold; then, it adds all the attributes needed for the following HOT region detection. With the <italic>filter()</italic> function we select as regions of interest only those with a length smaller than the just computed superior threshold, but at least greater than a given inferior threshold (e.g., 100 bases). Then, through the <italic>extend()</italic> function we create new metadata attributes (<italic>region_number_filtered</italic> and <italic>sum_length_filtered</italic>) by computing, for each sample, the current number of contained DNA regions and the sum of their lengths, respectively:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figp_HTML" id="MO23"/>
      <p id="Par83">Following, we combine samples of experiments having the same target TF, using the <italic>cover()</italic> function with ’<italic>experiment_target</italic>’ as grouping parameter. Then, through the <italic>regions_update</italic> parameter of the <italic>select()</italic> function we update the values of the region attribute <italic>length</italic> for the obtained combined regions. Also, using the <italic>extend()</italic> function we create new useful metadata attributes for each of the so-obtained samples: the number of so-obtained combined regions (which have the same TF as target) and the min, max and sum of their lengths:</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figq_HTML" id="MO24"/>
      <p id="Par84">The so-obtained dataset <italic>TF</italic> is downloaded in the current local R environment as a GRangesList object to be straightforwardly further processed and analyzed. From the GRangesList, a GRanges object <italic>GR_H1_hESC</italic> is extracted, including a flatten list of all genomic regions (ranges) coming from all the <italic>TF</italic> samples, together with a single metadata, i.e., the annotation of the TF binding each region. <italic>GR_H1_hESC</italic> contains 344,556 ranges from different chromosomes, annotated with 28 different transcription factors. It is analyzed with the following functions of the TFHAZ package [<xref ref-type="bibr" rid="CR53">53</xref>]. First, the <italic>accumulation()</italic> function is used to compute the accumulation vector on all chromosomes of interest, i.e., the number of transcription factors binding each base of a chromosome; this is done here below for chromosome 21 as an example. Then, the <italic>high_accumulation_zones()</italic> function is applied on the accumulation vector (<italic>TF_acc_21_w_0</italic>) to extract HOT zones, which have greater number of TF binding regions, according to the ’overlaps’ identification method. This method uses a single-base local approach and considers all and only the DNA bases of the TF accumulation vector to compute the threshold (as mean accumulation plus twice standard deviation) needed to identify the HOT zones.</p>
      <graphic position="anchor" xlink:href="12859_2022_4648_Figr_HTML" id="MO25"/>
      <p id="Par85">From this analysis, in chromosome 21 we find 186 HOT DNA regions, each bound by more than 5 transcription factors according to the threshold of 5.6 computed by the <italic>high_accumulation_zones()</italic> function. Figure <xref rid="Fig8" ref-type="fig">8</xref> shows that the HOT regions obtained are mainly present in the second half of the chromosome 21 and absent from its initial portion.<fig id="Fig8"><label>Fig. 8</label><caption><p>Plot of the transcription factor accumulation for chromosome 21 and of the 186 HOT zones (in red) identified according to the found accumulation threshold 5.6 (red line)</p></caption><graphic xlink:href="12859_2022_4648_Fig8_HTML" id="MO26"/></fig></p>
      <p id="Par86">The computational workflow discussed in this use case highlights the precious role of RGMQL in simplifying complex analysis such as the considered one. It allows performing the entire processing within the R environment, but without requiring consumption of local computational resources: indeed it takes advantage of the scalability and parallel computing offered by GMQL. This result can not be achieved by using only the GMQL system, or only the TFHAZ package together with other available R/Bioconductor packages. Indeed, in processing omics data, also big, RGMQL profits of both the facilities of the R environment and of the data and computational resources offered by the GMQL ecosystem. Therefore, once again, RGMQL demonstrates to play a key role in providing both a useful interactive procedural approach, typical of the bioinformatics research, and scalable performance.</p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Conclusions</title>
    <p id="Par87">As R is able to interface with a variety of other languages to take advantage of well-established and state-of-the-art algorithms and protocols, similarly the R/Bioconductor RGMQL package is designed to be fully interoperable with other R packages, as well as with GMQL. Indeed, it provides the query expressiveness, computational efficiency and scalability of GMQL in the R/Bioconductor environment. Specialized RGMQL functions can extract, combine and manipulate omics big data and their metadata from different and differently localized sources. To this aim, RGMQL extends the most used genomic data structures and processing functions, and is completely integrated within the R/Bioconductor framework.</p>
    <p id="Par88">As proven in our three examples of biologically relevant use cases, RGMQL can leverage on public data hosted in the remote GMQL repository, and take advantage at runtime of the most suitable processing mode. This can be chosen according to the analysis workflow of interest and the location of the involved data, and it can be easily changed along the workflow. RGMQL further key added values are indeed the flexibility and easiness of use. Switching between local and remote processing with a single line of code, users can benefit from outsourcing the computational burden to the GMQL engine. Involved data are always moved automatically, when needed, thanks to the implemented data distribution transparency. Additionally, RGMQL allows merging not only remote and local public data, but even proprietary data: also in case of remote processing they are loaded in a private area of the remote repository, accessible through authenticated login only.</p>
    <p id="Par89">Furthermore, RGMQL is able to guarantee the FAIR principles of findability, accessibility, interoperability and reusabilty, both at the data and at the implementation level. Hence, RGMQL is definetely a versatile and valuable ally in the R/Bioconductor-based genomic research, in particular for scalable omics data tertiary investigations.</p>
  </sec>
  <sec id="Sec13">
    <title>Availability and requirements</title>
    <p id="Par90">
      <list list-type="bullet">
        <list-item>
          <p id="Par91">Project name: RGMQL</p>
        </list-item>
        <list-item>
          <p id="Par92">Project home page: on GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/DEIB-GECO/RGMQL">https://github.com/DEIB-GECO/RGMQL</ext-link> on Bioconductor: <ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html">https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html</ext-link></p>
        </list-item>
        <list-item>
          <p id="Par93">Operating system(s): Platform independent</p>
        </list-item>
        <list-item>
          <p id="Par94">Programming languages: R and Scala/Java</p>
        </list-item>
        <list-item>
          <p id="Par95">Other requirements: R (<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ge$$\end{document}</tex-math><mml:math id="M2"><mml:mo>≥</mml:mo></mml:math><inline-graphic xlink:href="12859_2022_4648_Article_IEq1.gif"/></alternatives></inline-formula> 3.4.2), Java (<inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ge$$\end{document}</tex-math><mml:math id="M4"><mml:mo>≥</mml:mo></mml:math><inline-graphic xlink:href="12859_2022_4648_Article_IEq2.gif"/></alternatives></inline-formula> 1.8)</p>
        </list-item>
        <list-item>
          <p id="Par96">License: Artistic-2.0</p>
        </list-item>
        <list-item>
          <p id="Par97">Any restrictions to use by non-academics: None</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec14">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2022_4648_MOESM1_ESM.jpg">
            <caption>
              <p><bold>Additional file 1</bold>. Supplementary figure of the use case 1, showing the counts of mutated genes for each KIRC patient younger than 65 years</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2022_4648_MOESM2_ESM.png">
            <caption>
              <p><bold>Additional file 2</bold>. Supplementary figure of the use case 1, showing the top 20 genes by number of mutations across the 217 patients under analysis, orderly and proportionally plotted horizontally by their gene length, from left (VHL - 12,036 bp) to right (PCDHA@ - 226,209 bp)</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2022_4648_MOESM3_ESM.jpg">
            <caption>
              <p><bold>Additional file 3</bold>. Flowchart of the main steps of use case 2. As illustrated, starting from both local and remote gene expression datasets, a RGMQL mixed processing first joins the two datasets remotely, then downloads and processes the result locally. After the generation of a samples-per-genes dataset, also the main phases of local post-processing with clustering analysis are depicted</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12859_2022_4648_MOESM4_ESM.jpg">
            <caption>
              <p><bold>Additional file 4</bold>. Supplementary figure of the use case 2, showing the optimal number of clusters based on the average silhouette width</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="12859_2022_4648_MOESM5_ESM.jpg">
            <caption>
              <p><bold>Additional file 5</bold>. Flowchart of the main steps of use case 3. As illustrated, after RGMQL remote pre-processing of the ENCODE ChIP-seq datasets of interest, two independent but related RGMQL processing are performed. The first one computes the threshold needed to select the DNA regions on which the transcription factor (TF) accumulation must be assessed. The second one uses the threshold to select such regions, and process them up to find HOT DNA zones by cooperating with the TFHAZ Bioconductor package</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>1KGP</term>
        <def>
          <p id="Par4">1000 Genomes Project</p>
        </def>
      </def-item>
      <def-item>
        <term>ACC</term>
        <def>
          <p id="Par5">Adrenocortical carcinoma</p>
        </def>
      </def-item>
      <def-item>
        <term>API</term>
        <def>
          <p id="Par6">Application Programming Interface</p>
        </def>
      </def-item>
      <def-item>
        <term>BED</term>
        <def>
          <p id="Par7">Browser Extensible Data</p>
        </def>
      </def-item>
      <def-item>
        <term>CRAN</term>
        <def>
          <p id="Par8">Comprehensive R Archive Network</p>
        </def>
      </def-item>
      <def-item>
        <term>DAG</term>
        <def>
          <p id="Par9">directed acyclic graph</p>
        </def>
      </def-item>
      <def-item>
        <term>ENCODE</term>
        <def>
          <p id="Par10">Encyclopedia of DNA Elements</p>
        </def>
      </def-item>
      <def-item>
        <term>GDM</term>
        <def>
          <p id="Par11">Genomic Data Model</p>
        </def>
      </def-item>
      <def-item>
        <term>GMQL</term>
        <def>
          <p id="Par12">GenoMetric Query Language</p>
        </def>
      </def-item>
      <def-item>
        <term>HDFS</term>
        <def>
          <p id="Par13">Hadoop File System</p>
        </def>
      </def-item>
      <def-item>
        <term>HOT</term>
        <def>
          <p id="Par14">High Occupancy Target</p>
        </def>
      </def-item>
      <def-item>
        <term>KIRC</term>
        <def>
          <p id="Par15">Kidney Renal Clear Cell Carcinoma</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par16">Next Generation Sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>Pcdhs</term>
        <def>
          <p id="Par17">protocadherins</p>
        </def>
      </def-item>
      <def-item>
        <term>RefSeq</term>
        <def>
          <p id="Par18">Reference Sequence</p>
        </def>
      </def-item>
      <def-item>
        <term>TCGA</term>
        <def>
          <p id="Par19">The Cancer Genome Atlas</p>
        </def>
      </def-item>
      <def-item>
        <term>TF</term>
        <def>
          <p id="Par20">Transcription factor</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par102"><ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/news/bioc_3_14_release/">https://www.bioconductor.org/news/bioc_3_14_release/</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>SP designed and implemented the RGMQL package. SC tested the package, contributed to improve it, developed the use cases and wrote this manuscript. MM conceived the project, supervised its development and contributed to write and revise this manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the ERC Advanced Grant 693174 “Data-Driven Genomic Computing (GeCo)” Project (2016–2021), funded by the European Research Council, which covered also the publication costs. The funding body did not have any role in the design of the study and in the collection, analysis and interpretation of the data, as well as in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>RGMQL package, documentation and code are freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/DEIB-GECO/RGMQL">https://github.com/DEIB-GECO/RGMQL</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html">https://www.bioconductor.org/packages/release/bioc/html/RGMQL.html</ext-link> The datasets analysed during the current study are publicly available in the GMQL repository at <ext-link ext-link-type="uri" xlink:href="http://www.gmql.eu/">http://www.gmql.eu/</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2">
      <title>Ethics approval and consent to participate</title>
      <p id="Par98">Not applicable.</p>
    </notes>
    <notes id="FPar3">
      <title>Consent to publish</title>
      <p id="Par99">Not applicable (public data).</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par100">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stark</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Dolman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Manolio</surname>
            <given-names>TA</given-names>
          </name>
          <name>
            <surname>Ozenberger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hill</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Caulfied</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Levy</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Glazer</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lawler</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Integrating genomics into healthcare: a global responsibility</article-title>
        <source>Am J Hum Genet</source>
        <year>2019</year>
        <volume>104</volume>
        <issue>1</issue>
        <fpage>13</fpage>
        <lpage>20</lpage>
        <?supplied-pmid 30609404?>
        <pub-id pub-id-type="pmid">30609404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grossman</surname>
            <given-names>RL</given-names>
          </name>
          <name>
            <surname>Heath</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Ferretti</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Varmus</surname>
            <given-names>HE</given-names>
          </name>
          <name>
            <surname>Lowy</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Kibbe</surname>
            <given-names>WA</given-names>
          </name>
          <name>
            <surname>Staudt</surname>
            <given-names>LM</given-names>
          </name>
        </person-group>
        <article-title>Toward a shared vision for cancer genomic data</article-title>
        <source>N Engl J Med</source>
        <year>2016</year>
        <volume>375</volume>
        <issue>12</issue>
        <fpage>1109</fpage>
        <lpage>1112</lpage>
        <?supplied-pmid 27653561?>
        <pub-id pub-id-type="pmid">27653561</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weinstein</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Collisson</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Mills</surname>
            <given-names>GB</given-names>
          </name>
          <name>
            <surname>Shaw</surname>
            <given-names>KRM</given-names>
          </name>
          <name>
            <surname>Ozenberger</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Ellrott</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shmulevich</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Sander</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stuart</surname>
            <given-names>JM</given-names>
          </name>
        </person-group>
        <article-title>The cancer genome atlas pan-cancer analysis project</article-title>
        <source>Nat Genet</source>
        <year>2013</year>
        <volume>45</volume>
        <issue>10</issue>
        <fpage>1113</fpage>
        <lpage>1120</lpage>
        <?supplied-pmid 24071849?>
        <pub-id pub-id-type="pmid">24071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">1000 Genomes Project Consortium, et al. A map of human genome variation from population-scale sequencing. Nature. 2010;467(7319):1061.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">ENCODE Project Consortium, et al.: An integrated encyclopedia of DNA elements in the human genome. Nature. 2012;489(7414):57.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barrett</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wilhite</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Ledoux</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Evangelista</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>IF</given-names>
          </name>
          <name>
            <surname>Tomashevsky</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Marshall</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>KH</given-names>
          </name>
          <name>
            <surname>Sherman</surname>
            <given-names>PM</given-names>
          </name>
          <name>
            <surname>Holko</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>NCBI GEO: archive for functional genomics data sets—update</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>991</fpage>
        <lpage>995</lpage>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Leinonen R, Sugawara H, Shumway M, Collaboration INSD. The sequence read archive. Nucleic Acids Res. 2010;39(suppl_1):19–21.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McKenna</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sivachenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cibulskis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kernytsky</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Altshuler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gabriel</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Daly</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>9</issue>
        <fpage>1297</fpage>
        <lpage>1303</lpage>
        <?supplied-pmid 20644199?>
        <pub-id pub-id-type="pmid">20644199</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nordberg</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bhatia</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>BioPig: a Hadoop-based analytic toolkit for large-scale sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>23</issue>
        <fpage>3014</fpage>
        <lpage>3019</lpage>
        <?supplied-pmid 24021384?>
        <pub-id pub-id-type="pmid">24021384</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Driscoll</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Daugelaite</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sleator</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>‘big data’, Hadoop and cloud computing in genomics</article-title>
        <source>J Biomed Inform</source>
        <year>2013</year>
        <volume>46</volume>
        <issue>5</issue>
        <fpage>774</fpage>
        <lpage>781</lpage>
        <?supplied-pmid 23872175?>
        <pub-id pub-id-type="pmid">23872175</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zou</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X-B</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>W-R</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Z-Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G-L</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Survey of MapReduce frame operation in bioinformatics</article-title>
        <source>Brief Bioinform</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>4</issue>
        <fpage>637</fpage>
        <lpage>647</lpage>
        <?supplied-pmid 23396756?>
        <pub-id pub-id-type="pmid">23396756</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guo</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zou</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Bioinformatics applications on apache spark</article-title>
        <source>GigaScience</source>
        <year>2018</year>
        <volume>7</volume>
        <issue>8</issue>
        <fpage>098</fpage>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Leek</surname>
            <given-names>JT</given-names>
          </name>
        </person-group>
        <article-title>Cloud-scale RNA-sequencing differential expression analysis with Myrna</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>1</fpage>
        <lpage>11</lpage>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harnie</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Saey</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Vapirev</surname>
            <given-names>AE</given-names>
          </name>
          <name>
            <surname>Wegner</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Gedich</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Steijaert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ceulemans</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wuyts</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>De Meuter</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Scaling machine learning for target prediction in drug discovery using Apache Spark</article-title>
        <source>Future Gen Comput Syst</source>
        <year>2017</year>
        <volume>67</volume>
        <fpage>409</fpage>
        <lpage>417</lpage>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Afgan</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Van den Beek</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Blankenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bouvier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Čech</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chilton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Clements</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Coraor</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Eberhard</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Galaxy platform for accessible, reproducible and collaborative biomedical analyses: 2016 update</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>W1</issue>
        <fpage>3</fpage>
        <lpage>10</lpage>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Masseroli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Venco</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kaitoua</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Jalili</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Palluzzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Muller</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ceri</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>GenoMetric Query Language: a novel approach to large-scale genomic data management</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>12</issue>
        <fpage>1881</fpage>
        <lpage>1888</lpage>
        <?supplied-pmid 25649616?>
        <pub-id pub-id-type="pmid">25649616</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ceri</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kaitoua</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Masseroli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Venco</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Data management for heterogeneous genomic datasets</article-title>
        <source>IEEE/ACM Trans Comput Biol Bioinf</source>
        <year>2017</year>
        <volume>14</volume>
        <issue>6</issue>
        <fpage>1251</fpage>
        <lpage>1264</lpage>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Masseroli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Canakoglu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kaitoua</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gulino</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Horlova</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Nanni</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bernasconi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Perna</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stamoulakatou</surname>
            <given-names>E</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Processing of big heterogeneous genomic datasets for tertiary analysis of Next Generation Sequencing data</article-title>
        <source>Bioinformatics</source>
        <year>2019</year>
        <volume>35</volume>
        <issue>5</issue>
        <fpage>729</fpage>
        <lpage>736</lpage>
        <?supplied-pmid 30101316?>
        <pub-id pub-id-type="pmid">30101316</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">R Core Team. R: a Language and Environment for Statistical Computing. R Foundation for Statistical Computing. R Foundation for Statistical Computing. Vienna, Austria; 2020. <ext-link ext-link-type="uri" xlink:href="https://www.R-project.org/">https://www.R-project.org/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gentleman</surname>
            <given-names>RC</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Bates</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Bolstad</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dettling</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dudoit</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ellis</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gautier</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ge</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Gentry</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Bioconductor: open software development for computational biology and bioinformatics</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <issue>10</issue>
        <fpage>80</fpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilkinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Dumontier</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Aalbersberg</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Appleton</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Axton</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Baak</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Blomberg</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Boiten</surname>
            <given-names>J-W</given-names>
          </name>
          <name>
            <surname>da Silva Santos</surname>
            <given-names>LB</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The FAIR Guiding Principles for scientific data management and stewardship</article-title>
        <source>Sci Data</source>
        <year>2016</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>6</issue>
        <fpage>841</fpage>
        <lpage>842</lpage>
        <?supplied-pmid 20110278?>
        <pub-id pub-id-type="pmid">20110278</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neph</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kuehn</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Reynolds</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Haugen</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Thurman</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Rynes</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Maurano</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Vierstra</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BEDOPS: high-performance genomic feature operations</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>14</issue>
        <fpage>1919</fpage>
        <lpage>1920</lpage>
        <?supplied-pmid 22576172?>
        <pub-id pub-id-type="pmid">22576172</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Masseroli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kaitoua</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ceri</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Modeling and interoperability of heterogeneous genomic big data for integrative processing and querying</article-title>
        <source>Methods</source>
        <year>2016</year>
        <volume>111</volume>
        <fpage>3</fpage>
        <lpage>11</lpage>
        <?supplied-pmid 27637471?>
        <pub-id pub-id-type="pmid">27637471</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nanni</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Canakoglu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ceri</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>PyGMQL: scalable data extraction and analysis for heterogeneous genomic datasets</article-title>
        <source>BMC Bioinform</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>560</fpage>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sepulveda</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>Using R and Bioconductor in clinical genomics and transcriptomics</article-title>
        <source>J Mol Diagn</source>
        <year>2020</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>3</fpage>
        <lpage>20</lpage>
        <?supplied-pmid 31605800?>
        <pub-id pub-id-type="pmid">31605800</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Gentleman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Carlson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carvalho</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>Bravo</surname>
            <given-names>HC</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gatto</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Girke</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Orchestrating high-throughput genomic analysis with Bioconductor</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>115</fpage>
        <lpage>121</lpage>
        <?supplied-pmid 25633503?>
        <pub-id pub-id-type="pmid">25633503</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lawrence</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Pages</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Aboyoun</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Carlson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gentleman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Morgan</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
        </person-group>
        <article-title>Software for computing and annotating genomic ranges</article-title>
        <source>PLoS Comput Biol</source>
        <year>2013</year>
        <volume>9</volume>
        <issue>8</issue>
        <fpage>1003118</fpage>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Wickham H, François R, Henry L, Müller K. dplyr: a grammar of data manipulation. R package version 1.0.2; 2020. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=dplyr">https://CRAN.R-project.org/package=dplyr</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Luraschi J, Kuo K, Ushey K, Allaire J, Falaki H, Wang L, Zhang A, Li Y, The Apache Software Foundation. sparklyr: R Interface to Apache Spark. R package version 1.5.1; 2020. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=sparklyr">https://CRAN.R-project.org/package=sparklyr</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eddelbuettel</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Parallel computing with R: a brief review</article-title>
        <source>WIREs Comput Stat</source>
        <year>2021</year>
        <volume>13</volume>
        <issue>2</issue>
        <fpage>1515</fpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">1000 Genomes Project Consortium, et al. A global reference for human genetic variation. Nature. 2015;526(7571):68.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zaharia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Xin</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Wendell</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Armbrust</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dave</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Meng</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Rosen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Venkataraman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Franklin</surname>
            <given-names>MJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Apache Spark: a unified engine for big data processing</article-title>
        <source>Commun ACM</source>
        <year>2016</year>
        <volume>59</volume>
        <issue>11</issue>
        <fpage>56</fpage>
        <lpage>65</lpage>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Shvachko K, Kuang H, Radia S, Chansler R. The Hadoop distributed file system. In: 2010 IEEE 26th symposium on mass storage systems and technologies (MSST). IEEE; 2010. p. 1–10</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Leary</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Wright</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Brister</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Ciufo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Haddad</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McVeigh</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rajput</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Robbertse</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Smith-White</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ako-Adjei</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>733</fpage>
        <lpage>745</lpage>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maranchie</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Vasselli</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Riss</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bonifacino</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Linehan</surname>
            <given-names>WM</given-names>
          </name>
          <name>
            <surname>Klausner</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>The contribution of VHL substrate binding and HIF1-α to the phenotype of VHL loss in renal cell carcinoma</article-title>
        <source>Cancer Cell</source>
        <year>2002</year>
        <volume>1</volume>
        <issue>3</issue>
        <fpage>247</fpage>
        <lpage>255</lpage>
        <?supplied-pmid 12086861?>
        <pub-id pub-id-type="pmid">12086861</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clark</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>The role of VHL in clear-cell renal cell carcinoma and its relation to targeted therapy</article-title>
        <source>Kidney Int</source>
        <year>2009</year>
        <volume>76</volume>
        <issue>9</issue>
        <fpage>939</fpage>
        <lpage>945</lpage>
        <?supplied-pmid 19657325?>
        <pub-id pub-id-type="pmid">19657325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arjumand</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Sultana</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Role of VHL gene mutation in human renal cell carcinoma</article-title>
        <source>Tumor Biol</source>
        <year>2012</year>
        <volume>33</volume>
        <issue>1</issue>
        <fpage>9</fpage>
        <lpage>16</lpage>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Piñero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ramírez-Anguita</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Saüch-Pitarch</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ronzano</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Centeno</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sanz</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Furlong</surname>
            <given-names>LI</given-names>
          </name>
        </person-group>
        <article-title>The DisGeNET knowledge platform for disease genomics: 2019 update</article-title>
        <source>Nucleic Acids Res</source>
        <year>2020</year>
        <volume>48</volume>
        <issue>D1</issue>
        <fpage>845</fpage>
        <lpage>855</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stelzer</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rosen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Plaschkes</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Zimmerman</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Twik</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fishilevich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>TI</given-names>
          </name>
          <name>
            <surname>Nudel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lieder</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mazor</surname>
            <given-names>Y</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The GeneCards suite: from gene data mining to disease genome sequence analyses</article-title>
        <source>Curr Protoc Bioinform</source>
        <year>2016</year>
        <volume>54</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>30</lpage>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rappaport</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Twik</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Plaschkes</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Nudel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Iny Stein</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Levitt</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Gershoni</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Morrey</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Safran</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lancet</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>MalaCards: an amalgamated human disease compendium with diverse clinical and genetic annotation and structured search</article-title>
        <source>Nucleic Acids Res</source>
        <year>2017</year>
        <volume>45</volume>
        <issue>D1</issue>
        <fpage>877</fpage>
        <lpage>887</lpage>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gerull</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gramlich</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Atherton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>McNabb</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Trombitás</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Sasse-Klaassen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Seidman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Seidman</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Granzier</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Labeit</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mutations of TTN, encoding the giant muscle filament titin, cause familial dilated cardiomyopathy</article-title>
        <source>Nat Genet</source>
        <year>2002</year>
        <volume>30</volume>
        <issue>2</issue>
        <fpage>201</fpage>
        <lpage>204</lpage>
        <?supplied-pmid 11788824?>
        <pub-id pub-id-type="pmid">11788824</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jia</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Q</given-names>
          </name>
        </person-group>
        <article-title>Clustered protocadherins emerge as novel susceptibility loci for mental disorders</article-title>
        <source>Front Neurosci</source>
        <year>2020</year>
        <volume>14</volume>
        <fpage>587819</fpage>
        <?supplied-pmid 33262685?>
        <pub-id pub-id-type="pmid">33262685</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pancho</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Aerts</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mitsogiannis</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Seuntjens</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Protocadherins at the crossroad of signaling pathways</article-title>
        <source>Front Mol Neurosci</source>
        <year>2020</year>
        <volume>13</volume>
        <fpage>117</fpage>
        <?supplied-pmid 32694982?>
        <pub-id pub-id-type="pmid">32694982</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Bischl B, Lang M, Bossek J, Horn D, Richter J, Surmann D. BBmisc: miscellaneous helper Functions For B. 2017. Bischl. R package version. <ext-link ext-link-type="uri" xlink:href="https://rdrr.io/cran/BBmisc/">https://rdrr.io/cran/BBmisc/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Kassambara A, Mundt F. ‘factoextra’: extract and visualize the results of multivariate data analyses. 2017. <ext-link ext-link-type="uri" xlink:href="https://rdrr.io/cran/factoextra/">https://rdrr.io/cran/factoextra/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wickham</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>ggplot2</article-title>
        <source>Wiley Interdisc Rev Comput Stat</source>
        <year>2011</year>
        <volume>3</volume>
        <issue>2</issue>
        <fpage>180</fpage>
        <lpage>185</lpage>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zheng</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cherniack</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Dewal</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Moffitt</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Danilova</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Murray</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Lerario</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Else</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Knijnenburg</surname>
            <given-names>TA</given-names>
          </name>
          <name>
            <surname>Ciriello</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comprehensive pan-genomic characterization of adrenocortical carcinoma</article-title>
        <source>Cancer Cell</source>
        <year>2016</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>723</fpage>
        <lpage>736</lpage>
        <?supplied-pmid 27165744?>
        <pub-id pub-id-type="pmid">27165744</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lichtenberg</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hoadley</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Poisson</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Lazar</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Cherniack</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Kovatich</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Benz</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>AV</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An integrated TCGA pan-cancer clinical data resource to drive high-quality survival outcome analytics</article-title>
        <source>Cell</source>
        <year>2018</year>
        <volume>173</volume>
        <issue>2</issue>
        <fpage>400</fpage>
        <lpage>416</lpage>
        <?supplied-pmid 29625055?>
        <pub-id pub-id-type="pmid">29625055</pub-id>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Enge</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Whitington</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Dave</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sur</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Schmierer</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Jolma</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kivioja</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Taipale</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Transcription factor binding in human cells occurs in dense clusters formed around cohesin anchor sites</article-title>
        <source>Cell</source>
        <year>2013</year>
        <volume>154</volume>
        <issue>4</issue>
        <fpage>801</fpage>
        <lpage>813</lpage>
        <?supplied-pmid 23953112?>
        <pub-id pub-id-type="pmid">23953112</pub-id>
      </element-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>RA-J</given-names>
          </name>
          <name>
            <surname>Stempor</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Down</surname>
            <given-names>TA</given-names>
          </name>
          <name>
            <surname>Zeiser</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Feuer</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Ahringer</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Extreme HOT regions are CpG-dense promoters in C. elegans and humans</article-title>
        <source>Genome Res</source>
        <year>2014</year>
        <volume>24</volume>
        <issue>7</issue>
        <fpage>1138</fpage>
        <lpage>1146</lpage>
        <?supplied-pmid 24653213?>
        <pub-id pub-id-type="pmid">24653213</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Foley</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Sidow</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Transcription-factor occupancy at HOT regions quantitatively predicts RNA polymerase recruitment in five human cell lines</article-title>
        <source>BMC Genom</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <mixed-citation publication-type="other">Marchesi A, Masseroli M. TFHAZ: transcription factor high accumulation zones. R/Bioconductor package version 1.12.0; 2020. <ext-link ext-link-type="uri" xlink:href="https://www.bioconductor.org/packages/release/bioc/html/TFHAZ.html">https://www.bioconductor.org/packages/release/bioc/html/TFHAZ.html</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

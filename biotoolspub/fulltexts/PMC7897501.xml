<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7897501</article-id>
    <article-id pub-id-type="pmid">33275159</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkaa1146</article-id>
    <article-id pub-id-type="publisher-id">gkaa1146</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/8</subject>
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods Online</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>cola</italic>: an R/Bioconductor package for consensus partitioning through a general framework</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-7395-8709</contrib-id>
        <name>
          <surname>Gu</surname>
          <given-names>Zuguang</given-names>
        </name>
        <!--<email>z.gu@dkfz.de</email>-->
        <aff><institution>Computational Oncology, Molecular Diagnostics Program, National Center for Tumor Diseases (NCT) and German Cancer Research Center (DKFZ)</institution>, Im Neuenheimer Feld 280, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <aff><institution>DKFZ-HIPO (Heidelberg Center for Personalized Oncology)</institution>, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <xref ref-type="corresp" rid="COR1"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5896-4086</contrib-id>
        <name>
          <surname>Schlesner</surname>
          <given-names>Matthias</given-names>
        </name>
        <aff><institution>Bioinformatics and Omics Data Analytics, German Cancer Research Center (DKFZ)</institution>, 69120 Heidelberg, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hübschmann</surname>
          <given-names>Daniel</given-names>
        </name>
        <!--<email>d.huebschmann@dkfz-heidelberg.de</email>-->
        <aff><institution>Computational Oncology, Molecular Diagnostics Program, National Center for Tumor Diseases (NCT) and German Cancer Research Center (DKFZ)</institution>, Im Neuenheimer Feld 280, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <aff><institution>Heidelberg Institute of Stem cell Technology and Experimental Medicine (HI-STEM)</institution>, Im Neuenheimer Feld 280, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <aff><institution>German Cancer Consortium (DKTK)</institution>, Im Neuenheimer Feld 280, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <aff><institution>Department of Pediatric Immunology, Hematology and Oncology, University Hospital Heidelberg</institution>, 69120 Heidelberg, <country country="DE">Germany</country></aff>
        <xref ref-type="corresp" rid="COR2"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +49 6221423607; Email: <email>z.gu@dkfz.de</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Daniel Hübschmann. Email: <email>d.huebschmann@dkfz-heidelberg.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>22</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-12-04">
      <day>04</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>04</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>49</volume>
    <issue>3</issue>
    <fpage>e15</fpage>
    <lpage>e15</lpage>
    <history>
      <date date-type="accepted">
        <day>10</day>
        <month>11</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>01</day>
        <month>10</month>
        <year>2020</year>
      </date>
      <date date-type="received">
        <day>08</day>
        <month>7</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution-NonCommercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact <email>journals.permissions@oup.com</email></license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkaa1146.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Classification of high-throughput genomic data is a powerful method to assign samples to subgroups with specific molecular profiles. Consensus partitioning is the most widely applied approach to reveal subgroups by summarizing a consensus classification from a list of individual classifications generated by repeatedly executing clustering on random subsets of the data. It is able to evaluate the stability of the classification. We implemented a new R/Bioconductor package, <italic>cola</italic>, that provides a general framework for consensus partitioning. With <italic>cola</italic>, various parameters and methods can be user-defined and easily integrated into different steps of an analysis, <italic>e.g</italic>., feature selection, sample classification or defining signatures. <italic>cola</italic> provides a new method named ATC (<underline>a</underline>bility <underline>t</underline>o <underline>c</underline>orrelate to other rows) to extract features and recommends spherical <italic>k</italic>-means clustering (skmeans) for subgroup classification. We show that ATC and skmeans have better performance than other commonly used methods by a comprehensive benchmark on public datasets. We also benchmark key parameters in the consensus partitioning procedure, which helps users to select optimal parameter values. Moreover, <italic>cola</italic> provides rich functionalities to apply multiple partitioning methods in parallel and directly compare their results, as well as rich visualizations. <italic>cola</italic> can automate the complete analysis and generates a comprehensive HTML report.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Cancer Research Center</institution>
            <institution-id institution-id-type="DOI">10.13039/100008658</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Center for Tumor Diseases</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="16"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>Subgroup classification is a basic task in high-throughput genomic data analysis. Based on gene expression (<xref rid="B1" ref-type="bibr">1</xref>), DNA methylation (<xref rid="B2" ref-type="bibr">2</xref>) or other omics data, samples are separated into distinct groups with specific molecular profiles. Subgroup classification is widely used for subtype identification in cancer studies (<xref rid="B3" ref-type="bibr">3</xref>) and cell-type classification in single-cell RNA sequencing (scRNA-Seq) (<xref rid="B4" ref-type="bibr">4</xref>). It can also be used to establish relationships between the predicted subgroups and known clinical annotations or to test whether there exist significant batch effects. Mostly, unsupervised clustering methods, <italic>e.g</italic>., <italic>k</italic>-means clustering or hierarchical clustering, are applied to predict subgroups without taking any prior sample labelling into account. However, a single run of one clustering algorithm can produce results which lack generality, <italic>i.e</italic>., which cannot be reproduced with other datasets focusing on the same biological question or subject. Furthermore, single clustering approaches do not reveal which samples are stably classified in the identified structure, and which samples have uncertain class assignments. To solve these issues, consensus clustering or consensus partitioning was proposed (<xref rid="B5" ref-type="bibr">5</xref>). It summarizes a consensus classification from a list of individual classifications that are generated by repeatedly executing clustering on randomly sampled subsets of the data. Later, the stability of the consensus partition can be inferred from the individual partitions, <italic>e.g</italic>., by calculating the probabilities of a sample belonging to every subgroup.</p>
    <p>One of the most commonly used R packages for consensus partitioning is <italic>ConsensusClusterPlus</italic> (<xref rid="B6" ref-type="bibr">6</xref>), which partitions samples by hierarchical clustering, <italic>k</italic>-means clustering or partitioning around medoids. The individual partition list is generated by randomly sampling from the original matrix either by rows or columns. Another package, <italic>SC3</italic> (<xref rid="B4" ref-type="bibr">4</xref>) was recently developed especially for scRNA-Seq datasets. It runs <italic>k</italic>-means clustering on matrices obtained by transformation (principal component analysis or graph Laplacian transformation) of the original distance matrix (based on either Euclidean distance, Pearson or Spearman correlation). In <italic>SC3</italic>, the list of partitions normally contains six individual partitions resulting from the combinations of two transformation methods and three distance methods. <italic>diceR</italic> (<xref rid="B7" ref-type="bibr">7</xref>) applies consensus partitioning by summarizing over partitions from multiple clustering algorithms. Another popular method that can provide consensus partitioning is non-negative matrix factorization (NMF) (<xref rid="B8" ref-type="bibr">8</xref>). The <italic>NMF</italic> package (<xref rid="B9" ref-type="bibr">9</xref>) generates individual partitions by randomly selecting seeds for the initialization of an NMF algorithm.</p>
    <p>Consensus partitioning can be formalized into a uniform procedure where samples are first classified into <italic>k</italic> subgroups with trying a list of different <italic>k</italic>, and then statistical metrics are applied to find the best number of subgroups. To formalize the procedure of consensus partitioning, we developed an R/Bioconductor package, <italic>cola</italic>, that provides a general framework in which various methods can be user-defined and easily integrated into different steps of the analysis, <italic>e.g</italic>., for feature selection, sample classification or definition of signatures. <italic>cola</italic> provides a complete set of tools for comprehensive subgroup analysis, including partitioning, signature analysis, functional enrichment, as well as rich visualizations for interpretation of the results. Moreover, to find the method that best explains a user's dataset, <italic>cola</italic> allows running multiple methods simultaneously and provides functionalities for a straightforward comparison of results. <italic>cola</italic> is designed with a clean and simple user interface while still retaining comprehensive access to the analysis. With only a few lines of code, users can trigger the automated execution of a full set of analysis and the generation of a detailed HTML report.</p>
    <p>For genomic data with a very large number of features, <italic>e.g</italic>., genes for expression data or CpG probes for methylation array data, partitioning is normally accompanied with a feature selection step where only the top <italic>n</italic> features are selected for partitioning (named <italic>top-value method</italic> in <italic>cola</italic>). In addition to established top-value methods, <italic>cola</italic> implements a simple yet powerful method (the ATC method) for selecting features based on the global correlation structure. Additionally, we propose to perform partitioning via spherical <italic>k</italic>-means clustering (skmeans) (<xref rid="B10" ref-type="bibr">10</xref>), based on benchmarks of the performance of various methods with 435 public gene expression datasets. We found that methods in which features are selected by the ATC method or in which samples are partitioned by skmeans tend to generate more subgroups with high stability.</p>
    <p>We also assessed the selection of key parameters in consensus partitioning in the framework of comprehensive benchmarks. First, we compared random sampling by rows and columns in the process of generating random subsets of the input data for partitioning. We found that row sampling was in general slightly better than column sampling for generating stable partitions. Second, we benchmarked the number of random samplings for consensus partitioning. The number of random samplings did not affect the consensus partitioning results significantly and increasing the number of samplings only slightly improved the stability of the partition. The difference of consensus partitions between different numbers of samplings was ignorable if the partitions were already stable. Additionally, we applied <italic>cola</italic> on one methylation array dataset. The results showed that variation-based top-value methods, <italic>e.g</italic>., standard deviation (SD), were more efficient for selecting features for subgroup detection while correlation-based methods, <italic>e.g</italic>., ATC, only reveal subgroups based on global methylation differences. We suggest to apply consensus partitioning to CpG probes in different categories separately (<italic>e.g</italic>., from CpG islands or seas), because they have different methylation profiles to generate different classifications and they might reveal different regulation mechanisms for the investigated biological system.</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>Preprocessing the input matrix</title>
      <p><italic>cola</italic> accepts the input object as a numeric matrix. Frequently, the input matrix contains values of gene expression (<italic>e.g</italic>., from expression microarray or RNA sequencing) or DNA methylation (<italic>e.g</italic>., from methylation arrays or whole-genome bisulfite sequencing). More generally, the input object can contain any type of measurements as long as it is represented as a numeric matrix, <italic>e.g</italic>., a matrix where rows correspond to genomic regions and values are the histone modification intensities that are measured from a chromatin immuno-precipitation sequencing (ChIP-Seq) experiment. For all these types of matrices, <italic>cola</italic> expects samples to designate columns and this is the dimension in which the subgroups are to be found. Before performing consensus partitioning, an optional but important step is to clean the input matrix. <italic>cola</italic> provides the function <monospace>adjust_matrix()</monospace> to impute missing values, adjust outliers and remove rows with very small variance from the matrix (Figure <xref ref-type="fig" rid="F1">1</xref>, step 1). It executes the following preprocessing sequentially:</p>
      <list list-type="order">
        <list-item>
          <p>Rows in which &gt;25% of the samples have missing values are removed;</p>
        </list-item>
        <list-item>
          <p>Use <monospace>impute.knn()</monospace> from the R package <italic>impute</italic> (<xref rid="B11" ref-type="bibr">11</xref>) to impute missing values if there is any;</p>
        </list-item>
        <list-item>
          <p>In every row in the matrix, values larger than the 95<sup>th</sup> percentile or less than the 5<sup>th</sup> percentile are replaced by corresponding percentiles;</p>
        </list-item>
        <list-item>
          <p>Rows with zero variance are removed;</p>
        </list-item>
        <list-item>
          <p>Rows with variance less than the 5<sup>th</sup> percentile of all row variances are removed.</p>
        </list-item>
      </list>
      <fig id="F1" orientation="portrait" position="float">
        <label>Figure 1.</label>
        <caption>
          <p>The <italic>cola</italic> workflow. Steps are as follows: 1. Adjust the input matrix by removing outliers and imputing missing values; 2. Select top <italic>n</italic> features by a certain method, <italic>e.g</italic>., standard deviation; 3. Scale the matrix by rows; 4. Randomly sample from the matrix and partition samples by a certain partitioning method; 5. Repeat Step 4 <italic>r</italic> times to obtain a list of partitions; 6. Construct the consensus partition; 7. Identify features discriminating between subgroups; 8. Apply functional enrichment on signatures if they can be annotated to genes.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig1"/>
      </fig>
    </sec>
    <sec id="SEC2-2">
      <title>Top-value methods</title>
      <p>Top-value methods are used to assign scores to the rows of a matrix. Later the scores are ordered and only the top <italic>n</italic> rows with the highest scores are selected for consensus partitioning (Figure <xref ref-type="fig" rid="F1">1</xref>, step 2). This step is called feature selection (<xref rid="B12" ref-type="bibr">12</xref>). <italic>cola</italic> provides three commonly used methods based on the variability of rows: standard deviation (SD), median absolute deviation (MAD) and coefficient of variation (CV). CV is defined as <inline-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$s/( {\bar{x} + {a_0}} )$\end{document}</tex-math></inline-formula> where <italic>s</italic> and <inline-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\bar{x}$\end{document}</tex-math></inline-formula> are the standard deviation and mean value of row <italic>i</italic>, and <italic>a</italic><sub>0</sub> is a penalty term which is the 10<sup>th</sup> percentile from all row means. <italic>cola</italic> also allows for user-defined top-value methods.</p>
      <p>Selecting the top rows from the matrix helps to keep the most informative features for partitioning. In most studies, the top rows are selected based on row variance, however, this choice might deselect rows that are efficient for subgroup classification. When the data contains a high amount of random noise, <italic>e.g</italic>., in scRNA-Seq data, the most variable genes sometimes are not able to detect any stable subgroups. Conversely, when assuming that stable subgroups for the samples in the data exist, there must be groups of rows showing similar patterns to support the subgrouping. In other words, rows in the same groups should be highly correlated. Thus, if one row correlates or anti-correlates more strongly to a subset of the remaining rows, it has more power to support stable subgroups for the samples. According to this idea, <italic>cola</italic> implements the ATC (<underline>a</underline>bility <underline>t</underline>o <underline>c</underline>orrelate to other rows) method as follows:</p>
      <p>For row <italic>i</italic> in a matrix, denote the variable <italic>X</italic> as a vector of absolute values of the correlation coefficients to all other rows. Then the ATC score for row <italic>i</italic> is defined as:<disp-formula><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}AT{C_i} = 1 - \,\int_{0}^{1}{{{F_X}\left( x \right)dx}}\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>F<sub>X</sub></italic>(<italic>x</italic>) is the cumulative distribution function (CDF) of <italic>X</italic>. The ATC score corresponds to the area above the CDF curve and the ATC score increases with increasing correlations between row <italic>i</italic> and other rows. A more detailed explanation of the ATC method with benchmarks on simulated data can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 1</xref>. The idea of taking correlation structures into the selection of features is already widely implemented in a variety of available methods (<xref rid="B13" ref-type="bibr">13</xref>), however, the ATC method can be very easily integrated into the <italic>cola</italic> framework and later in the paper we will argue it works effectively in subgroup classifications.</p>
      <p>Figure <xref ref-type="fig" rid="F2">2A</xref>-<xref ref-type="fig" rid="F2">D</xref> compares the top 1000 genes scored by the SD, CV, MAD and ATC methods from the HSMM scRNA-Seq dataset (<xref rid="B14" ref-type="bibr">14</xref>). It clearly shows that the genes with the highest ATC scores provide a clean pattern for the subgroup classification. SD and MAD have weaker performance for the segregation of subgroups as objectivated by the heatmaps, and the level of noise is higher. CV performs the worst for this dataset and barely distinguishes any subgroups. More importantly, the top 1000 genes with the highest ATC scores only have a small overlap with the genes selected by the other three methods (686 genes are uniquely selected by the ATC method, Figure <xref ref-type="fig" rid="F2">2E</xref>), which highlights that the ATC method can uniquely capture informative rows that other methods are not able to catch. Gene Ontology (GO) enrichment analysis on the gene list extracted by the ATC method showed it generated a large number of unique significant GO terms (FDR &lt; 0.01) related to cell cycle, signaling pathways and cell localization, while gene lists extracted by SD and MAD only generated small numbers of significant terms and the gene list extracted by CV generated almost no significant terms (Figure <xref ref-type="fig" rid="F2">2F</xref>). This implies that the ATC method is able to extract more genes with biological relevance. <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 2</xref> compares the four top-value methods for other datasets and they all support that ATC increases discrimination between subgroups as compared to the other top-value methods.</p>
      <fig id="F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>Comparison of top-value methods. (<bold>A</bold>) Heatmap of the top 1000 genes extracted by SD, (<bold>B</bold>) CV, (<bold>C</bold>) MAD and (<bold>D</bold>) ATC methods. Expression matrices are row-scaled by <italic>z</italic>-score transformation. (<bold>E</bold>) Euler diagram of the overlapping of top 1000 genes extracted by the four top-value methods. (<bold>F</bold>) Heatmap of the similarities of significant GO terms (FDR &lt; 0.01) from the gene lists generated by the four top-value methods. The green-white row annotation shows for which top-value method the respective GO terms are significant. The word cloud annotation visualizes the summaries of biological functions in each GO cluster. GO enrichment analysis was performed by hypergeometric test with the function <monospace>functional_enrichment()</monospace> and GO terms were clustered by the R package <italic>simplifyEnrichment</italic>. The analysis was done with the HSMM single-cell dataset. Annotations on the heatmaps are: Hours: time points when the primary human skeletal muscle myoblasts (HSMM) cells were captured; Media: the conditions where the cells were expanded (under high mitogen conditions (GM) and low mitogen media (DM)).</p>
        </caption>
        <graphic xlink:href="gkaa1146fig2"/>
      </fig>
    </sec>
    <sec id="SEC2-3">
      <title>Partitioning methods</title>
      <p>Partitioning methods are used to classify samples into <italic>k</italic> distinct subgroups with a given <italic>k</italic>. <italic>cola</italic> provides six partitioning methods: hierarchical clustering with cutree (hclust), <italic>k</italic>-means clustering (kmeans), spherical <italic>k</italic>-means clustering (skmeans), partitioning around medoids (pam), model-based clustering (mclust) and non-negative matrix factorization (NMF). <italic>cola</italic> also supports user-defined partitioning methods.</p>
      <sec id="SEC2-3-1">
        <title>Hierarchical clustering</title>
        <p>The clustering is performed by function <monospace>hclust()</monospace> with Euclidean distance and ‘complete’ clustering method. Later the dendrogram generated from clustering is cut by function <monospace>cutree()</monospace>.</p>
      </sec>
      <sec id="SEC2-3-2">
        <title>Model-based clustering</title>
        <p>The function <monospace>Mclust()</monospace> from the R package <italic>mclust</italic> (<xref rid="B15" ref-type="bibr">15</xref>) performs partitioning by Gaussian finite mixture models and is applied on the first three principal components of the original matrix.</p>
      </sec>
      <sec id="SEC2-3-3">
        <title>Spherical k-means clustering</title>
        <p>Spherical <italic>k</italic>-means clustering is a variant of the standard <italic>k</italic>-means clustering, where cosine similarity is used as the distance measurement. For a matrix with <italic>n</italic> rows and <italic>m</italic> columns, to perform spherical <italic>k</italic>-means clustering on columns, columns are first projected onto the unit hypersphere, then the algorithm follows a similar procedure as <italic>k</italic>-means clustering, to look for a partition of <italic>k</italic> sets <bold><italic>P</italic></bold> = {<italic>P</italic><sub>1</sub>, <italic>P</italic><sub>2</sub>, …, <italic>P<sub>k</sub></italic>} to minimize the following criterion:<disp-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}\mathop \sum \limits_{i = 1}^k \mathop \sum \limits_{{{\bf x}} \in {P_i}} \left( {1 - \cos \left( {{{\bf x}},{{{\bf p}}_i}} \right)} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>where <bold>x</bold> is a vector in partition <italic>P<sub>i</sub></italic> and <bold>p</bold><italic><sub>i</sub></italic> is the centroid of all vectors in <italic>P<sub>i</sub></italic>. Spherical <italic>k</italic>-means clustering is performed with the R package <italic>skmeans</italic> (<xref rid="B16" ref-type="bibr">16</xref>). Cosine distance was shown to be efficient for separating groups for high-dimensional datasets and robust to technical noise (<xref rid="B17" ref-type="bibr">17</xref>). In later sections of this work, we demonstrate that on a variety of datasets spherical <italic>k</italic>-means clustering generates more stable partitions compared to other methods.</p>
      </sec>
      <sec id="SEC2-3-4">
        <title>Non-negative matrix factorization</title>
        <p>NMF factorizes a non-negative matrix <bold>V</bold> into the two matrices <bold>W</bold> and <bold>H</bold>, <italic>i.e</italic>., <bold>V</bold> ≈ <bold>W</bold> × <bold>H</bold>. For a given rank <italic>p</italic> which corresponds to the number of subgroups, <bold>W</bold> is an <italic>n</italic> × <italic>p</italic> matrix, <bold>H</bold> is a <italic>p</italic> × <italic>m</italic> matrix and <bold>V</bold> is an <italic>n</italic> × <italic>m</italic> matrix. <bold>V</bold> corresponds to the input matrix for <italic>cola</italic> analysis and to make <bold>V</bold> non-negative, ‘min-max’ scaling is applied to matrix rows in advance. The subgroup label is inferred by taking the index of the row of <bold>H</bold> which has the maximum value for the corresponding sample. NMF is performed with the R package <italic>NMF</italic> (<xref rid="B9" ref-type="bibr">9</xref>).</p>
      </sec>
      <sec id="SEC2-3-5">
        <title>Row scaling</title>
        <p>Before applying partitioning methods, proper scaling should be applied to the matrix rows to remove the difference of absolute levels between rows that might affect the partitioning (Figure <xref ref-type="fig" rid="F1">1</xref>, step 3). <italic>z</italic>-score scaling is the most commonly used, while for partitioning methods (<italic>e.g</italic>., NMF) which do not allow negative values, ‘min-max’ scaling is applied, defined as (<italic>x</italic> – min)/(max – min). For certain datasets where the absolute levels (<italic>e.g</italic>., methylation values) should be taken into account for partitioning, row scaling can be omitted.</p>
      </sec>
    </sec>
    <sec id="SEC2-4">
      <title>Finding a consensus partition</title>
      <p>Let <bold>M</bold> denote a sub-matrix of the initial data which contains top rows from the original matrix selected by a certain top-value method. A subset of rows or columns are randomly sampled from <bold>M</bold> with a probability of <italic>p</italic> by applying a certain partitioning method, generating a partition <italic>P<sub>a</sub></italic> (the index <italic>a</italic> reflects the individual partition). In most cases, we have no prior knowledge of the number of top rows that gives the best results. Therefore, <italic>cola</italic> tries multiple numbers of top rows of <italic>n</italic><sub>1</sub>, <italic>n</italic><sub>2</sub>, …, <italic>n<sub>t</sub></italic> and integrates all partitions to form a global consensus ensemble. If the random sampling is performed <italic>r</italic> times, the total number of partitions for a given number of subgroups <italic>k</italic> is <italic>N<sub>P</sub></italic> = <italic>t × r</italic> (Figure <xref ref-type="fig" rid="F1">1</xref>, steps 4–6).</p>
      <p>The consensus subgroup labels are inferred from the <italic>N<sub>P</sub></italic> partitions by the function <monospace>cl_consensus()</monospace> from the R package <italic>clue</italic> (<xref rid="B18" ref-type="bibr">18</xref>) (Figure <xref ref-type="fig" rid="F1">1</xref>, step 6). Since the labels for individual partitions can be assigned randomly while the partitions are still kept identical, the subgroup labels for one individual partition <italic>a</italic> are adjusted to the consensus labels by choosing a proper mapping function <italic>m<sub>a</sub></italic>() for relabelling:<disp-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}{s_{i,a}} = {m_a}\left( {s_{i,a}^{\prime}} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>to maximize<disp-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}\mathop \sum \limits_i I\left( {{s_{i,a}},\ {s_{i,c}}} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>where <inline-formula><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$s_{i,a}^{\prime}$\end{document}</tex-math></inline-formula> is the original label for sample <italic>i</italic> in partition <italic>a</italic>, <italic>s<sub>i,a</sub></italic> is the adjusted label and <italic>s<sub>i,c</sub></italic> is the consensus subgroup label. <italic>I</italic>() is the indicator function where <italic>I</italic>(<italic>x</italic> = <italic>y</italic>) = 1 and <italic>I</italic>(<italic>x</italic> ≠ <italic>y</italic>) = 0. The mapping function <italic>m<sub>a</sub></italic>() is found by solving the linear sum assignment problem, which is by the function <monospace>solve_LSAP()</monospace> from the R package <italic>clue</italic> (<xref rid="B18" ref-type="bibr">18</xref>).</p>
      <p>The consensus matrix measures how consistently two samples are attributed to the same subgroup. A value <italic>c<sub>i,j</sub></italic> in the consensus matrix denotes the probability of sample <italic>i</italic> and sample <italic>j</italic> to be in the same subgroup in all <italic>N<sub>P</sub></italic> partitions. It is calculated as:<disp-formula><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}{c_{i,j}} = \frac{1}{{{N_P}}}\mathop \sum \limits_a^{{N_P}} I\left( {{s_{i,a}},{s_{j,a}}} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>s<sub>i,a</sub></italic> and <italic>s<sub>j,a</sub></italic> are the adjusted subgroup labels for sample <italic>i</italic> and <italic>j</italic> in partition <italic>a</italic>. The consensus matrix is used to evaluate and visualize the stability of the consensus partitioning.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Adjusting partition labels</title>
      <p>Moreover, the partition labels can be adjusted between any two sets of partitions. Similarly, the mapping function <italic>m</italic>() are to be found to maximize<disp-formula><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}\mathop \sum \limits_i I\left( {{s_{i,1}},m\left( {{s_{i,2}}} \right)} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>s</italic><sub>1</sub> is the first label set and <italic>s</italic><sub>2</sub> is the second label set.</p>
      <p>The subgroup label adjustment is frequently used in <italic>cola</italic> to help the visualization as well as comparisons of partitions between different <italic>k</italic> and different partitioning methods. It also helps for downstream analysis such as the calculation of a consensus matrix or the concordance scores of the partitions which assume that the subgroup labels are already adjusted. There are several levels of label adjustment, listed as follows (<italic>cola</italic> adjusts them sequentially):</p>
      <list list-type="order">
        <list-item>
          <p>For a specific combination of methods and a specific <italic>k</italic>, the consensus subgroup labels are ordered according to the average distance in each subgroup, which means that the subgroup with label 1 has the minimal within-group distance.</p>
        </list-item>
        <list-item>
          <p>Subgroup labels for individual partitions are adjusted according to the consensus partition labels.</p>
        </list-item>
        <list-item>
          <p>The subgroup labels for the consensus partition as well as for individual partitions for <italic>k</italic> + 1 subgroups are adjusted according to the consensus labels for <italic>k</italic> subgroups.</p>
        </list-item>
        <list-item>
          <p>If multiple methods are applied, for each <italic>k</italic>, the consensus labels for method <italic>i</italic> + 1 are adjusted to method <italic>i</italic>. The individual partition labels are then adjusted to the consensus labels correspondingly.</p>
        </list-item>
      </list>
    </sec>
    <sec id="SEC2-6">
      <title>Selection of the best number of subgroups</title>
      <p>For consensus partitioning, the number of subgroups <italic>k</italic> is a fixed and known parameter. In order to find the optimal value of <italic>k</italic>, a list of values for <italic>k</italic> from 2 to a chosen <italic>k</italic><sub>max</sub> are tested to find the best number of subgroups by applying various metrics. <italic>cola</italic> provides the following metrics to determine the best <italic>k</italic>:</p>
      <sec id="SEC2-6-1">
        <title>Silhouette score</title>
        <p>The silhouette score measures how close one sample is to its own subgroup compared to the closest neighbouring subgroup. For sample <italic>i</italic>, the mean distance to each subgroup is calculated and denoted as <italic>d</italic><sub>1</sub>, <italic>d</italic><sub>2</sub>, …, <italic>d<sub>k</sub></italic> (<italic>d<sub>k</sub></italic> is the mean Euclidean distance between sample <italic>i</italic> and every sample in subgroup <italic>k</italic>). The distance to the subgroup to which sample <italic>i</italic> belongs is denoted as <italic>d<sub>a</sub></italic> and the silhouette score <italic>s<sub>i</sub></italic> is defined as:<disp-formula><tex-math id="M10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}{s_i} = 1 - \frac{{{d_a}}}{{{d_b}}}\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>d<sub>b</sub></italic> is the minimal distance excluding <italic>d<sub>a</sub></italic>:<disp-formula><tex-math id="M11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}{d_b} = min_{j \ne a}^k{d_j}\end{equation*}$$\end{document}</tex-math></disp-formula></p>
        <p>The mean silhouette score averaged from all samples is used to select the best <italic>k</italic>. The higher the mean silhouette score, the better the metric for <italic>k</italic>.</p>
      </sec>
      <sec id="SEC2-6-2">
        <title>PAC score</title>
        <p>The PAC (the proportion of ambiguous clustering) score measures the proportion of ambiguous subgroup assignments and was originally proposed in (<xref rid="B19" ref-type="bibr">19</xref>). If the subgrouping is stable across the <italic>N<sub>P</sub></italic> partitions, sample <italic>i</italic> and sample <italic>j</italic> are in most cases either in the same subgroup or always in different subgroups, and therefore the consensus value <italic>c<sub>i,j</sub></italic> in the consensus matrix is either close to 1 or to 0. Thus, the proportion of <italic>c<sub>i,j</sub></italic> being far from 0 or 1 corresponds to the proportion of ambiguous subgroup assignments, defined as <italic>F</italic>(<italic>x</italic><sub>2</sub>) - <italic>F</italic>(<italic>x</italic><sub>1</sub>), where <italic>F</italic>() is the CDF of the consensus matrix, and <italic>x</italic><sub>1</sub> and <italic>x</italic><sub>2</sub> are the cutoffs defining <italic>c<sub>i,j</sub></italic> to be far from 0 and 1. <italic>cola</italic> removes the 5% most unstable samples with the lowest silhouette scores before calculating the PAC score. <italic>cola</italic> uses 1-PAC to determine the best <italic>k</italic>.</p>
      </sec>
      <sec id="SEC2-6-3">
        <title>Concordance</title>
        <p>This measure quantifies the mean concordance of an individual partition with the consensus partition. It is calculated as follows: for each partition <italic>P<sub>a</sub></italic>, let <italic>c<sub>a</sub></italic> be the proportion of overlap with the consensus partition:<disp-formula><tex-math id="M12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}{c_a} = \frac{1}{{{N_s}}}\mathop \sum \limits_i^{{N_s}} I\left( {{s_{i,a}} = s{c_i}} \right)\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>N<sub>s</sub></italic> is the number of samples, <italic>s<sub>i,a</sub></italic> is the subgroup label of sample <italic>i</italic> in partition <italic>a</italic> and <italic>sc<sub>i</sub></italic> is the consensus subgroup label for sample <italic>i</italic>. Note subgroup labels in single partitions have already been adjusted to the consensus partition labels. The final concordance score is calculated as:<disp-formula><tex-math id="M13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}\frac{1}{{{N_P}}}\mathop \sum \limits_a^{{N_P}} {c_a}\end{equation*}$$\end{document}</tex-math></disp-formula>where <italic>N<sub>P</sub></italic> is the total number of partitions. The higher the concordance score, the better the metric for <italic>k</italic>.</p>
      </sec>
      <sec id="SEC2-6-4">
        <title>Jaccard index</title>
        <p>In some cases, when the number of subgroups increases from <italic>k</italic> – 1 to <italic>k</italic>, all metrics imply <italic>k</italic> is a better choice than <italic>k</italic> – 1. However, when observing the consensus heatmap, it can be found that a very small set of samples are separated to form a new subgroup (one example can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 3</xref>). In this scenario, the subgrouping with <italic>k</italic> subgroups is highly similar to the one with <italic>k</italic> – 1 subgroups and hardly provides new information. <italic>cola</italic> uses the Jaccard index calculated by the function <monospace>cl_agreement()</monospace> from the R package <italic>clue</italic> (<xref rid="B18" ref-type="bibr">18</xref>) to measure the similarity of two partitions with <italic>k</italic> – 1 and <italic>k</italic> subgroups. For all pairs of samples, denote following symbols:</p>
        <list list-type="bullet">
          <list-item>
            <p><italic>a</italic>: the number of pairs of samples that are in the same subgroup for <italic>k</italic> and in the same subgroup for <italic>k</italic> – 1.</p>
          </list-item>
          <list-item>
            <p><italic>c</italic>: the number of pairs of samples that are in the same subgroup for <italic>k</italic> and in different subgroups for <italic>k</italic> – 1.</p>
          </list-item>
          <list-item>
            <p><italic>d</italic>: the number of pairs of samples that are in different subgroups for <italic>k</italic> and in the same subgroup for <italic>k</italic> – 1.</p>
          </list-item>
        </list>
        <p>The Jaccard index is the ratio of the number of sample pairs that are both in the same subgroup in the partitions at <italic>k</italic><bold>and</bold><italic>k</italic> – 1 and the number of sample pairs that are both in the same subgroup in the partitions at <italic>k</italic><bold>or</bold><italic>k</italic> – 1, calculated as follows:<disp-formula><tex-math id="M14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*}Jaccard = \frac{a}{{a + c + d}}\end{equation*}$$\end{document}</tex-math></disp-formula></p>
      </sec>
      <sec id="SEC2-6-5">
        <title>Rules to suggest the best k</title>
        <p><italic>cola</italic> suggests the best number of subgroups based on the following rules:</p>
        <list list-type="order">
          <list-item>
            <p>All <italic>k</italic> with Jaccard index larger than 0.95 are removed because increasing <italic>k</italic> does not provide enough extra information. If all <italic>k</italic> are removed, the dataset is marked as no subgroups were detected.</p>
          </list-item>
          <list-item>
            <p>For <italic>k</italic> with 1-PAC score larger than 0.9, the maximal <italic>k</italic> is taken as the best <italic>k</italic>. Other <italic>k</italic> are marked as optional best <italic>k</italic>.</p>
          </list-item>
          <list-item>
            <p>If the second rule is not fulfilled, the <italic>k</italic> with the majority vote among the highest 1-PAC score, the highest mean silhouette, and the highest concordance is taken as the best <italic>k</italic>.</p>
          </list-item>
        </list>
        <p>Additionally, if 1-PAC score for the best <italic>k</italic> is larger than 0.9 (&lt;10% ambiguity for the partitioning), <italic>cola</italic> marks the partition to be stable. It should be noted that it is difficult to find the best <italic>k</italic> deterministically, especially when <italic>k</italic> grows larger. We encourage users to compare results for all <italic>k</italic> and determine a proper one which best explains their studies, <italic>i.e</italic>., matches prior knowledge.</p>
      </sec>
    </sec>
    <sec id="SEC2-7">
      <title>Identification of signatures</title>
      <p>We call signatures those rows which show statistically significant specificity (as defined below) in one or more subgroups. (Figure <xref ref-type="fig" rid="F1">1</xref>, step 7). We use the term <italic>signature genes</italic> for gene expression data or <italic>signature CpG probes</italic> for methylation data. By default, <italic>cola</italic> removes samples with silhouette scores less than 0.5 from the signature analysis because they are ambiguous. <italic>cola</italic> provides the following four methods to apply the differential analysis. It also supports user-defined methods to look for signatures.</p>
      <list list-type="bullet">
        <list-item>
          <p><bold><italic>F-test</italic></bold>. <italic>cola</italic> uses an <italic>F</italic>-test to identify rows that are significantly different between subgroups.</p>
        </list-item>
        <list-item>
          <p><bold><italic>Pairwise t-test</italic></bold>. For each row, it looks for the subgroup with the highest mean value, compares it to each of the other subgroups by <italic>t</italic>-test and takes the maximum <italic>P</italic>-value from all the <italic>t</italic>-tests, denoted as <italic>p<sub>h</sub></italic>. Secondly, it looks for the subgroup with the lowest mean value, compares it to each of the other subgroups again by <italic>t</italic>-test and takes the maximum <italic>P</italic>-values, denoted as <italic>p<sub>l</sub></italic>. The smaller <italic>P</italic>-value between <italic>p<sub>h</sub></italic> and <italic>p<sub>l</sub></italic> is selected as the final <italic>P</italic>-value for the current row.</p>
        </list-item>
        <list-item>
          <p><bold><italic>One-versus-others</italic></bold>. For each subgroup <italic>i</italic> in each row, it uses a <italic>t</italic>-test to compare samples in the current subgroup to all other samples, denoted as <italic>p<sub>i</sub></italic>. The minimal <italic>P</italic>-value is assigned for the current row.</p>
        </list-item>
        <list-item>
          <p><bold><italic>samr or pamr</italic></bold>. <italic>cola</italic> uses the SAM (<xref rid="B20" ref-type="bibr">20</xref>) or PAM (<xref rid="B21" ref-type="bibr">21</xref>) methods to find rows with significant differences between subgroups.</p>
        </list-item>
      </list>
      <p>Signatures can be grouped by patterns among subgroups. In addition to the identification of signatures as described above, <italic>cola</italic> applies <italic>k</italic>-means clustering on the signature profiles with automatically selecting the appropriate number of signature groups (an example is in Figure <xref ref-type="fig" rid="F3">3I</xref>).</p>
      <fig id="F3" orientation="portrait" position="float">
        <label>Figure 3.</label>
        <caption>
          <p>Visualizations implemented by <italic>cola</italic>. (<bold>A</bold>) Parallel consensus heatmaps from four top-value methods and six partitioning methods under three-group classification, generated by the function <monospace>collect_plot()</monospace>. (<bold>B</bold>) Heatmap of 1-PAC scores for the partitions in Figure A, generated by the function <monospace>collect_stats()</monospace>. (<bold>C</bold>) Partitions from 24 combinations of methods generated by the function <monospace>collect_classes()</monospace>. Transparency of the heatmap corresponds to the silhouette score for each sample and each method. (<bold>D</bold>) Euler diagram of top 500 genes extracted by SD, CV, MAD and ATC methods, generated by the function <monospace>top_row_overlap()</monospace>. (<bold>E</bold>) eCDF curve of the consensus matrix from partition by ATC:skmeans, generated by the function <monospace>plot_ecdf()</monospace>. (<bold>F</bold>) 1-PAC scores versus the number of subgroups. The dashed line represents the cutoff for a stable partition. (<bold>G</bold>) Membership heatmap for the individual partitions, generated by the function <monospace>membership_heatmap()</monospace>. (<bold>H</bold>) PCA plot of samples, generated by the function <monospace>dimension_reduction()</monospace>. (<bold>I</bold>) Heatmap of signature genes under three-group classification, generated by the function <monospace>get_signatures()</monospace>. The analysis was done with the Golub leukemia dataset.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig3"/>
      </fig>
    </sec>
    <sec id="SEC2-8">
      <title>Functional enrichment</title>
      <p>If the matrix rows correspond to genes (<italic>e.g</italic>., in the case of a gene expression matrix, or in the case of a methylation array data where CpG sites can be annotated to the transcription start site of genes), <italic>cola</italic> performs functional enrichment with hypergeometric tests by applying the R packages <italic>ClusterProfiler</italic> (<xref rid="B22" ref-type="bibr">22</xref>)<italic>, DOSE</italic> (<xref rid="B23" ref-type="bibr">23</xref>) or <italic>ReactomePA</italic> (<xref rid="B24" ref-type="bibr">24</xref>) (Figure <xref ref-type="fig" rid="F1">1</xref>, step 8) to the signatures. If signatures are already classified into groups as described in the previous section, functional enrichment is applied to each group of signatures separately.</p>
    </sec>
    <sec id="SEC2-9">
      <title>Implementation of the <italic>cola</italic> package</title>
      <p>The core function <monospace>consensus_partition()</monospace> performs consensus partitioning for a single top-value method and a single partitioning method. Both methods can be either selected from the built-in methods or supplied as user-defined functions. <monospace>consensus_partition()</monospace> returns a <italic>ConsensusPartition</italic> object and <italic>cola</italic> provides rich visualization tools to comprehensively evaluate the consensus partitioning results. The major visualizations are:</p>
      <list list-type="bullet">
        <list-item>
          <p>Diagnostic plots with various metrics for determining the best number of subgroups.</p>
        </list-item>
        <list-item>
          <p>A consensus heatmap that visualizes the consensus matrix.</p>
        </list-item>
        <list-item>
          <p>A membership heatmap that visualizes the membership of every individual partition generated from random subsets of the original matrix.</p>
        </list-item>
        <list-item>
          <p>Dimension reduction visualization by UMAP (<xref rid="B25" ref-type="bibr">25</xref>), <italic>t</italic>-SNE (<xref rid="B26" ref-type="bibr">26</xref>), PCA or MDS.</p>
        </list-item>
        <list-item>
          <p>A signature heatmap that visualizes the rows with statistically significant differences between subgroups.</p>
        </list-item>
        <list-item>
          <p>A heatmap that visualizes how subgroups are divided when the number of subgroups increases.</p>
        </list-item>
      </list>
      <p><italic>cola</italic> provides a <monospace>collect_plots()</monospace> function that can be applied to the <italic>ConsensusPartition</italic> object and arranges all visualizations for different numbers of subgroups into a single page.</p>
      <p>In most cases, it is unclear which top-value method and partitioning method yield the best results for the dataset under analysis. <italic>cola</italic> provides a helper function <monospace>run_all_consensus_partition_methods()</monospace> that provides a convenient way to run multiple top-value methods and partitioning methods simultaneously. <monospace>run_all_consensus_partition_methods()</monospace> returns a <italic>ConsensusPartitionList</italic> object and <italic>cola</italic> provides tools to compare which combination of methods gives the best prediction of subgroups in an easy way. The functions <monospace>top_row_overlap()</monospace> and <monospace>top_row_heatmap()</monospace> compare the top <italic>n</italic> rows from different top-row methods either by Euler diagrams, UpSet plots or heatmaps, which gives direct hints of which top-value method extracts better rows for subgroup classification. The function <monospace>collect_plots()</monospace> can also be applied to the <italic>ConsensusPartitionList</italic> object. In that setting it arranges plots (<italic>e.g</italic>., consensus heatmaps) from multiple combinations of top-value methods and partitioning methods into a single page, making it straightforward to compare between methods and quickly find out the best combination of methods to use. The function <monospace>collect_classes()</monospace> generates a heatmap which lists partitions from every combination of methods, as well as a global consensus partitioning averaged from all methods.</p>
      <p>Other useful functions include <monospace>test_to_known_</monospace><monospace>factors()</monospace> that performs chi-square test or one-way ANOVA to test the associations between predicted subgroups and known factors, and <monospace>functional_enrichment()</monospace> that performs functional enrichment analysis on the signatures if they can be annotated to genes.</p>
      <p><italic>cola</italic> is implemented as a comprehensive toolbox for consensus partitioning analysis. In addition, it provides an easy user interface to perform the analysis and automatically generates a comprehensive HTML report including all results of the analysis. To perform the complete <italic>cola</italic> analysis, users only need a minimal set of code of using two functions, such as:</p>
      <list list-type="simple">
        <list-item>
          <p><monospace>rl = run_all_consensus_partition_methods</monospace> <monospace>(matrix, …)</monospace></p>
        </list-item>
        <list-item>
          <p>
            <monospace>cola_report(rl, …)</monospace>
          </p>
        </list-item>
      </list>
      <p>This design greatly helps researchers with limited knowledge of R programming to perform the analysis. The report also includes code for every individual analysis which is rerunnable and makes the whole analysis reproducible. As consensus partitioning may require substantial computing time, <italic>e.g</italic>., it takes on average 10.7 hours for NMF or 1.5 hours for skmeans on the recount2 RNA-Seq datasets (<xref rid="B27" ref-type="bibr">27</xref>) of approximately 200 samples (180–220 samples where all datasets have 58037 genes) with 1 core (on a 1.2 GHz CPU, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 8: Figure S8.1</xref>), <italic>cola</italic> natively supports multi-core both for computation and report generation.</p>
    </sec>
    <sec id="SEC2-10">
      <title>Pre-preprocessing test datasets</title>
      <p>The Golub leukemia dataset is available in the <italic>golubEsets</italic> Bioconductor package (<xref rid="B28" ref-type="bibr">28</xref>,<xref rid="B29" ref-type="bibr">29</xref>). Values less than 1 were replaced by NA and later estimated by the function <monospace>adjust_matrix()</monospace>. Samples were normalized by quantile normalization. The Ritz ALL dataset is available in the <italic>ALL</italic> Bioconductor package (<xref rid="B30" ref-type="bibr">30</xref>,<xref rid="B31" ref-type="bibr">31</xref>). Samples were normalized by quantile normalization. The TCGA GBM dataset was already processed and is available at <ext-link ext-link-type="uri" xlink:href="https://gdc.cancer.gov/about-data/publications/gbm_exp">https://gdc.cancer.gov/about-data/publications/gbm_exp</ext-link>. The HSMM single-cell RNA-Seq dataset is available in the <italic>HSMMSingleCell</italic> Bioconductor package (<xref rid="B14" ref-type="bibr">14</xref>). Expression values were normalized by log<sub>10</sub>(FPKM + 1) and only the protein-coding genes were used. The MCF10CA single-cell RNA-Seq dataset is available at the EGA database with sample ID SAMEA4666651 and SAMEA4666652 (<xref rid="B32" ref-type="bibr">32</xref>). Raw reads were processed by STAR (<xref rid="B33" ref-type="bibr">33</xref>) and HTSeq-count (<xref rid="B34" ref-type="bibr">34</xref>). Cells with less than 2 million reads were removed and non-protein-coding genes were filtered out. Genes with &gt;5 reads mapped in &gt;50% samples were kept for analysis. Expression values were normalized by log<sub>2</sub>(TPM + 1). The GBM 450K methylation dataset is available at the GEO database with ID GSE36278. Probes that are on sex chromosomes and probes that overlap with known SNPs were removed. <italic>cola</italic> analysis was performed on the complete probe sets and on the probes annotated with CGIs, shores and seas separately.</p>
      <p>The recount2 RNA-Seq datasets (<xref rid="B27" ref-type="bibr">27</xref>) were downloaded from the recount2 website (<ext-link ext-link-type="uri" xlink:href="https://jhubiostatistics.shinyapps.io/recount/">https://jhubiostatistics.shinyapps.io/recount/</ext-link>) on November 13, 2018. Datasets with more than 500 samples or less than 50 samples were removed. GTEx and TCGA datasets separated by tissues were also downloaded from recount2 website. Raw counts were normalized by the TPM method. Only the protein-coding genes were used. Genes that have &lt;2 reads in &gt;50% of samples were removed. Expression values of log<sub>2</sub>(TPM + 1) were used for <italic>cola</italic> analysis. The GDS datasets were downloaded from the GEO database by the R package <italic>GEOquery</italic> (<xref rid="B35" ref-type="bibr">35</xref>) on March 12, 2019, with the query <italic>‘Homo sapiens’[porgn] AND 50[n_samples]: 500[n_samples] AND ‘gds’[Filter]</italic>. GDS1761 was removed from the analysis due to an error of <italic>GEOquery</italic>. For each GDS dataset, rows where there are no microarray probe IDs were removed. If the value type for the dataset was not from a two-channel microarray, the distribution of expression values was tested against normal distribution by the Kolmogorov-Smirnov test. If the Kolmogorov-Smirnov statistic was larger than 0.3, we assumed the expression values did not follow a normal distribution and log-transformation was applied. GDS2808 was additionally filtered whereby samples with &gt;25% NA values were removed. Finally, quantile normalization was applied to the samples.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS</title>
    <sec id="SEC3-1">
      <title>Case studies</title>
      <p>We demonstrate the usage of <italic>cola</italic> by five gene expression datasets which are the Golub leukemia dataset (<xref rid="B28" ref-type="bibr">28</xref>), the Ritz ALL dataset (<xref rid="B30" ref-type="bibr">30</xref>), the TCGA GBM dataset (<xref rid="B1" ref-type="bibr">1</xref>), the HSMM single-cell dataset (<xref rid="B14" ref-type="bibr">14</xref>) and the MCF10CA single-cell dataset (<xref rid="B32" ref-type="bibr">32</xref>) among which the first three are microarray datasets and the latter two are the RNA-Seq datasets. Four top-value methods (SD, CV, MAD and ATC) and six partitioning methods (hclust, kmeans, skmeans, pam, mclust, and NMF) generating 24 combinations of methods were applied to the datasets. Only results for the Golub leukemia dataset are shown in the main text and the complete reports of the five datasets can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 4</xref>. In the following sections of this paper, for simplicity, we refer to a choice of methods for the consensus partitioning by the nomenclature A:B, where A is the top-value method and B is the partitioning method, <italic>e.g</italic>., SD:hclust.</p>
      <p>For two-group classification of the Golub leukemia dataset, <italic>cola</italic> analysis reveals that ATC:kmeans (1-PAC = 1), ATC:NMF (1-PAC = 0.97) and ATC:skmeans (1-PAC = 1) generate stable partitions. For three subgroups, ATC:skmeans generates a stable partition with 1-PAC score of 0.96 (see <italic>cola</italic> report on Golub leukemia dataset in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 4</xref>). Figure <xref ref-type="fig" rid="F3">3</xref> illustrates the typical visualizations for interpreting the results. Figure <xref ref-type="fig" rid="F3">3A</xref> contains the consensus heatmaps for three-group classification for 24 combinations of four top-value methods and six partitioning methods. It shows that skmeans generates more stable partitions compared to other partitioning methods, especially in combination with ATC. Figure <xref ref-type="fig" rid="F3">3B</xref> quantitatively visualizes the 1-PAC scores for all 24 consensus matrices, which shows that partitioning by ATC:skmeans generates the highest 1-PAC score (0.96) among all methods. Figure <xref ref-type="fig" rid="F3">3C</xref> compares the consensus subgroups from all 24 methods where the transparency or shading of a field corresponds to the silhouette score of the respective sample in each partition. 1-PAC scores are visualized as the bar plot annotation on the right of the heatmap and rows are clustered based on the similarity of partitions from different methods. Figure <xref ref-type="fig" rid="F3">3C</xref> illustrates that for three-group classification, most of the methods generate similar partitions, however, the stability of the partitioning differs. The Euler diagram in Figure <xref ref-type="fig" rid="F3">3D</xref> visualizes the overlap of the top 500 genes with the highest SD, CV, MAD and ATC scores, where the ATC method generates a very distinct set of genes compared to the other three top-value methods.</p>
      <p>After having confirmed that ATC:skmeans generated the most stable partition among all methods for this dataset, we next looked at the diagnostic plots and performed downstream analysis for the partition generated by this specific choice of methods (ATC:skmeans). Figure <xref ref-type="fig" rid="F3">3E</xref> shows the eCDF curve of the consensus matrix for <italic>k</italic> = {2, …, 6} by ATC:skmeans. A good <italic>k</italic> can be selected by aiming at the flatness of the eCDF curve. In this case, that metric suggests that <italic>k</italic> = 2 or 3 are good choices. Figure <xref ref-type="fig" rid="F3">3F</xref> visualizes the 1-PAC scores for each <italic>k</italic>. According to <italic>cola</italic>’s definition for the rule of selecting the best number of subgroups, <italic>k</italic> = 3 (1-PAC = 0.96) is selected and <italic>k</italic> = 2 (1-PAC = 1) is an optional best <italic>k</italic>. Figure <xref ref-type="fig" rid="F3">3G</xref> is the membership heatmap which visualizes all the 50 × 5 individual partitions (50 random samplings × 5 top-<italic>n</italic> values), where the subgroup labels have been adjusted to the consensus subgroup labels. The membership heatmap gives a straightforward way to confirm that the partitions are very stable among all individual partitions, except for very few samples in some individual partitions. Figure <xref ref-type="fig" rid="F3">3H</xref> shows the dimensionality reduction by PCA on the samples where different colors represent different consensus subgroups and it confirms that the three predicted subgroups are very well separated. The two ambiguous samples with silhouette scores less than 0.5 are indicated in the plot as crosses. Figure <xref ref-type="fig" rid="F3">3I</xref> visualizes the signature genes that are significantly differentially expressed among the three consensus subgroups (by <italic>F</italic>-test). Three ambiguous samples with silhouette scores less than 0.5 are separated to the right of the heatmap and marked by grey bar plots. In the signature heatmap, rows are additionally clustered by <italic>k</italic>-means clustering with automatic selection of a proper number of groups, so that groups of rows with specific expression patterns can be directly inferred from the heatmap.</p>
    </sec>
    <sec id="SEC3-2">
      <title>ATC and skmeans generate more stable partitions</title>
      <p><italic>cola</italic> can run multiple methods simultaneously, which provides the possibility to benchmark the performance of different methods. We applied <italic>cola</italic> to 206 GDS microarray datasets and 223 recount2 RNA-Seq datasets (<xref rid="B27" ref-type="bibr">27</xref>). For each dataset, consensus partitioning was performed with four different top-value methods (SD, CV, MAD and ATC) and six partitioning methods (hclust, kmeans, skmeans, pam, mclust and NMF), which yielded 24 combinations of methods. For each run, numbers of subgroups were tested from 2 to 6.</p>
      <p>We compared the correlation of three metrics (mean silhouette score, concordance score and 1-PAC score) for determining the best number of subgroups. Generally, for the GDS datasets, the three metrics were highly correlated (overall mean Spearman correlation 0.872 for mean silhouette versus 1-PAC, 0.897 for concordance versus 1-PAC and 0.943 for mean silhouette versus concordance) and the correlation slightly dropped as the number of subgroups increased (Figure <xref ref-type="fig" rid="F4">4A</xref>). This finding was similar for the recount2 datasets (overall mean Spearman correlation 0.871 for mean silhouette versus 1-PAC, 0.905 for concordance versus 1-PAC and 0.932 for mean silhouette versus concordance, Figure <xref ref-type="fig" rid="F4">4E</xref>).</p>
      <fig id="F4" orientation="portrait" position="float">
        <label>Figure 4.</label>
        <caption>
          <p>Benchmark of consensus partitioning methods with 203 GDS datasets and 223 recount2 datasets. (<bold>A</bold>) Pairwise Spearman correlations between mean silhouette scores, concordance scores and 1-PAC scores among partitioning methods. (<bold>B</bold>) Distribution of 1-PAC scores for the partitions with the predicted optimal number of subgroups. Column annotation below the plot: red: partitions generated by ATC and/or skmeans; blue: partitions generated by hclust. (<bold>C</bold>) The proportion of partitions with the best number of subgroups that are stable. The order of the methods is the same as in Figure B. (<bold>D</bold>) General similarity between partitioning methods. Figure A–D were generated from GDS datasets. Figure E–H are analogous to A–D but were generated from recount2 datasets.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig4"/>
      </fig>
      <p>Since 1-PAC, mean silhouette and concordance were highly correlated, the 1-PAC score was used as the main metric for measuring the stability of the partitioning in the following sections of the paper. Figure <xref ref-type="fig" rid="F4">4B</xref> visualizes the distribution of 1-PAC scores for the partitions with the best <italic>k</italic> in the GDS datasets. The density heatmap shows that methods with ATC and/or skmeans generated partitions with higher 1-PAC scores for the best <italic>k</italic> (marked in red under the heatmap) while methods with hclust generated low 1-PAC scores (marked in blue under the heatmap). Figure <xref ref-type="fig" rid="F4">4C</xref> visualizes the proportion of stable partitions (1-PAC &gt; 0.9) for a given best number of subgroups for each method, and as expected, methods with ATC or skmeans gave more stable partitions while methods with hclust gave fewer stable partitions. Interestingly, ATC:NMF and ATC:kmeans gave a high proportion of stable partitions, however, the majority of these stable partitions were only obtained for 2 or 3 subgroups (66.5% and 74.3%). As a comparison, ATC:pam and ATC:skmeans not only gave more stable partitions overall but also revealed more subgroups (48.5% and 45.1% for <italic>k</italic> ≥ 4). The results were very similar for the recount2 datasets (Figure <xref ref-type="fig" rid="F4">4E</xref>–<xref ref-type="fig" rid="F4">G</xref>).</p>
      <p>Since <italic>cola</italic> allows performing analysis with multiple methods simultaneously, next we checked the similarity of partitionings obtained by different methods. In Figure <xref ref-type="fig" rid="F4">4D</xref>, the dendrogram visualizes the similarity of partitions from different methods averaged from individual GDS datasets for <italic>k</italic> = 4 (Comparisons for other values of <italic>k</italic> can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 5</xref>). Since features extracted by the ATC method were very distinct from those extracted by the other three top-value methods (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 2: Figure S2.18</xref>), partitionings performed on ATC features clustered apart from the other methods, while other partitionings clustered by partition methods. These effects were less consistent for the recount2 datasets (Figure <xref ref-type="fig" rid="F4">4H</xref>).</p>
    </sec>
    <sec id="SEC3-3">
      <title>Comparison of row and column sampling</title>
      <p>In consensus partitioning procedures, subsets from the original input matrix are generated by randomly sampling either rows or columns. To benchmark the performance of row and column sampling, we used the five gene expression datasets as test sets. Only two top-value methods (SD and ATC) and two partitioning methods (hclust and skmeans) were tested. Numbers of subgroups were tried from 2 to 6 and <italic>cola</italic> was run 100 times for each combination of parameters. In Figure <xref ref-type="fig" rid="F5">5</xref> we show the results for the TCGA GBM dataset. Results for the other datasets can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 6</xref>.</p>
      <fig id="F5" orientation="portrait" position="float">
        <label>Figure 5.</label>
        <caption>
          <p>Comparison of the impact of row and column sampling on consensus partitioning. (<bold>A</bold>) Boxplots of 1-PAC scores of partitions by SD:hclust, SD:skmeans, ATC:hclust and ATC:skmeans, generated from row and column samplings respectively. (<bold>B</bold>) Mean 1-PAC differences between row and column samplings. (<bold>C</bold>) Average concordance of the generated partitions between row and column samplings. The analysis was done with the TCGA GBM dataset.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig5"/>
      </fig>
      <p>Figure <xref ref-type="fig" rid="F5">5A</xref> visualizes the distribution of 1-PAC scores for the row and column sampling. Generally, row sampling generated higher 1-PAC scores than column sampling, but the difference was small. The mean 1-PAC for row sampling was 0.023 higher than for column sampling for SD:hclust, 0.019 higher for SD:skmeans, 0.037 higher for ATC:hclust, and 0.046 higher for ATC:skmeans (Figure <xref ref-type="fig" rid="F5">5B</xref>).</p>
      <p>To test whether row and column sampling generate similar partitionings, we measured the mean concordance of the partitioning from the two types of samplings (Figure <xref ref-type="fig" rid="F5">5C</xref>). In general, row and column samplings generated very similar partitionings, <italic>e.g</italic>., for ATC:skmeans with <italic>k</italic> = 3, partitionings with row and column samplings were both stable with mean concordance 0.939. The concordance dropped as the stability of the partitioning decreased. We also evaluated the mean concordance of partitions for row and column sampling separately (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 6</xref>). In general, partitionings from row sampling were more consistent than column sampling, but the difference was very small. The effects described in this paragraph were similar for other gene expression datasets (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 6</xref>).</p>
    </sec>
    <sec id="SEC3-4">
      <title>Number of random samplings</title>
      <p>To assess how many random samplings are required to gain stable consensus partitioning, we analyzed the TCGA GBM dataset with the number of random samplings set to 25, 50, 100 and 200, respectively. For each setting, <italic>cola</italic> was run 100 times to capture the variability of the partitionings. Random samplings were applied on matrix rows.</p>
      <p>Partitions became more stable with an increasing number of random samplings (average standard deviation was 0.0077 for 25 samplings, 0.0063 for 50 samplings, 0.0054 for 100 samplings and 0.0050 for 200 samplings, Figure <xref ref-type="fig" rid="F6">6A</xref>), but this increase in stability was very small. The partition concordance slightly increased with increasing number of random samplings, <italic>e.g</italic>., for MAD:hclust with <italic>k</italic> = 2, the mean concordance was 0.973 for 25 samplings and 0.991 for 200 samplings (Figure <xref ref-type="fig" rid="F6">6B</xref>). We also compared the concordance of the generated partitions between 25 and 200 samplings, and we found that when the partitions were stable, 25 and 200 samplings almost completely agreed. In contrast, when the partitions became unstable, the discordance got higher (Figure <xref ref-type="fig" rid="F6">6C</xref>). When applying column instead of row sampling we observed very similar results, with an overall slightly higher variance than for row sampling (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 7</xref>). Repeating this analysis on the HSMM single-cell dataset confirmed these findings (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 7</xref>).</p>
      <fig id="F6" orientation="portrait" position="float">
        <label>Figure 6.</label>
        <caption>
          <p>Benchmark on the number of random samplings. (<bold>A</bold>) Scatter plots of standard deviations versus mean values of 1-PAC scores of the partitions for every method and every <italic>k</italic>. The dot for ATC:mclust at <italic>k</italic> = 2 is removed from the plots because it is an outlier to all other dots and the complete plots including ATC:mclust can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 7</xref>. (<bold>B</bold>) Average concordance of partitions by MAD:hclust with different number of random samplings. Similar plots for the other methods can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 7</xref>. (<bold>C</bold>) The average concordance of partitions between 25 and 200 random samplings versus 1-PAC scores for the partitions with 25 random samplings. The analysis was done with the TCGA GBM dataset.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig6"/>
      </fig>
    </sec>
    <sec id="SEC3-5">
      <title>Application to a methylation dataset</title>
      <p>We applied <italic>cola</italic> to the GBM 450K methylation array dataset (<xref rid="B2" ref-type="bibr">2</xref>). Only five partitioning methods, hclust, kmeans, skmeans, pam and mclust, were used while NMF was excluded due to its long runtime. No row-scaling was applied to the methylation matrix because the methylation values were already on a fixed scale (<italic>i.e</italic>., from 0 to 1). A detailed analysis report on the methylation dataset can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 9</xref>.</p>
      <p>As opposed to gene expression datasets, variation-based methods for feature extraction like SD enabled more stable subgroup classification in the methylation datasets while the ATC method extracted features mainly associated with global methylation changes. Figure <xref ref-type="fig" rid="F7">7A</xref> shows a clustering of the top 5000 CpG probes with the highest SD scores. As expected, the methylation profiles corresponded well to the classification from the original study (DKFZ subtype) (<xref rid="B2" ref-type="bibr">2</xref>) which had also been based on top probes with the highest variance. As a comparison, Figure <xref ref-type="fig" rid="F7">7B</xref> illustrates the top 5000 CpG probes extracted by ATC, which had a very small overlap with the probes based on SD (1.76%), and also the methylation profiles were completely different from those of the probes extracted by SD.</p>
      <fig id="F7" orientation="portrait" position="float">
        <label>Figure 7.</label>
        <caption>
          <p>Application of <italic>cola</italic> to the GBM 450K methylation array dataset. (<bold>A</bold>) Methylation heatmap of the top 5000 CpG probes scored by SD and (<bold>B</bold>) by the ATC method. Column annotation reflects a classification system from the original publication, encoded as ‘DKFZ subtype’, and row annotation is based on classification of the CpG probes into different categories (island, shore, sea) based on prior knowledge from the annotation of 450K probes. (<bold>C</bold>) <italic>cola</italic> classification based on CpG probes separately for each category (island, shore, sea) with method SD:skmeans and (<bold>D</bold>) with method ATC:skmeans. Column annotation again reflects a classification system from the original publication, encoded as ‘DKFZ subtype’. The DKFZ subtype is the classification from the original study where the subtypes were predicted by top genes with the highest SD scores and by <italic>k</italic>-means consensus clustering with the R package <italic>ConsensusClusterPlus</italic>.</p>
        </caption>
        <graphic xlink:href="gkaa1146fig7"/>
      </fig>
      <p>Probes can be annotated with different genomic features of the respective CpGs and grouped into categories: CpG islands (CGIs), CGI shores and seas. We found that different top-value methods have different ‘preferences’ on these CpG feature categories. In the top 5000 probes selected by SD, 60.6% were CGI probes while only 30.4% of all probes in the 450K array were in CGIs. In contrast, there were only 6.6% CGI probes in the top 5000 probes selected by ATC, and 72.9% of the probes were in CGI seas (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 9: Figure S9.3</xref>). When setting SD as the top-value method, CGI probes gave a very clean image for subgroup classification and distinct groups can be observed from the heatmap (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 9: Figure S9.4A</xref>). The profiles for the top CGI probes became noisier from shores to seas (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 9: Figure S9.4B, C</xref>). When ATC was set as the top-value method, probes in shores or seas generally separated samples into a high-methylation group and a low-methylation group and they had very small overlap with the probes extracted by SD/CV/MAD (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 9: Figure S9.4–6</xref>).</p>
      <p>Different CpG feature categories play different biological roles. For example, CGIs are enriched at transcriptional start sites (TSS) and are generally unmethylated for actively expressed genes (<xref rid="B36" ref-type="bibr">36</xref>), while CGI seas overlap more with gene bodies or intergenic regions and normally relate to methylation changes in regions with long-range interactions. Accordingly, probes associated with different CpG features exhibited different methylation profiles. Thus, it might be more meaningful to apply consensus partitioning to the probes from different CpG features separately. Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="fig" rid="F7">D</xref> illustrate the <italic>cola</italic> classification based on probes in the three CpG features using the SD:skmeans and ATC:skmeans methods where all six classifications were stable under the selected number of subgroups. With SD:skmeans, CGIs and shores generated similar classifications and which were highly similar to the originally published classifications, with the exception of a subset of Mesenchymal samples which were classified into the same group as the RTK II Classic subtype. For the classification based on CGI seas, Mesenchymal and RTK II Classic subtypes were merged into one group and some of the RTK I PDGFRA samples were classified into the group of K27 subtype. For comparison, ATC:skmeans generated very different classifications from SD:skmeans. The three different categories of CpG features all identified one separate subgroup corresponding to the G34 subtype, and merged K27 and RTK I PDGFRA subtypes into one subgroup. Partitioning based on CGI probes could still separate the IDH subtype, while it merged Mesenchymal and RTK II Classic into one subtype. Partitioning based on shore probes did not separate IDH, Mesenchymal and RTK II Classic subtypes at all, and partitioning based on Sea probes generated a classification which seems independent of IDH/Mesenchymal/RTK II Classic subtypes.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>DISCUSSION</title>
    <p>Many analyses of high-throughput genomic data require classification. Samples with specific molecular profiles need to be classified into distinct subgroups based on various omics data. Consensus partitioning solves this task with a special focus on the stability of the classification procedure. In this work, we present <italic>cola</italic>, an R/Bioconductor package which provides a general framework for this important type of analysis. <italic>cola</italic> provides comprehensive functionalities and an easy-to-use interface. As a general framework, <italic>cola</italic> allows various methods to be user-defined and easily integrated into different steps of an analysis. This includes feature selection, sample classification or identification of signatures, <italic>i.e</italic>., features discriminating between the identified subgroups, and, if the data type permits, functional enrichment. <italic>cola</italic> provides rich functionalities to directly perform analyses and to compare results from multiple partitioning methods in parallel, as well as rich visualizations, which alleviates the difficulty of choosing methods which best explain a given dataset. In addition to flexibility in the choice of parameters and methods, <italic>cola</italic> offers standardization of the analysis workflow; it can automate the complete analysis and generates a comprehensive HTML report by a simple piece of code (minimal two lines of code). Furthermore, a new top-value method, <italic>i.e</italic>., a method to select informative features for the classification procedure, named ATC, is implemented in <italic>cola</italic>. Beyond the description of the software package <italic>cola</italic> itself, here we additionally report on extensive benchmarks addressing key parameters in the consensus partitioning procedure using 435 publicly available datasets on gene expression and DNA methylation. This includes whether to perform random sampling by matrix rows or columns, how many random samplings are sufficient for consensus partitioning, and the impact of row scaling on the consensus partitioning. The results can help users to select optimal parameter values for their studies. The HTML reports, as well as the code for <italic>cola</italic> analyses of these 435 datasets, are all publicly available in a repository on GitHub, which can serve as an online database where researchers can query subgroupings in these datasets.</p>
    <p>In addition to established variance-based top-value methods, in <italic>cola</italic> we have implemented ATC, a top-value method which is correlation-based. The benchmark on publicly available gene expression datasets demonstrates that consensus partitioning with the ATC method generates stable partitions. Among the different combinations of top-value methods and partitioning methods as encoded in the nomenclature A:B, where A is the top-value method and B is the partitioning method, those involving ATC had the highest stability as objectivated by 1-PAC and the highest concordance on gene expression data. When comparing the different partitioning methods, skmeans performed best in a majority of combinations, and ATC:skmeans was the most stable combination in our benchmark. This superiority persisted across different values of <italic>k</italic>, the number of subgroups. In particular, the combination ATC:skmeans had the highest resolution in the sense that it still yielded stable partitions even for higher numbers of <italic>k</italic>. Based on the fact that ATC is the only correlation-based top-value method in our benchmark, it extracts a unique set of features with little overlap with the features extracted by other top-value methods (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 2: Figure S2.16</xref>). The high stability of the ATC method can be explained by the features or rows selected by this top-value method. By definition, ATC selects features which upon pairwise comparison are highly correlated or anti-correlated and which form clusters of features. When performing several partitions with randomly selected subsets of features, few features of the various clusters may be deselected, but the overall presence of the clusters of features is not altered, which is the basis for stability.</p>
    <p>We also compared variance-based and correlation-based top-value methods on a methylation array dataset. The results showed that SD had better performance and the probes it selected clearly separated samples into groups, while the probes selected by ATC only reflected global methylation difference which is of less interest. Since ATC only considers the correlation while ignoring the absolute variation in features, it may prioritize features showing consistent patterns but with very small differences among samples, which is sometimes caused by small batch effects, <italic>e.g</italic>., a sequencing batch. In those cases, the predicted partition may be statistically meaningful, but it hides the real biological subgroups. A typical example is that in the methylation dataset high ATC scores are more often assigned to features in non-CGI regions, reflecting genome-wide methylation differences. Thus, users need to be careful and a recommendation is to use the function <monospace>top_row_heatmap()</monospace> to directly visualize the patterns of the top features.</p>
    <p>In the analysis of the methylation dataset, with the SD method, we found that partitionings were more determined by the CGI probes while partitionings generated by the ATC method were dominantly determined by CGI sea probes. We recommend using SD as the top-value method for methylation datasets because the methylation profile for the top probes it selected was efficient for subgroup classification and moreover, the majority of the top probes were located in CGIs and also functionally more related to the changes in gene expression. We found that different CpG features might generate different subgroup classifications, especially for the CGI seas, which is especially important for genome-level methylation profiles (<italic>e.g</italic>., from whole-genome bisulfite sequencing) because the proportion of CpG sites in seas from the whole genome (85.2% from a WGBS dataset) are much higher than the methylation array (46.2% in 450K methylation array). These different classifications probably reflect different and complementary aspects of the underlying biological system. Thus, it is meaningful to apply consensus partitioning on different CpG features separately.</p>
    <p>In addition to an appropriate selection of top-value method and partitioning method, preprocessing also has an impact on the result of a consensus partitioning procedure. In particular, row scaling helps to remove the absolute difference between features while focusing on consistent regulation directions. While in general, applying row scaling on gene expression datasets can be recommended, users need to be cautious. In this work, we chose one dataset, the Golub leukemia dataset, for comparison and performed <italic>cola</italic> analysis with and without row scaling. This resulted in two different classifications, and both were biologically meaningful.</p>
    <p>In the original study of the Golub leukemia dataset, a self-organizing map (SOM) was applied to the entire expression matrix without row scaling. The authors found a two-group classification of the samples with very good agreement with the biological classification of acute myeloid leukemia (AML) and acute lymphoblastic leukemia (ALL) (<xref rid="B29" ref-type="bibr">29</xref>). The original analysis only applied SOM once and thus did not consider the stability of the clustering. As shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Material 10</xref>, in the <italic>cola</italic> analysis, when the number of subgroups was set to 2 and rows were scaled, ATC:kmeans, ATC:NMF and ATC:skmeans generated stable partitions. The consensus classification of the three methods had a very high agreement, but a subset of the ALL samples were classified in the same group as AML samples. The top-value methods SD, CV and MAD combined with hclust, kmeans, mclust and NMF separated the samples along with the AML/ALL separation, however, the partitions were not stable. Of note, if rows were not scaled, variance-based methods generated stable partitions, <italic>e.g</italic>., MAD:skmeans or SD:kmeans, while correlation-based methods lost stability. The two different classifications both separated samples well in the PCA analysis and both had high numbers of signature genes (1810 signature genes in the two-group classification by ATC:skmeans with rows scaled, 1057 signature genes by MAD:kmeans with rows unscaled, with an overlap of 704 genes in the two sets of signature genes, FDR &lt; 0.05). The two sets of signature genes both had a number of enriched biological functions, which implies that both classifications were biologically meaningful.</p>
    <p>The Golub leukemia study also classified samples into three groups where ALL samples were additionally classified into two subgroups which corresponded to T-cell and B-cell lineage (<xref rid="B29" ref-type="bibr">29</xref>). With three-group classification by <italic>cola</italic> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 11</xref>), we found that ATC:skmeans with row scaling was the only method that generated a stable partition where ALL samples were separated into two groups. SD:skmeans without row scaling generated the most similar partition as the original Golub classification, however, the partition was highly unstable, especially for the B/T-cell classification. Interestingly, being different from the B/T-cell classification for ALL samples, ATC:skmeans generated a different classification for ALL samples. The signature genes for the two partitions were very different where ATC:skmeans with row scaling selected 1200 signature genes while SD:skmeans without row scaling only selected 228 signature genes. The number of common signature genes was only 17. Functional enrichment analysis showed that ATC:skmeans signature genes enriched many terms in the agreement with prior biological knowledge. Thus, this novel classification might provide a new view on the subgroups of ALL.</p>
    <p>Using the same datasets as in the benchmarks above, we also varied other parameters and assessed their influence on stability as well as optimality criteria. In the consensus partitioning process, random samplings can either be performed by rows or columns of the matrix. Through the benchmarks on public datasets, we found that the final partition results were highly consistent between both samplings and partitions from row sampling were slightly more stable than from column sampling. Column sampling ran ∼1.5 times longer than row sampling, which might be an issue for the partitioning methods that need longer runtime, <italic>e.g</italic>., NMF (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 8</xref>). We also evaluated the impact of the number of random samplings on the reproducibility of consensus partitioning. We found that consensus partitioning was well reproducible even for 25 samplings, especially when the partition was already stable. One reason is that the consensus partition is already summarized from a huge amount of single partitionings. <italic>cola</italic> takes 50 samplings as the default parameter, which is a balance between the stability of the partitionings and runtime.</p>
    <p><italic>cola</italic> provides a function <monospace>get_classes()</monospace> that can be applied to the <italic>ConsensusPartitionList</italic> object and generates a global classification by averaging consensus partitions from all methods by weighting the mean silhouette score in each method. This process is also visualized by the function <monospace>collect_classes()</monospace> and an example can be found in Figure <xref ref-type="fig" rid="F3">3C</xref>. However, consensus classification across different methods should be applied with care because the assignment of weights to partitions from the various methods is a complex task. Furthermore, as demonstrated with the Golub leukemia dataset, different partition methods can yield complementary and still valid classifications (<xref ref-type="supplementary-material" rid="sup1">Supplementary Material 10</xref>). Samples having different classification labels between groups will be assigned as ambiguous samples if all methods are merged. In this case, it is worthwhile to look at different classifications separately since they might illustrate different aspects of the data and underlying biological systems.</p>
    <p>One popular field to apply partitioning analysis is scRNA-Seq. <italic>cola</italic> can be applied to scRNA-Seq datasets if the number of cells is intermediate (∼500), however, the runtime and the memory usage might not be acceptable if the number of cells becomes very high, <italic>e.g</italic>., several thousands. Nevertheless, we can propose the following two strategies to partially solve this problem. (i) A randomly sampled subset of cells which take relatively short runtime (<italic>e.g</italic>., 100–200 cells) can be first supplied to <italic>cola</italic>, from which a specific combination of top-value method and partitioning method that gives the best results can be pre-selected. Later the user can then apply only these two specific methods to the complete dataset. This will be much faster than blindly running <italic>cola</italic> with many methods in sequence. (ii) The selected subset of cells can be treated as a training set to generate a classification. Then, the class labels of the remaining cells can be predicted, <italic>e.g</italic>., by testing the distance to the centroid of each cell group, without rerunning consensus partitioning. <italic>cola</italic> implements a function <monospace>predict_classes()</monospace> for this purpose. To simplify the use even more, <italic>cola</italic> implements a function <monospace>consensus_partition_by_down_sampling()</monospace> that automatically performs the analysis proposed in the second strategy. Note, since these two strategies are performed by sampling a small subset of cells from the cohort, the cell clusters with small sizes might not be detectable. However, if sufficient annotation is available, the sampling strategy may also be chosen in a semi-supervised way to select representatives of known groups.</p>
    <p><italic>cola</italic> is a statistical framework for unsupervised partitioning analysis with no assumption on the data types and the biology subjects. Nevertheless, <italic>cola</italic> provides functions that help to interpret biological implications of the classification. The function <monospace>functional_enrichment()</monospace> does this by analyzing the biological functions of the signature genes that best separate subgroups. If more external data is provided, <italic>e.g</italic>., clinical data such as survival data, the biological interpretation of the classification can be validated. <italic>cola</italic> provides the function <monospace>test_to_known_factors()</monospace> that helps to check the correspondence between <italic>cola</italic> classification and the known annotation tables by statistical tests.</p>
  </sec>
  <sec sec-type="conclusions" id="SEC5">
    <title>CONCLUSIONS</title>
    <p>We developed <italic>cola</italic>, an R package that provides a comprehensive analysis for consensus partitioning. We demonstrated the usage of <italic>cola</italic> and benchmarked the key parameters in the consensus partitioning procedure, which gives valuable hints for users to select proper parameters for their studies. <italic>cola</italic> is designed with an easy user interface and allows integrating user-defined methods into the partitioning framework. We believe it will be convenient for <italic>de novo</italic> subgroup identification in studies, as well as for benchmarking new partitioning methods.</p>
  </sec>
  <sec sec-type="data-availability" id="SEC6">
    <title>DATA AVAILABILITY</title>
    <p>The <italic>cola</italic> package is available on Bioconductor (<ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/cola/">https://bioconductor.org/packages/cola/</ext-link>). Note that for reproducibility of the analyses presented in this work, the version of <italic>cola</italic> should be ≥1.3.2. The <italic>cola</italic> reports for 206 GDS and 223 recount2 datasets, as well as the six public datasets used for demonstration, are publicly available at <ext-link ext-link-type="uri" xlink:href="https://jokergoo.github.io/cola_collection/">https://jokergoo.github.io/cola_collection/</ext-link>. The scripts to perform the complete analysis are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/jokergoo/cola_manuscript">https://github.com/jokergoo/cola_manuscript</ext-link>. The <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref> are available at <ext-link ext-link-type="uri" xlink:href="https://jokergoo.github.io/cola_supplementary/">https://jokergoo.github.io/cola_supplementary/</ext-link>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>gkaa1146_Supplemental_Files</label>
      <media xlink:href="gkaa1146_supplemental_files.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="SEC7">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkaa1146#supplementary-data">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC8">
    <title>FUNDING</title>
    <p>German Cancer Research Center-Heidelberg Center for Personalized Oncology (DKFZ-HIPO); Molecular Diagnostics Program of the National Center for Tumor Diseases (NCT) Heidelberg. Funding for open access charge: German Cancer Research Center-Heidelberg Center for Personalized Oncology (DKFZ-HIPO); Molecular Diagnostics Program of the National Center for Tumor Diseases (NCT) Heidelberg.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verhaak</surname><given-names>R.G.W.</given-names></string-name>, <string-name><surname>Hoadley</surname><given-names>K.A.</given-names></string-name>, <string-name><surname>Purdom</surname><given-names>E.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>V.</given-names></string-name>, <string-name><surname>Qi</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Wilkerson</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Miller</surname><given-names>C.R.</given-names></string-name>, <string-name><surname>Ding</surname><given-names>L.</given-names></string-name>, <string-name><surname>Golub</surname><given-names>T.</given-names></string-name>, <string-name><surname>Mesirov</surname><given-names>J.P.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Integrated genomic analysis identifies clinically relevant subtypes of glioblastoma characterized by abnormalities in PDGFRA, IDH1, EGFR, and NF1</article-title>. <source>Cancer Cell</source>. <year>2010</year>; <volume>17</volume>:<fpage>98</fpage>–<lpage>110</lpage>.<pub-id pub-id-type="pmid">20129251</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sturm</surname><given-names>D.</given-names></string-name>, <string-name><surname>Witt</surname><given-names>H.</given-names></string-name>, <string-name><surname>Hovestadt</surname><given-names>V.</given-names></string-name>, <string-name><surname>Khuong-Quang</surname><given-names>D.-A.</given-names></string-name>, <string-name><surname>Jones</surname><given-names>D.T.W.</given-names></string-name>, <string-name><surname>Konermann</surname><given-names>C.</given-names></string-name>, <string-name><surname>Pfaff</surname><given-names>E.</given-names></string-name>, <string-name><surname>Tönjes</surname><given-names>M.</given-names></string-name>, <string-name><surname>Sill</surname><given-names>M.</given-names></string-name>, <string-name><surname>Bender</surname><given-names>S.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Hotspot mutations in H3F3A and IDH1 define distinct epigenetic and biological subgroups of glioblastoma</article-title>. <source>Cancer Cell</source>. <year>2012</year>; <volume>22</volume>:<fpage>425</fpage>–<lpage>437</lpage>.<pub-id pub-id-type="pmid">23079654</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hoadley</surname><given-names>K.A.</given-names></string-name>, <string-name><surname>Yau</surname><given-names>C.</given-names></string-name>, <string-name><surname>Hinoue</surname><given-names>T.</given-names></string-name>, <string-name><surname>Wolf</surname><given-names>D.M.</given-names></string-name>, <string-name><surname>Lazar</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Drill</surname><given-names>E.</given-names></string-name>, <string-name><surname>Shen</surname><given-names>R.</given-names></string-name>, <string-name><surname>Taylor</surname><given-names>A.M.</given-names></string-name>, <string-name><surname>Cherniack</surname><given-names>A.D.</given-names></string-name>, <string-name><surname>Thorsson</surname><given-names>V.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Cell-of-origin patterns dominate the molecular classification of 10, 000 tumors from 33 types of cancer</article-title>. <source>Cell</source>. <year>2018</year>; <volume>173</volume>:<fpage>291</fpage>–<lpage>304</lpage>.<pub-id pub-id-type="pmid">29625048</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kiselev</surname><given-names>V.Y.</given-names></string-name>, <string-name><surname>Kirschner</surname><given-names>K.</given-names></string-name>, <string-name><surname>Schaub</surname><given-names>M.T.</given-names></string-name>, <string-name><surname>Andrews</surname><given-names>T.</given-names></string-name>, <string-name><surname>Yiu</surname><given-names>A.</given-names></string-name>, <string-name><surname>Chandra</surname><given-names>T.</given-names></string-name>, <string-name><surname>Natarajan</surname><given-names>K.N.</given-names></string-name>, <string-name><surname>Reik</surname><given-names>W.</given-names></string-name>, <string-name><surname>Barahona</surname><given-names>M.</given-names></string-name>, <string-name><surname>Green</surname><given-names>A.R.</given-names></string-name><etal>et al</etal>.</person-group><article-title>SC3: consensus clustering of single-cell RNA-seq data</article-title>. <source>Nat. Methods</source>. <year>2017</year>; <volume>14</volume>:<fpage>483</fpage>–<lpage>486</lpage>.<pub-id pub-id-type="pmid">28346451</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Monti</surname><given-names>S.</given-names></string-name>, <string-name><surname>Tamayo</surname><given-names>P.</given-names></string-name>, <string-name><surname>Mesirov</surname><given-names>J.</given-names></string-name>, <string-name><surname>Golub</surname><given-names>T.</given-names></string-name></person-group><article-title>Consensus clustering: a resampling-based method for class discovery and visualization of gene expression microarray data</article-title>. <source>Machine Learning</source>. <year>2003</year>; <volume>52</volume>:<fpage>91</fpage>–<lpage>118</lpage>.</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilkerson</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Hayes</surname><given-names>D.N.</given-names></string-name></person-group><article-title>ConsensusClusterPlus: a class discovery tool with confidence assessments and item tracking</article-title>. <source>Bioinformatics</source>. <year>2010</year>; <volume>26</volume>:<fpage>1572</fpage>–<lpage>1573</lpage>.<pub-id pub-id-type="pmid">20427518</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chiu</surname><given-names>D.S.</given-names></string-name>, <string-name><surname>Talhouk</surname><given-names>A.</given-names></string-name></person-group><article-title>diceR: an R package for class discovery using an ensemble driven approach</article-title>. <source>BMC Bioinformatics</source>. <year>2018</year>; <volume>19</volume>:<fpage>11</fpage>.<pub-id pub-id-type="pmid">29334888</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>D.D.</given-names></string-name>, <string-name><surname>Seung</surname><given-names>H.S.</given-names></string-name></person-group><article-title>Algorithms for non-negative matrix factorization</article-title>. <source>Proceedings of the 13th International Conference on Neural Information Processing Systems</source>. <year>2000</year>; <fpage>535</fpage>–<lpage>541</lpage>.</mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gaujoux</surname><given-names>R.</given-names></string-name>, <string-name><surname>Seoighe</surname><given-names>C.</given-names></string-name></person-group><article-title>A flexible R package for nonnegative matrix factorization</article-title>. <source>BMC Bioinformatics</source>. <year>2010</year>; <volume>11</volume>:<fpage>367</fpage>.<pub-id pub-id-type="pmid">20598126</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dhillon</surname><given-names>I.S.</given-names></string-name>, <string-name><surname>Modha</surname><given-names>D.S.</given-names></string-name></person-group><article-title>Concept decompositions for large sparse text data using clustering</article-title>. <source>Machine Learning</source>. <year>2001</year>; <volume>42</volume>:<fpage>143</fpage>–<lpage>175</lpage>.</mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Hastie</surname><given-names>T.</given-names></string-name>, <string-name><surname>Tibshirani</surname><given-names>R.</given-names></string-name>, <string-name><surname>Narasimhan</surname><given-names>B.</given-names></string-name>, <string-name><surname>Chu</surname><given-names>G.</given-names></string-name></person-group><article-title>impute: imputation for microarray data</article-title>. <year>2020</year>; <comment>R package version 1.62.0</comment>.</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hancer</surname><given-names>E.</given-names></string-name>, <string-name><surname>Xue</surname><given-names>B.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>M.</given-names></string-name></person-group><article-title>A survey on feature selection approaches for clustering</article-title>. <source>Artif. Intell. Rev.</source><year>2020</year>; <volume>53</volume>:<fpage>4519</fpage>–<lpage>4545</lpage>.</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name>, <string-name><surname>Cheng</surname><given-names>K.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>S.</given-names></string-name>, <string-name><surname>Morstatter</surname><given-names>F.</given-names></string-name>, <string-name><surname>Trevino</surname><given-names>R.P.</given-names></string-name>, <string-name><surname>Tang</surname><given-names>J.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>H.</given-names></string-name></person-group><article-title>Feature Selection: A data perspective</article-title>. <source>ACM Comput. Surv.</source><year>2017</year>; <volume>50</volume>:<fpage>1</fpage>–<lpage>45</lpage>.</mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Trapnell</surname><given-names>C.</given-names></string-name></person-group><article-title>HSMMSingleCell: Single-cell RNA-Seq for differentiating human skeletal muscle myoblasts (HSMM)</article-title>. <year>2020</year>; <comment>R package version 1.8.0</comment>.</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Scrucca</surname><given-names>L.</given-names></string-name>, <string-name><surname>Fop</surname><given-names>M.</given-names></string-name>, <string-name><surname>Murphy</surname><given-names>T.B.</given-names></string-name>, <string-name><surname>Raftery</surname><given-names>A.E.</given-names></string-name></person-group><article-title>mclust 5: clustering, classification and density estimation using Gaussian finite mixture models</article-title>. <source>R J.</source><year>2016</year>; <volume>8</volume>:<fpage>289</fpage>–<lpage>317</lpage>.<pub-id pub-id-type="pmid">27818791</pub-id></mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hornik</surname><given-names>K.</given-names></string-name>, <string-name><surname>Feinerer</surname><given-names>I.</given-names></string-name>, <string-name><surname>Kober</surname><given-names>M.</given-names></string-name>, <string-name><surname>Buchta</surname><given-names>C.</given-names></string-name></person-group><article-title>Spherical-means clustering</article-title>. <source>J. Stat. Softw.</source><year>2012</year>; <volume>50</volume>:<fpage>1</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">25317082</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Haghverdi</surname><given-names>L.</given-names></string-name>, <string-name><surname>Lun</surname><given-names>A.T.L.</given-names></string-name>, <string-name><surname>Morgan</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Marioni</surname><given-names>J.C.</given-names></string-name></person-group><article-title>Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors</article-title>. <source>Nat. Biotechnol.</source><year>2018</year>; <volume>36</volume>:<fpage>421</fpage>–<lpage>427</lpage>.<pub-id pub-id-type="pmid">29608177</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hornik</surname><given-names>K.</given-names></string-name></person-group><article-title>A CLUE for cluster ensembles</article-title>. <source>J. Stat. Softw.</source><year>2005</year>; <volume>14</volume>:<fpage>1</fpage>–<lpage>25</lpage>.</mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Şenbabaoğlu</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Michailidis</surname><given-names>G.</given-names></string-name>, <string-name><surname>Li</surname><given-names>J.Z.</given-names></string-name></person-group><article-title>Critical limitations of consensus clustering in class discovery</article-title>. <source>Sci. Rep.</source><year>2014</year>; <volume>4</volume>:<fpage>6207</fpage>.<pub-id pub-id-type="pmid">25158761</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusher</surname><given-names>V.G.</given-names></string-name>, <string-name><surname>Tibshirani</surname><given-names>R.</given-names></string-name>, <string-name><surname>Chu</surname><given-names>G.</given-names></string-name></person-group><article-title>Significance analysis of microarrays applied to the ionizing radiation response</article-title>. <source>Proc. Natl Acad. Sci. U.S.A.</source><year>2001</year>; <volume>98</volume>:<fpage>5116</fpage>–<lpage>5121</lpage>.<pub-id pub-id-type="pmid">11309499</pub-id></mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tibshirani</surname><given-names>R.</given-names></string-name>, <string-name><surname>Hastie</surname><given-names>T.</given-names></string-name>, <string-name><surname>Narasimhan</surname><given-names>B.</given-names></string-name>, <string-name><surname>Chu</surname><given-names>G.</given-names></string-name></person-group><article-title>Diagnosis of multiple cancer types by shrunken centroids of gene expression</article-title>. <source>Proc. Natl Acad. Sci. U.S.A.</source><year>2002</year>; <volume>99</volume>:<fpage>6567</fpage>–<lpage>6572</lpage>.<pub-id pub-id-type="pmid">12011421</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname><given-names>G.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>L.-G.</given-names></string-name>, <string-name><surname>Han</surname><given-names>Y.</given-names></string-name>, <string-name><surname>He</surname><given-names>Q.-Y.</given-names></string-name></person-group><article-title>clusterProfiler: an R package for comparing biological themes among gene clusters</article-title>. <source>OMICS</source>. <year>2012</year>; <volume>16</volume>:<fpage>284</fpage>–<lpage>287</lpage>.<pub-id pub-id-type="pmid">22455463</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname><given-names>G.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>L.-G.</given-names></string-name>, <string-name><surname>Yan</surname><given-names>G.-R.</given-names></string-name>, <string-name><surname>He</surname><given-names>Q.-Y.</given-names></string-name></person-group><article-title>DOSE: an R/Bioconductor package for disease ontology semantic and enrichment analysis</article-title>. <source>Bioinformatics</source>. <year>2015</year>; <volume>31</volume>:<fpage>608</fpage>–<lpage>609</lpage>.<pub-id pub-id-type="pmid">25677125</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname><given-names>G.</given-names></string-name>, <string-name><surname>He</surname><given-names>Q.-Y.</given-names></string-name></person-group><article-title>ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization</article-title>. <source>Mol. Biosyst.</source><year>2016</year>; <volume>12</volume>:<fpage>477</fpage>–<lpage>479</lpage>.<pub-id pub-id-type="pmid">26661513</pub-id></mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McInnes</surname><given-names>L.</given-names></string-name>, <string-name><surname>Healy</surname><given-names>J.</given-names></string-name>, <string-name><surname>Melville</surname><given-names>J.</given-names></string-name></person-group><article-title>UMAP: uniform manifold approximation and projection for dimension reduction</article-title>. <year>2018</year>; <comment>arXiv doi:</comment><comment>18 September 2020, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1802.03426">https://arxiv.org/abs/1802.03426</uri>.</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Maaten</surname><given-names>L.</given-names></string-name>, <string-name><surname>Hinton</surname><given-names>G.</given-names></string-name></person-group><article-title>Visualizing data using t-SNE</article-title>. <source>J. Mach. Learn. Res.</source><year>2008</year>; <volume>9</volume>:<fpage>2579</fpage>–<lpage>2605</lpage>.</mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Collado-Torres</surname><given-names>L.</given-names></string-name>, <string-name><surname>Nellore</surname><given-names>A.</given-names></string-name>, <string-name><surname>Kammers</surname><given-names>K.</given-names></string-name>, <string-name><surname>Ellis</surname><given-names>S.E.</given-names></string-name>, <string-name><surname>Taub</surname><given-names>M.A.</given-names></string-name>, <string-name><surname>Hansen</surname><given-names>K.D.</given-names></string-name>, <string-name><surname>Jaffe</surname><given-names>A.E.</given-names></string-name>, <string-name><surname>Langmead</surname><given-names>B.</given-names></string-name>, <string-name><surname>Leek</surname><given-names>J.T.</given-names></string-name></person-group><article-title>Reproducible RNA-seq analysis using recount2</article-title>. <source>Nat. Biotechnol.</source><year>2017</year>; <volume>35</volume>:<fpage>319</fpage>–<lpage>321</lpage>.<pub-id pub-id-type="pmid">28398307</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Golub</surname><given-names>T.</given-names></string-name></person-group><article-title>golubEsets: exprSets for golub leukemia data</article-title>. <year>2020</year>; <comment>R package version 1.30.0</comment>.</mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Golub</surname><given-names>T.R.</given-names></string-name>, <string-name><surname>Slonim</surname><given-names>D.K.</given-names></string-name>, <string-name><surname>Tamayo</surname><given-names>P.</given-names></string-name>, <string-name><surname>Huard</surname><given-names>C.</given-names></string-name>, <string-name><surname>Gaasenbeek</surname><given-names>M.</given-names></string-name>, <string-name><surname>Mesirov</surname><given-names>J.P.</given-names></string-name>, <string-name><surname>Coller</surname><given-names>H.</given-names></string-name>, <string-name><surname>Loh</surname><given-names>M.L.</given-names></string-name>, <string-name><surname>Downing</surname><given-names>J.R.</given-names></string-name>, <string-name><surname>Caligiuri</surname><given-names>M.A.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Molecular classification of cancer: class discovery and class prediction by gene expression monitoring</article-title>. <source>Science</source>. <year>1999</year>; <volume>286</volume>:<fpage>531</fpage>–<lpage>537</lpage>.<pub-id pub-id-type="pmid">10521349</pub-id></mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>X.</given-names></string-name></person-group><article-title>ALL: A data package</article-title>. <year>2020</year>; <comment>R package version 1.30.0</comment>.</mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chiaretti</surname><given-names>S.</given-names></string-name>, <string-name><surname>Li</surname><given-names>X.</given-names></string-name>, <string-name><surname>Gentleman</surname><given-names>R.</given-names></string-name>, <string-name><surname>Vitale</surname><given-names>A.</given-names></string-name>, <string-name><surname>Vignetti</surname><given-names>M.</given-names></string-name>, <string-name><surname>Mandelli</surname><given-names>F.</given-names></string-name>, <string-name><surname>Ritz</surname><given-names>J.</given-names></string-name>, <string-name><surname>Foa</surname><given-names>R.</given-names></string-name></person-group><article-title>Gene expression profile of adult T-cell acute lymphocytic leukemia identifies distinct subsets of patients with different response to therapy and survival</article-title>. <source>Blood</source>. <year>2004</year>; <volume>103</volume>:<fpage>2771</fpage>–<lpage>2778</lpage>.<pub-id pub-id-type="pmid">14684422</pub-id></mixed-citation>
    </ref>
    <ref id="B32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tirier</surname><given-names>S.M.</given-names></string-name>, <string-name><surname>Park</surname><given-names>J.</given-names></string-name>, <string-name><surname>Preußer</surname><given-names>F.</given-names></string-name>, <string-name><surname>Amrhein</surname><given-names>L.</given-names></string-name>, <string-name><surname>Gu</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Steiger</surname><given-names>S.</given-names></string-name>, <string-name><surname>Mallm</surname><given-names>J.-P.</given-names></string-name>, <string-name><surname>Krieger</surname><given-names>T.</given-names></string-name>, <string-name><surname>Waschow</surname><given-names>M.</given-names></string-name>, <string-name><surname>Eismann</surname><given-names>B.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Pheno-seq - linking visual features and gene expression in 3D cell culture systems</article-title>. <source>Sci. Rep.</source><year>2019</year>; <volume>9</volume>:<fpage>12367</fpage>.<pub-id pub-id-type="pmid">31451731</pub-id></mixed-citation>
    </ref>
    <ref id="B33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dobin</surname><given-names>A.</given-names></string-name>, <string-name><surname>Davis</surname><given-names>C.A.</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F.</given-names></string-name>, <string-name><surname>Drenkow</surname><given-names>J.</given-names></string-name>, <string-name><surname>Zaleski</surname><given-names>C.</given-names></string-name>, <string-name><surname>Jha</surname><given-names>S.</given-names></string-name>, <string-name><surname>Batut</surname><given-names>P.</given-names></string-name>, <string-name><surname>Chaisson</surname><given-names>M.</given-names></string-name>, <string-name><surname>Gingeras</surname><given-names>T.R.</given-names></string-name></person-group><article-title>STAR: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source>. <year>2013</year>; <volume>29</volume>:<fpage>15</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">23104886</pub-id></mixed-citation>
    </ref>
    <ref id="B34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S.</given-names></string-name>, <string-name><surname>Pyl</surname><given-names>P.T.</given-names></string-name>, <string-name><surname>Huber</surname><given-names>W.</given-names></string-name></person-group><article-title>HTSeq — a Python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>. <year>2015</year>; <volume>31</volume>:<fpage>166</fpage>–<lpage>169</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="B35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Davis</surname><given-names>S.</given-names></string-name>, <string-name><surname>Meltzer</surname><given-names>P.S.</given-names></string-name></person-group><article-title>GEOquery: a bridge between the Gene Expression Omnibus (GEO) and BioConductor</article-title>. <source>Bioinformatics</source>. <year>2007</year>; <volume>23</volume>:<fpage>1846</fpage>–<lpage>1847</lpage>.<pub-id pub-id-type="pmid">17496320</pub-id></mixed-citation>
    </ref>
    <ref id="B36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deaton</surname><given-names>A.M.</given-names></string-name>, <string-name><surname>Bird</surname><given-names>A.</given-names></string-name></person-group><article-title>CpG islands and the regulation of transcription</article-title>. <source>Genes Dev.</source><year>2011</year>; <volume>25</volume>:<fpage>1010</fpage>–<lpage>1022</lpage>.<pub-id pub-id-type="pmid">21576262</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

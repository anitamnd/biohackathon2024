<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Syst Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Syst Biol</journal-id>
    <journal-title-group>
      <journal-title>BMC Systems Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1752-0509</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5387271</article-id>
    <article-id pub-id-type="publisher-id">423</article-id>
    <article-id pub-id-type="doi">10.1186/s12918-017-0423-3</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SBpipe: a collection of pipelines for automating repetitive simulation and analysis tasks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-1695-6763</contrib-id>
        <name>
          <surname>Dalle Pezze</surname>
          <given-names>Piero</given-names>
        </name>
        <address>
          <email>piero.dallepezze@babraham.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Le Novère</surname>
          <given-names>Nicolas</given-names>
        </name>
        <address>
          <email>lenov@babraham.ac.uk</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.418195.0</institution-id><institution/><institution>The Babraham Institute, </institution></institution-wrap>Babraham Campus, Cambridge, CB22 3AT UK </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>4</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>4</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <volume>11</volume>
    <elocation-id>46</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>2</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>3</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2017</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>The rapid growth of the number of mathematical models in Systems Biology fostered the development of many tools to simulate and analyse them. The reliability and precision of these tasks often depend on multiple repetitions and they can be optimised if executed as pipelines. In addition, new formal analyses can be performed on these repeat sequences, revealing important insights about the accuracy of model predictions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>Here we introduce SBpipe, an open source software tool for automating repetitive tasks in model building and simulation. Using basic YAML configuration files, SBpipe builds a sequence of repeated model simulations or parameter estimations, performs analyses from this generated sequence, and finally generates a LaTeX/PDF report. The parameter estimation pipeline offers analyses of parameter profile likelihood and parameter correlation using samples from the computed estimates. Specific pipelines for scanning of one or two model parameters at the same time are also provided. Pipelines can run on multicore computers, Sun Grid Engine (SGE), or Load Sharing Facility (LSF) clusters, speeding up the processes of model building and simulation. SBpipe can execute models implemented in COPASI, Python or coded in any other programming language using Python as a wrapper module. Future support for other software simulators can be dynamically added without affecting the current implementation.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>SBpipe allows users to automatically repeat the tasks of model simulation and parameter estimation, and extract robustness information from these repeat sequences in a solid and consistent manner, facilitating model development and analysis. The source code and documentation of this project are freely available at the web site: <ext-link ext-link-type="uri" xlink:href="https://pdp10.github.io/sbpipe/">https://pdp10.github.io/sbpipe/</ext-link>.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12918-017-0423-3) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Pipeline</kwd>
      <kwd>Modelling</kwd>
      <kwd>Simulation</kwd>
      <kwd>Parameter estimation</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>BBSRC</institution>
        </funding-source>
        <award-id>BBS/E/B/000C0419</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2017</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The range of software tools developed by the Systems Biology community has grown considerably in the last few years, in particular aimed at supporting mathematical modelling of biological networks. The development of a mathematical model typically comprises successive phases: design, parameterisation, simulation and testing. Model design is the phase where the core of the problem to investigate is summarised using a mathematical formalism. Once designed, the model parameters need to be calibrated, for example using some experimental data. After this stage, the model is used for generating predictions which are then tested experimentally. Depending on the outcome, a model can be refined in order to improve or correct its prediction.</p>
    <p>Many tools already exist to generate, simulate and analyse mathematical models [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Although these tools provide modellers with key functionalities for model parameter estimation and simulation, it has become clear that the accuracy of these tasks depends on multiple repetitions. Furthermore, the analysis of this batch of repeats can reveal important insights regarding the model itself and the data used for calibration. Therefore, it is useful to repeat tasks such as parameter estimation or stochastic simulation, collect statistics and visualise these results.</p>
    <p>SBpipe is an open source software tool which provides modellers with a collection of pipelines for model development and simulation. A pipeline for parameter estimation allows users to repeat a model calibration many times on a multicore machine or a computer cluster. The generated fit sequence is then analysed, and information about the profile likelihood from parameter estimation samples is represented graphically and textually. Support for model simulation is also provided with pipelines for time course model simulation, as well as single and double parameter scans.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>SBpipe is an open source software package developed with the Python [<xref ref-type="bibr" rid="CR3">3</xref>] and R [<xref ref-type="bibr" rid="CR4">4</xref>] programming languages. Python is the main programming language connecting all the package components, whereas R is used for generating statistics and plots. The use of this statistics-dedicated programming language for analysing the results allows users to run the provided R scripts independently of SBpipe using an R environment. This can be convenient if further data analyses are needed or plots need to be annotated or edited.</p>
    <p>Pipelines in SBpipe are configured using YAML configuration files. This allows modellers to easily edit their tasks manually or programmatically if needed. Examples of configuration files can be found within the main package in the folder</p>
    <p>
tests/insulin_receptor/
</p>
    <p>In order to maintain a flexible and extendible design, SBpipe abstracts the concepts of simulator and pipeline. The class Simul is a generic simulator interface used by the pipelines in SBpipe. This mechanism uncouples pipelines from simulators which can therefore be configured in each pipeline configuration file. Currently, the available simulators are Copasi and Python. These simulators process models developed in COPASI [<xref ref-type="bibr" rid="CR5">5</xref>] and models coded in Python, respectively.</p>
    <p>SBpipe passes the report file name as an input argument to the latter. The Python program is then responsible for generating a report file containing the simulation (or parameter estimation) results. Python can also be used as a wrapper module for running models coded in any programming language. Rather than coding a model itself, the Python file can call an external program containing the model. This Python wrapper must forward the report file name to this external program which becomes responsible of generating the report file. With this simple approach, users can run their existing models using customised command options or any program library they need. The tests/ folder contains examples of models coded in R, Octave, or Java programming languages, and executed using basic Python module wrappers. The supplied R models depend on the packages minpack.lm, deSolve, and sde, whereas the supplied Java model requires a JVM. Dependencies for these additional models must be installed separately.</p>
    <p>The class Pipeline represents a generic pipeline, which is extended by each SBpipe pipeline. The following pipelines are currently available: 
<list list-type="bullet"><list-item><p>
simulate: deterministic or stochastic time course stimulation;</p></list-item><list-item><p>
single_param_scan: scan a model parameter;</p></list-item><list-item><p>
double_param_scan: scan two model parameters;</p></list-item><list-item><p>
param_estim: model parameter estimation including sampling of the parameter likelihood.</p></list-item></list>
</p>
    <p>An SBpipe pipeline performs three tasks: data generation, data analysis, and report generation. The first task loads and runs a simulator at runtime and organises the generated data. The second task computes statistics and plots from these data. Finally, the third task generates a LaTeX/PDF report containing the computed plots. Because of the interdependency between these tasks, their execution is sequential. However, users can select the tasks to run in the pipeline configuration file. A typical scenario requiring a task to be turned off would be the analysis of data previously generated data using different configuration thresholds. In this case, the data generation task can be disabled to prevent SBpipe from re-running the simulations.</p>
    <p>Pipelines for parameter estimation or stochastic model simulation can be computationally intensive. SBpipe allows users to generate repeats of model simulation or parameter estimation in parallel. In a configuration file, users can select the number of repeats, and whether the jobs should be executed locally using Python multiprocessing or in a computer cluster. In this case, SBpipe supports the cluster types Sun Grid Engine (SGE) and Load Sharing Facility (LSF).</p>
    <p>The project is available on the GitHub repository. Numerous test cases are also provided within the package. Every time the source code is updated online, these tests are automatically executed by Travis.CI, a GitHub application for continuous integration service. For standard users, these tests are useful examples of how to configure SBpipe. User and developer documentations for this project are available online and within the project folder.</p>
  </sec>
  <sec id="Sec3" sec-type="results">
    <title>Results</title>
    <p>To demonstrate SBPIPE functions we will use a minimal model of insulin receptor (IR). This IR model is a module of a more complex Insulin/TOR model [<xref ref-type="bibr" rid="CR6">6</xref>] (Biomodels database [<xref ref-type="bibr" rid="CR7">7</xref>] id: BIOMD0000000581). This choice enables users to quickly reproduce the results shown in this article using the SBpipe test suite and to present the results in the most compact manner. This model describes the activation of the insulin receptor upon insulin stimulation. In the presence of insulin, the insulin receptor beta (<italic>I</italic>
<italic>R</italic>
<italic>β</italic>) is phosphorylated on Y1164. The phosphorylated receptor is then dephosphorylated and enters in a refractory state. This latter state is used to introduce a delay in the system succintly representing receptor internalisation, degradation and synthesis, thus reducing the number of model parameters. Finally, from this refractory state the receptor can become functional again. Details of the model are provided in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1, Figure S1. The generic pipeline work flow is shown for the parameter estimation pipeline in Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">a</xref>. To illustrate how SBpipe can reveal parameter identifiability issues from multiple parameter estimations, two fit sequences are independently generated using sufficient and insufficient data sets (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Tables S2–S4). For each group, SBpipe generates <italic>N</italic>=1000 independent parameter estimations using Particle Swarm optimisation algorithm [<xref ref-type="bibr" rid="CR8">8</xref>] as implemented in COPASI. These calibrations are then processed in the data analysis task. Although SBpipe does not contain a pipeline for computing identifiability analysis directly, the parameter estimation pipeline can help identify issues in parameter estimation by projecting the estimates for each parameter. This analysis uses not only the best fit of each of the <italic>N</italic> estimations, but also the sub-optimal fits. As these fits represent samples of the parameter space, they can reveal a <italic>sampled profile likelihood estimation (PLE)</italic> for each estimated parameter. For direct methods calculating model parameter profile likelihoods using COPASI, see [<xref ref-type="bibr" rid="CR9">9</xref>] or <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/PyCoTools">https://pypi.python.org/pypi/PyCoTools</ext-link>.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Implemented pipelines in SBpipe. <bold>a</bold> Example of work flow using the parameter estimation pipeline. Parameter estimations were performed using data sets of different sizes. The <italic>Identifiable</italic> column shows the results using a data set sufficient for estimating the parameters with their confidence intervals, whereas the column <italic>Non-identifiable</italic> illustrates the results using the same model but a reduced data set, insufficient for identifying parameter values. Size of the fit sequence: N=1000. For the complete results generated by this pipeline, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Tables S2–S4, Figures S2–S8. <bold>b</bold> Deterministic and stochastic model time courses for the phosphorylated IR_beta species obtained with the model simulation pipeline. For stochastic simulations, mean (<italic>black</italic>), 95% confidence interval for the mean (<italic>cyan</italic>), and 1 standard deviation (<italic>light blue</italic>) are reported. Experimental data are added and indicated as red circles. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S9–S10. <bold>c</bold> Single parameter scan pipeline. The k1 parameter regulating the IR_beta phosphorylation was scanned within its 95% estimated confidence interval. The blue area is the results of 100 time course simulations over this interval. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S11–S12. <bold>d</bold> Double parameter scan pipeline. Signal intensities for the phosphorylated IR_beta receptor different levels of Insulin (<italic>x axis</italic>) and IR_beta receptor (<italic>y axis</italic>) at 1, 2, 5, and 10 minutes upon insulin stimulation. The colour representation indicates how the readout signal intensity varies upon two model parameter levels. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S13–S15. All the results can be replicated using the test files provided within the SBpipe package available online on the GitHub repository</p></caption><graphic xlink:href="12918_2017_423_Fig1_HTML" id="MO1"/></fig>
</p>
    <p>Results of estimation tasks using data sets presented in Table S2A and Table S2B are shown in the <italic>Identifiable</italic> or <italic>Non-identifiable</italic> columns of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, respectively. The <italic>Identifiable</italic> column shows how the parameter <italic>k</italic>1 presents clear confidence intervals at 66%, 95%, and 99% percents of confidence levels (CL). The <italic>Non-identifiable</italic> column shows how the same parameter is practically non-identifiable to the right of the confidence interval. Parameter distributions and correlations are also computed for the best fits, and for the fits with objective values lesser than a confidence level of 95%. For the complete results generated by this pipeline, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Tables S2–S4, Figures S2–S8.</p>
    <p>Results generated by the time-course simulation pipeline are shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">b</xref>. Deterministic and stochastic model simulations are illustrated for the phosphorylated state of the IR species. For deterministic simulation, time courses of model variables are simply plotted. For stochastic simulations, SBpipe can represent time courses with mean (black line), the 95% confidence intervals of the mean (cyan bars), and one standard deviation (blue bars). The second panel in Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">b</xref> show this plot using a sequence of 40 independent stochastic simulations. If available, data corresponding to model variables can easily be added to the plot by specifying the data set file name in the configuration file. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S9–S10.</p>
    <p>Figure <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">c</xref> shows the results from the single parameter scan pipeline. Simulations are ran with values of the parameter k1 within the 95% confidence interval as determined by the parameter estimation using the data with a sufficient number of data points. If needed, differential scales can also be configured in order to discriminate protein levels. This is particularly useful if a simulated protein knockdown (or overexpression) is investigated. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S11–S12.</p>
    <p>Results generated by the double parameter scan pipeline are shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>
<xref rid="Fig1" ref-type="fig">d</xref>. In this analysis two model parameters are scanned simultaneously and these data are reported for each time point separately. For instance, it can be useful for revealing combinatorial effects of two drugs affecting a timecourse. For the complete results, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figures S13–S15. An example of this analysis can be found in [<xref ref-type="bibr" rid="CR10">10</xref>], where it was applied for exploring the combination of mTOR and ROS treatments in a cellular senescence model.</p>
  </sec>
  <sec id="Sec4" sec-type="discussion">
    <title>Discussion</title>
    <p>SBpipe is a software tool which allows modellers to automatically repeat certain tasks in model development and analysis, such as parameter estimation and simulation, and obtain additional information about the robustness of the model. Its use should increase productivity and the confidence in the results obtained with the model.</p>
    <p>Parameter estimation from experimental data is a challenging task which can easily produce unreliable results due to local minima, parameter non-identifiability, or inadequate optimisation algorithm configuration. From the generation and analysis of a fit sequence, SBpipe can reveal crucial insights about a model structure, the reliability of each parameter, as well as indications about the sufficiency and quality of the experimental data used to calibrate the model. This knowledge is required for assessing whether parameters are well defined and the overall model predictions are reliable.</p>
    <p>Several software tools exist to automate aspects model building and simulation tasks, and a comprehensive review of these packages is beyond the scope of this article. Some of these comprehensive packages such as AMIGO2 [<xref ref-type="bibr" rid="CR11">11</xref>] and SBPOP [<xref ref-type="bibr" rid="CR12">12</xref>] rely on proprietary software (e.g. Matlab). Condor-COPASI [<xref ref-type="bibr" rid="CR13">13</xref>] is an example of open source alternative. This server-based software tool integrates COPASI with Condor, a high-throughput computing environment. It allows COPASI users to run and analyse models on a Condor pool. SBpipe distinguishes from Condor-COPASI for three main reasons: 1) although COPASI models are supported, users can run repeated model parameter estimations and simulations using any other software or programming library; 2) it is a client-based software tools and therefore it does not require cluster administration; 3) SBpipe can also run locally via multithreading, which is ideal for preliminary testing of the most suitable algorithms for parameter estimation and simulation, before starting intensive jobs on a cluster.</p>
    <p>SBpipe requires some familiarity with command line tools, although no programming skill is needed when COPASI models are used. Users only need to create a configuration file and run it using a simple command set. Users with a background in programming languages can also benefit from SBpipe functionalities using mathematical models coded with their preferred language if needed. In contrast to standard pipeline frameworks, SBpipe does not currently offer support for dependency management at coding level and reentrancy at execution level. The former is defined as a way to precisely define the dependency order of functions. The latter is the capacity of a program to continue from the last interrupted task. Although many pipeline frameworks are available for bioinformatics, the definition of a clear and spread standard specifying how pipelines can be configured is still limited in our opinion. In the future we hope to also use a pipeline framework as an additional way to run SBpipe tasks. Benefitting of dependency declaration and execution reentrancy would in particular be beneficial for running SBpipe on clusters or on the cloud.</p>
    <p>From an implementation standpoint, SBpipe design is sufficiently generic to permit rapid extension of new pipelines. With this solid but flexible design, SBpipe aims to encourage the development of pipelines for systems modelling into a single community activity.</p>
  </sec>
  <sec id="Sec5" sec-type="conclusion">
    <title>Conclusions</title>
    <p>SBpipe is a novel open source software that enables systems biology modellers to simulate models, scan and estimate model parameters in a large scale. Novel analyses from multiple repeats are also computed via publication quality plots and tables. This project permits to increase productivity and reliability in model building and simulation.</p>
  </sec>
  <sec id="Sec6">
    <title>Availability and requirements</title>
    <p><bold>Project name:</bold> SBpipe</p>
    <p><bold>Project home page:</bold> https://pdp10.github.io/sbpipe/</p>
    <p><bold>Operating system(s):</bold> Platform independent</p>
    <p><bold>Programming language:</bold> Python 2.7+ or 3.4+, R 3.3.0+</p>
    <p><bold>Other requirements:</bold> COPASI 4.19, TexLive 2013.</p>
    <p><bold>License:</bold> GNU LGPL v3</p>
  </sec>
</body>
<back>
  <app-group>
    <app id="App1">
      <sec id="Sec7">
        <title>Additional file</title>
        <p>
          <media position="anchor" xlink:href="12918_2017_423_MOESM1_ESM.pdf" id="MOESM1">
            <label>Additional file 1</label>
            <caption>
              <p><bold>Supporting information.</bold> Additional file containing supporting Tables S1–S4 and Figures S1–S15. (PDF 29,712 kb)</p>
            </caption>
          </media>
        </p>
      </sec>
    </app>
  </app-group>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CL</term>
        <def>
          <p>Confidence level</p>
        </def>
      </def-item>
      <def-item>
        <term>IR</term>
        <def>
          <p>Insulin receptor</p>
        </def>
      </def-item>
      <def-item>
        <term>LSF</term>
        <def>
          <p>Load sharing facility</p>
        </def>
      </def-item>
      <def-item>
        <term>PLE</term>
        <def>
          <p>Profile likehood estimation</p>
        </def>
      </def-item>
      <def-item>
        <term>SGE</term>
        <def>
          <p>Sun grid engine</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>We acknowledge Dr Lu Li, Dr An Nguyen, and Dr Pınar Pir for helpful feedback.</p>
    <sec id="d29e604">
      <title>Funding</title>
      <p>This work was funded by British BBSRC (BBS/E/B/000C0419).</p>
    </sec>
    <sec id="d29e609">
      <title>Authors’ contributions</title>
      <p>PDP and NLN conceived and designed the project; PDP implemented the software. PDP and NLN wrote the manuscript. Both authors read and approved the final manuscript.</p>
    </sec>
    <sec id="d29e614">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e619">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e624">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e629">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ghosh</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Matsuoka</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Asai</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hsin</surname>
            <given-names>KY</given-names>
          </name>
          <name>
            <surname>Kitano</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Software for systems biology: from tools to integrated platforms</article-title>
        <source>Nat Rev Genet</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>821</fpage>
        <lpage>32</lpage>
        <?supplied-pmid 22048662?>
        <pub-id pub-id-type="pmid">22048662</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Quantitative and logic modelling of molecular and gene networks</article-title>
        <source>Nat Rev Genet</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>146</fpage>
        <lpage>58</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3885</pub-id>
        <?supplied-pmid 25645874?>
        <pub-id pub-id-type="pmid">25645874</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>van Rossum</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>Python tutorial, Technical Report CS-R9526</source>
        <year>1995</year>
        <publisher-loc>Amsterdam</publisher-loc>
        <publisher-name>Centrum voor Wiskunde en Informatica (CWI)</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <mixed-citation publication-type="other">R Development Core Team. R: A Language and Environment for Statistical Computing: Vienna; 2008. ISBN 3-900051-07-0.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simus</surname>
            <given-names>N</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>COPASI - a COmplex PAthway SImulator</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <?supplied-pmid 17032683?>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dalle Pezze</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Sonntag</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thien</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Prentzell</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gödel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fischer</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A Dynamic Network Model of mTOR Signaling Reveals TSC-Independent mTORC2 Regulation</article-title>
        <source>Sci Signal</source>
        <year>2012</year>
        <volume>5</volume>
        <issue>217</issue>
        <fpage>ra25</fpage>
        <pub-id pub-id-type="doi">10.1126/scisignal.2002469</pub-id>
        <?supplied-pmid 22457331?>
        <pub-id pub-id-type="pmid">22457331</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Bornstein</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Broicher</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Courtot</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Donizelli</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dharuri</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioModels Database: a free, centralized database of curated, published, quantitative kinetic models of biochemical and cellular systems</article-title>
        <source>Nucleic Acids Res</source>
        <year>2006</year>
        <volume>34</volume>
        <issue>Database issue</issue>
        <fpage>D689</fpage>
        <lpage>91</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkj092</pub-id>
        <?supplied-pmid 16381960?>
        <pub-id pub-id-type="pmid">16381960</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Kennedy</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Eberhart</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Particle Swarm Optimization</article-title>
        <source>Proceedings of the Fourth IEEE International Conference on Neural Networks (Perth, Australia)</source>
        <year>1995</year>
        <publisher-loc>Perth</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schaber</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Easy parameter identifiability analysis with COPASI</article-title>
        <source>Biosystems</source>
        <year>2012</year>
        <volume>110</volume>
        <issue>3</issue>
        <fpage>183</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2012.09.003</pub-id>
        <?supplied-pmid 23041463?>
        <pub-id pub-id-type="pmid">23041463</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dalle Pezze</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Nelson</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Otten</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Korolchuk</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Kirkwood</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>von Zglinicki</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Dynamic Modelling of Pathways to Cellular Senescence Reveals Strategies for Targeted Interventions</article-title>
        <source>PLOS Comput Biol</source>
        <year>2014</year>
        <volume>10</volume>
        <issue>8</issue>
        <fpage>1</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1003728</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Balsa-Canto</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Henriques</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gábor</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Banga</surname>
            <given-names>JR</given-names>
          </name>
        </person-group>
        <article-title>AMIGO2, a toolbox for dynamic modeling, optimization and control in systems biology</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>21</issue>
        <fpage>3357</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw411</pub-id>
        <?supplied-pmid 27378288?>
        <pub-id pub-id-type="pmid">27378288</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schmidt</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jirstrand</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systems Biology Toolbox for MATLAB: a computational platform for research in systems biology</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>4</issue>
        <fpage>514</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti799</pub-id>
        <?supplied-pmid 16317076?>
        <pub-id pub-id-type="pmid">16317076</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Kent E, Hoops S, Mendes P. Condor-COPASI: high-throughput computing for biochemical networks. BMC Syst Biol. 2012;6(91). <ext-link ext-link-type="uri" xlink:href="http://bmcsystbiol.biomedcentral.com/articles/10.1186/1752-0509-6-91">http://bmcsystbiol.biomedcentral.com/articles/10.1186/1752-0509-6-91</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

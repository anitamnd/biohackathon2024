<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2752623</article-id>
    <article-id pub-id-type="pmid">19675096</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btp486</article-id>
    <article-id pub-id-type="publisher-id">btp486</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group>
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PerM: efficient mapping of short sequencing reads with periodic full sensitive spaced seeds</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Chen</surname>
          <given-names>Yangho</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Souaiaia</surname>
          <given-names>Tade</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chen</surname>
          <given-names>Ting</given-names>
        </name>
        <xref ref-type="corresp" rid="COR1">
          <sup>*</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff>Program in Computational Biology and Bioinformatics, University of Southern California, 1050 Childs Way, Los Angeles, CA 90089-2910, USA</aff>
    <author-notes>
      <corresp id="COR1"><sup>*</sup>To whom correspondence should be addressed.</corresp>
      <fn>
        <p>Associate Editor: Joaquin Dopazo</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>1</day>
      <month>10</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>8</month>
      <year>2009</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>8</month>
      <year>2009</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>25</volume>
    <issue>19</issue>
    <fpage>2514</fpage>
    <lpage>2521</lpage>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>5</month>
        <year>2009</year>
      </date>
      <date date-type="rev-recd">
        <day>18</day>
        <month>7</month>
        <year>2009</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>8</month>
        <year>2009</year>
      </date>
    </history>
    <permissions>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">http://creativecommons.org/licenses/by-nc/2.0/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> The explosion of next-generation sequencing data has spawned the design of new algorithms and software tools to provide efficient mapping for different read lengths and sequencing technologies. In particular, ABI's sequencer (SOLiD system) poses a big computational challenge with its capacity to produce very large amounts of data, and its unique strategy of encoding sequence data into color signals.</p>
      <p><bold>Results:</bold> We present the mapping software, named PerM (Periodic Seed Mapping) that uses periodic spaced seeds to significantly improve mapping efficiency for large reference genomes when compared with state-of-the-art programs. The data structure in PerM requires only 4.5 bytes per base to index the human genome, allowing entire genomes to be loaded to memory, while multiple processors simultaneously map reads to the reference. Weight maximized periodic seeds offer full sensitivity for up to three mismatches and high sensitivity for four and five mismatches while minimizing the number random hits per query, significantly speeding up the running time. Such sensitivity makes PerM a valuable mapping tool for SOLiD and Solexa reads.</p>
      <p>
        <bold>Availability:</bold>
        <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/perm/">http://code.google.com/p/perm/</ext-link>
      </p>
      <p>
        <bold>Contact:</bold>
        <email>tingchen@usc.edu</email>
      </p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp486/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>1 INTRODUCTION</title>
    <p>Next-generation sequencing technology has created the need for highly efficient methods to align short DNA reads (Shendure and Ji, <xref ref-type="bibr" rid="B32">2008</xref>). Current technologies (Ronaghi <italic>et al.</italic>, <xref ref-type="bibr" rid="B30">1998</xref>), e.g. the Illumina and SOLiD platforms, are capable of generating hundreds of millions of short reads in a single run (Applied Biosystems, <xref ref-type="bibr" rid="B2">2008a</xref>; Bennett, <xref ref-type="bibr" rid="B5">2004</xref>). These breakthroughs have led to many important biological applications, including the identification of transcription factor binding sites (Chip-Seq; Mardis, <xref ref-type="bibr" rid="B23">2007</xref>), estimation of RNA expression levels (RNA-Seq; Marioni <italic>et al.</italic>, <xref ref-type="bibr" rid="B24">2008</xref>) and SNP calling (Quinlan <italic>et al.</italic>, <xref ref-type="bibr" rid="B29">2008</xref>).</p>
    <p>Applied Biosystems ligation-mediated SOLiD sequencer has the unique property of collecting color signals for the transitions between nucleotides. Each single nucleotide polymorphism changes two transitions (i.e. consecutive colors), providing a large advantage in the detection of SNPs because only a fraction of color changes represent possible SNPs (Applied Biosystems, <xref ref-type="bibr" rid="B2">2008a</xref>) and single color discrepancies can be regarded as sequencing errors. While this unique encoding results in base accuracy as high as 99.94% (Applied Biosystems, <xref ref-type="bibr" rid="B2">2008a</xref>), it also requires algorithms capable of finding alignments with less similarity than those designed for sequencers such as Solexa which output signals directly from nucleotides.</p>
    <p>Most read mapping programs are designed to be full sensitive to ‘<italic>k</italic>’ mismatches, meaning all alignments within <italic>k</italic> mismatches will be reported. Original alignment tools such as BLAST (Altschul <italic>et al.</italic>, <xref ref-type="bibr" rid="B1">1990</xref>) and BLAT (Kent, <xref ref-type="bibr" rid="B11">2002</xref>), are capable of finding highly sensitive alignments for long reads, but do not provide full sensitivity to specific numbers of mismatches and are incapable of efficiently mapping the amount of reads currently produced by short-read sequencing machines. Many mapping programs have been designed to handle large amounts of short reads, including ELAND (Anthony. J. Cox, 2006, unpublished data), MAQ (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B17">2008</xref>), ZOOM (Lin <italic>et al.</italic>, <xref ref-type="bibr" rid="B16">2008</xref>), RMAP (Smith <italic>et al.</italic>, <xref ref-type="bibr" rid="B33">2008</xref>) and SeqMap (Jiang and Wong, <xref ref-type="bibr" rid="B10">2008</xref>), which preprocess and index read sets and then scan the reference for potential matches. Programs including SOAP (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B19">2008</xref>), Pass (Campagna <italic>et al.</italic>, <xref ref-type="bibr" rid="B8">2009</xref>), MOM (Eaves and Gao, <xref ref-type="bibr" rid="B9">2009</xref>), ProbMatch (Kim <italic>et al.</italic>, <xref ref-type="bibr" rid="B12">2009</xref>), SXOligoSearch (Malaysian Genomics Resource Center, <xref ref-type="bibr" rid="B22">2009</xref>), Mosaik (The MarthLab, <xref ref-type="bibr" rid="B35">2009</xref>), BWA (Li and Durbin, <xref ref-type="bibr" rid="B15">2009</xref>) and Bowtie (Langmead <italic>et al.</italic>, <xref ref-type="bibr" rid="B14">2009</xref>) preprocess and index the reference and then search for potential matches among the reads.</p>
    <p>In many SOLiD datasets (Ondov <italic>et al.</italic>, <xref ref-type="bibr" rid="B28">2008</xref>, <xref ref-type="sec" rid="SEC3.3">Section 3.3</xref>), more than half of the sequenced reads will not align to the reference with fewer than three mismatches. For this reason, programs designed specifically for SOLiD data, including the Corona Lite pipeline (Applied Biosystems, <xref ref-type="bibr" rid="B4">2008c</xref>) and SOCS (Ondov <italic>et al.</italic>, <xref ref-type="bibr" rid="B28">2008</xref>), provide full sensitivity to alignments including three or more mismatches. Such sensitivity usually comes at a cost; the shorter subsequences used to provide full sensitivity to high numbers of mismatches also slow mapping such that genome-scale mapping may not be possible.</p>
    <p>PerM (Periodic Seed Mapping) ameliorates these difficulties through the design of periodic spaced seeds to maximize efficiency for many distance measures, including those specific to the location of polymorphism in color space. For example, rather than accepting the slower performance associated with sensitivity to multiple mismatches, we introduce a faster method which provides full sensitivity to one potential SNP locus (consecutive mismatches) and a free color error. Periodic seeds allow PerM to maximize efficiency while maintaining full sensitivity for up to three mismatches with about 88% and 67% partial sensitivity for four and five mismatches (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp486/DC1">Supplementary section 3</ext-link>)</p>
    <p>Most read-mapping programs use the idea of ‘seeds’ for preprocessing and matching (Myers, <xref ref-type="bibr" rid="B25">1999</xref>). A seed is a set of selected positions within a window which generates fixed length subsequences when slid along a string. When a seed is aligned to a read or a genomic sequence, selected positions are concatenated to form a fixed length subsequence which can be used to extract similar reads or genomic substrings. These subsequences are used for filtering: only when a read and a genomic substring share the same subsequence will a ‘hit’ be declared and further examination be carried out to determine the actual similarity level. When subsequences are short, the seed is said to have ‘low weight’ and the probability of subsequences matching by chance becomes greater. For large genomes and datasets, these ‘random hits’ will often be the bottleneck of the running time.</p>
    <p>The most widely used short-read mapping algorithm, implemented in many programs including ELAND, MAQ (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B17">2008</xref>), SOAP (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B19">2008</xref>), Corona Lite (Applied Biosystems, <xref ref-type="bibr" rid="B4">2008c</xref>) and SOCS (Ondov <italic>et al.</italic>, <xref ref-type="bibr" rid="B28">2008</xref>) divides each read into <italic>k</italic>+<italic>m</italic> fragments to provide full sensitivity to <italic>k</italic> mismatches. Then <inline-formula><inline-graphic xlink:href="btp486i1.jpg"/></inline-formula> hashing steps are used to check for exact matches in the different combinations of <italic>m</italic> fragments. If a read aligns to the reference with <italic>k</italic> or fewer mismatches then one of the <inline-formula><inline-graphic xlink:href="btp486i2.jpg"/></inline-formula> subsequences will match exactly. The larger the value chosen for <italic>m</italic>, the greater the seed weight, but more index tables and hashing steps are required. For example, Corona Lite (Applied Biosystems, <xref ref-type="bibr" rid="B4">2008c</xref>) chooses <italic>m</italic>=3, while SOCS (Ondov <italic>et al.</italic>, <xref ref-type="bibr" rid="B28">2008</xref>) chooses <italic>m</italic>=1. However, the most common choice is <italic>m</italic>=2, used by ELAND, MAQ (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B17">2008</xref>) and SOAP (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B19">2008</xref>). This method is displayed in <xref ref-type="fig" rid="F1">Figure 1</xref>. The read is divided into four equal size fragments, resulting in the hashing of six substring pairs for each read. These six pairs of substrings are encompassed into three seeds which can be used to preprocess the genome or the set of reads into three index tables.
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>Conventional seeds used by ELAND, SOAP and MAQ divide a 32 bp read into four substrings. For any alignment within two mismatches, at least one of six pairs of substrings will match exactly. This method requires three hash tables and six lookups for each read and direction (forward or reverse complement).</p></caption><graphic xlink:href="btp486f1"/></fig>
</p>
    <p>Instead of using seeds composed of equal-sized substrings, our method is based on idea of the spaced seed proposed by Burkhardt and Karkkainen (<xref ref-type="bibr" rid="B7">2001</xref>), Ma <italic>et al.</italic> (<xref ref-type="bibr" rid="B21">2002</xref>) in PatternHunter and Kucherov <italic>et al.</italic> (<xref ref-type="bibr" rid="B13">2005</xref>). A spaced seed is a set of ‘care’ and ‘don't care’ positions, annotated as ‘1’s and ‘*'s, respectively. For example, PatternHunter suggested 111*1**1*1**11*111 as a good spaced seed with weight (number of ‘care’ positions) 11. Mathematical results (Buhler <italic>et al.</italic>, <xref ref-type="bibr" rid="B6">2003</xref>; Xu <italic>et al.</italic>, <xref ref-type="bibr" rid="B36">2006</xref>) have shown that spaced seeds are more sensitive than consecutive seeds (those without ‘don't care’ positions) in finding local similarities between two strings. Kucherov <italic>et al.</italic> (<xref ref-type="bibr" rid="B13">2005</xref>) attempted to minimize the number of multiple spaced seeds necessary to achieve different levels of sensitivity. Lin <italic>et al.</italic> (<xref ref-type="bibr" rid="B16">2008</xref>) used multiple spaced seeds for short-read mapping and provided bounds for the number of lookups necessary to achieve full sensitivity for varying seed lengths and weights. They showed that for a 32 bp read, seeds with the weight of 16 require at least six lookups to obtain full sensitivity for two mismatches. They implemented this idea into a program, called ZOOM (Lin <italic>et al.</italic>, <xref ref-type="bibr" rid="B16">2008</xref>).</p>
    <p>SHRiMP (Rumble <italic>et al.</italic>, <xref ref-type="bibr" rid="B31">2009</xref>) also uses spaced seeds to find hits, however, they find alignments with InDels as well as mismatches which requires significantly longer running time.</p>
    <p>PerM uses single periodic weight-maximized spaced seeds. An example, shown in <xref ref-type="fig" rid="F2">Figure 2</xref>, is composed of four repeating patterns of (111*1**) whose length is seven and is full sensitive to two mismatches. When this seed is applied to a 32 bp read, it generates seven subsequences, one of which will match any string within two mismatches of the read. It should be noticed that the length of the repeating pattern (seven in the example) is equal to the number of subsequences generated.
<fig id="F2" position="float"><label>Fig. 2.</label><caption><p>The single periodic spaced seed full sensitive to two mismatches over a 32 bp read. For any alignment within two mismatches, at least one out of the seven subsequences will match exactly. This seed is composed of repeating the pattern (111*1**).</p></caption><graphic xlink:href="btp486f2"/></fig>
</p>
    <p>In <xref ref-type="sec" rid="SEC2">Section 2</xref>, we describe how PerM's periodic seeds allow to increase mapping efficiency and sensitivity when compared with the conventional consecutive seeds used by many other programs.</p>
  </sec>
  <sec sec-type="methods" id="SEC2">
    <title>2 METHODS</title>
    <sec id="SEC2.1">
      <title>2.1 Seed notation</title>
      <p>
        <list list-type="simple">
          <list-item>
            <p><italic>C</italic><sub><italic>k</italic></sub>: the conventional seed family which divides reads into <italic>k</italic>+2 fragments (used in ELAND, MAQ and SOAP) to provide full sensitivity to <italic>k</italic> mismatches.</p>
          </list-item>
          <list-item>
            <p><italic>F</italic><sub><italic>k</italic></sub>: the maximum-weight periodic spaced seed family which is full sensitive to <italic>k</italic> mismatches.</p>
          </list-item>
          <list-item>
            <p><italic>S</italic><sub><italic>x</italic>,<italic>k</italic></sub>: the special weight maximized periodic seed family for mapping SOLiD reads, full sensitive to <italic>x</italic> SNP candidates (consecutive mismatches) and <italic>k</italic> free mismatches.</p>
          </list-item>
        </list>
      </p>
    </sec>
    <sec id="SEC2.2">
      <title>2.2 Motivation for periodic design</title>
      <p>For any full sensitive seed family, there exists two performance criteria, memory load and running time. Memory load is directly related to the number of index tables required to be built during preprocessing. PerM's single periodic seeds store a single index for each locus, requiring only 4.5 bytes per base to index the entire genome. Running time is dependent linearly on the number of queries or slides required of a seed but can be influenced exponentially by the seed weight (number of ‘care’ positions). Specifically, periodic seeds that are composed of repeating patterns of length |<italic>P</italic>| will generate, for each read, |<italic>P</italic>| subsequences of weight <italic>w</italic> for query, where <italic>w</italic> is the seed weight. An approximation for the expected number of random hits per read is 2|<italic>G</italic>‖<italic>P</italic>|/4<sup><italic>w</italic></sup>, where |<italic>G</italic>| is the length of the genome and the number 2 is necessary for the forward and reverse compliment.</p>
      <p>For large-scale genome projects, if the seed weight is not sufficiently large, the number of random hits will grow by a factor of four each time the weight is decreased by one. Thus, we make as our goal the design of single high weight periodic seeds with moderate pattern lengths. <xref ref-type="sec" rid="SEC2.3">Sections 2.3</xref>–<xref ref-type="sec" rid="SEC2.4">2.4</xref> describe how the use of periodic seeds provides a generalizable framework to quickly develop high-performing maximum weight seeds for a variety of distance measures.</p>
    </sec>
    <sec id="SEC2.3">
      <title>2.3 Periodic seeds: generalization, indexing and extendability</title>
      <sec id="SEC2.3.1">
        <title>2.3.1 Generalization for different read lengths</title>
        <p>That the full sensitive periodic seeds generalize to all lengths is a function of their repeating pattern. For example, sliding the following seed (length 28) six times generates seven subsequences that provide full sensitivity to two mismatches for a 34 bp read.
<disp-quote><p>(111*1**)(111*1**)(111*1**)(111*1**)</p></disp-quote>
By the definition of full sensitivity, all pairs of positions <italic>i</italic> and <italic>j</italic> will be covered pairwise with ‘don't care’ (*) positions in at least one of the slides. Ignoring boundary effects, we can examine the internal read positions 8–14 in <xref ref-type="table" rid="T1">Table 1</xref>, when the above spaced seed is applied (Slide 0) and slid six times (Slides 1–6). In total, each of the <inline-formula><inline-graphic xlink:href="btp486i3.jpg"/></inline-formula> pairs of positions is covered pairwise with ‘*’ exactly once. Therefore, this pattern is locally optimal, providing local full sensitivity to two mismatches.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>The periodic spaced seed, applied to a read and slid through positions 8–14 six times, covers all the 21 pair of positions exactly once</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Positions</th><th align="left" rowspan="1" colspan="1">8</th><th align="left" rowspan="1" colspan="1">9</th><th align="left" rowspan="1" colspan="1">10</th><th align="left" rowspan="1" colspan="1">11</th><th align="left" rowspan="1" colspan="1">12</th><th align="left" rowspan="1" colspan="1">13</th><th align="left" rowspan="1" colspan="1">14</th><th align="left" rowspan="1" colspan="1">Covering 21 pairs of positions</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">Slide 0</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">(11, 13) (11, 14) (13, 14)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">(8, 12) (8, 14) (12, 14)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 2</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">(8, 9) (8, 13) (9, 13)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 3</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">(9, 10) (9, 14) (10, 14)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 4</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">(8, 10) (8, 11) (10, 11)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 5</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">(9, 11) (9, 12) (11, 12)</td></tr><tr><td align="left" rowspan="1" colspan="1">Slide 6</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">*</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">(10, 12) (10, 13) (12, 13)</td></tr></tbody></table></table-wrap>
</p>
        <p>In fact, local full sensitivity of this pattern implies global full sensitivity of the periodic spaced seed because every position in the read shares a similar relationship with some position within 8–14. Formally, for any read position <italic>i</italic> (excluding the boundaries of the reads), there exists a position <italic>j</italic>, 8≤<italic>j</italic>≤14, where <italic>i</italic> mod 7=<italic>j</italic> mod 7, such that when <italic>j</italic> is aligned to ‘*’, so is <italic>i</italic>. Thus, if every pair of positions within a pattern are covered pairwise with ‘*’ in some slides then every pair of positions within the read is covered pairwise with ‘*’ at some slides. Note that this property is also applied to the boundary positions which are more often aligned to ‘*’.</p>
        <p>This pattern of length seven can be generalized to produce the periodic spaced seeds for any read length, e.g. read lengths of 25 and 36 as follows:
<disp-quote><p>111*1**)(111*1**)(111*1), (111*1**)(111*1**)(111*1**)(111*1**)11.</p></disp-quote>
This generalizability of repeating patterns in periodic seeds holds not just for two mismatches but for all <italic>k</italic> mismatches, listed as a lemma in the work of Kucherov <italic>et al.</italic> (<xref ref-type="bibr" rid="B13">2005</xref>). Most importantly, generalizability drastically simplifies the seed-design algorithm and provides the framework for variable seed extension, which provides a significant increase in seed weight while maintaining a single index table.</p>
      </sec>
      <sec id="SEC2.3.2">
        <title>2.3.2 Efficient indexing to allow seed extension</title>
        <p>To achieve full sensitivity a periodic seed will slide |<italic>P</italic>| − 1 times and generate |<italic>P</italic>| subsequences on a read. As shown in <xref ref-type="fig" rid="F2">Figure 2</xref>, this is accomplished by keeping open the last |<italic>P</italic>| − 1 positions at the end of the read. However, as periodic seeds maintain full sensitivity when generalized, these empty positions are not required. This is shown with a different example in <xref ref-type="fig" rid="F4">Figure 4</xref>, each slide seeds can be extended to the end of the read so that all but the last are likely to have increased seed weight. In the example shown in <xref ref-type="fig" rid="F4">Figure 4</xref>, seed extension results in weight increasing from the minimum of 14 to between 14 and 19 which corresponding to an approximately five times faster mapping performance for the whole human genome.</p>
        <p>To take the advantage of the extended seed weight without additional requirements to memory, PerM combines hashing with the binary search. Our special data structure consists of a hash table which stores pointers to the starting position of each bucket in an index table which stores the addresses of reads or the genome locations. In the example shown in <xref ref-type="fig" rid="F4">Figure 4</xref>, we preprocess a genome using the maximum weight seed with <italic>W</italic> = 19 to generate one subsequence for every position in the genome. The prefix of each subsequence (e.g. the first 14 bases) is used to hash the location into a bucket in the index table. Inside each bucket, multiple subsequences with the same prefix are sorted lexicographically and stored in the index table. Note that within each bucket, we can search for exact matches of variable-length strings using the binary search. Then, we apply the extended variable-weight seeds to each read to generate variable-length subsequences, and use the extended bases after 14 to find the exact matches using the binary search in the index table. This method results in seed weight which varies from 14 to 19 in the example shown in <xref ref-type="fig" rid="F4">Figure 4</xref>.</p>
      </sec>
    </sec>
    <sec id="SEC2.4">
      <title>2.4 Seed-search algorithm</title>
      <p>The weight of periodic spaced seeds can be optimized by calculating the maximum-weight patterns of length |<italic>P</italic>| which achieve full sensitivity to some distance measure. The small search space allows us to easily enumerate all reasonable size patterns of length |<italic>P</italic>| to find which has maximum weight. <xref ref-type="table" rid="T2">Table 2</xref> lists the maximum weights of the optimal patterns found for various number of consecutive color mismatches (<italic>x</italic>) and single mismatches (<italic>k</italic>) for various pattern lengths |<italic>P</italic>|=6,…, 15.
<table-wrap id="T2" position="float"><label>Table 2.</label><caption><p>The maximum weights of patterns that are full sensitivity to <italic>x</italic> SNPs and <italic>k</italic> free mismatches</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Sensitivity threshold</th><th align="center" colspan="10" rowspan="1">Periodic pattern length |<italic>P</italic>|<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">6</th><th align="left" rowspan="1" colspan="1">7</th><th align="left" rowspan="1" colspan="1">8</th><th align="left" rowspan="1" colspan="1">9</th><th align="left" rowspan="1" colspan="1">10</th><th align="left" rowspan="1" colspan="1">11</th><th align="left" rowspan="1" colspan="1">12</th><th align="left" rowspan="1" colspan="1">13</th><th align="left" rowspan="1" colspan="1">14</th><th align="left" rowspan="1" colspan="1">15</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1"><italic>k</italic> = 2</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">7</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">9</td><td align="left" rowspan="1" colspan="1">9</td><td align="left" rowspan="1" colspan="1">10</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>x</italic> = 1, <italic>k</italic> = 1</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">7</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">8</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>k</italic> = 3</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">7</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>x</italic> =2, <italic>k</italic> = 0</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">7</td><td align="left" rowspan="1" colspan="1">8</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>k</italic> = 4</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">5</td></tr></tbody></table></table-wrap>
</p>
      <p>For any fixed values of <italic>k</italic> and <italic>x</italic>, the design of periodic space seeds has to consider which pattern length provides the best seed. Notice that a longer pattern provides a greater weight/length ratio asymptotically, but the relationship is not monotonic, as shown in the curve for <italic>k</italic> = 2 in <xref ref-type="fig" rid="F3">Figure 3</xref>. On the other hand, longer pattern lengths will increase the number of required queries, so our seed design considers the shortest pattern whose weight to length ratio is large enough to provide a tolerable number of random hits. In the case of two mismatches, local optima occur at |<italic>P</italic>| = 7 and |<italic>P</italic>| = 13, which provide ratios of 4/7 and 9/13, respectively. Here, we choose the pattern with |<italic>P</italic>|=7 because it requires six fewer queries per read. This pattern is used to design <italic>F</italic><sub>2</sub>, which is shown in <xref ref-type="fig" rid="F2">Figure 2</xref>, generating seven queries when applied to a 32 bp read. We prove that the <italic>F</italic><sub>2</sub> seed is the maximum weight spaced seed for seven lookups in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp486/DC1">Supplementary Material</ext-link>. This proof agrees with the results shown by Kucherov <italic>et al.</italic>, (<xref ref-type="bibr" rid="B13">2005</xref>), that for moderate read lengths, optimal seeds are usually periodic. This method is also used to design <italic>F</italic><sub>3</sub>, <italic>F</italic><sub>4</sub> and the SOLiD-specific family of seeds <italic>S</italic><sub><italic>x</italic>,<italic>k</italic></sub>.
<fig id="F3" position="float"><label>Fig. 3.</label><caption><p>This figure shows the optimal weight–length ratios for different pattern lengths.</p></caption><graphic xlink:href="btp486f3"/></fig>
</p>
    </sec>
    <sec id="SEC2.5">
      <title>2.5 Implementation and bitwise encoding</title>
      <sec id="SEC2.5.1">
        <title>2.5.1 Quality scores and paired end reads</title>
        <p>If reads include a corresponding quality score, file PerM will evaluate mappings by their alignment scores according to the quality score of each base. PerM can also filter out poor quality reads before mapping. If paired end reads and bounds for their separation distance are given as input, PerM will output both the best alignments within and beyond the separation bounds. Each alignment will be stored in a separate file.</p>
      </sec>
      <sec id="SEC2.5.2">
        <title>2.5.2 Base to color encoding</title>
        <p>PerM encodes each read into two 64 bit words with two bits for each base, that is, A = (0,0), C = (0, 1), G = (1,0) and T = (1,1). We adopt RMAP's method (Smith <italic>et al.</italic>, <xref ref-type="bibr" rid="B33">2008</xref>) to encode these two bits separately in two words. Similarly, each base on the reference genome is encoded three bits, with the third bit indicating whether the locus is masked as character <italic>N</italic>. This encoding method enables us to quickly check the number of mismatches between two bit-strings, using two ‘XOR’ and one ‘OR’ bitwise operations.</p>
        <p>For SOLiD reads, the color signals are also encoded in a similar way, with Blue = (0,0), Green = (0,1), Yellow = (1,0) and Red = (1,1). This encoding enables a quick translation of encoded base to encoded color signals by using bitwise operations of ‘SHIFT’ and ‘XOR’. In the example shown in <xref ref-type="fig" rid="F5">Figure 5</xref>, a five-base read ‘ATGGA’ is encoded as two binary strings, U = (01110) and V = (01001). The color signals of this read, ‘Red Green Blue Yellow’ encoded as U<sup>′</sup> = (1001) and V<sup>′</sup> = (1100), can be obtained by U<sup>′</sup> = U XOR (U SHIFT 1) and V<sup>′</sup> = V XOR (V SHIFT 1). This allows the reference genome to be saved as an encoded string of bases, while the corresponding color spaced encoding can be read out in few bitwise operations.
<fig id="F4" position="float"><label>Fig. 4.</label><caption><p>This figure shows the extension of periodic spaced seed <italic>S</italic><sub>1,1</sub>, composed of the repeating pattern (1111**1***), to multiple variable-weight spaced seeds that are applied to a 34-color SOLiD reads where 0, 1, 2 and 3 represent the four colors. The original seed is shown in the black boxes, and the extended variable-weight seeds are highlighted at the tail by the dashed boxes. The weight <italic>w</italic> is shown at the beginning for each extended seeds</p></caption><graphic xlink:href="btp486f4"/></fig>
<fig id="F5" position="float"><label>Fig. 5.</label><caption><p>Dinucleotide colors signals encoded from the base encoding.</p></caption><graphic xlink:href="btp486f5"/></fig>
</p>
      </sec>
      <sec id="SEC2.5.3">
        <title>2.5.3 Color mutations for SNPs</title>
        <p>Applied Biosystems lists rules (Applied Biosystems, <xref ref-type="bibr" rid="B3">2008b</xref>) to check whether two consecutive mismatches are valid in their indication a base substitution (SNP). Only one-third of possible combinations of consecutive color mismatches are valid for a base substitution. For example, if ‘AATAA’ is encoded into the colors ‘BRRB’ and mapped to ‘BBBB’ the reference may have resulted from ‘AAAAA’ meaning a SNP from ‘A’⇔‘T’ causing two identical color mismatches, Blue ⇔ Red. However, if ‘BRRB’ is mapped to ‘BBGB’, a SNP cannot be present because the nucleotide sequence which corresponds to ‘BBGB’ is ‘AAACC’. Instead, this is likely the result of two color sequencing errors. For ease of explanation, the combinations of consecutive mismatches are classified into three types:
<list list-type="bullet"><list-item><p>Type I: Blue ⇔ Red or Green ⇔ Yellow</p></list-item><list-item><p>Type II: Blue ⇔ Green or Red ⇔ Yellow</p></list-item><list-item><p>Type III: Blue ⇔ Yellow or Green ⇔ Red</p></list-item></list>
</p>
        <p>Only when both color mismatches are of the same type, does it indicate a valid SNP. These three types of consecutive mismatches correspond to the three classes of base substitutions, (i) Transversion I [A ⇔ T or G ⇔ C]; (ii) Transversion II [A ⇔ C or G ⇔ T]; (iii) Transition, respectively.</p>
        <p>The validation of SNP candidates is simple given our encoding method. Given two colors, one encoded into two bits B1 and B2, and the other into two bits b1 and b2, the three types of SNPs can be determined by the following bitwise operations:
<list list-type="bullet"><list-item><p>Type I: iff (B1 XOR b1) AND (B2 XOR b2) = 1</p></list-item><list-item><p>Type II: iff (NOT (B1 XOR b1)) AND (B2 XOR b2) = 1</p></list-item><list-item><p>Type III: iff (B1 XOR b1) AND (NOT (B2 XOR b2)) = 1</p></list-item></list>
</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>3 RESULTS</title>
    <sec id="SEC3.1">
      <title>3.1 Results of seed design</title>
      <p>As shown in the experimental results, the periodic spaced seeds used in PerM outperform the seeds used in MAQ in terms of mapping speed and sensitivity for both Illumina and SOLiD data. <xref ref-type="table" rid="T3">Table 3</xref> displays our fixed weight periodic spaced seeds generalized to 34-color SOLiD reads. <italic>F</italic><sub><italic>k</italic></sub> denotes a seed full sensitive to <italic>k</italic> mismatches, while <italic>S</italic><sub><italic>x</italic>,<italic>k</italic></sub> denotes a SOLiD-specific seed full sensitive to <italic>x</italic> consecutive color mismatches (SNPs) and <italic>k</italic> free color mismatches.
<table-wrap id="T3" position="float"><label>Table 3.</label><caption><p>PerM's single periodic spaced seeds for SOLiD 34-color reads</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Seed name</th><th align="left" rowspan="1" colspan="1">Seed patterns parenthesized according to their repeats</th><th align="left" rowspan="1" colspan="1">Seed weight</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>2</sub></td><td align="left" rowspan="1" colspan="1">(111*1**)(111*1**)(111*1**)(111*1**)</td><td align="left" rowspan="1" colspan="1">16</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>1,1</sub></td><td align="left" rowspan="1" colspan="1">(1111**1***)(1111**1***)(1111*)</td><td align="left" rowspan="1" colspan="1">14</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>3</sub></td><td align="left" rowspan="1" colspan="1">(111*1**1***)(111*1**1***)(11)</td><td align="left" rowspan="1" colspan="1">12</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>2,0</sub></td><td align="left" rowspan="1" colspan="1">(1111**1****)(1111**1****)(11)</td><td align="left" rowspan="1" colspan="1">12</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>4</sub></td><td align="left" rowspan="1" colspan="1">(11***1****)(11***1****)(11***)</td><td align="left" rowspan="1" colspan="1">8</td></tr></tbody></table></table-wrap>
</p>
      <p><xref ref-type="table" rid="T3">Table 3</xref> groups <italic>F</italic><sub>3</sub> and <italic>S</italic><sub>1,1</sub> into one category because both are full sensitive to reads with one SNP and one color error. However, <italic>S</italic><sub>1,1</sub> achieves higher weight than <italic>F</italic><sub>3</sub> weight by taking advantage of SNP's signature in color space. The introduction of positional restriction at one mismatch at the SNP locus significantly reduces the number of combinations of three mismatches, leading to the higher seed weight. Similarly, <italic>S</italic><sub>2,0</sub> and <italic>F</italic><sub>4</sub> are both full sensitive to two SNPs, but <italic>S</italic><sub>2,0</sub> provides an increase of four (12 to 8) in seed weight. Thus, the design of seeds specifically for the color space will provide a significant advantage in mapping speed.</p>
    </sec>
    <sec id="SEC3.2">
      <title>3.2 Theoretical performance of periodic spaced seeds</title>
      <p><xref ref-type="table" rid="T4">Table 4</xref> further compares the <italic>F</italic>-seed family, the <italic>S</italic>-seed family and the conventional <italic>C</italic><sub><italic>k</italic></sub> seed method described in <xref ref-type="sec" rid="SEC1">Section 1</xref>. Our comparison is based on the most common implementation where the human genome is preprocessed and 34-color SOLiD reads are divided into <italic>k</italic> + 2 fragments for mapping.
<table-wrap id="T4" position="float"><label>Table 4.</label><caption><p>Three seed families are compared in their ability to map 34-color SOLiD reads to a preprocessed human genome</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Seed name</th><th align="left" rowspan="1" colspan="1">No. of index tables</th><th align="left" rowspan="1" colspan="1">No. of queries per read</th><th align="left" rowspan="1" colspan="1">Seed weight</th><th align="left" rowspan="1" colspan="1">Extended weights</th><th align="left" rowspan="1" colspan="1">E(Random Hits) per read</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>2</sub></td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">7</td><td align="left" rowspan="1" colspan="1">16</td><td align="left" rowspan="1" colspan="1">16–20</td><td align="left" rowspan="1" colspan="1">1.89</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>C</italic><sub>2</sub></td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">16</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">8.38</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>1,1</sub></td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">10</td><td align="left" rowspan="1" colspan="1">14</td><td align="left" rowspan="1" colspan="1">14–19</td><td align="left" rowspan="1" colspan="1">68.91</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>3</sub></td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">11</td><td align="left" rowspan="1" colspan="1">12</td><td align="left" rowspan="1" colspan="1">12–16</td><td align="left" rowspan="1" colspan="1">627.25</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>C</italic><sub>3</sub></td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">10</td><td align="left" rowspan="1" colspan="1">12</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">3576.28</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>2,0</sub></td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">11</td><td align="left" rowspan="1" colspan="1">12</td><td align="left" rowspan="1" colspan="1">12–16</td><td align="left" rowspan="1" colspan="1">534.42</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>C</italic><sub>4</sub></td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">15</td><td align="left" rowspan="1" colspan="1">10</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">85.830</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>4</sub></td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">10</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">8–11</td><td align="left" rowspan="1" colspan="1">216.007</td></tr></tbody></table><table-wrap-foot><fn><p>An index table is, by definition, an array of <italic>N</italic> index for a genome of <italic>N</italic> base pairs. Thus, <italic>C</italic><sub>2</sub> requires three index tables as shown in <xref ref-type="fig" rid="F1">Figure 1</xref>.</p></fn></table-wrap-foot></table-wrap>
</p>
      <sec id="SEC3.2.1">
        <title>3.2.1 Memory requirements</title>
        <p>As shown in <xref ref-type="table" rid="T4">Table 4</xref>, PerM's use of a single seed results in the requirement of a single index table to preprocess the human genome no matter the sensitivity requirement, compared with three to five index tables for the conventional method <italic>C</italic><sub><italic>k</italic></sub>. The use of single periodic spaced seeds allows us to preprocess the human genome efficiently into 4.5 bytes per base, and load it to 14 GB of memory, without the swapping of index tables between disk and memory.</p>
      </sec>
      <sec id="SEC3.2.2">
        <title>3.2.2 Running time</title>
        <p>The total running time of a mapping project can be divided into two major components:
<list list-type="order"><list-item><p>Preprocessing: the time to preprocess the reference genome (or the reads set) into one or more index tables.</p></list-item><list-item><p>Mapping: the total time to find matches in the index tables for all queried subsequences, and the time to examine all matches using the full read-genome substring alignments.</p></list-item></list>
PerM's requirement of a single index table results in faster preprocessing time than methods which use the conventional multi-seed, multi-table approach. Mapping time consists of two parts: the time to query each seed-induced subsequence and to validate matches which result in true alignments, and the time to examine and ignore matches that result from random hits. The former is fixed as the number of true alignments is constant given a particular sensitivity level, while the latter is related directly to the seed weight. Ideally, mapping time is largely spent on the matching and validation of true alignments, but if the seed weight is insufficient, the examination of random hits will dominate the running time. As listed in last column of <xref ref-type="table" rid="T4">Table 4</xref>, the expected number of random hits per read can grow so large that most of the running time is wasted on filtering out the random hits. For example, using <italic>F</italic><sub>3</sub> on the human genome will require the examination of approximately 627 random hits per read which will result in drastically slower performance than the <italic>F</italic><sub>2</sub> which is expected to examine fewer than two random hits per read. Thus, the number of random hits is the most important indicator of the actual running time. <xref ref-type="table" rid="T4">Table 4</xref> shows that the weight increase associated with extended variable-weight periodic spaced seeds will result in a large reduction in random hits and significantly faster running times. As expected, this increased efficiency is greatest for the <italic>S</italic><sub><italic>x</italic>,<italic>k</italic></sub> family, when we compare <italic>S</italic><sub>2,0</sub> with <italic>C</italic><sub>4</sub>, we expect 161 times fewer random hits for the periodic seed.</p>
      </sec>
    </sec>
    <sec id="SEC3.3">
      <title>3.3 Experimental results</title>
      <p>We performed genome-scale comparison with two popular mapping programs, MAQ (version 0.6.6; Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B17">2008</xref>) and Bowtie (version 0.10.0; Langmead <italic>et al.</italic> <xref ref-type="bibr" rid="B14">2009</xref>). Both Illumina and SOLiD reads from The 1000 Genomes Project were used for mapping the human genome. We also compared PerM with SOCS, a mapping program designed specifically for ABI SOLiD reads.</p>
      <sec id="SEC3.3.1">
        <title>3.3.1 Genome-scale mapping with SOLiD reads</title>
        <p>We mapped 5 million 35-color SOLiD reads (the first 5 million reads in the NCBI dataset ERR000455 are available on our web site) to the whole human genome. Overall, we were able to map 58% of the reads (2.94 M) with five or fewer mismatches. Over 78% of the mapped reads included at least one mismatch and 22% of the mapped reads have four or five mismatches in their best alignment to the reference, indicative of a high machine error rate. Considering that each SNP causes consecutive mismatches, it is likely that the majority of reads which cover SNP loci will contain at least three color mismatches. Thus, the detection of genomic variation with SOLiD reads requires far greater sensitivity than necessary for Illumina data. For this reason, PerM offers the seed <italic>S</italic><sub>1,1</sub> to maximize seed weight while still maintaining full sensitivity to reads which contain one SNP and a color error. For each seed, <xref ref-type="table" rid="T5">Table 5</xref> lists the discovery rate for alignments containing five or fewer mismatches. The small difference in the discovery rates of <italic>S</italic><sub>1,1</sub> and <italic>F</italic><sub>3</sub> provides further reason to use <italic>S</italic><sub>1,1</sub> for SOLiD data.
<table-wrap id="T5" position="float"><label>Table 5.</label><caption><p>The results of mapping 5 million 34-color SOLiD reads to the whole human genome</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Seed name</th><th align="left" colspan="3" rowspan="1">Mapped reads<hr/></th><th align="left" colspan="2" rowspan="1">Unique SNP-supporting reads<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">3 mis</th><th align="left" rowspan="1" colspan="1">4 mis</th><th align="left" rowspan="1" colspan="1">5 mis</th><th align="left" rowspan="1" colspan="1">Mis Threshold</th><th align="left" rowspan="1" colspan="1">Read count</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>2</sub></td><td align="left" rowspan="1" colspan="1">298 898</td><td align="left" rowspan="1" colspan="1">167 048</td><td align="left" rowspan="1" colspan="1">117 964</td><td align="left" rowspan="1" colspan="1">≤ 3 colors</td><td align="left" rowspan="1" colspan="1">74 877</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>1,1</sub></td><td align="left" rowspan="1" colspan="1">465 460</td><td align="left" rowspan="1" colspan="1">348 416</td><td align="left" rowspan="1" colspan="1">257 281</td><td align="left" rowspan="1" colspan="1">≤ 3 colors</td><td align="left" rowspan="1" colspan="1">98 325</td></tr><tr><td align="left" rowspan="1" colspan="1"><italic>F</italic><sub>3</sub></td><td align="left" rowspan="1" colspan="1">496 401</td><td align="left" rowspan="1" colspan="1">379 936</td><td align="left" rowspan="1" colspan="1">283 971</td><td align="left" rowspan="1" colspan="1">≤ 3 colors</td><td align="left" rowspan="1" colspan="1">98 325</td></tr></tbody></table><table-wrap-foot><fn><p>All PerM seeds provide a minimum of full sensitivity to two mismatches and report 637 681 exact matches, and 583 363 and 561 029 reads with one and two mismatches, respectively.</p></fn></table-wrap-foot></table-wrap>
</p>
        <p>MAQ does not provide an alignment option which adheres to the definition of full sensitivity to greater than two mismatches. Instead, MAQ aligns SOLiD reads by finding hits using a seed similar to C2 (shown in <xref ref-type="fig" rid="F1">Fig. 1</xref>), and checks each for the possibility of a feasible base-color alignment. It should be noted that each SOLiD read includes thirty-five colors preceded by the base of the primer used to synthesize the read. Thus, the first color represents the transition from the primer (which is not part of the reference) to the first base on the reference, leaving only thirty four colors which represent transitions on the reference. MAQ's current implementation uses only these thirty four colors for alignment. Unfortunately, each thirty-four color read could be the result of four different base strings, depending on the first base synthesized in the read. PerM uses the primer-color transition to infer the identity of this base and includes an extra check to insure that the first base in the reference matches the first base on the read.</p>
        <p><xref ref-type="table" rid="T6">Table 6</xref> compares the mapping efficiency of MAQ and PerM at different sensitivity thresholds. In general, PerM offers faster running time for SOLiD reads than MAQ. In addition, PerM is able to offer full sensitivity to more than two mismatches.
<table-wrap id="T6" position="float"><label>Table 6.</label><caption><p>Running time comparison of mapping the 35 bp SOLiD reads to the whole human genome</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Program</th><th align="left" rowspan="1" colspan="1">Seed/mode</th><th align="left" rowspan="1" colspan="1">weight</th><th align="left" rowspan="1" colspan="1">(Full) Sensitivity</th><th align="left" rowspan="1" colspan="1">Speed (M/h)</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">PerM</td><td align="left" rowspan="1" colspan="1">F2</td><td align="left" rowspan="1" colspan="1">16–20</td><td align="left" rowspan="1" colspan="1">2 colors</td><td align="left" rowspan="1" colspan="1">3.53</td></tr><tr><td align="left" rowspan="1" colspan="1">PerM</td><td align="left" rowspan="1" colspan="1"><italic>S</italic><sub>1,1</sub></td><td align="left" rowspan="1" colspan="1">14–19</td><td align="left" rowspan="1" colspan="1">1 base + 1 color</td><td align="left" rowspan="1" colspan="1">1.17</td></tr><tr><td align="left" rowspan="1" colspan="1">PerM</td><td align="left" rowspan="1" colspan="1">F3</td><td align="left" rowspan="1" colspan="1">12–16</td><td align="left" rowspan="1" colspan="1">3 colors</td><td align="left" rowspan="1" colspan="1">0.75</td></tr><tr><td align="left" rowspan="1" colspan="1">MAQ</td><td align="left" rowspan="1" colspan="1">-c</td><td align="left" rowspan="1" colspan="1">14</td><td align="left" rowspan="1" colspan="1">2 colors</td><td align="left" rowspan="1" colspan="1">0.56</td></tr></tbody></table></table-wrap>
</p>
      </sec>
      <sec id="SEC3.3.2">
        <title>Genome-scale mapping with Illumina reads</title>
        <p>We mapped 9.9 million Illumina reads from whole human genome shotgun fragments (NCBI dataset SRR001154) to the whole human genome with full sensitivity to two and three mismatches. The reads, originally of length 47 bp were also trimmed down to 40 bp and 36 bp to provide a better comparison with MAQ and Bowtie. After trimming, 71.5%, 62.7% and 36.7% of the 36 bp, 40 bp and 47 bp reads, respectively, could be mapped within four mismatches to the genome with our <italic>F</italic><sub>3</sub> seed. MAQ which only offers full sensitivity to two mismatches was compared with the seed <italic>F</italic><sub>2</sub>. Bowtie was run in its default mode which outputs the first alignment encountered with two or fewer mismatches as well as conditions which are most similar to offering full sensitivity to two and three mismatches, ‘-v 2 -a –best – strata’ and ‘-v 3 -a –best – strata’. These modes were compared with the seeds <italic>F</italic><sub>2</sub> and <italic>F</italic><sub>3</sub>.</p>
        <p><xref ref-type="table" rid="T7">Table 7</xref> compares the performance for mapping different length Illumina reads with sensitivity to two or three mismatches. For the popular task of mapping 36 bp reads with full sensitivity to two mismatches, PerM runs approximately 12 times faster than MAQ. Bowtie outperforms PerM when three mismatches are allowed for 36 bp reads. However, as read lengths grow longer, PerM significantly outperforms Bowtie and MAQ for sensitivity to both two and three mismatches. It should be noted also that Bowtie's default mode is faster than PerM's <italic>F</italic><sub>2</sub> seed for read length 36. This advantage results from Bowtie's requirement to find and output only a single alignment in the default mode.
<table-wrap id="T7" position="float"><label>Table 7.</label><caption><p>Running time comparison of mapping the Illumina reads with different read lengths and seeds to the whole human genome</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Length</th><th align="left" colspan="2" rowspan="1">36 bp<hr/></th><th align="left" colspan="2" rowspan="1">40 bp<hr/></th><th align="left" colspan="2" rowspan="1">47 bp<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Weight</th><th align="left" rowspan="1" colspan="1">Reads/h</th><th align="left" rowspan="1" colspan="1">Weight</th><th align="left" rowspan="1" colspan="1">Reads/h</th><th align="left" rowspan="1" colspan="1">Weight</th><th align="left" rowspan="1" colspan="1">Reads/h</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">Seed</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1"> F2</td><td align="left" rowspan="1" colspan="1">18–21</td><td align="left" rowspan="1" colspan="1">5.92 M</td><td align="left" rowspan="1" colspan="1">20–24</td><td align="left" rowspan="1" colspan="1">8.01 M</td><td align="left" rowspan="1" colspan="1">24–28</td><td align="left" rowspan="1" colspan="1">20.1 M</td></tr><tr><td align="left" rowspan="1" colspan="1"> <italic>MAQ</italic></td><td align="left" rowspan="1" colspan="1">14</td><td align="left" rowspan="1" colspan="1">0.49 M</td><td align="left" rowspan="1" colspan="1">14</td><td align="left" rowspan="1" colspan="1">0.55 M</td><td align="left" rowspan="1" colspan="1">14</td><td align="left" rowspan="1" colspan="1">0.67 M</td></tr><tr><td align="left" rowspan="1" colspan="1"> Bowtie -v2<sup>*</sup></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">4.43 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">3.87 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">2.64 M</td></tr><tr><td align="left" rowspan="1" colspan="1"> F3</td><td align="left" rowspan="1" colspan="1">13–18</td><td align="left" rowspan="1" colspan="1">1.69 M</td><td align="left" rowspan="1" colspan="1">15–19</td><td align="left" rowspan="1" colspan="1">2.21 M</td><td align="left" rowspan="1" colspan="1">18–23</td><td align="left" rowspan="1" colspan="1">3.27 M</td></tr><tr><td align="left" rowspan="1" colspan="1"> Bowtie -v3<sup>*</sup></td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">4.28 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">3.38 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">1.63 M</td></tr><tr><td align="left" rowspan="1" colspan="1"> Bowtie default</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">9.27 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">7.95 M</td><td rowspan="1" colspan="1"/><td align="left" rowspan="1" colspan="1">7.20 M</td></tr></tbody></table><table-wrap-foot><fn><p>The default mode of Bowtie is equivalent to -k 1. The -v k mode is set with -a –best – strata. The tests are performed on Sun, X4600, Opteron, 2.6 GHz, using 15 GB single node and thread.</p></fn></table-wrap-foot></table-wrap>
</p>
      </sec>
      <sec id="SEC3.3.3">
        <title>3.3.2 Comparison: PerM and MAQ</title>
        <p>As shown in <xref ref-type="table" rid="T6">Tables 6</xref> and <xref ref-type="table" rid="T7">7</xref>, PerM is able to map both SOLiD and Solexa reads significantly faster than MAQ while offering greater levels of full sensitivity. The differences in performance are a testament to the benefit of extendable periodic spaced seeds which provide greater seed weights than the fixed length consecutive seeds implemented in MAQ. This increase in seed weight allows PerM to avoid the bottleneck which results from the many random hits present on a large genome. It should also be noted that MAQ preprocesses reads, requiring it to build an index table for each mapping project while PerM can reuse the same index because it preprocesses the genome.</p>
      </sec>
      <sec id="SEC3.3.4">
        <title>3.3.3 Comparison: PerM and Bowtie</title>
        <p>Although PerM and Bowtie both index the genome, PerM finds full sensitive alignments through seed subsequence matching while Bowtie uses a modified exact matching algorithm and quality-aware backtracking to report alignments. As shown in <xref ref-type="table" rid="T7">Table 7</xref>, Bowtie's performance slows down when aligning long reads because of the increase in backtracking steps required to find inexact alignments. PerM's performance is primarily a result of it's seed weight, which is maximized for any read length or sensitivity level. As shown in <xref ref-type="table" rid="T7">Table 7</xref>, long reads allow PerM's extended seeds to significantly speed up mapping.</p>
      </sec>
      <sec id="SEC3.3.5">
        <title>3.3.4 Comparison: PerM with SOCS</title>
        <p>PerM was compared with a program dedicated to SOLiD reads, SOCS (version 1.2.1). Both PerM and SOCS provide full sensitivity to three mismatches, but SOCS does not provide sufficient seed weight to map reads to the entire genome. For this reason, we mapped the 5 million 35 bp SOLiD reads used in 3.3.1 to chromosome X. Eight percent of the reads included a mapping to chromosome with three of fewer substitutions. <xref ref-type="table" rid="T8">Table 8</xref> lists the mapping times for different sensitivity levels. PerM's faster running time in comparison to SOCS is primarily the result of much higher seed weight.
<table-wrap id="T8" position="float"><label>Table 8.</label><caption><p>Comparing of PerM and SOCS in chromosome-level reference</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th align="left" rowspan="1" colspan="1">Full sensitivity</th><th align="left" colspan="2" rowspan="1">PerM<hr/></th><th align="left" colspan="2" rowspan="1">SOCS<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Running time</th><th align="left" rowspan="1" colspan="1">Weight</th><th align="left" rowspan="1" colspan="1">Running time</th><th align="left" rowspan="1" colspan="1">Weight</th></tr></thead><tbody align="left"><tr><td align="left" rowspan="1" colspan="1">2 color mis</td><td align="left" rowspan="1" colspan="1">11 min 46 s</td><td align="left" rowspan="1" colspan="1">16–20</td><td align="left" rowspan="1" colspan="1">14 min 30 s</td><td align="left" rowspan="1" colspan="1">11</td></tr><tr><td align="left" rowspan="1" colspan="1">1 base + 1 color mis</td><td align="left" rowspan="1" colspan="1">23 min 0 s</td><td align="left" rowspan="1" colspan="1">14–19</td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/></tr><tr><td align="left" rowspan="1" colspan="1">3 color mis</td><td align="left" rowspan="1" colspan="1">32 min 41 s</td><td align="left" rowspan="1" colspan="1">12–16</td><td align="left" rowspan="1" colspan="1">2 h 20 min</td><td align="left" rowspan="1" colspan="1">8</td></tr></tbody></table><table-wrap-foot><fn><p>The running time includes preprocessing and I/O. The memory usage of both the programs is &lt;2 GB. The tests are performed on Sun, X4600, Opteron, 2.6 GHz, using single node and thread.</p></fn></table-wrap-foot></table-wrap>
</p>
      </sec>
      <sec id="SEC3.3.6">
        <title>3.3.5 Genome preprocessing</title>
        <p>Genome preprocessing time is linear with respect to the size of the reference regardless of the seed used. PerM requires 3 h 30 min to index the whole human genome to 14 GB of memory. In comparison, Bowtie requires 4 h 47 min to build a compressed 2.7 GB human genome index. However, for large-genome resequencing projects, preprocessing time is negligible in comparison with mapping time. Once the genome has been preprocessed, its index can be shared and reused by multiple processors to map different read sets. Both PerM and Bowtie use multiple cores in one computer to map read sets in parallel by querying the same genome index table in the shared memory. Thus, on a server with shared memory architecture, PerM is more memory efficient in terms of ‘memory per CPU’ compared with MAQ, despite a 14 GB index table.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>4 DISCUSSION</title>
    <p>PerM provides highly efficient mapping solutions for genome-scale mapping projects involving Illumina or SOLiD data. PerM owes its performance primarily to the use of single periodic spaced seeds which are capable of providing sufficient weight and sensitivity to significantly increase genome-scale mapping performance in comparison with other mapping programs.</p>
    <p>However, for applications that require full sensitivity to many mismatches (<italic>k</italic> ≥ 4) on a short read, single periodic seeds may prove incapable of providing efficient mapping performance. In this situation, the costly step of hashing to multiple index tables may be necessary to increase seed weight and eliminate a bottleneck in the checking step. Already a topic of much interest (Li <italic>et al.</italic>, <xref ref-type="bibr" rid="B18">2004</xref>; Nicolas and Rivals, <xref ref-type="bibr" rid="B26">2008</xref>; Noé and Kucherov, <xref ref-type="bibr" rid="B27">2004</xref>; Sun and Buhler, <xref ref-type="bibr" rid="B34">2005</xref>; Yang <italic>et al.</italic>, <xref ref-type="bibr" rid="B37">2004</xref>), Ma and Yao, (<xref ref-type="bibr" rid="B20">2008</xref>) showed that the optimization of multiple seeds cannot be easier than the Golomb Ruler Design problem, considered likely to be NP-hard. Thus, although we cannot guarantee optimality over the entire search space, we propose three methods to design high weight multiple seeds: a constrained exhaustive search, a reduction to the integer programming problem and a ‘tuples-grouping’ algorithm. These methods and additional performance analysis and experiments are discussed in detail in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/btp486/DC1">Supplementary Material</ext-link>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>[Supplementary Data]</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="btp486_index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="btp486_1.pdf"/>
      <media xlink:role="associated-file" mimetype="text" mime-subtype="plain" xlink:href="btp486_BIOINF_2009_0775_R1_Supplement.tex"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>The authors would like to thank Dr Zhenyu Xuan and Dr Richard McCombie from the Genome Center of Cold Spring Harbor Laboratory and Dr Andrew Smith at USC for providing us with data and helpful suggestions. We would also like to thank Zheng Zhang from ABI as well as graduate students Dazhe Meng and Zach Frazier from USC for their helpful discussion.</p>
    <p><italic>Funding</italic>: National Institutes of Health Center of Excellence in Genomic Sciences.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J. Mol. Biol.</source>
        <year>1990</year>
        <volume>215</volume>
        <fpage>403</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </element-citation>
    </ref>
    <ref id="B2">
      <element-citation publication-type="book">
        <collab>Applied Biosystems</collab>
        <source>Principles of di-base sequencing and the advantage of color space analysis in the solid system.</source>
        <year>2008a</year>
        <publisher-name>World Wide Web electronic publication</publisher-name>
        <comment>Available at<ext-link ext-link-type="uri" xlink:href="http://marketing.appliedbiosystems.com/images/Product_Microsites/Solid_Knowledge_MS/pdf/SOLiD_Dibase_Sequencing_and_Color_Space_Analysis.pdf">http://marketing.appliedbiosystems.com/images/ Product_Microsites/Solid_Knowledge_MS/pdf/SOLiD_Dibase _Sequencing_and_Color_Space_Analysis.pdf</ext-link></comment>
      </element-citation>
    </ref>
    <ref id="B3">
      <element-citation publication-type="book">
        <collab>Applied Biosystems</collab>
        <source>Principles of di-base sequencing and the advantage of color space analysis in the solid system.</source>
        <year>2008b</year>
        <publisher-name>World Wide Web electronic publication</publisher-name>
        <comment>Available at<ext-link ext-link-type="uri" xlink:href="http://marketing.appliedbiosystems.com/images/Product_Microsites/Solid_Knowledge_MS/pdf/SOLiD_Dibase_Sequencing_and_Color_Space_Analysis.pdf">http://marketing.appliedbiosystems.com/images/ Product_Microsites/Solid_Knowledge_MS/pdf/SOLiD_Dibase_Sequencing_and _Color_Space_Analysis.pdf</ext-link></comment>
      </element-citation>
    </ref>
    <ref id="B4">
      <element-citation publication-type="book">
        <collab>Applied Biosystems</collab>
        <source>SOLiDTM system application documentation: Ab resequencing analysis pipeline (corona lite).</source>
        <year>2008c</year>
        <publisher-name>World Wide Web electronic publication</publisher-name>
        <comment>Available at<ext-link ext-link-type="uri" xlink:href="http://solidsoftwaretools.com/gf/project/corona/">http://solidsoftwaretools.com/gf/project/corona/</ext-link></comment>
      </element-citation>
    </ref>
    <ref id="B5">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bennett</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Solexa ltd</article-title>
        <source>Pharmacogenomics</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>433</fpage>
        <lpage>438</lpage>
        <pub-id pub-id-type="pmid">15165179</pub-id>
      </element-citation>
    </ref>
    <ref id="B6">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Buhler</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Designing seeds for similarity search in genomic DNA</article-title>
        <source>Journal of Computer and System Sciences.</source>
        <year>2003</year>
        <publisher-loc>FL, USA</publisher-loc>
        <publisher-name>ACM Press</publisher-name>
        <fpage>67</fpage>
        <lpage>75</lpage>
      </element-citation>
    </ref>
    <ref id="B7">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Burkhardt</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Karkkainen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Better filtering with gapped q-grams</article-title>
        <source>Proceedings of the 12th Symposium on Combinatorial Pattern Matching (CPM'01).</source>
        <year>2001</year>
        <publisher-loc>Israel</publisher-loc>
      </element-citation>
    </ref>
    <ref id="B8">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Campagna</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Pass: a program to align short sequences</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>967</fpage>
        <lpage>968</lpage>
        <pub-id pub-id-type="pmid">19218350</pub-id>
      </element-citation>
    </ref>
    <ref id="B9">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eaves</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>MOM: maximum oligonucleotide mapping</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>969</fpage>
        <lpage>970</lpage>
        <pub-id pub-id-type="pmid">19228804</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jiang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>SeqMap: mapping massive amount of oligonucleotides to the genome</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>2395</fpage>
        <lpage>2396</lpage>
        <pub-id pub-id-type="pmid">18697769</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kent</surname>
            <given-names>WJ</given-names>
          </name>
        </person-group>
        <article-title>BLAT–the BLAST-like alignment tool</article-title>
        <source>Genome Res.</source>
        <year>2002</year>
        <volume>12</volume>
        <fpage>656</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="pmid">11932250</pub-id>
      </element-citation>
    </ref>
    <ref id="B12">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>YJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ProbeMatch: rapid alignment of oligonucleotides to genome allowing both gaps and mismatches</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1424</fpage>
        <lpage>1425</lpage>
        <pub-id pub-id-type="pmid">19351619</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kucherov</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multiseed lossless filtration</article-title>
        <source>IEEE/ACM Trans. Comput. Biol. Bioinform.</source>
        <year>2005</year>
        <volume>2</volume>
        <fpage>51</fpage>
        <lpage>61</lpage>
        <pub-id pub-id-type="pmid">17044164</pub-id>
      </element-citation>
    </ref>
    <ref id="B14">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <publisher-name>World Wide Web electronic publication</publisher-name>
      </element-citation>
    </ref>
    <ref id="B15">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="B16">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Zoom! zillions of oligos mapped</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>2431</fpage>
        <lpage>2437</lpage>
        <pub-id pub-id-type="pmid">18684737</pub-id>
      </element-citation>
    </ref>
    <ref id="B17">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mapping short DNA sequencing reads and calling variants using mapping quality scores</article-title>
        <source>Genome Res.</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>1851</fpage>
        <lpage>1858</lpage>
        <pub-id pub-id-type="pmid">18714091</pub-id>
      </element-citation>
    </ref>
    <ref id="B18">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>PatternHunter II: highly sensitive and fast homology search</article-title>
        <source>J. Bioinform. Comput. Biol.</source>
        <year>2004</year>
        <volume>2</volume>
        <fpage>417</fpage>
        <lpage>439</lpage>
        <pub-id pub-id-type="pmid">15359419</pub-id>
      </element-citation>
    </ref>
    <ref id="B19">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SOAP: short oligonucleotide alignment program</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>713</fpage>
        <lpage>714</lpage>
        <pub-id pub-id-type="pmid">18227114</pub-id>
      </element-citation>
    </ref>
    <ref id="B20">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ma</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Seed optimization is no easier than optimal Golomb ruler design</article-title>
        <source>Asia Pacific Bioinformatics Conference (APBC).</source>
        <year>2008</year>
        <comment>Available at<ext-link ext-link-type="uri" xlink:href="http://sunflower.kuicr.kyoto-u.ac.jp/apbc2008/acceptpaper.html">http://sunflower.kuicr.kyoto-u.ac.jp/apbc2008/acceptpaper.html</ext-link>paper 19</comment>
      </element-citation>
    </ref>
    <ref id="B21">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ma</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>PatternHunter: faster and more sensitive homology search</article-title>
        <source>Bioinformatics</source>
        <year>2002</year>
        <volume>18</volume>
        <fpage>440</fpage>
        <lpage>445</lpage>
        <pub-id pub-id-type="pmid">11934743</pub-id>
      </element-citation>
    </ref>
    <ref id="B22">
      <element-citation publication-type="book">
        <collab>Malaysian Genomics Resource Center</collab>
        <source>SXOligoSearch.</source>
        <year>2009</year>
        <publisher-name>World Wide Web electronic publication</publisher-name>
        <comment>Available at<ext-link ext-link-type="uri" xlink:href="http://synasite.mgrc.com.my:8080/sxog/NewSXOligoSearch.php">http://synasite.mgrc.com.my:8080/sxog/NewSXOligoSearch.php</ext-link></comment>
      </element-citation>
    </ref>
    <ref id="B23">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mardis</surname>
            <given-names>ER</given-names>
          </name>
        </person-group>
        <article-title>ChIP-seq: welcome to the new frontier</article-title>
        <source>Nat. Methods</source>
        <year>2007</year>
        <volume>4</volume>
        <fpage>613</fpage>
        <lpage>614</lpage>
        <pub-id pub-id-type="pmid">17664943</pub-id>
      </element-citation>
    </ref>
    <ref id="B24">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marioni</surname>
            <given-names>JC</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>RNA-seq: an assessment of technical reproducibility and comparison with gene expression arrays</article-title>
        <source>Genome Res.</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>1509</fpage>
        <lpage>1517</lpage>
        <pub-id pub-id-type="pmid">18550803</pub-id>
      </element-citation>
    </ref>
    <ref id="B25">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Myers</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>A fast bit-vector algorithm for approximate string matching based on dynamic programming</article-title>
        <source>J. ACM</source>
        <year>1999</year>
        <volume>46</volume>
        <fpage>395</fpage>
        <lpage>415</lpage>
      </element-citation>
    </ref>
    <ref id="B26">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicolas</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rivals</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Hardness of optimal spaced seed design</article-title>
        <source>J. Comput. Syst. Sci.</source>
        <year>2008</year>
        <volume>74</volume>
        <fpage>831</fpage>
        <lpage>849</lpage>
      </element-citation>
    </ref>
    <ref id="B27">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Noé</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kucherov</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Improved hit criteria for DNA local alignment</article-title>
        <source>BMC Bioinformatics</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>149</fpage>
        <lpage>149</lpage>
        <pub-id pub-id-type="pmid">15485572</pub-id>
      </element-citation>
    </ref>
    <ref id="B28">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Efficient mapping of applied biosystems solid sequence data to a reference genome for functional genomic applications</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>2776</fpage>
        <lpage>2777</lpage>
        <pub-id pub-id-type="pmid">18842598</pub-id>
      </element-citation>
    </ref>
    <ref id="B29">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quinlan</surname>
            <given-names>AR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Pyrobayes: an improved base caller for SNP discovery in pyrosequences</article-title>
        <source>Nat. Methods</source>
        <year>2008</year>
        <volume>5</volume>
        <fpage>179</fpage>
        <lpage>181</lpage>
        <pub-id pub-id-type="pmid">18193056</pub-id>
      </element-citation>
    </ref>
    <ref id="B30">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ronaghi</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A sequencing method based on real-time pyrophosphate</article-title>
        <source>Science</source>
        <year>1998</year>
        <volume>281</volume>
        <fpage>363</fpage>
        <lpage>363</lpage>
        <pub-id pub-id-type="pmid">9705713</pub-id>
      </element-citation>
    </ref>
    <ref id="B31">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rumble</surname>
            <given-names>SM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SHRiMP: accurate mapping of short color-space reads</article-title>
        <source>PLoS Comput. Biol.</source>
        <year>2009</year>
        <volume>5</volume>
        <fpage>e1000386</fpage>
        <pub-id pub-id-type="pmid">19461883</pub-id>
      </element-citation>
    </ref>
    <ref id="B32">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shendure</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ji</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Next-generation DNA sequencing</article-title>
        <source>Nat. Biotechnol.</source>
        <year>2008</year>
        <volume>26</volume>
        <fpage>1135</fpage>
        <lpage>1145</lpage>
        <pub-id pub-id-type="pmid">18846087</pub-id>
      </element-citation>
    </ref>
    <ref id="B33">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>AD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Using quality scores and longer reads improves accuracy of Solexa read mapping</article-title>
        <source>BMC Bioinformatics</source>
        <year>2008</year>
        <volume>9</volume>
        <fpage>128</fpage>
        <lpage>128</lpage>
        <pub-id pub-id-type="pmid">18307793</pub-id>
      </element-citation>
    </ref>
    <ref id="B34">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sun</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Buhler</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Designing multiple simultaneous seeds for DNA similarity search</article-title>
        <source>J. Comput. Biol.</source>
        <year>2005</year>
        <volume>12</volume>
        <fpage>847</fpage>
        <lpage>861</lpage>
        <pub-id pub-id-type="pmid">16108721</pub-id>
      </element-citation>
    </ref>
    <ref id="B35">
      <element-citation publication-type="book">
        <collab>The MarthLab</collab>
        <source>Mosaik.</source>
        <year>2009</year>
        <publisher-name>World Wide Web electronic publication</publisher-name>
      </element-citation>
    </ref>
    <ref id="B36">
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Optimizing multiple spaced seeds for homology search</article-title>
        <source>J. Comput. Biol.</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>1355</fpage>
        <lpage>1368</lpage>
        <pub-id pub-id-type="pmid">17037963</pub-id>
      </element-citation>
    </ref>
    <ref id="B37">
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>I-H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Efficient methods for generating optimal single and multiple spaced seeds</article-title>
        <source>BIBE '04: Proceedings of the 4th IEEE Symposium on Bioinformatics and Bioengineering.</source>
        <year>2004</year>
        <publisher-loc>Washington, DC</publisher-loc>
        <publisher-name>IEEE Computer Society</publisher-name>
        <fpage>411</fpage>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6022609</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/bty082</article-id>
    <article-id pub-id-type="publisher-id">bty082</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>flowLearn: fast and precise identification and quality checking of cell populations in flow cytometry</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-5188-1176</contrib-id>
        <name>
          <surname>Lux</surname>
          <given-names>Markus</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff1">1</xref>
        <xref ref-type="corresp" rid="bty082-cor1"/>
        <!--<email>mlux@techfak.uni-bielefeld.de</email>-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-9765-2990</contrib-id>
        <name>
          <surname>Brinkman</surname>
          <given-names>Ryan Remy</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff2">2</xref>
        <xref ref-type="aff" rid="bty082-aff3">3</xref>
        <xref ref-type="aff" rid="bty082-aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-9837-1878</contrib-id>
        <name>
          <surname>Chauve</surname>
          <given-names>Cedric</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Laing</surname>
          <given-names>Adam</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lorenc</surname>
          <given-names>Anna</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Abeler-Dörner</surname>
          <given-names>Lucie</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hammer</surname>
          <given-names>Barbara</given-names>
        </name>
        <xref ref-type="aff" rid="bty082-aff7">7</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Wren</surname>
          <given-names>Jonathan</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="bty082-aff1"><label>1</label>Computational Methods for the Analysis of the Diversity and Dynamics of Genomes, Bielefeld University, Bielefeld, Germany</aff>
    <aff id="bty082-aff2"><label>2</label>Terry Fox Laboratory, BC Cancer Research Centre, Vancouver, Canada</aff>
    <aff id="bty082-aff3"><label>3</label>Department of Medical Genetics, University of British Columbia, Vancouver, Canada</aff>
    <aff id="bty082-aff4"><label>4</label>Cytapex Bioinformatics Inc., Vancouver, Canada</aff>
    <aff id="bty082-aff5"><label>5</label>Department of Mathematics, Simon Fraser University, Vancouver, Canada</aff>
    <aff id="bty082-aff6"><label>6</label>Department of Immunobiology, King’s College London, London, UK</aff>
    <aff id="bty082-aff7"><label>7</label>CITEC Centre of Excellence, Bielefeld, Germany</aff>
    <author-notes>
      <corresp id="bty082-cor1">To whom correspondence should be addressed. <email>mlux@techfak.uni-bielefeld.de</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>7</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2018-02-15">
      <day>15</day>
      <month>2</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>2</month>
      <year>2018</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>34</volume>
    <issue>13</issue>
    <issue-title>ISMB 2018 Proceedings July 6 to July 10, 2018, Chicago, IL, United States</issue-title>
    <fpage>2245</fpage>
    <lpage>2253</lpage>
    <history>
      <date date-type="received">
        <day>15</day>
        <month>8</month>
        <year>2017</year>
      </date>
      <date date-type="rev-recd">
        <day>09</day>
        <month>1</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>2</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2018</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bty082.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Identification of cell populations in flow cytometry is a critical part of the analysis and lays the groundwork for many applications and research discovery. The current paradigm of manual analysis is time consuming and subjective. A common goal of users is to replace manual analysis with automated methods that replicate their results. Supervised tools provide the best performance in such a use case, however they require fine parameterization to obtain the best results. Hence, there is a strong need for methods that are fast to setup, accurate and interpretable.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>flowLearn is a semi-supervised approach for the quality-checked identification of cell populations. Using a very small number of manually gated samples, through density alignments it is able to predict gates on other samples with high accuracy and speed. On two state-of-the-art datasets, our tool achieves <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-measures exceeding 0.99 for 31%, and 0.90 for 80% of all analyzed populations. Furthermore, users can directly interpret and adjust automated gates on new sample files to iteratively improve the initial training.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>FlowLearn is available as an <monospace>R</monospace> package on <ext-link ext-link-type="uri" xlink:href="https://github.com/mlux86/flowLearn">https://github.com/mlux86/flowLearn</ext-link>. Evaluation data is publicly available online. Details can be found in the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">DFG</named-content>
          <named-content content-type="funder-identifier">10.13039/100004807</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Computational Methods for the Analysis of the Diversity and Dynamics of Genomes</named-content>
        </funding-source>
        <award-id>GRK 1906/1</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">NSERC and Genome Canada</named-content>
        </funding-source>
        <award-id>252FLO_Brinkman</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institute Of Allergy And Infectious Diseases</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">NIH</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>1R01GM118417-01A1</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Infrastructure and Opportunity Fund Award</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Human Immunology Project Consortium</named-content>
        </funding-source>
        <award-id>U19AI118608</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Human Immunology Project Consortium</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institute of Allergy and Infectious Diseases</named-content>
          <named-content content-type="funder-identifier">10.13039/100000060</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">MITACS Globalink</named-content>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Wellcome Trust</named-content>
          <named-content content-type="funder-identifier">10.13039/100004440</named-content>
        </funding-source>
        <award-id>100156/Z/12/Z</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Flow cytometry (FCM) is a technology that is commonly used for the rapid characterization of cells of the immune system at the single cell level based on antigens presented on the cell surface. Cells of interest are targeted by a set of fluorochrome-conjugated antibodies (markers) and pass through a laser beam one-by-one at over 10 000 cells per minute (<xref rid="bty082-B18" ref-type="bibr">Shapiro, 2005</xref>). Scattered light of different wavelengths for each marker is measured and recorded by sensitive detectors. This subsequently creates a unique intensity profile that allows for differentiation of cell types. FCM is widely used in research, for example in immunophenotyping where it holds great promise for assessing the immune status of patient populations. Within a blood or tissue sample, the most common measurement of interest is cell frequency (i.e. the proportion of a cell population), either absolute or relative to a parent population. Variations in cell frequencies can give important information about the immune status or allow association of cell types with a biological variable (<xref rid="bty082-B2" ref-type="bibr">Aghaeepour <italic>et al.</italic>, 2016</xref>).</p>
    <p>The accurate determination of cell population frequencies is a key aim in FCM analysis. Using differential expression of one or more markers, it is possible to delineate cell populations of interest, a process commonly known as ‘gating’. This task usually comprises the manual inspection of bivariate density plots using marker channels that were selected from prior biological knowledge. Subsequently, for each sample, cell populations are identified by drawing regions of interest or setting channel thresholds (<xref ref-type="fig" rid="bty082-F1">Fig. 1</xref>). While some populations are easy to gate, populations with very small cell proportions (rare populations) can be challenging. Large populations can obscure rare ones, such that they do not necessarily appear as clusters or well pronounced density peaks, hence are difficult to detect. Due to the large number of possible combinations of markers, gating is a labour intensive and highly subjective process (<xref rid="bty082-B17" ref-type="bibr">Saeys <italic>et al.</italic>, 2016</xref>). In contrast, automated methods offer little to no bias and comparable variability (<xref rid="bty082-B1" ref-type="bibr">Aghaeepour <italic>et al.</italic>, 2013</xref>; <xref rid="bty082-B6" ref-type="bibr">Finak <italic>et al.</italic>, 2016</xref>). Thus, there has been substantial interest in developing methods that ease the process of identifying cell populations as much as possible, and a large variety of tools, both unsupervised and supervised, have been developed (<xref rid="bty082-B1" ref-type="bibr">Aghaeepour <italic>et al.</italic>, 2013</xref>; <xref rid="bty082-B12" ref-type="bibr">Kvistborg <italic>et al.</italic>, 2015</xref>; <xref rid="bty082-B17" ref-type="bibr">Saeys <italic>et al.</italic>, 2016</xref>).
</p>
    <fig id="bty082-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Density plot for two channels ‘CD-3’ against ‘SSC-A’. Each dot represents a cell and corresponding one-dimensional densities are attached at the top and left. The shown data is an example of gating T-cells from lymphocyte singlet cells. Axis values correspond to intensity values. Knowing that T-cells (right cluster) express CD3, they can be delineated from other lymphocytes (left cluster). The corresponding density estimates for both channels are shown along the left and top axis. The CD3 threshold is located in a valley between the density peaks from both populations</p>
      </caption>
      <graphic xlink:href="bty082f1"/>
    </fig>
    <p>Several tools are based on sophisticated techniques from machine learning, i.e. dimensionality reduction, clustering and deep learning. They aim to eliminate the traditional approach of inspecting bivariate channels plots by considering all channels at once instead of only two at a time. While these methods have shown very good performance on many datasets (<xref rid="bty082-B3" ref-type="bibr">Amir <italic>et al.</italic>, 2013</xref>; <xref rid="bty082-B5" ref-type="bibr">Eulenberg <italic>et al.</italic>, 2017</xref>; <xref rid="bty082-B9" ref-type="bibr">Hennig <italic>et al.</italic>, 2017</xref>; <xref rid="bty082-B15" ref-type="bibr">Mair <italic>et al.</italic>, 2016</xref>), they still suffer from a few major drawbacks, especially pronounced for large sets of highly diverse FCM samples. First, in high-dimensional spaces, cells do not necessarily form distinct clusters that would be easily discoverable. Exemplary, <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2</xref> shows the t-SNE (<xref rid="bty082-B21" ref-type="bibr">Van Der Maaten, 2014</xref>) representation of data from Section 3.1. It is visible that both child populations are not distinct from each other. Consequently, for an approach solely based on this technology, it is highly difficult to gate both complex populations. Second, in order to describe populations of interest, the fine-tuning of a set of hyper-parameters is crucial and common to all tools, in particular in the context of small populations where the underlying machine learning task is quite challenging. Hyper-parameters are values controlling the result of an automated method, typically set by practitioners in a way that the outcome of the method is satisfactory. Often, hyper-parameters do not have an intuitive meaning, but relate to mathematical or algorithmic characteristics of the method. Depending on the method, practitioners might not have the required knowledge to set those optimally (<xref rid="bty082-B12" ref-type="bibr">Kvistborg <italic>et al.</italic>, 2015</xref>). In the presence of high sample diversity, fine-tuning such parameters is essential and might take a significant amount of time. Due to the difficulties in finding an optimal set of parameters, it is also complicated to compare such tools. Third, when incorporating machine learning, interpretability of results is limited (<xref rid="bty082-B14" ref-type="bibr">Lisboa, 2013</xref>), leading to a lack of general understanding of how such methods work. Hence, it is problematic to verify gates from a biological standpoint (<xref rid="bty082-B12" ref-type="bibr">Kvistborg <italic>et al.</italic>, 2015</xref>).</p>
    <p>In FCM studies, quality checking of results is an essential step in the accurate identification of populations, and ensures that no wrong conclusions are drawn from the data in later steps. For that reason, and also because of the familiarity with the traditional approach of inspecting bivariate density plots, for quality checking, manual gating is the current standard practice.</p>
    <p>FlowDensity (<xref rid="bty082-B16" ref-type="bibr">Malek <italic>et al.</italic>, 2015</xref>) takes another point of view and tries to automate the threshold selection based on density shape features. The algorithm can work in both an unsupervised or supervised fashion. When customizing thresholds on a per-population level, one or more channels are inspected, and density features such as differences in extrema, slope changes, or the number of peaks are examined, generally based on a pre-determined manual gating hierarchy. Gates in the form of channel thresholds are estimated, from which sub-populations can be extracted (<xref ref-type="fig" rid="bty082-F1">Fig. 1</xref>). Provided hyper-parameters are appropriately chosen, flowDensity offers a state-of-the-art tool for the accurate identification of cell populations that matches what would have been obtained through manual analysis (<xref rid="bty082-B6" ref-type="bibr">Finak <italic>et al.</italic>, 2016</xref>). Once the rules for each population are set, thresholds are automatically and individually set for each new data file, similar to the manual tweaking that operators tend to do, but in a data-driven fashion. As a result, flowDensity results are robust, reproducible and the approach performs better than the manual alternative it is designed to match. However, undertaking a supervised setup does require a significant time component in order to obtain the optimal results.</p>
    <p>In this contribution, we present a novel software tool called ‘flowLearn’. Using density features, it works the same way as flowDensity, but does not require a practitioner to manually tune hyper-parameters for an optimized outcome. Rather, it works in a semi-supervised mode, and requires the gating of one or few characteristic samples by a human expert in the form of thresholds. These thresholds are then transferred to all samples in an automated way by means of so called derivative-based density alignments. In contrast to methods with a high-dimensional understanding of FCM data, our method does not have to deal with the problem of noise inherent to such spaces. It reduces the problem complexity by relying on traditional, prior biological knowledge. Besides this highly efficient and effective mode, it also opens the way towards a quality control of samples which have already been gated: By comparing optimal and predicted gates, it can identify samples that stand out, for example due to biological variation or differences in laboratory sample preparation and analysis. Furthermore, it can be used to spot problems in existing gating hierarchies, offering the possibility to be used to identify problematic gates. The absence of difficult-to-set hyper-parameters, combined with the use of a small amount of example gates makes our approach tractable. Results are easy to interpret and verify, and offer user-interactive adjustments on the predicted gates in specific circumstances. Using two large and diverse datasets for which accurately set and verified gates exist, and by comparing to two other recent state-of-the-art methods, DeepCyTOF (<xref rid="bty082-B13" ref-type="bibr">Li <italic>et al.</italic>, 2017</xref>) and FlowSOM (<xref rid="bty082-B22" ref-type="bibr">Van Gassen <italic>et al.</italic>, 2015</xref>), we demonstrate flowLearn’s superiority for the classical and practically very relevant setting of comparably low dimensional data and imbalanced populations. It exhibits high to very high accuracy in terms of predicted cell frequencies and <italic>F</italic><sub>1</sub>-measures of identified populations, having low computational complexity.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Pipeline</title>
      <p>FlowLearn is based on four main steps that are depicted in <xref ref-type="fig" rid="bty082-F2">Figure 2</xref>. In the following, we will describe these steps in more detail. A more detailed procedure on how to apply flowLearn to a set of samples and populations is given by Algorithm 1.
</p>
      <fig id="bty082-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>FlowLearn pipeline to gate one population in four consecutive steps: (1) Input to our tool is a set of related FCS files (samples). (2) On each sample, it solves the task of extracting sub-populations from a given parent-population. To achieve this, marker channel densities of the desired population are calculated and a pairwise comparison of all densities is performed. (3) Based on the resulting distances, one or more prototype(s) (red) are selected, for which manual gating is performed. (4) Each prototype density is aligned to all other densities which makes it possible to predict thresholds by transfer between the aligned densities (blue) (Color version of this figure is available at <italic>Bioinformatics</italic> online.)</p>
        </caption>
        <graphic xlink:href="bty082f2"/>
      </fig>
      <sec>
        <title>1: Input FCM data</title>
        <p>We define a dataset <inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> as a collection of <italic>N</italic> related samples generated using the same panel of antibodies. Each sample contains a set of cells with marker-based measurements of fluorescent intensities, and any subset is called a population. In the following, we assume a population with <italic>M</italic> cells, and each cell has measurements in the form of marker intensities. We define a marker channel for sample <italic>s<sub>i</sub></italic> as the set <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mi>M</mml:mi></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> of marker intensity measurements for all <italic>M</italic> cells. The set of marker channels is experiment-specific, and used across all samples. Furthermore, a sample-specific channel threshold <italic>t<sub>i</sub></italic> splits up a given channel into two distinct sub-populations <inline-formula id="IE4"><mml:math id="IM4"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE5"><mml:math id="IM5"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, such that <inline-formula id="IE6"><mml:math id="IM6"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>∅</mml:mo></mml:mrow></mml:math></inline-formula>. A gate is defined by a set of thresholds for one or more channels and can delineate sub-populations from a given parent population. Last, a gating hierarchy is the consecutive extraction of sub-populations, starting with one root population that usually contains all cells in the FCS file. It is assumed that the gating hierarchy for a dataset is known, meaning that for each parent population, the set of channels to gate is given.</p>
      </sec>
      <sec>
        <title>2: Density estimation</title>
        <p>Given a parent cell population, from which sub-populations should be gated, for each sample and channel to gate, flowLearn uses kernel density estimation to generate a unique density profile over a regular grid of 512 points (Algorithm 1, lines 4–9). It uses a Gaussian kernel with a bandwidth determined by Silverman’s rule of thumb (<xref rid="bty082-B19" ref-type="bibr">Silverman, 1986</xref>). To avoid difficulties in later alignments (step 4), the calculated densities are smoothed by fitting a cubic spline function. In the following, a density for channel <italic>C<sub>i</sub></italic> is denoted as <inline-formula id="IE8"><mml:math id="IM8"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <italic>g</italic> estimates and smoothes a density from a given channel and parent population in sample <italic>s<sub>i</sub></italic>. In the resulting distributions, pronounced cell populations are visible as density peaks (<xref ref-type="fig" rid="bty082-F1">Fig. 1</xref>). All further processing is done on the <italic>N</italic> densities for each channel only. For clustering in the next step, pairwise <italic>L</italic><sub>1</sub> distances between all densities are calculated as well.</p>
      </sec>
      <sec>
        <title>3: Example gates</title>
        <p>The alignment (step 4) of two channel densities can be inaccurate if they are very different from each other. In that case, thresholds might be transferred wrongly. To prevent this, flowLearn selects prototypes that define sample groups (Algorithm 1, line 12). Parameterized with the number of prototypes <italic>n<sub>p</sub></italic>, it clusters all densities for each channel and selects <italic>n<sub>p</sub></italic> samples that represent each set accurately. We found that for this task, a k-medoids clustering (<xref rid="bty082-B7" ref-type="bibr">Friedman <italic>et al.</italic>, 2001</xref>) with <italic>k </italic>=<italic> n<sub>p</sub></italic> worked best. In this approach, similar densities are characterized by their absolute difference (<italic>L</italic><sub>1</sub> distance). Experiments using other distances for clustering, for example the alignment distance, showed worse results. The number of prototypes should be chosen according to the sample diversity in the dataset, and desired gating accuracy. While often <italic>n<sub>p</sub></italic> = 1 shows very good results (Section 4), with increasing complexity, <italic>n<sub>p</sub></italic> should be increased accordingly. It is worth to note that, first, <italic>n<sub>p</sub></italic> can be different for different channels, depending on the data complexity, and second, prototypes for different channels are not necessarily from the same sample.</p>
        <p>Next, having the prototypes identified, it is the task of an expert analyst to set gates as accurate as possible, resulting in prototype thresholds (Algorithm 1, line 13). A gate that delineates two populations can be given by lower and upper thresholds for at least one channel. In <xref ref-type="fig" rid="bty082-F1">Figure 1</xref>, the T-cell population (right cluster) is defined by a lower threshold on the CD3 channel, meaning that all cells with higher CD3 intensity belong to the target population. The CD3 threshold is located in a valley between the density peaks from both populations. If necessary, an upper threshold can be set as well, even though it is not necessary in this particular example. Also, here the SSC-A channel is irrelevant for gating. A gate can be defined by more than one channel, where two channels are usually chosen for the ease of visualization and interpretability. A limitation is that prototype thresholds have to be perpendicular to the channel axes, though current efforts are focused on addressing this.
<boxed-text id="bty082-BOX1" position="float" orientation="portrait"><caption><p><bold>Algorithm 1</bold> Applying flowLearn to gate all populations in a given set of FCS files: First, densities are calculated once for all channels. Second, prototype densities are identified and manually gated. Third, all other densities are aligned to the prototypes and thresholds are transferred. This is repeated for each population of interest, starting with all cells.</p></caption><p><bold>Input:</bold> set of <italic>N</italic> FCS files, gating hierarchy <italic>H</italic></p><p>1: <inline-formula id="IE9"><mml:math id="IM9"><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>P</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> all cells</p><p>2: <inline-formula id="IE10"><mml:math id="IM10"><mml:mrow><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mi>P</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> next in <italic>H</italic></p><p>3: <bold>while</bold> not all populations in <italic>H</italic> gated <bold>do</bold></p><p>4:  <bold>for</bold> all FCS files <italic>s<sub>i</sub></italic><bold>do</bold> ▹ Calculate densities once</p><p>5:    <inline-formula id="IE11"><mml:math id="IM11"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> cells matching <italic>parentPopulation</italic> in <italic>s<sub>i</sub></italic></p><p>6:    <bold>for</bold> all channels <italic>j</italic><bold>do</bold></p><p>7:     <inline-formula id="IE12"><mml:math id="IM12"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> density on <italic>j</italic>-th channel for cells in <italic>Z<sub>i</sub></italic></p><p>8:    <bold>end for</bold></p><p>9:  <bold>end for</bold></p><p>10:  <bold>for</bold> all considered channels <italic>j</italic><bold>do</bold>▹ Predict thresholds</p><p>11:    <inline-formula id="IE13"><mml:math id="IM13"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> distances between all densities <inline-formula id="IE14"><mml:math id="IM14"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>∀</mml:mo></mml:mrow></mml:math></inline-formula> samples <italic>i</italic></p><p>12:    <inline-formula id="IE15"><mml:math id="IM15"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula><italic>n<sub>p</sub></italic> prototype densities, w.r.t. <italic>D<sub>j</sub></italic></p><p>13:    let expert set reference threshold(s) on each density in <italic>P<sub>j</sub></italic></p><p>14:    <bold>for</bold> all non-prototype densities <italic>m</italic><bold>do</bold></p><p>15:     <inline-formula id="IE16"><mml:math id="IM16"><mml:mrow><mml:mi>p</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> nearest prototype w.r.t. <italic>D<sub>j</sub></italic></p><p>16:     <inline-formula id="IE17"><mml:math id="IM17"><mml:mrow><mml:mi>a</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> DDTW alignment between <italic>m</italic> and <italic>p</italic></p><p>17:     transfer reference threshold(s) from <italic>p</italic> to <italic>m</italic> using <italic>a</italic></p><p>18:    <bold>end for</bold></p><p>19:  <bold>end for</bold></p><p>20:  gate <italic>childPopulation</italic> using reference and predicted thresholds</p><p>21:  <inline-formula id="IE18"><mml:math id="IM18"><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>P</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>←</mml:mo><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mi>P</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:math></inline-formula></p><p>22:  <inline-formula id="IE19"><mml:math id="IM19"><mml:mrow><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mi>P</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>←</mml:mo></mml:mrow></mml:math></inline-formula> next in <italic>H</italic></p><p>23: <bold>end while</bold></p></boxed-text></p>
      </sec>
      <sec>
        <title>4: Alignment and gate transfer</title>
        <p>Given a prototype sample with density <italic>d<sub>p</sub></italic>, a known prototype threshold <italic>t<sub>p</sub></italic>, and another sample’s density <italic>d<sub>i</sub></italic>, flowLearn is a function <inline-formula id="IE20"><mml:math id="IM20"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic>t<sub>i</sub></italic> is the unknown true threshold in <italic>d<sub>i</sub></italic>. FlowLearn (Algorithm 1, lines 14–18) uses density alignment, Derivative Dynamic Time Warping (DDTW) (<xref rid="bty082-B10" ref-type="bibr">Keogh and Pazzani, 2001</xref>) in particular. Illustrated in <xref ref-type="fig" rid="bty082-F3">Figure 3</xref>, each point in the red-dashed prototype density <italic>d<sub>p</sub></italic> is matched with a point in the solid-black test density <italic>d<sub>i</sub></italic>. This makes it possible to transfer the known thresholds <italic>t<sub>p</sub></italic> to predicted thresholds <inline-formula id="IE21"><mml:math id="IM21"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. The resulting threshold prediction on the right contains both <italic>t<sub>i</sub></italic> (red) and <inline-formula id="IE22"><mml:math id="IM22"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (blue) with a nearly perfect match. In contrast to regular Dynamic Time Warping, DDTW does not compare absolute density values, but uses local derivatives instead. This way, DDTW puts more focus on aligning shapes. More specifically, because of differences in the size of cell populations, the associated density peaks can locally differ in height, which constitutes a problem for regular DTW: because it only compares absolute height values, local differences make it difficult to align the corresponding density regions (<xref rid="bty082-B10" ref-type="bibr">Keogh and Pazzani, 2001</xref>). This effect can be remedied by considering derivatives instead. In the case of aligning FCM densities, this is the preferred way, because thresholds are mostly characterized by density features such as extrema or slope changes (<xref rid="bty082-B16" ref-type="bibr">Malek <italic>et al.</italic>, 2015</xref>). Using flowLearn, it is also possible to gate rare populations by the alignment of density tails. Additional information is shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>. The idea of alignment has already been proposed in the technology dubbed per-channel basis normalization (<xref rid="bty082-B8" ref-type="bibr">Hahne <italic>et al.</italic>, 2010</xref>). Here, specific density landmarks are identified and aligned. By using parameter-less shape matching for arbitrary shapes, flowLearn improves on this. In particular, it can take into account rare populations, which are not easily captured by using parameterized density models as in per-channel basis normalization.
</p>
        <fig id="bty082-F3" orientation="portrait" position="float">
          <label>Fig. 3.</label>
          <caption>
            <p>Example of how thresholds are transferred using DDTW alignments. Top: The red-dashed prototype density <italic>d<sub>p</sub></italic> is aligned to the solid-black test density <italic>d<sub>i</sub></italic>. The transfer of threshold location is indicated by an arrow. Bottom: Test density <italic>d<sub>i</sub></italic> with predicted (blue) and true (red) thresholds, <inline-formula id="IE23"><mml:math id="IM23"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <italic>t<sub>i</sub></italic>, respectively. Both thresholds match up well (Color version of this figure is available at <italic>Bioinformatics</italic> online.)</p>
          </caption>
          <graphic xlink:href="bty082f3"/>
        </fig>
      </sec>
    </sec>
    <sec>
      <title>2.2 Evaluation measures</title>
      <p>We evaluate our method by assessing its performance per predicted population: For that task, we use two measures. First we calculate difference percentages in median cell frequencies <inline-formula id="IE24"><mml:math id="IM24"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>median</mml:mtext><mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mtext>median</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula> where, for each sample <italic>i</italic>, <italic>f<sub>i</sub></italic> and <inline-formula id="IE25"><mml:math id="IM25"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>f</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are cell frequencies of a given population with regard to the ground truth and predicted gates, respectively. Second, we calculated <italic>F</italic><sub>1</sub>-measures for all ground truth and predicted populations: Given one sample and population, for one or more channels, true and predicted thresholds, <italic>t<sub>i</sub></italic> and <inline-formula id="IE26"><mml:math id="IM26"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, define a gate. Furthermore, a sub-population is defined by all cells that fall within the gate, i.e. have larger/smaller density than the lower/upper threshold for each involved channel. For the sub-population, the true and predicted set of cells, <italic>S</italic> and <inline-formula id="IE27"><mml:math id="IM27"><mml:mrow><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, are known. Then the performance on this particular population and sample is defined by <inline-formula id="IE28"><mml:math id="IM28"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mtext>precision</mml:mtext><mml:mo>·</mml:mo><mml:mtext>recall</mml:mtext></mml:mrow><mml:mrow><mml:mtext>precision</mml:mtext><mml:mo>+</mml:mo><mml:mtext>recall</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>, where precision and recall are calculated in terms of <italic>S</italic> and <inline-formula id="IE29"><mml:math id="IM29"><mml:mrow><mml:mover accent="true"><mml:mi>S</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>. While analysts are mostly interested in the accuracy of cell frequencies, using the <italic>F</italic><sub>1</sub>-score for evaluation provides an additional, more informative measure. It is worth to note, that even though thresholds might differ significantly, the agreement of population memberships as measured by the <italic>F</italic><sub>1</sub>-score can still be high. This is the case when thresholds differ in regions with only a low number of cells.</p>
    </sec>
    <sec>
      <title>2.3 Quality checking cell population thresholds</title>
      <p>Thresholds might be predicted wrongly either because of sample diversity (i.e. failed alignments with too different prototypes), or because of gates that were set wrongly in the first place. The prediction capabilities and evaluation measures of flowLearn can alternatively be used as a tool for detecting such irregularities in a given set of samples and already existing gates. Samples with deviant <italic>F</italic><sub>1</sub>-scores can be an indication of unexpected biological variation, differences in reagent preparation and analysis, or wrongly set thresholds. Our method give clues to an expert to further analyze identified, possibly problematic samples or gates. Given an input dataset with existing gates in the form of channel thresholds, quality checking is performed as follows. Similar to Algorithm 1, for each analyzed population:
<list list-type="order"><list-item><p>Use flowLearn to identify <italic>n<sub>p</sub></italic> prototype densities.</p></list-item><list-item><p>Let flowLearn gate all other non-prototype samples.</p></list-item><list-item><p>Compare predicted populations with ones defined by existing gates.</p></list-item><list-item><p>Samples with significant deviation from the average <italic>F</italic><sub>1</sub>-score suggest problems or give hint to unexpected biological variation.</p></list-item></list></p>
      <p>FlowLearn provides the functionality to identify such outlier samples. Considering the distribution of <italic>F</italic><sub>1</sub>-scores in a given population, it uses the rule of thumb (<xref rid="bty082-B20" ref-type="bibr">Upton and Cook, 1996</xref>) that outliers are given by samples with <inline-formula id="IE30"><mml:math id="IM30"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mn>1.5</mml:mn><mml:mo>·</mml:mo><mml:mtext>IQR</mml:mtext></mml:mrow></mml:math></inline-formula>, where <italic>Q</italic><sub>1</sub> is the 25%-quantile and <inline-formula id="IE31"><mml:math id="IM31"><mml:mrow><mml:mtext>IQR</mml:mtext></mml:mrow></mml:math></inline-formula> is the inter-quartile-range of the distribution of <italic>F</italic><sub>1</sub>-values.</p>
    </sec>
    <sec>
      <title>2.4 Implementation and computational complexity</title>
      <p>FlowLearn is available as an <monospace>R</monospace>-package. By default, using the <monospace>density</monospace> function, flowLearn uses a smoothed Gaussian kernel density estimate with a granularity of <italic>G</italic> = 512 points. This setting is a good compromise between speed and accuracy: For coarse densities, the alignment is fast, however prediction accuracy will suffer. The subsequent spline fitting is performed using <monospace>R</monospace>’s <monospace>smooth.spline</monospace> function. For prototype selection, the function <monospace>pam</monospace> of the package <monospace>cluster</monospace> is used. Furthermore, we use the <monospace>dtw</monospace> package for alignment and a robust estimate (<xref rid="bty082-B10" ref-type="bibr">Keogh and Pazzani, 2001</xref>) of derivative <inline-formula id="IE32"><mml:math id="IM32"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math></inline-formula>. FlowLearn provides separate methods to identify prototype densities and to predict other samples from there. This way, it can be integrated into existing analysis pipelines.</p>
      <p>Computational time complexity of the gating of one population can be broken down into multiple steps. First, density calculation and spline fitting (Algorithm 1, lines 4–9) is performed in <inline-formula id="IE33"><mml:math id="IM33"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>G</mml:mi><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:mo>⁡</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE34"><mml:math id="IM34"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>·</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. The distance matrix calculation and subsequent prototype selection (Algorithm 1, lines 11–12) is done in <inline-formula id="IE35"><mml:math id="IM35"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. By using warping window constraints, DDTW takes place in <inline-formula id="IE36"><mml:math id="IM36"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>N</mml:mi><mml:mo>·</mml:mo><mml:mi>G</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Consequently, flowLearn has quadratic time and memory complexity, however practical requirements are very low (Section 4.3).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Study design and evaluation datasets</title>
    <p>To demonstrate flowLearn’s capabilities to accurately identify populations on a large number of samples, we evaluated it on two distinct datasets (Mice, FlowCAP). Both datasets were used in real-world applications, contain diverse samples, and were augmented with carefully set gates in the form of channel thresholds. For each sample and cell population in both datasets, flowLearn identified <italic>n<sub>p</sub></italic> prototypes, and predicted gates on the remaining test samples using only the prototypes as a reference. For each population, median cell frequencies and <italic>F</italic><sub>1</sub>-scores are reported to assess flowLearn’s performance on these data. Furthermore, we compared our results on the Mice dataset with two recent state-of-the-art gating tools for identifying cell populations, DeepCyTOF (<xref rid="bty082-B13" ref-type="bibr">Li <italic>et al.</italic>, 2017</xref>) and FlowSOM (<xref rid="bty082-B22" ref-type="bibr">Van Gassen <italic>et al.</italic>, 2015</xref>).</p>
    <sec>
      <title>3.1 Mice data</title>
      <p>As part of a large study to identify gene-immunophenotype associations in mice (<xref rid="bty082-B4" ref-type="bibr">Brown and Moore, 2012</xref>), 2665 FCS files from mice bone marrow samples (experiment details given in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>) were gated, first manually and then using flowDensity, and independently verified. By looking at the variability of resulting cell proportions, the flowDensity gates were found to be superior to manual gates. Hence, flowDensity gates were used as the gold standard for this study. In the following experiments, we refer to these curated thresholds as true gates. The mean cell frequencies of 16 cell populations (relative to the parent population) range from 0.2 to 50%, covering a wide biological diversity, including very rare populations.</p>
    </sec>
    <sec>
      <title>3.2 FlowCAP data</title>
      <p>We evaluated flowLearn on a second dataset from the FlowCAP (Flow Cytometry: Critical Assessment of Population Identification Methods) consortium (<xref rid="bty082-B6" ref-type="bibr">Finak <italic>et al.</italic>, 2016</xref>). FlowCAP provides the means to objectively test methods for the identification of cell populations, and puts out state-of-the-art datasets with which it is possible to compare tools to manual analysis by experts. In the context of the FlowCAP-III competition, seven participating centers were given the task to analyze three samples. For each sample, three replicates were analyzed, and for each replicate, sub-populations in four datasets [B cells, T cells, Regulatory T cells (T-reg), Dendritic Cells (DC)] were identified independently from each center. Manual gating was performed by a central site. For each dataset, a total of 63 FCS files were available for evaluation. Since flowLearn currently uses channel thresholds, we used only populations with rectangular gates, 54 in total. Mean cell frequencies (relative to the parent population) range from 0.4 to <inline-formula id="IE37"><mml:math id="IM37"><mml:mrow><mml:mn>70</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula>. Even though, all centers were advised to follow reagent and analysis standardization, technical variation between centers was still large (<xref rid="bty082-B6" ref-type="bibr">Finak <italic>et al.</italic>, 2016</xref>), leading to a greater sample diversity in this dataset. This effect is also pronounced in the densities estimated by flowLearn, i.e. the sample diversity is captured in the densities as well. For illustration, we used t-SNE (<xref rid="bty082-B21" ref-type="bibr">Van Der Maaten, 2014</xref>) to project densities to two dimensions. In <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref> it is visible that within-center densities are more similar to each other than to other centers, indicating between-center variability.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <sec>
      <title>4.1 Mice data</title>
      <p>For each population of the Mice dataset (2665 samples of clean CD45 bone marrow cells), we gated a small number of <inline-formula id="IE38"><mml:math id="IM38"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mn>50</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> prototypes (using flowDensity and manual curation). These thresholds were transferred to all samples by the described flowLearn protocol. We refer to those thresholds as the predicted ones. <xref ref-type="fig" rid="bty082-F4">Figure 4</xref> shows the result of <italic>n<sub>p</sub></italic> = 1, where results on all 2664 test samples per population are represented by boxplots. Distributions of true and predicted cell frequencies match up well, with <inline-formula id="IE39"><mml:math id="IM39"><mml:mrow><mml:mtext>mean</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE40"><mml:math id="IM40"><mml:mrow><mml:mi>min</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.0001</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE41"><mml:math id="IM41"><mml:mrow><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.22</mml:mn></mml:mrow></mml:math></inline-formula>), taken over all populations. Additionally, in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S33 and S34</xref>, it is visible that errors of both predicted thresholds and cell frequencies are concentrated near zero for all datasets. Also, predicted gates are accurate with respect to extracted cell populations, specifically we have <inline-formula id="IE42"><mml:math id="IM42"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0.99</mml:mn></mml:mrow></mml:math></inline-formula> for the majority (9/16) of populations and <inline-formula id="IE43"><mml:math id="IM43"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0.90</mml:mn></mml:mrow></mml:math></inline-formula> for the large majority (15/16). Rare populations such as T cells (4% of parent) and Plasma cells (0.2% of parent) show high performance. The CD43 population’s low variability could not be matched (<xref ref-type="supplementary-material" rid="sup1">Supplementary Section S5</xref>). For some populations, a minority of samples with lower <italic>F</italic><sub>1</sub>-scores exist, including outliers (represented as dots) with poor <italic>F</italic><sub>1</sub>-score. Choosing the number of prototypes <inline-formula id="IE44"><mml:math id="IM44"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> increases performance significantly, especially for populations with initially low performance (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S8–S12</xref>). For the HFC population, choosing <italic>n<sub>p</sub></italic> = 10 increases the result to <inline-formula id="IE45"><mml:math id="IM45"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0.94</mml:mn></mml:mrow></mml:math></inline-formula>.
</p>
      <fig id="bty082-F4" orientation="portrait" position="float">
        <label>Fig. 4.</label>
        <caption>
          <p>Results on the Mice dataset using one prototype. Left: True and predicted cell frequencies for each population. Right: <italic>F</italic><sub>1</sub>-scores for each population (2665 samples). Outliers are shown as single dots. Populations HFA to HFF stand for Hardy-Fraction A to F (explained in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>). Populations denoted with an asterisk are non-biological (technical) populations</p>
        </caption>
        <graphic xlink:href="bty082f4"/>
      </fig>
    </sec>
    <sec>
      <title>4.2 FlowCAP data</title>
      <p>On the FlowCAP data, we ran flowLearn using <inline-formula id="IE46"><mml:math id="IM46"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>11</mml:mn><mml:mo>,</mml:mo><mml:mn>20</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> prototype(s). As the dataset contained only 63 samples, we chose <italic>n<sub>p</sub></italic> = 7 prototypes (i.e. one prototype per center). <xref rid="bty082-T1" ref-type="table">Table 1</xref> shows a statistic for difference percentages in cell frequencies for all datasets. The average differences were low, ranging from 5 to 14 percent. While for some populations, differences were negligible, for other populations, differences were large. Furthermore, a summary of <italic>F</italic><sub>1</sub>-scores is shown in <xref ref-type="fig" rid="bty082-F5">Figure 5</xref>, where the minimum and average population <inline-formula id="IE47"><mml:math id="IM47"><mml:mrow><mml:mtext>median</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>-scores, depending on <italic>n<sub>p</sub></italic> is displayed for each dataset. Performance depended on both the population and more strongly on the chosen number of prototypes. Considering all datasets, for <italic>n<sub>p</sub></italic> = 7 (number of centers), 20/64 populations achieve <inline-formula id="IE48"><mml:math id="IM48"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0.99</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE49"><mml:math id="IM49"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0.90</mml:mn></mml:mrow></mml:math></inline-formula> for 51/64 populations. Results on other populations are not as good when only few prototypes (<inline-formula id="IE50"><mml:math id="IM50"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:math></inline-formula>) are chosen, and are generally not as good as on the Mice dataset. In general, choosing more prototypes yields higher <italic>F</italic><sub>1</sub> values. Especially for populations that perform poorly, increasing <italic>n<sub>p</sub></italic> significantly increases performance. Results for all datasets can be found in the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S13–S32</xref>).
<table-wrap id="bty082-T1" orientation="portrait" position="float"><label>Table 1.</label><caption><p>For each dataset, minimum, average and maximum difference percentages in cell frequencies</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col valign="top" align="left" span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/><col valign="top" align="char" char="." span="1"/></colgroup><thead><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Mice</th><th rowspan="1" colspan="1">DC</th><th rowspan="1" colspan="1">T-cells</th><th rowspan="1" colspan="1">T-reg</th><th rowspan="1" colspan="1">B-cells</th></tr><tr><th rowspan="1" colspan="1"><italic>n<sub>p</sub></italic></th><th rowspan="1" colspan="1">1</th><th rowspan="1" colspan="1">7</th><th rowspan="1" colspan="1">7</th><th rowspan="1" colspan="1">7</th><th rowspan="1" colspan="1">7</th></tr></thead><tbody><tr><td rowspan="1" colspan="1"><inline-formula id="IE51"><mml:math id="IM51"><mml:mrow><mml:mi>min</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td rowspan="1" colspan="1">0.0001</td><td rowspan="1" colspan="1">0.01</td><td rowspan="1" colspan="1">0.001</td><td rowspan="1" colspan="1">0.001</td><td rowspan="1" colspan="1">0.002</td></tr><tr><td rowspan="1" colspan="1"><inline-formula id="IE52"><mml:math id="IM52"><mml:mrow><mml:mtext>mean</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td rowspan="1" colspan="1">0.05</td><td rowspan="1" colspan="1">0.11</td><td rowspan="1" colspan="1">0.13</td><td rowspan="1" colspan="1">0.14</td><td rowspan="1" colspan="1">0.08</td></tr><tr><td rowspan="1" colspan="1"><inline-formula id="IE53"><mml:math id="IM53"><mml:mrow><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td rowspan="1" colspan="1">0.22</td><td rowspan="1" colspan="1">0.62</td><td rowspan="1" colspan="1">0.13</td><td rowspan="1" colspan="1">0.14</td><td rowspan="1" colspan="1">0.22</td></tr></tbody></table></table-wrap></p>
      <fig id="bty082-F5" orientation="portrait" position="float">
        <label>Fig. 5.</label>
        <caption>
          <p>Results on the FlowCAP dataset, with minimum (circle) and mean (triangle) population performances for all four datasets, depending on the chosen number of prototypes</p>
        </caption>
        <graphic xlink:href="bty082f5"/>
      </fig>
    </sec>
    <sec>
      <title>4.3 Runtime</title>
      <p>For the Mice data (16 populations), gating and evaluating all 2665 samples using one prototype took one hour (1.3 s per sample). By exploiting parallelism, practical runtimes are low. When using <italic>n<sub>p</sub></italic> prototypes, flowLearn will perform <italic>n<sub>p</sub></italic> alignments per sample per population. Increasing <italic>n<sub>p</sub></italic> also linearly increases runtime. Again, for the Mice data, using <italic>n<sub>p</sub></italic> = 2 took 62 min (<italic>n<sub>p</sub></italic> = 10: 66 min, <italic>n<sub>p</sub></italic> = 50: 111 min). In all experiments, using a Dell M3800 laptop (Intel<sup>®</sup> Core<sup>TM</sup> i7-4712HQ processor), resident memory usage never exceeded 5 GB of RAM. These results indicate that flowLearn can be run on recent consumer laptops without problems.</p>
    </sec>
    <sec>
      <title>4.4 Comparison to DeepCyTOF and FlowSOM</title>
      <p>We compared flowLearn to two recent state-of-the-art methods for population identification, DeepCyTOF (<xref rid="bty082-B13" ref-type="bibr">Li <italic>et al.</italic>, 2017</xref>) and FlowSOM (<xref rid="bty082-B22" ref-type="bibr">Van Gassen <italic>et al.</italic>, 2015</xref>). DeepCyTOF exhibited very high <italic>F</italic><sub>1</sub>-scores on multiple datasets, being better than all best-performing methods on data from the FlowCAP-I competition (<xref rid="bty082-B1" ref-type="bibr">Aghaeepour <italic>et al.</italic>, 2013</xref>). In a recent study (<xref rid="bty082-B23" ref-type="bibr">Weber and Robinson, 2016</xref>), FlowSOM outperformed 18 competing tools. We ran both methods on the Mice dataset and compared results to the ones obtained by flowLearn (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S7</xref>). Details on the exact evaluation procedure can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>. Since these methods return disjoint clusters (only one cluster ID per cell), suitable populations are given by all leaf populations in the gating hierarchy. We evaluated <italic>F</italic><sub>1</sub>-scores in the same manner as for flowLearn. DeepCyTOF predicted seven out of ten populations with <inline-formula id="IE54"><mml:math id="IM54"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.75</mml:mn></mml:mrow></mml:math></inline-formula>, with <inline-formula id="IE55"><mml:math id="IM55"><mml:mrow><mml:mtext>mean</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.79</mml:mn></mml:mrow></mml:math></inline-formula>. FlowSOM was able to achieve <inline-formula id="IE56"><mml:math id="IM56"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.75</mml:mn></mml:mrow></mml:math></inline-formula> for four out of ten considered populations. Other populations were subpar. The FlowSOM average performance over all considered populations and samples, <inline-formula id="IE57"><mml:math id="IM57"><mml:mrow><mml:mtext>mean</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.53</mml:mn></mml:mrow></mml:math></inline-formula>, is similar to results obtained previously (<xref rid="bty082-B23" ref-type="bibr">Weber and Robinson, 2016</xref>). Using the same populations, and using <italic>n<sub>p</sub></italic> = 1 only, flowLearn achieved <inline-formula id="IE58"><mml:math id="IM58"><mml:mrow><mml:mtext>mean</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.94</mml:mn></mml:mrow></mml:math></inline-formula>, demonstrating flowLearn’s superiority on this data.</p>
      <p>Furthermore, we compared runtimes of DeepCyTOF, FlowSOM and flowLearn. On the Mice data, using ten populations, not including the one-time investment for training the deep network, DeepCyTOF was able to classify each sample in an average of one second. Using the same populations, FlowSOM was able to gate one sample in an average of 11 s which is in accordance with results reported in (<xref rid="bty082-B22" ref-type="bibr">Van Gassen <italic>et al.</italic>, 2015</xref>). On the same data, flowLearn predicted 2664 samples for one population in 1.37 min. For comparability, predicting ten populations with flowLearn takes 13.7 min, 0.31 s per sample. This does not include the time spent for providing manual gates to flowLearn.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Discussion</title>
    <p>On two state-of-the-art datasets, flowLearn achieves <inline-formula id="IE59"><mml:math id="IM59"><mml:mrow><mml:mtext>median</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-measures exceeding <inline-formula id="IE60"><mml:math id="IM60"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.99</mml:mn></mml:mrow></mml:math></inline-formula> for 20/64 (31%), and <inline-formula id="IE61"><mml:math id="IM61"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0.90</mml:mn></mml:mrow></mml:math></inline-formula> for 51/64 (80%) of all analyzed populations. It predicts populations with low bias and variance, using only few examples (Mice: <italic>n<sub>p</sub></italic> = 1, FlowCAP: <italic>n<sub>p</sub></italic> = 7). Hence, it is possible to gate very few training files to obtain excellent results for most cell populations for thousands of additional files. However, there are populations, for which it is difficult to predict gates (<inline-formula id="IE62"><mml:math id="IM62"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:mn>0.9</mml:mn></mml:mrow></mml:math></inline-formula>). We identified possible causes: First, we found that flowLearn can identify possible sample-based irregularities, in particular samples with densities that are significantly different from all other densities in a given dataset. Such differences might exist due to either biological diversity or anomalous sample reagent preparation and analysis. For example, the HFC population of the Mice dataset has many wrongly predicted samples with low <italic>F</italic><sub>1</sub>-score (<xref ref-type="fig" rid="bty082-F4">Fig. 4</xref>). Here, flowLearn identified all samples with <inline-formula id="IE63"><mml:math id="IM63"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:mn>0.56</mml:mn></mml:mrow></mml:math></inline-formula> as outliers. In all included box plots, these are shown as individual dots. By visualizing sample densities from that population, and coloring each sample by <italic>F</italic><sub>1</sub>-score in <xref ref-type="fig" rid="bty082-F6">Figure 6</xref>, it is visible that samples with <italic>F</italic><sub>1</sub>-score below the identified threshold form a distinct region, but not necessarily a separate cluster. <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3</xref> shows that this observation can be made for only one channel, giving more specific information about the source. Furthermore, a closer look at wrongly predicted HFC samples (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S4</xref>) explains their poor performance. While in the large majority of samples, the HFC population is very well pronounced, in samples with low <italic>F</italic><sub>1</sub>-score, it is either completely missing or pronounced only very weakly. This leads to wrongly set thresholds in the training data, or failed DTW alignments. Detecting such irregularities confirms flowLearn’s capabilities of being used as an appropriate tool for quality checking.
</p>
    <fig id="bty082-F6" orientation="portrait" position="float">
      <label>Fig. 6.</label>
      <caption>
        <p>t-SNE projection of Mice densities (HFC population) from one channel, colored by F1-score according to predictions using <italic>n<sub>p</sub></italic> = 1. Samples with low performance cluster together</p>
      </caption>
      <graphic xlink:href="bty082f6"/>
    </fig>
    <p>Next, we analyzed the sub-optimal performance of some populations in the FlowCAP dataset. Here, all datasets exhibit a wide diversity in terms of samples, centers and gates (<xref rid="bty082-B6" ref-type="bibr">Finak <italic>et al.</italic>, 2016</xref>). We observed that this variability impacts on the ability of flowLearn to correctly predict gates. An example is shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>, which shows the same T-cell/CD4 Effector population from two different FCS files and that densities and gates for the displayed channel are very different from each other. Despite the difference in both densities, the alignment looks correct. However, because of the difference in threshold locations, a threshold transfer will incorrectly predict the resulting gate. We observed similar effects on most other low-performing populations from the FlowCAP dataset. Reasons for wrongly predicted gates include differences in thresholds, failed alignments due to large differences in samples, and also few failed alignments even though samples were similar.</p>
    <p>To prevent wrong alignments due to large sample differences, flowLearn’s clustering approach is essential and picks prototypes that are representative for all other samples. In some cases (especially in the presence of high sample diversity) it can happen, that a prototype is wrongly aligned to all other samples, resulting in reduced prediction performance. The number of prototypes is important as well. We showed that flowLearn can accurately predict gates using only one prototype, but again, when there is high sample diversity, performance can be improved significantly by using more. The data might come from experiments in which samples can be categorized, for example into healthy/diseased or wild type/knockout, or samples were analyzed in different centers. In such cases where there is prior knowledge about the data, the number of prototypes should be chosen accordingly. Generally, performance depends on the heterogeneity of the observed densities. At present, the number of prototypes is set manually within the pipeline, but this choice could be automated in order to guarantee a sufficient sample homogeneity within every single prototype cluster.</p>
    <p>Last, when compared to two recent state-of-the-art methods, DeepCyTOF and FlowSOM, our method showed superior performance in terms of <italic>F</italic><sub>1</sub>-scores. While all methods aim to solve the same problem of identifying cell populations, it is worth to highlight that depending on the application, one might be better suited than another. FlowSOM has the advantage that it does not require any prior knowledge about the data at hand, in particular no manual gating is needed. Being completely unsupervised, however it is expected that it cannot perform as well as its supervised counterparts. Both DeepCyTOF and FlowSOM can be used for high-dimensional data such as from mass cytometry. In the case of DeepCyTOF, if addressing the difficult problem of automatically finding good hyper-parameters and network architectures (<xref rid="bty082-B11" ref-type="bibr">Klein <italic>et al.</italic>, 2016</xref>), it may be used for end-to-end machine learning, i.e. directly inferring biological variables from a given set of cells, without gating (<xref rid="bty082-B15" ref-type="bibr">Mair <italic>et al.</italic>, 2016</xref>). In contrast, flowLearn automates the prevalent paradigm of gating using channel thresholds for lower-dimensional data. This condition gives our tool an advantage over other tools that have to search a much larger function space. At the same time, being based on channel thresholds makes our results interpretable and adjustable, an advantage that is not directly given for other tools. Furthermore, DeepCyTOF and FlowSOM return assignments of disjoint cell populations. In a gating hierarchy, cells can have multiple labels, and assignment with such methods is difficult. Last, it is worth to note that in the right hands, by carefully choosing method parameters, both DeepCyTOF and FlowSOM may yield better results. In contrast, flowLearn’s parameters are robust and tuning is not necessary.</p>
  </sec>
  <sec>
    <title>6 Conclusion</title>
    <p>We have shown that flowLearn is able to accurately identify FCM cell populations. In a quality checking setting, flowLearn can also be used to identify both anomalous samples and aberrant thresholds from existing gatings. Using simple density alignments, on two diverse datasets it demonstrated good to excellent performance on a wide variety of populations, including very rare ones. This can be achieved using as few as only one gated sample, keeping invested resources for gating at a minimum level. Furthermore, on a large set of bone marrow samples, we have shown that flowLearn is superior to DeepCyTOF and FlowSOM, two top-performing methods according to recent comparisons. On highly diverse FCM samples such as from different datasets or centers, flowLearn shows its limitations, although in general, choosing more prototypes can increase performance significantly. The correct choice of reference densities is essential for prediction. In the future we will investigate more options to choose better prototypes, for example by including alignment properties or using averaged densities instead of the current prototype-based approach. It would also be beneficial to include confidence measures for the suitability of a given prototype, for example based on alignment distances. With that, one could judge the number of needed prototypes as well. Furthermore, we are interested in using alignments of two-dimensional densities, which would enable the usage of arbitrarily shaped gates. We are also working with third-party commercial tool vendors (e.g. FlowJo, FCSExpress) to extract the rotation required to bring thresholds orthogonal to the axis as required for our current implementation. Being based on the <monospace>R</monospace> ecosystem, flowLearn is ready to be included into existing FCM analysis pipelines, and offers improvements thereof in terms of gating quality and resource investment.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="bty082_supplementary.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank the SFU exchange student Jonathan Mendes de Almeida for his comprehensive testing of a variety of other machine learning methods. We would also like to thank all members of the 3i consortium for help in generating the bone marrow data, in particular Namita Saran, Keng Imm Hng, Anna Chan, Susana Caetano, Emma Cambridge, Anneliese Speak, Jacqueline White, David Adams, Adrian Hayday and all animal facility staff of the Wellcome Trust Sanger Institute involved in the project.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by the German-Canadian DFG international research training group ‘Computational Methods for the Analysis of the Diversity and Dynamics of Genomes’ (DiDy) GRK 1906/1, NSERC and Genome Canada [252FLO_Brinkman]. Research reported in this publication was supported in part by the National Institute Of Allergy And Infectious Diseases of the National Institutes of Health (NIH 1R01GM118417-01A1) under an Infrastructure and Opportunity Fund Award linked to Human Immunology Project Consortium Award Number [U19AI118608]. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health. This research was performed as a project of the Human Immunology Project Consortium and supported by the National Institute of Allergy and Infectious Diseases. Jonathan Mendes de Almeida was funded by a MITACS Globalink award. The bone marrow data was generated as part of the 3i consortium, a project funded by the Wellcome Trust [grant 100156/Z/12/Z].</p>
      <p><italic>Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bty082-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aghaeepour</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Critical assessment of automated flow cytometry data analysis techniques</article-title>. <source>Nat. Methods</source>, <volume>10</volume>, <fpage>228</fpage>–<lpage>238</lpage>.<pub-id pub-id-type="pmid">23396282</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Aghaeepour</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>A benchmark for evaluation of algorithms for identification of cellular correlates of clinical outcomes</article-title>. <source>Cytometry A</source>, <volume>89</volume>, <fpage>16</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">26447924</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Amir</surname><given-names>E.D.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>viSNE enables visualization of high dimensional single-cell data and reveals phenotypic heterogeneity of leukemia</article-title>. <source>Nat. Biotechnol</source>., <volume>31</volume>, <fpage>545</fpage>–<lpage>552</lpage>.<pub-id pub-id-type="pmid">23685480</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Brown</surname><given-names>S.D.</given-names></name>, <name name-style="western"><surname>Moore</surname><given-names>M.W.</given-names></name></person-group> (<year>2012</year>) 
<article-title>The international mouse phenotyping consortium: past and future perspectives on mouse phenotyping</article-title>. <source>Mamm. Genome</source>, <volume>23</volume>, <fpage>632</fpage>–<lpage>640</lpage>.<pub-id pub-id-type="pmid">22940749</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eulenberg</surname><given-names>P.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Reconstructing cell cycle and disease progression using deep learning</article-title>. <source>Nat. Commun.</source>, <volume>8</volume>, <fpage>463</fpage>.<pub-id pub-id-type="pmid">28878212</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Finak</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Standardizing flow cytometry immunophenotyping analysis from the human immunophenotyping consortium</article-title>. <source>Sci. Rep</source>., <volume>6</volume>, <fpage>20686</fpage>.<pub-id pub-id-type="pmid">26861911</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B7">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Friedman</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2001</year>). <source>The Elements of Statistical Learning</source>, Vol. <volume>1</volume>
<publisher-name>Springer Series in Statistics Springer</publisher-name>, 
<publisher-loc>Berlin</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty082-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hahne</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) 
<article-title>Per-channel basis normalization methods for flow cytometry data</article-title>. <source>Cytometry A</source>, <volume>77</volume>, <fpage>121</fpage>–<lpage>131</lpage>.<pub-id pub-id-type="pmid">19899135</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hennig</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>An open-source solution for advanced imaging flow cytometry data analysis using machine learning</article-title>. <source>Methods</source>, <volume>112</volume>, <fpage>201</fpage>–<lpage>210</lpage>.<pub-id pub-id-type="pmid">27594698</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B10">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Keogh</surname><given-names>E.J.</given-names></name>, <name name-style="western"><surname>Pazzani</surname><given-names>M.J.</given-names></name></person-group> (<year>2001</year>) Derivative dynamic time warping. In: <italic>Proceedings of the 2001 SIAM International Conference on Data Mining</italic>. SIAM, pp. 1–11.</mixed-citation>
    </ref>
    <ref id="bty082-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klein</surname><given-names>A.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Fast bayesian optimization of machine learning hyperparameters on large datasets</article-title>. <source>Proceedings of Machine Learning Research</source>, <volume>54</volume>, <fpage>528</fpage>–<lpage>536</lpage>.</mixed-citation>
    </ref>
    <ref id="bty082-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kvistborg</surname><given-names>P.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Thinking outside the gate: single-cell assessments in multiple dimensions</article-title>. <source>Immunity</source>, <volume>42</volume>, <fpage>591.</fpage><pub-id pub-id-type="pmid">25902473</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Gating mass cytometry data by deep learning</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>3423</fpage>–<lpage>3430</lpage>.<pub-id pub-id-type="pmid">29036374</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B14">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Lisboa</surname><given-names>P.J.</given-names></name></person-group> (<year>2013</year>) <chapter-title>Interpretability in machine learning—principles and practice</chapter-title> In: <person-group person-group-type="editor"><name name-style="western"><surname>Masulli</surname><given-names>F.</given-names></name></person-group><italic>et al.</italic> (eds) <source>International Workshop on Fuzzy Logic and Applications</source>. 
<publisher-name>Springer</publisher-name>, 
<publisher-loc>Cham, Switzerland</publisher-loc>, pp. 15–21.</mixed-citation>
    </ref>
    <ref id="bty082-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mair</surname><given-names>F.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>The end of gating? An introduction to automated analysis of high dimensional cytometry data</article-title>. <source>Eur. J. Immunol</source>., <volume>46</volume>, <fpage>34</fpage>–<lpage>43</lpage>.<pub-id pub-id-type="pmid">26548301</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Malek</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>flowdensity: reproducing manual gating of flow cytometry data by automated density-based cell population identification</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>606</fpage>–<lpage>607</lpage>.<pub-id pub-id-type="pmid">25378466</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Saeys</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>Computational flow cytometry: helping to make sense of high-dimensional immunology data</article-title>. <source>Nat. Rev. Immunol</source>., <volume>16</volume>, <fpage>449</fpage>–<lpage>462</lpage>.<pub-id pub-id-type="pmid">27320317</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B18">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Shapiro</surname><given-names>H.M.</given-names></name></person-group> (<year>2005</year>) <source>Practical Flow Cytometry</source>. 
<publisher-name>John Wiley &amp; Sons</publisher-name>, 
<publisher-loc>Hoboken, USA</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty082-B19">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Silverman</surname><given-names>B.W.</given-names></name></person-group> (<year>1986</year>) <source>Density Estimation for Statistics and Data Analysis</source>, Vol. <volume>26</volume>
<publisher-name>CRC Press</publisher-name>, 
<publisher-loc>Boca Raton, USA</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty082-B20">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Upton</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Cook</surname><given-names>I.</given-names></name></person-group> (<year>1996</year>) <source>Understanding Statistics</source>. 
<publisher-name>Oxford University Press</publisher-name>, 
<publisher-loc>Oxford, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="bty082-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Van Der Maaten</surname><given-names>L.</given-names></name></person-group> (<year>2014</year>) 
<article-title>Accelerating t-sne using tree-based algorithms</article-title>. <source>J. Mach. Learn. Res</source>., <volume>15</volume>, <fpage>3221</fpage>–<lpage>3245</lpage>.</mixed-citation>
    </ref>
    <ref id="bty082-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Van Gassen</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>Flowsom: using self-organizing maps for visualization and interpretation of cytometry data</article-title>. <source>Cytometry A</source>, <volume>87</volume>, <fpage>636</fpage>–<lpage>645</lpage>.<pub-id pub-id-type="pmid">25573116</pub-id></mixed-citation>
    </ref>
    <ref id="bty082-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Weber</surname><given-names>L.M.</given-names></name>, <name name-style="western"><surname>Robinson</surname><given-names>M.D.</given-names></name></person-group> (<year>2016</year>) 
<article-title>Comparison of clustering methods for high-dimensional single-cell flow and mass cytometry data</article-title>. <source>Cytometry A</source>, <volume>89</volume>, <fpage>1084</fpage>–<lpage>1096</lpage>.<pub-id pub-id-type="pmid">27992111</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

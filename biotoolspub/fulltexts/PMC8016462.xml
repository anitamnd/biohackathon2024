<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8016462</article-id>
    <article-id pub-id-type="pmid">33326008</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa1027</article-id>
    <article-id pub-id-type="publisher-id">btaa1027</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Data and Text Mining</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Collecting and managing taxonomic data with NCBI-taxonomist</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-6842-1229</contrib-id>
        <name>
          <surname>Buchmann</surname>
          <given-names>Jan P</given-names>
        </name>
        <xref ref-type="corresp" rid="btaa1027-cor1"/>
        <xref ref-type="aff" rid="btaa1027-aff1"/>
        <!--<email>jan.buchmann@sydney.edu.au</email>-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Holmes</surname>
          <given-names>Edward C</given-names>
        </name>
        <xref ref-type="aff" rid="btaa1027-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="btaa1027-aff1"><institution>Marie Bashir Institute for Infectious Diseases and Biosecurity, School of Life and Environmental Sciences and School of Medical Sciences, The University of Sydney</institution>, Sydney, <country country="AU">Australia</country></aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Wren</surname>
          <given-names>Jonathan</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btaa1027-cor1">To whom correspondence should be addressed. <email>jan.buchmann@sydney.edu.au</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-12-26">
      <day>26</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>22-23</issue>
    <fpage>5548</fpage>
    <lpage>5550</lpage>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>16</day>
        <month>11</month>
        <year>2020</year>
      </date>
      <date date-type="editorial-decision">
        <day>28</day>
        <month>11</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>11</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa1027.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>We present NCBI-taxonomist—a command-line tool written in Python that collects and manages taxonomic data from the National Center for Biotechnology Information (NCBI). NCBI-taxonomist does not depend on a pre-downloaded taxonomic database but can store data locally. NCBI-taxonomist has six commands to map, collect, extract, resolve, import and group taxonomic data that can be linked together to create powerful analytical pipelines. Because many lifescience databases use the same taxonomic information, the data managed by NCBI-taxonomist is not limited to NCBI and can be used to find data linked to taxonomic information present in other scientific databases.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>NCBI-taxonomist is implemented in Python 3 (≥3.8) and available at <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/janpb/ncbi-taxonomist">https://gitlab.com/janpb/ncbi-taxonomist</ext-link> and via PyPi (<ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/ncbi-taxonomist/">https://pypi.org/project/ncbi-taxonomist/</ext-link>), as a Docker container (<ext-link ext-link-type="uri" xlink:href="https://gitlab.com/janpb/ncbi-taxonomist/container_registry/">https://gitlab.com/janpb/ncbi-taxonomist/container_registry/</ext-link>) and Singularity (v3.5.3) image (<ext-link ext-link-type="uri" xlink:href="https://cloud.sylabs.io/library/jpb/ncbi-taxonomist">https://cloud.sylabs.io/library/jpb/ncbi-taxonomist</ext-link>). NCBI-taxonomist is licensed under the GPLv3.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Australian Laureate Fellowship</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FL170100022</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Retrieving and managing taxonomic information is central to many biological studies. Taxonomic information is often crucial metadata that helps in the organization of other biological datasets and represents a simple way to navigate and search the ever-increasing amount of data generated by genome-sequencing studies. Here, we present NCBI-taxonomist, a Python command line tool for the retrieval and handling of taxonomic information from the ‘Taxonomy Database’ (<xref rid="btaa1027-B5" ref-type="bibr">Sayers <italic>et al.</italic>, 2020</xref>) available at the National Center for Biotechnology Information (NCBI). The taxonomic information retrieved is stored as a cladogram based on phylogenetic concepts and encodes hierarchical relationships, in contrast to a standard phylogenetic tree that depicts evolutionary relationships.</p>
    <p>Each node in the cladogram is assigned to an unique integer, the taxid, that can be used to retrieve corresponding information, including the scientific name, rank and parent node, among others. Conveniently, taxids are commonly shared between life science databases. For example, taxids from the NCBI Taxonomy Database fetch the same taxa from Uniprot (<xref rid="btaa1027-B6" ref-type="bibr">UniProt Consortium, 2019</xref>). The taxonomic information from the Taxonomy Database can be queried and retrieved via Entrez (<xref rid="btaa1027-B5" ref-type="bibr">Sayers <italic>et al.</italic>, 2020</xref>). This enables efficient and specific data queries because the taxid automatically links to related information in Entrez databases. For example, the Entrez taxid for <italic>Homo sapiens</italic> is 9606. Every dataset in an Entrez database, for example nucleotide sequences, metagenomic data or assemblies, containing human data, contains this taxid as its metadata and can be found using this taxid in search queries. Therefore, knowing the taxid can help to search efficiently for data related to an organism or taxonomic rank. Taxids in the Entrez Taxonomy Database are assigned by the NCBI taxonomy group and therefore not globally unique, but widely shared among different databases, for example Uniprot.</p>
    <p>The Taxonomy Database can be queried via Entrez to map taxonomic names to taxids and vice versa, link taxids to different entries, obtain subtrees (i.e. all descending taxids for a specific taxid) and to construct more advanced taxonomic queries using boolean operators. These queries can be performed on the NCBI website or via the E-Utilities (<xref rid="btaa1027-B3" ref-type="bibr">Kans, 2020</xref>). The former approach is unfeasible to automate when performing multiple queries, while the latter requires some form of scripting to overcome downloading limitations and to extract the required information. NCBI-taxonomist is a command-line tool that can be integrated into scripts when required and uses entrezpy (<xref rid="btaa1027-B1" ref-type="bibr">Buchmann <italic>et al.</italic>, 2019</xref>) to communicate with Entrez, thereby facilitating the interaction with Entrez.</p>
    <p>Existing software that requires taxonomic data, for instance ETE3 (<xref rid="btaa1027-B2" ref-type="bibr">Huerta-Cepas <italic>et al.</italic>, 2016</xref>), is specialized for phylogenetic analysis and requires the user to download the whole taxonomic database from NCBI’s ftp server in advance when handling taxonomic data from NCBI (<ext-link ext-link-type="uri" xlink:href="https://ftp.ncbi.nih.gov/pub/taxonomy/">https://ftp.ncbi.nih.gov/pub/taxonomy/</ext-link>). The current size of the compressed taxonomic database download is approximately only 50 MB (Megabytes). However, the download consists of several files, together producing ∼354 MB of data, and contains dumps of the taxonomy database tables. These files need to be updated with every new release of the Taxonomy Database. This necessarily increases complexity because of the need to parse and maintain local taxonomy databases. In contrast, NCBI-taxonomist can retrieve taxonomic information on-demand and does not require the user to download the entire taxonomic database; rather, it can locally store taxonomic information. NCBI-taxonomist implements all operations that can be performed in NCBI’s Taxonomy Database, in addition to creating user defined groups for selected taxa and a more versatile sub-tree command. NCBI-taxonomist is written in Python 3 (≥3.8) and the only dependency outside of the Python standard library is entrezpy. All interactions with Entrez, such as the use of NCBI API keys or control of the request frequencies are handled by entrezpy and described in further detail in its documentation. Because we developed and maintain entrezpy, which itself has no external dependencies, NCBI-taxonomist is less prone to suffer ‘dependency hell’ (<ext-link ext-link-type="uri" xlink:href="https://en.wikipedia.org/wiki/Dependency_hell">https://en.wikipedia.org/wiki/Dependency_hell</ext-link>) and remain stable and available.</p>
    <p>NCBI-taxonomist is licensed under the GNU General Public License v3 (GPL v3) and can be downloaded from PyPi (<ext-link ext-link-type="uri" xlink:href="https://pypi.org/">https://pypi.org/</ext-link>). The source code is available at <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/janpb/ncbi-taxonomist">https://gitlab.com/janpb/ncbi-taxonomist</ext-link> and the documentation at <ext-link ext-link-type="uri" xlink:href="https://ncbi-taxonomist.readthedocs.io/en/latest/">https://ncbi-taxonomist.readthedocs.io/en/latest/</ext-link>. In addition, a Docker container and Singularity image (<xref rid="btaa1027-B4" ref-type="bibr">Kurtzer <italic>et al.</italic>, 2017</xref>) for NCBI-taxonomist including jq (<ext-link ext-link-type="uri" xlink:href="https://stedolan.github.io/jq/">https://stedolan.github.io/jq/</ext-link>) are available. The Docker container can be obtained using the command docker pull registry.gitlab.com/janpb/ncbi-taxonomist: latest and the Singularity container using the command singularity pull library://jpb/ncbi-taxonomist/ncbi-taxonomist.</p>
  </sec>
  <sec>
    <title>2 NCBI-taxonomist</title>
    <p>NCBI-taxonomist has six commands (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1A</xref>, see below), five of which can be linked via pipes on Unix-like systems to create more advanced pipelines. Results from NCBI-taxonomist queries are JSON objects and sent to standard output (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1B–E</xref>). This simplifies the writing of processing tools, for example viewers or using existing tools to process JSON data, such as jq (<ext-link ext-link-type="uri" xlink:href="https://stedolan.github.io/jq/">https://stedolan.github.io/jq/</ext-link>). For convenience, we also added XML output formats for each command. Because processing tab or comma separated outputs (TSV, CSV) are widely used, we show examples on the online manual how to use jq to select attributes from the JSON output and convert them into TSV or CSV. Individual NCBI-taxonomist commands can be chained together using pipes to create powerful, taxonomy-related pipelines for automated taxonomic retrieval and management; for instance, a collect command can be directly linked to create a local database and add the fetched taxa into a user specified group for later retrieval (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1A and E</xref>). The results of such pipelines can be used to create highly specific datasets for subsequent analyses. Several commands with the option to fetch data remotely from the Taxonomy Database can be used together with a local database, in which case the local query will run first. In such a situation local queries not producing a result will be tried remotely.</p>
    <fig id="btaa1027-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Usage examples for NCBI-taxonomist. NCBI-taxonomist commands are shown in black and the corresponding results in gray. Except for (<bold>D</bold>), only results in JSON are shown and partially shortened for clarity, indicated by #cut or red ellipsis. NCBI-taxonomist reports each result on one line as single JSON object or XML tree. $ indicates a terminal prompt. Examples (<bold>B</bold>)–(<bold>E</bold>) have line numbers shown on the left. (<bold>A</bold>) Schematic overview of NCBI-taxonomists’ operation and commands. Possible inputs are shown in the left, commands in the middle, and output or databases in the right column. The possible interactions are indicated by arrows. Cache indicates the internal cache of NCBI-taxonomist and STDOUT standard output, i.e. console output. Local DB and Entrez indicate a local and remote, Entrez database on NCBI, respectively. The numbers in the right column indicate the order NCBI-taxonomist solves queries if the corresponding arguments are given. (B) The collect command for taxid 9606. (C) Mapping accession, taxid and names. Line 5: mapping the accession AGA95798 from the Entrez Protein database in XML format. (D) The resolve command for taxid 9606, name ‘human’, and nucleotide accession MN069609. Resolving the lineages for accessions requires a mapping step. (E) Example of a more complex pipeline to create and query a local database. The cat command shows the common tree names in the file tree-names (lines 2–4). Line 5: Collecting taxa from Entrez for names in the file tree-name via standard input; Line 6: Importing taxa into the local database taxa.db; Line 7: create the group ‘tree’ in the local database for the imported taxa; Line 8: extract taxids for all species taxa using jq; Line 9: resolve the lineages for all collected species. Line 13: List all taxids in the group ‘tree’; Line 15: list all taxa between ranks ‘tribe’ and ‘family’ for taxid 694551</p>
      </caption>
      <graphic xlink:href="btaa1027f1"/>
    </fig>
    <sec>
      <title>2.1 Synonyms, homonyms and spelling mistakes</title>
      <p>Synonyms, homonyms or common spelling mistakes will be recognized by NCBI-taxonomist if they are stored in the Entrez Taxonomy database. Upper and lowercase names will be handled by NCBI taxonomist; for example, homo sapiens or HoMO SaPiEns will return data associated with the species name <italic>Homo sapien</italic>s, while keeping the initial spelling in the result output (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1D</xref>). If a taxonomic name is queried with known spelling mistakes known to Entrez, NCBI-taxonomist will associate the obtained result with the spelling of the given query, but only store the correctly spelled query in the local database. NCBI-taxonomist does not transform the given input names.</p>
    </sec>
    <sec>
      <title>2.2 Commands</title>
      <p>All available commands can be seen by invoking NCBI-taxonomist without any arguments, i.e. ncbi-taxonomist, and the usage for each command can be checked using the -<monospace>h flag, e.g. ncbi-taxonomist</monospace> map -h.</p>
      <p><monospace><bold>ncbi-taxonomist collect</bold></monospace> collects taxonomic information remotely from NCBI’s Taxonomy Database and converts each taxon into a corresponding JSON object. It accepts taxids and taxon names (known synonyms, GenBank, BLAST and common names) as input (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1B</xref>).</p>
      <p><monospace><bold>ncbi-taxonomist map</bold></monospace> maps taxids to taxon names, and vice versa. In addition, it can map sequence and protein accessions to taxids. Currently, accessions from the following Entrez databases are supported: assembly, bioproject, nucleotide and protein (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1C</xref>).</p>
      <p><monospace><bold>ncbi-taxonomist resolve</bold></monospace> resolves the lineages for taxids and taxon names (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1C</xref>). To resolve accessions, a simple pipeline comprising a mapping and resolving step can be created (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1D</xref>).</p>
      <p><monospace><bold>ncbi-taxonomist subtree</bold></monospace> extracts all lineages for specific ranks from given taxids or taxon names. If only one rank is given, only the taxonomic information for this rank is extracted. If an upper, that is, closer to the root, rank is specified, all lineages from the given rank to the lowest rank are returned. If a lower—further from the root—rank is given, all lineages from the lower rank to the root are returned. If an upper and lower rank are given, all lineages between these two ranks are returned (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1E</xref>).</p>
      <p><monospace><bold>ncbi-taxonomist group</bold></monospace> adds taxa obtained from a query to a user-specified group. Each taxon can belong to several groups. This allows the user to create specific collections based on non-taxonomic relations (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1E</xref>).</p>
      <p><monospace><bold>ncbi-taxonomist import</bold></monospace> reads query results from standard input and stores the taxa locally in an SQLite database. This allows the creation of experiment-specific taxonomy databases. It also stores the parsed taxa while printing the received input to standard output and therefore does not need to be the last step of a NCBI-taxonomist pipeline (<xref ref-type="fig" rid="btaa1027-F1">Fig. 1E</xref>).</p>
      <p>The versatility of NCBI-taxonomist allows it to be used for quick look-ups or to be integrated into more complex pipelines to manage or create experiment-specific taxonomic subsets. The ability to link taxonomic information to related datasets on NCBI and other life science databases via existing tools make NCBI-taxonomist a powerful approach to collecting and managing taxonomic data.</p>
    </sec>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the ARC Australian Laureate Fellowship [FL170100022] awarded to E.C.H.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa1027-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Buchmann</surname><given-names>J.P.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Entrezpy: a Python library to dynamically interact with the NCBI Entrez databases</article-title>. <source>Bioinformatics</source>, <volume>35</volume>, <fpage>4511</fpage>–<lpage>4514</lpage>.<pub-id pub-id-type="pmid">31077305</pub-id></mixed-citation>
    </ref>
    <ref id="btaa1027-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huerta-Cepas</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>ETE 3: reconstruction, analysis, and visualization of phylogenomic data</article-title>. <source>Mol. Biol. Evol</source>., <volume>33</volume>, <fpage>1635</fpage>–<lpage>1638</lpage>.<pub-id pub-id-type="pmid">26921390</pub-id></mixed-citation>
    </ref>
    <ref id="btaa1027-B3">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kans</surname><given-names>J.</given-names></string-name></person-group> (<year>2020</year>) Entrez Direct: E-utilities on the UNIX Command Line. In: Entrez Programming Utilities Help. Bethesda, MD, National Center for Biotechnology Information, US, 2010. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/books/NBK179288/">https://www.ncbi.nlm.nih.gov/books/NBK179288/</ext-link>.</mixed-citation>
    </ref>
    <ref id="btaa1027-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kurtzer</surname><given-names>G.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) 
<article-title>Singularity: scientific containers for mobility of compute</article-title>. <source>PLoS One</source>, <volume>12</volume>, <fpage>e0177459</fpage>.<pub-id pub-id-type="pmid">28494014</pub-id></mixed-citation>
    </ref>
    <ref id="btaa1027-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sayers</surname><given-names>E.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) 
<article-title>Database resources of the National Center for Biotechnology Information</article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>D9</fpage>–<lpage>D16</lpage>.<pub-id pub-id-type="pmid">31602479</pub-id></mixed-citation>
    </ref>
    <ref id="btaa1027-B6">
      <mixed-citation publication-type="journal">UniProt Consortium. (<year>2019</year>) 
<article-title>UniProt: a worldwide hub of protein knowledge</article-title>. <source>Nucleic Acids Res</source>., <volume>47</volume>, <fpage>D506</fpage>–<lpage>D515</lpage>.<pub-id pub-id-type="pmid">30395287</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

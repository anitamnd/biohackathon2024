<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group UK</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6746993</article-id>
    <article-id pub-id-type="publisher-id">49764</article-id>
    <article-id pub-id-type="doi">10.1038/s41598-019-49764-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>NeuRiPP: Neural network identification of RiPP precursor peptides</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9496-9407</contrib-id>
        <name>
          <surname>de los Santos</surname>
          <given-names>Emmanuel L. C.</given-names>
        </name>
        <address>
          <email>emzodls@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0000 8809 1613</institution-id><institution-id institution-id-type="GRID">grid.7372.1</institution-id><institution>Warwick Integrative Synthetic Biology Centre, School of Life Sciences, University of Warwick, Gibbet Hill Road, </institution></institution-wrap>Coventry, CV4 7AL United Kingdom </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>9</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>9</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>13406</elocation-id>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>5</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>8</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Significant progress has been made in the past few years on the computational identification of biosynthetic gene clusters (BGCs) that encode ribosomally synthesized and post-translationally modified peptides (RiPPs). This is done by identifying both RiPP tailoring enzymes (RTEs) and RiPP precursor peptides (PPs). However, identification of PPs, particularly for novel RiPP classes remains challenging. To address this, machine learning has been used to accurately identify PP sequences. Current machine learning tools have limitations, since they are specific to the RiPPclass they are trained for and are context-dependent, requiring information about the surrounding genetic environment of the putative PP sequences. NeuRiPP overcomes these limitations. It does this by leveraging the rich data set of high-confidence putative PP sequences from existing programs, along with experimentally verified PPs from RiPP databases. NeuRiPP uses neural network archictectures that are suitable for peptide classification with weights trained on PP datasets. It is able to identify known PP sequences, and sequences that are likely PPs. When tested on existing RiPP BGC datasets, NeuRiPP was able to identify PP sequences in significantly more putative RiPP clusters than current tools while maintaining the same HMM hit accuracy. Finally, NeuRiPP was able to successfully identify PP sequences from novel RiPP classes that were recently characterized experimentally, highlighting its utility in complementing existing bioinformatics tools.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Machine learning</kwd>
      <kwd>Genome informatics</kwd>
      <kwd>Natural products</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Introduction</title>
    <p id="Par2">Specialized metabolites from bacteria have been a source of bioactive chemical compounds with myriad applications especially in the pharmaceutical and agrochemical industries<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>. Advances in DNA sequencing technology and the development of computational tools to identify putative biosynthetic gene clusters (BGCs) have led to a renewed interest in exploring specialized metabolites from microbes as a potential source of novel compounds. Sequencing information has suggested that a large fraction of the biosynthetic potential of these microorganisms remains untapped and undetectable under normal laboratory conditions<sup><xref ref-type="bibr" rid="CR2">2</xref>,<xref ref-type="bibr" rid="CR3">3</xref></sup>. Ribosomally synthesized and post-translationally modified peptides (RiPPs) constitute a diverse class of natural products with a variety of different bioactivities. In contrast to peptide natural products from assembly-line non-ribosomal peptide synthetase (NRPS) pathways, RiPPs are derived from a ribosomally-encoded precursor peptide (PP) that is extensively modified by RiPP tailoring enzymes (RTEs)<sup><xref ref-type="bibr" rid="CR4">4</xref>,<xref ref-type="bibr" rid="CR5">5</xref></sup>. Beginning from ribosomally-encoded peptides makes RiPPs an attractive target for bioengineering as RTEs can be highly selective for recognition sequences in the PP while promiscuously processing other regions of the sequence<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>. Putative BGCs encoding RiPPs are identified computationally by looking for regions in a genome where there are co-occurences of RTEs and PPs. This makes it relatively easy to identify RiPP BGCs of known RiPP classes by looking for co-localization of RTEs specific to the particular RiPP class. Identification of putative PP sequences is more challenging as they are frequently missed in genome annotation due to their short size<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>. However, proper identification of PPs is an important aspect of <italic>in silico</italic> RiPP BGC analysis as knowledge of the PP sequence can aid in structure elucidation and provide information on the molecular interactions between the RTEs and the PP<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. To this end, several methods have been developed to identify putative PPs in regions in proximity to RTEs. This typically involves a two-step process where sequences to be screened are first identified either through the use of gene-finding software<sup><xref ref-type="bibr" rid="CR5">5</xref>,<xref ref-type="bibr" rid="CR7">7</xref></sup>, or from identifying open reading frames (ORFs) of specified length in the proximity of RTEs<sup><xref ref-type="bibr" rid="CR6">6</xref>,<xref ref-type="bibr" rid="CR8">8</xref></sup>. The likelihood of these sequences to be PPs is then evaluated by different methods such as assessing their similarity to known PPs by BLAST<sup><xref ref-type="bibr" rid="CR7">7</xref></sup> or hidden Markov models (HMMs)<sup><xref ref-type="bibr" rid="CR5">5</xref>,<xref ref-type="bibr" rid="CR9">9</xref></sup>, or machine learning approaches such as Support Vector Machine (SVM) classifiers that are trained to identify likely PPs for different classes based on characteristics of PPs in the specified class<sup><xref ref-type="bibr" rid="CR6">6</xref>,<xref ref-type="bibr" rid="CR10">10</xref></sup>. While successful in identifying PP sequences even some that are different from known PPs of a specified RiPP class, these approaches are class-specific or context-dependent on the genes surrounding the putative PP and only recognize similar enough sequences to known PPs. These limitations hinder the development of bioinformatic workflows to identify novel RiPP classes.</p>
    <p id="Par3">One approach to potentially discover novel RiPP classes is to begin by identifying putative PP sequences before exploring the genetic context surrounding the PP sequences for similar sets of RTEs. Due to the large amount of genomic information to process, this method requires a context and class-independent way of identifying likely PP sequences. Because there is no genetic window to focus a search, using ORFs to specify the sequences to be classified would result in a large number of sequences and false positives as ORFs do not necessarily correspond to coding sequences particularly in organisms whose GC-content is skewed. A recent study presented a pipeline for identifying new RiPP clusters that included a modified version of the gene-finding software prodigal<sup><xref ref-type="bibr" rid="CR11">11</xref></sup>, prodigal-short. Prodigal-short was used to find putative PPs in proximity to RTEs, and peptide similarity network analysis of the identified PPs was used to identify new RiPP classes<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. This demonstrated the potential of using gene-finding software as a starting point for identifying novel RiPPs; however, the number of likely coding sequences from this approach was still large. The researchers used proximity to known RTEs, restricting searches by phylogeny, and looking at only large similarity networks to reduce the number of putative BGCs to a size where manual curation was tractable. A few of these steps could be avoided if a further context and class-independent step were present to discriminate between likely PPs and false positives. The success of SVM classifiers has led to an increase in the number of high-confidence sequences that are likely to be PPs for several different classes of RiPPs. The wealth of high-confidence PP predictions, along with the increasing number of experimentally verified PP sequences, led me to hypothesize that a positive dataset of reasonable size and quality could be constructed to train a deep neural network (DNN) to classify peptide sequences on their likelihood of being PPs.</p>
    <p id="Par4">DNNs have been successfully employed in image classification problems<sup><xref ref-type="bibr" rid="CR12">12</xref></sup> and text sentiment analysis<sup><xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR14">14</xref></sup>, problems that could be analogous to peptide classification problems. Neural networks are also gaining popularity in their application to biological systems. Some examples of these in the context of biological sequences are DNNs trained to identify lab origin given a DNA sequence<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>, identify whether a sequence of DNA is plasmid or chromosomal in origin<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>, and predicting protein-protein interactions between two proteins<sup><xref ref-type="bibr" rid="CR17">17</xref></sup>.</p>
    <p id="Par5">In this study, I explore whether DNN architectures successful in image and text classifiers are suitable for the problem of identifying putative PPs. I demonstrate that NeuRiPP, a DNN classifier trained on high-confidence PP sequences, is able to provide discriminatory power and enrich for likely PP sequences. NeuRiPP is implemented in Python and is thus easily integratable into existing bioinformatics workflows. It allows for the identification of putative RiPP BGCs starting with the PP instead of the RTEs. The success of the DNN models in discriminating PPs also suggests the suitability of these models for discriminating other types of peptides using the training module of NeuRiPP.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Datasets</title>
      <sec id="Sec4">
        <title>Positive Set</title>
        <p id="Par6">The positive dataset was constructed by collating peptide sequences from different sources that could be identified as PPs either through experimental validation, or by existing bioinformatics tools with a reasonably high degree of confidence. These included precursor peptide sequences of various different RiPP classes from PRISM<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>, thiopeptide sequences from Thiofinder<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>, lassopeptide<sup><xref ref-type="bibr" rid="CR6">6</xref></sup> and thiopeptide<sup><xref ref-type="bibr" rid="CR20">20</xref></sup> sequences identified by SVM classifiers developed for RODEO. Lassopeptide and thiopeptide sequences that were identified by RiPPER<sup><xref ref-type="bibr" rid="CR5">5</xref></sup> and confirmed by RODEO, previously identified microviridin sequences that were confirmed by RiPPER, and sequences in RiPPER that were positive HMM hits to known precursor domains from Refseq<sup><xref ref-type="bibr" rid="CR9">9</xref></sup> were also included. To further supplement the positive set, high scoring lanthipeptide, sactipeptide, thiopeptide, and lassopeptide sequences that had positive RODEO scores from the antiSMASH database version two<sup><xref ref-type="bibr" rid="CR21">21</xref></sup> were added. Table <xref rid="MOESM1" ref-type="media">S1</xref> summarizes the number of sequences from each of the sources. The dataset was dereplicated as the sources contained overlapping sequences. After dereplication, the final positive set consisted of 2726 unique sequences. This was queried using the set of precursor peptide HMMs consolidated for RiPPER and PP HMMs from antiSMASH<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>, consisting of a total of 59 different precursor peptide HMMs. 67% of the positive set were also PP HMM hits. A summary of the different PP HMM models can be found in Table <xref rid="MOESM1" ref-type="media">S2</xref>.</p>
      </sec>
      <sec id="Sec5">
        <title>Negative Set</title>
        <p id="Par7">The negative set consisted of sequences that were identified not to be lassopeptide precursors by the RODEO SVM in their lassopeptide study<sup><xref ref-type="bibr" rid="CR6">6</xref></sup> and a set of short peptide sequences that were not PPs from Marnix Medema (personal communication) that was previously used as a negative test set to train SVMs, filtered to include only sequences between 20–120 amino acids. This set was collated and checked against the positive set for overlaps. The final negative set consisted of 19224 sequences of which 0.02% were HMM hits.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Preparation of the sequence data as neural network input</title>
      <p id="Par8">A maximum length of 120 amino acids was used as the input for the neural network, this was done to match the approach in RiPPER which considered sequences between 20–120 amino acids as PPs. Any sequences longer than 120 residues were truncated after the 120th amino acid. Amino acids were represented as a single hot-vector of size 20 where the values in the vector are all 0 except for the amino-acid represented which would have a value of 1 (Fig. <xref rid="Fig1" ref-type="fig">1a</xref>). Sequences that were less than 120 residues in length were padded with vectors containing all zeros. This resulted in a uniform input of a 20 × 120 matrix for the neural network. Positive sequences were tagged with a 1 and negative sequences with a 0. The neural networks were constructed to have a 2 × 1 output representing the probability that its input is in class 0 or 1 respectively.<fig id="Fig1"><label>Figure 1</label><caption><p>NeuRiPP Workflow and Model Architectures. (<bold>a</bold>) Peptide sequences between 20–120 amino acids long are converted into a 20-by-120 matrix, this serves as an input to a deep neural network with different architectures (see (b)), which determines whether or not the sequence is a likely precursor peptide. (<bold>b</bold>) Five different model architectures were tested, a Long Short-Term Memory Recurrent Neural Network (LSTM), two different Convolutional Neural Network (CNN) layouts, and a combination of the CNN layouts with an LSTM layer.</p></caption><graphic xlink:href="41598_2019_49764_Fig1_HTML" id="d29e381"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Models</title>
      <p id="Par9">Five different DNN architectures were tested. These were inspired by model architectures that were successful in text classification problems<sup><xref ref-type="bibr" rid="CR13">13</xref>,<xref ref-type="bibr" rid="CR23">23</xref>,<xref ref-type="bibr" rid="CR24">24</xref></sup>. All models were implemented in Python 3 using Tensorflow 2.0<sup><xref ref-type="bibr" rid="CR25">25</xref></sup>. To prevent overfitting, a Dropout layer with a 0.5 dropout rate was added between the final densely connected layer and the classification layer. Dropout randomly sets the weights of a set number of nodes (half in this case) to zero preventing the network from becoming reliant on any one node during the training step<sup><xref ref-type="bibr" rid="CR26">26</xref>,<xref ref-type="bibr" rid="CR27">27</xref></sup>. The last layer of all of the network designs, the classification layer, was a dense layer with a sigmoidal activation function that outputs a 2 × 1 vector that sums to 1. This could be interpreted as the probability that a given input sequence is a PP. The designs consisted of either long short-term memory recurrent neural network (LSTM) layers, convolutional neural network (CNN) layers, or a combination of both (Fig. <xref rid="Fig1" ref-type="fig">1b</xref>). Specifically, the five architectures tested were:<list list-type="bullet"><list-item><p id="Par10">LSTM – Single Bi-directional LSTM with 0.15 dropout and 60 cells. This is followed by a densely connected layer of 60 units and finally, the classification layer.</p></list-item><list-item><p id="Par11">Linear CNN – Three successive CNN layers with varying filter and kernel sizes, following the last CNN layer, values are max pooled in groups of 2 before a 40 unit dense layer and the classification layer.</p></list-item><list-item><p id="Par12">Parallel CNN – Input is fed in parallel to two CNN layers each of 3 different kernel sizes (6 CNNs total) with max pooling occurring between each of the two layers before concatenating the results. This is fed into a final CNN layer with 150 filters and a kernel size of 3. The output is max pooled in groups of 3 before being fed into a 60 unit Dense Layer and the classification layer.</p></list-item><list-item><p id="Par13">Linear CNN + LSTM – Identical to the Linear CNN, with a 60 cell LSTM layer before the dense and classification layer.</p></list-item><list-item><p id="Par14">Parallel CNN + LSTM – Identical to the Parallel CNN, with a 60 cell LSTM layer before the dense and classification layer.</p></list-item></list></p>
    </sec>
    <sec id="Sec8">
      <title>Training</title>
      <p id="Par15">Figure <xref rid="Fig2" ref-type="fig">2</xref> summarizes the procedure used to train the neural network. Because the negative dataset was about 7 times larger than the positive dataset, the negative set was subsampled by 35% in order to prevent overtraining of the model on negative data. This resulted in a dataset consisting of 9454 sequences per training cycle. 85% of this set was used to train the neural network using sparse cross-entropy as the loss function and adam<sup><xref ref-type="bibr" rid="CR28">28</xref></sup> as the weight optimization algorithm. After weight optimization, the remaining 15% of the dataset was used to test the neural network using total accuracy as the metric. If the round of optimization improved the accuracy of the network, the weights were saved at the end of the training cycle. The negative dataset was resampled every 5 rounds to ensure that the neural network was exposed to the entire negative test set. Weight optimization was halted either if there was no improvement in model accuracy after 50 rounds, or after 200 rounds of training. Final model accuracy was measured on the entire dataset.<fig id="Fig2"><label>Figure 2</label><caption><p>NeuRiPP Training Procedure. Every model architecture was subjected to two hundred rounds of weight optimization. For each round of weight optimization, the entire positive training set, and a randomly subsampled portion of the negative training set is used. 85% of this set is used to optimize the weights of the neural network using adam as an optimizer and cross entropy as the loss function. The remaining 15% was used to test the accuracy of the model. If the weights increased the accuracy of the model, these were stored. The negative set was resampled every five rounds of training.</p></caption><graphic xlink:href="41598_2019_49764_Fig2_HTML" id="d29e447"/></fig></p>
    </sec>
    <sec id="Sec9">
      <title>Testing</title>
      <sec id="Sec10">
        <title>antiSMASH database version 2.0</title>
        <p id="Par16">antiSMASH 5<sup><xref ref-type="bibr" rid="CR29">29</xref></sup> was run on genbank files downloaded from the antiSMASH database version 2<sup><xref ref-type="bibr" rid="CR21">21</xref></sup> corresponding to RiPP and bacteriocin clusters. RODEO precursor peptide predictions were extracted from the json file output of the antiSMASH runs. To obtain candidate sequences for NeuRiPP to classify, prodigal-short<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>, a modified version of the prodigal<sup><xref ref-type="bibr" rid="CR11">11</xref>,<xref ref-type="bibr" rid="CR30">30</xref></sup> gene finding software was run in “–meta” mode on the fasta sequences of the RiPP clusters identified by antiSMASH from the antiSMASH database. These sequences were classified by the “classify.py” module of NeuRiPP. Comparison to RODEO predictions was done by a custom python script. BGCs were separated into the different RiPP classes using the antiSMASH classification rules<sup><xref ref-type="bibr" rid="CR22">22</xref></sup>, or in the case of the thiopeptide class, stricter classification rules using HMMs from a bioinformatic analysis of the thiopeptides<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>. If the cluster was identified to be of more than one class by the classification rules, it was counted in both of the RiPP classes.</p>
      </sec>
      <sec id="Sec11">
        <title>RiPPER Thioviramide predictions</title>
        <p id="Par17">Peptide sequences corresponding to potential thioviramide precursor peptides were obtained from the supplemental information from the “all peptides” section of the RiPPER publication<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. The NeuRiPP classifier was run on the sequences and the predictions were compared to the 30 sequence similarity networks analyzed using a custom python script.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec12" sec-type="results">
    <title>Results and Discussion</title>
    <sec id="Sec13">
      <title>NeuRiPP is able to classify peptides in the training set with high accuracy</title>
      <p id="Par18">Table <xref rid="Tab1" ref-type="table">1</xref> summarizes the best accuracy obtained for each model architecture on the entire training set. Because the training set contained significantly more negative sequences, it was important to examine the accuracy of the classifier in the negative and positive set separately as an 87.6% total accuracy could be achieved by simply classifying the entire test set as non-PP sequences. All of the models were able to achieve a degree of accuracy higher than this on the training data and were able to distinguish between PP and non-PP sequences at a level above this 87.6%  baseline. The parallel CNN architecture was the most accurate with a total accuracy of 99.84%. In order to check that the high accuracy was not simply due to the neural network being overfit to the data (i.e. that the model would only be able to classify peptide sequences it was trained on), the models were also trained on a dataset that randomly excluded 15% of the positive dataset (550 sequences), and 8.6% of the negative set (1650 sequences). The different architectures were trained on the remaining 19750 sequences as previously described. Tables <xref rid="MOESM1" ref-type="media">S3</xref> and <xref rid="MOESM1" ref-type="media">S4</xref> summarize the accuracy of the architectures on the set of excluded peptides, and the entire training set. When trained with the smaller set, the neural network is less accurate. On the set of sequences that was excluded for training, the LSTM architecture was the most accurate at 98.37% total accuracy. However, when the accuracy was evaluated on the entire training set, the parallel CNN still achieved the highest accuracy at 99.37%. These results suggest that the network is able to capture features in the sequences that are distinct to PPs. The improvements in accuracy when more data are given exhibit the suitability of the tested network architectures for sequence-based peptide classification. Importantly, this shows that NeuRiPP’s performance can be improved as the number of high-confidence PPs increases, both from improvements in class-specific PP identifiers and experimental verification of new RiPPs.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Accuracy of different network architectures on training set.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Network</th><th>Positive Set Accuracy</th><th>Negative Set Accuracy</th><th>Total Accuracy</th></tr></thead><tbody><tr><td>LSTM</td><td>92.00%</td><td>99.66%</td><td>98.71%</td></tr><tr><td>Linear CNN</td><td>99.60%</td><td>99.43%</td><td>99.45%</td></tr><tr><td>Parallel CNN</td><td><bold>99.96%</bold></td><td><bold>99.82%</bold></td><td><bold>99.84%</bold></td></tr><tr><td>Linear CNN + LSTM</td><td>97.36%</td><td>99.76%</td><td>99.46%</td></tr><tr><td>Parallel CNN + LSTM</td><td>97.80%</td><td>99.48%</td><td>99.27%</td></tr></tbody></table></table-wrap></p>
      <p id="Par19">Given the high accuracy and quick training time (Table <xref rid="MOESM1" ref-type="media">S5</xref>) of the parallel CNN, this was selected as the default model architecture. The weights that were used were obtained when the model was trained with the entire training set. This was so the network would take advantage of all of the information available when asked to identify putative PPs.</p>
    </sec>
    <sec id="Sec14">
      <title>Sequences identified by NeuRiPP are enriched with HMM hits for known precursor peptides</title>
      <p id="Par20">In order to evaluate NeuRiPP’s role in an existing genome mining workflow, the latest version of antiSMASH<sup><xref ref-type="bibr" rid="CR29">29</xref></sup> was run on sequences from the antiSMASH database version 2<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>. This is a common first step in a genome mining pipeline and ensured that the predictions for RiPP and bacteriocin classes were up-to-date. This process resulted in 35477 RiPP clusters covering 16 classes of RiPPs (Fig. <xref rid="Fig3" ref-type="fig">3</xref>, Table <xref rid="MOESM1" ref-type="media">S6</xref>). Running prodigal-short on these clusters yielded a total of 150366 peptide sequences between 20–120 amino acids, 250 of these were excluded for classification as their sequences contained unknown amino acids (“X”). This left a total of 150116 peptides for NeuRiPP to classify. Because these sequences are taken from the public databases and have not been verified, the accuracy of NeuRiPP in classifying these sequences could not be directly measured. In order to assess NeuRiPP’s performance, it was compared to existing tools that are used for PP identification. NeuRiPP was first assessed on its ability to enrich a set of sequences for known PP HMM hits. An HMM hit would indicate similarity to a known PP sequence and would give an increase in confidence in the classification. The peptide sequences from prodigal-short were queried against HMMs for PPs used in the RiPPER<sup><xref ref-type="bibr" rid="CR5">5</xref></sup> and antiSMASH<sup><xref ref-type="bibr" rid="CR29">29</xref></sup> pipelines before and after classification by NeuRiPP. Before classification by NeuRiPP, 9958 sequences or 6.6% were identified as HMM hits. NeuRiPP classified 34579, or around 20%, of these sequences as putative PPs with 8485 or 25% of them as HMM hits, a four-fold enrichment from the unclassified set. In contrast, there are 1457 (1%) HMM hits on the sequences classified as negatives by NeuRiPP (Fig. <xref rid="Fig3" ref-type="fig">3a</xref>, Table <xref rid="Tab2" ref-type="table">2</xref>).<fig id="Fig3"><label>Figure 3</label><caption><p>NeuRiPP predictions on RiPP BGCs in the antiSMASH v2 database. (<bold>a</bold>) Classification of peptide sequences from prodigal-short by NeuRiPP, sequences classified as putative precursor peptides by NeuRiPP (green) are enriched for known PP HMM hits (solid colors) as compared to sequences that are not classified to be precursor peptides (red). (<bold>b</bold>) Breakdown of RiPP clusters in the antiSMASH v2 database by RiPP class. NeuRiPP is able to identify putative PPs in all of the RiPP classes in the antiSMASH database.</p></caption><graphic xlink:href="41598_2019_49764_Fig3_HTML" id="d29e664"/></fig><table-wrap id="Tab2"><label>Table 2</label><caption><p>Summary of Precursor Peptide HMM Hits from Different Classifiers.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Set</th><th>Sequences</th><th>HMM Hits</th><th>% of Set</th></tr></thead><tbody><tr><td>Prodigal-short (Unclassified)</td><td>150116</td><td>9959</td><td>6.63%</td></tr><tr><td>NeuRiPP Positives</td><td>34579</td><td>8485</td><td>24.54%</td></tr><tr><td>NeuRiPP Negatives</td><td>115537</td><td>1474</td><td>1.28%</td></tr><tr><td>RODEO Predictions</td><td>8780</td><td>2773</td><td>31.58%</td></tr><tr><td>NeuRiPP (RODEO-type clusters)</td><td>15403</td><td>5553</td><td>36.05%</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec15">
      <title>NeuRiPP identifies putative precursor peptide sequences in RiPP classes it was not trained on</title>
      <p id="Par21">Figure <xref rid="Fig3" ref-type="fig">3b</xref> summarizes the composition of RiPP classes in the database, and whether or not NeuRiPP identified candidates as PPs in the cluster. NeuRiPP makes predictions on PPs in any RiPP BGC regardless of class. It identifies putative PP sequences in 19939 (56.20%) of the RiPP BGCs in the antiSMASH database. Unsurprisingly, it is able to identify putative PPs in a large percentage of clusters in the microviridin, lanthipeptide, lassopeptide, and sactipeptide classes as these constitute a large fraction of the classes in the positive training dataset. In the case of thiopeptides, NeuRiPP fails to identify putative PPs in a majority of the thiopeptide clusters in the database. This could be related to the lower accuracy a generic RiPPER search also has in identifying PPs in the thiopeptide class<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. It is possible that thiopeptide PPs are more diverse than other RiPP classes, or BGCs classified as thiopeptides are incorrectly classified and belong to different RiPP classes that still have not been well-characterized. A bioinformatic study on the thiopeptides that used RODEO to expand the thiopeptide class and discover new thiopeptides developed custom HMMs for the identification of thiopeptide BGCs. Using these HMMs to identify thiopeptide BGCs instead of the default antiSMASH detection rules resulted in a smaller subset (489 of 4104 thiopeptide-labeled BGCs) being identified as thiopeptide clusters (“thiopeptide strict”)<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>. NeuRiPP is able to identify potential PPs in a larger fraction of the strict thiopeptide set. Encouragingly, NeuRiPP is also able to identify potential PP sequences in other RiPP classes. This presents an opportunity for improvement of NeuRiPP as training with a richer, more diverse set of positive PP sequences from different classes could improve overall performance in general and allow it to identify even more putative PPs in uncharacterized RiPP classes.</p>
    </sec>
    <sec id="Sec16">
      <title>NeuRiPP predictions complement RODEO predictions for RODEO-type clusters in the antiSMASH database</title>
      <p id="Par22">NeuRiPP performance was next compared to RODEO predictions for PPs. RODEO is widely used as it is integrated into the antiSMASH pipeline, and is also available as a downloadable standalone tool. While RODEO contains features such as the prediction of cleavage sites and a visual interface, one of its core features is the identification of putative PP sequences using SVMs trained for specific RiPP classes. It was for these reasons that RODEO was chosen for comparison as to the best of my knowledge it is the most similar downloadable tool that is able to perform putative PP identification on a large number of gene sequences.</p>
      <p id="Par23">The antiSMASH pipeline incorporates RODEO to identify putative PP sequences for the classes of RiPPs which have SVMs trained for them: lanthipeptides, sactipeptides, thiopeptides, andlassopeptides. The antiSMASH database contains 12741 “RODEO-type clusters”. RODEO identifies 8780 peptides (6058 unique sequences) in 4681 (37%) RODEO-type clusters as putative PPs. 32% of these PPs are HMM hits. In comparison, NeuRiPP identifies 15403 peptides (9869 unique sequences) as PPs in 12475 (98%) RODEO-type clusters, with an HMM hit rate of 36% (Table <xref rid="Tab2" ref-type="table">2</xref>). NeuRiPP is thus able to identify a greater number of putative PP sequences than RODEO in RiPP classes where they both identify PPs while maintaining a similar HMM hit rate. Figure <xref rid="Fig4" ref-type="fig">4a</xref> summarizes the NeuRiPP and RODEO predictions in the RODEO-type clusters in the antiSMASH database. Interestingly, neither NeuRiPP nor RODEO are able to provide PP predictions for a majority of the thiopeptide clusters when classified using the default antiSMASH rules, this discrepancy is resolved when stricter classification rules are used (“thiopeptide strict”)<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>, highlighting the need for further characterization and classification even in known RiPP classes.<fig id="Fig4"><label>Figure 4</label><caption><p>NeuRiPP comparison to RODEO predictions. (<bold>a</bold>) Breakdown by RiPP cluster type of clusters where NeuRiPP and RODEO make precursor peptide predictions. NeuRiPP and RODEO predictions are largely congruent. NeuRiPP is able to predict PP sequences in a greater number of RODEO-type RiPP BGCs while maintaining a high HMM hit rate. (<bold>b</bold>) Comparison of NeuRiPP and RODEO precursor peptide predictions in BGCs where RODEO makes predictions for PP sequences. NeuRiPP predictions largely align with RODEO’s.</p></caption><graphic xlink:href="41598_2019_49764_Fig4_HTML" id="d29e804"/></fig></p>
      <p id="Par24">When NeuRiPP is compared to the 4681 clusters that RODEO has predictions on, NeuRiPP identifies putative PPs in 4415 (94.32%) of these clusters. When looking at the actual peptide predictions, 5180 (3134 unique sequences, 52%) of the RODEO predicted PPs are identified by NeuRiPP as putative PPs (Table <xref rid="MOESM1" ref-type="media">S7</xref>). This was partly because a portion of the ORFs (2610 sequences, 30%) that were classified by RODEO were not identified by prodigal-short to be coding sequences, a potential limitation of using gene finding software. However, NeuRiPP is still able to identify potential PP sequences in a majority of the clusters where RODEO identifies PPs. In 4084 (92.05%) of these clusters there is at least one peptide that overlaps between the NeuRiPP and RODEO prediction. In 3330 (71.14%) of the clusters, all of the RODEO predictions correspond to NeuRiPP hits, and in 2142 (45.76%) of the clusters, the RODEO and NeuRiPP predictions match exactly. In 331 clusters, NeuRiPP predicts a different set of sequences as the PPs for the cluster (Fig. <xref rid="Fig4" ref-type="fig">4b</xref>).§§</p>
      <p id="Par25">It is important to note that a portion (35%) of the RODEO PP sequences that had high RODEO scores in the antiSMASH database were used as part of the positive training set; however, NeuRiPP identified an additional 2205 PPs that it was not trained on. Taken together, these show that NeuRiPP is able to provide additional discriminatory power in identifying putative PPs. At worst, NeuRiPP is able to complement RODEO predictions in a computational pipeline, sequences predicted by both NeuRiPP and RODEO can be accepted with a higher confidence. However, in clusters where RODEO is unable to make predictions, the relatively high HMM hit rate suggests that the PP predictions that NeuRiPP makes on its own can be taken as potential PP sequences.</p>
    </sec>
    <sec id="Sec17">
      <title>NeuRiPP identifies novel thioamidated peptides identified by RiPPER</title>
      <p id="Par26">In order to identify new families of thioamidated peptides, researchers who developed the RiPPER methodology employed it to analyze regions of DNA in proximity to co-occurences of a YcaO-domain containing protein and a TfuA-like protein in <italic>Streptomyces</italic> genomes<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. RiPPER retrieved 743 peptides which were further analyzed using peptide similarity networking. The genetic environment surrounding the thirty peptide similarity networks containing at least four sequences was examined for gene conservation and Pfam<sup><xref ref-type="bibr" rid="CR31">31</xref></sup> domain composition in order to determine whether or not the similarity networks represented likely precursor peptides. With this analysis, they labeled twelve of the peptide similarity networks as “yes” concerning whether or not they contained likely PPs. These included the peptide similarity networks that contained thioviramide, a known thioamidated RiPP, and thiovirsolin, a novel thioamidated RiPP that was part of a new thioamidated RiPP family, predicted using the RiPPER workflow, purified and characterized. Five of the remaining peptide similarity networks were labeled “maybe” as likely precursor peptides.</p>
      <p id="Par27">To further demonstrate NeuRiPP’s utility in a genome mining pipeline for discovering novel RiPPs, the 743 peptides retrieved using RiPPER for creating the thioamidated PP similarity networks were classified by NeuRiPP. Unlike the training set, NeuRiPP had been previously unexposed to these sequences, with the exception of the thioviramide sequence that was included in PRISM<sup><xref ref-type="bibr" rid="CR18">18</xref></sup> and a second sequence that was previously identified by Thiofinder as a thiopeptide precursor<sup><xref ref-type="bibr" rid="CR19">19</xref></sup>. NeuRiPP identified 91 of these sequences as likely PPs. Eight of the thioamidated peptide similarity networks analyzed in RiPPER contained multiple NeuRiPP hits (Table <xref rid="MOESM1" ref-type="media">S8</xref>), these included the similarity networks that contained thioviramide (Network 5) and thiovarsolin (Network 22). Seven of these networks were determined to be likely precursor peptide sequences, while the other network that contained multiple NeuRiPP hits was thought to be possibly a PP sequence network. While NeuRiPP did not have multiple hits in the other five similarity networks that were thought to be likely precursor peptide sequences, there is a much greater chance that a similarity network containing multiple NeuRiPP hits is a likely PP. This suggests that a workflow where sequences extracted by RiPPER, then classified by NeuRiPP, before generating the peptide similarity networks will be enriched for likely PPs and RiPP BGCs. This is beneficial as it reduces the amount of clusters that have to be manually examined and further analyzed. Only 12% of the sequences obtained by RiPPER were NeuRiPP hits, but a large fraction of the likely RiPP BGCs identified from the peptide similarity networking analysis would still have been found.</p>
    </sec>
  </sec>
  <sec id="Sec18" sec-type="conclusion">
    <title>Conclusions</title>
    <p id="Par28">NeuRiPP is a fast, convenient tool that is able to predict putative PP sequences in a class-independent manner. It is able to complement existing RiPP bioinformatics tools by either confirming their predictions, or offering predictions in BGCs where other tools are unable to make predictions. Peptide sequences classified as NeuRiPP hits show a similar or higher HMM hit rate to precursor peptide predictions in existing tools. NeuRiPP is easily integratable into the antiSMASH and RODEO workflows. It also fits well with the RiPPER methodology by adding an additional filtering step before peptide similarity networking, reducing the amount of manual analysis and curation that needs to be done, while maintaining a high hit rate of likely PP sequences.</p>
    <p id="Par29">The increased selectivity and discrimination of NeuRiPP along with its class-independence also allow for a RiPP mining methodology that is independent of preliminary knowledge of RTEs, allowing for the discovery of novel RiPP classes. Most existing bioinformatics tools for RiPP mining, such as BAGEL<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>, RODEO<sup><xref ref-type="bibr" rid="CR32">32</xref></sup>, antiSMASH<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>, RiPP Miner<sup><xref ref-type="bibr" rid="CR10">10</xref></sup> and PRISM<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>, provide a wealth of information on well-characterized RiPP classes by identifying putative RiPP BGCs based on the set of conserved protein domains responsible for the biosynthesis of the specific RiPP class. They provide further information often by  predicting the mass, cleavage sites, potential modifications, and the sequence of mature peptides. RiPPER<sup><xref ref-type="bibr" rid="CR5">5</xref></sup> works well as a complement to these tools by allowing the user to specify the gene clusters and types to be examined. However, there is still a large number of sequences retrieved by RiPPER based on prodigal-short, requiring some sort of filtering step that reduces the number of sequences to examine. This is often dependent on prior knowledge about a specific class of enzymes that could potentially be involved in RiPP biosynthesis which biases searches towards “known unknowns”. By providing an additional filtering step, NeuRiPP can potentially overcome this, allowing peptide and gene similarity networks to be constructed without first having to specify a search space with a specific enzyme or domain as a seed. While NeuRiPP is limited in the fact that it will be biased towards the precursor peptide classes in its training set, having multiple RiPP classes as exemplars can possibly overcome some of these biases, allowing the neural network to discern common characteristics in PP sequences across different RiPP classes. By not starting with RTEs as seeds for the search, NeuRiPP can potentially identify BGCs that contain novel combinations of known RTEs distinct from the classes it was trained on, or possibly even completely new sets of RTEs.</p>
    <p id="Par30">Finally, the neural network structure of NeuRiPP allows for flexibility and offers potential for further improvements. NeuRiPP model weights can be retrained to improve its performance on a specific RiPP class that is of particular interest. As more RiPP classes are discovered and experimentally verified, PP sequences from these can be added to the positive training set which should improve NeuRiPP’s general performance. Training weights for the NeuRiPP models is neither a time-intensive nor computationally demanding task (Table <xref rid="MOESM1" ref-type="media">S5</xref>). The optimized weights of the parallel CNN model used in this study were trained on a laptop computer in a few hours. While NeuRiPP was trained on PPs, the neural network architecture may be suitable for other peptide classification problems. The training module is flexible and only requires fasta files of positive and negative examples of amino acid sequences, allowing the possible extension of NeuRiPP as a general protein classifier.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="41598_2019_49764_MOESM1_ESM.xlsx">
            <caption>
              <p>Tables S1-S8</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p><bold>Publisher’s note</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1038/s41598-019-49764-z.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>E.L.C.d.l.S is a Research Career Development Fellow in the Warwick Integrative Synthetic Biology Centre, which is supported by a grant from the BBSRC and EPSRC (BB/M017982/1). Marnix Medema for providing negative sequences used to train NeuRiPP. Andrew Truman, Anandh Swaminatham, Bryce Kelly, Alexander Kloosterman, Marnix Medema, and Douglas Mitchell for discussions about NeuRiPP.</p>
  </ack>
  <notes notes-type="data-availability">
    <title>Data Availability</title>
    <p>NeuRiPP is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/emzodls/neuripp">https://github.com/emzodls/neuripp</ext-link> under the GNU AGPL v3. The repository contains the training sets described in the study, along with the optimized weights for each of the model architectures. The train module can be used to create a custom set of model weights, while the classify module can be used with the pre-trained weights or new weights to identify PP sequences.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing Interests</title>
    <p id="Par31">The author declares no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baltz</surname>
            <given-names>RH</given-names>
          </name>
        </person-group>
        <article-title>Gifted microbes for genome mining and natural product discovery</article-title>
        <source>Journal of Industrial Microbiology &amp; Biotechnology</source>
        <year>2017</year>
        <volume>44</volume>
        <fpage>573</fpage>
        <lpage>588</lpage>
        <pub-id pub-id-type="doi">10.1007/s10295-016-1815-x</pub-id>
        <pub-id pub-id-type="pmid">27520548</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Challis</surname>
            <given-names>GL</given-names>
          </name>
        </person-group>
        <article-title>Genome Mining for Novel Natural Product Discovery</article-title>
        <source>Journal of Medicinal Chemistry</source>
        <year>2008</year>
        <volume>51</volume>
        <fpage>2618</fpage>
        <lpage>2628</lpage>
        <pub-id pub-id-type="doi">10.1021/jm700948z</pub-id>
        <?supplied-pmid 18393407?>
        <pub-id pub-id-type="pmid">18393407</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doroghazi</surname>
            <given-names>JR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A roadmap for natural product discovery based on large-scale genomics and metabolomics</article-title>
        <source>Nature Chemical Biology</source>
        <year>2014</year>
        <volume>10</volume>
        <fpage>963</fpage>
        <lpage>968</lpage>
        <pub-id pub-id-type="doi">10.1038/nchembio.1659</pub-id>
        <?supplied-pmid 25262415?>
        <pub-id pub-id-type="pmid">25262415</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arnison</surname>
            <given-names>PG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Ribosomally synthesized and post-translationally modified peptide natural products: overview and recommendations for a universal nomenclature</article-title>
        <source>Nat. Prod. Rep.</source>
        <year>2013</year>
        <volume>30</volume>
        <fpage>108</fpage>
        <lpage>160</lpage>
        <pub-id pub-id-type="doi">10.1039/C2NP20085F</pub-id>
        <?supplied-pmid 23165928?>
        <pub-id pub-id-type="pmid">23165928</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Santos-Aberturas</surname>
            <given-names>Javier</given-names>
          </name>
          <name>
            <surname>Chandra</surname>
            <given-names>Govind</given-names>
          </name>
          <name>
            <surname>Frattaruolo</surname>
            <given-names>Luca</given-names>
          </name>
          <name>
            <surname>Lacret</surname>
            <given-names>Rodney</given-names>
          </name>
          <name>
            <surname>Pham</surname>
            <given-names>Thu H</given-names>
          </name>
          <name>
            <surname>Vior</surname>
            <given-names>Natalia M</given-names>
          </name>
          <name>
            <surname>Eyles</surname>
            <given-names>Tom H</given-names>
          </name>
          <name>
            <surname>Truman</surname>
            <given-names>Andrew W</given-names>
          </name>
        </person-group>
        <article-title>Uncovering the unexplored diversity of thioamidated ribosomal peptides in Actinobacteria using the RiPPER genome mining tool</article-title>
        <source>Nucleic Acids Research</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>9</issue>
        <fpage>4624</fpage>
        <lpage>4637</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz192</pub-id>
        <pub-id pub-id-type="pmid">30916321</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tietz</surname>
            <given-names>JI</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A new genome-mining tool redefines the lasso peptide biosynthetic landscape</article-title>
        <source>Nature Chemical Biology</source>
        <year>2017</year>
        <volume>13</volume>
        <fpage>470</fpage>
        <lpage>478</lpage>
        <pub-id pub-id-type="doi">10.1038/nchembio.2319</pub-id>
        <?supplied-pmid 28244986?>
        <pub-id pub-id-type="pmid">28244986</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Heel</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>de Jong</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Montalbán-López</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kok</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kuipers</surname>
            <given-names>OP</given-names>
          </name>
        </person-group>
        <article-title>BAGEL3: Automated identification of genes encoding bacteriocins and (non-)bactericidal posttranslationally modified peptides</article-title>
        <source>Nucleic acids research</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>W448</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt391</pub-id>
        <?supplied-pmid 23677608?>
        <pub-id pub-id-type="pmid">23677608</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Heel</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BAGEL4: a user-friendly web server to thoroughly mine RiPPs and bacteriocins</article-title>
        <source>Nucleic Acids Research</source>
        <year>2018</year>
        <volume>46</volume>
        <fpage>W278</fpage>
        <lpage>W281</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky383</pub-id>
        <?supplied-pmid 29788290?>
        <pub-id pub-id-type="pmid">29788290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haft</surname>
            <given-names>DH</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>RefSeq: an update on prokaryotic genome annotation and curation</article-title>
        <source>Nucleic Acids Research</source>
        <year>2018</year>
        <volume>46</volume>
        <fpage>D851</fpage>
        <lpage>D860</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx1068</pub-id>
        <?supplied-pmid 29112715?>
        <pub-id pub-id-type="pmid">29112715</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Agrawal</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Khater</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gupta</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sain</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Mohanty</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>RiPPMiner: a bioinformatics resource for deciphering chemical structures of RiPPs based on prediction of cleavage and cross-links</article-title>
        <source>Nucleic Acids Research</source>
        <year>2017</year>
        <volume>45</volume>
        <fpage>W80</fpage>
        <lpage>W88</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx408</pub-id>
        <?supplied-pmid 28499008?>
        <pub-id pub-id-type="pmid">28499008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hyatt</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Prodigal: prokaryotic gene recognition and translation initiation site identification</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>119</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-119</pub-id>
        <?supplied-pmid 20211023?>
        <pub-id pub-id-type="pmid">20211023</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Krizhevsky, A., Sutskever, I. &amp; Hinton, G. E. ImageNet Classification with Deep Convolutional Neural Networks. In Pereira, F., Burges, C. J. C., Bottou, L. &amp; Weinberger, K. Q. (eds) <italic>Advances in Neural Information Processing Systems</italic><bold>25</bold>, 1097–1105 (Curran Associates, Inc., 2012).</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Kim, Y. Convolutional Neural Networks for Sentence Classification, <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1408.5882">http://arxiv.org/abs/1408.5882</ext-link>, arXiv:1408.5882 (2014).</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Zhang, X. &amp; LeCun, Y. Text Understanding from Scratch, <ext-link ext-link-type="uri" xlink:href="https://arxiv.org/pdf/1509.01626.pdf">https://arxiv.org/pdf/1509.01626.pdf</ext-link>, arXiv:1502.01710 (2015).</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nielsen</surname>
            <given-names>AAK</given-names>
          </name>
          <name>
            <surname>Voigt</surname>
            <given-names>CA</given-names>
          </name>
        </person-group>
        <article-title>Deep learning to predict the lab-of-origin of engineered DNA</article-title>
        <source>Nature Communications</source>
        <year>2018</year>
        <volume>9</volume>
        <fpage>3135</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-05378-z</pub-id>
        <?supplied-pmid 30087331?>
        <pub-id pub-id-type="pmid">30087331</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krawczyk</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>Lipinski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Dziembowski</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>PlasFlow: predicting plasmid sequences in metagenomic data using genome signatures</article-title>
        <source>Nucleic acids research</source>
        <year>2018</year>
        <volume>46</volume>
        <fpage>e35</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx1321</pub-id>
        <?supplied-pmid 29346586?>
        <pub-id pub-id-type="pmid">29346586</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>Hang</given-names>
          </name>
          <name>
            <surname>Gong</surname>
            <given-names>Xiu-Jun</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>Hua</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>Chang</given-names>
          </name>
        </person-group>
        <article-title>Deep Neural Network Based Predictions of Protein Interactions Using Primary Sequences</article-title>
        <source>Molecules</source>
        <year>2018</year>
        <volume>23</volume>
        <issue>8</issue>
        <fpage>1923</fpage>
        <pub-id pub-id-type="doi">10.3390/molecules23081923</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Skinnider</surname>
            <given-names>MA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genomic charting of ribosomally synthesized natural product chemical space facilitates targeted mining</article-title>
        <source>Proceedings of the National Academy of Sciences</source>
        <year>2016</year>
        <volume>113</volume>
        <fpage>E6343</fpage>
        <lpage>E6351</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1609014113</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ThioFinder: A Web-Based Tool for the Identification of Thiopeptide Gene Clusters in DNA Sequences</article-title>
        <source>PLoS One</source>
        <year>2012</year>
        <volume>7</volume>
        <fpage>e45878</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0045878</pub-id>
        <?supplied-pmid 23029291?>
        <pub-id pub-id-type="pmid">23029291</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schwalen</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Hudson</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Kille</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Mitchell</surname>
            <given-names>DA</given-names>
          </name>
        </person-group>
        <article-title>Bioinformatic Expansion and Discovery of Thiopeptide Antibiotics</article-title>
        <source>Journal of the American Chemical Society</source>
        <year>2018</year>
        <volume>140</volume>
        <fpage>9494</fpage>
        <lpage>9501</lpage>
        <pub-id pub-id-type="doi">10.1021/jacs.8b03896</pub-id>
        <?supplied-pmid 29983054?>
        <pub-id pub-id-type="pmid">29983054</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blin</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The antiSMASH database version 2: a comprehensive resource on secondary metabolite biosynthetic gene clusters</article-title>
        <source>Nucleic Acids Research</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D625</fpage>
        <lpage>D630</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1060</pub-id>
        <?supplied-pmid 30395294?>
        <pub-id pub-id-type="pmid">30395294</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blin</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>antiSMASH 4.0—improvements in chemistry prediction and gene cluster boundary identification</article-title>
        <source>Nucleic Acids Research</source>
        <year>2017</year>
        <volume>45</volume>
        <fpage>W36</fpage>
        <lpage>W41</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx319</pub-id>
        <?supplied-pmid 28460038?>
        <pub-id pub-id-type="pmid">28460038</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Chollet, F. Using pre-trained word embeddings in a Keras model, <ext-link ext-link-type="uri" xlink:href="https://blog.keras.io/using-pre-trained-word-embeddings-in-a-keras-model.html">https://blog.keras.io/using-pre-trained-word-embeddings-in-a-keras-model.html</ext-link> (2019).</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Liao, R. Text Classification, Part 2 - sentence level Attentional RNN – Richard’s deep learning blog, <ext-link ext-link-type="uri" xlink:href="https://richliao.github.io/supervised/classification/2016/12/26/textclassifier-RNN/">https://richliao.github.io/supervised/classification/2016/12/26/textclassifier-RNN/</ext-link> (2019).</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Abadi, M. <italic>et al</italic>. TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems, <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1603.04467">http://arxiv.org/abs/1603.04467</ext-link>, arXiv:1603.04467 (2016).</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Srivastava</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hinton</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Krizhevsky</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sutskever</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Salakhutdinov</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Dropout: A Simple Way to Prevent Neural Networks from Overfitting</article-title>
        <source>Journal of Machine Learning Research</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>1929</fpage>
        <lpage>1958</lpage>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Abadi, M. <italic>et al</italic>. Tensorflow: A system for large-scale machine learning. In <italic>12th USENIX Symposium on Operating Systems Design and Implementation</italic> (<italic>OSDI 16</italic>), 265–283 (2016).</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Kingma, D. P. &amp; Ba, J. Adam: A Method for Stochastic Optimization, <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1412.6980">http://arxiv.org/abs/1412.6980</ext-link>, arXiv:1412.6980 (2014).</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blin</surname>
            <given-names>Kai</given-names>
          </name>
          <name>
            <surname>Shaw</surname>
            <given-names>Simon</given-names>
          </name>
          <name>
            <surname>Steinke</surname>
            <given-names>Katharina</given-names>
          </name>
          <name>
            <surname>Villebro</surname>
            <given-names>Rasmus</given-names>
          </name>
          <name>
            <surname>Ziemert</surname>
            <given-names>Nadine</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>Sang Yup</given-names>
          </name>
          <name>
            <surname>Medema</surname>
            <given-names>Marnix H</given-names>
          </name>
          <name>
            <surname>Weber</surname>
            <given-names>Tilmann</given-names>
          </name>
        </person-group>
        <article-title>antiSMASH 5.0: updates to the secondary metabolite genome mining pipeline</article-title>
        <source>Nucleic Acids Research</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>W1</issue>
        <fpage>W81</fpage>
        <lpage>W87</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkz310</pub-id>
        <pub-id pub-id-type="pmid">31032519</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hyatt</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>LoCascio</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Hauser</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Uberbacher</surname>
            <given-names>EC</given-names>
          </name>
        </person-group>
        <article-title>Gene and translation initiation site prediction in metagenomic sequences</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>2223</fpage>
        <lpage>2230</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts429</pub-id>
        <?supplied-pmid 22796954?>
        <pub-id pub-id-type="pmid">22796954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>El-Gebali</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Pfam protein families database in 2019</article-title>
        <source>Nucleic Acids Research</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D427</fpage>
        <lpage>D432</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky995</pub-id>
        <?supplied-pmid 30357350?>
        <pub-id pub-id-type="pmid">30357350</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Hudson, G. A. <italic>et al</italic>. Bioinformatic Mapping of Radical S-Adenosylmethionine-Dependent Ribosomally Synthesized and Post-Translationally Modified Peptides Identifies New C<italic>α</italic>, C<italic>β</italic>, and C<italic>γ</italic>-Linked Thioether-Containing Peptides. <italic>Journal of the American Chemical Society</italic>, 10.1021/jacs.9b01519 (2019).</mixed-citation>
    </ref>
  </ref-list>
</back>

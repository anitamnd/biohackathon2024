<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6482512</article-id>
    <article-id pub-id-type="publisher-id">2784</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-2784-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Fixed-parameter tractable sampling for RNA design with multiple target structures</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Hammer</surname>
          <given-names>Stefan</given-names>
        </name>
        <address>
          <email>stefan.hammer@uni-leipzig.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wang</surname>
          <given-names>Wei</given-names>
        </name>
        <address>
          <email>wei.wang@lix.polytechnique.fr</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2376-9205</contrib-id>
        <name>
          <surname>Will</surname>
          <given-names>Sebastian</given-names>
        </name>
        <address>
          <email>will@tbi.univie.ac.at</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <address>
          <email>yann.ponty@lix.polytechnique.fr</email>
        </address>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label>Dept. Computer Science, and Interdisciplinary Center for Bioinformatics, Univ. Leipzig, Härtelstr. 16-18, Leipzig, D-04107 Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2286 1424</institution-id><institution-id institution-id-type="GRID">grid.10420.37</institution-id><institution>Dept. Theoretical Chemistry, Univ. Vienna, </institution></institution-wrap>Währingerstr. 17, Wien, A-1090 Austria </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2286 1424</institution-id><institution-id institution-id-type="GRID">grid.10420.37</institution-id><institution>Bioinformatics and Computational Biology Research Group, Univ. Vienna, </institution></institution-wrap>Währingerstr. 17, Wien, A-1090 Austria </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000000121581279</institution-id><institution-id institution-id-type="GRID">grid.10877.39</institution-id><institution>CNRS UMR 7161 LIX, Ecole Polytechnique, </institution></institution-wrap>Bat. Alan Turing, Palaiseau, 91120 France </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>209</elocation-id>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>10</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>3</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>The design of multi-stable RNA molecules has important applications in biology, medicine, and biotechnology. Synthetic design approaches profit strongly from effective in-silico methods, which substantially reduce the need for costly wet-lab experiments.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We devise a novel approach to a central ingredient of most in-silico design methods: the generation of sequences that fold well into multiple target structures. Based on constraint networks, our approach <inline-graphic xlink:href="12859_2019_2784_Figa_HTML.gif" id="d29e259"/> supports generic Boltzmann-weighted sampling, which enables the positive design of RNA sequences with specific free energies (for each of multiple, possibly pseudoknotted, target structures) and GC-content. Moreover, we study general properties of our approach empirically and generate biologically relevant multi-target Boltzmann-weighted designs for an established design benchmark. Our results demonstrate the efficacy and feasibility of the method in practice as well as the benefits of Boltzmann sampling over the previously best multi-target sampling strategy—even for the case of negative design of multi-stable RNAs. Besides empirically studies, we finally justify the algorithmic details due to a fundamental theoretic result about multi-stable RNA design, namely the #P-hardness of the counting of designs.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p><inline-graphic xlink:href="12859_2019_2784_Figb_HTML.gif" id="d29e266"/> introduces a novel, flexible, and effective approach to multi-target RNA design, which promises broad applicability and extensibility.</p>
        <p>Our free software is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/yannponty/RNARedPrint">https://github.com/yannponty/RNARedPrint</ext-link>
Supplementary data are available online.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (10.1186/s12859-019-2784-7) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>RNA multi-target design</kwd>
      <kwd>RNA secondary structure</kwd>
      <kwd>Multi-dimensional Boltzmann sampling</kwd>
      <kwd><italic>#</italic>P-hardness of RNA design</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Agence Nationale de la Recherche (ANR)</institution>
        </funding-source>
        <award-id>ANR-14-CE34-0011</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Synthetic biology strives for the engineering of artificial biological systems, promising broad applications in biology, biotechnology and medicine. Centrally, this requires the design of biological macromolecules with highly specific properties and programmable functions. RNAs are particularly well-suited tools for rational design targeting specific functions [<xref ref-type="bibr" rid="CR1">1</xref>]: on the one hand, RNA function is tightly coupled to the formation of secondary structure, as well as changes in base pairing propensities and the accessibility of regions, e.g. by burying or exposing interaction sites [<xref ref-type="bibr" rid="CR2">2</xref>]; on the other hand, the thermodynamics of RNA secondary structure is well understood and its prediction is computationally tractable [<xref ref-type="bibr" rid="CR3">3</xref>]. Thus, in rational design approaches, structure can serve as effective proxy for, the ultimately targeted, catalytic or regulatory functions [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p>The function of many RNAs depends on their selective folding into one or several alternative conformations. Classic examples include riboswitches, which adopt different stable structures upon binding a specific ligand. Riboswitches have been a popular application of rational design [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], partly motivated by their capacity to act as biosensors [<xref ref-type="bibr" rid="CR7">7</xref>], which suggests them for biotechnological applications. In particular due to the kinetic coupling of RNA folding with RNA transcription, RNA families can feature alternative, evolutionarily conserved, transient structures [<xref ref-type="bibr" rid="CR8">8</xref>], which are essential for the formation of their functional structures. More generally, simultaneous compatibility to multiple structures is a relevant design objective for engineering kinetically controlled RNAs, finally targeting prescribed folding pathways. Thus, advanced applications of RNA design often target multiple structures, additionally aiming at other features, such as specific GC-content (GC%) [<xref ref-type="bibr" rid="CR9">9</xref>] or the presence/absence of functionally relevant motifs, either anywhere or at specific positions [<xref ref-type="bibr" rid="CR10">10</xref>]; these objectives motivate flexible computational design methods.</p>
    <p>Many computational methods for RNA design follow the “generate-and-optimize” strategy: <italic>seed</italic> sequences are randomly generated and then optimized. While the quality of the seeds was found to be performance-critical for such RNA design methods [<xref ref-type="bibr" rid="CR11">11</xref>], random seed generation can improve the prospect of subsequent optimizations and increases the diversity across designs [<xref ref-type="bibr" rid="CR9">9</xref>]. For single-target approaches, INFO-RNA [<xref ref-type="bibr" rid="CR12">12</xref>] could significantly improve the success rate over RNAinverse [<xref ref-type="bibr" rid="CR13">13</xref>], by starting its local search from the minimum energy sequence for the target structure. Since this strategy typically designs sequences with unrealistically high GC%, more recent approaches like antaRNA [<xref ref-type="bibr" rid="CR14">14</xref>] and IncaRNAtion [<xref ref-type="bibr" rid="CR9">9</xref>] explicitly control GC%; the latter applying adaptive sampling.</p>
    <p>The available methods for multi-target RNA design [<xref ref-type="bibr" rid="CR15">15</xref>–<xref ref-type="bibr" rid="CR18">18</xref>] all follow the same overall generate-and-optimize strategy. Faced with the complex constraints due to the multiple targets, early methods such as Frnakenstein [<xref ref-type="bibr" rid="CR15">15</xref>] and Modena [<xref ref-type="bibr" rid="CR17">17</xref>] do not even attempt to sample sequences systematically from a controlled distribution, but rely on ad-hoc generation strategies. Recently, the approach RNAdesign [<xref ref-type="bibr" rid="CR16">16</xref>], coupled with local search in <inline-graphic xlink:href="12859_2019_2784_Figc_HTML.gif" id="d29e452"/> [<xref ref-type="bibr" rid="CR18">18</xref>], solved the problem of sampling seeds from the <italic>uniform</italic> distribution for multiple target structures. RNAdesign adopts a graph coloring perspective, assigning nucleotide symbols (like “colors”) to the sequence positions, such that compatible nucleotides are assigned to the ends of each base pair. Initially, the method decomposes the graph hierarchically and then <italic>precomputes</italic> the number of valid sequences within each subgraph. The decomposition is then reinterpreted as a decision tree to perform <italic>stochastic backtracking</italic>, inspired by Ding and Lawrence [<xref ref-type="bibr" rid="CR19">19</xref>]. Uniform sampling is achieved by choosing individual nucleotide assignments with probabilities derived from the subsolution counts. While, due to its decomposition strategy, RNAdesign performs much better than the theoretical bound of <italic>O</italic>(4<sup><italic>n</italic></sup>), no attempts were made to characterize or justify its—still exponential—complexity; leaving important theoretical questions of the complexity of counting and uniform sampling open. As well, the <inline-graphic xlink:href="12859_2019_2784_Figd_HTML.gif" id="d29e485"/> approach is specialized to uniform sampling, which limits its direct extensibility. Substantial improvements of multi-target sampling thus require a systematically redesigned approach. To enable a fundamentally broader range of applications in extensions of the sampling method, we build our approach, from the start, on established concepts in computer science.</p>
    <sec id="Sec2">
      <title>Contributions</title>
      <p>As central contribution, we provide a systematic and flexibly extensible technique for sampling that targets multiple versatile features. For the sake of clarity, we introduce this method specialized to the sampling of RNA sequences that have specific energies for multiple structures and specific GC%. In this way, we address the positive design of RNA sequences. Positive design is contrasted to the often desirable negative design of RNAs, which optimizes the stability of the target structures <italic>in relation to all other potential structures</italic>. Remarkably, the even more complex task of negative design immediately benefits from positive design (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section A), which provides an initial motivation to study the positive design problem by itself.</p>
      <p>Figure <xref rid="Fig1" ref-type="fig">1</xref> summarizes our generic framework, which enables this targeted sequence generation based on multi-dimensional Boltzmann sampling. <italic>Algorithmically</italic>, we originally contribute dynamic programming (DP) algorithms, based on the concept of <italic>tree decomposition</italic>, to compute partition functions and sample sequences from the Boltzmann distribution. Generally, tree decompositions are data structures that capture the specific dependencies of a problem instance (here, the dependencies between sequence positions induced by the target structures), such that they can guide the efficient processing by DP algorithms. Building on this principle, the complexities of our algorithms depend exponentially on a specific property of the tree decomposition, called the <italic>treewidth</italic>. Thus, it is essential for the applicability of our approach that—by appropriate design choices—we can keep this parameter low for typical instances. For any fixed value of the treewidth, the complexity scales only linearly with the size of designed sequences and the number of targeted structures, i.e. our algorithms are <italic>fixed-parameter tractable (FPT)</italic>.
<fig id="Fig1"><label>Fig. 1</label><caption><p>General outline of <inline-graphic xlink:href="12859_2019_2784_Fige_HTML.gif" id="d29e527"/>. From a set of target secondary structures (<bold>i</bold>), base pairs are merged (<bold>ii</bold>) into a (base pair) dependency graph (<bold>iii</bold>) and transformed into a tree decomposition (<bold>iv</bold>). The tree is then used to compute the partition function, followed by a Boltzmann sampling of valid sequences (<bold>v</bold>). An adaptive scheme learns weights to achieve targeted energies and GC% (arrows), leading to the production of suitable designs (<bold>vi</bold>). Note that for simplicity, we assume in this figure that only dependencies between the ends of base pairs are considered to evaluate the energies of structures. Our computations based on a more complex energy model, which considers energy contributions of base pair stacks, require additional dependencies</p></caption><graphic xlink:href="12859_2019_2784_Fig1_HTML" id="MO1"/></fig>
</p>
      <p>Remarkably, we could show that it is not possible to find a better, efficient method for sampling (unless P=NP), since the underlying counting problem is #P-hard. The practical relevance of this theoretical result is that it rules out substantially better sampling techniques. Even when using improved sampling methods, there will always remain an upper limit on the (in practice) tractable number and heterogeneity of structures, the complexity of the directly treatable energy model, and the number and complexity of additional constraints that could be considered in future sampling-based applications. Technically, this result relies on a surprising bijection between valid sequences and independent sets of a bipartite graph, the latter being the object of recent breakthroughs in approximate counting complexity [<xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR21">21</xref>].</p>
      <p>Due to the generality of our method, we can moreover strongly limit the treewidth in practice by using state-of-the-art tree decomposition algorithms. By evaluating sequences in a specialized weighted constraint network, we support—in principle—arbitrary complex constraints and energy models, notably subsuming the commonly used RNA energy models. Moreover, we describe an <italic>adaptive sampling</italic> strategy to control the free energies of the individual target structures and GC%.</p>
      <p>We observe that targeting realistic RNA energies in the Turner RNA energy model works well by performing sampling based on a simplified RNA energy model, which induces much lower treewidth than the Turner model. This result is essential for the applicability of our method, since it allows to combine high efficiency (by keeping the treewidth low) with sufficient accuracy to precisely target realistic Turner energies.</p>
      <p>Eventually, our proof-of-concept results on a comprehensive multi-target RNA design benchmark [<xref ref-type="bibr" rid="CR17">17</xref>] suggest that our sampling strategy well supports designing biologically relevant RNAs for multiple targets.</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Methods</title>
    <p>The main computational problem addressed in this work is the positive design of RNA sequences for multiple target structures; more specifically, the generation of sequences over the alphabet <italic>Σ</italic>={A,C,G,U}, such that the sequences feature a given GC<italic>%</italic>, and have prescribed energies for a set of target secondary structures. Here, these desired sequence properties are modeled as constraints on the values of <italic>features</italic>, which are functions of the sequence that are expressed as sums over real-valued <italic>contributions</italic>. Each contribution depends on the nucleotides at—typically few—specific sequence positions.</p>
    <p>To generate diverse design candidates, we randomly generate sequences from a Boltzmann distribution. The probability of a sequence then depends on its features (e.g. the energies of the target structures), and the weight of each feature (which influences its distribution). Sampling from the (multi-feature) Boltzmann distribution requires to compute corresponding partition functions, such that we can draw sequences with probabilities proportional to their Boltzmann weight. On this basis, we can finely calibrate the weights, to maximize the probability that sampled sequences meet the desired target values for each feature. Together with a final rejection step this results in an effective procedure for generating highly specific sequences.</p>
    <sec id="Sec4">
      <title>Problem statement</title>
      <p>Let us consider a set of <italic>k</italic> (secondary) structures <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {R} = \{R_{1},\dots, R_{{k}}\}$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">R</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq1.gif"/></alternatives></inline-formula>, each abstracted as a set of base pairs, and <italic>m</italic>≥<italic>k</italic> features <italic>F</italic><sub>1</sub>,…,<italic>F</italic><sub><italic>m</italic></sub>, typically representing the energies of the structures and additional sequence properties, associated with weights <italic>π</italic><sub>1</sub>,…,<italic>π</italic><sub><italic>m</italic></sub> in <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {R}^{+}$\end{document}</tex-math><mml:math id="M4"><mml:msup><mml:mrow><mml:mi>ℝ</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq2.gif"/></alternatives></inline-formula>. Our goal is to sample sequences <italic>S</italic> (which satisfy the base pairing rules for all structures) from the Boltzmann distribution defined by 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \mathbb{P}(S\mid\pi_{1},\dots,\pi_{{m}}) \propto \prod_{1\leq \ell\leq {m}}\!\! \pi_{\ell}^{-F_{\ell}(S)}  $$ \end{document}</tex-math><mml:math id="M6"><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>∣</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>∝</mml:mo><mml:munder><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup></mml:math><graphic xlink:href="12859_2019_2784_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The workhorse of our approach is the fixed-parameter tractable computation of feature-dependent partition functions over sequences, namely partition functions of the form 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Z_{{\pi_{1},\dots,\pi_{{m}}}} = \sum_{S\in\Sigma^{n}} \prod_{1\leq \ell\leq {m}} \pi_{\ell}^{-F_{\ell}(S)},  $$ \end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>Σ</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12859_2019_2784_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>for specific weights <italic>π</italic><sub>1</sub>,…,<italic>π</italic><sub><italic>m</italic></sub>.</p>
    </sec>
    <sec id="Sec5">
      <title>Expressing GC%-content, sequence validity and energies as features</title>
      <p>Formally, we define a <italic>feature F</italic> as a function on sequences, whose value is obtained by summing over an associated set of <italic>contributions</italic>. Each contribution <italic>f</italic> takes values in <inline-formula id="IEq3"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {R}\cup \{+\infty \}$\end{document}</tex-math><mml:math id="M10"><mml:mi>ℝ</mml:mi><mml:mo>∪</mml:mo><mml:mo>{</mml:mo><mml:mo>+</mml:mo><mml:mi>∞</mml:mi><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq3.gif"/></alternatives></inline-formula>, and depends on the nucleotides assigned to a restricted set of positions, namely its <italic>dependencies</italic>, denoted dep(<italic>f</italic>), such that 
<disp-formula id="Equa"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$F(S) =\!\!\sum_{\substack{{f} \text{ contribution of } {F},\\{\text{ dep }(f)=\{x_{1},\ldots,x_{p}\}}}}\!\! f\left(\left\{\substack{x_{1}\mapsto S_{x_{1}}\\\cdots\\x_{p}\mapsto S_{x_{p}}}\right\}\right). $$ \end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mi>F</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:mi>f</mml:mi><mml:mtext>contribution of</mml:mtext><mml:mi>F</mml:mi><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:mi>f</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.3em"/><mml:mspace width="0.3em"/><mml:mi>f</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⋯</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2019_2784_Article_Equa.gif" position="anchor"/></alternatives></disp-formula> Here, since <inline-formula id="IEq4"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {dep}(f)=\{x_{1},\ldots,x_{p}\}, \left \{\substack {x_{1}\mapsto S_{x_{1}}\\\cdots \\x_{p}\mapsto S_{x_{p}}}\right \}$\end{document}</tex-math><mml:math id="M14"><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:mi>f</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⋯</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq4.gif"/></alternatives></inline-formula>denotes the assignment, that assigns the respective nucleotides <inline-formula id="IEq5"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S_{x_{q}}$\end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq5.gif"/></alternatives></inline-formula> (1≤<italic>q</italic>≤<italic>p</italic>; <italic>p</italic>=|dep(<italic>f</italic>)|) to the positions <italic>x</italic><sub><italic>q</italic></sub> in dep(<italic>f</italic>).</p>
      <p>The GC<italic>%</italic> can be simply expressed using <italic>n</italic> contributions <inline-formula id="IEq6"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{\textsf {GC}}_{i}$\end{document}</tex-math><mml:math id="M18"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">GC</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq6.gif"/></alternatives></inline-formula>, each depending only on position <italic>i</italic>∈[1,<italic>n</italic>], i.e. <inline-formula id="IEq7"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {dep}(f^{\textsf {GC}}_{i})=\{i\}$\end{document}</tex-math><mml:math id="M20"><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">GC</mml:mtext></mml:mrow></mml:msubsup><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq7.gif"/></alternatives></inline-formula>, such that 
<disp-formula id="Equb"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$f^{\mathsf{GC}}_{i}(\{i\mapsto c\})= \left\{\begin{array}{ll} -1&amp;\text{if}\ c={\mathsf{G}}\ \text{or}\ {\mathsf{C}}\\ 0&amp;\text{ otherwise}. \end{array}\right. $$ \end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="sans-serif">GC</mml:mi></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>↦</mml:mo><mml:mi>c</mml:mi><mml:mo>}</mml:mo><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>c</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="sans-serif">G</mml:mi><mml:mspace width="1em"/><mml:mtext>or</mml:mtext><mml:mspace width="1em"/><mml:mi mathvariant="sans-serif">C</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mtext>otherwise</mml:mtext><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2019_2784_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>By summing <inline-formula id="IEq8"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{\textsf {GC}}_{i}(\{i\mapsto S_{i}\})$\end{document}</tex-math><mml:math id="M24"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">GC</mml:mtext></mml:mrow></mml:msubsup><mml:mo>(</mml:mo><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq8.gif"/></alternatives></inline-formula> over the whole sequence (<italic>i</italic>=1,…,<italic>n</italic>), one simply counts the occurrences of G and C.</p>
      <p>To start with a simple example of evaluating the energy of sequences by features, let us explain how they are used to count the number of <italic>valid sequences</italic>, i.e. sequences inducing only base pairs in <inline-formula id="IEq9"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {B}:=\{\{{\textsf {A}},{\textsf {U}}\}, \{{\textsf {G}},{\textsf {C}}\}, \{{\textsf {G}},{\textsf {U}}\}\}$\end{document}</tex-math><mml:math id="M26"><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo>{</mml:mo><mml:mtext mathvariant="sans-serif">A</mml:mtext><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">U</mml:mtext><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mo>{</mml:mo><mml:mtext mathvariant="sans-serif">G</mml:mtext><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">C</mml:mtext><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mo>{</mml:mo><mml:mtext mathvariant="sans-serif">G</mml:mtext><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">U</mml:mtext><mml:mo>}</mml:mo><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq9.gif"/></alternatives></inline-formula>. Consider a feature <italic>F</italic><sup>BP</sup> composed of contributions <inline-formula id="IEq10"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{\texttt {BP}}_{i,j}$\end{document}</tex-math><mml:math id="M28"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="monospace">BP</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq10.gif"/></alternatives></inline-formula>, for each base pair (<italic>i</italic>,<italic>j</italic>) occurring in some structure, such that 
<disp-formula id="Equc"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$f^{\mathsf{BP}}_{i,j}\left(\left\{\substack{i\mapsto a\\j\mapsto b}\right\}\right)= \left\{\begin{array}{ll} 0&amp;\text{if}\ \{a,b\}\in\mathcal{B} \\+\infty&amp;\text{otherwise}. \end{array}\right. $$ \end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="sans-serif">BP</mml:mi></mml:mrow></mml:msubsup><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mo>↦</mml:mo><mml:mi>a</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>j</mml:mi><mml:mo>↦</mml:mo><mml:mi>b</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mo>{</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>}</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>+</mml:mo><mml:mi>∞</mml:mi></mml:mtd><mml:mtd><mml:mtext>otherwise</mml:mtext><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2019_2784_Article_Equc.gif" position="anchor"/></alternatives></disp-formula> The value of <italic>F</italic><sup>BP</sup> is 0 for any valid sequence, and +<italic>∞</italic> as soon as some non canonical base pair is created. For any associated weight <italic>π</italic><sub>BP</sub>&gt;1, the contribution of a valid sequence is <inline-formula id="IEq11"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\pi _{\textsf {BP}}^{0} = 1$\end{document}</tex-math><mml:math id="M32"><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">BP</mml:mtext></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq11.gif"/></alternatives></inline-formula>, and the contribution of an invalid sequence is <inline-formula id="IEq12"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\pi _{\textsf {BP}}^{+\infty } = 0$\end{document}</tex-math><mml:math id="M34"><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">BP</mml:mtext></mml:mrow><mml:mrow><mml:mo>+</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq12.gif"/></alternatives></inline-formula>, so that Eq. <xref rid="Equ2" ref-type="">2</xref> (when restricted to <italic>F</italic><sup>BP</sup>) simply counts the number of valid sequences.</p>
      <p>Energy models for structure prediction vary considerably, yet can always be expressed as sums over contributions associated with local structural motifs (base pairs, base pair stacks, loops, …) under a certain nucleotide assignment. Energy models can thus be captured generically by introducing, for each motif <inline-formula id="IEq13"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\frak {m}$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="fraktur">𝔪</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq13.gif"/></alternatives></inline-formula> occurring in a target structure, a contribution <inline-formula id="IEq14"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f_{\frak {m}}$\end{document}</tex-math><mml:math id="M38"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="fraktur">𝔪</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq14.gif"/></alternatives></inline-formula>, taking a specific value for each assignment of nucleotides to its positions <inline-formula id="IEq15"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {dep}(f_{\frak {m}})$\end{document}</tex-math><mml:math id="M40"><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="fraktur">𝔪</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq15.gif"/></alternatives></inline-formula>. For instance, the contribution of a <italic>base pair stack</italic>, consisting of two pairs (<italic>i</italic>,<italic>j</italic>) and (<italic>i</italic>+1,<italic>j</italic>−1), can be captured by the introduction of a function <inline-formula id="IEq16"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{\textsf {Stack}}_{\substack {i,j}}$\end{document}</tex-math><mml:math id="M42"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">Stack</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq16.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq17"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {dep}\left (f^{\textsf {Stack}}_{\substack {i,j}}\right) = \{i,i+1,j-1,j\}$\end{document}</tex-math><mml:math id="M44"><mml:mtext>dep</mml:mtext><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">Stack</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq17.gif"/></alternatives></inline-formula>. We refer to energy models that consider the contributions of all base pair stacks (and thus introduce the corresponding dependencies) collectively as the <italic>stacking energy model</italic> (briefly, <italic>stacking model</italic>).</p>
    </sec>
    <sec id="Sec6">
      <title>Dependency (hyper)graph, tree decomposition and treewidth</title>
      <p>In order to compute the partition function of Eq. <xref rid="Equ2" ref-type="">2</xref>, and thus sample in a well-defined way, one must consider dependencies induced by the complete set of contributions 
<disp-formula id="Equd"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathcal{F} := \bigcup_{\ell}\{f\mid f\text{contribution of}\ F_{\ell}\}. $$ \end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mi mathvariant="script">F</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo mathsize="big">⋃</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:munder><mml:mo>{</mml:mo><mml:mi>f</mml:mi><mml:mo>∣</mml:mo><mml:mi>f</mml:mi><mml:mtext>contribution of</mml:mtext><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2019_2784_Article_Equd.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>In the simplest case, this set captures the requirement of canonical base pairing for each structure. To express this, let us define the <italic>base pair dependency graph</italic><inline-formula id="IEq18"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{\mathcal {R}}$\end{document}</tex-math><mml:math id="M48"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">R</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq18.gif"/></alternatives></inline-formula> as the graph with nodes {1,…,<italic>n</italic>} and edges <inline-formula id="IEq19"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\bigcup _{\ell \in [1,k]} R_{\ell }$\end{document}</tex-math><mml:math id="M50"><mml:munder><mml:mrow><mml:mo>⋃</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>]</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq19.gif"/></alternatives></inline-formula>.</p>
      <p>Since <inline-formula id="IEq20"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M52"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq20.gif"/></alternatives></inline-formula> defines potentially more complex dependencies, which can relate more than two positions, in general its dependencies cannot be represented by a graph. Instead, this requires a structure known as <italic>hypergraph</italic>, which consists of vertices (here, the sequence positions) connected by <italic>hyperedges</italic>, which are arbitrary sets of vertices. In this way, hypergraphs generalize undirected graphs where each edge is a set of exactly two vertices. The <italic>dependency (hyper)graph induced by</italic><inline-formula id="IEq21"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq21.gif"/></alternatives></inline-formula> is then defined as the hypergraph <inline-formula id="IEq22"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{\mathcal {F}}=(V, H)$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>H</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq22.gif"/></alternatives></inline-formula> on sequence positions <italic>V</italic>={1,…,<italic>n</italic>} by interpreting the dependencies as hyperedges, i.e. <inline-formula id="IEq23"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$H =\{\text {dep}(f)\mid f\in \mathcal {F}\})$\end{document}</tex-math><mml:math id="M58"><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:mi>f</mml:mi><mml:mo>)</mml:mo><mml:mo>∣</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo>}</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq23.gif"/></alternatives></inline-formula>.</p>
      <p>Let us finally define the <italic>tree decomposition</italic> of the graph <inline-formula id="IEq24"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{\mathcal {F}}$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq24.gif"/></alternatives></inline-formula>, a fundamental ingredient of our algorithms, which also determines their efficiency (most importantly, via its property called treewidth).</p>
      <sec id="d29e2001">
        <title>
          <bold>Definition 1</bold>
        </title>
        <p>(Tree decomposition and treewidth) Let <italic>G</italic>=(<italic>X</italic>,<italic>E</italic>) be a (hyper)graph with nodes in <italic>X</italic> and (hyper)edges in <italic>E</italic>. A <italic>tree decomposition</italic> of <italic>G</italic> is a pair (<italic>T</italic>,<italic>χ</italic>), where <italic>T</italic> is an unrooted tree/forest and, for each <italic>v</italic>∈<italic>T</italic>, <italic>χ</italic>(<italic>v</italic>)⊆<italic>X</italic> is a set of vertices assigned to the node <italic>v</italic>∈<italic>T</italic>, such that 
<list list-type="order"><list-item><p>each <italic>x</italic>∈<italic>X</italic> occurs in at least one <italic>χ</italic>(<italic>v</italic>);</p></list-item><list-item><p>for all <italic>x</italic>∈<italic>X</italic>,{<italic>v</italic>∣<italic>x</italic>∈<italic>χ</italic>(<italic>v</italic>)} induces a connected subtree of <italic>T</italic>;</p></list-item><list-item><p>for all <italic>e</italic>∈<italic>E</italic>, there is a node <italic>v</italic>∈<italic>T</italic>, such that <italic>e</italic>⊆<italic>χ</italic>(<italic>v</italic>).</p></list-item></list></p>
        <p>The <italic>treewidth</italic> of a tree decomposition (<italic>T</italic>,<italic>χ</italic>) is defined as max<italic>u</italic>∈<italic>T</italic>|<italic>χ</italic>(<italic>u</italic>)|−1.</p>
        <p>Intuitively, a tree decomposition of an (hyper)graph <italic>G</italic> is a tree that captures all the vertices and (hyper)edges of <italic>G</italic>, and properly relates dependent sub-problems to ensure consistency in a recursive computation. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows an optimal tree decomposition for a pair of structures under the stacking energy model.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Toy example of a tree decomposition associated with two target structures in the stacking energy model (where the four positions of each base pair stack depend on each other). Two target secondary structures (<bold>a</bold>) are merged into a joint hypergraph (<bold>b</bold>), whose hyperedges correspond to the quadruplets of positions involved in base pair stacks (colored). A valid tree decomposition (<bold>c</bold>) for the hypergraph ensures, among other properties, that each base pair and each base pair stack is represented in at least one of its node, so that features can be correctly evaluated. The treewidth of this tree decomposition is 3, a provably optimal value for this input hypergraph</p></caption><graphic xlink:href="12859_2019_2784_Fig2_HTML" id="MO2"/></fig>
</p>
      </sec>
    </sec>
    <sec id="Sec7">
      <title>Fixed-parameter tractable (FPT) algorithm</title>
      <p>Our algorithms specialize the idea of cluster tree elimination (CTE) [<xref ref-type="bibr" rid="CR22">22</xref>], which operates on constraint networks. In this correspondence, (partial) sequences specialize (partial) assignments and the constraint network would be given by variables for each sequence position, constraints due to valid base pairing, and the set of atomic feature contributions <inline-formula id="IEq25"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M62"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq25.gif"/></alternatives></inline-formula>.</p>
      <p>To formalize our algorithms, which iteratively merge evaluations of partial solutions, we extend the idea of atomic feature contributions, which are evaluated at sets of the form {<italic>x</italic><sub>1</sub>↦<italic>v</italic><sub>1</sub>,…,<italic>x</italic><sub><italic>d</italic></sub>↦<italic>v</italic><sub><italic>p</italic></sub>}. Let us call the latter object a <italic>partial sequence</italic>. Such an object will help to specify partial knowledge on the sequence at some point of the algorithm. Easily, we can extend the definition of contributions <italic>f</italic> to sets {<italic>x</italic><sub>1</sub>↦<italic>v</italic><sub>1</sub>,…,<italic>x</italic><sub><italic>p</italic></sub>↦<italic>v</italic><sub><italic>p</italic></sub>}, where {<italic>x</italic><sub>1</sub>…<italic>x</italic><sub><italic>p</italic></sub>} is any super-set of dep(<italic>f</italic>) by ignoring the superfluous assignments <italic>x</italic>↦<italic>v</italic>, where <italic>x</italic>∉dep(<italic>f</italic>).</p>
      <p>Moreover, to ensure a uniform algorithmic treatment of contributions, it is convenient to encode the weight <italic>π</italic> of each feature in its contributions. This transformation works by multiplying all contributions with ln(<italic>π</italic>), where <italic>π</italic> is the weight of the corresponding feature, since then <italic>exp</italic>(− ln(<italic>π</italic>)<italic>f</italic>(<italic>S</italic>))=<italic>π</italic><sup>−<italic>f</italic>(<italic>S</italic>)</sup>.</p>
      <p>Let us now specify the concrete set <inline-formula id="IEq26"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M64"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq26.gif"/></alternatives></inline-formula> of contributions that we use for the design in the stacking energy model targeting GC% and structures <inline-formula id="IEq27"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {R}$\end{document}</tex-math><mml:math id="M66"><mml:mi mathvariant="script">R</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq27.gif"/></alternatives></inline-formula> with weights <italic>π</italic><sub>0</sub>,…,<italic>π</italic><sub><italic>k</italic></sub>. The set <inline-formula id="IEq28"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M68"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq28.gif"/></alternatives></inline-formula> thus consists of 
<list list-type="bullet"><list-item><p>the transformed contributions <inline-formula id="IEq29"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\ln (\pi _{0})f^{\textsf {GC}}_{i}$\end{document}</tex-math><mml:math id="M70"><mml:mo>ln</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="sans-serif">GC</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq29.gif"/></alternatives></inline-formula> for the GC<italic>%</italic> feature (<italic>i</italic>=1,…,<italic>n</italic>);</p></list-item><list-item><p>the transformed contributions ln(<italic>π</italic><sub><italic>ℓ</italic></sub>)<italic>f</italic><italic>ij</italic>Stack for each structure <inline-formula id="IEq30"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$R_{\ell }\in \mathcal {R}$\end{document}</tex-math><mml:math id="M72"><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">R</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq30.gif"/></alternatives></inline-formula> and (<italic>i</italic>,<italic>j</italic>)∈<italic>R</italic><sub><italic>ℓ</italic></sub>.</p></list-item></list></p>
      <p>By these definitions, the set <inline-formula id="IEq31"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M74"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq31.gif"/></alternatives></inline-formula> encodes the partition function <inline-formula id="IEq32"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$Z_{{\pi _{0},\dots,\pi _{k}}}$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq32.gif"/></alternatives></inline-formula> of Eq. (<xref rid="Equ2" ref-type="">2</xref>).</p>
      <sec id="Sec8">
        <title>Partition function and stochastic backtracking</title>
        <p>We compute the partition function (as specified by <inline-formula id="IEq33"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M78"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq33.gif"/></alternatives></inline-formula>) by dynamic programming based on a tree decomposition of <inline-formula id="IEq34"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{\mathcal {F}}$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq34.gif"/></alternatives></inline-formula>, the dependency graph associated with <inline-formula id="IEq35"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M82"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq35.gif"/></alternatives></inline-formula>. Note, that analogous algorithms could be easily derived to count valid sequences, or list sequences having minimum free energy.</p>
        <p>Our algorithms are formulated to process a <italic>cluster tree</italic> of <inline-formula id="IEq36"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M84"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq36.gif"/></alternatives></inline-formula>, which is a tuple (<italic>T</italic>,<italic>χ</italic>,<italic>ϕ</italic>), where (<italic>T</italic>,<italic>χ</italic>) is a tree decomposition of <inline-formula id="IEq37"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{\mathcal {F}}$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq37.gif"/></alternatives></inline-formula>, and <italic>ϕ</italic>(<italic>v</italic>) represents a set of functions <italic>f</italic>, each uniquely assigned to a node <italic>v</italic>∈<italic>T</italic>; dep(<italic>f</italic>)⊆<italic>χ</italic>(<italic>v</italic>) and <inline-formula id="IEq38"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\phi (v)\cap \phi (v')=\varnothing $\end{document}</tex-math><mml:math id="M88"><mml:mi>ϕ</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>∩</mml:mo><mml:mi>ϕ</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>∅</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq38.gif"/></alternatives></inline-formula> for all <italic>v</italic>≠<italic>v</italic><sup>′</sup>.</p>
        <p>Two further notions are essential for our algorithms: for two nodes <italic>v</italic> and <italic>u</italic> of the cluster tree, define their <italic>separator</italic> as sep(<italic>u</italic>,<italic>v</italic>):=<italic>χ</italic>(<italic>u</italic>)∩<italic>χ</italic>(<italic>v</italic>); moreover, we define the <italic>difference positions</italic> from <italic>u</italic> to an adjacent <italic>v</italic> by diff(<italic>u</italic>→<italic>v</italic>):=<italic>χ</italic>(<italic>v</italic>)−sep(<italic>u</italic>,<italic>v</italic>).</p>
        <p>Since our algorithms iterate over specific sets of sequence positions, we moreover define the <italic>set</italic><inline-formula id="IEq39"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {P\!S}(\mathcal {Y})$\end{document}</tex-math><mml:math id="M90"><mml:mi mathvariant="script">P</mml:mi><mml:mspace width="0.3em"/><mml:mi mathvariant="script">S</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq39.gif"/></alternatives></inline-formula><italic>of all partial sequences determining the positions of</italic><inline-formula id="IEq40"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {Y}\subseteq \{1,\dots,n\}$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="script">Y</mml:mi><mml:mo>⊆</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq40.gif"/></alternatives></inline-formula> in all combinations of nucleotides {A,C,G,U}, i.e. for <inline-formula id="IEq41"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {Y}=\{y_{1},\dots,y_{q}\}$\end{document}</tex-math><mml:math id="M94"><mml:mi mathvariant="script">Y</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq41.gif"/></alternatives></inline-formula>, 
<disp-formula id="Eque"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} \mathcal{P\!S}(\mathcal{Y}) = \{ &amp; \{ y_{i}\mapsto v_{i} \mid i=1,\dots,q \} \\&amp; | (v_{1},\dots,v_{q}) \in \{{\mathsf{A}},{\mathsf{C}},{\mathsf{G}},{\mathsf{U}}\}^{q} \}. \end{array} $$ \end{document}</tex-math><mml:math id="M96"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mi mathvariant="script">P</mml:mi><mml:mspace width="0.3em"/><mml:mi mathvariant="script">S</mml:mi><mml:mo>(</mml:mo><mml:mi mathvariant="script">Y</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo></mml:mtd><mml:mtd class="align-2"><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>}</mml:mo><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr><mml:mtr><mml:mtd class="align-1"/><mml:mtd class="align-2"><mml:mo>|</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mi mathvariant="sans-serif">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">U</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>q</mml:mi></mml:mrow></mml:msup><mml:mo>}</mml:mo><mml:mi>.</mml:mi><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2019_2784_Article_Eque.gif" position="anchor"/></alternatives></disp-formula></p>
        <p>We assume the following properties of the given cluster tree (reflecting <inline-formula id="IEq42"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M98"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq42.gif"/></alternatives></inline-formula>): 
<list list-type="bullet"><list-item><p><italic>T</italic> is connected and contains a dedicated node <italic>r</italic>, with <inline-formula id="IEq43"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\chi (r)=\varnothing $\end{document}</tex-math><mml:math id="M100"><mml:mi>χ</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>∅</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq43.gif"/></alternatives></inline-formula> and <inline-formula id="IEq44"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\phi (r)=\varnothing $\end{document}</tex-math><mml:math id="M102"><mml:mi>ϕ</mml:mi><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>∅</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq44.gif"/></alternatives></inline-formula>. If such a root does not exist, it can be added to the tree decomposition and connected to one node in each connected component of <italic>T</italic>;</p></list-item><list-item><p>all edges in the tree decomposition are oriented towards this root;</p></list-item><list-item><p>all sets diff(<italic>u</italic>→<italic>v</italic>) are singleton: for any given cluster tree, an equivalent (in term of treewidth) cluster tree can always be obtained by inserting at most <inline-formula id="IEq45"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\Theta (|\mathcal {X}|)$\end{document}</tex-math><mml:math id="M104"><mml:mi>Θ</mml:mi><mml:mo>(</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>|</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq45.gif"/></alternatives></inline-formula> additional clusters.</p></list-item></list></p>
        <p>Algorithm 1 computes the partition function by passing messages along the directed edges <italic>u</italic>→<italic>v</italic> (which point from child <italic>u</italic> to its parent <italic>v</italic>). Each message <italic>m</italic> has the form of a contribution, i.e. it takes a partial sequence, depends on the positions <inline-formula id="IEq46"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {dep}(m)\subseteq \mathcal {X}$\end{document}</tex-math><mml:math id="M106"><mml:mtext>dep</mml:mtext><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq46.gif"/></alternatives></inline-formula>, and yields a partition function in <inline-formula id="IEq47"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {R}$\end{document}</tex-math><mml:math id="M108"><mml:mi>ℝ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq47.gif"/></alternatives></inline-formula>. The message from <italic>u</italic> to <italic>v</italic> represents the partition functions of the subtree of <italic>u</italic> for all possible partial sequences in <inline-formula id="IEq48"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {P\!S}(\text {sep}({u},{v}))$\end{document}</tex-math><mml:math id="M110"><mml:mi mathvariant="script">P</mml:mi><mml:mspace width="0.3em"/><mml:mi mathvariant="script">S</mml:mi><mml:mo>(</mml:mo><mml:mtext>sep</mml:mtext><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq48.gif"/></alternatives></inline-formula>. Induction over <italic>T</italic> lets us show the correctness of the algorithm (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section H). After running Algorithm 1, multiplying the 0-ary messages sent to the root <italic>r</italic> yields the total partition function (i.e. due to proper encoding the partition function of our design problem) through <inline-formula id="IEq49"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\prod _{({u} \rightarrow {r})\in T} {m_{{u}\rightarrow {r}}}({\varnothing })$\end{document}</tex-math><mml:math id="M112"><mml:munder><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>→</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mo>→</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mo>∅</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq49.gif"/></alternatives></inline-formula>.</p>
        <p>
          <graphic position="anchor" xlink:href="12859_2019_2784_Figf_HTML" id="MO3"/>
        </p>
        <p>The partition functions can then direct a stochastic backtracking procedure to sample sequences from the Boltzmann distribution (according to <inline-formula id="IEq50"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M114"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq50.gif"/></alternatives></inline-formula>). For an expanded cluster tree, after the messages <italic>m</italic><sub><italic>u</italic>→<italic>v</italic></sub> for the edges in the tree decomposition are generated by Algorithm 1, one can repeatedly call Algorithm 2, each time randomly drawing another sequence from the Boltzmann distribution.</p>
      </sec>
    </sec>
    <sec id="Sec9">
      <title>Complexity considerations</title>
      <p>Let <italic>s</italic> denote the maximum size of any separator set sep(<italic>u</italic>,<italic>v</italic>) and <italic>D</italic> denote the maximum size of diff(<italic>u</italic>→<italic>v</italic>) over (<italic>u</italic>,<italic>v</italic>)∈<italic>E</italic>. In the absence of specific optimizations, running Algorithm 1 requires <inline-formula id="IEq51"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left ((|\mathcal {F}|+|V|)\cdot 4^{w+1}\right)$\end{document}</tex-math><mml:math id="M116"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>(</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>)</mml:mo><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq51.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq52"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(|V|\cdot 4^{s})$\end{document}</tex-math><mml:math id="M118"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq52.gif"/></alternatives></inline-formula> space; Algorithm 2 would require <inline-formula id="IEq53"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}((|\mathcal {F}|+|V|)\cdot 4^{D})$\end{document}</tex-math><mml:math id="M120"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mo>(</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>)</mml:mo><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq53.gif"/></alternatives></inline-formula> per sample on arbitrary tree decompositions (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section I). W.l.o.g. we assume that <italic>D</italic>=1; note that tree decompositions can generally be transformed, such that diff(<italic>u</italic>→<italic>v</italic>)≤1. Moreover, the size of <inline-formula id="IEq54"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {F}$\end{document}</tex-math><mml:math id="M122"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq54.gif"/></alternatives></inline-formula> is linearly bounded: for <italic>k</italic> input structures for sequences of length <italic>n</italic>, the energy function is expressed by <inline-formula id="IEq55"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n\,k)$\end{document}</tex-math><mml:math id="M124"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mspace width="0.3em"/><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq55.gif"/></alternatives></inline-formula> functions. Finally, the number of cluster tree nodes is in <italic>O</italic>(<italic>n</italic>), such that <inline-formula id="IEq56"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|\mathcal {F}|+|V| \in \mathcal {O}(n\,k)$\end{document}</tex-math><mml:math id="M126"><mml:mo>|</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>V</mml:mi><mml:mo>|</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mspace width="0.3em"/><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq56.gif"/></alternatives></inline-formula>.</p>
      <p>
        <graphic position="anchor" xlink:href="12859_2019_2784_Figg_HTML" id="MO4"/>
      </p>
      <sec id="d29e3442">
        <title>
          <bold>Theorem 1</bold>
        </title>
        <p>(Complexities) Given are sequence length <italic>n</italic>, <italic>k</italic> target structures, and treewidth <italic>w</italic>. <italic>t</italic> sequences are generated from the Boltzmann distribution in <italic>O</italic>(<italic>n</italic>
<italic>k</italic> 4<sup><italic>w</italic>+1</sup>+<italic>t</italic>
<italic>n</italic>
<italic>k</italic>) time.</p>
        <p>By this theorem, the complexity is polynomial for fixed value of <italic>w</italic>, and Boltzmann sampling in our setting is thus fixed parameter tractable (FPT) in the treewidth. The complexity of the precomputation can be further improved to <inline-formula id="IEq57"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}\left (n\,k\,2^{w+1}\,2^{c}\right)$\end{document}</tex-math><mml:math id="M128"><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>n</mml:mi><mml:mspace width="0.3em"/><mml:mi>k</mml:mi><mml:mspace width="0.3em"/><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="0.3em"/><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq57.gif"/></alternatives></inline-formula>, where <italic>c</italic> (<italic>c</italic>≤<italic>w</italic>+1) is the maximum number of connected components represented in a node of the tree decomposition (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section J).</p>
        <p>Note that in this complexity analysis, we do not include time and space for computing the tree decomposition itself, since we observed that the computation time of tree decomposition (GreedyFillIn, implemented in LibTW by [<xref ref-type="bibr" rid="CR23">23</xref>]) for multi-target sampling is negligible compared to Algorithm 1 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Sections B and G).</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Design within expressive energy models</title>
      <p>In order to capture realistic energy models like the Turner model or pseudoknot models like HotKnots [<xref ref-type="bibr" rid="CR24">24</xref>], our sampling strategy can be extended in two ways: 1) either by directly sampling based on more expressive energy models or 2) by sampling in a simple energy model which can be used to approximate sampling in more complex models. In practice, complex energy models have a strong influence on the treewidth (of optimal tree decompositions) of the dependency graph and thus on the computational complexity of our approach. Therefore, it is interesting to consider—in addition to the stacking energy model—other stripped-down variants of the nearest neighbor model, which could offer a compromise between low-complexity (as due to the stacking energy model) and the high-accuracy of the Turner model.</p>
      <p><bold>Exact energy models.</bold> A first model, which is particularly promising, is the <italic>stacking energy model</italic>. This model only assigns energy contributions <italic>Δ</italic><italic>G</italic>(<italic>x</italic><sub><italic>i</italic></sub>,<italic>x</italic><sub><italic>j</italic></sub>,<italic>x</italic><sub><italic>i</italic>+1</sub>,<italic>x</italic><sub><italic>j</italic>−1</sub>) to stacks consisting of two nested base pairs (<italic>i</italic>,<italic>j</italic>) and (<italic>i</italic>+1,<italic>j</italic>−1). Within our framework, this energy model is captured by contributions <italic>f</italic><sub><italic>S</italic></sub>({<italic>x</italic><sub><italic>i</italic></sub>↦<italic>s</italic><sub><italic>i</italic></sub>,<italic>x</italic><sub><italic>i</italic>+1</sub>↦<italic>s</italic><sub><italic>i</italic>+1</sub>,<italic>x</italic><sub><italic>j</italic>−1</sub>↦<italic>s</italic><sub><italic>j</italic>−1</sub>,<italic>x</italic><sub><italic>j</italic></sub>↦<italic>s</italic><sub><italic>j</italic></sub>}):=<italic>Δ</italic><italic>G</italic>(<italic>x</italic><sub><italic>i</italic></sub>,<italic>x</italic><sub><italic>j</italic></sub>,<italic>x</italic><sub><italic>i</italic>+1</sub>,<italic>x</italic><sub><italic>j</italic>−1</sub>) associated with stacks occurring in at least one of the input structures.</p>
      <p>Complex <italic>loop-based</italic> energy models—e.g. the Turner model which, among others, includes energy terms for special loops and dangling ends—can also be encoded exactly as instances of our general framework. Namely, each loop <italic>L</italic> involving positions <italic>x</italic><sub>1</sub>,…, <italic>x</italic><sub><italic>p</italic></sub> will be modeled by a contribution <italic>f</italic><sub><italic>L</italic></sub>({<italic>x</italic><sub>1</sub> ↦ <italic>s</italic><sub>1</sub>,…,<italic>x</italic><sub><italic>p</italic></sub> ↦ <italic>s</italic><sub><italic>p</italic></sub>}):=<italic>Δ</italic><italic>G</italic>(<italic>s</italic><sub>1</sub>,…,<italic>s</italic><sub><italic>p</italic></sub>), where <italic>Δ</italic><italic>G</italic>(<italic>s</italic><sub>1</sub>,…,<italic>s</italic><sub><italic>p</italic></sub>) is the energy assigned to the loop in the energy model for a given nucleotide content <italic>s</italic><sub>1</sub>,…,<italic>s</italic><sub><italic>p</italic></sub>. Note that the maximum arity of contributions constitutes a lower bound on the treewidth, which may impact the practical complexity of our algorithms. For instance, loop contributions in the Turner 2004 model [<xref ref-type="bibr" rid="CR25">25</xref>] may depend on up to nine bases for interior loops, with a total of 5 unpaired bases (“2x3” interior loops)— although all other energy contributions, including dangling ends, only depend on at most four nucleotides.</p>
      <p><bold>Approximating Turner Energy using Simpler Energy Models.</bold> To capture the realistic Turner model <italic>E</italic><sub>T</sub> more efficiently, we exploit the tight correlation between <italic>E</italic><sub>T</sub> and the fitted stacking model <italic>E</italic><sub>st</sub> (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section F). More precisely, we observed a structure-specific affine dependency between the Turner and stacking energy models, so that <italic>E</italic><sub>T</sub>(<italic>S</italic>;<italic>R</italic>)≈<italic>γ</italic>·<italic>E</italic><sub>st</sub>(<italic>S</italic>;<italic>R</italic>)+<italic>δ</italic> for any structure <italic>R</italic> and sequence <italic>S</italic>. We inferred the (<italic>γ</italic>,<italic>δ</italic>) parameters from a set of sequences generated with homogeneous weights <italic>w</italic>=<italic>e</italic><sup><italic>β</italic></sup>, tuning only GC% to a predetermined value. Finally, we adjusted the targeted energies within our stacking model to <inline-formula id="IEq58"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$E_{\text {st}}^{\star } = (E_{\mathrm {T}}^{\star }- \delta)/\gamma $\end{document}</tex-math><mml:math id="M130"><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mtext>st</mml:mtext></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>−</mml:mo><mml:mi>δ</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq58.gif"/></alternatives></inline-formula> in order to reach, on average, the targeted energy <inline-formula id="IEq59"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$E_{\mathrm {T}}^{\star }$\end{document}</tex-math><mml:math id="M132"><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq59.gif"/></alternatives></inline-formula> in the Turner model.</p>
    </sec>
    <sec id="Sec11">
      <title>Extension to multidimensional Boltzmann sampling</title>
      <p>The flexibility of our framework allows to support the advanced sampling technique called “multidimensional Boltzmann sampling” [<xref ref-type="bibr" rid="CR26">26</xref>], which allows to enforce (probabilistically) additional, complex properties of the samples through an additional rejection. This technique was previously used to control GC% [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR27">27</xref>] and di-nucleotide content [<xref ref-type="bibr" rid="CR4">4</xref>] of sampled RNA sequences. Here, in addition to controlling GC% (our feature <italic>F</italic><sub>0</sub>) we use it to target the free energies <inline-formula id="IEq60"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$(E^{\star }_{1},\ldots,E^{\star }_{k})$\end{document}</tex-math><mml:math id="M134"><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq60.gif"/></alternatives></inline-formula> of the individual target structures (features <italic>F</italic><sub>1</sub>,…,<italic>F</italic><sub><italic>m</italic></sub>).</p>
      <p>For the multidimensional Boltzmann sampling, we require the already established ability to <italic>sample from a weighted distribution</italic> over the set of valid sequences, where the probability of a sequence <italic>S</italic> is 
<disp-formula id="Equf"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\mathbb{P}(S\mid \pmb{\pi}) = \frac{\prod_{\ell=0}^{k} \pi_{i}^{-F_{i}(S)}}{Z_{\pmb{\pi}}}, $$ \end{document}</tex-math><mml:math id="M136"><mml:mrow><mml:mi>ℙ</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>∣</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi>π</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="12859_2019_2784_Article_Equf.gif" position="anchor"/></alternatives></disp-formula> where <italic>π</italic>:=(<italic>π</italic><sub>0</sub>⋯<italic>π</italic><sub><italic>k</italic></sub>) is the vector of the positive real-valued <italic>weights</italic>, and <italic>Z</italic><sub><italic>π</italic></sub> is the weighted partition function.</p>
      <p>One then needs to <italic>learn a weights vector</italic>
<italic>π</italic> such that, on average, the targeted energies are achieved by a random sequences in the weighted distribution. In other words, <inline-formula id="IEq61"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {E}(F_{\ell }(S)\mid \pmb {\pi })=E^{\star }_{\ell }, \forall \ell \in [1,k]$\end{document}</tex-math><mml:math id="M138"><mml:mi mathvariant="double-struck">𝔼</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo><mml:mo>∣</mml:mo><mml:mi>π</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>]</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq61.gif"/></alternatives></inline-formula> and, analogously, the expectation of <italic>F</italic><sub>0</sub>(<italic>S</italic>) is the targeted GC content. The expected value of <italic>F</italic><sub><italic>ℓ</italic></sub> is always decreasing for increasing weights <italic>π</italic><sub><italic>ℓ</italic></sub> (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section K). More generally, computing a suitable parameter vector <italic>π</italic> can be restated as a convex optimization problem, and be efficiently solved using a wide array of methods [<xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR29">29</xref>].</p>
      <p>In practice, we use a simple heuristics which starts from an initial weight vector <italic>π</italic><sup>[0]</sup>:=(<italic>e</italic><sup><italic>β</italic></sup>,…,<italic>e</italic><sup><italic>β</italic></sup>) for <italic>β</italic>=1/(<italic>R</italic><italic>T</italic>), T= 37<sup>∘</sup>, and gas constant <italic>R</italic>. Then, at each iteration, it generates samples <inline-formula id="IEq62"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {S}$\end{document}</tex-math><mml:math id="M140"><mml:mi mathvariant="script">S</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq62.gif"/></alternatives></inline-formula> of sequences. The expected value of an energy <italic>F</italic><sub><italic>ℓ</italic></sub> is estimated as <inline-formula id="IEq63"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\hat \mu _{\ell }(\mathcal {S}) = \sum _{S\in \mathcal {S}}F_{\ell }(S)/|\mathcal {S}|$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi mathvariant="script">S</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo><mml:mo>/</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">S</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq63.gif"/></alternatives></inline-formula>, and the weights are updated at the <italic>t</italic>-th iteration by <inline-formula id="IEq64"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\pi _{\ell }^{[t+1]} = \pi _{\ell }^{[t]}\cdot \gamma ^{\hat \mu _{\ell }(\mathcal {S})-E^{\star }_{\ell }}$\end{document}</tex-math><mml:math id="M144"><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mi>t</mml:mi><mml:mo>]</mml:mo></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi>γ</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi mathvariant="script">S</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq64.gif"/></alternatives></inline-formula>. In practice, the constant <italic>γ</italic>&gt;1 is chosen empirically (<italic>γ</italic>=1.2) to achieve effective optimization. While heuristic in nature, this basic iteration was elected in our initial version of <inline-graphic xlink:href="12859_2019_2784_Figh_HTML.gif" id="d29e4429"/> because of its good empirical behavior.</p>
      <p>A further <italic>rejection step</italic> is applied to retain only those sequences whose energy for each structure <italic>R</italic><sub><italic>ℓ</italic></sub> belongs to <inline-formula id="IEq65"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$[E^{\star }_{\ell }\cdot (1-\varepsilon),E^{\star }_{\ell }\cdot (1+\varepsilon)]$\end{document}</tex-math><mml:math id="M146"><mml:mo>[</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>ε</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mo>⋆</mml:mo></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>ε</mml:mi><mml:mo>)</mml:mo><mml:mo>]</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq65.gif"/></alternatives></inline-formula>, for <italic>ε</italic>≥0 some predefined <italic>tolerance</italic>. The rejection approach is justified by the following considerations: i) <italic>Enacting an exact control over the energies would be technically hard and costly.</italic> Indeed, controlling the energies through dynamic programming would require explicit convolution products, generalizing [<xref ref-type="bibr" rid="CR30">30</xref>], inducing additional <italic>Θ</italic>(<italic>n</italic><sup>2<italic>k</italic></sup>) time and <italic>Θ</italic>(<italic>n</italic><sup><italic>k</italic></sup>) space overheads; ii) <italic>Induced distributions are typically concentrated.</italic> Intuitively, unless sequences are fully constrained individual energy terms are independent enough so that their sum is concentrated around its mean – the targeted energy (cf. Fig. <xref rid="Fig5" ref-type="fig">5</xref>). For base pair-based energy models and special base pair dependency graphs (paths, cycles…) this property rigorously follows from analytic combinatorics, see [<xref ref-type="bibr" rid="CR31">31</xref>] and [<xref ref-type="bibr" rid="CR32">32</xref>]. In such cases, the expected number of rejections before reaching the targeted energies remains constant when <inline-formula id="IEq66"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\varepsilon \ge 1/\sqrt {n}$\end{document}</tex-math><mml:math id="M148"><mml:mi>ε</mml:mi><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msqrt><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msqrt></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq66.gif"/></alternatives></inline-formula>, and <italic>Θ</italic>(<italic>n</italic><sup><italic>k</italic>/2</sup>) when <italic>ε</italic>=0.</p>
    </sec>
    <sec id="Sec12">
      <title>#P-hardness of counting valid designs</title>
      <p>While efficient, both in practice and in theory for graphs of bounded treewidth, our algorithms remain exponential in the worst case scenario, since the treewidth of a dependency graph can then become arbitrarily large. This exponential complexity in the worst case appears to be intrinsic. Indeed, we show that a specialization of our core problem, namely the enumeration of designs that respect canonical base pairing rules (A⇔U,G⇔C,G⇔U) is <italic>#</italic>P-hard, even when the dependency graph is bipartite and connected. The existence of a polynomial time algorithm for computing the partition function of Eq. <xref rid="Equ2" ref-type="">2</xref> is thus unlikely, as it would imply that # P=FP and, in turn, that P=NP.</p>
      <p>To establish that claim, we consider a dependency graph <italic>G</italic>=(<italic>V</italic><sub>1</sub>∪<italic>V</italic><sub>2</sub>,<italic>E</italic>) that is connected and bipartite (<italic>E</italic>∩(<italic>V</italic><sub>1</sub>×<italic>V</italic><sub>2</sub>)=<italic>E</italic>). Note that, assigning a nucleotide to a position <italic>u</italic>∈<italic>V</italic> constrains the parity ({A,G} or {C,U}) of all positions in the connected component of <italic>u</italic>. For this reason, we restrict our attention to the counting of valid designs <italic>up to trivial symmetry</italic> (A⇔C/G⇔U), by constraining the positions in <italic>V</italic><sub>1</sub> to A and G. Let Designs<sup>⋆</sup>(<italic>G</italic>) denote the subset of all designs for <italic>G</italic> under this constraint, noting that <italic>#</italic>Designs(<italic>G</italic>)=2·|Designs<sup>⋆</sup>(<italic>G</italic>)|.</p>
      <p>Finally, let IndSets(<italic>G</italic>) denote the set of all independent sets in the connected graph <italic>G</italic>; recall that an <italic>independent set</italic> of <italic>G</italic>=(<italic>V</italic>,<italic>E</italic>) is a subset <italic>V</italic><sup>′</sup>⊆<italic>V</italic> of nodes that are not connected by any edge in <italic>E</italic>.</p>
      <sec id="d29e4701">
        <title>
          <bold>Proposition 1</bold>
        </title>
        <p>|Designs<sup>⋆</sup>(<italic>G</italic>)|=|IndSets(<italic>G</italic>)|.</p>
      </sec>
      <sec id="d29e4716">
        <title>
          <italic>Proof</italic>
        </title>
        <p>Consider the mapping <italic>Ψ</italic>:Designs<sup>⋆</sup>(<italic>G</italic>)→IndSets(<italic>G</italic>),<italic>f</italic>↦{<italic>v</italic>∈<italic>V</italic>∣<italic>f</italic>(<italic>v</italic>)∈{A,C}}.</p>
        <p>We show that <italic>Ψ</italic> is bijective: 
<list list-type="bullet"><list-item><p><italic>Ψ</italic> is injective, i.e. <italic>Ψ</italic>(<italic>f</italic>)≠<italic>Ψ</italic>(<italic>f</italic><sup>′</sup>) for all <italic>f</italic>≠<italic>f</italic><sup>′</sup>. If <italic>f</italic>≠<italic>f</italic><sup>′</sup>, then there exists a node <italic>v</italic>∈<italic>V</italic> such that <italic>f</italic>(<italic>v</italic>)≠<italic>f</italic><sup>′</sup>(<italic>v</italic>). We discuss only the case <italic>v</italic>∈<italic>V</italic><sub>1</sub>, where we restricted the nucleotides to A and G. Then, {<italic>f</italic>(<italic>v</italic>),<italic>f</italic><sup>′</sup>(<italic>v</italic>)} must equal {A,G}, such that either <italic>v</italic>∈<italic>Ψ</italic>(<italic>f</italic>) or <italic>v</italic>∈<italic>Ψ</italic>(<italic>f</italic><sup>′</sup>).</p></list-item><list-item><p><italic>Ψ</italic> is surjective, i.e. there is a preimage for each element <italic>I</italic>∈IndSets(<italic>G</italic>). Define <italic>f</italic>∈Designs<sup>⋆</sup>(<italic>G</italic>) as 
<disp-formula id="Equ3"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ f(v) = \left\{\begin{array}{ll} {\mathsf{A}}&amp; \text{if}\ v\in V_{1}\ \text{and}\ v\in I \\ {\mathsf{C}}&amp; \text{if}\ v\in V_{2}\ \text{and}\ v\in I \\ {\mathsf{G}}&amp; \text{if}\ v\in V_{1}\ \text{and}\ v\not\in I\\ {\mathsf{U}}&amp; \text{if}\ v\in V_{2} \text{and}\ v\not\in I \end{array}\right.  $$ \end{document}</tex-math><mml:math id="M150"><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="sans-serif">A</mml:mi></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="sans-serif">C</mml:mi></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>I</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="sans-serif">G</mml:mi></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∉</mml:mo><mml:mi>I</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="sans-serif">U</mml:mi></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mi>v</mml:mi><mml:mo>∉</mml:mo><mml:mi>I</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="12859_2019_2784_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p><p>One easily verifies that <italic>Ψ</italic>(<italic>f</italic>)=<italic>I</italic>. It remains to show that <italic>f</italic> is a valid design for <italic>G</italic>, i.e. for each (<italic>v</italic>,<italic>v</italic><sup>′</sup>)∈<italic>E</italic>, <inline-formula id="IEq67"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\{f(v),f(v')\}\in \mathcal {B}$\end{document}</tex-math><mml:math id="M152"><mml:mo>{</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo><mml:mo>}</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq67.gif"/></alternatives></inline-formula>; please recall that we defined <inline-formula id="IEq68"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {B}$\end{document}</tex-math><mml:math id="M154"><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq68.gif"/></alternatives></inline-formula> as the set of all valid nucleotide pairs. Assume there is an edge (<italic>v</italic><sub>1</sub>,<italic>v</italic><sub>2</sub>)∈<italic>E</italic>, violating <inline-formula id="IEq69"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\{f(v_{1}),f(v_{2})\} \in \mathcal {B}$\end{document}</tex-math><mml:math id="M156"><mml:mo>{</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>}</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq69.gif"/></alternatives></inline-formula>. Since <italic>G</italic> is bipartite, <italic>v</italic><sub>1</sub>∈<italic>V</italic><sub>1</sub> and <italic>v</italic><sub>2</sub>∈<italic>V</italic><sub>2</sub>, such that <italic>f</italic>(<italic>v</italic><sub>1</sub>)∈{A,G} and <italic>f</italic>(<italic>v</italic><sub>2</sub>)∈{C,U}. This implies that among all possible {<italic>f</italic>(<italic>v</italic><sub>1</sub>),<italic>f</italic>(<italic>v</italic><sub>2</sub>)} only {A,C} is not in <inline-formula id="IEq70"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {B}$\end{document}</tex-math><mml:math id="M158"><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq70.gif"/></alternatives></inline-formula>, which in turn requires <italic>v</italic><sub>1</sub>∈<italic>I</italic> and <italic>v</italic><sub>2</sub>∈<italic>I</italic>. Therefore, since <italic>I</italic> is an independent set, the edge (<italic>v</italic><sub>1</sub>,<italic>v</italic><sub>2</sub>)∈<italic>E</italic> cannot exist. ■</p></list-item></list>
□</p>
        <p>Counting independent sets in bipartite graphs (<italic>#</italic>BIS) is a well-studied problem, shown to be #P-hard [<xref ref-type="bibr" rid="CR33">33</xref>] even on connected graphs. Now assume the existence of an efficient (polynomial-time) algorithm <inline-formula id="IEq71"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}$\end{document}</tex-math><mml:math id="M160"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq71.gif"/></alternatives></inline-formula> for computing |<italic>#</italic>Designs(<italic>G</italic>)| on connected (bipartite) graphs. Then, running <inline-formula id="IEq72"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}$\end{document}</tex-math><mml:math id="M162"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_2784_Article_IEq72.gif"/></alternatives></inline-formula> and returning |<italic>#</italic>Designs(<italic>G</italic>)|/2 constitutes an efficient algorithm for <italic>#</italic>BIS on connected graphs. In other words, any efficient algorithm for #Designs implies an efficient algorithm for <italic>#</italic>BIS, thus our conclusion that #Designs is <italic>#</italic>P-hard.</p>
        <p>Proposition 1 also strongly impacts the complexity of computing the partition function. Indeed it implies that, among the 4<sup><italic>k</italic></sup> possible assignments of nucleotides to <italic>k</italic> connected positions (in the base-pair dependency graph), at most 2<sup><italic>k</italic></sup> are compatible with base pairing rules. One can thus sharply reduce the complexity of Algorithm 1 by restricting the precomputations to compatible assignments.</p>
        <p>For a discussion on the implications of our hardness results beyond exact counting see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section L.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec13" sec-type="results">
    <title>Results</title>
    <p>We implemented the core algorithms in C++, resulting in the tool <inline-graphic xlink:href="12859_2019_2784_Figi_HTML.gif" id="d29e5342"/>, available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/yannponty/RNARedPrint">https://github.com/yannponty/RNARedPrint</ext-link>.</p>
    <p><inline-graphic xlink:href="12859_2019_2784_Figj_HTML.gif" id="d29e5351"/> takes a set of target structures, as well as weights for each energy feature and GC%, and generates a sample set of sequences compatible with the structures in the corresponding Boltzmann distribution; it currently supports the stacking energy model and the base pair energy model (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section F).</p>
    <p>Moreover, we provide two Python wrapper scripts. The first script targets prescribed energies using multi-dimensional Boltzmann sampling. For a given set of secondary structures, together with prescribed target energies and target GC%, this script generates a series of sequences that satisfy the target values for the energy and GC% features within configurable tolerances. Notably, these target energies are actual free energies in the realistic Turner energy model, and are targeted by efficiently sampling in the stacking energy model, and filtering sequences based on the RNAeval tool from the Vienna package [<xref ref-type="bibr" rid="CR34">34</xref>]. The second script generates high quality seed sequences suitable for negative RNA design. The details of this approach are described in the subsections below.</p>
    <sec id="Sec14">
      <title>Practical efficacy of Boltzmann sampling for sequences</title>
      <p>First, we show how seed sequences can be generated in a Boltzmann distribution, leading to designs that are substantially more stable that those generated uniformly. As can be seen in Fig. <xref rid="Fig3" ref-type="fig">3</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section A, sequences generated in the Boltzmann distribution not only reach lower free-energies than those generated in a uniform setting, but also achieve better Boltzmann probabilities. While the former is expected since the Boltzmann distribution explicitly favors low-energy candidates, the latter is somewhat surprising, since the Boltzmann probability of a target structure could, in principle, decrease under Boltzmann sampling due to the partition function growing faster than the Boltzmann factor. The empirical superiority of Boltzmann sampling appears robust to the target structure length and topology, as demonstrated by prior work [<xref ref-type="bibr" rid="CR9">9</xref>].
<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of free energy and Boltzmann probability for 10 000 uniform (<italic>π</italic>=1; blue dots) and Boltzmann distributed (<italic>π</italic>=500; green dots) sequences, targeting a simple structure consisting of two adjacent helices</p></caption><graphic xlink:href="12859_2019_2784_Fig3_HTML" id="MO6"/></fig>
</p>
      <p>However, while in principle feasible, sampling in a Boltzmann distribution directly using the Turner energy model may induce extreme computational demands, with treewidths scaling at least as large as the number of nucleotides in the largest loop. Fortunately, we found that intricacy of the Turner energy model can be circumvented with minimal loss of precision by using a simpler stacking energy model. As shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, a simple stacking energy model, whose design principles are further described in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section F, can be used to approximate the Turner energy model very adequately (correlation coefficient <italic>R</italic>=0.99) in the context of sequence design. Using this simpler model greatly reduces the treewidth, and thus the computational requirements of the whole method even for complex instances.
<fig id="Fig4"><label>Fig. 4</label><caption><p>A fitted energy model based on stacking pairs (<bold>a</bold>) leads to approximated free-energies that are highly correlated (R=0.99) with free-energies in the Turner energy model (<bold>b</bold>), yet induces tree widths that are amenable to practical sampling (<bold>c</bold>)</p></caption><graphic xlink:href="12859_2019_2784_Fig4_HTML" id="MO7"/></fig>
</p>
    </sec>
    <sec id="Sec15">
      <title>Effectively targeting Turner energies using multi-dimensional sampling</title>
      <p>We used our Boltzmann sampling strategy (Algorithms 1 and 2), to sample valid sequences for given target structures and weights <italic>π</italic><sub>1</sub>,…,<italic>π</italic><sub><italic>k</italic></sub>. Moreover, we used multi-dimensional Boltzmann sampling to target specific energies and GC%. Our tool <inline-graphic xlink:href="12859_2019_2784_Figk_HTML.gif" id="d29e5456"/> evaluates energies according to the stacking energy model <italic>E</italic><sub>st</sub>, whose parameters were fitted to best approximate Turner energies. As well, we implemented and fitted a base pair energy model for <inline-graphic xlink:href="12859_2019_2784_Figl_HTML.gif" id="d29e5465"/>, which was not studied for its targeting performance (both models: Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section F).</p>
      <p>Figure <xref rid="Fig5" ref-type="fig">5</xref> illustrates how well complex realistic energy models can be approximated based on simpler, but better tractable ones. For the two target structures of Fig. <xref rid="Fig5" ref-type="fig">5</xref>a, b shows the good fit between realistic energies in the full-fledged Dirks and Pierce energy model for pseudoknots (D&amp;P model) and energies in the stacking energy model, which is obtained for each of the two target structures (with respective <italic>R</italic><sup>2</sup> values of 0.846 and 0.841). For the shown fits we sampled <italic>n</italic>=10 000 sequences, targeting a GC% of 60%. For an example instance of the Modena benchmark with two pseudoknotted target structures, Fig. <xref rid="Fig5" ref-type="fig">5</xref>b shows the Turner energy distributions of the single structures as they result from sampling with different weight parameters. The figure illustrates how our multidimensional Boltzmann sampling strategy can, to a large extent, independently shift the Turner energies of sampled sequences towards prescribed targets. See Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section D for a further example with three pseudoknot-free target structures.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Targeting specific energies for pseudoknotted structures using multi-dimensional Boltzmann sampling. <bold>a</bold> Linear fits between the energies in the stacking model to the realistic pseudoknot energy model by Dirks and Pierce (D&amp;P) for initially sampled sequences and both target structures R1 and R2 (shown in <bold>b</bold>). The good match (respective <italic>R</italic><sup>2</sup> values of 0.846 and 0.841) enables more efficient targeting of Turner energies based on targeting stacking model energies. <bold>b</bold> Resulting D&amp;P energy distributions for the two target structures R1 and R2 when aiming for the respective free energies − 30 and − 20,−30 and −30,−25 and −25,−20 and −30 kcal/mol. These demonstrate the effectivity of our adaptive multi-dimensional Boltzmann sampling procedure, especially by comparing the distributions to those of uniform and Boltzmann sampled sequences, with homogeneous weights 1 and <italic>e</italic><sup><italic>β</italic></sup>, respectively</p></caption><graphic xlink:href="12859_2019_2784_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec16">
      <title>Generating high-quality seeds for further optimization</title>
      <p>We empirically evaluated <inline-graphic xlink:href="12859_2019_2784_Figm_HTML.gif" id="d29e5535"/> for generating seed sequences targeting multiple (pseudoknotted) structures, possibly followed by subsequent local optimizations. As a baseline for comparison, we considered <inline-graphic xlink:href="12859_2019_2784_Fign_HTML.gif" id="d29e5538"/> [<xref ref-type="bibr" rid="CR18">18</xref>], the current leading tool for multiple design. As a quality measure, we applied the objective function introduced by [<xref ref-type="bibr" rid="CR18">18</xref>] based on [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR35">35</xref>] for multi-stable design, defined as: 
<disp-formula id="Equ4"><label>3</label><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l}  \text{MultiDefect}(S) &amp;= \frac{1}{m} \sum_{\ell=1}^{m} (E(S, R_{\ell}) - \text{G}(S))\\ &amp;\;\;\; \!+\frac{1}{2{{m}\choose{2}}} \sum\limits_{1\leq\ell&lt; j\leq m}|E(S,R_{\ell}) - E(S,R_{j})|, \end{array} $$ \end{document}</tex-math><mml:math id="M164"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mtext>MultiDefect</mml:mtext><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo></mml:mtd><mml:mtd class="align-2"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mo>(</mml:mo><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mtext>G</mml:mtext><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr><mml:mtr><mml:mtd class="align-1"/><mml:mtd class="align-2"><mml:mspace width="2.77626pt"/><mml:mspace width="2.77626pt"/><mml:mspace width="2.77626pt"/><mml:mspace width="0.3em"/><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mfenced close=")" open="(" separators=""><mml:mfrac linethickness="0"><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mfenced></mml:mrow></mml:mfrac><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:mo>|</mml:mo><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2019_2784_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>where the free energies <italic>E</italic>(<italic>S</italic>,<italic>R</italic>) as well as the <italic>ensemble free energy</italic> G(<italic>S</italic>) of <italic>S</italic> are computed by RNAfold [<xref ref-type="bibr" rid="CR34">34</xref>] in the pseudoknot-free case; for pseudoknotted targets, G(<italic>S</italic>) is approximated by the <italic>minimum free energy</italic> of <italic>S</italic> as estimated by HotKnots [<xref ref-type="bibr" rid="CR24">24</xref>] in the energy model of [<xref ref-type="bibr" rid="CR36">36</xref>]. Intuitively, the first term of MultiDefect captures the distance of the targets from the ensemble free energy, while the second term penalizes the dispersion of targets; MultiDefect is best (minimized) when all targets simultaneously achieve the minimum free energy of the sequence.</p>
      <p>We considered a benchmark of six sets of target structures described in [<xref ref-type="bibr" rid="CR17">17</xref>]: 2str, 3str, and 4str consist of non-pseudoknotted structures, while PK60, PK80, and LE80 contain pseudoknotted structures. Based on <inline-graphic xlink:href="12859_2019_2784_Figo_HTML.gif" id="d29e5791"/>, we generated at least 1 000 seed sequences with similar energies for all target structures, for each instance of the benchmark. For this purpose, we determine good common target energies that can be successfully targeted for all single target structures simultaneously. Generally, we targeted 60% GC%. Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section E provides detailed results from this iterative procedure, which works similarly to the previously described multi-dimensional Boltzmann sampling. In particular, we observe that most of the benchmark inputs finish within only few iterations, where each iteration requires little time (confer Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section C).</p>
      <p>We compared the MultiDefect value of the derived sequences against that of seed sequences, uniformly sampled using <inline-graphic xlink:href="12859_2019_2784_Figp_HTML.gif" id="d29e5805"/>. Moreover, for both sets we used an adaptive greedy walk [<xref ref-type="bibr" rid="CR18">18</xref>] to <italic>minimize</italic> the MultiDefect function. At each step, the local search re-samples (uniformly at random) the positions of a randomly selected component in the base pair dependency graph, accepting the modification only if it results in a gain. We performed 500 greedy descent steps in the case of pseudoknot-free data-sets 2str, 3str, and 4str; and 200 steps for the pseudoknotted ones PK60, PK80, and LE80.</p>
      <p>The results, shown in Fig. <xref rid="Fig6" ref-type="fig">6</xref>, reveal that Boltzmann-sampled sequences outperform uniform seeds on every data-set, leading to average improvements in MultiDefect values ranging from 7.26 (LE80) to 16.05 (2str) units. Remarkably, this improvement is observed for both terms in MultiDefect (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section M). This means that <inline-graphic xlink:href="12859_2019_2784_Figq_HTML.gif" id="d29e5847"/> produces sequences whose targets are substantially closer to the ensemble free energy <italic>and</italic> have more similar stability across targets. In fact, for every sequence in our benchmark, consisting of 332 sets of target structures, we observed better MultiDefect for Boltzmann sampling than for uniform sampling (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section N). Notably, <inline-graphic xlink:href="12859_2019_2784_Figr_HTML.gif" id="d29e5857"/> performs equally well in the presence of pseudoknots; the difficulty rather lies in the computation of the MultiDefect function, since free energy minimization is costly in the presence of pseudoknots [<xref ref-type="bibr" rid="CR37">37</xref>] and good implementations are scarce.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison of the MultiDefect (see Eq. (<xref rid="Equ4" ref-type="">3</xref>); smaller values → better designs) for sequences sampled by <inline-graphic xlink:href="12859_2019_2784_Figt_HTML.gif" id="d29e5873"/> and uniform sampling <inline-graphic xlink:href="12859_2019_2784_Figu_HTML.gif" id="d29e5876"/> for six benchmark sets. For both sampling schemes, we show the MultiDefects of the sampled sequences, as well as results after further optimization by local search (“+ Opt.”)</p></caption><graphic xlink:href="12859_2019_2784_Fig6_HTML" id="MO8"/></fig>
</p>
      <p>Moreover, for all instances as well, the Boltzmann designs remain superior even after local optimizations, as shown by todo <xref rid="Fig6" ref-type="fig">6</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Section M and N. This observation is consistent with a superior quality of the starting point for the greedy walk, probably leading to better local minima of the MultiDefect function. However, it should be noted that the greedy walk is based on the uniform sampling of <inline-graphic xlink:href="12859_2019_2784_Figs_HTML.gif" id="d29e5890"/>, and thus can be expected to partially level the advantages of Boltzmann sampling. In future work, we hope to improve this aspect by exploiting Boltzmann sampling during the optimization run.</p>
    </sec>
  </sec>
  <sec id="Sec17" sec-type="conclusion">
    <title>Conclusion</title>
    <p>Based on a general framework and efficient algorithms, we introduce a novel approach to design RNA sequences while targeting very specific complex properties. In particular, we describe the targeting of the free energies of multiple target structures and the GC-content. Our method combines a fixed-parameter tractable (FPT) sampling algorithm with multi-dimensional Boltzmann sampling over distributions controlled by expressive RNA energy models. We demonstrate that the approach, despite of its theoretical hardness, performs well on typical multi-stable RNA design instances in practice. This good performance is a direct consequence of the approximability of Turner energies as well as the systematic algorithmic framework. By conducting a proof-of-concept study on an established benchmark set for negative multi-target RNA design (including pseudoknotted instances), we showcase a typical application of our tool <inline-graphic xlink:href="12859_2019_2784_Figv_HTML.gif" id="d29e5901"/>. In this study, the approach generates significantly better seed sequences than the previously best available method (uniform sampling). Our results strongly suggest that the presented technique for positive design can be highly beneficial in future negative design approaches. To substantiate our work additionally, we establish the <italic>#</italic>P-hardness of uniform sampling which, from a complexity-theoretic point of view, motivates the FPT, tree decomposition-based nature of our method.</p>
    <p>In this way, our framework enables new possibilities in the field of RNA sequence design. As particular advantage over previous sequence generation methods, it is extensible to include various more complex sequence constraints, including mandatory/forbidden motifs at specific positions or anywhere in the designed sequences, by adapting formal language constructs of Zhou et al. [<xref ref-type="bibr" rid="CR10">10</xref>]. In future work, negative design principles could be explicitly supported at the generation stage, for instance by penalizing a set of alternative helices/structures. We moreover envision using positive design to assess the significance of observed properties. Critically, our current perception of statistical significance suffers from overly simplistic simple null models (e.g. dinucleotide shuffling) used to model random RNAs [<xref ref-type="bibr" rid="CR38">38</xref>]). Here, our approach promises fundamental improvements by constructing null models of random sequences that satisfy multiple complex constraints.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec18">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2019_2784_MOESM1_ESM.pdf">
            <label>Additional file 1</label>
            <caption>
              <p>The Supplemental Material contains additional information on methods and parameters; elaboration of theory and proofs; as well as additional and detailed empirical results. (PDF 6642 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>#P</term>
        <def>
          <p>Complexity class “Sharp P”</p>
        </def>
      </def-item>
      <def-item>
        <term>DP</term>
        <def>
          <p>Dynamic programming</p>
        </def>
      </def-item>
      <def-item>
        <term>D&amp;P model</term>
        <def>
          <p>Pseudoknot energy model by Dirks and Pierce</p>
        </def>
      </def-item>
      <def-item>
        <term>FPT</term>
        <def>
          <p>Fixed-parameter tractable</p>
        </def>
      </def-item>
      <def-item>
        <term>GC%</term>
        <def>
          <p>GC-content</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Leonid Chindelevitch for suggesting a drastic optimization of our FPT algorithm based on stable sets combinatorics, and Arie Koster for practical recommendations on tree decompositions. A preliminary version of this work was presented at the conference RECOMB 2019 in Paris; we acknowledge the contributions of the anonymous reviewers.</p>
    <sec id="d29e5923">
      <title>Funding</title>
      <p>YP is supported by the <italic>Agence Nationale de la Recherche</italic> and the Austrian Science Fund (ANR-14-CE34-0011 and FWF-I-1804-N28; project RNALands). SH is supported by the German Federal Ministry of Education and Research (BMBF support code 031A538B; de.NBI: German Network for Bioinformatics Infrastructure) and the Future and Emerging Technologies programme (FET-Open grant 323987; project RiboNets). The funding bodies did not play any roles in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
    </sec>
    <sec id="d29e5931" sec-type="data-availability">
      <title>Availability of data and materials</title>
      <p>The software and data of this work are maintained in the Github repository <ext-link ext-link-type="uri" xlink:href="https://github.com/yannponty/RNARedPrint">https://github.com/yannponty/RNARedPrint</ext-link>; the acrchived version referenced in this manuscript is available at doi:10.5281/zenodo.2597571.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>YP and SW initiated the project and designed the algorithms. YP, SW and WW wrote the core software, while SW and SH contributed the weight optimization scripts. SH, SW and YP devised the computational experiments, which were conducted by SH. All authors wrote, read, and approved the manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec>
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec>
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec>
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec>
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kushwaha</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rostain</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Prakash</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Duncan</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Jaramillo</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Using RNA as molecular code for programming cellular function</article-title>
        <source>ACS Synth Biol</source>
        <year>2016</year>
        <volume>5</volume>
        <issue>8</issue>
        <fpage>795</fpage>
        <lpage>809</lpage>
        <pub-id pub-id-type="doi">10.1021/acssynbio.5b00297</pub-id>
        <pub-id pub-id-type="pmid">26999422</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodrigo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Jaramillo</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>RiboMaker: computational design of conformation-based riboregulation</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>17</issue>
        <fpage>2508</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu335</pub-id>
        <pub-id pub-id-type="pmid">24833802</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCaskill</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>The equilibrium partition function and base pair binding probabilities for RNA secondary structure</article-title>
        <source>Biopolymers</source>
        <year>1990</year>
        <volume>29</volume>
        <fpage>1105</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.360290621</pub-id>
        <pub-id pub-id-type="pmid">1695107</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Blanchette</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lécuyer</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>SPARCS: a web server to analyze (un)structured regions in coding RNA sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>480</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wachsmuth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weissheimer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>De novo design of a synthetic riboswitch that regulates transcription termination</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>4</issue>
        <fpage>2541</fpage>
        <lpage>51</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1330</pub-id>
        <pub-id pub-id-type="pmid">23275562</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Domin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wachsmuth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Applicability of a computational design approach for synthetic riboswitches</article-title>
        <source>Nucleic Acids Res</source>
        <year>2017</year>
        <volume>45</volume>
        <issue>7</issue>
        <fpage>4108</fpage>
        <lpage>4119</lpage>
        <?supplied-pmid 27994029?>
        <pub-id pub-id-type="pmid">27994029</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Findeiß</surname>
            <given-names>Sven</given-names>
          </name>
          <name>
            <surname>Etzel</surname>
            <given-names>Maja</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>Sebastian</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>Mario</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>Peter</given-names>
          </name>
        </person-group>
        <article-title>Design of Artificial Riboswitches as Biosensors</article-title>
        <source>Sensors</source>
        <year>2017</year>
        <volume>17</volume>
        <issue>9</issue>
        <fpage>1990</fpage>
        <pub-id pub-id-type="doi">10.3390/s17091990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>JYA</given-names>
          </name>
          <name>
            <surname>Steif</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Proctor</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>IM</given-names>
          </name>
        </person-group>
        <article-title>Transient RNA structure features are evolutionarily conserved and can be computationally predicted</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>6273</fpage>
        <lpage>85</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt319</pub-id>
        <pub-id pub-id-type="pmid">23625966</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reinharz</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A weighted sampling algorithm for the design of RNA sequences with targeted secondary structure and nucleotide distribution</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>308</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt217</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Zhou Y, Ponty Y, Vialette S, Waldispühl J, Zhang Y, Denise A. Flexible RNA design under structure and sequence constraints using formal languages In: Gao J., editor. ACM Conference on Bioinformatics, Computational Biology and Biomedical Informatics. ACM-BCB 2013, Washington, DC, USA, September 22-25, 2013. ACM: 2013. p. 229. 10.1145/2506583.2506623.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Levin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lis</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>O’Donnell</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Devadas</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A global sampling approach to designing and reengineering RNA secondary structures</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>40</volume>
        <issue>20</issue>
        <fpage>10041</fpage>
        <lpage>52</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks768</pub-id>
        <pub-id pub-id-type="pmid">22941632</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Busch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>INFO-RNA–a fast approach to inverse RNA folding</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>1823</fpage>
        <lpage>31</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl194</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Fontana</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Bonhoeffer</surname>
            <given-names>LS</given-names>
          </name>
          <name>
            <surname>Tacker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schuster</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Fast folding and comparison of RNA secondary structures</article-title>
        <source>Monatshefte für Chemie/Chemical Monthly</source>
        <year>1994</year>
        <volume>125</volume>
        <issue>2</issue>
        <fpage>167</fpage>
        <lpage>88</lpage>
        <pub-id pub-id-type="doi">10.1007/BF00818163</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kleinkauf</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Houwaart</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mann</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>antarna – multi-objective inverse folding of pseudoknot rna using ant-colony optimization</article-title>
        <source>BMC Bioinformatics</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>389</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0815-6</pub-id>
        <pub-id pub-id-type="pmid">26581440</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lyngsø</surname>
            <given-names>RB</given-names>
          </name>
          <name>
            <surname>Anderson</surname>
            <given-names>JWJ</given-names>
          </name>
          <name>
            <surname>Sizikova</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Badugu</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hyland</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hein</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Frnakenstein: multiple target inverse RNA folding</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <fpage>260</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-260</pub-id>
        <pub-id pub-id-type="pmid">23043260</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Höner zu Siederdissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abfalter</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Computational design of RNAs with complex energy landscapes</article-title>
        <source>Biopolymers</source>
        <year>2013</year>
        <volume>99</volume>
        <fpage>1124</fpage>
        <lpage>36</lpage>
        <?supplied-pmid 23818234?>
        <pub-id pub-id-type="pmid">23818234</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taneda</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Multi-objective optimization for RNA design with multiple target secondary structures</article-title>
        <source>BMC Bioinformatics</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>280</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0706-x</pub-id>
        <pub-id pub-id-type="pmid">26335276</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tschiatschek</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>RNAblueprint: flexible multiple target nucleic acid sequence design</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>2850</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx263</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ding</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lawrence</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A statistical sampling algorithm for RNA secondary structure prediction</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>7280</fpage>
        <lpage>301</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg938</pub-id>
        <pub-id pub-id-type="pmid">14654704</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bulatov</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Dyer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Goldberg</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Jerrum</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mcquillan</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>The expressibility of functions on the boolean domain, with applications to counting CSPs</article-title>
        <source>J ACM</source>
        <year>2013</year>
        <volume>60</volume>
        <issue>5</issue>
        <fpage>32</fpage>
        <lpage>13236</lpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cai</surname>
            <given-names>J-Y</given-names>
          </name>
          <name>
            <surname>Galanis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goldberg</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jerrum</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Štefankovič</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Vigoda</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title># BIS-hardness for 2-spin systems on bipartite bounded degree graphs in the tree non-uniqueness region</article-title>
        <source>J Comput Syst Sci</source>
        <year>2016</year>
        <volume>82</volume>
        <issue>5</issue>
        <fpage>690</fpage>
        <lpage>711</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcss.2015.11.009</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>Rina</given-names>
          </name>
        </person-group>
        <article-title>Reasoning with Probabilistic and Deterministic Graphical Models: Exact Algorithms</article-title>
        <source>Synthesis Lectures on Artificial Intelligence and Machine Learning</source>
        <year>2013</year>
        <volume>7</volume>
        <issue>3</issue>
        <fpage>1</fpage>
        <lpage>191</lpage>
        <pub-id pub-id-type="doi">10.2200/S00529ED1V01Y201308AIM023</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <mixed-citation publication-type="other">van Dijk T, van den Heuvel J-P, Slob W. Computing treewidth with LibTW. Technical report, University of Utrecht. 2006. <ext-link ext-link-type="uri" xlink:href="http://treewidth.com/treewidth/docs/LibTW.pdf">http://treewidth.com/treewidth/docs/LibTW.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ren</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rastegari</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Condon</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hoos</surname>
            <given-names>HH</given-names>
          </name>
        </person-group>
        <article-title>Hotknots: heuristic prediction of RNA secondary structures including pseudoknots</article-title>
        <source>RNA (New York, N.Y.)</source>
        <year>2005</year>
        <volume>11</volume>
        <fpage>1494</fpage>
        <lpage>504</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.7284905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>NNDB: the nearest neighbor parameter database for predicting stability of nucleic acid secondary structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>2009</year>
        <volume>38</volume>
        <issue>suppl_1</issue>
        <fpage>280</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkp892</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <mixed-citation publication-type="other">Bodini O, Ponty Y. Multi-dimensional Boltzmann sampling of languages. In: Proceedings of the 21st International Meeting on Probabilistic, Combinatorial, and Asymptotic Methods in the Analysis of Algorithms (AofA’10). DMTCS: 2010. p. 49–64.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>An unbiased adaptive sampling algorithm for the exploration of RNA mutational landscapes under evolutionary pressure</article-title>
        <source>J Comput Biol J Comput Mol Cell Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <fpage>1465</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0181</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Termier</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Controlled non-uniform random generation of decomposable structures</article-title>
        <source>Theor Comput Sci</source>
        <year>2010</year>
        <volume>411</volume>
        <issue>40-42</issue>
        <fpage>3527</fpage>
        <lpage>52</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2010.05.010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <mixed-citation publication-type="other">Bendkowski M, Bodini O, Dovgal S. Polynomial tuning of multiparametric combinatorial samplers. 2017. arXiv preprint arXiv:1708.01212.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <mixed-citation publication-type="other">Cupal J, Hofacker IL, Stadler PF. Dynamic programming algorithm for the density of states of RNA secondary structures In: Hofstaedt R, Lengauer T, Loeffler M, Schomburg D, editors. German Conference on Bioinformatics. Leipzig: 1996. p. 184–6.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bender</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Richmond</surname>
            <given-names>LB</given-names>
          </name>
          <name>
            <surname>Williamson</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Central and local limit theorems applied to asymptotic enumeration. iii. matrix recursions</article-title>
        <source>J Comb Theory Ser A</source>
        <year>1983</year>
        <volume>35</volume>
        <issue>3</issue>
        <fpage>263</fpage>
        <lpage>78</lpage>
        <pub-id pub-id-type="doi">10.1016/0097-3165(83)90012-2</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Drmota</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Systems of functional equations</article-title>
        <source>Random Struct Algoritm</source>
        <year>1997</year>
        <volume>10</volume>
        <issue>1-2</issue>
        <fpage>103</fpage>
        <lpage>24</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1098-2418(199701/03)10:1/2&lt;103::AID-RSA5&gt;3.0.CO;2-Z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ge</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Štefankovič</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>A graph polynomial for independent sets of bipartite graphs</article-title>
        <source>Comb Probab Comput</source>
        <year>2012</year>
        <volume>21</volume>
        <issue>05</issue>
        <fpage>695</fpage>
        <lpage>714</lpage>
        <pub-id pub-id-type="doi">10.1017/S0963548312000296</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lorenz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bernhart</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>zu Siederdissen</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Tafer</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
        </person-group>
        <article-title>ViennaRNA Package 2.0</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2011</year>
        <volume>6</volume>
        <issue>1</issue>
        <fpage>26</fpage>
        <pub-id pub-id-type="doi">10.1186/1748-7188-6-26</pub-id>
        <pub-id pub-id-type="pmid">22115189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Maurer-Stroh</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Zehl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Design of multistable RNA molecules</article-title>
        <source>RNA (New York, N.Y.)</source>
        <year>2001</year>
        <volume>7</volume>
        <fpage>254</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1017/S1355838201000863</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dirks</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Pierce</surname>
            <given-names>NA</given-names>
          </name>
        </person-group>
        <article-title>A partition function algorithm for nucleic acid secondary structure including pseudoknots</article-title>
        <source>J Comput Chem</source>
        <year>2003</year>
        <volume>24</volume>
        <issue>13</issue>
        <fpage>1664</fpage>
        <lpage>77</lpage>
        <pub-id pub-id-type="doi">10.1002/jcc.10296</pub-id>
        <pub-id pub-id-type="pmid">12926009</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Sheikh</surname>
            <given-names>Saad</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>Rolf</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Yann</given-names>
          </name>
        </person-group>
        <article-title>Impact of the Energy Model on the Complexity of RNA Folding with Pseudoknots</article-title>
        <source>Combinatorial Pattern Matching</source>
        <year>2012</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer Berlin Heidelberg</publisher-name>
        <fpage>321</fpage>
        <lpage>333</lpage>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rivas</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Clements</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>A statistical test for conserved rna structure shows lack of evidence for structure in lncrnas</article-title>
        <source>Nat Methods</source>
        <year>2017</year>
        <volume>14</volume>
        <fpage>45</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.4066</pub-id>
        <pub-id pub-id-type="pmid">27819659</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

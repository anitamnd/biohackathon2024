<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Biomed Semantics</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Biomed Semantics</journal-id>
    <journal-title-group>
      <journal-title>Journal of Biomedical Semantics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2041-1480</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9455941</article-id>
    <article-id pub-id-type="publisher-id">277</article-id>
    <article-id pub-id-type="doi">10.1186/s13326-022-00277-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Pathling: analytics on FHIR</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-9575-7641</contrib-id>
        <name>
          <surname>Grimes</surname>
          <given-names>John</given-names>
        </name>
        <address>
          <email>John.Grimes@csiro.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Szul</surname>
          <given-names>Piotr</given-names>
        </name>
        <address>
          <email>Piotr.Szul@csiro.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Metke-Jimenez</surname>
          <given-names>Alejandro</given-names>
        </name>
        <address>
          <email>Alejandro.Metke@csiro.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lawley</surname>
          <given-names>Michael</given-names>
        </name>
        <address>
          <email>Michael.Lawley@csiro.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Loi</surname>
          <given-names>Kylynn</given-names>
        </name>
        <address>
          <email>Kylynn.Loi@csiro.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.1016.6</institution-id><institution-id institution-id-type="ISNI">0000 0001 2173 2719</institution-id><institution>Australian e-Health Research Centre, </institution><institution>CSIRO, </institution></institution-wrap>Level 7, Surgical Treatment and Rehabilitation Service (STARS), Royal Brisbane and Women’s Hospital, Herston, 4029 Queensland Australia </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>8</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>8</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>13</volume>
    <elocation-id>23</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>8</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>24</day>
        <month>8</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Health data analytics is an area that is facing rapid change due to the acceleration of digitization of the health sector, and the changing landscape of health data and clinical terminology standards. Our research has identified a need for improved tooling to support analytics users in the task of analyzing Fast Healthcare Interoperability Resources (FHIR<sup>®</sup>) data and associated clinical terminology.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">A server implementation was developed, featuring a FHIR API with new operations designed to support exploratory data analysis (EDA), advanced patient cohort selection and data preparation tasks. Integration with a FHIR Terminology Service is also supported, allowing users to incorporate knowledge from rich terminologies such as SNOMED CT within their queries. A prototype user interface for EDA was developed, along with visualizations in support of a health data analysis project.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">Experience with applying this technology within research projects and towards the development of analytics-enabled applications provides a preliminary indication that the FHIR Analytics API pattern implemented by Pathling is a valuable abstraction for data scientists and software developers within the health care domain. Pathling contributes towards the value proposition for the use of FHIR within health data analytics, and assists with the use of complex clinical terminologies in that context.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13326-022-00277-1.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Data analytics</kwd>
      <kwd>Interoperability</kwd>
      <kwd>Clinical terminology</kwd>
      <kwd>FHIR</kwd>
      <kwd>FHIRPath</kwd>
      <kwd>SNOMED CT</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Australian Genomics Health Alliance</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par31">Fast Healthcare Interoperability Resources (FHIR<sup>®</sup>) is a health data standard that is experiencing rapid adoption within electronic health record (EHR) systems, driven by its ability to reduce the costs of interoperability and also its ability to enable a new ecosystem of third-party applications [<xref ref-type="bibr" rid="CR1">1</xref>]. However, the adoption of FHIR within analytics and research remains low, as the standard is still young and the tooling support for FHIR data analytics is still relatively immature [<xref ref-type="bibr" rid="CR2">2</xref>].</p>
    <p id="Par32">FHIR has catalyzed the rapid delivery of a large number of new applications that are capable of integrating with EHR data through the FHIR API, but the vast majority of these applications are limited to viewing data related to a single patient. One factor influencing this may be that the FHIR API is not currently well suited to queries that aggregate and categorize data across a population.</p>
    <p id="Par33">A parallel and related trend within health information systems is the investment in higher-quality structured data through coding of clinical records at the point of care. Increasingly, EHR implementations provide the ability for clinicians to add diagnoses, procedures, medications and other clinical concepts to medical records using advanced terminologies such as SNOMED CT [<xref ref-type="bibr" rid="CR3">3</xref>]. This provides the potential for more detailed analysis through access to more specific clinical concepts, and also the ability to query the underlying ontology based upon additional attributes and relationships to other clinical concepts.</p>
    <p id="Par34">The level of skill and experience required to make the best use of FHIR and clinical terminology within a data analysis workflow is currently very high, and in short supply.</p>
    <sec id="Sec2">
      <title>User research</title>
      <p id="Par35">Fifty-three (53) interviews were conducted with forty-two (42) different users in various target customer segments to achieve a better understanding of workflow and unmet requirements. These interviews presented open-ended questions relating to current challenges within the area of health data analytics.</p>
      <p id="Par36">This process helped to validate our assumptions about the market, confirming that there is a group of early adopters that are interested in augmenting their workflow with new tools in this area. It also identified a range of different analytic use cases that we could assess in terms of priority and fit with our product.</p>
      <p id="Par37">Based on what we learned from this process, we selected the following three primary use cases to serve as the focus of our work: <list list-type="order"><list-item><p id="Par38"><bold>Exploratory data analysis</bold> - Exploration of hypotheses, assessment of assumptions, and selection of appropriate statistical tools and techniques [<xref ref-type="bibr" rid="CR4">4</xref>].</p></list-item><list-item><p id="Par39"><bold>Patient cohort selection</bold> - Selection and retrieval of patient records based upon complex inclusion and exclusion criteria.</p></list-item><list-item><p id="Par40"><bold>Data preparation</bold> - Processing and re-shaping data in preparation for use with statistical and machine learning tools.</p></list-item></list></p>
    </sec>
    <sec id="Sec3">
      <title>Challenges</title>
      <p id="Par41">FHIR is complex, highly nested and graph-like in nature. This makes its representation within traditional relational data models challenging, especially when simplifying query logic is a key goal. Performance can also be an issue when designing data structures optimized for analytic query across a general set of use cases.</p>
      <p id="Par42">Clinical terminology can also be a particularly difficult type of reference data to work with, especially within the context of designing a data repository optimized for analytics. Complex clinical terminologies such as SNOMED CT are very large in terms of number of concepts, and the size of their query-optimized representation within a database can become unbounded if you take into account that they can be composed and queried in arbitrary ways, using expressions [<xref ref-type="bibr" rid="CR5">5</xref>]. Simplifying the representation of clinical terminology at the cost of query expressivity is at odds with our goal of maximizing the clinical utility of the tools we build.</p>
      <p id="Par43">To maximize the impact of the use of this technology within health care delivery, the solution needs to be practical and fit for use within the context of a large health care organization or jurisdiction. Specifically, the solution needs to be scalable in terms of data volume, enabling efficient query execution across data sets that could include longitudinal records for tens of millions of patients. The design also needs to enable real-time processing use cases, which are increasingly important with the deployment of a growing number of connected medical devices [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
    </sec>
    <sec id="Sec4">
      <title>Prior research</title>
      <p id="Par44">There have been numerous efforts to understand this problem space, and these initiatives have been a major influence upon the work described in this paper.</p>
      <p id="Par45">The Observational Health Data Sciences and Informatics (OHDSI) program has produced a large volume of work in the area of health data analytics, including the creation of the Observational Medical Outcomes Partnership (OMOP) Common Data Model (CDM) [<xref ref-type="bibr" rid="CR7">7</xref>]. OMOP provides a target data model for health data analytics, along with common vocabularies and analytic routines that can be run over the common model. OMOP has a rich ecosystem of tools that have been developed to aid in its use and implementation. An example of this is ATLAS [<xref ref-type="bibr" rid="CR8">8</xref>], a user interface designed to facilitate analytic query over the OMOP data model. Pathling aims to provide functionality that enables the development of similar tools within the FHIR ecosystem.</p>
      <p id="Par46">Use of the OpenEHR model within health data analytics has also been the subject of prior research. Notably, Ma et al. [<xref ref-type="bibr" rid="CR9">9</xref>] described a query language that went on to become the basis of the Archetype Query Language (AQL) [<xref ref-type="bibr" rid="CR10">10</xref>], a standard way of querying data from OpenEHR-based systems. AQL has since gone on to be implemented within a number of EHR and analytic software products, and provides clues as to the required design features of this type of capability.</p>
      <p id="Par47">Liu et al. [<xref ref-type="bibr" rid="CR11">11</xref>] examined a number of different ways to make bulk FHIR data available for analytic query, and concluded that Apache Parquet [<xref ref-type="bibr" rid="CR12">12</xref>] is the best candidate for storage and query of FHIR data in the context of large-scale analytics using Apache Spark. Our work also confirmed these findings, with Parquet providing good performance and also offering good compatibility with other tools and libraries that are used within health data analytics and machine learning.</p>
      <p id="Par48">The Cerner Corporation produced a library called Bunsen [<xref ref-type="bibr" rid="CR13">13</xref>] that encodes FHIR resources within Apache Spark [<xref ref-type="bibr" rid="CR14">14</xref>] data sets, and by extension, Apache Parquet. This foundational work has made it easier to load, transform and analyze FHIR data at scale, and some of this code has formed the foundation of the implementation described in this paper. Cerner has also been involved with the Structured Query Language (SQL) on FHIR proposal [<xref ref-type="bibr" rid="CR15">15</xref>], which is a projection of the FHIR data model on to the SQL language and relational query model. The Parquet encoding pattern used in Bunsen and Pathling is based upon this proposal.</p>
      <p id="Par49">Google has described and implemented a method for encoding FHIR data using Protocol Buffers [<xref ref-type="bibr" rid="CR16">16</xref>]. Google has also shared many tools and techniques [<xref ref-type="bibr" rid="CR17">17</xref>] for using FHIR with the BigQuery analytics platform, integrating with the FHIR Bulk Data API and using FHIR data within cloud-based data processing and machine learning pipelines.</p>
      <p id="Par50">The A3 project [<xref ref-type="bibr" rid="CR18">18</xref>], created as part of the Sync for Science collaboration, provides an example of how FHIR data can be normalized in service of simplifying the task of authoring analytic queries, and also demonstrates user interface patterns that can effectively support the authoring of cohort criteria.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Implementation</title>
    <p id="Par51">We addressed the identified use cases through the design of a “FHIR Analytics API” (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>), which refers to a specialization of the FHIR API that focuses on providing functionality useful for health data analytics applications. FHIR provides standard mechanisms for extending the functionality of its API such as extended operations and search profiles, and we have taken advantage of these to deliver new functionality that can be consumed by existing FHIR client software in a frictionless way.<fig id="Fig1"><label>Fig. 1</label><caption><p>Operations of a FHIR Analytics API</p></caption><graphic xlink:href="13326_2022_277_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par52">The additional operations purposefully target capabilities that are not currently possible or not easily achieved using the core FHIR REST API specification, such as aggregation and transformation of data. Search capabilities are also provided that allow for more expressive queries than the core FHIR Search API. The FHIR Analytics API is designed to complement, rather than replace, the transactional capabilities of the standard FHIR REST API.</p>
    <sec id="Sec6">
      <title>Import operation</title>
      <p id="Par53">The first feature provided by the FHIR Analytics API is the Import Operation (see Fig. <xref rid="Fig2" ref-type="fig">2</xref>), which provides a way of making bulk data available to the server and preparing it for subsequent queries. A standard FHIR server can import data using the create and update REST operations (and batches of these operations), however this approach does not scale well to the volume of data needed for analytic applications.<fig id="Fig2"><label>Fig. 2</label><caption><p>Import operation</p></caption><graphic xlink:href="13326_2022_277_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par54">The Import Operation is designed to accept data that has been extracted from systems through the HL7 FHIR Bulk Data Access interface [<xref ref-type="bibr" rid="CR19">19</xref>]. This specification is achieving rapid implementation within vendor implementations [<xref ref-type="bibr" rid="CR20">20</xref>], providing a standard way of sharing bulk data with other systems, including analytics tools. This operation is also based upon the Draft Bulk Import Implementation Guide [<xref ref-type="bibr" rid="CR21">21</xref>], an effort by the FHIR community to design a standard operation for the efficient import of large data sets.</p>
      <p id="Par55">One of the differentiating aspects of a bulk data import request (relative to the FHIR transaction/batch operation) is the method for providing data to the server. Within FHIR transaction and batch requests, data is provided inline within the HTTP request itself. In a bulk import request, the client provides the server with URLs that the data files can be retrieved from. The protocols used within these URLs can include sources other than HTTP. Pathling currently supports the retrieval of data from Hadoop File System (HDFS) [<xref ref-type="bibr" rid="CR22">22</xref>] and Amazon S3 URLs, which both use protocols that are optimized for the retrieval of large files.</p>
      <p id="Par56">The other difference with bulk import is that the response may be asynchronous, responding immediately with a URL rather than making the client wait for the completion of the operation. This URL can be used to receive updates on the progress of the operation and information about how to retrieve the final result. This is important when operations can take long periods of time to complete, and be otherwise hampered by timeouts and limitations on request size within HTTP implementations.</p>
      <p id="Par57">FHIR data are made available to the server via NDJSON [<xref ref-type="bibr" rid="CR23">23</xref>], which is a way of representing collections of FHIR resources that is more bandwidth and storage efficient than a FHIR Bundle. Each NDJSON file provided to the operation contains a collection of instances of a single FHIR resource type.</p>
    </sec>
    <sec id="Sec7">
      <title>Aggregate operation</title>
      <p id="Par58">The second feature of the FHIR Analytics API is the Aggregate Operation (see Fig. <xref rid="Fig3" ref-type="fig">3</xref>), which facilitates the execution of aggregation-based queries across a data set. The concept of the aggregate operation is very similar to that of a “pivot table” [<xref ref-type="bibr" rid="CR24">24</xref>], commonly used within spreadsheet applications. This provides a familiar and flexible set of tools that can power a range of different applications that satisfy the “Exploratory data analysis” use case, including visualizations.<fig id="Fig3"><label>Fig. 3</label><caption><p>Aggregate operation</p></caption><graphic xlink:href="13326_2022_277_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par59">Expressions are used to describe the aggregations, groupings and filters that form the definition of the query. We use FHIRPath [<xref ref-type="bibr" rid="CR25">25</xref>] for this purpose, a language that is used within the FHIR specification. FHIRPath is a graph-based traversal language, and allows for “paths” through the resource graph to be described succinctly and in absence of some of the complexities of dealing with FHIR data types, cardinalities, resource references, and missing data.</p>
      <p id="Par60">The Aggregate Operation is defined within FHIR as a “type-level” operation, which means that it is invoked on a particular resource type, with the collection of all resources of that type becoming the subject of the operation. This subject resource becomes the root context for the FHIRPath expressions that are supplied to the operation.</p>
      <p id="Par61">One or more aggregation expressions can be provided, serving the purpose of defining a set of summary values that are to be calculated over the data set. Some examples of aggregation expressions are “count” and “sum”.</p>
      <p id="Par62">Grouping expressions are evaluated against each resource in order to determine the set of groups that it should be counted within. Aggregation expressions are then executed to determine a result for each group of resources, and these results are provided within the response to the operation.</p>
      <p id="Par63">Filter expressions serve to constrain the scope of the input collection. Resources that do not evaluate as true for all supplied filter expressions are excluded from the results.</p>
      <p id="Par64">A simple worked example of the Aggregate Operation follows, given the data set of patients, with a gender, deceased status (“deceasedBoolean”) and birth date (“birthDate”) in Table <xref rid="Tab1" ref-type="table">1</xref>.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Example Patient data set</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">id</th><th align="left">gender</th><th align="left">deceasedBoolean</th><th align="left">birthDate</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">male</td><td align="left">false</td><td align="left">2013-06-10</td></tr><tr><td align="left">2</td><td align="left">female</td><td align="left">true</td><td align="left">1999-05-12</td></tr><tr><td align="left">3</td><td align="left">male</td><td align="left">true</td><td align="left">1955-07-08</td></tr><tr><td align="left">4</td><td align="left">female</td><td align="left">true</td><td align="left">1972-03-14</td></tr><tr><td align="left">5</td><td align="left">other</td><td align="left">false</td><td align="left">1981-03-27</td></tr><tr><td align="left">6</td><td align="left">male</td><td align="left">false</td><td align="left">1991-05-05</td></tr></tbody></table></table-wrap></p>
      <p id="Par65">A query can be composed that contains one aggregation expression, A:<graphic position="anchor" xlink:href="13326_2022_277_Figa_HTML" id="MO4"/></p>
      <p id="Par66">The query contains two grouping expressions: B, grouping on the patient gender, and; C, grouping on the deceased status of the patient:<graphic position="anchor" xlink:href="13326_2022_277_Figb_HTML" id="MO5"/></p>
      <p id="Par67">Finally, the query defines a single filter D, filtering out all patients with a birth date from January 1, 2000:<graphic position="anchor" xlink:href="13326_2022_277_Figc_HTML" id="MO6"/></p>
      <p id="Par68">Table <xref rid="Tab2" ref-type="table">2</xref> shows the result, which contains a row for each distinct combination of B and C found in the data set, along with the result of A calculated over the resources that are a part of that grouping.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Example result from Aggregate Operation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">B</th><th align="left">C</th><th align="left">A</th></tr></thead><tbody><tr><td align="left">female</td><td align="left">true</td><td align="left">2</td></tr><tr><td align="left">male</td><td align="left">true</td><td align="left">1</td></tr><tr><td align="left">male</td><td align="left">false</td><td align="left">1</td></tr><tr><td align="left">other</td><td align="left">false</td><td align="left">1</td></tr></tbody></table></table-wrap></p>
      <p id="Par69">Note that patient 1 was omitted from the results by filter D. The combinations [female, false] and [other, true] were not included, as there were no resources matching these values.</p>
    </sec>
    <sec id="Sec8">
      <title>FHIRPath search profile</title>
      <p id="Par70">The third feature of the FHIR Analytics API is FHIRPath-powered search functionality, surfaced through a FHIR search profile. This search profile accepts any number of FHIRPath filter expressions, returning a Bundle resource containing matching resources within the server.</p>
      <p id="Par71">This search parameter can be used in conjunction with the Aggregate Operation, which returns a “drill down” expression with each grouping in the response. Each of these expressions can be used with the search API to retrieve the individual resources that comprise a grouping within the Aggregate Operation result. This provides the basis for delivering applications that satisfy the aforementioned “Patient cohort selection” use case.</p>
      <p id="Par72">FHIRPath filter expressions can also be combined with standard search parameters from the FHIR search specification. This allows the client to customize the representation of results in the response. An example of this is “_elements”, which controls the data elements that are included with each resource in the response.</p>
      <p id="Par73">An example drill-down expression for the [female, true] grouping in the previous example Aggregate response would be:<graphic position="anchor" xlink:href="13326_2022_277_Figd_HTML" id="MO7"/></p>
      <p id="Par74">This would return patients 2 and 4 from the example data set. Note that this incorporates one of the distinct value pairs resulting from groupings B and C as a matching condition, as well as the overall filter condition from expression D.</p>
      <p id="Par75">FHIRPath provides additional expressive power relative to the FHIR Search API, such as: <list list-type="order"><list-item><p id="Par76">The ability to refer to any element, not just those that are the subject of a defined search parameter;</p></list-item><list-item><p id="Par77">Unlimited nesting and bracketing of expressions;</p></list-item><list-item><p id="Par78">The ability to follow resource references that traverse multiple levels of relationships, and;</p></list-item><list-item><p id="Par79">Support for complex terminology operations within criteria.</p></list-item></list></p>
    </sec>
    <sec id="Sec9">
      <title>Extract operation</title>
      <p id="Par80">Finally, the Extract Operation (see Fig. <xref rid="Fig4" ref-type="fig">4</xref>) is designed to create custom data extracts for input into other tools and workflows. It is designed to simplify the task of reaching into the FHIR data model and producing a flattened rendition of selected parts of the data set. The full power of FHIRPath is available for use within this operation, including terminology functions.<fig id="Fig4"><label>Fig. 4</label><caption><p>Extract operation</p></caption><graphic xlink:href="13326_2022_277_Fig4_HTML" id="MO8"/></fig></p>
      <p id="Par81">The Extract Operation takes a subject resource type and a set of FHIRPath expressions as input. The result of the operation is a delimited text file with a column for each input expression. Each row in the file contains the result of the execution each of those expressions against each FHIR resource.</p>
      <p id="Par82">A simple worked example of the Extract Operation follows, using the previously stated example Patient data set in Table <xref rid="Tab1" ref-type="table">1</xref>, a Practitioner data set in Table <xref rid="Tab3" ref-type="table">3</xref> and a MedicationRequest data set in Table <xref rid="Tab4" ref-type="table">4</xref>.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Example Practitioner data set</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">identifier</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Ampelios Ajeet</td><td align="left">[ { system: “urn:example:provider-id”, value: “ajeet” } ]</td></tr><tr><td align="left">2</td><td align="left">Leon Gautselin</td><td align="left">[ { system: “urn:example:provider-id”, value: “gaut” } ]</td></tr><tr><td align="left">3</td><td align="left">Felicita Cyra</td><td align="left">[ { system: “urn:example:provider-id”, value: “cyra” } ]</td></tr></tbody></table></table-wrap></p>
      <p id="Par83">
        <table-wrap id="Tab4">
          <label>Table 4</label>
          <caption>
            <p>Example MedicationRequest data set</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">id</th>
                <th align="left">medicationCodeableConcept</th>
                <th align="left">subject</th>
                <th align="left">requester</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">1</td>
                <td align="left">[ { text: “Atorvastatin” } ]</td>
                <td align="left">Patient/4</td>
                <td align="left">Practitioner/1</td>
              </tr>
              <tr>
                <td align="left">2</td>
                <td align="left">[ { text: “Levothyroxine” } ]</td>
                <td align="left">Patient/4</td>
                <td align="left">Practitioner/1</td>
              </tr>
              <tr>
                <td align="left">3</td>
                <td align="left">[ { text: “Lisinopril” } ]</td>
                <td align="left">Patient/1</td>
                <td align="left">Practitioner/3</td>
              </tr>
              <tr>
                <td align="left">4</td>
                <td align="left">[ { text: “Metformin” } ]</td>
                <td align="left">Patient/2</td>
                <td align="left">Practitioner/2</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </p>
      <p id="Par84">A query can be composed that uses MedicationRequest as the subject resource. It contains four column expressions: D, the resource ID of the MedicationRequest; E, the resource ID of the subject Patient; F, the provider identifier of the prescribing Practitioner, and; G, the text representation of the prescribed medication.<graphic position="anchor" xlink:href="13326_2022_277_Fige_HTML" id="MO9"/></p>
      <p id="Par85">Table <xref rid="Tab5" ref-type="table">5</xref> shows the result, which contains a row for each MedicationRequest resource. Each row contains the result of evaluating the expressions D, E, F and G against the resource.<table-wrap id="Tab5"><label>Table 5</label><caption><p>Example result from Extract operation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">D</th><th align="left">E</th><th align="left">F</th><th align="left">G</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">4</td><td align="left">ajeet</td><td align="left">Atorvastatin</td></tr><tr><td align="left">2</td><td align="left">4</td><td align="left">ajeet</td><td align="left">Levothyroxine</td></tr><tr><td align="left">3</td><td align="left">1</td><td align="left">cyra</td><td align="left">Lisinopril</td></tr><tr><td align="left">4</td><td align="left">2</td><td align="left">gaut</td><td align="left">Metformin</td></tr></tbody></table></table-wrap></p>
      <p id="Par86">The Extract operation returns a URL that can be used to retrieve the result of the operation, rather than returning the result inline within the HTTP response. This is to account for the potential large size of an Extract result when executed upon a data set with a large number of resources.</p>
      <p id="Par87">The Extract operation also features a “limit” parameter that allows the user to specify the maximum number of rows to be returned within the result. This can be useful to preview the format of a result without executing the query against the entire data set.</p>
    </sec>
    <sec id="Sec10">
      <title>Terminology functions</title>
      <p id="Par88">As an important source of meaning within the information model, terminology is a core element of both the FHIR and FHIRPath specification. The FHIRPath specification contains a number of terminology functions that we have implemented and extended to provide a set of capabilities useful for analytic query.</p>
      <p id="Par89">In our implementation, these functions delegate terminology queries to an implementation of the FHIR Terminology Service API. This approach removes the need to import and maintain a read-optimized view of terminology data, and it creates a clear separation of concerns between the query engine and the source of terminology knowledge.</p>
      <sec id="Sec11">
        <title>Value set membership</title>
        <p id="Par90">Value set membership testing is fundamental to the task of categorizing and extracting ontological information from codes. We provide this capability through the implementation of the FHIRPath function, “memberOf”. This function takes a URI that identifies a defined set of codes, and uses the terminology server to determine the membership of a set of input concepts based on its knowledge of the code systems involved.</p>
        <p id="Par91">An example of the “memberOf” function follows, given the data set of SNOMED CT coded procedures in Table <xref rid="Tab6" ref-type="table">6</xref>. This example uses a SNOMED CT implicit ValueSet URI that refers to an Expression Constraint Language (ECL) expression, which is a standard mechanism within FHIR for describing a set of SNOMED CT concepts.<table-wrap id="Tab6"><label>Table 6</label><caption><p>Example data set used with memberOf function</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">id</th><th align="left">code</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">232850000 |Aortoventriculoplasty|</td></tr><tr><td align="left">2</td><td align="left">63377001 |Open core needle biopsy of liver|</td></tr><tr><td align="left">3</td><td align="left">428581004 |Percutaneous transluminal ablation of accessory pathway|</td></tr><tr><td align="left">4</td><td align="left">25321000 |Thoracoscopic pneumonectomy|</td></tr></tbody></table></table-wrap></p>
        <p id="Par92">Note that the actual structure of the “code” field in the FHIR Procedure resource is CodeableConcept, which is a complex structure that can accommodate multiple codings along with text. This has been simplified for this example to a simple SNOMED CT code, along with a label for readability.</p>
        <p id="Par93">Given that a search query was made to the Procedure resource, with the following FHIRPath condition:<graphic position="anchor" xlink:href="13326_2022_277_Figf_HTML" id="MO10"/></p>
        <p id="Par94">Where the following ECL expression was used within the argument:<graphic position="anchor" xlink:href="13326_2022_277_Figg_HTML" id="MO11"/></p>
        <p id="Par95">The result of this operation would be a FHIR Bundle containing the Procedure resources with SNOMED CT codes that are a type of “Procedure”, where the “Procedure site” is a “Heart structure”. There are 1,638 concepts that would match this query within the international release of SNOMED CT (February 2022), out of a total of 58,737 procedure concepts. The operation would return the Procedure resources with IDs 1 and 3, which are both types of procedures that are performed on the heart.</p>
        <p id="Par96">The information required to derive this result includes the subsumption relationships and attributes of the codes that exist within SNOMED CT itself. The terminology server has knowledge of these relationships along with the ability to understand ECL, and Pathling requests this information at execution time using the FHIR Terminology Service API.</p>
      </sec>
      <sec id="Sec12">
        <title>Subsumption testing</title>
        <p id="Par97">Code subsumption testing is particularly useful for terminologies such as SNOMED CT, which feature deep hierarchies and large numbers of concepts. The functions “subsumes” and “subsumedBy” allow us to efficiently move up and down the subsumption hierarchy within our queries, based on the ontological data held by the terminology server.</p>
        <p id="Par98">An example of an expression that uses subsumption testing follows:<graphic position="anchor" xlink:href="13326_2022_277_Figh_HTML" id="MO12"/></p>
        <p id="Par99">This expression could be used to filter Condition resources to only those that are a type of “Diabetes mellitus” (which is the concept referred to by the identifier “73211009”). Within the international release of SNOMED CT (February 2022), there are 119 concepts that would match this query.</p>
      </sec>
      <sec id="Sec13">
        <title>Concept translation</title>
        <p id="Par100">Concept translation allows us to traverse mappings between codes that are known to the terminology server. The “translate” function takes a set of input concepts and asks the terminology server to return the targets of mapping relationships found within a particular map. This is particularly useful in the area of data analytics, where the harmonization of heterogeneous data capture is a common requirement. It can also be used with maps that are implicitly defined within particular terminologies. One example of this is the use of SNOMED CT historical associations to translate inactive codes to the updated codes that replace them.</p>
        <p id="Par101">Another example translates SNOMED CT codes to Read CTV3:<graphic position="anchor" xlink:href="13326_2022_277_Figi_HTML" id="MO13"/></p>
        <p id="Par102">The argument refers to a SNOMED CT implicit ConceptMap URI. This is the standard mechanism within FHIR for describing a simple map within SNOMED CT. This URI refers to a map that is released as part of the international edition of SNOMED CT (identified by “900000000000497000”).</p>
        <p id="Par103">The translate function can also be “reversed”, which instructs it to retrieve the source concepts within a map when given a set of target concepts. It is also capable of filtering results to a defined subset of relationship types, such as “related to”, “broader”, “narrower” and “equivalent”.</p>
      </sec>
      <sec id="Sec14">
        <title>Property and designation lookup</title>
        <p id="Par104">Property and designation lookup uses a FHIR terminology service to join across from coded data to the known attributes of those codings.</p>
        <p id="Par105">Examples of information that can be retrieved via properties and designations are synonyms, parent and child concepts, display text in other languages and more. Complex terminologies such as SNOMED CT and LOINC also provide ontological information via properties, such as finding sites for disorders, or methods for procedures.</p>
        <p id="Par106">Property and designation lookup has not yet been implemented within Pathling. The details of the design and implementation of this feature will be the subject of a future paper.</p>
      </sec>
    </sec>
    <sec id="Sec15">
      <title>Pathling</title>
      <p id="Par107">Pathling is an implementation of the FHIR Analytics API concept within this paper, and has been made freely available under a permissive open source license via GitHub. It is written using Java and Scala, and distributed as a Docker image. The components that comprise the Pathling solution are shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>.<fig id="Fig5"><label>Fig. 5</label><caption><p>Implementation components</p></caption><graphic xlink:href="13326_2022_277_Fig5_HTML" id="MO14"/></fig></p>
      <p id="Par108">Pathling is an Apache Spark application at its core. The work done by Cerner on the Bunsen library was adopted and enhanced to enable the import of FHIR data into Spark. Each FHIR resource is represented as a single Spark data set, utilizing data types such as “struct” and “array” to represent nested data that often has multiple cardinalities and optionality. Each data set is written to a Parquet file for persistence and subsequent retrieval.</p>
      <p id="Par109">A FHIRPath parser, written using ANTLR [<xref ref-type="bibr" rid="CR26">26</xref>], translates FHIRPath expressions into queries that can be executed using Spark. Parsing of each sub-expression results in an object that represents a FHIRPath expression, along with its associated Spark query representation. These FHIRPath objects can then be used as inputs to various FHIRPath functions and operators that have been implemented as Spark query transformations.</p>
      <p id="Par110">The terminology functions manifest as Spark mapping operations, where input codings are deduplicated and sent to the configured FHIR terminology service. Multiple requests are made in parallel to resolve queries about different portions of the coded data, based upon a configurable level of parallelism. Ontoserver [<xref ref-type="bibr" rid="CR27">27</xref>] was primarily used for the development of this capability, as it is an existing mature implementation of the FHIR Terminology Services API with good feature coverage and high performance suitable for analytic workloads.</p>
      <p id="Par111">The Aggregate, Search and Extract operations compose individual FHIRPaths into a composite query. HAPI is used as a framework for exposing the operations within an API that can be consumed by standard FHIR client software. The results of each operation query is transformed into the appropriate FHIR resource for return to the user, whether that be a Parameters, OperationOutcome or Bundle resource.</p>
      <p id="Par112">Pathling implements the asynchronous request pattern defined within the FHIR specification to accommodate long-running queries over large data sets. The asynchronous pattern is based upon RFC 7240 [<xref ref-type="bibr" rid="CR28">28</xref>], and utilizes standard HTTP headers such as “Prefer” and “Content-Location” to provide a mechanism for querying the status of a job and eventually receiving the final result.</p>
      <p id="Par113">The use of Docker as a distribution format enables users to deploy Pathling using their own infrastructure. This makes it easier for computation to take place where the data currently resides, avoiding egress across boundaries of data custodianship.
</p>
    </sec>
    <sec id="Sec16">
      <title>Libraries</title>
      <p id="Par114">It is our intent that the components that make up the Pathling server implementation can be used independently of each other and re-composed into other novel solutions. The first step that we have taken towards this is to make the individual modules that make up the server implementation available via Maven Central. This allows them to be used independently within projects that use Java, Scala and other Java Virtual Machine (JVM) languages. For example, the encoders module can be used to encode FHIR data into Spark data frames, which can then be queried via SQL.</p>
      <p id="Par1140">
We have also made a library available to Python users through the Python Package Index (PyPI). The Pathling Python API provides access to the Spark encoders and the terminology functions directly from Python, without the need for a running Pathling server. This allows for closer integration with Python-based data science workflows, and also the incorporation of Pathling functionality into bespoke Python applications.</p>
      <p id="Par1141">
We also have plans to implement methods within the Python API that provide access to the Aggregate and Extract operations, which will see the library reach functional parity with the server implementation. A package for the R language is also planned, which will provide equivalent functionality to the Python library for R users.</p>
    </sec>
    <sec id="Sec17">
      <title>User interface</title>
      <p id="Par115">As a demonstration of its utility, the Pathling API was used to develop an experimental exploratory data analysis user interface, showing the use of the Aggregate and Search Operations within a generic tool for exploring FHIR data sets (see Fig. <xref rid="Fig6" ref-type="fig">6</xref>). A number of synthetic FHIR data sets were created using Synthea [<xref ref-type="bibr" rid="CR29">29</xref>] that allowed for the demonstration of the features of the API, and the underlying terminology capability.<fig id="Fig6"><label>Fig. 6</label><caption><p>Experimental user interface for exploratory data analysis</p></caption><graphic xlink:href="13326_2022_277_Fig6_HTML" id="MO15"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec18">
    <title>Results</title>
    <sec id="Sec19">
      <title>Verification and performance testing</title>
      <p id="Par116">In order to evaluate the correctness of the implementation, a suite of 1,355 automated JUnit tests was developed. This suite includes: <list list-type="order"><list-item><p id="Par117">A Docker image test, which runs the container and interacts with the FHIR API to import data and run queries;</p></list-item><list-item><p id="Par118">Integration tests, which verify the behavior of the server stack;</p></list-item><list-item><p id="Par119">Query tests, which verify the results from operations such as Aggregate, Search and Extract, and;</p></list-item><list-item><p id="Par120">Unit tests, which verify the behavior of individual classes and methods within the implementation.</p></list-item></list>In addition to this, we have executed a performance test. To provide the underlying data for this test, we used Synthea to generate three (3) synthetic FHIR data sets in NDJSON format, shown in Table <xref rid="Tab7" ref-type="table">7</xref>. The test was executed on a MacBook Pro (16-inch, 2021) with an M1 Max processor (10 cores) and 32 GB of RAM, using Azul Zulu JDK 11.<table-wrap id="Tab7"><label>Table 7</label><caption><p>Testing data sets generated with Synthea</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set #</th><th align="left">Number of patients</th><th align="left">Total resources</th><th align="left">Size on disk (NDJSON)</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">11</td><td align="left">7,126</td><td align="left">9.8 MB</td></tr><tr><td align="left">2</td><td align="left">968</td><td align="left">739,229</td><td align="left">1.1 GB</td></tr><tr><td align="left">3</td><td align="left">11,516</td><td align="left">7,633,526</td><td align="left">11.32 GB</td></tr></tbody></table></table-wrap></p>
      <p id="Par121">The query used within the performance test counts the number of Patients that have an associated pneumonia diagnosis, filtered by those that have an influenza vaccination recorded. It joins from the Patient resource to the Condition resource, and also from the Patient resource to the Immunization resource. This query intentionally does not incorporate terminology functionality, which makes it easier to reason about from a performance perspective.<graphic position="anchor" xlink:href="13326_2022_277_Figj_HTML" id="MO16"/></p>
      <p id="Par122">The test was executed against each data set three (3) times, and the mean execution time calculated. The results of the test include cold and warm execution times, shown in Table <xref rid="Tab8" ref-type="table">8</xref>. There is an overhead within the first (cold) execution of a query after startup, where the data in the subject tables are retrieved from storage and loaded into memory. Execution times are measured as the total time from request to response on the client side, which was co-located on the same machine.<table-wrap id="Tab8"><label>Table 8</label><caption><p>Performance test results</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set #</th><th align="left">Mean cold execution time (ms)</th><th align="left">Mean warm execution time (ms)</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">5,164</td><td align="left">2,394</td></tr><tr><td align="left">2</td><td align="left">5,150</td><td align="left">2,565</td></tr><tr><td align="left">3</td><td align="left">7,317</td><td align="left">4,725</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec20">
      <title>Usability</title>
      <p id="Par123">Pathling is being actively used by a number of different users with a range of different levels of domain knowledge and technical ability, and we have had an opportunity to get some feedback on its usability.</p>
      <p id="Par124">While the use of Pathling’s abstractions over FHIR and raw SQL has shown benefits, the effort required in learning FHIRPath is significant. In its current form, Pathling is a tool that makes it easier to build FHIR analytics solutions for data scientists and analysts, rather than being a comprehensive end-to-end solution in its own right.</p>
      <p id="Par125">We plan to invest more effort in user interfaces that leverage the work that has been done within Pathling and the FHIR specification itself. This includes research into visual expression builders for FHIRPath and terminologies like SNOMED CT, which will provide additional tools for developers building data analytics applications on FHIR.</p>
    </sec>
  </sec>
  <sec id="Sec21">
    <title>Discussion</title>
    <sec id="Sec22">
      <title>Comparison of solutions</title>
      <p id="Par126">In order to examine functionality, efficacy and performance, we have created a simple scenario that can be used for targeted comparison across different tools and methods. The scenario is COVID-19 management, specifically the task of ensuring that high-risk patients are vaccinated ahead of major outbreaks.</p>
      <p id="Par127">The scenario comprises two tasks. The first task is to query a synthetic FHIR data set for the number of patients aged between 18 and 60 that have not been vaccinated against COVID-19 and are also at high risk of severe disease, based on their medical history (the “aggregation query”). The second task is to generate a list of unvaccinated, high risk patients and their contact details, to simulate input to a recalls and reminders workflow (the “extraction query”).</p>
      <p id="Par128">The test data that has been used within this comparison is Test Data Set 2, as shown within Table <xref rid="Tab7" ref-type="table">7</xref>.</p>
      <p id="Par129">The data is assumed to be available as FHIR NDJSON, the standard format for interchange of bulk FHIR data. It is also assumed that a FHIR terminology server will be used for the resolution of terminology queries.</p>
      <p id="Par130">We determine whether a patient has been vaccinated against COVID-19 by checking for an associated immunization record with any of the CDC Vaccine Administered (CVX) codes in Table <xref rid="Tab9" ref-type="table">9</xref>. The FHIR value set that represents these codes is shown in Additional File <xref rid="MOESM6" ref-type="media">6</xref>.<table-wrap id="Tab9"><label>Table 9</label><caption><p>COVID-19 vaccine codes <italic>example</italic></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Code</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">212</td><td align="left">COVID-19 vaccine, vector-nr, rS-Ad26, PF, 0.5 mL</td></tr><tr><td align="left">207</td><td align="left">COVID-19, mRNA, LNP-S, PF, 100 mcg/0.5 mL dose</td></tr><tr><td align="left">208</td><td align="left">COVID-19, mRNA, LNP-S, PF, 30 mcg/0.3 mL dose</td></tr></tbody></table></table-wrap></p>
      <p id="Par131">For the purposes of this scenario, patients are determined to be “high risk” if they meet any of the following three conditions: <list list-type="order"><list-item><p id="Par132">Diagnosed with chronic kidney disease;</p></list-item><list-item><p id="Par133">Diagnosed with heart disease, or;</p></list-item><list-item><p id="Par134">Recorded body mass index (BMI) greater than 30.</p></list-item></list>Chronic kidney disease is defined as any SNOMED CT concept that is subsumed by “Chronic kidney disease” (which is the concept identified by “709044004”).</p>
      <p id="Par135">Heart disease is defined as any SNOMED CT concept that is a type of “Cardiovascular disease” with a finding site of “Structure of heart”. This is formally described by the following ECL expression:<graphic position="anchor" xlink:href="13326_2022_277_Figk_HTML" id="MO17"/></p>
      <p id="Par136">Finally, BMI greater than 30 is determined by the presence of an Observation resource with a LOINC code of “Body mass index (BMI) [Ratio]” (identified by “39156-5”) that also has a Quantity value with a UCUM code of “kg/m2” and a value greater than 30.</p>
      <p id="Par137">For simplicity, we assume that the time of the immunization, diagnosis or observation is not important in this scenario.</p>
      <p id="Par138">We will first demonstrate how Pathling can be used to solve the stated problem, and then move on to a comparative analysis of other solutions.</p>
      <sec id="Sec23">
        <title>Pathling server</title>
        <p id="Par139">First we will examine the process for performing the necessary analysis using a running instance of the Pathling FHIR server, specifically its Import, Aggregate and Extract operations.</p>
        <p id="Par140">We used the Import operation to load the FHIR NDJSON files and prepare them for subsequent query. A file URL was provided for each of the Patient, Immunization, Condition and Observation resources, instructing the Pathling server to read them from the local file system and encode them into Parquet tables at the configured warehouse location (also on the local file system).</p>
        <p id="Par141">We then used the “aggregate” operation to calculate the number of Patient resources, grouped by vaccination status and high risk, and filtered to the 18-60 age group. The parameters used with the Aggregate operation are shown in Additional File <xref rid="MOESM1" ref-type="media">1</xref>.</p>
        <p id="Par142">A tabular representation of the result of the query is shown in Table <xref rid="Tab10" ref-type="table">10</xref>.<table-wrap id="Tab10"><label>Table 10</label><caption><p>High risk unvaccinated patients - aggregate query result</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Vaccinated against COVID-19</th><th align="left">High risk</th><th align="left">Number of patients</th></tr></thead><tbody><tr><td align="left">true</td><td align="left">false</td><td align="left">266</td></tr><tr><td align="left">true</td><td align="left">true</td><td align="left">215</td></tr><tr><td align="left">false</td><td align="left">false</td><td align="left">81</td></tr><tr><td align="left">false</td><td align="left">true</td><td align="left">85</td></tr></tbody></table></table-wrap></p>
        <p id="Par143">Finally, we used the “extract” operation to list the patients that were both unvaccinated against COVID-19 and also high risk, along with their risk factors, names and contact details. The parameters used with the Extract operation are shown in Additional File <xref rid="MOESM2" ref-type="media">2</xref>.</p>
        <p id="Par144">This returns a link to a downloadable CSV file, five rows of which are reflected in Table <xref rid="Tab11" ref-type="table">11</xref>.<table-wrap id="Tab11"><label>Table 11</label><caption><p>High risk unvaccinated patients - extract query result</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Family name</th><th align="left">Given name</th><th align="left">Phone number</th><th align="left">Chronic kidney disease</th><th align="left">Heart disease</th><th align="left">BMI&gt;30</th></tr></thead><tbody><tr><td align="left">Abernathy524</td><td align="left">Kathline630</td><td align="left">555-746-7353</td><td align="left">true</td><td align="left">false</td><td align="left">true</td></tr><tr><td align="left">Bartell116</td><td align="left">Rhett759</td><td align="left">555-257-6514</td><td align="left">false</td><td align="left">false</td><td align="left">true</td></tr><tr><td align="left">Bashirian201</td><td align="left">Aldo414</td><td align="left">555-300-9051</td><td align="left">false</td><td align="left">false</td><td align="left">true</td></tr><tr><td align="left">Beahan375</td><td align="left">Neva514</td><td align="left">555-809-1747</td><td align="left">false</td><td align="left">false</td><td align="left">true</td></tr><tr><td align="left">Bednar518</td><td align="left">Chase54</td><td align="left">555-812-1196</td><td align="left">false</td><td align="left">false</td><td align="left">true</td></tr></tbody></table></table-wrap></p>
        <p id="Par145">A Jupyter Notebook describing the Pathling server workflow in full can be found in Additional File <xref rid="MOESM3" ref-type="media">3</xref>.</p>
      </sec>
      <sec id="Sec24">
        <title>Pathling Python API</title>
        <p id="Par146">The same result can be derived through the use of the Pathling Python API, a method that does not have the requirement to interact with a running server. The Python API is a package available from PyPI, and the only dependencies are Python itself and a Java runtime environment.</p>
        <p id="Par147">The Python API provides access to the encoders within Pathling, which allow for FHIR data to be converted into Spark data frames. The work of navigating and transforming the FHIR data structures is largely manual, as we have not yet implemented equivalent abstractions for the Aggregate and Extract operations within Python.</p>
        <p id="Par148">The Python API has a set of terminology functions which automate the task of resolving terminology queries over Spark data frames. In this scenario, we call upon the ‘member_of‘ and ‘subsumes‘ functions to assist with creating columns that represent the risk factors of chronic kidney disease and heart disease.</p>
        <p id="Par149">The Python API removes the requirement to persist the data to Parquet or any other type of storage, as the data frames can be operated upon in memory. This makes it ideal for use within data science workflows and data transformation pipelines. It can also be used along with the streaming functionality within Spark to consume data from real-time sources and process it continuously.</p>
        <p id="Par150">A Jupyter Notebook describing the Python API workflow in full can be found in Additional File <xref rid="MOESM4" ref-type="media">4</xref>.</p>
      </sec>
      <sec id="Sec25">
        <title>Python and Pandas</title>
        <p id="Par151">For comparison we also performed the necessary analysis using only the Python programming language, modules from the Python standard library and the Pandas data analysis package.</p>
        <p id="Par152">We loaded the FHIR NDJSON data into Python dictionary structures using the “json” package within the Python standard library. We then selected only the data necessary for the analysis and loaded that into a set of Pandas data frames.</p>
        <p id="Par153">The Pandas data frames were then supplemented with additional columns containing the results of the necessary terminology queries, e.g. “Chronic kidney disease”, “Heart disease”. Requests were made to the “validate-code” and “subsumes” operations of a FHIR terminology server using the Python HTTP library. Simple memoization was used to deduplicate the requests sent to the terminology service, simulating a client-side cache.</p>
        <p id="Par154">Once the construction of the data frames was complete, they were joined together using the patient identifiers. Filtering the cohort on age was achieved using the date parsing and subsetting operations within Pandas.</p>
        <p id="Par155">Implementation of a pure Python solution to this problem requires a higher level of knowledge of FHIR and the terminology API, and involves a larger volume of code to be written. Also, this implementation is tailored to this particular problem, makes numerous assumptions about the structure and content of the data and would not generalize well to other FHIR analysis use cases. It does not handle error states, missing data and other edge cases.</p>
        <p id="Par156">A Jupyter Notebook describing the pure Python workflow can be found in Additional File <xref rid="MOESM5" ref-type="media">5</xref>.</p>
      </sec>
      <sec id="Sec26">
        <title>Clinical Quality Language (CQL)</title>
        <p id="Par157">The CQL specification [<xref ref-type="bibr" rid="CR30">30</xref>] provides a standard representation of clinical quality logic that can be used to query and calculate quality measures over health data sets, including those modeled using FHIR.</p>
        <p id="Par158">It would be possible to create a solution to the stated problem using a CQL-enabled FHIR server, integrated with terminology services. The full implementation of this solution is outside of the scope of this paper, but we can discuss some of the different features of CQL that can be leveraged towards this type of problem.</p>
        <p id="Par159">CQL can be used to perform the “aggregate query” part of this problem using two main artifacts: the Library resource and the Measure resource. The Library resource is used to store clinical quality logic, such as the definitions of vaccination status and risk factors. The Measure resource is able to refer to the definitions within one or more Library resources and expose them as calculations.</p>
        <p id="Par160">The “evaluate-measure” operation could then be executed to retrieve a MeasureReport resource containing a similar result to the result of the Pathling Aggregate operation.</p>
        <p id="Par161">One assumption here is that the CQL implementation would have the ability to either resolve the required terminology queries itself, or delegate this work to an external FHIR terminology server with the necessary capabilities.</p>
        <p id="Par162">CQL also has the ability to execute “subject-list” and “subject” reports, which could be used to construct the list of unvaccinated, high risk patients along with their risk factors and contact details.</p>
        <p id="Par163">Another option could be to integrate a “CQL engine” more tightly into a data science workflow or processing pipeline, obviating the need for a standing CQL-enabled FHIR server.</p>
        <p id="Par164">There is overlap between the ideas within CQL and the work in this paper, but the focus and intended use are quite different. CQL focuses upon providing a standard mechanism for creating shareable definitions of cohorts, measures and indicators, while Pathling has an emphasis on data transformation, exploratory data analysis, and the provision of an API that enables applications to more easily deliver analytic query capabilities.</p>
      </sec>
      <sec id="Sec27">
        <title>FHIR Search API</title>
        <p id="Par165">The FHIR specification contains a Search API, which takes a set of parameters that describe how to filter the collection of resources held within a server.</p>
        <p id="Par166">Applied to the stated problem, it would be possible to use the FHIR Search API to get counts of patients with particular risk factors, or vaccination status. For example, the HTTP request below would retrieve all patients with an associated chronic kidney disease condition:<graphic position="anchor" xlink:href="13326_2022_277_Figl_HTML" id="MO18"/></p>
        <p id="Par167">However, it starts to get difficult to combine all of the necessary conditions, as the FHIR Search API only supports simple combinations of Boolean expressions. It is not possible, for example, to combine three conditions on two different search parameters using OR logic, and then combine them with a fourth condition using AND logic.</p>
        <p id="Par168">In order to fully implement a solution to this problem using only the core FHIR API, it would be necessary to query data in bulk out of the server and do some processing, filtering and transformation within client code. This exercise is outside the scope of this paper.</p>
        <p id="Par169">Pathling server has its own FHIR Search API, but in place of the standard API it provides a “fhirPath” search profile. This search profile allows the user to express search criteria using the FHIRPath language. FHIRPath provides additional expressive power relative to the FHIR Search API, such as: <list list-type="order"><list-item><p id="Par170">The ability to refer to any element, not just those that are the subject of a defined search parameter;</p></list-item><list-item><p id="Par171">Unlimited nesting and bracketing of expressions;</p></list-item><list-item><p id="Par172">The ability to follow resource references that traverse multiple levels of relationships, and;</p></list-item><list-item><p id="Par173">Support for complex terminology operations within criteria.</p></list-item></list></p>
      </sec>
      <sec id="Sec28">
        <title>PhenoMan</title>
        <p id="Par174">PhenoMan is a client application that can be used to specify phenotypes, calculate their values and write them back into a FHIR server in the form of Observation resources [<xref ref-type="bibr" rid="CR31">31</xref>]. These Observation resources can then be queried alongside the other resources within the server using the FHIR Search API. PhenoMan can also be used to model patient cohort selection criteria and convert them into queries that can be executed by the FHIR Search API [<xref ref-type="bibr" rid="CR32">32</xref>].</p>
        <p id="Par175">Pathling and PhenoMan are largely complementary solutions, and could even be used together with some modification. In some ways PhenoMan has more of an overlap with the functionality of a FHIR terminology service, and one option for integrating with it could be to implement a FHIR terminology service interface that provides access to the ontological knowledge that PhenoMan provides.</p>
        <p id="Par176">Applied to this problem, Phenoman could be used to create derived Observation resources within a FHIR server to represent vaccination status and risk factors. The presence of these Observation resources could then be queried using the FHIR Search API to derive the aggregate results and patient list. The full implementation of this solution is outside the scope of this paper.</p>
      </sec>
      <sec id="Sec29">
        <title>fhircrackr</title>
        <p id="Par177">A package for the R language called “fhircrackr” is available, which automates the task of downloading resources from a FHIR server and transforming them into R data frames. It delivers similar functionality to what the Extract operation could provide if delivered into an R environment.</p>
        <p id="Par178">This package could assist with the work of downloading and transforming the FHIR source data required for this analysis problem. Aggregation of the data would need to be performed manually in a similar way to the pure Python solution, and terminology queries would also not be assisted by this tool. A full implementation of this solution using “fhircrackr” is outside the scope of this paper.</p>
      </sec>
      <sec id="Sec30">
        <title>Structured Query Language (SQL)</title>
        <p id="Par179">The final alternative to mention is the use of tools for loading FHIR data into a SQL database. A3 [<xref ref-type="bibr" rid="CR18">18</xref>] is a project that has taken the approach of providing tools to transform a FHIR data set ahead of time, with the goal of making it easier to query using standard SQL tools and generalized analytic platforms like Google BigQuery.</p>
        <p id="Par180">A3 is capable of normalizing a range of FHIR data structures such as resource references, extensions, dates and recursive data structures to reduce the complexity of the SQL queries required to perform common analytic tasks. The team has also done a lot of work relating to the development of user interfaces for building SQL queries, including the composition of patient cohort selection criteria.</p>
        <p id="Par181">Applied to the stated problem, SQL has the ability to perform the necessary aggregation and extraction operations. However, it would not have built-in support for interacting with the FHIR terminology API, and orchestrating these queries and making their results available would require additional components. A full implementation of this solution involving a load of FHIR data into a service like BigQuery is outside the scope of this paper.</p>
      </sec>
      <sec id="Sec31">
        <title>Performance comparison</title>
        <p id="Par182">A performance comparison of the three comparable, implemented solutions is summarized in Table <xref rid="Tab12" ref-type="table">12</xref>.<table-wrap id="Tab12"><label>Table 12</label><caption><p>Performance comparison</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Description</th><th align="left">Total execution time (s)</th></tr></thead><tbody><tr><td align="left">Pathling server</td><td align="left">90.490</td></tr><tr><td align="left">Pathling Python API</td><td align="left">27.769</td></tr><tr><td align="left">Python and Pandas</td><td align="left">61.606</td></tr></tbody></table></table-wrap></p>
        <p id="Par183">The comparison was executed on a MacBook Pro (16-inch, 2021) with an M1 Max processor (10 cores) and 32 GB of RAM, using Azul Zulu JDK 11.</p>
        <p id="Par184">The Pathling server implementation is at a bit of a disadvantage in this comparison, as it is the only solution that persists the data. The import of the data took 32.009 seconds - the subtraction of which brings its performance back to a similar level to the pure Python implementation.</p>
      </sec>
    </sec>
    <sec id="Sec32">
      <title>Discussion of storage and processing options</title>
      <p id="Par185">The use of Spark and Parquet differentiates Pathling from other FHIR server implementations, which use relational database management systems (RDBMS) [<xref ref-type="bibr" rid="CR33">33</xref>], NoSQL databases [<xref ref-type="bibr" rid="CR34">34</xref>] or graph databases [<xref ref-type="bibr" rid="CR35">35</xref>, <xref ref-type="bibr" rid="CR36">36</xref>] as their storage layer. The primary advantages of using Spark are: <list list-type="order"><list-item><p id="Par186">The ability to apply arbitrary computation within a query, including calls out to external services (e.g. a FHIR terminology server);</p></list-item><list-item><p id="Par187">The ability to scale query processing beyond an individual instance, enabling processing of data sets of unbounded scale, and;</p></list-item><list-item><p id="Par188">Strong support for integrating with the Python and R programming languages, which are widely used in the area of data analytics.</p></list-item></list>Stream processing support is another advantage that comes with using Spark, although this benefit is yet to be realized within the implementation (see Future work).</p>
      <p id="Par189">These features come at the cost of some increased latency at small data sizes. Another disadvantage is that although Spark is mature and achieving rapid adoption, it remains less familiar to prospective adopters than some of the older technologies.</p>
    </sec>
    <sec id="Sec33">
      <title>Case study</title>
      <p id="Par190">Pathling was applied within a project related to the analysis of data collected within a number of genetic clinics. Diagnoses were collected at the referral (GP or specialist), pre-investigation (initial consultation at clinic) and post-investigation (analysis of test results) stages of the process, and were coded using SNOMED CT.</p>
      <p id="Par191">Pathling was used to perform the following queries over the data: <list list-type="order"><list-item><p id="Par192">Diagnostic yield by disease grouping, age range and technology employed, and;</p></list-item><list-item><p id="Par193">Count of diagnoses according to whether they improved the specificity of the diagnosis, relative to previous diagnoses.</p></list-item></list>The latter query involved the interrogation of the SNOMED CT hierarchy using the “memberOf” function and ECL. A Sankey diagram (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>) was combined with a response from the Aggregate Operation to provide a visualization of the results.<fig id="Fig7"><label>Fig. 7</label><caption><p>Number of genomic test patients by encounter type, diagnosis verification status and diagnosis specificity relative to previous diagnoses (counts redacted)</p></caption><graphic xlink:href="13326_2022_277_Fig7_HTML" id="MO19"/></fig></p>
      <p id="Par194">The analytic users on this project had three primary goals: (1) calculation of the correct results; (2) use of a process that is efficient, to support many different iterations of the analysis during exploration of the research question, and; (3) use of a process that is repeatable, so that results can be reproduced and similar analyses can later be conducted on other data sets. The use of Pathling allowed the users to meet all three of these goals by removing the need to write bespoke code to transform and pre-process the FHIR data and query SNOMED CT.</p>
    </sec>
    <sec id="Sec34">
      <title>Future work</title>
      <p id="Par195">Further work on new user interfaces will be conducted, specifically in the area of visual expression builders for FHIRPath and SNOMED CT ECL. We are also investigating how Pathling can be used to augment tasks within clinical terminology authoring workflows by allowing FHIR ValueSet authors to query the coverage and frequency of codes within a target data set.</p>
      <p id="Par196">The integration of Pathling functionality within Python and R will be further developed, making not only the encoders available but also the operations, terminology functions and other helper functions for dealing with FHIR.</p>
      <p id="Par197">Pathling will be enhanced to make it possible for it to act as a FHIR Subscription server, pushing changes to its own data to subscribers. The combination of real-time updates and push messaging relating to changes within the data (using criteria described using FHIRPath expressions) could enable the FHIR Analytics API to be used as an engine for driving sophisticated alert systems within the clinical setting.</p>
      <p id="Par198">We also have plans to continue to apply the technology within a number of upcoming partner projects, related to: <list list-type="order"><list-item><p id="Par199">Powering patient cohort selection for genomic health research;</p></list-item><list-item><p id="Par200">Analysis of SNOMED CT and ICD coded emergency department data relating to trauma;</p></list-item><list-item><p id="Par201">Studying the disease burden of type 2 diabetes upon First Nations People of Australia, developing applications designed to communicate results back to participating communities.</p></list-item></list></p>
    </sec>
  </sec>
  <sec id="Sec35">
    <title>Conclusions</title>
    <p id="Par202">There is a need for improved tooling in the area of health data analytics, to reduce the skills burden and to improve the consistency and quality of analyses. Our research has identified exploratory data analysis, patient cohort selection and data preparation as promising areas that would benefit from additional investment in tools.</p>
    <p id="Par203">Functions designed to assist analytic users and software developers in these areas have been encapsulated within a server that exposes a FHIR Analytics API. Aggregate, extract and search operations, used in conjunction with FHIRPath expressions and the FHIR Terminology Service, show promise as a way of abstracting away some of the complexity of the underlying data structures while preserving query expressivity.</p>
    <p id="Par204">A standards-based REST API for analytics enables and encourages the establishment of an ecosystem of applications that can be developed rapidly and be used to explore requirements in this rapidly evolving area. It also incentivizes the use of standards within data acquisition and transformation efforts within healthcare organizations.</p>
  </sec>
  <sec id="Sec36">
    <title>Availability and requirements</title>
    <p id="Par205"><bold>Project name:</bold> Pathling</p>
    <p id="Par206">
      <bold>Project home page:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://pathling.csiro.au">https://pathling.csiro.au</ext-link>
    </p>
    <p id="Par207"><bold>Operating system(s):</bold> Java Virtual Machine, platform independent</p>
    <p id="Par208"><bold>Programming language:</bold> Java, Scala, Python</p>
    <p id="Par209"><bold>Other requirements:</bold> Java 11 or higher, Python 3.7 or higher</p>
    <p id="Par210"><bold>License:</bold> CSIRO Open Source Software Licence Agreement</p>
    <p id="Par211"><bold>Any restrictions to use by non-academics:</bold> None</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec37">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13326_2022_277_MOESM1_ESM.json">
            <caption>
              <p><bold>Additional file 1.</bold> Parameters used with the Aggregate Operation as part of the comparison of solutions.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13326_2022_277_MOESM2_ESM.json">
            <caption>
              <p><bold>Additional file 2.</bold> Parameters used with the Extract Operation as part of the comparison of solutions.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13326_2022_277_MOESM3_ESM.ipynb">
            <caption>
              <p><bold>Additional file 3.</bold> Jupyter Notebook showing a comparable analysis process using a Pathling server.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="13326_2022_277_MOESM4_ESM.ipynb">
            <caption>
              <p><bold>Additional file 4.</bold> Jupyter Notebook showing a comparable analysis process using the Pathling Python API.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="13326_2022_277_MOESM5_ESM.ipynb">
            <caption>
              <p><bold>Additional file 5.</bold> Jupyter Notebook showing a comparable analysis process using Python, the Python standard library and the Pandas data analysis package.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
      <p>
        <supplementary-material content-type="local-data" id="MOESM6">
          <media xlink:href="13326_2022_277_MOESM6_ESM.json">
            <caption>
              <p><bold>Additional file 6</bold> FHIR value set representing COVID-19 vaccine codes.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>API</term>
        <def>
          <p id="Par4">Application Programming Interface</p>
        </def>
      </def-item>
      <def-item>
        <term>BMI</term>
        <def>
          <p id="Par5">Body Mass Index</p>
        </def>
      </def-item>
      <def-item>
        <term>CDC</term>
        <def>
          <p id="Par6">Centers for Disease Control and Prevention</p>
        </def>
      </def-item>
      <def-item>
        <term>CDM</term>
        <def>
          <p id="Par7">Common Data Model</p>
        </def>
      </def-item>
      <def-item>
        <term>CQL</term>
        <def>
          <p id="Par8">Clinical Quality Language</p>
        </def>
      </def-item>
      <def-item>
        <term>CSV</term>
        <def>
          <p id="Par9">Comma Separated Values</p>
        </def>
      </def-item>
      <def-item>
        <term>CVX</term>
        <def>
          <p id="Par10">CDC Vaccine Administered</p>
        </def>
      </def-item>
      <def-item>
        <term>ECL</term>
        <def>
          <p id="Par11">Expression Constraint Language</p>
        </def>
      </def-item>
      <def-item>
        <term>EDA</term>
        <def>
          <p id="Par12">Exploratory Data Analysis</p>
        </def>
      </def-item>
      <def-item>
        <term>EHR</term>
        <def>
          <p id="Par13">Electronic Health Record</p>
        </def>
      </def-item>
      <def-item>
        <term>FHIR</term>
        <def>
          <p id="Par14">Fast Healthcare Interoperability Resources</p>
        </def>
      </def-item>
      <def-item>
        <term>HDFS</term>
        <def>
          <p id="Par15">Hadoop File System</p>
        </def>
      </def-item>
      <def-item>
        <term>HTTP</term>
        <def>
          <p id="Par16">Hypertext Transfer Protocol</p>
        </def>
      </def-item>
      <def-item>
        <term>ICD</term>
        <def>
          <p id="Par17">International Statistical Classification of Diseases and Related Health Problems</p>
        </def>
      </def-item>
      <def-item>
        <term>LOINC</term>
        <def>
          <p id="Par18">Logical Observation Identifiers Names and Codes</p>
        </def>
      </def-item>
      <def-item>
        <term>JVM</term>
        <def>
          <p id="Par19">Java Virtual Machine</p>
        </def>
      </def-item>
      <def-item>
        <term>NDJSON</term>
        <def>
          <p id="Par20">Newline Delimited JSON</p>
        </def>
      </def-item>
      <def-item>
        <term>OHDSI</term>
        <def>
          <p id="Par21">Observational Health Data Sciences and Informatics</p>
        </def>
      </def-item>
      <def-item>
        <term>OMOP</term>
        <def>
          <p id="Par22">Observational Medical Outcomes Partnership</p>
        </def>
      </def-item>
      <def-item>
        <term>PyPI</term>
        <def>
          <p id="Par23">Python Package Index</p>
        </def>
      </def-item>
      <def-item>
        <term>RDBMS</term>
        <def>
          <p id="Par24">Relational Database Management System</p>
        </def>
      </def-item>
      <def-item>
        <term>REST</term>
        <def>
          <p id="Par25">Representational State Transfer</p>
        </def>
      </def-item>
      <def-item>
        <term>SNOMED CT</term>
        <def>
          <p id="Par26">SNOMED Clinical Terms</p>
        </def>
      </def-item>
      <def-item>
        <term>SQL</term>
        <def>
          <p id="Par27">Structured Query Language</p>
        </def>
      </def-item>
      <def-item>
        <term>UCUM</term>
        <def>
          <p id="Par28">Unified Code for Units of Measure</p>
        </def>
      </def-item>
      <def-item>
        <term>URI</term>
        <def>
          <p id="Par29">Universal Resource Identifier</p>
        </def>
      </def-item>
      <def-item>
        <term>URL</term>
        <def>
          <p id="Par30">Universal Resource Locator</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Prof. Andrew Mallett and his team at KidGen and the Australian Genomics Health Alliance (AGHA) provided a health data analytics project that served as a pilot for the implementation. Jim Steel, Sankalp Khanna, Dion McMurtrie, Donna Truran, Kate Ebrill and Mark Braunstein assisted with review of the manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ Contributions</title>
    <p>JG was the primary contributor to the conceptual design and implementation of Pathling, and was the primary author of the manuscript. PS was a major contributor to the design and implementation, and was a contributor to the manuscript. AM was a contributor to the design, implementation and manuscript, and was also a contributor to the health data analytics project mentioned in the paper. ML was a contributor to the design and implementation, and the manuscript. KL was a contributor to the design and manuscript, and was involved in the design of synthetic data to demonstrate the implementation. The author(s) read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This research was funded in part by the Australian Genomics Health Alliance (AGHA). AGHA collaborators participated in the data analysis project referred to in this paper, but were not involved in the design of the software or the authoring of this publication.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code for v5.4.0 of Pathling, including the definition of the executed test suite, is available at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.25919/q2vd-a532">https://doi.org/10.25919/q2vd-a532</ext-link>. A test execution report for v5.4.0 of Pathling is available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/aehrc/pathling/actions/runs/2726818301">https://github.com/aehrc/pathling/actions/runs/2726818301</ext-link>. The data sets used for performance testing and the comparison of solutions are available at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.25919/78k0-py81">https://doi.org/10.25919/78k0-py81</ext-link>. A Conda environment lock file for reproducing the Jupyter Notebook execution is available at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.25919/78k0-py81">https://doi.org/10.25919/78k0-py81</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par212">Interviews with users were approved as part of Proposal 2019_074_LR, considered by the CSIRO Health and Medical Human Research Ethics Committee.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par213">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par214">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Braunstein ML. Health Informatics on FHIR: How HL7's New API is Transforming Healthcare. Cham: Springer International Publishing; 2018.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Lehne M, Luijten S, Imbusch PVFG, Thun S, et al. The Use of FHIR in Digital Health-A Review of the Scientific Literature. Maastricht: GMDS; 2019. pp. 52–58.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Giannangelo K, Fenton SH. SNOMED CT survey: an assessment of implementation in EMR/EHR applications. Perspect Health Inf Manag. 2008;5:7.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tukey</surname>
            <given-names>JW</given-names>
          </name>
        </person-group>
        <article-title>The future of data analysis</article-title>
        <source>Ann Math Stat</source>
        <year>1962</year>
        <volume>33</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>67</lpage>
        <pub-id pub-id-type="doi">10.1214/aoms/1177704711</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">SNOMED International. Expression Constraint Language - Specification and Guide. 2016. <ext-link ext-link-type="uri" xlink:href="http://snomed.org/ecl">http://snomed.org/ecl</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kenrick</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Svabova</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Nica</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Real-time health-related data, wearable medical sensor devices, and smart cyber-physical systems</article-title>
        <source>Am J Med Res</source>
        <year>2019</year>
        <volume>6</volume>
        <issue>2</issue>
        <fpage>25</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.22381/AJMR6220193</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hripcsak</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Duke</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Shah</surname>
            <given-names>NH</given-names>
          </name>
          <name>
            <surname>Reich</surname>
            <given-names>CG</given-names>
          </name>
          <name>
            <surname>Huser</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Schuemie</surname>
            <given-names>MJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Observational Health Data Sciences and Informatics (OHDSI): opportunities for observational researchers</article-title>
        <source>Stud Health Technol Inform</source>
        <year>2015</year>
        <volume>216</volume>
        <fpage>574</fpage>
        <pub-id pub-id-type="pmid">26262116</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Observational Health Data Sciences and Informatics. ATLAS - A unified interface for the OHDSI tools. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ohdsi.org/atlas-a-unified-interface-for-the-ohdsi-tools/">https://www.ohdsi.org/atlas-a-unified-interface-for-the-ohdsi-tools/</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ma</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Frankel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Beale</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Heard</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>EHR query language (EQL)-a query language for archetype-based health records</article-title>
        <source>Medinfo.</source>
        <year>2007</year>
        <volume>129</volume>
        <fpage>397</fpage>
        <lpage>401</lpage>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">The openEHR Foundation. OpenEHR - Archetype Query Language (AQL). 2008. <ext-link ext-link-type="uri" xlink:href="https://specifications.openehr.org/releases/QUERY/latest/AQL.html">https://specifications.openehr.org/releases/QUERY/latest/AQL.html</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Liu D, Sahu R, Ignatov V, Gottlieb D, Mandl KD. High performance computing on flat FHIR files created with the new SMART/HL7 Bulk Data Access Standard. In: AMIA Annual Symposium Proceedings, vol. 2019. Bethesda: American Medical Informatics Association; 2019. p. 592.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Apache Software Foundation. Apache Parquet; 2015. <ext-link ext-link-type="uri" xlink:href="https://parquet.apache.org/">https://parquet.apache.org/</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Cerner Innovation. cerner/bunsen: Explore, transform, and analyze FHIR data with Apache Spark. 2017. <ext-link ext-link-type="uri" xlink:href="https://github.com/cerner/bunsen">https://github.com/cerner/bunsen</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zaharia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chowdhury</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Franklin</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Shenker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stoica</surname>
            <given-names>I</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Spark: Cluster computing with working sets</article-title>
        <source>HotCloud.</source>
        <year>2010</year>
        <volume>10</volume>
        <issue>10–10</issue>
        <fpage>95</fpage>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Ryan Brush. FHIR/sql-on-fhir: SQL on FHIR Proposal. 2018. <ext-link ext-link-type="uri" xlink:href="https://github.com/FHIR/sql-on-fhir">https://github.com/FHIR/sql-on-fhir</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Google. Protocol Buffers | Google Developers. 2012. <ext-link ext-link-type="uri" xlink:href="https://developers.google.com/protocol-buffers/">https://developers.google.com/protocol-buffers/</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Google. google/fhir: FHIR Protocol Buffers. 2018. <ext-link ext-link-type="uri" xlink:href="https://github.com/google/fhir">https://github.com/google/fhir</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Daniel Gottlieb and Joshua Mandel. A3 - Prototype of FHIR-native ETL+Q Platform. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/sync-for-science/a3">https://github.com/sync-for-science/a3</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mandl</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Gottlieb</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Mandel</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Ignatov</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Sayeed</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Grieve</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Push Button Population Health: The SMART/HL7 FHIR Bulk Data Access Application Programming Interface</article-title>
        <source>NPJ Digit Med</source>
        <year>2020</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/s41746-020-00358-4</pub-id>
        <pub-id pub-id-type="pmid">31934645</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Jones J, Gottlieb D, Mandel JC, Ignatov V, Ellis A, Kubick W, et al. A landscape survey of planned SMART/HL7 bulk FHIR data access API implementations and tools. J Am Med Inform Assoc. 2021;28(6):1284-87.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Computational Health Informatics Program, Boston Children’s Hospital. Draft Bulk Import Implementation Guide. 2019. <ext-link ext-link-type="uri" xlink:href="https://github.com/smart-on-fhir/bulk-import/blob/master/import.md">https://github.com/smart-on-fhir/bulk-import/blob/master/import.md</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Shvachko K, Kuang H, Radia S, Chansler R. The hadoop distributed file system. In: 2010 IEEE 26th symposium on mass storage systems and technologies (MSST). Incline Village: IEEE; 2010. p. 1–10.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Thorsten Hoeger, Chris Dew, Finn Pauls and Jim Wilson. NDJSON. 2013. <ext-link ext-link-type="uri" xlink:href="https://github.com/ndjson/ndjson-spec">https://github.com/ndjson/ndjson-spec</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Alexander M, Jelen B. Pivot table data crunching. Indianapolis: Pearson Education; 2001.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Health Level Seven International. FHIRPath. 2020. <ext-link ext-link-type="uri" xlink:href="http://hl7.org/fhirpath/">http://hl7.org/fhirpath/</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parr</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Quong</surname>
            <given-names>RW</given-names>
          </name>
        </person-group>
        <article-title>ANTLR: A predicated-LL (k) parser generator</article-title>
        <source>Softw Pract Experience</source>
        <year>1995</year>
        <volume>25</volume>
        <issue>7</issue>
        <fpage>798</fpage>
        <lpage>810</lpage>
        <pub-id pub-id-type="doi">10.1002/spe.4380250705</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Metke-Jimenez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Steel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lawley</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Ontoserver: a syndicated terminology server</article-title>
        <source>J Biomed Semant</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1186/s13326-018-0191-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Internet Engineering Task Force (IETF). Prefer Header for HTTP. 2014. <ext-link ext-link-type="uri" xlink:href="https://datatracker.ietf.org/doc/html/rfc7240#section-4.1">https://datatracker.ietf.org/doc/html/rfc7240#section-4.1</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Walonoski</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kramer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nichols</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Quina</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moesel</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Synthea: An approach, method, and software mechanism for generating synthetic patients and the synthetic electronic health care record</article-title>
        <source>J Am Med Inform Assoc</source>
        <year>2018</year>
        <volume>25</volume>
        <issue>3</issue>
        <fpage>230</fpage>
        <lpage>38</lpage>
        <pub-id pub-id-type="doi">10.1093/jamia/ocx079</pub-id>
        <pub-id pub-id-type="pmid">29025144</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Health Level Seven International. Clinical Quality Language (CQL). 2014. <ext-link ext-link-type="uri" xlink:href="https://cql.hl7.org/">https://cql.hl7.org/</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uciteli</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Beger</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Kirsten</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Meineke</surname>
            <given-names>FA</given-names>
          </name>
          <name>
            <surname>Herre</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Ontological representation, classification and data-driven computing of phenotypes</article-title>
        <source>J Biomed Semant</source>
        <year>2020</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13326-020-00230-0</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Uciteli A, Beger C, Wagner J, Kirsten T, Meineke FA, Stäubert S, et al. Ontological modelling and FHIR Search based representation of basic eligibility criteria. GMS Med Informatik Biom Epidemiol. 2021;17(2). <ext-link ext-link-type="uri" xlink:href="https://www.egms.de/static/en/journals/mibe/2021-17/mibe000219.shtml">https://www.egms.de/static/en/journals/mibe/2021-17/mibe000219.shtml</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">University Health Network. HAPI FHIR. 2014. <ext-link ext-link-type="uri" xlink:href="https://github.com/hapifhir/hapi-fhir">https://github.com/hapifhir/hapi-fhir</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Asymmetrik. Asymmetrik FHIR API Server. 2017. <ext-link ext-link-type="uri" xlink:href="https://github.com/Asymmetrik/node-fhir-server-core">https://github.com/Asymmetrik/node-fhir-server-core</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <mixed-citation publication-type="other">Optum. CyFHIR. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/Optum/CyFHIR">https://github.com/Optum/CyFHIR</ext-link>. Accessed 10 Aug 2022.</mixed-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <mixed-citation publication-type="other">Fette G, Kaspar M, Liman L, Ertl M, Krebs J, Störk S, et al. Implementation of a HL7-CQL Engine Using the Graph Database Neo4J. In: GMDS. Dortmund: German Association of Medical Informatics, Biometry and Epidemiology; 2019. p. 46–51.</mixed-citation>
    </ref>
  </ref-list>
</back>

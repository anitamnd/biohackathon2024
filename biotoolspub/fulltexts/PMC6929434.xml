<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6929434</article-id>
    <article-id pub-id-type="publisher-id">3183</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-3183-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Metabolic disassembler for understanding and predicting the biosynthetic units of natural products</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Amano</surname>
          <given-names>Kohei</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Matsumoto</surname>
          <given-names>Tsubasa</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tanaka</surname>
          <given-names>Kenichi</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Funatsu</surname>
          <given-names>Kimito</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8188-3623</contrib-id>
        <name>
          <surname>Kotera</surname>
          <given-names>Masaaki</given-names>
        </name>
        <address>
          <email>maskot@chemsys.t.u-tokyo.ac.jp</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution>School of Life Science and Technology, </institution><institution>Tokyo Institute of Technology, </institution></institution-wrap>2-12-1 Ookayama, Meguro-ku, Tokyo, 152-8550 Japan </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2151 536X</institution-id><institution-id institution-id-type="GRID">grid.26999.3d</institution-id><institution>Department of Chemical System Engineering, </institution><institution>School of Engineering, The University of Tokyo, </institution></institution-wrap>7-3-1 Hongo, Bunkyo-ku, Tokyo, 113-8656 Japan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>12</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>23</day>
      <month>12</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>728</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>6</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>30</day>
        <month>10</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Natural products are the source of various functional materials such as medicines, and understanding their biosynthetic pathways can provide information that is helpful for their effective production through the synthetic biology approach. A number of studies have aimed to predict biosynthetic pathways from their chemical structures in a retrosynthesis manner; however, sometimes the calculation finishes without reaching the starting material from the target molecule. In order to address this problem, the method to find suitable starting materials is required.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">In this study, we developed a predictive workflow named the Metabolic Disassembler that automatically disassembles the target molecule structure into relevant biosynthetic units (BUs), which are the substructures that correspond to the starting materials in the biosynthesis pathway. This workflow uses a biosynthetic unit library (BUL), which contains starting materials, key intermediates, and their derivatives. We obtained the starting materials from the KEGG PATHWAY database, and 765 BUs were registered in the BUL. We then examined the proposed workflow to optimize the combination of the BUs. To evaluate the performance of the proposed Metabolic Disassembler workflow, we used 943 molecules that are included in the secondary metabolism maps of KEGG PATHWAY. About 95.8% of them (903 molecules) were correctly disassembled by our proposed workflow. For comparison, we also implemented a genetic algorithm-based workflow, and found that the accuracy was only about 52.0%. In addition, for 90.7% of molecules, our workflow finished the calculation within one minute.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">The Metabolic Disassembler enabled the effective disassembly of natural products in terms of both correctness and computational time. It also outputs automatically highlighted color-coded substructures corresponding to the BUs to help users understand the calculation results. The users do not have to specify starting molecules in advance, and can input any target molecule, even if it is not in databases. Our workflow will be very useful for understanding and predicting the biosynthesis of natural products.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Natural products</kwd>
      <kwd>Biosynthetic pathway</kwd>
      <kwd>Starting material</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Japan Society for the Promotion of Science</institution>
        </funding-source>
        <award-id>17K07260</award-id>
        <principal-award-recipient>
          <name>
            <surname>Kotera</surname>
            <given-names>Masaaki</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par9">Plants biosynthesize various natural products that protect them from being eaten by herbivores. Herbivore insects can detoxify these phytotoxic molecules and can biosynthesize various molecules including pheromones. Fungi are also a source of valuable natural products such as antibiotics. Secondary metabolites are species-specific natural products that are not directly involved in the species survival. Secondary metabolites and their derivatives are used widely in medicines, cosmetics, and agriculture. For example, penicillin, which was discovered by Fleming in 1928 [<xref ref-type="bibr" rid="CR1">1</xref>], was widely used as an antibiotic against infectious diseases, and avermectin, which was discovered by Omura in 1979 [<xref ref-type="bibr" rid="CR2">2</xref>], is widely used as an anti-parasite drug for pets.</p>
    <p id="Par10">Identifying the biosynthetic route of natural products is not only of pharmacological interest, but is also required by engineers and biologists who use synthetic biology techniques [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR8">8</xref>]. Synthetic biologists aim to synthesize desired molecules enzymatically by introducing foreign genes into an organism such as <italic>Saccharomyces cerevisiae</italic>. The biosynthesis need not necessarily mimic the actual biosynthetic pathway of the target molecule, but knowing the actual metabolic pathway can be very useful when constructing the pathway in a model organism.</p>
    <p id="Par11">However, although the chemical structures of a large number of metabolites are known, the metabolic pathways that lead to their synthesis are not yet known. Moreover, the recent development of high-throughput sequencers and metabolome analysis technology has revealed a large number of natural products for which the biosynthetic metabolic pathways are unknown. Currently, the identification of relevant enzymes in a putative pathway is carried out by trial and error based on knowledge and experience; therefore, an information science-based approach is highly desirable.</p>
    <p id="Par12">A large variety of natural products are produced from a limited variety of starting materials [<xref ref-type="bibr" rid="CR9">9</xref>]. In this paper, we define a biosynthetic unit (BU) as a chemical substructure that is part of the starting material. Natural products can be disassembled into the same BUs or into several different BUs to help elucidate their biosynthetic pathways.</p>
    <p id="Par13">In organic synthesis, retrosynthetic analysis is used to design the synthetic route of a target molecule. The retrosynthetic analysis method uses the target molecule and constructs the route backward from the target molecule to the starting material. A similar approach can be applied to metabolic pathway prediction; however, the number of iterations required to generate all virtual reactions can easily explode, making it difficult to find an optimal solution in a finite time. In a previous study, machine learning was applied to decide whether a pair of metabolite molecules could form an enzymatic reaction, thereby showing the potential to predict the metabolic pathway [<xref ref-type="bibr" rid="CR10">10</xref>]. Another previous study [<xref ref-type="bibr" rid="CR11">11</xref>] is based on similarity search to find potential precursors, i.e., the compounds that are possibly reachable in artificially designed pathway in one step. However, these approaches only deal with one-step reactions in the metabolic pathways, and therefore do not consider the putative intermediates between the target molecule and the starting material. In other studies, retrosynthetic approach often failed to reach the starting material [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR12">12</xref>]. To use the retrosynthetic approach for natural product biosynthesis, it is important to develop a workflow that can identify the appropriate starting materials.</p>
    <p id="Par14">In this study, we developed a workflow named the Metabolic Disassembler to automatically identify the BUs that corresponded to the starting materials of a given natural product. One of the important characteristics is that our method “disassembles” a given molecule into substructures that imply the starting materials. The aim was to provide support for identifying biosynthesis pathways. We evaluated the performance of the Metabolic Disassembler using datasets of secondary metabolites acquired from the Kyoto Encyclopedia of Genes and Genomes (KEGG) database [<xref ref-type="bibr" rid="CR13">13</xref>], and showed the effectiveness of the workflow in terms of both accuracy and computational time. The users of the Metabolic Disassembler do not have to specify starting molecules in advance, and can input any target molecule, even if it is not in databases.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Chemical structures of natural products</title>
      <p id="Par15">The goal of the Metabolic Disassembler is not to construct artificial pathways, but is to know the actual metabolic pathways of natural products. In order to achieve our goal, compounds and reactions in primary (central) metabolism are not needed. Rather, they are a hindrance to the calculation. Also, if a secondary metabolite is not associated with known biosynthetic pathway, no one would estimate if the prediction is true. Therefore, we need to collect secondary metabolites for which biosynthetic pathways are already known. We surveyed databases including MetaCyc [<xref ref-type="bibr" rid="CR14">14</xref>] and Rhea [<xref ref-type="bibr" rid="CR15">15</xref>], and concluded that KEGG [<xref ref-type="bibr" rid="CR13">13</xref>] (as of November 2018) is the one that stores necessary and sufficient amount of information.</p>
      <p id="Par16">In KEGG, metabolic compounds are given identifiers that contain the letter “C” and a five-digit number (e.g., “C00078” for L-tryptophan). We also used KEGG PATHWAY secondary metabolism maps to evaluate the accuracy of disassembly. In KEGG PATHWAY, secondary metabolism is classified as 1.9 “Metabolism of terpenoids and polyketides” (hereafter referred to as the 1.9 class) and 1.10 “Biosynthesis of other secondary metabolites” (hereafter referred to as the 1.10 class). The 1.9 class contains a group of molecules that are biosynthesized through mevalonate or non-mevalonate pathways, and BUs in these pathways are mostly limited to C<sub>2</sub> and C<sub>5</sub> units. This means that it is not difficult to identify these BUs because they are already quite obvious, and it is more important to analyze how the BUs form complex rings. Therefore, in this study, we focused on the 1.10 class, which contains 1111 molecules in 28 metabolic pathway maps. Molecules that had an “R” group, indicating they contained undefined structures, caused errors when using RDKit [<xref ref-type="bibr" rid="CR16">16</xref>], and therefore were not used. The remaining 943 molecules were used in this study. Note that we used KEGG just because it covers all known pathways, and used KEGG PATHWAY just to test the performance. We designed the Metabolic Disassembler so that the users can input any molecule even if it is not found in any database. Note again that we did not focus on the primary (central) metabolites, because all secondary metabolites originate from the starting compounds in the secondary pathway maps. Therefore, in order to find the starting materials of unknown secondary metabolites, it is more practical to use them, rather than the primary (central) metabolites.</p>
    </sec>
    <sec id="Sec4">
      <title>Chemical structure manipulation and computing environment</title>
      <p id="Par17">We implemented our application software using Python programming language (version 3.6.6) on Anaconda3 (version 5.3.0) [<xref ref-type="bibr" rid="CR17">17</xref>], NetworkX (version 2.2) [<xref ref-type="bibr" rid="CR18">18</xref>], RDKit (version 2018.09.1.0) [<xref ref-type="bibr" rid="CR16">16</xref>], Pycairo (version 1.18.0) [<xref ref-type="bibr" rid="CR19">19</xref>], and CairoSVG (version 2.2.1) [<xref ref-type="bibr" rid="CR20">20</xref>]. NetworkX is a graph calculation library that we used to produce the chemical structure graphs. RDKit is used widely in chemoinformatics, and we used it when retrieving chemical structures and conducting maximum common substructure searches. Pycairo and CairoSVG were used to render images of the molecules. The chemical structure of a molecule was represented as a chemical graph with atoms as nodes and chemical bonds as edges. Chemical structures described in MDL Molfile V2000 [<xref ref-type="bibr" rid="CR21">21</xref>] were retrieved using RDKit and converted to chemical graphs using NetworkX. All calculations were conducted on a computer with an Intel Core i7-9700K 3.6 GHz CPU and 16 GB RAM in Windows 10 OS.</p>
    </sec>
    <sec id="Sec5">
      <title>Generating a biosynthetic unit library (BUL)</title>
      <p id="Par18">Some minimal units for the biosynthesis of natural products are known, including the acetate-C<sub>2</sub> unit in the malonic acid pathway and the C<sub>5</sub> unit in the isoprenoid pathway. The goal of this study was to identify the starting materials and to provide information that can be used to predict the biosynthesis pathway; therefore, it is more useful practically to deal with substructures that are larger than the minimal units, which correspond to the metabolites located near the boundary area of primary and secondary metabolism. We defined three types of biosynthetic units (BUs), basic BUs (BBUs), derivative BUs (DBUs), and preferential BUs (PBUs), and stored them in a biosynthetic unit library (BUL).</p>
      <p id="Par19">The BBUs were defined as important intermediates in biosynthetic pathways and included the molecules in the starting point of a pathway map, the molecules at the branches of a pathway, and the molecule generated immediately after a large structural change. Examples of BBUs are shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. The DBUs were identified as derivatives of BBUs by applying 14 chemical transformation rules (i.e., dehydroxylation, decarboxylation, deamination, decarbonylation, oxidative deamination, amino transfer, dentrolation, dephoshorylation, dihidrogenation/de-dihydrogenation, de-CoA, denucleotidylation, ring opening, ring closure, and hydrolysis). We obtained a set of 765 BUs from 257 BBUs and 542 DBUs. The final number was less than the sum of BBUs and DBUs because there were some common structures.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Example of a basic set of selected biosynthetic units (BBUs). BBUs were defined as important intermediates in the biosynthetic pathways. In this context, the important intermediates are the molecules in the starting point of the pathway map, the molecules at the branches of the pathway, and the molecule generated immediately after the large structural change. We followed the distinction of solid and dashed arrows as drawn in the KEGG PATHWAY database. In general, solid arrows represent the reactions for which enzymes and reactions have been well characterized, and dashed arrows represent connections to other pathway maps, or reactions that are not yet well characterized</p></caption><graphic xlink:href="12859_2019_3183_Fig1_HTML" id="MO2"/></fig></p>
      <p id="Par20">Some substructures, such as the glucose residue in glucosides, remain unchanged downstream in the biosynthetic pathway. To avoid an unnecessary increase in computational costs, we defined a set of PBUs that contained five monosaccharide residues, a shikimic acid moiety, and a betalamic acid moiety (Fig. <xref rid="Fig2" ref-type="fig">2</xref>).
<fig id="Fig2"><label>Fig. 2</label><caption><p>Set of preferential biosynthetic units (PBU)</p></caption><graphic xlink:href="12859_2019_3183_Fig2_HTML" id="MO3"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>The metabolic disassembler workflow</title>
      <p id="Par21">The workflow consists of five steps: (1) input the target molecule as a query, (2) generate a query-specific BUL, (3) generate the fragment network, (4) generate and sort the BU combination candidates, and (5) output the calculation result.</p>
      <p id="Par22">First, a user inputs the target molecule as a query. Acceptable file formats are Molfile, SMILES (Simplified Molecular Input Line Entry System) [<xref ref-type="bibr" rid="CR22">22</xref>], InChI (International Chemical Identifier) [<xref ref-type="bibr" rid="CR23">23</xref>], and the KEGG compound identifier [<xref ref-type="bibr" rid="CR13">13</xref>]. The input chemical structure is converted to the Mol object of RDKit [<xref ref-type="bibr" rid="CR16">16</xref>] and is subsequently processed using NetworkX [<xref ref-type="bibr" rid="CR18">18</xref>].</p>
      <p id="Par23">Second, each BU in the BUL is compared with the query structure. If the BU is part of the query structure, it is placed in the query-specific BUL. The aim of this process is to avoid unnecessary computation cost by removing BUs not included in the query molecule. The flowchart for generating a query-specific BUL is shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. We used the HasSubstructMatch method in the RDKit library with the following option:
<fig id="Fig3"><label>Fig. 3</label><caption><p>The flowchart for generating a query-specific biosynthetic unit library (BUL)</p></caption><graphic xlink:href="12859_2019_3183_Fig3_HTML" id="MO4"/></fig></p>
      <p id="Par24">rdkit.Chem.HasSubstructMatch((Mol)self, (Mol)query, useChirality = True).</p>
      <p id="Par25">This method returns <italic>True</italic> if the query contains the given substructure, and returns <italic>False</italic> if not. Stereoisomers are distinguished, as shown in the example in Fig. <xref rid="Fig4" ref-type="fig">4a</xref>. Aromatic bonds are strictly distinguished from other conjugated double bonds, as shown in the example in Fig. <xref rid="Fig4" ref-type="fig">4b</xref>. This is an advantage in many cases; however, it is not useful in this study because aromatization and de-aromatization reactions are observed more frequently in biosynthetic reactions than in organic synthesis. To rescue such cases, we applied some empirical rules as follows. If the query molecule contains ≥17 aromatic bonds, the Metabolic Disassembler uses the FindMCS method [<xref ref-type="bibr" rid="CR16">16</xref>] and rescues the falsely judged substructures.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Distinguishing stereoisomers and double and aromatic bonds. (<bold>a</bold>) Example of distinguishing stereoisomers by RDKit.D-glucose with unclear stereoisomerism at 1-OH and α-D-glucose were regarded as being included in the target structure, whereas β-D-Glucose and α-D-Mannose were not. (<bold>b</bold>) Example of distinguishing double and aromatic bonds. Structure 1 was not regarded as being included in Structure 2 when using the HasSubstructMatch method in RDKit, because it distinguishes double and aromatic bonds (in red)</p></caption><graphic xlink:href="12859_2019_3183_Fig4_HTML" id="MO5"/></fig></p>
      <p id="Par26">rdkit.Chem.rdFMCS.FindMCS(mols, bondCompare = rdkit.Chem.rdFMCS.BondCompare.CompareAny).</p>
      <p id="Par27">The FindMCS method finds the maximum common substructure (MCS) in two or more molecules. Using the options as described above, bond orders such as aromatic and double bonds are ignored, thereby enabling an ambiguous MCS search. However, allowing too many ambiguous bonds produces an excessive number of candidate units. Therefore, the Metabolic Disassembler rescues a substructure only if the ratio of the number of ambiguous bonds to conjugated double bonds in the resulting MCS is ≤0.2. After collecting the units for the query-specific BUL, the units are sorted in decreasing order of the number of the atoms they contain.</p>
      <p id="Par28">Third, the query molecule is divided repeatedly until every fragment matches a BU in the query-specific BUL, and a fragment network is generated to represent the relationship between the query molecule and the obtained fragments (Fig. <xref rid="Fig5" ref-type="fig">5</xref>). The fragment network is traversed to find the optimal combination of BUs. The MCS result is used to identify the bond that needs to be digested for fragmentation. The MCS for this process is:
<fig id="Fig5"><label>Fig. 5</label><caption><p>Example of the fragmentation process. One of the BUs is used in a substructure search against the target molecule to identify the bond to digest. Splitting the identified bond yields fragmentation</p></caption><graphic xlink:href="12859_2019_3183_Fig5_HTML" id="MO6"/></fig></p>
      <p id="Par29">rdkit.Chem.GetSubstructMatch((Mol)self, (Mol)query, useChirality = True).</p>
      <p id="Par30">The flowchart used to obtain the fragment network has two stages (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). In the first stage (“A” in Fig. <xref rid="Fig6" ref-type="fig">6</xref>), the first fragmentation is carried out by MCS against all the query-specific BUs or PBUs to find the digested bond. The second stage (“B” in Fig. <xref rid="Fig6" ref-type="fig">6</xref>) consists of a nested loop, which repeats digestion until every fragment matches a BU. To reduce the number of candidate BU combinations, the maximum number of selected BUs is decided by eq. (1), where N is the total number of BUs in the query-specific BUL.
<fig id="Fig6"><label>Fig. 6</label><caption><p>The flowchart for obtaining the fragment network</p></caption><graphic xlink:href="12859_2019_3183_Fig6_HTML" id="MO7"/></fig></p>
      <p id="Par31">n = ⌈ N/2 ⌉ (1).</p>
      <p id="Par32">An example of a fragment network produced by the above process is shown in Fig. <xref rid="Fig7" ref-type="fig">7</xref>. The fragment network represents the relationship between parent (i.e., before the split) and child (i.e., after the split) fragments. An example of this relationship is shown in Fig. <xref rid="Fig8" ref-type="fig">8a</xref>.
<fig id="Fig7"><label>Fig. 7</label><caption><p>Example fragment network. (Top) Schematic diagram where the same molecules or fragments are given the same IDs. (Bottom) The same diagram where the detailed chemical structures are described</p></caption><graphic xlink:href="12859_2019_3183_Fig7_HTML" id="MO8"/></fig>
<fig id="Fig8"><label>Fig. 8</label><caption><p>Relationship of parent and child fragments and an example of the queue structure. (<bold>a</bold>) Example of the parent-child relationship from the fragment network. Panel A shows the initial fragmentation; panel B shows the further fragmentation. (<bold>b</bold>) Queue-based procedure to obtain BU candidates</p></caption><graphic xlink:href="12859_2019_3183_Fig8_HTML" id="MO9"/></fig></p>
      <p id="Par33">Fourth, using the parent-child relationship, a parent fragment can be replaced by child fragments, and this process can be iterated using the queue data structure (Fig. <xref rid="Fig8" ref-type="fig">8b</xref>). The fragment combination retrieved from the queue is checked to find whether it is identical to any one of the BUs in the query-specific BUL. If it is not, the replaced combination is again inserted into the queue structure as long as the number of fragments does not exceed the upper limit, which is determined in advance by the number of atoms included in the query molecule, as defined by eq. (2).</p>
      <p id="Par34">limit<sub>init</sub> = ⌈ N/k ⌉ (2).</p>
      <p id="Par35">where, k = {1 if <italic>N</italic> ≤ 4; 3 if 5 ≤ <italic>N</italic> ≤ 24; 4 if 25 ≤ <italic>N</italic> ≤ 53; 6 if 54 ≤ N}.</p>
      <p id="Par36">If every fragment is identical to one of the BUs in the query-specific BUL, the combination is added to the candidate list. The obtained candidate combinations are sorted in descending order of the size of the largest fragment as the first priority, and ascending order of the number of fragments as the second priority. An example of a sorted candidate list is shown in Table <xref rid="Tab1" ref-type="table">1</xref>.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Example of the sorted biosynthetic unit (BU) candidate list. The red dotted lines indicate the bond to be digested. NaN means there are no corresponding substructures or fragments. In this example, the top candidate is the best because it contains the largest fragment, and the number of the fragment is also the largest</p></caption><graphic position="anchor" xlink:href="12859_2019_3183_Tab1_HTML" id="MO18"/><table-wrap-foot><p>The red dotted lines indicate the bond to be digested. NaN means there are no corresponding substructures or fragments. In this example, the top candidate is the best because it contains the largest fragment, and the number of the fragment is also the largest</p></table-wrap-foot></table-wrap></p>
      <p id="Par37">Finally, to easily understand the optimized BU combination, the Metabolic Disassembler outputs a colored image describing the fragmentation, as shown in the example in Fig. <xref rid="Fig9" ref-type="fig">9</xref>. Each of the split fragments is linked to the starting material.
<fig id="Fig9"><label>Fig. 9</label><caption><p>Color-coded output representing the best fragmentation</p></caption><graphic xlink:href="12859_2019_3183_Fig9_HTML" id="MO10"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Comparison of the performance with the system that is not knowledge-based</title>
      <p id="Par38">Since none of previous studies aimed to find starting materials of secondary metabolites directly, it is difficult to show the performance of our proposed workflow. Here, the performance of our proposed workflow, which is a knowledge-based system, was compared with that of a baseline approach using a genetic algorithm, which is not knowledge-based. We used the Python library named DEAP [<xref ref-type="bibr" rid="CR24">24</xref>] (version 1.1.2) to implement the genetic algorithm. In the genetic algorithm, the disassembly of the query molecule into BUs was solved as an optimization problem of the digested bonds in the query molecule (Fig. <xref rid="Fig10" ref-type="fig">10</xref>), as explained below.
<fig id="Fig10"><label>Fig. 10</label><caption><p>Baseline workflow using the genetic algorithm. An individual represents the combination of digested bonds, and the fitness function was defined as the minimum similarity between the fragments and the BUs in the query-specific BUL</p></caption><graphic xlink:href="12859_2019_3183_Fig10_HTML" id="MO11"/></fig></p>
      <p id="Par39">First, N individuals are generated randomly as the first generation, where an individual is represented as a binary (0 or 1) vector that represents whether or not the corresponding bond should be digested. The fitness function decides whether an individual survives, and those that survive are subjected to any of three operations, namely the crossover of two individuals, mutation of an individual, or simply the copy of an individual. The generated N individuals are referred to as the next generation. This process is repeated until the predetermined ending condition is reached, and the individuals with highest fitness at the final generation are regarded as the best solution.</p>
      <p id="Par40">In this study, we set the population (the number of individuals in a generation) to 300, the crossover probability to 80%, and the mutation probability to 0.5%. The fitness function was defined as the minimum similarity between the fragments and the BUs in the query-specific BUL. We used the Tanimoto coefficient of the Morgan fingerprint (radius 2, 1024 bit) [<xref ref-type="bibr" rid="CR25">25</xref>] as the similarity measure.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Results</title>
    <sec id="Sec9">
      <title>Performance evaluation</title>
      <p id="Par41">A summary of the ratio of correct disassembly for the respective pathway maps is shown in Table <xref rid="Tab2" ref-type="table">2</xref>. Note that the Metabolic Disassembler inputs only the chemical structure of the query molecule and does not require any pathway information. We used the pathway maps only for the performance evaluation. We found that 903 of the 943 molecules (approximately 96%) were disassembled correctly. Detailed results are presented in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Accuracy of the proposed Metabolic Disassembler workflow for each metabolic map</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Map number</th><th>Name of the pathway map</th><th>Correctness for the first candidate</th><th>Correctness for the other candidates</th><th>Incorrect</th><th>Number of molecules</th><th>Accuracy</th></tr></thead><tbody><tr><td>00231</td><td>Puromycin biosynthesis</td><td>10</td><td>0</td><td>0</td><td>10</td><td>1.000</td></tr><tr><td>00232</td><td>Caffeine metabolism</td><td>14</td><td>0</td><td>0</td><td>14</td><td>1.000</td></tr><tr><td>00254</td><td>Aflatoxin biosynthesis</td><td>17</td><td>0</td><td>4</td><td>21</td><td>0.810</td></tr><tr><td>00261</td><td>Monobactam biosynthesis</td><td>18</td><td>6</td><td>0</td><td>24</td><td>1.000</td></tr><tr><td>00311</td><td>Penicillin and cephalosporin biosynthesis</td><td>12</td><td>0</td><td>0</td><td>12</td><td>1.000</td></tr><tr><td>00331</td><td>Clavulanic acid biosynthesis</td><td>6</td><td>2</td><td>0</td><td>8</td><td>1.000</td></tr><tr><td>00332</td><td>Carbapenem biosynthesis</td><td>22</td><td>0</td><td>1</td><td>23</td><td>0.957</td></tr><tr><td>00333</td><td>Prodigiosin biosynthesis</td><td>1</td><td>0</td><td>10</td><td>11</td><td>0.091</td></tr><tr><td>00401</td><td>Novobiocin biosynthesis</td><td>17</td><td>0</td><td>1</td><td>18</td><td>0.944</td></tr><tr><td>00402</td><td>Benzoxazinoid biosynthesis</td><td>6</td><td>0</td><td>0</td><td>6</td><td>1.000</td></tr><tr><td>00403</td><td>Indole diterpene alkaloid biosynthesis</td><td>30</td><td>0</td><td>0</td><td>30</td><td>1.000</td></tr><tr><td>00404</td><td>Staurosporine biosynthesis</td><td>32</td><td>0</td><td>0</td><td>32</td><td>1.000</td></tr><tr><td>00405</td><td>Phenazine biosynthesis</td><td>17</td><td>5</td><td>3</td><td>25</td><td>0.880</td></tr><tr><td>00521</td><td>Streptomycin biosynthesis</td><td>15</td><td>0</td><td>0</td><td>15</td><td>1.000</td></tr><tr><td>00524</td><td>Neomycin, kanamycin and gentamicin biosynthesis</td><td>67</td><td>0</td><td>2</td><td>69</td><td>0.971</td></tr><tr><td>00525</td><td>Acarbose and validamycin biosynthesis</td><td>29</td><td>0</td><td>0</td><td>29</td><td>1.000</td></tr><tr><td>00901</td><td>Indole alkaloid biosynthesis</td><td>54</td><td>1</td><td>1</td><td>56</td><td>0.982</td></tr><tr><td>00940</td><td>Phenylpropanoid biosynthesis</td><td>51</td><td>0</td><td>4</td><td>55</td><td>0.927</td></tr><tr><td>00941</td><td>Flavonoid biosynthesis</td><td>63</td><td>0</td><td>0</td><td>63</td><td>1.000</td></tr><tr><td>00942</td><td>Anthocyanin biosynthesis</td><td>63</td><td>0</td><td>0</td><td>63</td><td>1.000</td></tr><tr><td>00943</td><td>Isoflavonoid biosynthesis</td><td>55</td><td>2</td><td>2</td><td>59</td><td>0.966</td></tr><tr><td>00944</td><td>Flavone and flavonol biosynthesis</td><td>49</td><td>0</td><td>0</td><td>49</td><td>1.000</td></tr><tr><td>00945</td><td>Stilbenoid, diarylheptanoid and gingerol biosynthesis</td><td>21</td><td>2</td><td>0</td><td>23</td><td>1.000</td></tr><tr><td>00950</td><td>Isoquinoline alkaloid biosynthesis</td><td>98</td><td>0</td><td>1</td><td>99</td><td>0.990</td></tr><tr><td>00960</td><td>Tropane, piperidine and pyridine alkaloid biosynthesis</td><td>44</td><td>3</td><td>11</td><td>58</td><td>0.810</td></tr><tr><td>00965</td><td>Betalain biosynthesis</td><td>20</td><td>0</td><td>0</td><td>20</td><td>1.000</td></tr><tr><td>00966</td><td>Glucosinolate biosynthesis</td><td>48</td><td>5</td><td>0</td><td>53</td><td>1.000</td></tr><tr><td>01058</td><td>Acridone alkaloid biosynthesis</td><td>14</td><td>1</td><td>0</td><td>15</td><td>1.000</td></tr><tr><td/><td>Total (without redundancy)</td><td>876</td><td>27</td><td>40</td><td>943</td><td>0.958</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec10">
      <title>Computational time</title>
      <p id="Par42">We measured the computational time for the Metabolic Disassembler with the 943 molecules, executed in the computing environment described in Methods. We performed the calculation five times for each molecule and the obtained average values were recorded (Table <xref rid="Tab3" ref-type="table">3</xref>). The plot of the computational time for each molecule is shown in Fig. <xref rid="Fig11" ref-type="fig">11</xref>. One of the molecules needed more than one day for the calculation, so it was excluded from the result. Therefore, the total number of molecules disassembled was 942. Among them, 855 molecules (approximately 91%) were each disassembled within one minute, indicating the processing speed was sufficiently practical in the current implementation. Sixteen molecules took more than 5 min to disassemble (Table <xref rid="Tab4" ref-type="table">4</xref>). One of the causes of the increased execution time came from the application of the FindMCS method in RDKit.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Distribution of computational times for correct and incorrect disassembly</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2"/><th colspan="5">Runtime (s)</th></tr><tr><th>Average</th><th>Median</th><th>SD</th><th>Max</th><th>Min</th></tr></thead><tbody><tr><td>Correct answers (<italic>n</italic> = 903)</td><td>27.5</td><td>2.0</td><td>121.0</td><td>2566.0</td><td>0.3</td></tr><tr><td>Incorrect answers (<italic>n</italic> = 39)</td><td>4.0</td><td>1.2</td><td>7.8</td><td>37.1</td><td>0.1</td></tr><tr><td>All (<italic>n</italic> = 942)</td><td>26.5</td><td>2.0</td><td>118.6</td><td>2566.0</td><td>0.1</td></tr></tbody></table></table-wrap>
<fig id="Fig11"><label>Fig. 11</label><caption><p>Plot of computational time for each molecule. The computational time is given using a log scale</p></caption><graphic xlink:href="12859_2019_3183_Fig11_HTML" id="MO13"/></fig>
<table-wrap id="Tab4"><label>Table 4</label><caption><p>The molecules that needed more than five minutes of computational time for disassembly</p></caption><graphic position="anchor" xlink:href="12859_2019_3183_Tab4_HTML" id="MO19"/></table-wrap></p>
    </sec>
    <sec id="Sec11">
      <title>Comparison between the metabolic disassembler and the baseline workflow using a genetic algorithm</title>
      <p id="Par43">For the fair comparison to our proposed workflow, we measured the computational time of the baseline workflow and decided the number of generations to 200, so that it takes approximately similar range of computational time. The average and maximum runtimes were 252 and 1512 s, respectively, showing that the computational time was not different significantly from our proposed workflow. Also, in the evaluation process of the baseline workflow, we took top five most fitted individuals, and regarded as correct if one of them is correctly disassembled. Table <xref rid="Tab5" ref-type="table">5</xref> shows the comparison of our proposed workflow and the baseline workflow, and details of the numbers of correctly and incorrectly disassembled molecules using the baseline workflow are shown in Table <xref rid="Tab6" ref-type="table">6</xref>. Among the molecules that were not correctly disassembled by the Metabolic Disassembler, five were correctly disassembled by the baseline workflow (Fig. <xref rid="Fig12" ref-type="fig">12</xref>). The baseline workflow does not depend on the distinction of aromatic bonds, which led to these successful cases. However, our proposed workflow generally performed better than the baseline workflow. The baseline workflow used the Tanimoto coefficient of Morgan fingerprint, which takes values from 0.0 (dissimilar) to 1.0 (similar). Importantly, 1.0 does not always mean identical. In addition, when the molecular similarity is low it is more difficult to interpret the obtained fragment. The proposed workflow performs exact matching, which provides easier interpretation.
<table-wrap id="Tab5"><label>Table 5</label><caption><p>Comparison of the performance of the proposed Metabolic Disassembler workflow and the baseline workflows</p></caption><table frame="hsides" rules="groups"><thead><tr><th/><th>Correct</th><th>Incorrect</th><th>Accuracy</th></tr></thead><tbody><tr><td>Proposed workflow</td><td>903</td><td>40</td><td>0.958</td></tr><tr><td>Baseline workflow using the genetic algorithm</td><td>490</td><td>453</td><td>0.520</td></tr></tbody></table></table-wrap>
<table-wrap id="Tab6"><label>Table 6</label><caption><p>Accuracy of the baseline workflow for each metabolic map</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Map number</th><th>Name of the pathway map</th><th>Correct</th><th>Incorrect</th><th>Number of molecules</th><th>Accuracy</th></tr></thead><tbody><tr><td>00231</td><td>Puromycin biosynthesis</td><td>4</td><td>6</td><td>10</td><td>0.400</td></tr><tr><td>00232</td><td>Caffeine metabolism</td><td>11</td><td>3</td><td>14</td><td>0.786</td></tr><tr><td>00254</td><td>Aflatoxin biosynthesis</td><td>13</td><td>8</td><td>21</td><td>0.619</td></tr><tr><td>00261</td><td>Monobactam biosynthesis</td><td>9</td><td>15</td><td>24</td><td>0.375</td></tr><tr><td>00311</td><td>Penicillin and cephalosporin biosynthesis</td><td>8</td><td>4</td><td>12</td><td>0.667</td></tr><tr><td>00331</td><td>Clavulanic acid biosynthesis</td><td>8</td><td>0</td><td>8</td><td>1.000</td></tr><tr><td>00332</td><td>Carbapenem biosynthesis</td><td>13</td><td>10</td><td>23</td><td>0.565</td></tr><tr><td>00333</td><td>Prodigiosin biosynthesis</td><td>1</td><td>10</td><td>11</td><td>0.091</td></tr><tr><td>00401</td><td>Novobiocin biosynthesis</td><td>13</td><td>5</td><td>18</td><td>0.722</td></tr><tr><td>00402</td><td>Benzoxazinoid biosynthesis</td><td>6</td><td>0</td><td>6</td><td>1.000</td></tr><tr><td>00403</td><td>Indole diterpene alkaloid biosynthesis</td><td>13</td><td>17</td><td>30</td><td>0.433</td></tr><tr><td>00404</td><td>Staurosporine biosynthesis</td><td>11</td><td>21</td><td>32</td><td>0.344</td></tr><tr><td>00405</td><td>Phenazine biosynthesis</td><td>4</td><td>21</td><td>25</td><td>0.160</td></tr><tr><td>00521</td><td>Streptomycin biosynthesis</td><td>4</td><td>11</td><td>15</td><td>0.267</td></tr><tr><td>00524</td><td>Neomycin, kanamycin and gentamicin biosynthesis</td><td>39</td><td>30</td><td>69</td><td>0.565</td></tr><tr><td>00525</td><td>Acarbose and validamycin biosynthesis</td><td>20</td><td>9</td><td>29</td><td>0.690</td></tr><tr><td>00901</td><td>Indole alkaloid biosynthesis</td><td>30</td><td>26</td><td>56</td><td>0.536</td></tr><tr><td>00940</td><td>Phenylpropanoid biosynthesis</td><td>25</td><td>30</td><td>55</td><td>0.455</td></tr><tr><td>00941</td><td>Flavonoid biosynthesis</td><td>42</td><td>21</td><td>63</td><td>0.667</td></tr><tr><td>00942</td><td>Anthocyanin biosynthesis</td><td>32</td><td>31</td><td>63</td><td>0.508</td></tr><tr><td>00943</td><td>Isoflavonoid biosynthesis</td><td>32</td><td>27</td><td>59</td><td>0.542</td></tr><tr><td>00944</td><td>Flavone and flavonol biosynthesis</td><td>37</td><td>12</td><td>49</td><td>0.755</td></tr><tr><td>00945</td><td>Stilbenoid, diarylheptanoid and gingerol biosynthesis</td><td>10</td><td>13</td><td>23</td><td>0.435</td></tr><tr><td>00950</td><td>Isoquinoline alkaloid biosynthesis</td><td>31</td><td>68</td><td>99</td><td>0.313</td></tr><tr><td>00960</td><td>Tropane, piperidine and pyridine alkaloid biosynthesis</td><td>16</td><td>42</td><td>58</td><td>0.276</td></tr><tr><td>00965</td><td>Betalain biosynthesis</td><td>7</td><td>13</td><td>20</td><td>0.350</td></tr><tr><td>00966</td><td>Glucosinolate biosynthesis</td><td>47</td><td>6</td><td>53</td><td>0.887</td></tr><tr><td>01058</td><td>Acridone alkaloid biosynthesis</td><td>12</td><td>3</td><td>15</td><td>0.800</td></tr><tr><td/><td>Total (without redundancy)</td><td>490</td><td>453</td><td>943</td><td>0.520</td></tr></tbody></table></table-wrap>
<fig id="Fig12"><label>Fig. 12</label><caption><p>The molecules that were correctly disassembled by the baseline workflow but not by the proposed workflow</p></caption><graphic xlink:href="12859_2019_3183_Fig12_HTML" id="MO14"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Discussion</title>
    <p id="Par44">Our proposed workflow correctly disassembled 903 molecules, but incorrectly disassembled 40 molecules. The causes of the incorrect disassembly are given in Table <xref rid="Tab7" ref-type="table">7</xref>.
<table-wrap id="Tab7"><label>Table 7</label><caption><p>Causes of incorrect disassembly</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Map number</th><th>MCS search</th><th>Change in ring structures</th><th>Use of PBUs</th><th>Fatty acid and polyketide biosynthesis</th><th>Shortage of BUs</th><th>Others</th><th>Total</th></tr></thead><tbody><tr><td>00254</td><td>0</td><td>4</td><td>0</td><td>0</td><td>0</td><td>0</td><td>4</td></tr><tr><td>00332</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>00333</td><td>5</td><td>0</td><td>0</td><td>5</td><td>0</td><td>0</td><td>10</td></tr><tr><td>00401</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>00405</td><td>3</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>3</td></tr><tr><td>00524</td><td>0</td><td>0</td><td>0</td><td>0</td><td>2</td><td>0</td><td>2</td></tr><tr><td>00901</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>00940</td><td>3</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>4</td></tr><tr><td>00943</td><td>2</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>2</td></tr><tr><td>00950</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>00960</td><td>5</td><td>0</td><td>0</td><td>0</td><td>6</td><td>0</td><td>11</td></tr><tr><td>Total</td><td>19</td><td>4</td><td>1</td><td>5</td><td>9</td><td>2</td><td>40</td></tr></tbody></table></table-wrap></p>
    <p id="Par45">The substructure search methods caused most of the incorrect results. The HasSubstructMatch and GetSubstructMatch methods in RDKit were used for the substructure search, and these methods distinguish aromatic bond from conjugated double bonds. Our workflow allowed ambiguous bonds in limited circumstances, making it possible to cope with the metabolic reaction to form an aromatic ring by ring closure. However, three molecules, coumestrol (C10205), phenazine-1,6-dicarboxylic acid (C12119), and papaverine (C06533), were incorrectly disassembled. We decided not to apply this rule if the number of aromatic bonds in the query molecule was ≤16 and because of this, six molecules, anhydroglycinol (C10200), 2-heptyl-4-quinolone (C20643), 2-heptyl-3-hydroxy-4-quinolone (C20643), coumarin (C05851), scopoletin (C01752), and scopolin (C01527), were incorrectly disassembled. Among the nine incorrectly disassembled molecules, coumarin, scopoletin, scopolin, coumestrol, and papaverine were correctly disassembled by the baseline approach, as explained above. However, the other four molecules were incorrectly disassembled by both workflows. We used the FindMCS method in RDKit to allow ambiguous matching, but this method easily leads to an increase in the calculation time and a decrease in interpretability. Additionally, the five molecules in map00960, slaframine (C06185), 13-(2-methylcrotonoyl)oxylupanine (C04170), 13-hydroxylupanine (C02621), pseudopelletierine (C10865), and calystegin A3 (C10850), were incorrectly disassembled despite of the presence of relevant BUs. This was caused by the GetSubstructMatch method in RDKit, which returns only the first found substructure even if theoretically there are more substructures, as shown in the example in Fig. <xref rid="Fig13" ref-type="fig">13</xref>. This problem could be solved by using GetSubstructMatches in RDKit, which returns all possible combinations, instead of GetSubstructMatch. However, this method easily causes an increase in the calculation time and, thus, it is not efficient enough to be applied in a simple way. Therefore, the future improvement of these problems would include the development of a more suitable method for the substructure search.
<fig id="Fig13"><label>Fig. 13</label><caption><p>Substructure search of cadaverine against 13-hydroxylupanine.The substructures highlighted in red correspond to the query cadaverine. The substructures in green rare those already matched to other substructures. The GetSubstructMatch method of RDKit returns only the first result found, even though theoretically there are more possible results</p></caption><graphic xlink:href="12859_2019_3183_Fig13_HTML" id="MO15"/></fig></p>
    <p id="Par46">Some of the other unsuccessful disassembles were caused by rearrangements of the ring structures. For example, the structures of the fused rings in aflatoxin B1 (C06800), B2 (C16753), G1 (C16755), and G2 (C16754) were different from those of the respective precursors, which caused the incorrect disassembly. This problem could be remedied by adding more substructures to the BUL; however, this is not realistic.</p>
    <p id="Par47">We introduced PBUs with the aim of shortening the calculation time, especially for molecules that contain sugar residues. We also compared the algorithms that did and did not use PBUs, taking lampranthin II (C08552), which has a betalamic acid (C08538) moiety and saccharide residues, as an example (Fig. <xref rid="Fig14" ref-type="fig">14a</xref>). The computational time was measured five times both before and after the introduction of the PBUs. The computational times before and after the introduction of the PBUs were 208.58 ± 2.46 s and 4.38 ± 0.11 s, respectively; therefore, we concluded that introducing the PBUs significantly improved the computational speed. We found a case where introducing the PBUs led to an incorrect disassembly (Fig. <xref rid="Fig14" ref-type="fig">14b, c</xref>); however, this is the only incorrect case that we found, implying this was not a major problem.
<fig id="Fig14"><label>Fig. 14</label><caption><p>Effects of preferential biosynthetic units on disassembly by the Metabolic Disassembler. (<bold>a</bold>) Disassembly of lampranthin II. (<bold>b</bold>) Biosynthesis of strictosidine. (<bold>c</bold>) Incorrect disassembly of strictosidine</p></caption><graphic xlink:href="12859_2019_3183_Fig14_HTML" id="MO16"/></fig></p>
    <p id="Par48">In this study, we did not focus on terpenoids and polyketides, which were mainly in the metabolism map 1.9 class. The appropriate BUs of terpenoids and polyketides would be acetyl-CoA and so on, however, adding these BUs could not solve the problem. In this and other studies, manual curations are important for good performance. BBUs and DBUs were manually selected in order to appropriately disassemble molecules, and PBUs were selected in order to shorten the unnecessary computational time. Enhancement of the BUL could improve the coverage but may increase the incorrect substructure matches. We already examined our manual curation, and the current BUs are the best at this moment. When it becomes apparent that some other secondary metabolites originate from other pathways, the enhancement of BUs may work well.</p>
    <p id="Par49">In fact, the 1.10 class also contains some terpenoids and polyketides and our proposed workflow produced incorrect disassembles for them. The four molecules in map000333, 2-methyl-3-n-amyl-dihydropyrrole (C21571), 2-methyl-3-n-amyl-pyrrole (C21572), 4-keto-2-undecylpyrroline (C21573), and 2-undecylpyrrole (C21574), are generated by amination and cyclization of fatty acids, but do not originate from L-proline as incorrectly indicated by our proposed workflow. Similarly, for the fatty acid dodecanoic acid (C02679) in map000333, the desired combination is the six C<sub>2</sub> units that originate from malonyl-CoA (C00083). However, this molecule was excluded from the calculation because the number of fragments exceeded the upper limit.</p>
    <p id="Par50">The BUL could not support cases where the number of atoms decreased in the BU or when a double bond was generated in a BU by cyclization and subsequent oxidation. For example, to cope with the C<sub>7</sub> units derived from octanoyl-CoA (C01944), it is necessary to prepare 19 BUs in which one of the six C–C bonds becomes a double bond. There are 33 combinations for the C<sub>8</sub> units. Therefore, preparing for other C<sub>n</sub> units produces an enormous number of BUs and slows the processing speed. In addition, if many straight-chain alkyl groups are registered in the BUL, molecules that did not originate from acetate-malonic acid pathway are adversely affected. Therefore, we concluded that the BUL and our proposed workflow should not be applied to the biosynthesis of terpenoids and polyketides.</p>
    <p id="Par51">Despite the efforts to enhance the BUL to cover a wide range of natural products, there were still nine molecules that were not covered. Apramycin (C01555) and oxyapramycin (C17997) in map00524 are synthesized via paromamine (C01743; Fig. <xref rid="Fig15" ref-type="fig">15a</xref>). These two molecules look like dimers but not exactly, and their biosynthetic pathways are not yet apparent. They contain substructures other than the paromamine (C01743) residue and their origins are unclear, and could not be dealt with by the proposed workflow. 3-(2-Carboxyethenyl)-cis,cis-muconate (C04366) in map00940 is synthetized by oxidative cleavage of the benzene ring of caffeic acid (C01197; Fig. <xref rid="Fig15" ref-type="fig">15b</xref>). This molecule can be dealt with by preparing a relevant BU, but such cleavage was observed only in this molecule. Therefore, we decided we should not prepare such a BU considering its low general use. Senecionine (C06176) and senecionine N-oxide (C15612) in map00960 are synthesized by condensation of retronecine (C06177) and two L-isoleucine (C00407; Fig. <xref rid="Fig15" ref-type="fig">15c</xref>). A carbon atom from each L-isoleucine unit is eliminated during the biosynthesis, but the reaction mechanism is not clear. Lobelanine (C10157), (−)-lobeline (C07475), and (−)-sedamine (C10171) originate from piperideine (C06181), but their biosynthetic mechanisms are not clear (Fig. <xref rid="Fig15" ref-type="fig">15d</xref>). Cytisine (C10763) is biosynthesized by conjugating cadaverine (Fig. <xref rid="Fig15" ref-type="fig">15e</xref>); however, four carbon atoms are eliminated during the biosynthesis, but its complete biosynthetic mechanism has not been revealed. Therefore, appropriate BUs could not be prepared for these molecules.
<fig id="Fig15"><label>Fig. 15</label><caption><p>Biosynthesis of the molecules that were not covered the BUL. (<bold>a</bold>) Apramycin and oxyapramycin. (<bold>b</bold>) 3-(2-carboxyethenyl)-cis,cis-muconate. (<bold>c</bold>) Senecionine. (<bold>d</bold>) Lobelanine and (−)-lobeline and (−)-sedamine. (<bold>e</bold>) Cytisine</p></caption><graphic xlink:href="12859_2019_3183_Fig15_HTML" id="MO17"/></fig></p>
    <p id="Par52">Although enhancement of the BUL could be a solution, its expansion may increase the number of incorrect substructure matches as well as the calculation time. A sufficient number of BUs is necessary for successful disassembly, therefore, it is necessary to strengthen the BUL while considering its tradeoff.</p>
    <sec id="Sec13">
      <title>Conclusions</title>
      <p id="Par53">The Metabolic Disassembler disassembles target chemical structures into relevant biosynthetic units that correspond to their starting materials, which is the first step in predicting the biosynthetic pathways of natural products. The users can use the Python program as well as the BUL so that the users do not have to reproduce this knowledge-based system. The Metabolic Disassembler will also help to identify the chemical bonds generated during the biosynthetic pathway, thereby providing valuable information for predicting the biosynthetic pathway of natural products.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec14">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2019_3183_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1.</bold> Summary of disassembly calculation for each map. Detailed explanation of disassembly calculation for each pathway map.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>BBU</term>
        <def>
          <p id="Par4">basic BU</p>
        </def>
      </def-item>
      <def-item>
        <term>BU</term>
        <def>
          <p id="Par5">biosynthetic unit</p>
        </def>
      </def-item>
      <def-item>
        <term>BUL</term>
        <def>
          <p id="Par6">biosynthetic unit library</p>
        </def>
      </def-item>
      <def-item>
        <term>DBU</term>
        <def>
          <p id="Par7">derivative BU</p>
        </def>
      </def-item>
      <def-item>
        <term>PBU</term>
        <def>
          <p id="Par8">preferential BU</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-019-3183-9.</p>
  </sec>
  <ack>
    <p>We thank Margaret Biswas, PhD, from Edanz Group (<ext-link ext-link-type="uri" xlink:href="http://www.edanzediting.com/ac">www.edanzediting.com/ac</ext-link>) for editing a draft of this manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>KA conducted all calculations and most of the data curation, interpretation, and wrote the draft of manuscript. TM contributed to the data curation and interpretation. KT and KF gave helpful suggestions. MK designed the study, interpreted the results, and compiled the manuscript. All authors approved the final version of the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Japan Society for the Promotion of Science under the Grants-in-Aid for Scientific Research (KAKENHI) Program (grant number 17 K07260).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The Metabolic Disassembler is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/the-metabolic-disassembler/metadisassembler">https://github.com/the-metabolic-disassembler/metadisassembler</ext-link>.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par54">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par55">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par56">None declared.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Fleming A. On the antibacterial action of cultures of a penicillium, with special reference to their use in the isolation of B. influenzae. <italic>Br J Exp Pathol.</italic> 1929;10(3):226–36.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burg</surname>
            <given-names>R. W.</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>B. M.</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>E. E.</given-names>
          </name>
          <name>
            <surname>Birnbaum</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Currie</surname>
            <given-names>S. A.</given-names>
          </name>
          <name>
            <surname>Hartman</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Kong</surname>
            <given-names>Y.-L.</given-names>
          </name>
          <name>
            <surname>Monaghan</surname>
            <given-names>R. L.</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Putter</surname>
            <given-names>I.</given-names>
          </name>
          <name>
            <surname>Tunac</surname>
            <given-names>J. B.</given-names>
          </name>
          <name>
            <surname>Wallick</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Stapley</surname>
            <given-names>E. O.</given-names>
          </name>
          <name>
            <surname>Oiwa</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Omura</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Avermectins, New Family of Potent Anthelmintic Agents: Producing Organism and Fermentation</article-title>
        <source>Antimicrobial Agents and Chemotherapy</source>
        <year>1979</year>
        <volume>15</volume>
        <issue>3</issue>
        <fpage>361</fpage>
        <lpage>367</lpage>
        <pub-id pub-id-type="doi">10.1128/AAC.15.3.361</pub-id>
        <?supplied-pmid 464561?>
        <pub-id pub-id-type="pmid">464561</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Carbonell</surname>
            <given-names>Pablo</given-names>
          </name>
          <name>
            <surname>Parutto</surname>
            <given-names>Pierre</given-names>
          </name>
          <name>
            <surname>Herisson</surname>
            <given-names>Joan</given-names>
          </name>
          <name>
            <surname>Pandit</surname>
            <given-names>Shashi Bhushan</given-names>
          </name>
          <name>
            <surname>Faulon</surname>
            <given-names>Jean-Loup</given-names>
          </name>
        </person-group>
        <article-title>XTMS: pathway design in an eXTended metabolic space</article-title>
        <source>Nucleic Acids Research</source>
        <year>2014</year>
        <volume>42</volume>
        <issue>W1</issue>
        <fpage>W389</fpage>
        <lpage>W394</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku362</pub-id>
        <?supplied-pmid 24792156?>
        <pub-id pub-id-type="pmid">24792156</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Koch, M, Duigou, T, Carbonell, P, and Faulon, JL. Molecular structures enumeration and virtual screening in the chemical space with RetroPath2.0, <italic>Journal of cheminformatics</italic>. 2017;9(1):64.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delépine</surname>
            <given-names>Baudoin</given-names>
          </name>
          <name>
            <surname>Duigou</surname>
            <given-names>Thomas</given-names>
          </name>
          <name>
            <surname>Carbonell</surname>
            <given-names>Pablo</given-names>
          </name>
          <name>
            <surname>Faulon</surname>
            <given-names>Jean-Loup</given-names>
          </name>
        </person-group>
        <article-title>RetroPath2.0: A retrosynthesis workflow for metabolic engineers</article-title>
        <source>Metabolic Engineering</source>
        <year>2018</year>
        <volume>45</volume>
        <fpage>158</fpage>
        <lpage>170</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ymben.2017.12.002</pub-id>
        <?supplied-pmid 29233745?>
        <pub-id pub-id-type="pmid">29233745</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Sivakumar TV, Giri V, Park JH, Kim TY, Bhaduri A. ReactPRED: a tool to predict and analyze biochemical reactions. <italic>Bioinformatics</italic>. 2016;32(22):3522–4.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Kumar A, Wang L, Ng CY, Maranas CD. Pathway design using de novo steps through uncharted biochemical spaces. <italic>Nat Commun</italic>. 2018;9(1):184.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yousofshahi</surname>
            <given-names>Mona</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>Kyongbum</given-names>
          </name>
          <name>
            <surname>Hassoun</surname>
            <given-names>Soha</given-names>
          </name>
        </person-group>
        <article-title>Probabilistic pathway construction</article-title>
        <source>Metabolic Engineering</source>
        <year>2011</year>
        <volume>13</volume>
        <issue>4</issue>
        <fpage>435</fpage>
        <lpage>444</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ymben.2011.01.006</pub-id>
        <?supplied-pmid 21292021?>
        <pub-id pub-id-type="pmid">21292021</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Dewick PM. Medicinal natural products: a biosynthetic approach 3rd ed. <italic>Chichester, England: John Wiley &amp; Sons</italic>; 2009.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yamanishi</surname>
            <given-names>Yoshihiro</given-names>
          </name>
          <name>
            <surname>Tabei</surname>
            <given-names>Yasuo</given-names>
          </name>
          <name>
            <surname>Kotera</surname>
            <given-names>Masaaki</given-names>
          </name>
        </person-group>
        <article-title>Metabolome-scalede novopathway reconstruction using regioisomer-sensitive graph alignments</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>12</issue>
        <fpage>i161</fpage>
        <lpage>i170</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv224</pub-id>
        <?supplied-pmid 26072478?>
        <pub-id pub-id-type="pmid">26072478</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Yuan L, Tian Y, Ding S, Liu Y, Chen F, Zhang T, Tu W, Chen J, Hu QN. PrecursorFinder: a customized biosynthetic precursor explorer. <italic>Bioinformatics</italic>. 2019;35(9):1603–4.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moriya</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Shigemizu</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Hattori</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Tokimatsu</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kotera</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Goto</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Kanehisa</surname>
            <given-names>M.</given-names>
          </name>
        </person-group>
        <article-title>PathPred: an enzyme-catalyzed metabolic pathway prediction server</article-title>
        <source>Nucleic Acids Research</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>Web Server</issue>
        <fpage>W138</fpage>
        <lpage>W143</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq318</pub-id>
        <?supplied-pmid 20435670?>
        <pub-id pub-id-type="pmid">20435670</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Caspi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Billington</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fulcher</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Keseler</surname>
            <given-names>IM</given-names>
          </name>
          <name>
            <surname>Kothari</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Krummenacker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Latendresse</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Midford</surname>
            <given-names>PE</given-names>
          </name>
          <name>
            <surname>Ong</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Paley</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Subhraveti</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>PD</given-names>
          </name>
        </person-group>
        <article-title>BioCyc: a genomic and metabolic web portal with multiple omics analytical tools</article-title>
        <source>The FASEB Journal</source>
        <year>2019</year>
        <volume>33</volume>
        <issue>1_supplement</issue>
        <fpage>473</fpage>
        <lpage>472</lpage>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alcántara</surname>
            <given-names>Rafael</given-names>
          </name>
          <name>
            <surname>Axelsen</surname>
            <given-names>Kristian B.</given-names>
          </name>
          <name>
            <surname>Morgat</surname>
            <given-names>Anne</given-names>
          </name>
          <name>
            <surname>Belda</surname>
            <given-names>Eugeni</given-names>
          </name>
          <name>
            <surname>Coudert</surname>
            <given-names>Elisabeth</given-names>
          </name>
          <name>
            <surname>Bridge</surname>
            <given-names>Alan</given-names>
          </name>
          <name>
            <surname>Cao</surname>
            <given-names>Hong</given-names>
          </name>
          <name>
            <surname>de Matos</surname>
            <given-names>Paula</given-names>
          </name>
          <name>
            <surname>Ennis</surname>
            <given-names>Marcus</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>Steve</given-names>
          </name>
          <name>
            <surname>Owen</surname>
            <given-names>Gareth</given-names>
          </name>
          <name>
            <surname>Bougueleret</surname>
            <given-names>Lydie</given-names>
          </name>
          <name>
            <surname>Xenarios</surname>
            <given-names>Ioannis</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>Christoph</given-names>
          </name>
        </person-group>
        <article-title>Rhea—a manually curated resource of biochemical reactions</article-title>
        <source>Nucleic Acids Research</source>
        <year>2011</year>
        <volume>40</volume>
        <issue>D1</issue>
        <fpage>D754</fpage>
        <lpage>D760</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkr1126</pub-id>
        <?supplied-pmid 22135291?>
        <pub-id pub-id-type="pmid">22135291</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kanehisa</surname>
            <given-names>M.</given-names>
          </name>
        </person-group>
        <article-title>KEGG: Kyoto Encyclopedia of Genes and Genomes</article-title>
        <source>Nucleic Acids Research</source>
        <year>2000</year>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>27</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.27</pub-id>
        <?supplied-pmid 10592173?>
        <pub-id pub-id-type="pmid">10592173</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">RDKit: open-source cheminformatics, <ext-link ext-link-type="uri" xlink:href="http://www.rdkit.org">http://www.rdkit.org</ext-link>, Retrieved November 28, 2018.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="https://www.anaconda.com/">https://www.anaconda.com/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Hagberg A., Chult DS, and Swart P. Exploring network structure, dynamics, and function using NetworkX. <italic>Proc. 7th Python Sci. Conf. (SciPy 2008), Pasadena, California, United States</italic>. 2008;11–15.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="https://cairographics.org/pycairo/">https://cairographics.org/pycairo/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">
        <ext-link ext-link-type="uri" xlink:href="https://cairosvg.org">https://cairosvg.org</ext-link>
      </mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">MDL Information Systems, CTFile formats, <ext-link ext-link-type="uri" xlink:href="http://www.daylight.com/meetings/mug05/Kappler/ctfile.pdf">http://www.daylight.com/meetings/mug05/Kappler/ctfile.pdf</ext-link>, 2003. Retrieved November 28, 2018.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>SMILES, a chemical language and information system. 1. Introduction to methodology and encoding rules</article-title>
        <source>Journal of Chemical Information and Computer Sciences</source>
        <year>1988</year>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>31</fpage>
        <lpage>36</lpage>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Heller S, McNaught A, Stein S, Tchekhovskoi D, Pletnev I. InChI - the worldwide chemical structure identifier standard. <italic>Journal of Cheminformatics</italic>. 2013;5(1):7.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Fortin FA, Rainville FMD, Gardner MA, Parizeau M, Gagné C. DEAP: evolutionary algorithms made easy. <italic>J Mach Learn Res</italic>. 2012;13:2171–5.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rogers</surname>
            <given-names>David</given-names>
          </name>
          <name>
            <surname>Hahn</surname>
            <given-names>Mathew</given-names>
          </name>
        </person-group>
        <article-title>Extended-Connectivity Fingerprints</article-title>
        <source>Journal of Chemical Information and Modeling</source>
        <year>2010</year>
        <volume>50</volume>
        <issue>5</issue>
        <fpage>742</fpage>
        <lpage>754</lpage>
        <pub-id pub-id-type="doi">10.1021/ci100050t</pub-id>
        <?supplied-pmid 20426451?>
        <pub-id pub-id-type="pmid">20426451</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

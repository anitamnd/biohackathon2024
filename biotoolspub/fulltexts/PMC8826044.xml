<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8826044</article-id>
    <article-id pub-id-type="pmid">34878104</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btab828</article-id>
    <article-id pub-id-type="publisher-id">btab828</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CNApy: a CellNetAnalyzer GUI in Python for analyzing and designing metabolic networks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5812-6963</contrib-id>
        <name>
          <surname>Thiele</surname>
          <given-names>Sven</given-names>
        </name>
        <aff><institution>Analysis and Redesign of Biological Networks, Max Planck Institute for Dynamics of Complex Technical Systems</institution>, Magdeburg 39106, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>von Kamp</surname>
          <given-names>Axel</given-names>
        </name>
        <aff><institution>Analysis and Redesign of Biological Networks, Max Planck Institute for Dynamics of Complex Technical Systems</institution>, Magdeburg 39106, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bekiaris</surname>
          <given-names>Pavlos Stephanos</given-names>
        </name>
        <aff><institution>Analysis and Redesign of Biological Networks, Max Planck Institute for Dynamics of Complex Technical Systems</institution>, Magdeburg 39106, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schneider</surname>
          <given-names>Philipp</given-names>
        </name>
        <aff><institution>Analysis and Redesign of Biological Networks, Max Planck Institute for Dynamics of Complex Technical Systems</institution>, Magdeburg 39106, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-2563-7561</contrib-id>
        <name>
          <surname>Klamt</surname>
          <given-names>Steffen</given-names>
        </name>
        <xref rid="btab828-cor1" ref-type="corresp"/>
        <aff><institution>Analysis and Redesign of Biological Networks, Max Planck Institute for Dynamics of Complex Technical Systems</institution>, Magdeburg 39106, <country country="DE">Germany</country></aff>
        <!--klamt@mpi-magdeburg.mpg.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btab828-cor1">To whom correspondence should be addressed. <email>klamt@mpi-magdeburg.mpg.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>3</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-12-08">
      <day>08</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>08</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <volume>38</volume>
    <issue>5</issue>
    <fpage>1467</fpage>
    <lpage>1469</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>6</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>30</day>
        <month>11</month>
        <year>2021</year>
      </date>
      <date date-type="editorial-decision">
        <day>01</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>02</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="corrected-typeset">
        <day>18</day>
        <month>12</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btab828.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>Constraint-based reconstruction and analysis (COBRA) is a widely used modeling framework for analyzing and designing metabolic networks. Here, we present CNApy, an open-source cross-platform desktop application written in Python, which offers a state-of-the-art graphical front-end for the intuitive analysis of metabolic networks with COBRA methods. While the basic look-and-feel of CNApy is similar to the user interface of the MATLAB toolbox CellNetAnalyzer, it provides various enhanced features by using components of the powerful Qt library. CNApy supports a number of standard and advanced COBRA techniques and further functionalities can be easily embedded in its GUI facilitating modular extension in the future.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>CNApy can be installed via conda and its source code is freely available at <ext-link xlink:href="https://github.com/cnapy-org/CNApy" ext-link-type="uri">https://github.com/cnapy-org/CNApy</ext-link> under the Apache 2 license.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Federal Ministry of Education and Research (de.NBI partner project</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FKZ: 031L104B</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>European Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/100010663</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>721176</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Constraint-based reconstruction and analysis (COBRA) has become a powerful and widely used modeling framework for analyzing and redesigning metabolic networks (<xref rid="btab828-B1" ref-type="bibr">Bordbar <italic toggle="yes">et al.</italic>, 2014</xref>). Several software packages in different environments have been developed to support COBRA studies. These include command line-based tools, such as the MATLAB-based COBRA toolbox (<xref rid="btab828-B4" ref-type="bibr">Heirendt <italic toggle="yes">et al.</italic>, 2019</xref>) or the Python packages COBRApy (<xref rid="btab828-B3" ref-type="bibr">Ebrahim <italic toggle="yes">et al.</italic>, 2013</xref>) and ReFramed (<ext-link xlink:href="https://github.com/cdanielmachado/reframed" ext-link-type="uri">https://github.com/cdanielmachado/reframed</ext-link>), as well as software with graphical user interface (GUI), e.g. OptFlux (<xref rid="btab828-B10" ref-type="bibr">Rocha <italic toggle="yes">et al.</italic>, 2010</xref>), implemented in Java, or the web-based platform DD-DeCaf (<ext-link xlink:href="http://dd-decaf.eu/" ext-link-type="uri">http://dd-decaf.eu/</ext-link>). Various constraint-based analysis techniques are also provided by the MATLAB toolbox <italic toggle="yes">CellNetAnalyzer</italic> (CNA) (<xref rid="btab828-B7" ref-type="bibr">Klamt <italic toggle="yes">et al.</italic>, 2007</xref>; <xref rid="btab828-B12" ref-type="bibr">von Kamp <italic toggle="yes">et al.</italic>, 2017</xref>), where these methods can be accessed within a GUI (via interactive network maps) or from command line (via API functions). The interactive network maps are a characteristic feature of CNA and support typical use cases of COBRA-based analyses within network visualizations. An example of such a use case is a data input (e.g. measured metabolic fluxes), followed by a computation (e.g. growth rate maximization) and the display of the resulting metabolic flux distribution in the maps.</p>
    <p>To overcome the dependency on proprietary software and to enable the integration of more advanced GUI features, we developed the Python package CNApy, which is presented herein. CNApy adopts CNAâs basic concept of interactive network maps but extends it with various enhanced features for an interactive analysis of COBRA models and allows the connection to the universe of Python-based packages and modules.</p>
  </sec>
  <sec>
    <title>2 Implementation and features</title>
    <sec>
      <title>2.1 Architecture of CNApy</title>
      <p>CNApy is a cross-platform desktop application written in Python that provides a state-of-the-art graphical front-end for the intuitive analysis of metabolic models with COBRA methods. The metabolic model is internally part of an instance of a CNApy project class, which also contains metadata, e.g. the associated network maps. The metabolic model can be built from scratch within the GUI or be imported from a Systems Biology Markup Language (SBML) file (<xref rid="btab828-B5" ref-type="bibr">Keating <italic toggle="yes">et al.</italic>, 2020</xref>). Import/export of metabolic models in SBML format uses functionalities of the COBRApy package (<xref rid="btab828-B3" ref-type="bibr">Ebrahim <italic toggle="yes">et al.</italic>, 2013</xref>) and the models are internally represented as COBRApy model objects. This also allows the direct use of standard COBRA analysis methods [such as flux balance analysis (FBA), flux variability analysis (FVA) etc.] provided by COBRApy. Further analyses, such as computation of elementary flux modes (EFM) and elementary flux vectors (EFV) (<xref rid="btab828-B8" ref-type="bibr">Klamt <italic toggle="yes">et al.</italic>, 2017</xref>) or of minimal cut sets (MCS) (<xref rid="btab828-B11" ref-type="bibr">Schneider <italic toggle="yes">et al.</italic>, 2020</xref>), are directly supported in CNApy by newly developed custom stand-alone Python packages (these can also be found on <ext-link xlink:href="https://github.com/cnapy-org" ext-link-type="uri">https://github.com/cnapy-org</ext-link>). Certain advanced features of EFM, EFV and MCS computation currently require functions of the original CNA toolbox. These functions can be accessed (on the fly) through a MATLAB or, as an open-source alternative, Octave bridge. The results of these computations are reported to CNApy, where the project is updated and results are displayed in the user interface. The same approach is currently also used for yield optimization (which is more complicated than classical FBA) (<xref rid="btab828-B9" ref-type="bibr">Klamt <italic toggle="yes">et al.</italic>, 2018</xref>). The MATLAB/Octave bridge could also be employed to perform specific calculations with other packages, such as the COBRA toolbox. However, outsourcing of advanced calculations will become obsolete when modules for the respective algorithms become available in Python.</p>
      <p>Regarding the graphical front-end, CNApy implements a ModelâViewâController (MVC) architecture. The MVC model is realized in the form of an application state class. This class includes the data of the currently loaded project as well as data for the general program settings and user interface features. The view and the controller make use of objects (widgets) of the powerful Qt library (<ext-link xlink:href="https://www.qt.io/" ext-link-type="uri">https://www.qt.io/</ext-link>). These objects include maps, lists, diagrams etc. and are integrated in a single application window. The advanced cross-platform UI toolkit Qt is accessed by its Pyside2 binding for Python (<ext-link xlink:href="https://pypi.org/project/PySide2/" ext-link-type="uri">https://pypi.org/project/PySide2/</ext-link>). In contrast to CNA written in MATLAB, Qt allows the use of network graphics in scalable vector graphics format enabling an improved visualization of (and zooming in) metabolic network maps. As in CNA, the metabolic maps must be provided or generated by the user, e.g. by using available pathway maps from web resources (such as the BioCyc or KEGG database) or by drawing metabolic maps using general drawing programs (e.g. Inkscape) or specialized tools for metabolic networks, such as Escher (<xref rid="btab828-B6" ref-type="bibr">King <italic toggle="yes">et al.</italic>, 2015</xref>) or OMIX (<xref rid="btab828-B2" ref-type="bibr">Droste <italic toggle="yes">et al.</italic>, 2013</xref>). However, GUI-based model analysis is also possible and useful without any network visualization.</p>
    </sec>
    <sec>
      <title>2.2 Key features of CNApy</title>
      <p>CNApy supports metabolic network analysis with various standard and advanced COBRA methods including FBA, FVA, parsimonious FBA, phase plane analysis, yield optimization and computation of EFM, EFV and MCS (as mentioned above, partially via the MATLAB/Octave engine connecting CNApy with CNA). While many improvements over the original CNA arise from the usage of a modern UI toolkit, CNApy also offers smoother workflows. For example, the setup, import/export and editing of flux scenarios has been simplified and an edit history allows one to undo/redo changes in a scenario. CNApy projects can now be saved in a self-contained project file (*.cna) that includes graphics, the metabolic (SBML) model and other metadata. This makes it easier to copy and share CNApy projects. Additionally, it is now possible to import and export the coordinates of reaction boxes in a map, which allows reuse of maps and text coordinates in different projects. Further, CNApy facilitates an intuitive exploration and traversing of the network model, e.g. by jumping from a reaction to its associated metabolites and from a metabolite to its associated reactions. With this feature, and since calculation results (fluxes) are also displayed in the reaction list (see <xref rid="btab828-F1" ref-type="fig">Fig.Â 1</xref>, right side), efficient model inspection and analysis is possible even if a network visualization is not available. Finally, CNApy integrates a Jupyter python console that allows the user to directly interact with the application from command line. Several example projects of CNApy (including genome-scale and core models of <italic toggle="yes">Escherichia</italic>â<italic toggle="yes">coli</italic>) are provided in a project repository at <ext-link xlink:href="https://github.com/cnapy-org/CNApy-projects" ext-link-type="uri">https://github.com/cnapy-org/CNApy-projects</ext-link>.</p>
      <fig position="float" id="btab828-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>Screenshot of CNApy </p>
        </caption>
        <graphic xlink:href="btab828f1" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>3 Conclusion</title>
    <p>CNApy is a new stand-alone desktop application with a powerful and user-friendly graphical front-end for metabolic network analysis and it is the first of its kind developed in Python. CNApy provides several unique GUI features including integrated model navigation and editing. It already supports a number of standard and advanced COBRA techniques, but other routines and new algorithms can easily be embedded in its GUI facilitating modular extension of the toolbox in the future. CNApy is an open-source project and contributions are encouraged on GitHub (<ext-link xlink:href="https://github.com/cnapy-org" ext-link-type="uri">https://github.com/cnapy-org</ext-link>).</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the German Federal Ministry of Education and Research (de.NBI partner project âModSimâ (FKZ: 031L104B)]; and by the European Research Council (721176).</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared. </p>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btab828-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bordbar</surname><given-names>A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2014</year>) <article-title>Constraint-based models predict metabolic and associated cellular functions</article-title>. <source>Nat. Rev. Genet</source>., <volume>15</volume>, <fpage>107</fpage>â<lpage>120</lpage>.<pub-id pub-id-type="pmid">24430943</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Droste</surname><given-names>P.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2013</year>) <article-title>Omixâa visualization tool for metabolic networks with highest usability and customizability in focus</article-title>. <source>Chem. Ing. Tech</source>., <volume>85</volume>, <fpage>849</fpage>â<lpage>862</lpage>.</mixed-citation>
    </ref>
    <ref id="btab828-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ebrahim</surname><given-names>A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2013</year>) <article-title>COBRApy: COnstraints-Based Reconstruction and Analysis for Python</article-title>. <source>BMC Syst. Biol</source>., <volume>7</volume>, <fpage>74</fpage>.<pub-id pub-id-type="pmid">23927696</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heirendt</surname><given-names>L.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2019</year>) <article-title>Creation and analysis of biochemical constraint-based models: the COBRA Toolbox v3.0</article-title>. <source>Nat. Protoc</source>., <volume>14</volume>, <fpage>639</fpage>â<lpage>702</lpage>.<pub-id pub-id-type="pmid">30787451</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keating</surname><given-names>S.M.</given-names></string-name></person-group> Â <etal>et al</etal>; SBML Level 3 Community members. (<year>2020</year>) <article-title>SBML Level 3: an extensible format for the exchange and reuse of biological models</article-title>. <source>Mol. Syst. Biol</source>., <volume>16</volume>, <fpage>e9110</fpage>.<pub-id pub-id-type="pmid">32845085</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>King</surname><given-names>Z.A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2015</year>) <article-title>Escher: a web application for building, sharing, and embedding data-rich visualizations of biological pathways</article-title>. <source>PLoS Comput. Biol</source>., <volume>11</volume>, <fpage>e1004321</fpage>.<pub-id pub-id-type="pmid">26313928</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2007</year>) <article-title>Structural and functional analysis of cellular networks with CellNetAnalyzer</article-title>. <source>BMC Syst. Biol</source>., <volume>1</volume>, <fpage>2</fpage>.<pub-id pub-id-type="pmid">17408509</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2017</year>) <article-title>From elementary flux modes to elementary flux vectors: metabolic pathway analysis with arbitrary linear flux constraints</article-title>. <source>PLoS Comput. Biol</source>., <volume>13</volume>, <fpage>e1005409</fpage>.<pub-id pub-id-type="pmid">28406903</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2018</year>) <article-title>A mathematical framework for yield (vs. rate) optimization in constraint-based modeling and applications in metabolic engineering</article-title>. <source>Metab. Eng</source>., <volume>47</volume>, <fpage>153</fpage>â<lpage>169</lpage>.<pub-id pub-id-type="pmid">29427605</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rocha</surname><given-names>I.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2010</year>) <article-title>OptFlux: an open-source software platform for in silico metabolic engineering</article-title>. <source>BMC Syst. Biol</source>., <volume>4</volume>, <fpage>45</fpage>.<pub-id pub-id-type="pmid">20403172</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schneider</surname><given-names>P.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2020</year>) <article-title>An extended and generalized framework for the calculation of metabolic intervention strategies based on minimal cut sets</article-title>. <source>PLoS Comput. Biol</source>., <volume>16</volume>, <fpage>e1008110</fpage>.<pub-id pub-id-type="pmid">32716928</pub-id></mixed-citation>
    </ref>
    <ref id="btab828-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>von Kamp</surname><given-names>A.</given-names></string-name></person-group> Â <etal>et al</etal> (<year>2017</year>) <article-title>Use of CellNetAnalyzer in biotechnology and metabolic engineering</article-title>. <source>J. Biotechnol</source>., <volume>261</volume>, <fpage>221</fpage>â<lpage>228</lpage>.<pub-id pub-id-type="pmid">28499817</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

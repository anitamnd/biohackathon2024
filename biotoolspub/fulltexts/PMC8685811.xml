<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8685811</article-id>
    <article-id pub-id-type="publisher-id">4519</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04519-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyKVFinder: an efficient and integrable Python package for biomolecular cavity detection and characterization in data science</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Guerra</surname>
          <given-names>João Victor da Silva</given-names>
        </name>
        <address>
          <email>joao.guerra@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ribeiro-Filho</surname>
          <given-names>Helder Veras</given-names>
        </name>
        <address>
          <email>helder.ribeiro@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jara</surname>
          <given-names>Gabriel Ernesto</given-names>
        </name>
        <address>
          <email>gabriel.jara@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bortot</surname>
          <given-names>Leandro Oliveira</given-names>
        </name>
        <address>
          <email>leandro.bortot@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pereira</surname>
          <given-names>José Geraldo de Carvalho</given-names>
        </name>
        <address>
          <email>jose.pereira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1287-8019</contrib-id>
        <name>
          <surname>Lopes-de-Oliveira</surname>
          <given-names>Paulo Sérgio</given-names>
        </name>
        <address>
          <email>paulo.oliveira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.509794.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0445 080X</institution-id><institution>Brazilian Center for Research in Energy and Materials (CNPEM), </institution><institution>Brazilian Biosciences National Laboratory (LNBio), </institution></institution-wrap>R. Giuseppe Máximo Scolfaro, 10000 - Bosque das Palmeiras, Campinas, SP 13083-100 Brazil </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.411087.b</institution-id><institution-id institution-id-type="ISNI">0000 0001 0723 2494</institution-id><institution>Graduate Program in Pharmaceutical Sciences, Faculty of Pharmaceutical Sciences, </institution><institution>University of Campinas, </institution></institution-wrap>Campinas, SP Brazil </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>607</elocation-id>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>12</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Biomolecular interactions that modulate biological processes occur mainly in cavities throughout the surface of biomolecular structures. In the data science era, structural biology has benefited from the increasing availability of biostructural data due to advances in structural determination and computational methods. In this scenario, data-intensive cavity analysis demands efficient scripting routines built on easily manipulated data structures. To fulfill this need, we developed pyKVFinder, a Python package to detect and characterize cavities in biomolecular structures for data science and automated pipelines.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">pyKVFinder efficiently detects cavities in biomolecular structures and computes their volume, area, depth and hydropathy, storing these cavity properties in NumPy arrays. Benefited from Python ecosystem interoperability and data structures, pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, machine learning and 3D visualization in automated workflows. As proof of pyKVFinder’s capabilities, we successfully identified and compared ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins with pyKVFinder, showing its integrability with data science packages such as matplotlib, NGL Viewer, SciPy and Jupyter notebook.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">We introduce an efficient, highly versatile and easily integrable software for detecting and characterizing biomolecular cavities in data science applications and automated protocols. pyKVFinder facilitates biostructural data analysis with scripting routines in the Python ecosystem and can be building blocks for data science and drug design applications.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-021-04519-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Cavity detection</kwd>
      <kwd>Cavity characterization</kwd>
      <kwd>NumPy</kwd>
      <kwd>Python</kwd>
      <kwd>Data structure</kwd>
      <kwd>Data science</kwd>
      <kwd>Automated pipelines</kwd>
      <kwd>Molecular dynamics</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001807</institution-id>
            <institution>Fundação de Amparo à Pesquisa do Estado de São Paulo</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018/00629-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>Paulo Sérgio</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003593</institution-id>
            <institution>Conselho Nacional de Desenvolvimento Científico e Tecnológico</institution>
          </institution-wrap>
        </funding-source>
        <award-id>350244/2020-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Jara</surname>
            <given-names>Gabriel Ernesto</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par19">At present, we are going through the era of data science and the computational and structural biology fields have hugely benefited from the growing availability of biostructural data, as pointed out by [<xref ref-type="bibr" rid="CR1">1</xref>]: “Structural biology meets data science”. Advances in X-ray crystallography and electron microscopy techniques have expanded the determination of novel structures [<xref ref-type="bibr" rid="CR2">2</xref>]. In the meantime, advances in computational resources have driven the use of in silico methods to simulate the dynamics of biomolecules and carried out the implementation of artificial intelligence to model biomolecular structures [<xref ref-type="bibr" rid="CR3">3</xref>]. Together, all of this structural data provides fertile ground for data interpretation through data science or automated analysis frameworks, but data-intensive analysis asks for efficient and integrable scripting routines with an easily manipulated data structure.</p>
    <p id="Par20">In this scenario, we developed pyKVFinder, an open-source python package for cavity detection and characterization abstracted into multidimensional arrays. In proteins or other macromolecules, solvent-exposed clefts or buried cavities play a key role in ligand binding, which can ultimately regulate biological function of the macromolecule [<xref ref-type="bibr" rid="CR4">4</xref>]. For this reason, the identification and characterization of ligand-binding sites are the basis of rational structure-based drug discovery and design [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>]. pyKVFinder adopts the original geometrical grid-and-sphere-based detection method as implemented in KVFinder [<xref ref-type="bibr" rid="CR7">7</xref>], which has been improved in the latest parallel version, parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Detected cavities in parKVFinder, as in many other well-known programs, such as CavVis [<xref ref-type="bibr" rid="CR9">9</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], ConCavity [<xref ref-type="bibr" rid="CR12">12</xref>], MSpocket [<xref ref-type="bibr" rid="CR13">13</xref>] and POVME 3.0 [<xref ref-type="bibr" rid="CR14">14</xref>], are human-readable and easily displayed in molecular visualization programs, but are not properly structured to be directly scripted into automated pipelines or data science frameworks. Programming languages are constantly evolving in the data science field, with Python being one of the most popular in the community [<xref ref-type="bibr" rid="CR15">15</xref>]. However, only a few initiatives have been launched to make cavity detection programs easier to integrate into data science protocols. For instance, Cambridge Crystallographic Data Centre has licensed commercial software suites that use a Python API to integrate its structural database with workflows and third-party applications [<xref ref-type="bibr" rid="CR16">16</xref>], and one of its API modules is aimed at detecting ligand-binding cavities using the LIGSITE algorithm [<xref ref-type="bibr" rid="CR17">17</xref>]. As an open-source initiative, Biobb_vs is a Python package designed to detect and analyze cavities in automated workflows. Biobb_vs is part of BioExcel Building Blocks [<xref ref-type="bibr" rid="CR18">18</xref>] and uses fpocket to detect cavities in virtual screening pipelines. In this case, despite the interoperability achieved, the workflows depend on handling data files generated by fpocket.</p>
    <p id="Par21">To fulfill this need, pyKVFinder is wrapped into Python and, using Python’s well-established data structure (e. g., NumPy array), benefits from the language ecosystem interoperability. pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, statistical analysis, and tridimensional visualization. Moreover, users can explore the functionality of pyKVFinder step-by-step using interactive interfaces, such as IPython/Jupyter notebooks. As mentioned above, one of pyKVFinder’s main contributions in data science workflows is to translate the detected cavities from tridimensional coordinates of cavity points to NumPy arrays, a data structure that allows for a wide diversity of scientific computation and efficient storage and access to N-dimensional arrays (ndarrays), also called tensors [<xref ref-type="bibr" rid="CR19">19</xref>]. Ndarrays also provide efficient ways of handling data for mathematical operations and are the popular choice of input data type for machine learning Python libraries such as scikit-learn [<xref ref-type="bibr" rid="CR20">20</xref>].</p>
    <p id="Par22">Besides conventional cavity properties such as volume and area, which are stored as Python dictionaries, pyKVFinder computes cavity depth and hydropathy. Similar to cavity points, these spatial and physicochemical properties are stored as Python ndarrays and can be visualized using Python molecular visualization widgets. Thus, pyKVFinder provides a versatile way to detect and characterize biomolecular cavities and integrate this information into data science or automated workflows.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par23">Python-C parallel KVFinder (pyKVFinder) applies a Simplified Wrapper and Interface Generator (SWIG; <ext-link ext-link-type="uri" xlink:href="http://www.swig.org/">http://www.swig.org/</ext-link>) to extend grid operations written in C to Python, a high-level programming language. pyKVFinder can be easily installed with the pip package management system. In pyKVFinder, the target biomolecule is inserted into a regular 3D grid, which is stored as an ndarray, considering the van der Waals radii of the atoms. To detect cavities, pyKVFinder uses a dual-probe algorithm that scans the biomolecular structure, as described in [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. In summary, a small probe, dubbed Probe In, and a larger probe, dubbed Probe Out, translate over the grid points, defining two molecular surfaces with different accessibility. Biomolecular cavities are defined as the non-overlapped regions between the molecular surfaces. On each detected cavity, pyKVFinder may perform spatial, depth, hydropathy and constitutional characterizations. In this workflow, C routines undergo multithreaded parallelization to speed up cavity detection and characterization, with the OpenMP API creating a user-defined number of parallel threads, where grid chunks are distributed among these threads to perform independent operations.</p>
    <sec id="Sec3">
      <title>Python package</title>
      <p id="Par24">pyKVFinder can be imported as a package in the Python environment and users can decide to run the full cavity detection and characterization workflow through the <italic>run_workflow</italic> function or run pyKVFinder functions in a stepwise fashion. At the latter, users can integrate pyKVFinder functions into third-party Python packages and benefit from interactive IPython/Jupyter notebooks. By running pyKVFinder in Python environment, users can visualize the detected cavities through the Python NGL Viewer widget [<xref ref-type="bibr" rid="CR21">21</xref>]. Still, the full workflow was also coded as a command-line interface. Either way, users have access to a full set of customizable parameters to detect and characterize biomolecular cavities. A schematic diagram of cavity detection and characterization workflow is described in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Diagram of cavity detection and characterization workflow using pyKVFinder package. The flowchart illustrates function calls and their dependencies for performing cavity detection and characterization with pyKVFinder package</p></caption><graphic xlink:href="12859_2021_4519_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par25">In the cavity detection and characterization workflow, <italic>read_vdw</italic> function reads a customizable van der Waals (vdW) radii file (<italic>.dat</italic> extension; default <italic>vdw.dat</italic>) into a nested Python dictionary, which is first indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.), and then indexed by the atom name (e. g., C, N, O, CA, etc.) to access its respective radius value. The vdW radii file defines the radius values for each atom by residue and when not defined, uses a generic value based on the atom type. The built-in file (<italic>vdw.dat</italic>) applies the vdW radii of the Amber ff99 force field [<xref ref-type="bibr" rid="CR22">22</xref>]. Afterwards, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a target PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension), respectively. The atomic data is stored in an ndarray with residue number, chain identifier, residue name, atom name, xyz coordinates and radius per atom.</p>
      <p id="Par26">To perform the cavity detection on the whole structure, the 3D grid is defined based on the target biomolecule coordinates and the user-defined parameters: grid spacing and Probe Out diameter. Thus, the grid coordinates are extracted from the atomic data ndarray, using <italic>get_vertices</italic> function that defines the grid origin and XYZ axis. The first vertex (p1) is the minimum xyz coordinates of the atomic data. The second (p2), third (p3) and fourth (p4) vertices represent the maximum coordinate along the X, Y and Z axes, respectively. Given these four vertices, the original coordinate system is transformed in the <italic>detect</italic> function, using translation and rotation, into a new coordinate system with P1 as its origin. Also, for internal calculations, the sum of the grid spacing and the Probe Out size is padded in each direction of the 3D grid. With user-defined parameters and atomic coordinates, the <italic>detect</italic> function creates and fills the 3D grids with Probe In and Probe Out probes, and compares these grids to define the biomolecular cavities, which are returned in an ndarray. In this ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), each element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (− 1).<fig id="Fig2"><label>Fig. 2</label><caption><p>Representative view of detected cavities in the pyKVFinder data structure. Based on a 3D grid (left figure), pyKVFinder detects cavities in biomolecules and returns an ndarray with dimensions (m, n, o) (right figure). Each ndarray element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (-1). Cavity properties such as depth and hydropathy are also stored in the same data structure, with ndarray elements corresponding to the property value</p></caption><graphic xlink:href="12859_2021_4519_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">Instead of performing the cavity detection on the whole structure, the search space can be set to a custom search box, called box adjustment mode. This mode is defined based on a TOML-formatted configuration file (<italic>.toml</italic> extension; Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A1), which can explicitly define the vertices coordinates or pass a list of residues of the target biomolecule to be used as reference instead of the whole structure. The box can also be drawn using parKVFinder PyMOL plugin and its coordinates can be extracted from parKVFinder parameters file. Thus, the <italic>get_vertices_from_file</italic> function loads a box configuration file and atomic data from <italic>read_pdb</italic> or <italic>read_xyz</italic> function, which returns the grid coordinates (p1, p2, p3 and p4) and selects the atoms inside the custom 3D grid with their respective atomic data. Hence, these parameters are passed to <italic>detect</italic> function, together with <italic>box_adjustment</italic> flag, to perform cavity detection on a custom 3D grid.</p>
      <p id="Par28">Either way, whole structure mode or box adjustment mode, another space segmentation method, called ligand adjustment mode, can be applied to constrain the search space around a target ligand, defined by a PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension). For this mode, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a ligand PDB or XYZ file and returns the ligand atomic coordinates with their respective radius that must be passed to <italic>detect</italic> function to further restrict the search space within a radius of the target ligand.</p>
    </sec>
    <sec id="Sec4">
      <title>Cavity characterization</title>
      <p id="Par29">With the ndarray of detected cavities, pyKVFinder package may perform four characterization procedures, i.e., spatial, constitutional, depth and hydropathy characterizations. The spatial characterization, using <italic>spatial</italic> function, defines the surface points in an ndarray, and estimates the volume and area of the detected cavities, following the methodology proposed in [<xref ref-type="bibr" rid="CR8">8</xref>]. The constitutional characterization, using <italic>constitutional</italic> function, defines the interface residues that surround the detected cavities, checking if the atoms of the residues are within a radius, which is the sum of the Probe In size and the atom radius. Alternatively, the <italic>constitutional</italic> function can ignore backbone contacts by enabling <italic>ignore_backbone</italic> flag. This function stores the interface residues in a Python dictionary. Using the interface residues, the <italic>calculate_frequencies</italic> function calculates the occurrence of each residue and classes of residues per cavity. The classes of amino acid residues [<xref ref-type="bibr" rid="CR23">23</xref>] are aliphatic apolar (R1), aromatic (R2), polar uncharged (R3), negatively charged (R4), positively charged (R5) and non-standard (RX) (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table A1).</p>
      <p id="Par30">The depth characterization identifies the degree of burial of the binding site. This characterization applies <italic>depth</italic> function to identify the cavity-bulk boundary by applying a spatial filter, which defines a boundary point as cavity points where at least one direct neighbor is a bulk point, marking it with the negative of the cavity integer (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). Subsequently, the depth of each cavity point is heuristically estimated by the shortest Euclidean distance between the cavity point and its respective boundary points (Eq. <xref rid="Equ1" ref-type="">1</xref>). Each cavity point is distributed among the user-defined number of threads to perform this chunk of distance calculations (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). With the depth of all cavity points calculated and stored as an ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), the maximum and average depths are calculated for each detected cavity and returned as Python dictionaries.<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }} = \mathop {min}\limits_{j} \left[ {d\left( {p_{i} ,p_{j} } \right)} \right] = \mathop {min}\limits_{j} \left[ {\sqrt {\left( {p_{{i_{x} }} - p_{{j_{x} }} } \right)^{2} + \left( {p_{{i_{y} }} - p_{{j_{v} }} } \right)^{2} + \left( {p_{{i_{z} }} - p_{{j_{z} }} } \right)^{2} } } \right],$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:msqrt><mml:mrow><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="12859_2021_4519_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }}$$\end{document}</tex-math><mml:math id="M4"><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq1.gif"/></alternatives></inline-formula> is the depth of the cavity point i, <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\left( {p_{i} ,p_{j} } \right)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq2.gif"/></alternatives></inline-formula> is the Euclidean distance between points i and j, <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{i}$$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq3.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity point i, <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{j}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq4.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity-bulk boundary point j.</p>
      <p id="Par31">The hydropathy characterization extracts the water attractiveness of the interface residues surrounding the binding site. This characterization uses <italic>hydropathy</italic> function at surface points detected in spatial characterization to map a target hydrophobicity scale on them. Firstly, a customizable TOML-formatted hydrophobicity scale file (<italic>.toml</italic> extension) is loaded into a Python dictionary, which is indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.) to access the respective hydrophobicity value. With the dictionary loaded, the function identifies the nearest interface residues for each surface point and projects the residue’s hydrophobicity value onto them (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Alternatively, backbone contacts may be ignored by enabling the <italic>ignore_backbone</italic> flag. Finally, with the hydrophobicity mapped on the surface and returned as an ndarray, the average hydropathy is calculated for each detected cavity and stored in a Python dictionary. The hydrophobicity scale file defines the scale name and hydrophobicity value for each residue and, when not defined, assigns zero to the missing residues (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A3). The package contains six built-in hydrophobicity scales: Eisenberg and Weiss [<xref ref-type="bibr" rid="CR24">24</xref>], Hessa and Heijne [<xref ref-type="bibr" rid="CR25">25</xref>], Kyte and Doolittle [<xref ref-type="bibr" rid="CR26">26</xref>], Moon and Fleming [<xref ref-type="bibr" rid="CR27">27</xref>], Wimley and White [<xref ref-type="bibr" rid="CR28">28</xref>] and Zhao and London [<xref ref-type="bibr" rid="CR29">29</xref>]. Benefiting from the Python environment, users can test different scales without having to perform the cavity detection step every time. A pre-released version of hydropathy characterization has been successfully applied to compare cavities of alphavirus-related proteins [<xref ref-type="bibr" rid="CR30">30</xref>].<fig id="Fig3"><label>Fig. 3</label><caption><p>Detection and characterization of ADRP substrate-binding cavity of SARS-CoV-2 and its comparison to related coronaviruses and human macroD1 and macroD2 proteins. <bold>a</bold> Three different characterizations of the apo ADRP substrate-binding cavity of SARS-CoV-2 (PDB ID: 6WEN) using pyKVFinder. The upper panel shows the detected cavity represented as gray surface and residues surrounding it as red sticks. The cavity area and volume are displayed. The middle panel presents the same cavity colored by depth, while the bottom panel shows the cavity colored by hydropathy using Eisenberg and Weiss scale. <bold>b</bold> Conservation analysis of the ADP-ribose binding site in ADRP domain of SARS-CoV-2 (PDB ID: 6WEN, chain A), SARS-CoV (PDB ID: 2ACF, chain B), MERS-CoV (PDB ID: 5HIH, chain A), NL63 (PDB ID: 2VRI, chain A), HCoV-229E (PDB ID: 3EJG, chain A), FCoV (PDB ID: 3ETI, chain B) and human macrodomain proteins macroD1 (PDB ID: 2X47, chain A) and macroD2 (PDB ID: 6Y73, chain D) from human. These protein domains were selected using Dali and choosing homologs in apo form. The structures were realigned using MUSTANG algorithm [<xref ref-type="bibr" rid="CR39">39</xref>] from YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]. The figure presents cavity points that were detected in at least two structures and the points are colored by conservation percentage. <bold>c</bold> Hydropathy profile of the same compared cavities collected from pyKVFinder ndarrays. <bold>d</bold> Hierarchical clustering dendrogram of the frequency of residues surrounding the compared cavities. The correlation metric was used to assess the similarity and the complete method was chosen as linkage method. All the images and graphics were created inside a Jupyter notebook. To create images of tridimensional structures, we used NGL Viewer tool and to plot graphics, we used matplotlib library</p></caption><graphic xlink:href="12859_2021_4519_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par32">The cavity detection and characterization objects, from <italic>detect</italic>, <italic>spatial</italic>, <italic>constitutional</italic>, <italic>calculate_frequencies</italic>, <italic>depth</italic>, <italic>hydropathy</italic> functions, can be stored into a <italic>pyKVFinderResults</italic> class that accumulates them in its attributes. As this data structure is filled, these attributes can be exported to files through <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods. The <italic>export</italic> method writes cavities together with their surface points to a PDB-formatted file with depth values in the B-factor column, while surface points with hydropathy values in the B-factor column are written to another PDB-formatted file. The <italic>write</italic> method saves file paths, volume, area, interface residues and their frequencies, maximum and average depth, and average hydropathy in a TOML-formatted file. The <italic>plot_frequencies</italic> method plots bar charts of frequencies per cavity in a PDF file. These three methods are also wrapped in <italic>export_all</italic> method. Although we presented the full workflow, all functions explained in this section can be applied independently in a step-by-step manner. In this scenario, the <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods have their counterparts in the <italic>export</italic>, <italic>write_results</italic> and <italic>plot_frequencies</italic> functions of pyKVFinder package, respectively. Additionally, the <italic>read_cavity</italic> function reads a cavity file (<italic>.pdb</italic> extension), written by pyKVFinder, parKVFinder or KVFinder, and a target PDB or XYZ file (<italic>.pdb</italic> or<italic>.xyz</italic> extension), and returns an ndarray with each element corresponding to the cavity space (&gt; 1), biomolecule space (0), or bulk or empty space (− 1), similar to the output of the <italic>detect</italic> function. In this way, it allows to recharacterize a previously detected cavity or characterize a cavity with manually trimmed points.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Results and discussion</title>
    <sec id="Sec6">
      <title>Usage example</title>
      <p id="Par33">To demonstrate the use of pyKVFinder and how it benefits from the Python ecosystem, we identified the substrate-binding pocket of the ADP-ribose phosphatase (ADRP) domain of SARS-CoV-2 nsp3 protein in the apo form (PDB ID: 6WEN). Still under investigation to determine its exact functions in coronavirus life cycle, the ADRP domain recognizes ADP-ribose 1″ phosphate [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>] and seems to have an important role in virulence and innate immunity regulation to infection [<xref ref-type="bibr" rid="CR33">33</xref>–<xref ref-type="bibr" rid="CR35">35</xref>]. In this regard, recent efforts have been made to characterize ADP-ribose substrate-binding pocket and evaluate this site as a putative antiviral drug target [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>].</p>
    </sec>
    <sec id="Sec7">
      <title>Visualizing detected cavities with NGL Viewer in Jupyter notebook</title>
      <p id="Par34">pyKVFinder successfully detected the ADRP substrate-binding cavity and determined traditional cavity properties such as volume, area and residues surrounding the ADP-ribose cavity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, upper panel). For instance, we used pyKVFinder <italic>calculate_frequencies</italic> and <italic>plot_frequencies</italic> functions to determine the composition of the type of residues surrounding the cavity and plotted this composition as a bar chart (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A4). In pyKVFinder, this step is performed using matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>], but users are free to analyze data and present results on their favorite graphing library. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, the ADP-ribose site forms a cleft sandwiched between ADRP α-helices and the main contacts involve residues from coil regions, which could possibly explain the pocket plasticity upon substrate binding [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>]. These results were visualized using NGL Viewer on a Jupyter notebook; alternatively, users can use another molecular visualization tool for notebooks or load results into the parKVFinder PyMOL Plugin [<xref ref-type="bibr" rid="CR8">8</xref>].<fig id="Fig4"><label>Fig. 4</label><caption><p>Performance evaluation of the benchmarking methods for detecting the ADRP substrate-binding site. <bold>a</bold> The structures of the protein (green cartoon) at frame 30 (smallest RMSD compared to the crystallographic structure) of the ADRP domain trajectory with the corresponding cavities detected (gray surfaces) by each benchmarking method. <bold>b</bold> The total volume of the cavities detected in the ADRP substrate-binding site along the 600 ns simulation. The total volume is averaged in a window of 20 frames. The red dashed line indicates the molecular surface volume of the ADP-ribose molecule that originally occupied the ADRP substrate-binding site in the crystallographic structure (PDB ID: 6W02, chain B). <bold>c</bold> Elapsed time to detect and characterize ADRP substrate-binding site. The standard workflow of pyKVFinder, as in parKVFinder, detects cavities and applies spatial and constitutional characterizations. The full workflow of pyKVFinder comprises standard workflow with depth and hydropathy characterizations</p></caption><graphic xlink:href="12859_2021_4519_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec8">
      <title>Characterizing hydropathy and depth of cavities</title>
      <p id="Par35">We also inspected the ADRP substrate-binding cavity through other two points of view: depth and hydropathy. Those physicochemical descriptions are usually essential for drug development [<xref ref-type="bibr" rid="CR36">36</xref>]. In apo form, despite being solvent-exposed, the cavity has some internal components (red color) that can reach a more central portion of the ADRP β-sheet (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, middle panel). The hydropathy analysis shows that the cavity core is most hydrophobic (yellow color), with some polar residues on the edges (blue color) that may contribute to the design of more specific ligands. Since pyKVFinder stores the properties to be colored in cavities in the B-factor column of a PDB-formatted file, users can easily change the style and color scheme in most of molecular visualization programs.</p>
    </sec>
    <sec id="Sec9">
      <title>Using NumPy operations to present conservation and matplotlib library to plot hydropathy distribution of cavities</title>
      <p id="Par36">In addition to SARS-CoV-2, the ADRP domain is also present in other related coronaviruses and has the macroD1 and macroD2 as homologous in humans. For this reason, we used pyKVFinder to detect the ADRP substrate-binding site in aligned ADRP domains from different species and compare their properties. Firstly, we applied arithmetic operations on the ndarrays of the detected cavities to determine the cavity conservation among the species. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, the ADRP cavity has a core (red points) very conserved in the analyzed species which is occupied by the diphosphate and ribose of ADP and the second ribose bound to ADP in the ADRP substrate-bound form. In turn, adenosine occupies a less conserved cavity region, which may indicate that the structure of this site in some species changes to accommodate ADP-ribose substrate. To compare the cavity hydropathy across species, we plotted a hydropathy distribution from the hydropathy ndarray using the matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>] (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, left graph). The distribution clearly shows the hydrophobic characteristic of the pocket that is mostly shared between ADRP substrate-binding pockets of coronaviruses. Interestingly, the human macroD1 and macroD2 seem to shift the distribution to a less hydrophobic profile. This finding should be better evaluated, as the differences between these homologous domains that share the same substrate can contribute to the design of specific ligands for viral ADRP domains.</p>
    </sec>
    <sec id="Sec10">
      <title>Hierarchical clustering of cavity residues using SciPy package</title>
      <p id="Par37">Finally, since pyKVFinder uses native Python dictionaries to store the residues surrounding the detected cavity, we can easily tabulate the residue frequency. With this information, we performed a hierarchical clustering, an unsupervised machine learning algorithm, using the SciPy package [<xref ref-type="bibr" rid="CR41">41</xref>], and represented clusters arrangement as a dendrogram (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, right graph). The ADRP cavity of SARS-CoV-2 grouped with that of SARS-CoV, demonstrating the high identity between these betacoronaviruses. Close to them, we can observe another betacoronavirus, MERS-CoV. On the other hand, the alphacoronaviruses NL63 and HCoV-229E and the feline FCoV are grouped together. Further away from the coronaviruses’ domains are the two human macrodomain proteins, macroD1 and D2. Despite the cavity of ADRP or macro D1/D2 sharing the same substrate, ADP-ribose, these results show that the profile of the residues surrounding these cavities follows evolutionary traces.</p>
    </sec>
    <sec id="Sec11">
      <title>Benchmarking</title>
      <p id="Par38">In addition to identifying and characterizing the ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins, we simulated ADRP domain of SARS-CoV-2 (PDB ID: 6W02, chain B) without its ligand, ADP-ribose, for 600 ns, extracting a frame at regular intervals of 1 ns (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Thus, we used pyKVFinder with its box adjustment mode to detect and estimate the volume of the ADP-ribose binding site throughout 600 frames of the ADRP domain’s trajectory. This analysis was repeated with other well-known software: POVME [<xref ref-type="bibr" rid="CR14">14</xref>], Biobb_vs [<xref ref-type="bibr" rid="CR18">18</xref>], MSPocket [<xref ref-type="bibr" rid="CR13">13</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>] and parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Biobb_vs, as mentioned in the Background section, is a Python package that allow scripting, while POVME, MSpocket, GHECOM, fpocket, GHECOM and parKVFinder are command-line interfaces. A detailed description of software parameters and versions is in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p id="Par39">All these methods successfully detected the pocket of the ADRP substrate-binding site, in which the shape and volume vary slightly during the molecular dynamics simulation (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). The shape of the detected cavities defined by pyKVFinder and parKVFinder finely adjust to the original ligand in the binding site, as well as MSPocket (Fig. <xref rid="Fig4" ref-type="fig">4</xref>a) Besides that, the volume calculated by pyKVFinder (346.8 ± 78.7 Å<sup>3</sup>) and parKVFinder (346.5 ± 79.3 Å<sup>3</sup>) is closely related to the volume of ADP-ribose (351.1 Å<sup>3</sup>; molecular surface volume estimated by YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]), the ligand that originally occupied the binding site in the crystallographic structure used in the molecular dynamics simulations (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Nevertheless, the differences in the shape and volume of detected cavities derive from the methodology employed (e.g., Voronoi tessellation, alpha spheres, and grid-and-sphere), the cavity-bulk boundary definition, and the ability to segment the space. For instance, pyKVFinder, parKVFinder and POVME can segment the search space, which trims points outside this custom space, while the other methods only explore the whole structure, which includes neighboring regions at the binding site.</p>
      <p id="Par40">Besides being able to accurately detect biomolecular cavities, current software must also perform fast detection and characterizations. Thus, we also evaluated the elapsed time to execute these benchmarking methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). pyKVFinder outperformed all analyzed methods. Even when applying the newly available characterization, depth and hydropathy, pyKVFinder's elapsed time only increased 36%, still outperforming other benchmarking methods. Further, compared to its counterpart, parKVFinder, pyKVFinder was 3.3 times faster in detecting ADRP binding site. The main reason for the performance gain is the additional possibility to parallelize routines, i. e., the insertion of atoms in the 3D grid in <italic>detect</italic> function, based on ndarrays. Hence, experienced users requiring scripting routines are encouraged to use pyKVFinder due to its improved performance, while newcomers should prioritize parKVFinder due to its simplicity of installation and execution. Further, the scalability of pyKVFinder, upon increasing number of threads, follows the same behavior presented by parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
      <p id="Par41">Despite all methods characterizing volume, each method has its own set of characterizations to be performed on the detected cavities. However, the cavities data structure is only accessible inside the Python ecosystem in pyKVFinder, which provides ndarrays and Python dictionaries. The ndarrays stores cavity points, surface points, hydropathy for each surface point and depth for each cavity point, while Python dictionaries stores volume, area, average hydropathy, maximum depth and average depth, and interface residues and their frequencies per detected cavity. Thus, users may develop new characterizations and/or analysis pipelines with these data structures.</p>
    </sec>
    <sec id="Sec12">
      <title>Future development</title>
      <p id="Par42">pyKVFinder will undergo continuous improvements and updates, according to its applications by the scientific community. In the future, pipelines will be implemented in molecular dynamics and machine learning, along with new features that are valuable to ligand-binding site characterization. Additionally, pyKVFinder aims to offload its routines to the GPU for performance enhancement in data-intensive applications.</p>
    </sec>
  </sec>
  <sec id="Sec13">
    <title>Conclusion</title>
    <p id="Par43">pyKVFinder provides an efficient and integrable Python package for cavity detection and characterization in biomolecular structures for data science and automated pipelines. In addition to fast, accurate and efficient cavity detection and characterization, pyKVFinder stores spatial and physicochemical properties in Python ndarrays, that ease scripting and data analysis. Further, pyKVFinder performance was benchmarked against well-known geometrical methods for cavity detection and characterization. Finally, we have successfully shown an application of pyKVFinder integration with matplotlib, NGL Viewer, SciPy and Jupyter notebook, that compared the ADRP substrate-binding site of SARS-CoV-2 in homologous proteins.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p id="Par44">
      <list list-type="bullet">
        <list-item>
          <p id="Par45"><bold>Project name:</bold> pyKVFinder</p>
        </list-item>
        <list-item>
          <p id="Par46">
            <bold>Project home page:</bold>
            <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>
          </p>
        </list-item>
        <list-item>
          <p id="Par47"><bold>Operating system(s):</bold> any supporting Python &gt;  = 3.7 (tested on Linux and macOS)</p>
        </list-item>
        <list-item>
          <p id="Par48"><bold>Programming language:</bold> Python, C</p>
        </list-item>
        <list-item>
          <p id="Par49"><bold>Other requirements:</bold> swig &gt;  = 4.0.1, toml &gt;  = 0.10.2, numpy &gt;  = 1.20.3, matplotlib &gt;  = 3.3.3</p>
        </list-item>
        <list-item>
          <p id="Par50"><bold>License:</bold> GNU General Public License v3.0</p>
        </list-item>
        <list-item>
          <p id="Par51"><bold>Any restrictions to use by non-academics:</bold> None.</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2021_4519_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> The Additional file 1 contains <bold>Table A1</bold>, <bold>Figures A1</bold>, <bold>A2</bold>, <bold>A3</bold> and <bold>A4</bold>, and a detailed description of the molecular dynamics simulation of ADRP domain of SARS-CoV-2 and the benchmarking procedure. <bold>Table A1</bold> reports the classes of amino acid residues. <bold>Figure A1</bold> shows examples of box configuration files. <bold>Figure A2</bold> shows the methodology of depth characterization. <bold>Figure A3</bold> shows the methodology of hydropathy characterization. <bold>Figure A4</bold> shows a bar chart of residues frequencies.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ADRP</term>
        <def>
          <p id="Par4">ADP-ribose phosphatase</p>
        </def>
      </def-item>
      <def-item>
        <term>CoV</term>
        <def>
          <p id="Par5">Coronavirus</p>
        </def>
      </def-item>
      <def-item>
        <term>MERS</term>
        <def>
          <p id="Par6">Middle East Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>ndarrays</term>
        <def>
          <p id="Par7">N-dimensional arrays</p>
        </def>
      </def-item>
      <def-item>
        <term>PDB</term>
        <def>
          <p id="Par8">Protein Data Bank</p>
        </def>
      </def-item>
      <def-item>
        <term>R1</term>
        <def>
          <p id="Par9">Aliphatic apolar</p>
        </def>
      </def-item>
      <def-item>
        <term>R2</term>
        <def>
          <p id="Par10">Aromatic</p>
        </def>
      </def-item>
      <def-item>
        <term>R3</term>
        <def>
          <p id="Par11">Polar uncharged</p>
        </def>
      </def-item>
      <def-item>
        <term>R4</term>
        <def>
          <p id="Par12">Negatively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>R5</term>
        <def>
          <p id="Par13">Positively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>RX</term>
        <def>
          <p id="Par14">Non-standard</p>
        </def>
      </def-item>
      <def-item>
        <term>SARS</term>
        <def>
          <p id="Par15">Severe Acute Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>SWIG</term>
        <def>
          <p id="Par16">Simplified Wrapper and Interface Generator</p>
        </def>
      </def-item>
      <def-item>
        <term>TOML</term>
        <def>
          <p id="Par17">Tom's Obvious, Minimal Language</p>
        </def>
      </def-item>
      <def-item>
        <term>vdW</term>
        <def>
          <p id="Par18">Van der Waals</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank the Brazilian Biosciences National Laboratory (LNBio), part of the Brazilian Center for Research in Energy and Materials (CNPEM) for accessibility to the Computational Biology Laboratory (LBC).</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>JVSG, JGCP and PSLO conceptualize and design the code package structure. JVSG implemented the code. HVRF, LOB, GEJ, and JGCP tested and performed validation checks. JVSG and HVRF wrote the manuscript. LOB, GEJ, JGCP and PSLO reviewed the manuscript and provided critical revision. PSLO supervised coding steps and decisions. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Fundação de Amparo à Pesquisa do Estado de São Paulo (FAPESP) [Grant Number 2018/00629-0], Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) [Grant Number 350244/2020-0], and Brazilian Center for Research in Energy and Materials (CNPEM). None of these funding bodies provided any direct role nor influence in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>pyKVFinder source code, documentation and tutorials are available in the Python Package Index (PyPI) repository, <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/pyKVFinder">https://pypi.org/project/pyKVFinder</ext-link>, and the GitHub repository, <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>. Documentation and tutorials are available at pyKVFinder webpage, <ext-link ext-link-type="uri" xlink:href="https://lbc-lnbio.github.io/pyKVFinder">https://lbc-lnbio.github.io/pyKVFinder</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par52">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par53">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par54">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Draizen</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>Structural biology meets data science: does anything change?</article-title>
        <source>Curr Opin Struct Biol</source>
        <year>2018</year>
        <volume>52</volume>
        <fpage>102</fpage>
        <pub-id pub-id-type="doi">10.1016/j.sbi.2018.09.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burley</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Bhikadiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bi</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Di Constanzo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein Data Bank: the single global archive for 3D macromolecular structure data</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D520</fpage>
        <lpage>D528</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1004</pub-id>
        <pub-id pub-id-type="pmid">30357364</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Adler</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction for the human proteome</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>590</fpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03828-1</pub-id>
        <pub-id pub-id-type="pmid">34293799</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Woodward</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Edelsbrunner</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Anatomy of protein pockets and cavities: measurement of binding site geometry and implications for ligand design</article-title>
        <source>Protein Sci</source>
        <year>1998</year>
        <volume>7</volume>
        <fpage>1884</fpage>
        <lpage>1897</lpage>
        <pub-id pub-id-type="doi">10.1002/pro.5560070905</pub-id>
        <?supplied-pmid 9761470?>
        <pub-id pub-id-type="pmid">9761470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sotriffer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Klebe</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Identification and mapping of small-molecule binding sites in proteins: computational tools for structure-based drug design</article-title>
        <source>Farm</source>
        <year>2002</year>
        <volume>57</volume>
        <fpage>243</fpage>
        <lpage>251</lpage>
        <pub-id pub-id-type="doi">10.1016/S0014-827X(02)01211-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henrich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Salo-Ahen</surname>
            <given-names>OMH</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>FF</given-names>
          </name>
          <name>
            <surname>Cruciani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Wade</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Computational approaches to identifying and characterizing protein binding sites for ligand design</article-title>
        <source>J Mol Recognit</source>
        <year>2009</year>
        <volume>23</volume>
        <fpage>209</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1002/jmr.984</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oliveira</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Ferraz</surname>
            <given-names>FA</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Xavier-Neto</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sobreira</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>de Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>KVFinder: steered identification of protein cavities as a PyMOL plugin</article-title>
        <source>BMC Bioinform</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>197</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-197</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>Ribeiro Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Bortot</surname>
            <given-names>LO</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>de Carvalho Pereira</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>ParKVFinder: a thread-level parallel approach in biomolecular cavity detection</article-title>
        <source>SoftwareX</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>100606</fpage>
        <pub-id pub-id-type="doi">10.1016/j.softx.2020.100606</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simões</surname>
            <given-names>TMC</given-names>
          </name>
          <name>
            <surname>Gomes</surname>
            <given-names>AJP</given-names>
          </name>
        </person-group>
        <article-title>CavVis—a field-of-view geometric algorithm for protein cavity detection</article-title>
        <source>J Chem Inf Model</source>
        <year>2019</year>
        <volume>59</volume>
        <fpage>786</fpage>
        <lpage>796</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00572</pub-id>
        <?supplied-pmid 30629446?>
        <pub-id pub-id-type="pmid">30629446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Guilloux</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Schmidtke</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tuffery</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Fpocket: an open source platform for ligand pocket detection</article-title>
        <source>BMC Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>168</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawabata</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Detection of multiscale pockets on protein surfaces using mathematical morphology</article-title>
        <source>Proteins</source>
        <year>2010</year>
        <volume>78</volume>
        <fpage>1195</fpage>
        <lpage>1211</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.22639</pub-id>
        <?supplied-pmid 19938154?>
        <pub-id pub-id-type="pmid">19938154</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Capra</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Laskowski</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Thornton</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Funkhouser</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Predicting protein ligand binding sites by combining evolutionary sequence conservation and 3D structure</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000585</pub-id>
        <?supplied-pmid 19997483?>
        <pub-id pub-id-type="pmid">19997483</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Pisabarro</surname>
            <given-names>MT</given-names>
          </name>
        </person-group>
        <article-title>MSPocket: an orientation-independent algorithm for the detection of ligand binding pockets</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>351</fpage>
        <lpage>358</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq672</pub-id>
        <?supplied-pmid 21134896?>
        <pub-id pub-id-type="pmid">21134896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wagner</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Sørensen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hensley</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Perison</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>POVME 3.0: software for mapping binding pocket flexibility</article-title>
        <source>J Chem Theory Comput</source>
        <year>2017</year>
        <volume>13</volume>
        <fpage>4584</fpage>
        <lpage>4592</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.7b00500</pub-id>
        <pub-id pub-id-type="pmid">28800393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Raschka</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Patterson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nolet</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Machine learning in Python: main developments and technology trends in data science, machine learning, and artificial intelligence</article-title>
        <source>Information</source>
        <year>2020</year>
        <volume>11</volume>
        <fpage>193</fpage>
        <pub-id pub-id-type="doi">10.3390/info11040193</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Groom</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Bruno</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Lightfoot</surname>
            <given-names>MP</given-names>
          </name>
          <name>
            <surname>Ward</surname>
            <given-names>SC</given-names>
          </name>
        </person-group>
        <article-title>The Cambridge structural database</article-title>
        <source>Acta Crystallogr Sect B Struct Sci Cryst Eng Mater</source>
        <year>2016</year>
        <volume>72</volume>
        <fpage>171</fpage>
        <lpage>179</lpage>
        <pub-id pub-id-type="doi">10.1107/S2052520616003954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hendlich</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Barnickel</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>LIGSITE: Automatic and efficient detection of potential small molecule-binding sites in proteins</article-title>
        <source>J Mol Graph Model</source>
        <year>1997</year>
        <volume>15</volume>
        <fpage>359</fpage>
        <lpage>363</lpage>
        <pub-id pub-id-type="doi">10.1016/S1093-3263(98)00002-3</pub-id>
        <pub-id pub-id-type="pmid">9704298</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andrio</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hospital</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Conejero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jordá</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Del Pino</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Codo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioExcel Building Blocks, a software library for interoperable biomolecular simulation workflows</article-title>
        <source>Sci Data</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1038/s41597-019-0177-4</pub-id>
        <?supplied-pmid 31506435?>
        <pub-id pub-id-type="pmid">31506435</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature</source>
        <year>2020</year>
        <volume>585</volume>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedregosa</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gramfort</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michel</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Thirion</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Grisel</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scikit-learn: machine learning in Python</article-title>
        <source>J Mach Learn Res</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>2825</fpage>
        <lpage>2830</lpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nguyen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Case</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>AS</given-names>
          </name>
        </person-group>
        <article-title>NGLview—interactive molecular graphics for Jupyter notebooks</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>1241</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx789</pub-id>
        <pub-id pub-id-type="pmid">29236954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cieplak</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kollman</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>How well does a restrained electrostatic potential (RESP) model perform in calculating conformational energies of organic and biological molecules?</article-title>
        <source>J Comput Chem</source>
        <year>2000</year>
        <volume>21</volume>
        <fpage>1049</fpage>
        <lpage>1074</lpage>
        <pub-id pub-id-type="doi">10.1002/1096-987X(200009)21:12&lt;1049::AID-JCC3&gt;3.0.CO;2-F</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Nelson DL, Cox MM. Lehninger principles of biochemistry, 4th edition. 2004.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eisenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Weiss</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Terwilliger</surname>
            <given-names>TC</given-names>
          </name>
        </person-group>
        <article-title>The hydrophobic moment detects periodicity in protein hydrophobicity</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>1984</year>
        <volume>81</volume>
        <fpage>140</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.81.1.140</pub-id>
        <pub-id pub-id-type="pmid">6582470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hessa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bihlmaier</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lundin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boekel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Andersson</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recognition of transmembrane helices by the endoplasmic reticulum translocon</article-title>
        <source>Nature</source>
        <year>2005</year>
        <volume>433</volume>
        <fpage>377</fpage>
        <lpage>381</lpage>
        <pub-id pub-id-type="doi">10.1038/nature03216</pub-id>
        <pub-id pub-id-type="pmid">15674282</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kyte</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Doolittle</surname>
            <given-names>RF</given-names>
          </name>
        </person-group>
        <article-title>A simple method for displaying the hydropathic character of a protein</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>157</volume>
        <fpage>105</fpage>
        <lpage>132</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90515-0</pub-id>
        <pub-id pub-id-type="pmid">7108955</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moon</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>KG</given-names>
          </name>
        </person-group>
        <article-title>Side-chain hydrophobicity scale derived from transmembrane protein folding into lipid bilayers</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>10174</fpage>
        <lpage>10177</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1103979108</pub-id>
        <pub-id pub-id-type="pmid">21606332</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wimley</surname>
            <given-names>WC</given-names>
          </name>
          <name>
            <surname>White</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>Experimentally determined hydrophobicity scale for proteins at membrane interfaces</article-title>
        <source>Nat Struct Mol Biol</source>
        <year>1996</year>
        <volume>3</volume>
        <fpage>842</fpage>
        <lpage>848</lpage>
        <pub-id pub-id-type="doi">10.1038/nsb1096-842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>London</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>An amino acid “transmembrane tendency” scale that approaches the theoretical limit to accuracy for prediction of transmembrane helices: relationship to biological hydrophobicity</article-title>
        <source>Protein Sci</source>
        <year>2006</year>
        <volume>15</volume>
        <fpage>1987</fpage>
        <lpage>2001</lpage>
        <pub-id pub-id-type="doi">10.1110/ps.062286306</pub-id>
        <pub-id pub-id-type="pmid">16877712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ribeiro-Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Coimbra</surname>
            <given-names>LD</given-names>
          </name>
          <name>
            <surname>Cassago</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rocha</surname>
            <given-names>RPF</given-names>
          </name>
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>de Felicio</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Cryo-EM structure of the mature and infective Mayaro virus at 4.4 Å resolution reveals features of arthritogenic alphaviruses</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23400-9</pub-id>
        <?supplied-pmid 34031424?>
        <pub-id pub-id-type="pmid">34031424</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michalska</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Jedrzejczak</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Maltseva</surname>
            <given-names>NI</given-names>
          </name>
          <name>
            <surname>Stols</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Endres</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Crystal structures of SARS-CoV-2 ADP-ribose phosphatase: from the apo form to ligand complexes</article-title>
        <source>IUCrJ</source>
        <year>2020</year>
        <volume>5</volume>
        <fpage>536</fpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frick</surname>
            <given-names>DN</given-names>
          </name>
          <name>
            <surname>Virdi</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Vuksanovic</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Dahal</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Silvaggi</surname>
            <given-names>NR</given-names>
          </name>
        </person-group>
        <article-title>Molecular basis for ADP-ribose binding to the Mac1 domain of SARS-CoV-2 nsp3</article-title>
        <source>Biochemistry</source>
        <year>2020</year>
        <volume>178</volume>
        <fpage>104793</fpage>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Claverie</surname>
            <given-names>J-M</given-names>
          </name>
        </person-group>
        <article-title>A putative role of de-mono-ADP-Ribosylation of STAT1 by the SARS-CoV-2 Nsp3 protein in the cytokine storm syndrome of COVID-19</article-title>
        <source>Viruses</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>646</fpage>
        <pub-id pub-id-type="doi">10.3390/v12060646</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fehr</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Channappanavar</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jankevicius</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fett</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Athmer</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The conserved coronavirus macrodomain promotes virulence and suppresses the innate immune response during severe acute respiratory syndrome coronavirus infection</article-title>
        <source>MBio</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1128/mBio.01721-16</pub-id>
        <?supplied-pmid 27965448?>
        <pub-id pub-id-type="pmid">27965448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eriksson</surname>
            <given-names>KK</given-names>
          </name>
          <name>
            <surname>Cervantes-Barragán</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ludewig</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Thiel</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Mouse hepatitis virus liver pathology is dependent on ADP-Ribose-1″-Phosphatase, a viral function conserved in the alpha-like supergroup</article-title>
        <source>J Virol</source>
        <year>2008</year>
        <volume>82</volume>
        <fpage>12325</fpage>
        <lpage>12334</lpage>
        <pub-id pub-id-type="doi">10.1128/JVI.02082-08</pub-id>
        <pub-id pub-id-type="pmid">18922871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brosey</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Houl</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Katsonis</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Balapiti-Modarage</surname>
            <given-names>LPF</given-names>
          </name>
          <name>
            <surname>Bommagani</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arvai</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Targeting SARS-CoV-2 Nsp3 macrodomain structure with insights from human poly(ADP-ribose) glycohydrolase (PARG) structures with inhibitors</article-title>
        <source>Prog Biophys Mol Biol</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2021.02.002</pub-id>
        <?supplied-pmid 33636189?>
        <pub-id pub-id-type="pmid">33636189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robson</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The use of knowledge management tools in viroinformatics. Example study of a highly conserved sequence motif in Nsp3 of SARS-CoV-2 as a therapeutic target</article-title>
        <source>Comput Biol Med</source>
        <year>2020</year>
        <volume>125</volume>
        <fpage>103963</fpage>
        <pub-id pub-id-type="doi">10.1016/j.compbiomed.2020.103963</pub-id>
        <pub-id pub-id-type="pmid">32828990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2D graphics environment</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Konagurthu</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Whisstock</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Stuckey</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Lesk</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>MUSTANG: a multiple structural alignment algorithm</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>2006</year>
        <volume>64</volume>
        <fpage>559</fpage>
        <lpage>574</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.20921</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krieger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vriend</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>YASARA View—molecular graphics for all devices—from smartphones to workstations</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>2981</fpage>
        <lpage>2982</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu426</pub-id>
        <pub-id pub-id-type="pmid">24996895</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Haberland</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Reddy</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SciPy 10: fundamental algorithms for ScientificComputing in Python</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <fpage>261</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
        <pub-id pub-id-type="pmid">32015543</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8685811</article-id>
    <article-id pub-id-type="publisher-id">4519</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04519-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyKVFinder: an efficient and integrable Python package for biomolecular cavity detection and characterization in data science</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Guerra</surname>
          <given-names>João Victor da Silva</given-names>
        </name>
        <address>
          <email>joao.guerra@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ribeiro-Filho</surname>
          <given-names>Helder Veras</given-names>
        </name>
        <address>
          <email>helder.ribeiro@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jara</surname>
          <given-names>Gabriel Ernesto</given-names>
        </name>
        <address>
          <email>gabriel.jara@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bortot</surname>
          <given-names>Leandro Oliveira</given-names>
        </name>
        <address>
          <email>leandro.bortot@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pereira</surname>
          <given-names>José Geraldo de Carvalho</given-names>
        </name>
        <address>
          <email>jose.pereira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1287-8019</contrib-id>
        <name>
          <surname>Lopes-de-Oliveira</surname>
          <given-names>Paulo Sérgio</given-names>
        </name>
        <address>
          <email>paulo.oliveira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.509794.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0445 080X</institution-id><institution>Brazilian Center for Research in Energy and Materials (CNPEM), </institution><institution>Brazilian Biosciences National Laboratory (LNBio), </institution></institution-wrap>R. Giuseppe Máximo Scolfaro, 10000 - Bosque das Palmeiras, Campinas, SP 13083-100 Brazil </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.411087.b</institution-id><institution-id institution-id-type="ISNI">0000 0001 0723 2494</institution-id><institution>Graduate Program in Pharmaceutical Sciences, Faculty of Pharmaceutical Sciences, </institution><institution>University of Campinas, </institution></institution-wrap>Campinas, SP Brazil </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>607</elocation-id>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>12</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Biomolecular interactions that modulate biological processes occur mainly in cavities throughout the surface of biomolecular structures. In the data science era, structural biology has benefited from the increasing availability of biostructural data due to advances in structural determination and computational methods. In this scenario, data-intensive cavity analysis demands efficient scripting routines built on easily manipulated data structures. To fulfill this need, we developed pyKVFinder, a Python package to detect and characterize cavities in biomolecular structures for data science and automated pipelines.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">pyKVFinder efficiently detects cavities in biomolecular structures and computes their volume, area, depth and hydropathy, storing these cavity properties in NumPy arrays. Benefited from Python ecosystem interoperability and data structures, pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, machine learning and 3D visualization in automated workflows. As proof of pyKVFinder’s capabilities, we successfully identified and compared ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins with pyKVFinder, showing its integrability with data science packages such as matplotlib, NGL Viewer, SciPy and Jupyter notebook.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">We introduce an efficient, highly versatile and easily integrable software for detecting and characterizing biomolecular cavities in data science applications and automated protocols. pyKVFinder facilitates biostructural data analysis with scripting routines in the Python ecosystem and can be building blocks for data science and drug design applications.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-021-04519-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Cavity detection</kwd>
      <kwd>Cavity characterization</kwd>
      <kwd>NumPy</kwd>
      <kwd>Python</kwd>
      <kwd>Data structure</kwd>
      <kwd>Data science</kwd>
      <kwd>Automated pipelines</kwd>
      <kwd>Molecular dynamics</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001807</institution-id>
            <institution>Fundação de Amparo à Pesquisa do Estado de São Paulo</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018/00629-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>Paulo Sérgio</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003593</institution-id>
            <institution>Conselho Nacional de Desenvolvimento Científico e Tecnológico</institution>
          </institution-wrap>
        </funding-source>
        <award-id>350244/2020-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Jara</surname>
            <given-names>Gabriel Ernesto</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par19">At present, we are going through the era of data science and the computational and structural biology fields have hugely benefited from the growing availability of biostructural data, as pointed out by [<xref ref-type="bibr" rid="CR1">1</xref>]: “Structural biology meets data science”. Advances in X-ray crystallography and electron microscopy techniques have expanded the determination of novel structures [<xref ref-type="bibr" rid="CR2">2</xref>]. In the meantime, advances in computational resources have driven the use of in silico methods to simulate the dynamics of biomolecules and carried out the implementation of artificial intelligence to model biomolecular structures [<xref ref-type="bibr" rid="CR3">3</xref>]. Together, all of this structural data provides fertile ground for data interpretation through data science or automated analysis frameworks, but data-intensive analysis asks for efficient and integrable scripting routines with an easily manipulated data structure.</p>
    <p id="Par20">In this scenario, we developed pyKVFinder, an open-source python package for cavity detection and characterization abstracted into multidimensional arrays. In proteins or other macromolecules, solvent-exposed clefts or buried cavities play a key role in ligand binding, which can ultimately regulate biological function of the macromolecule [<xref ref-type="bibr" rid="CR4">4</xref>]. For this reason, the identification and characterization of ligand-binding sites are the basis of rational structure-based drug discovery and design [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>]. pyKVFinder adopts the original geometrical grid-and-sphere-based detection method as implemented in KVFinder [<xref ref-type="bibr" rid="CR7">7</xref>], which has been improved in the latest parallel version, parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Detected cavities in parKVFinder, as in many other well-known programs, such as CavVis [<xref ref-type="bibr" rid="CR9">9</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], ConCavity [<xref ref-type="bibr" rid="CR12">12</xref>], MSpocket [<xref ref-type="bibr" rid="CR13">13</xref>] and POVME 3.0 [<xref ref-type="bibr" rid="CR14">14</xref>], are human-readable and easily displayed in molecular visualization programs, but are not properly structured to be directly scripted into automated pipelines or data science frameworks. Programming languages are constantly evolving in the data science field, with Python being one of the most popular in the community [<xref ref-type="bibr" rid="CR15">15</xref>]. However, only a few initiatives have been launched to make cavity detection programs easier to integrate into data science protocols. For instance, Cambridge Crystallographic Data Centre has licensed commercial software suites that use a Python API to integrate its structural database with workflows and third-party applications [<xref ref-type="bibr" rid="CR16">16</xref>], and one of its API modules is aimed at detecting ligand-binding cavities using the LIGSITE algorithm [<xref ref-type="bibr" rid="CR17">17</xref>]. As an open-source initiative, Biobb_vs is a Python package designed to detect and analyze cavities in automated workflows. Biobb_vs is part of BioExcel Building Blocks [<xref ref-type="bibr" rid="CR18">18</xref>] and uses fpocket to detect cavities in virtual screening pipelines. In this case, despite the interoperability achieved, the workflows depend on handling data files generated by fpocket.</p>
    <p id="Par21">To fulfill this need, pyKVFinder is wrapped into Python and, using Python’s well-established data structure (e. g., NumPy array), benefits from the language ecosystem interoperability. pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, statistical analysis, and tridimensional visualization. Moreover, users can explore the functionality of pyKVFinder step-by-step using interactive interfaces, such as IPython/Jupyter notebooks. As mentioned above, one of pyKVFinder’s main contributions in data science workflows is to translate the detected cavities from tridimensional coordinates of cavity points to NumPy arrays, a data structure that allows for a wide diversity of scientific computation and efficient storage and access to N-dimensional arrays (ndarrays), also called tensors [<xref ref-type="bibr" rid="CR19">19</xref>]. Ndarrays also provide efficient ways of handling data for mathematical operations and are the popular choice of input data type for machine learning Python libraries such as scikit-learn [<xref ref-type="bibr" rid="CR20">20</xref>].</p>
    <p id="Par22">Besides conventional cavity properties such as volume and area, which are stored as Python dictionaries, pyKVFinder computes cavity depth and hydropathy. Similar to cavity points, these spatial and physicochemical properties are stored as Python ndarrays and can be visualized using Python molecular visualization widgets. Thus, pyKVFinder provides a versatile way to detect and characterize biomolecular cavities and integrate this information into data science or automated workflows.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par23">Python-C parallel KVFinder (pyKVFinder) applies a Simplified Wrapper and Interface Generator (SWIG; <ext-link ext-link-type="uri" xlink:href="http://www.swig.org/">http://www.swig.org/</ext-link>) to extend grid operations written in C to Python, a high-level programming language. pyKVFinder can be easily installed with the pip package management system. In pyKVFinder, the target biomolecule is inserted into a regular 3D grid, which is stored as an ndarray, considering the van der Waals radii of the atoms. To detect cavities, pyKVFinder uses a dual-probe algorithm that scans the biomolecular structure, as described in [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. In summary, a small probe, dubbed Probe In, and a larger probe, dubbed Probe Out, translate over the grid points, defining two molecular surfaces with different accessibility. Biomolecular cavities are defined as the non-overlapped regions between the molecular surfaces. On each detected cavity, pyKVFinder may perform spatial, depth, hydropathy and constitutional characterizations. In this workflow, C routines undergo multithreaded parallelization to speed up cavity detection and characterization, with the OpenMP API creating a user-defined number of parallel threads, where grid chunks are distributed among these threads to perform independent operations.</p>
    <sec id="Sec3">
      <title>Python package</title>
      <p id="Par24">pyKVFinder can be imported as a package in the Python environment and users can decide to run the full cavity detection and characterization workflow through the <italic>run_workflow</italic> function or run pyKVFinder functions in a stepwise fashion. At the latter, users can integrate pyKVFinder functions into third-party Python packages and benefit from interactive IPython/Jupyter notebooks. By running pyKVFinder in Python environment, users can visualize the detected cavities through the Python NGL Viewer widget [<xref ref-type="bibr" rid="CR21">21</xref>]. Still, the full workflow was also coded as a command-line interface. Either way, users have access to a full set of customizable parameters to detect and characterize biomolecular cavities. A schematic diagram of cavity detection and characterization workflow is described in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Diagram of cavity detection and characterization workflow using pyKVFinder package. The flowchart illustrates function calls and their dependencies for performing cavity detection and characterization with pyKVFinder package</p></caption><graphic xlink:href="12859_2021_4519_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par25">In the cavity detection and characterization workflow, <italic>read_vdw</italic> function reads a customizable van der Waals (vdW) radii file (<italic>.dat</italic> extension; default <italic>vdw.dat</italic>) into a nested Python dictionary, which is first indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.), and then indexed by the atom name (e. g., C, N, O, CA, etc.) to access its respective radius value. The vdW radii file defines the radius values for each atom by residue and when not defined, uses a generic value based on the atom type. The built-in file (<italic>vdw.dat</italic>) applies the vdW radii of the Amber ff99 force field [<xref ref-type="bibr" rid="CR22">22</xref>]. Afterwards, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a target PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension), respectively. The atomic data is stored in an ndarray with residue number, chain identifier, residue name, atom name, xyz coordinates and radius per atom.</p>
      <p id="Par26">To perform the cavity detection on the whole structure, the 3D grid is defined based on the target biomolecule coordinates and the user-defined parameters: grid spacing and Probe Out diameter. Thus, the grid coordinates are extracted from the atomic data ndarray, using <italic>get_vertices</italic> function that defines the grid origin and XYZ axis. The first vertex (p1) is the minimum xyz coordinates of the atomic data. The second (p2), third (p3) and fourth (p4) vertices represent the maximum coordinate along the X, Y and Z axes, respectively. Given these four vertices, the original coordinate system is transformed in the <italic>detect</italic> function, using translation and rotation, into a new coordinate system with P1 as its origin. Also, for internal calculations, the sum of the grid spacing and the Probe Out size is padded in each direction of the 3D grid. With user-defined parameters and atomic coordinates, the <italic>detect</italic> function creates and fills the 3D grids with Probe In and Probe Out probes, and compares these grids to define the biomolecular cavities, which are returned in an ndarray. In this ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), each element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (− 1).<fig id="Fig2"><label>Fig. 2</label><caption><p>Representative view of detected cavities in the pyKVFinder data structure. Based on a 3D grid (left figure), pyKVFinder detects cavities in biomolecules and returns an ndarray with dimensions (m, n, o) (right figure). Each ndarray element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (-1). Cavity properties such as depth and hydropathy are also stored in the same data structure, with ndarray elements corresponding to the property value</p></caption><graphic xlink:href="12859_2021_4519_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">Instead of performing the cavity detection on the whole structure, the search space can be set to a custom search box, called box adjustment mode. This mode is defined based on a TOML-formatted configuration file (<italic>.toml</italic> extension; Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A1), which can explicitly define the vertices coordinates or pass a list of residues of the target biomolecule to be used as reference instead of the whole structure. The box can also be drawn using parKVFinder PyMOL plugin and its coordinates can be extracted from parKVFinder parameters file. Thus, the <italic>get_vertices_from_file</italic> function loads a box configuration file and atomic data from <italic>read_pdb</italic> or <italic>read_xyz</italic> function, which returns the grid coordinates (p1, p2, p3 and p4) and selects the atoms inside the custom 3D grid with their respective atomic data. Hence, these parameters are passed to <italic>detect</italic> function, together with <italic>box_adjustment</italic> flag, to perform cavity detection on a custom 3D grid.</p>
      <p id="Par28">Either way, whole structure mode or box adjustment mode, another space segmentation method, called ligand adjustment mode, can be applied to constrain the search space around a target ligand, defined by a PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension). For this mode, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a ligand PDB or XYZ file and returns the ligand atomic coordinates with their respective radius that must be passed to <italic>detect</italic> function to further restrict the search space within a radius of the target ligand.</p>
    </sec>
    <sec id="Sec4">
      <title>Cavity characterization</title>
      <p id="Par29">With the ndarray of detected cavities, pyKVFinder package may perform four characterization procedures, i.e., spatial, constitutional, depth and hydropathy characterizations. The spatial characterization, using <italic>spatial</italic> function, defines the surface points in an ndarray, and estimates the volume and area of the detected cavities, following the methodology proposed in [<xref ref-type="bibr" rid="CR8">8</xref>]. The constitutional characterization, using <italic>constitutional</italic> function, defines the interface residues that surround the detected cavities, checking if the atoms of the residues are within a radius, which is the sum of the Probe In size and the atom radius. Alternatively, the <italic>constitutional</italic> function can ignore backbone contacts by enabling <italic>ignore_backbone</italic> flag. This function stores the interface residues in a Python dictionary. Using the interface residues, the <italic>calculate_frequencies</italic> function calculates the occurrence of each residue and classes of residues per cavity. The classes of amino acid residues [<xref ref-type="bibr" rid="CR23">23</xref>] are aliphatic apolar (R1), aromatic (R2), polar uncharged (R3), negatively charged (R4), positively charged (R5) and non-standard (RX) (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table A1).</p>
      <p id="Par30">The depth characterization identifies the degree of burial of the binding site. This characterization applies <italic>depth</italic> function to identify the cavity-bulk boundary by applying a spatial filter, which defines a boundary point as cavity points where at least one direct neighbor is a bulk point, marking it with the negative of the cavity integer (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). Subsequently, the depth of each cavity point is heuristically estimated by the shortest Euclidean distance between the cavity point and its respective boundary points (Eq. <xref rid="Equ1" ref-type="">1</xref>). Each cavity point is distributed among the user-defined number of threads to perform this chunk of distance calculations (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). With the depth of all cavity points calculated and stored as an ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), the maximum and average depths are calculated for each detected cavity and returned as Python dictionaries.<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }} = \mathop {min}\limits_{j} \left[ {d\left( {p_{i} ,p_{j} } \right)} \right] = \mathop {min}\limits_{j} \left[ {\sqrt {\left( {p_{{i_{x} }} - p_{{j_{x} }} } \right)^{2} + \left( {p_{{i_{y} }} - p_{{j_{v} }} } \right)^{2} + \left( {p_{{i_{z} }} - p_{{j_{z} }} } \right)^{2} } } \right],$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:msqrt><mml:mrow><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="12859_2021_4519_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }}$$\end{document}</tex-math><mml:math id="M4"><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq1.gif"/></alternatives></inline-formula> is the depth of the cavity point i, <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\left( {p_{i} ,p_{j} } \right)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq2.gif"/></alternatives></inline-formula> is the Euclidean distance between points i and j, <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{i}$$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq3.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity point i, <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{j}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq4.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity-bulk boundary point j.</p>
      <p id="Par31">The hydropathy characterization extracts the water attractiveness of the interface residues surrounding the binding site. This characterization uses <italic>hydropathy</italic> function at surface points detected in spatial characterization to map a target hydrophobicity scale on them. Firstly, a customizable TOML-formatted hydrophobicity scale file (<italic>.toml</italic> extension) is loaded into a Python dictionary, which is indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.) to access the respective hydrophobicity value. With the dictionary loaded, the function identifies the nearest interface residues for each surface point and projects the residue’s hydrophobicity value onto them (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Alternatively, backbone contacts may be ignored by enabling the <italic>ignore_backbone</italic> flag. Finally, with the hydrophobicity mapped on the surface and returned as an ndarray, the average hydropathy is calculated for each detected cavity and stored in a Python dictionary. The hydrophobicity scale file defines the scale name and hydrophobicity value for each residue and, when not defined, assigns zero to the missing residues (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A3). The package contains six built-in hydrophobicity scales: Eisenberg and Weiss [<xref ref-type="bibr" rid="CR24">24</xref>], Hessa and Heijne [<xref ref-type="bibr" rid="CR25">25</xref>], Kyte and Doolittle [<xref ref-type="bibr" rid="CR26">26</xref>], Moon and Fleming [<xref ref-type="bibr" rid="CR27">27</xref>], Wimley and White [<xref ref-type="bibr" rid="CR28">28</xref>] and Zhao and London [<xref ref-type="bibr" rid="CR29">29</xref>]. Benefiting from the Python environment, users can test different scales without having to perform the cavity detection step every time. A pre-released version of hydropathy characterization has been successfully applied to compare cavities of alphavirus-related proteins [<xref ref-type="bibr" rid="CR30">30</xref>].<fig id="Fig3"><label>Fig. 3</label><caption><p>Detection and characterization of ADRP substrate-binding cavity of SARS-CoV-2 and its comparison to related coronaviruses and human macroD1 and macroD2 proteins. <bold>a</bold> Three different characterizations of the apo ADRP substrate-binding cavity of SARS-CoV-2 (PDB ID: 6WEN) using pyKVFinder. The upper panel shows the detected cavity represented as gray surface and residues surrounding it as red sticks. The cavity area and volume are displayed. The middle panel presents the same cavity colored by depth, while the bottom panel shows the cavity colored by hydropathy using Eisenberg and Weiss scale. <bold>b</bold> Conservation analysis of the ADP-ribose binding site in ADRP domain of SARS-CoV-2 (PDB ID: 6WEN, chain A), SARS-CoV (PDB ID: 2ACF, chain B), MERS-CoV (PDB ID: 5HIH, chain A), NL63 (PDB ID: 2VRI, chain A), HCoV-229E (PDB ID: 3EJG, chain A), FCoV (PDB ID: 3ETI, chain B) and human macrodomain proteins macroD1 (PDB ID: 2X47, chain A) and macroD2 (PDB ID: 6Y73, chain D) from human. These protein domains were selected using Dali and choosing homologs in apo form. The structures were realigned using MUSTANG algorithm [<xref ref-type="bibr" rid="CR39">39</xref>] from YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]. The figure presents cavity points that were detected in at least two structures and the points are colored by conservation percentage. <bold>c</bold> Hydropathy profile of the same compared cavities collected from pyKVFinder ndarrays. <bold>d</bold> Hierarchical clustering dendrogram of the frequency of residues surrounding the compared cavities. The correlation metric was used to assess the similarity and the complete method was chosen as linkage method. All the images and graphics were created inside a Jupyter notebook. To create images of tridimensional structures, we used NGL Viewer tool and to plot graphics, we used matplotlib library</p></caption><graphic xlink:href="12859_2021_4519_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par32">The cavity detection and characterization objects, from <italic>detect</italic>, <italic>spatial</italic>, <italic>constitutional</italic>, <italic>calculate_frequencies</italic>, <italic>depth</italic>, <italic>hydropathy</italic> functions, can be stored into a <italic>pyKVFinderResults</italic> class that accumulates them in its attributes. As this data structure is filled, these attributes can be exported to files through <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods. The <italic>export</italic> method writes cavities together with their surface points to a PDB-formatted file with depth values in the B-factor column, while surface points with hydropathy values in the B-factor column are written to another PDB-formatted file. The <italic>write</italic> method saves file paths, volume, area, interface residues and their frequencies, maximum and average depth, and average hydropathy in a TOML-formatted file. The <italic>plot_frequencies</italic> method plots bar charts of frequencies per cavity in a PDF file. These three methods are also wrapped in <italic>export_all</italic> method. Although we presented the full workflow, all functions explained in this section can be applied independently in a step-by-step manner. In this scenario, the <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods have their counterparts in the <italic>export</italic>, <italic>write_results</italic> and <italic>plot_frequencies</italic> functions of pyKVFinder package, respectively. Additionally, the <italic>read_cavity</italic> function reads a cavity file (<italic>.pdb</italic> extension), written by pyKVFinder, parKVFinder or KVFinder, and a target PDB or XYZ file (<italic>.pdb</italic> or<italic>.xyz</italic> extension), and returns an ndarray with each element corresponding to the cavity space (&gt; 1), biomolecule space (0), or bulk or empty space (− 1), similar to the output of the <italic>detect</italic> function. In this way, it allows to recharacterize a previously detected cavity or characterize a cavity with manually trimmed points.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Results and discussion</title>
    <sec id="Sec6">
      <title>Usage example</title>
      <p id="Par33">To demonstrate the use of pyKVFinder and how it benefits from the Python ecosystem, we identified the substrate-binding pocket of the ADP-ribose phosphatase (ADRP) domain of SARS-CoV-2 nsp3 protein in the apo form (PDB ID: 6WEN). Still under investigation to determine its exact functions in coronavirus life cycle, the ADRP domain recognizes ADP-ribose 1″ phosphate [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>] and seems to have an important role in virulence and innate immunity regulation to infection [<xref ref-type="bibr" rid="CR33">33</xref>–<xref ref-type="bibr" rid="CR35">35</xref>]. In this regard, recent efforts have been made to characterize ADP-ribose substrate-binding pocket and evaluate this site as a putative antiviral drug target [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>].</p>
    </sec>
    <sec id="Sec7">
      <title>Visualizing detected cavities with NGL Viewer in Jupyter notebook</title>
      <p id="Par34">pyKVFinder successfully detected the ADRP substrate-binding cavity and determined traditional cavity properties such as volume, area and residues surrounding the ADP-ribose cavity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, upper panel). For instance, we used pyKVFinder <italic>calculate_frequencies</italic> and <italic>plot_frequencies</italic> functions to determine the composition of the type of residues surrounding the cavity and plotted this composition as a bar chart (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A4). In pyKVFinder, this step is performed using matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>], but users are free to analyze data and present results on their favorite graphing library. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, the ADP-ribose site forms a cleft sandwiched between ADRP α-helices and the main contacts involve residues from coil regions, which could possibly explain the pocket plasticity upon substrate binding [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>]. These results were visualized using NGL Viewer on a Jupyter notebook; alternatively, users can use another molecular visualization tool for notebooks or load results into the parKVFinder PyMOL Plugin [<xref ref-type="bibr" rid="CR8">8</xref>].<fig id="Fig4"><label>Fig. 4</label><caption><p>Performance evaluation of the benchmarking methods for detecting the ADRP substrate-binding site. <bold>a</bold> The structures of the protein (green cartoon) at frame 30 (smallest RMSD compared to the crystallographic structure) of the ADRP domain trajectory with the corresponding cavities detected (gray surfaces) by each benchmarking method. <bold>b</bold> The total volume of the cavities detected in the ADRP substrate-binding site along the 600 ns simulation. The total volume is averaged in a window of 20 frames. The red dashed line indicates the molecular surface volume of the ADP-ribose molecule that originally occupied the ADRP substrate-binding site in the crystallographic structure (PDB ID: 6W02, chain B). <bold>c</bold> Elapsed time to detect and characterize ADRP substrate-binding site. The standard workflow of pyKVFinder, as in parKVFinder, detects cavities and applies spatial and constitutional characterizations. The full workflow of pyKVFinder comprises standard workflow with depth and hydropathy characterizations</p></caption><graphic xlink:href="12859_2021_4519_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec8">
      <title>Characterizing hydropathy and depth of cavities</title>
      <p id="Par35">We also inspected the ADRP substrate-binding cavity through other two points of view: depth and hydropathy. Those physicochemical descriptions are usually essential for drug development [<xref ref-type="bibr" rid="CR36">36</xref>]. In apo form, despite being solvent-exposed, the cavity has some internal components (red color) that can reach a more central portion of the ADRP β-sheet (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, middle panel). The hydropathy analysis shows that the cavity core is most hydrophobic (yellow color), with some polar residues on the edges (blue color) that may contribute to the design of more specific ligands. Since pyKVFinder stores the properties to be colored in cavities in the B-factor column of a PDB-formatted file, users can easily change the style and color scheme in most of molecular visualization programs.</p>
    </sec>
    <sec id="Sec9">
      <title>Using NumPy operations to present conservation and matplotlib library to plot hydropathy distribution of cavities</title>
      <p id="Par36">In addition to SARS-CoV-2, the ADRP domain is also present in other related coronaviruses and has the macroD1 and macroD2 as homologous in humans. For this reason, we used pyKVFinder to detect the ADRP substrate-binding site in aligned ADRP domains from different species and compare their properties. Firstly, we applied arithmetic operations on the ndarrays of the detected cavities to determine the cavity conservation among the species. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, the ADRP cavity has a core (red points) very conserved in the analyzed species which is occupied by the diphosphate and ribose of ADP and the second ribose bound to ADP in the ADRP substrate-bound form. In turn, adenosine occupies a less conserved cavity region, which may indicate that the structure of this site in some species changes to accommodate ADP-ribose substrate. To compare the cavity hydropathy across species, we plotted a hydropathy distribution from the hydropathy ndarray using the matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>] (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, left graph). The distribution clearly shows the hydrophobic characteristic of the pocket that is mostly shared between ADRP substrate-binding pockets of coronaviruses. Interestingly, the human macroD1 and macroD2 seem to shift the distribution to a less hydrophobic profile. This finding should be better evaluated, as the differences between these homologous domains that share the same substrate can contribute to the design of specific ligands for viral ADRP domains.</p>
    </sec>
    <sec id="Sec10">
      <title>Hierarchical clustering of cavity residues using SciPy package</title>
      <p id="Par37">Finally, since pyKVFinder uses native Python dictionaries to store the residues surrounding the detected cavity, we can easily tabulate the residue frequency. With this information, we performed a hierarchical clustering, an unsupervised machine learning algorithm, using the SciPy package [<xref ref-type="bibr" rid="CR41">41</xref>], and represented clusters arrangement as a dendrogram (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, right graph). The ADRP cavity of SARS-CoV-2 grouped with that of SARS-CoV, demonstrating the high identity between these betacoronaviruses. Close to them, we can observe another betacoronavirus, MERS-CoV. On the other hand, the alphacoronaviruses NL63 and HCoV-229E and the feline FCoV are grouped together. Further away from the coronaviruses’ domains are the two human macrodomain proteins, macroD1 and D2. Despite the cavity of ADRP or macro D1/D2 sharing the same substrate, ADP-ribose, these results show that the profile of the residues surrounding these cavities follows evolutionary traces.</p>
    </sec>
    <sec id="Sec11">
      <title>Benchmarking</title>
      <p id="Par38">In addition to identifying and characterizing the ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins, we simulated ADRP domain of SARS-CoV-2 (PDB ID: 6W02, chain B) without its ligand, ADP-ribose, for 600 ns, extracting a frame at regular intervals of 1 ns (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Thus, we used pyKVFinder with its box adjustment mode to detect and estimate the volume of the ADP-ribose binding site throughout 600 frames of the ADRP domain’s trajectory. This analysis was repeated with other well-known software: POVME [<xref ref-type="bibr" rid="CR14">14</xref>], Biobb_vs [<xref ref-type="bibr" rid="CR18">18</xref>], MSPocket [<xref ref-type="bibr" rid="CR13">13</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>] and parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Biobb_vs, as mentioned in the Background section, is a Python package that allow scripting, while POVME, MSpocket, GHECOM, fpocket, GHECOM and parKVFinder are command-line interfaces. A detailed description of software parameters and versions is in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p id="Par39">All these methods successfully detected the pocket of the ADRP substrate-binding site, in which the shape and volume vary slightly during the molecular dynamics simulation (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). The shape of the detected cavities defined by pyKVFinder and parKVFinder finely adjust to the original ligand in the binding site, as well as MSPocket (Fig. <xref rid="Fig4" ref-type="fig">4</xref>a) Besides that, the volume calculated by pyKVFinder (346.8 ± 78.7 Å<sup>3</sup>) and parKVFinder (346.5 ± 79.3 Å<sup>3</sup>) is closely related to the volume of ADP-ribose (351.1 Å<sup>3</sup>; molecular surface volume estimated by YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]), the ligand that originally occupied the binding site in the crystallographic structure used in the molecular dynamics simulations (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Nevertheless, the differences in the shape and volume of detected cavities derive from the methodology employed (e.g., Voronoi tessellation, alpha spheres, and grid-and-sphere), the cavity-bulk boundary definition, and the ability to segment the space. For instance, pyKVFinder, parKVFinder and POVME can segment the search space, which trims points outside this custom space, while the other methods only explore the whole structure, which includes neighboring regions at the binding site.</p>
      <p id="Par40">Besides being able to accurately detect biomolecular cavities, current software must also perform fast detection and characterizations. Thus, we also evaluated the elapsed time to execute these benchmarking methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). pyKVFinder outperformed all analyzed methods. Even when applying the newly available characterization, depth and hydropathy, pyKVFinder's elapsed time only increased 36%, still outperforming other benchmarking methods. Further, compared to its counterpart, parKVFinder, pyKVFinder was 3.3 times faster in detecting ADRP binding site. The main reason for the performance gain is the additional possibility to parallelize routines, i. e., the insertion of atoms in the 3D grid in <italic>detect</italic> function, based on ndarrays. Hence, experienced users requiring scripting routines are encouraged to use pyKVFinder due to its improved performance, while newcomers should prioritize parKVFinder due to its simplicity of installation and execution. Further, the scalability of pyKVFinder, upon increasing number of threads, follows the same behavior presented by parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
      <p id="Par41">Despite all methods characterizing volume, each method has its own set of characterizations to be performed on the detected cavities. However, the cavities data structure is only accessible inside the Python ecosystem in pyKVFinder, which provides ndarrays and Python dictionaries. The ndarrays stores cavity points, surface points, hydropathy for each surface point and depth for each cavity point, while Python dictionaries stores volume, area, average hydropathy, maximum depth and average depth, and interface residues and their frequencies per detected cavity. Thus, users may develop new characterizations and/or analysis pipelines with these data structures.</p>
    </sec>
    <sec id="Sec12">
      <title>Future development</title>
      <p id="Par42">pyKVFinder will undergo continuous improvements and updates, according to its applications by the scientific community. In the future, pipelines will be implemented in molecular dynamics and machine learning, along with new features that are valuable to ligand-binding site characterization. Additionally, pyKVFinder aims to offload its routines to the GPU for performance enhancement in data-intensive applications.</p>
    </sec>
  </sec>
  <sec id="Sec13">
    <title>Conclusion</title>
    <p id="Par43">pyKVFinder provides an efficient and integrable Python package for cavity detection and characterization in biomolecular structures for data science and automated pipelines. In addition to fast, accurate and efficient cavity detection and characterization, pyKVFinder stores spatial and physicochemical properties in Python ndarrays, that ease scripting and data analysis. Further, pyKVFinder performance was benchmarked against well-known geometrical methods for cavity detection and characterization. Finally, we have successfully shown an application of pyKVFinder integration with matplotlib, NGL Viewer, SciPy and Jupyter notebook, that compared the ADRP substrate-binding site of SARS-CoV-2 in homologous proteins.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p id="Par44">
      <list list-type="bullet">
        <list-item>
          <p id="Par45"><bold>Project name:</bold> pyKVFinder</p>
        </list-item>
        <list-item>
          <p id="Par46">
            <bold>Project home page:</bold>
            <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>
          </p>
        </list-item>
        <list-item>
          <p id="Par47"><bold>Operating system(s):</bold> any supporting Python &gt;  = 3.7 (tested on Linux and macOS)</p>
        </list-item>
        <list-item>
          <p id="Par48"><bold>Programming language:</bold> Python, C</p>
        </list-item>
        <list-item>
          <p id="Par49"><bold>Other requirements:</bold> swig &gt;  = 4.0.1, toml &gt;  = 0.10.2, numpy &gt;  = 1.20.3, matplotlib &gt;  = 3.3.3</p>
        </list-item>
        <list-item>
          <p id="Par50"><bold>License:</bold> GNU General Public License v3.0</p>
        </list-item>
        <list-item>
          <p id="Par51"><bold>Any restrictions to use by non-academics:</bold> None.</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2021_4519_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> The Additional file 1 contains <bold>Table A1</bold>, <bold>Figures A1</bold>, <bold>A2</bold>, <bold>A3</bold> and <bold>A4</bold>, and a detailed description of the molecular dynamics simulation of ADRP domain of SARS-CoV-2 and the benchmarking procedure. <bold>Table A1</bold> reports the classes of amino acid residues. <bold>Figure A1</bold> shows examples of box configuration files. <bold>Figure A2</bold> shows the methodology of depth characterization. <bold>Figure A3</bold> shows the methodology of hydropathy characterization. <bold>Figure A4</bold> shows a bar chart of residues frequencies.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ADRP</term>
        <def>
          <p id="Par4">ADP-ribose phosphatase</p>
        </def>
      </def-item>
      <def-item>
        <term>CoV</term>
        <def>
          <p id="Par5">Coronavirus</p>
        </def>
      </def-item>
      <def-item>
        <term>MERS</term>
        <def>
          <p id="Par6">Middle East Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>ndarrays</term>
        <def>
          <p id="Par7">N-dimensional arrays</p>
        </def>
      </def-item>
      <def-item>
        <term>PDB</term>
        <def>
          <p id="Par8">Protein Data Bank</p>
        </def>
      </def-item>
      <def-item>
        <term>R1</term>
        <def>
          <p id="Par9">Aliphatic apolar</p>
        </def>
      </def-item>
      <def-item>
        <term>R2</term>
        <def>
          <p id="Par10">Aromatic</p>
        </def>
      </def-item>
      <def-item>
        <term>R3</term>
        <def>
          <p id="Par11">Polar uncharged</p>
        </def>
      </def-item>
      <def-item>
        <term>R4</term>
        <def>
          <p id="Par12">Negatively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>R5</term>
        <def>
          <p id="Par13">Positively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>RX</term>
        <def>
          <p id="Par14">Non-standard</p>
        </def>
      </def-item>
      <def-item>
        <term>SARS</term>
        <def>
          <p id="Par15">Severe Acute Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>SWIG</term>
        <def>
          <p id="Par16">Simplified Wrapper and Interface Generator</p>
        </def>
      </def-item>
      <def-item>
        <term>TOML</term>
        <def>
          <p id="Par17">Tom's Obvious, Minimal Language</p>
        </def>
      </def-item>
      <def-item>
        <term>vdW</term>
        <def>
          <p id="Par18">Van der Waals</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank the Brazilian Biosciences National Laboratory (LNBio), part of the Brazilian Center for Research in Energy and Materials (CNPEM) for accessibility to the Computational Biology Laboratory (LBC).</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>JVSG, JGCP and PSLO conceptualize and design the code package structure. JVSG implemented the code. HVRF, LOB, GEJ, and JGCP tested and performed validation checks. JVSG and HVRF wrote the manuscript. LOB, GEJ, JGCP and PSLO reviewed the manuscript and provided critical revision. PSLO supervised coding steps and decisions. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Fundação de Amparo à Pesquisa do Estado de São Paulo (FAPESP) [Grant Number 2018/00629-0], Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) [Grant Number 350244/2020-0], and Brazilian Center for Research in Energy and Materials (CNPEM). None of these funding bodies provided any direct role nor influence in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>pyKVFinder source code, documentation and tutorials are available in the Python Package Index (PyPI) repository, <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/pyKVFinder">https://pypi.org/project/pyKVFinder</ext-link>, and the GitHub repository, <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>. Documentation and tutorials are available at pyKVFinder webpage, <ext-link ext-link-type="uri" xlink:href="https://lbc-lnbio.github.io/pyKVFinder">https://lbc-lnbio.github.io/pyKVFinder</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par52">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par53">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par54">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Draizen</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>Structural biology meets data science: does anything change?</article-title>
        <source>Curr Opin Struct Biol</source>
        <year>2018</year>
        <volume>52</volume>
        <fpage>102</fpage>
        <pub-id pub-id-type="doi">10.1016/j.sbi.2018.09.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burley</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Bhikadiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bi</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Di Constanzo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein Data Bank: the single global archive for 3D macromolecular structure data</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D520</fpage>
        <lpage>D528</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1004</pub-id>
        <pub-id pub-id-type="pmid">30357364</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Adler</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction for the human proteome</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>590</fpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03828-1</pub-id>
        <pub-id pub-id-type="pmid">34293799</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Woodward</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Edelsbrunner</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Anatomy of protein pockets and cavities: measurement of binding site geometry and implications for ligand design</article-title>
        <source>Protein Sci</source>
        <year>1998</year>
        <volume>7</volume>
        <fpage>1884</fpage>
        <lpage>1897</lpage>
        <pub-id pub-id-type="doi">10.1002/pro.5560070905</pub-id>
        <?supplied-pmid 9761470?>
        <pub-id pub-id-type="pmid">9761470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sotriffer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Klebe</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Identification and mapping of small-molecule binding sites in proteins: computational tools for structure-based drug design</article-title>
        <source>Farm</source>
        <year>2002</year>
        <volume>57</volume>
        <fpage>243</fpage>
        <lpage>251</lpage>
        <pub-id pub-id-type="doi">10.1016/S0014-827X(02)01211-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henrich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Salo-Ahen</surname>
            <given-names>OMH</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>FF</given-names>
          </name>
          <name>
            <surname>Cruciani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Wade</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Computational approaches to identifying and characterizing protein binding sites for ligand design</article-title>
        <source>J Mol Recognit</source>
        <year>2009</year>
        <volume>23</volume>
        <fpage>209</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1002/jmr.984</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oliveira</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Ferraz</surname>
            <given-names>FA</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Xavier-Neto</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sobreira</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>de Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>KVFinder: steered identification of protein cavities as a PyMOL plugin</article-title>
        <source>BMC Bioinform</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>197</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-197</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>Ribeiro Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Bortot</surname>
            <given-names>LO</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>de Carvalho Pereira</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>ParKVFinder: a thread-level parallel approach in biomolecular cavity detection</article-title>
        <source>SoftwareX</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>100606</fpage>
        <pub-id pub-id-type="doi">10.1016/j.softx.2020.100606</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simões</surname>
            <given-names>TMC</given-names>
          </name>
          <name>
            <surname>Gomes</surname>
            <given-names>AJP</given-names>
          </name>
        </person-group>
        <article-title>CavVis—a field-of-view geometric algorithm for protein cavity detection</article-title>
        <source>J Chem Inf Model</source>
        <year>2019</year>
        <volume>59</volume>
        <fpage>786</fpage>
        <lpage>796</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00572</pub-id>
        <?supplied-pmid 30629446?>
        <pub-id pub-id-type="pmid">30629446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Guilloux</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Schmidtke</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tuffery</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Fpocket: an open source platform for ligand pocket detection</article-title>
        <source>BMC Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>168</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawabata</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Detection of multiscale pockets on protein surfaces using mathematical morphology</article-title>
        <source>Proteins</source>
        <year>2010</year>
        <volume>78</volume>
        <fpage>1195</fpage>
        <lpage>1211</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.22639</pub-id>
        <?supplied-pmid 19938154?>
        <pub-id pub-id-type="pmid">19938154</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Capra</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Laskowski</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Thornton</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Funkhouser</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Predicting protein ligand binding sites by combining evolutionary sequence conservation and 3D structure</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000585</pub-id>
        <?supplied-pmid 19997483?>
        <pub-id pub-id-type="pmid">19997483</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Pisabarro</surname>
            <given-names>MT</given-names>
          </name>
        </person-group>
        <article-title>MSPocket: an orientation-independent algorithm for the detection of ligand binding pockets</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>351</fpage>
        <lpage>358</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq672</pub-id>
        <?supplied-pmid 21134896?>
        <pub-id pub-id-type="pmid">21134896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wagner</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Sørensen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hensley</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Perison</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>POVME 3.0: software for mapping binding pocket flexibility</article-title>
        <source>J Chem Theory Comput</source>
        <year>2017</year>
        <volume>13</volume>
        <fpage>4584</fpage>
        <lpage>4592</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.7b00500</pub-id>
        <pub-id pub-id-type="pmid">28800393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Raschka</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Patterson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nolet</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Machine learning in Python: main developments and technology trends in data science, machine learning, and artificial intelligence</article-title>
        <source>Information</source>
        <year>2020</year>
        <volume>11</volume>
        <fpage>193</fpage>
        <pub-id pub-id-type="doi">10.3390/info11040193</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Groom</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Bruno</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Lightfoot</surname>
            <given-names>MP</given-names>
          </name>
          <name>
            <surname>Ward</surname>
            <given-names>SC</given-names>
          </name>
        </person-group>
        <article-title>The Cambridge structural database</article-title>
        <source>Acta Crystallogr Sect B Struct Sci Cryst Eng Mater</source>
        <year>2016</year>
        <volume>72</volume>
        <fpage>171</fpage>
        <lpage>179</lpage>
        <pub-id pub-id-type="doi">10.1107/S2052520616003954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hendlich</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Barnickel</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>LIGSITE: Automatic and efficient detection of potential small molecule-binding sites in proteins</article-title>
        <source>J Mol Graph Model</source>
        <year>1997</year>
        <volume>15</volume>
        <fpage>359</fpage>
        <lpage>363</lpage>
        <pub-id pub-id-type="doi">10.1016/S1093-3263(98)00002-3</pub-id>
        <pub-id pub-id-type="pmid">9704298</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andrio</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hospital</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Conejero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jordá</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Del Pino</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Codo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioExcel Building Blocks, a software library for interoperable biomolecular simulation workflows</article-title>
        <source>Sci Data</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1038/s41597-019-0177-4</pub-id>
        <?supplied-pmid 31506435?>
        <pub-id pub-id-type="pmid">31506435</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature</source>
        <year>2020</year>
        <volume>585</volume>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedregosa</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gramfort</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michel</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Thirion</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Grisel</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scikit-learn: machine learning in Python</article-title>
        <source>J Mach Learn Res</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>2825</fpage>
        <lpage>2830</lpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nguyen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Case</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>AS</given-names>
          </name>
        </person-group>
        <article-title>NGLview—interactive molecular graphics for Jupyter notebooks</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>1241</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx789</pub-id>
        <pub-id pub-id-type="pmid">29236954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cieplak</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kollman</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>How well does a restrained electrostatic potential (RESP) model perform in calculating conformational energies of organic and biological molecules?</article-title>
        <source>J Comput Chem</source>
        <year>2000</year>
        <volume>21</volume>
        <fpage>1049</fpage>
        <lpage>1074</lpage>
        <pub-id pub-id-type="doi">10.1002/1096-987X(200009)21:12&lt;1049::AID-JCC3&gt;3.0.CO;2-F</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Nelson DL, Cox MM. Lehninger principles of biochemistry, 4th edition. 2004.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eisenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Weiss</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Terwilliger</surname>
            <given-names>TC</given-names>
          </name>
        </person-group>
        <article-title>The hydrophobic moment detects periodicity in protein hydrophobicity</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>1984</year>
        <volume>81</volume>
        <fpage>140</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.81.1.140</pub-id>
        <pub-id pub-id-type="pmid">6582470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hessa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bihlmaier</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lundin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boekel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Andersson</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recognition of transmembrane helices by the endoplasmic reticulum translocon</article-title>
        <source>Nature</source>
        <year>2005</year>
        <volume>433</volume>
        <fpage>377</fpage>
        <lpage>381</lpage>
        <pub-id pub-id-type="doi">10.1038/nature03216</pub-id>
        <pub-id pub-id-type="pmid">15674282</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kyte</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Doolittle</surname>
            <given-names>RF</given-names>
          </name>
        </person-group>
        <article-title>A simple method for displaying the hydropathic character of a protein</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>157</volume>
        <fpage>105</fpage>
        <lpage>132</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90515-0</pub-id>
        <pub-id pub-id-type="pmid">7108955</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moon</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>KG</given-names>
          </name>
        </person-group>
        <article-title>Side-chain hydrophobicity scale derived from transmembrane protein folding into lipid bilayers</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>10174</fpage>
        <lpage>10177</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1103979108</pub-id>
        <pub-id pub-id-type="pmid">21606332</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wimley</surname>
            <given-names>WC</given-names>
          </name>
          <name>
            <surname>White</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>Experimentally determined hydrophobicity scale for proteins at membrane interfaces</article-title>
        <source>Nat Struct Mol Biol</source>
        <year>1996</year>
        <volume>3</volume>
        <fpage>842</fpage>
        <lpage>848</lpage>
        <pub-id pub-id-type="doi">10.1038/nsb1096-842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>London</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>An amino acid “transmembrane tendency” scale that approaches the theoretical limit to accuracy for prediction of transmembrane helices: relationship to biological hydrophobicity</article-title>
        <source>Protein Sci</source>
        <year>2006</year>
        <volume>15</volume>
        <fpage>1987</fpage>
        <lpage>2001</lpage>
        <pub-id pub-id-type="doi">10.1110/ps.062286306</pub-id>
        <pub-id pub-id-type="pmid">16877712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ribeiro-Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Coimbra</surname>
            <given-names>LD</given-names>
          </name>
          <name>
            <surname>Cassago</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rocha</surname>
            <given-names>RPF</given-names>
          </name>
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>de Felicio</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Cryo-EM structure of the mature and infective Mayaro virus at 4.4 Å resolution reveals features of arthritogenic alphaviruses</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23400-9</pub-id>
        <?supplied-pmid 34031424?>
        <pub-id pub-id-type="pmid">34031424</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michalska</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Jedrzejczak</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Maltseva</surname>
            <given-names>NI</given-names>
          </name>
          <name>
            <surname>Stols</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Endres</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Crystal structures of SARS-CoV-2 ADP-ribose phosphatase: from the apo form to ligand complexes</article-title>
        <source>IUCrJ</source>
        <year>2020</year>
        <volume>5</volume>
        <fpage>536</fpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frick</surname>
            <given-names>DN</given-names>
          </name>
          <name>
            <surname>Virdi</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Vuksanovic</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Dahal</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Silvaggi</surname>
            <given-names>NR</given-names>
          </name>
        </person-group>
        <article-title>Molecular basis for ADP-ribose binding to the Mac1 domain of SARS-CoV-2 nsp3</article-title>
        <source>Biochemistry</source>
        <year>2020</year>
        <volume>178</volume>
        <fpage>104793</fpage>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Claverie</surname>
            <given-names>J-M</given-names>
          </name>
        </person-group>
        <article-title>A putative role of de-mono-ADP-Ribosylation of STAT1 by the SARS-CoV-2 Nsp3 protein in the cytokine storm syndrome of COVID-19</article-title>
        <source>Viruses</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>646</fpage>
        <pub-id pub-id-type="doi">10.3390/v12060646</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fehr</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Channappanavar</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jankevicius</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fett</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Athmer</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The conserved coronavirus macrodomain promotes virulence and suppresses the innate immune response during severe acute respiratory syndrome coronavirus infection</article-title>
        <source>MBio</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1128/mBio.01721-16</pub-id>
        <?supplied-pmid 27965448?>
        <pub-id pub-id-type="pmid">27965448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eriksson</surname>
            <given-names>KK</given-names>
          </name>
          <name>
            <surname>Cervantes-Barragán</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ludewig</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Thiel</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Mouse hepatitis virus liver pathology is dependent on ADP-Ribose-1″-Phosphatase, a viral function conserved in the alpha-like supergroup</article-title>
        <source>J Virol</source>
        <year>2008</year>
        <volume>82</volume>
        <fpage>12325</fpage>
        <lpage>12334</lpage>
        <pub-id pub-id-type="doi">10.1128/JVI.02082-08</pub-id>
        <pub-id pub-id-type="pmid">18922871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brosey</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Houl</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Katsonis</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Balapiti-Modarage</surname>
            <given-names>LPF</given-names>
          </name>
          <name>
            <surname>Bommagani</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arvai</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Targeting SARS-CoV-2 Nsp3 macrodomain structure with insights from human poly(ADP-ribose) glycohydrolase (PARG) structures with inhibitors</article-title>
        <source>Prog Biophys Mol Biol</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2021.02.002</pub-id>
        <?supplied-pmid 33636189?>
        <pub-id pub-id-type="pmid">33636189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robson</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The use of knowledge management tools in viroinformatics. Example study of a highly conserved sequence motif in Nsp3 of SARS-CoV-2 as a therapeutic target</article-title>
        <source>Comput Biol Med</source>
        <year>2020</year>
        <volume>125</volume>
        <fpage>103963</fpage>
        <pub-id pub-id-type="doi">10.1016/j.compbiomed.2020.103963</pub-id>
        <pub-id pub-id-type="pmid">32828990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2D graphics environment</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Konagurthu</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Whisstock</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Stuckey</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Lesk</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>MUSTANG: a multiple structural alignment algorithm</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>2006</year>
        <volume>64</volume>
        <fpage>559</fpage>
        <lpage>574</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.20921</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krieger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vriend</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>YASARA View—molecular graphics for all devices—from smartphones to workstations</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>2981</fpage>
        <lpage>2982</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu426</pub-id>
        <pub-id pub-id-type="pmid">24996895</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Haberland</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Reddy</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SciPy 10: fundamental algorithms for ScientificComputing in Python</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <fpage>261</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
        <pub-id pub-id-type="pmid">32015543</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8685811</article-id>
    <article-id pub-id-type="publisher-id">4519</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04519-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyKVFinder: an efficient and integrable Python package for biomolecular cavity detection and characterization in data science</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Guerra</surname>
          <given-names>João Victor da Silva</given-names>
        </name>
        <address>
          <email>joao.guerra@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ribeiro-Filho</surname>
          <given-names>Helder Veras</given-names>
        </name>
        <address>
          <email>helder.ribeiro@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jara</surname>
          <given-names>Gabriel Ernesto</given-names>
        </name>
        <address>
          <email>gabriel.jara@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bortot</surname>
          <given-names>Leandro Oliveira</given-names>
        </name>
        <address>
          <email>leandro.bortot@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pereira</surname>
          <given-names>José Geraldo de Carvalho</given-names>
        </name>
        <address>
          <email>jose.pereira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1287-8019</contrib-id>
        <name>
          <surname>Lopes-de-Oliveira</surname>
          <given-names>Paulo Sérgio</given-names>
        </name>
        <address>
          <email>paulo.oliveira@lnbio.cnpem.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.509794.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0445 080X</institution-id><institution>Brazilian Center for Research in Energy and Materials (CNPEM), </institution><institution>Brazilian Biosciences National Laboratory (LNBio), </institution></institution-wrap>R. Giuseppe Máximo Scolfaro, 10000 - Bosque das Palmeiras, Campinas, SP 13083-100 Brazil </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.411087.b</institution-id><institution-id institution-id-type="ISNI">0000 0001 0723 2494</institution-id><institution>Graduate Program in Pharmaceutical Sciences, Faculty of Pharmaceutical Sciences, </institution><institution>University of Campinas, </institution></institution-wrap>Campinas, SP Brazil </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>607</elocation-id>
    <history>
      <date date-type="received">
        <day>25</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>12</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Biomolecular interactions that modulate biological processes occur mainly in cavities throughout the surface of biomolecular structures. In the data science era, structural biology has benefited from the increasing availability of biostructural data due to advances in structural determination and computational methods. In this scenario, data-intensive cavity analysis demands efficient scripting routines built on easily manipulated data structures. To fulfill this need, we developed pyKVFinder, a Python package to detect and characterize cavities in biomolecular structures for data science and automated pipelines.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">pyKVFinder efficiently detects cavities in biomolecular structures and computes their volume, area, depth and hydropathy, storing these cavity properties in NumPy arrays. Benefited from Python ecosystem interoperability and data structures, pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, machine learning and 3D visualization in automated workflows. As proof of pyKVFinder’s capabilities, we successfully identified and compared ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins with pyKVFinder, showing its integrability with data science packages such as matplotlib, NGL Viewer, SciPy and Jupyter notebook.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">We introduce an efficient, highly versatile and easily integrable software for detecting and characterizing biomolecular cavities in data science applications and automated protocols. pyKVFinder facilitates biostructural data analysis with scripting routines in the Python ecosystem and can be building blocks for data science and drug design applications.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-021-04519-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Cavity detection</kwd>
      <kwd>Cavity characterization</kwd>
      <kwd>NumPy</kwd>
      <kwd>Python</kwd>
      <kwd>Data structure</kwd>
      <kwd>Data science</kwd>
      <kwd>Automated pipelines</kwd>
      <kwd>Molecular dynamics</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001807</institution-id>
            <institution>Fundação de Amparo à Pesquisa do Estado de São Paulo</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018/00629-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>Paulo Sérgio</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003593</institution-id>
            <institution>Conselho Nacional de Desenvolvimento Científico e Tecnológico</institution>
          </institution-wrap>
        </funding-source>
        <award-id>350244/2020-0</award-id>
        <principal-award-recipient>
          <name>
            <surname>Jara</surname>
            <given-names>Gabriel Ernesto</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par19">At present, we are going through the era of data science and the computational and structural biology fields have hugely benefited from the growing availability of biostructural data, as pointed out by [<xref ref-type="bibr" rid="CR1">1</xref>]: “Structural biology meets data science”. Advances in X-ray crystallography and electron microscopy techniques have expanded the determination of novel structures [<xref ref-type="bibr" rid="CR2">2</xref>]. In the meantime, advances in computational resources have driven the use of in silico methods to simulate the dynamics of biomolecules and carried out the implementation of artificial intelligence to model biomolecular structures [<xref ref-type="bibr" rid="CR3">3</xref>]. Together, all of this structural data provides fertile ground for data interpretation through data science or automated analysis frameworks, but data-intensive analysis asks for efficient and integrable scripting routines with an easily manipulated data structure.</p>
    <p id="Par20">In this scenario, we developed pyKVFinder, an open-source python package for cavity detection and characterization abstracted into multidimensional arrays. In proteins or other macromolecules, solvent-exposed clefts or buried cavities play a key role in ligand binding, which can ultimately regulate biological function of the macromolecule [<xref ref-type="bibr" rid="CR4">4</xref>]. For this reason, the identification and characterization of ligand-binding sites are the basis of rational structure-based drug discovery and design [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>]. pyKVFinder adopts the original geometrical grid-and-sphere-based detection method as implemented in KVFinder [<xref ref-type="bibr" rid="CR7">7</xref>], which has been improved in the latest parallel version, parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Detected cavities in parKVFinder, as in many other well-known programs, such as CavVis [<xref ref-type="bibr" rid="CR9">9</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], ConCavity [<xref ref-type="bibr" rid="CR12">12</xref>], MSpocket [<xref ref-type="bibr" rid="CR13">13</xref>] and POVME 3.0 [<xref ref-type="bibr" rid="CR14">14</xref>], are human-readable and easily displayed in molecular visualization programs, but are not properly structured to be directly scripted into automated pipelines or data science frameworks. Programming languages are constantly evolving in the data science field, with Python being one of the most popular in the community [<xref ref-type="bibr" rid="CR15">15</xref>]. However, only a few initiatives have been launched to make cavity detection programs easier to integrate into data science protocols. For instance, Cambridge Crystallographic Data Centre has licensed commercial software suites that use a Python API to integrate its structural database with workflows and third-party applications [<xref ref-type="bibr" rid="CR16">16</xref>], and one of its API modules is aimed at detecting ligand-binding cavities using the LIGSITE algorithm [<xref ref-type="bibr" rid="CR17">17</xref>]. As an open-source initiative, Biobb_vs is a Python package designed to detect and analyze cavities in automated workflows. Biobb_vs is part of BioExcel Building Blocks [<xref ref-type="bibr" rid="CR18">18</xref>] and uses fpocket to detect cavities in virtual screening pipelines. In this case, despite the interoperability achieved, the workflows depend on handling data files generated by fpocket.</p>
    <p id="Par21">To fulfill this need, pyKVFinder is wrapped into Python and, using Python’s well-established data structure (e. g., NumPy array), benefits from the language ecosystem interoperability. pyKVFinder can be integrated with third-party scientific packages and libraries for mathematical calculations, statistical analysis, and tridimensional visualization. Moreover, users can explore the functionality of pyKVFinder step-by-step using interactive interfaces, such as IPython/Jupyter notebooks. As mentioned above, one of pyKVFinder’s main contributions in data science workflows is to translate the detected cavities from tridimensional coordinates of cavity points to NumPy arrays, a data structure that allows for a wide diversity of scientific computation and efficient storage and access to N-dimensional arrays (ndarrays), also called tensors [<xref ref-type="bibr" rid="CR19">19</xref>]. Ndarrays also provide efficient ways of handling data for mathematical operations and are the popular choice of input data type for machine learning Python libraries such as scikit-learn [<xref ref-type="bibr" rid="CR20">20</xref>].</p>
    <p id="Par22">Besides conventional cavity properties such as volume and area, which are stored as Python dictionaries, pyKVFinder computes cavity depth and hydropathy. Similar to cavity points, these spatial and physicochemical properties are stored as Python ndarrays and can be visualized using Python molecular visualization widgets. Thus, pyKVFinder provides a versatile way to detect and characterize biomolecular cavities and integrate this information into data science or automated workflows.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par23">Python-C parallel KVFinder (pyKVFinder) applies a Simplified Wrapper and Interface Generator (SWIG; <ext-link ext-link-type="uri" xlink:href="http://www.swig.org/">http://www.swig.org/</ext-link>) to extend grid operations written in C to Python, a high-level programming language. pyKVFinder can be easily installed with the pip package management system. In pyKVFinder, the target biomolecule is inserted into a regular 3D grid, which is stored as an ndarray, considering the van der Waals radii of the atoms. To detect cavities, pyKVFinder uses a dual-probe algorithm that scans the biomolecular structure, as described in [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. In summary, a small probe, dubbed Probe In, and a larger probe, dubbed Probe Out, translate over the grid points, defining two molecular surfaces with different accessibility. Biomolecular cavities are defined as the non-overlapped regions between the molecular surfaces. On each detected cavity, pyKVFinder may perform spatial, depth, hydropathy and constitutional characterizations. In this workflow, C routines undergo multithreaded parallelization to speed up cavity detection and characterization, with the OpenMP API creating a user-defined number of parallel threads, where grid chunks are distributed among these threads to perform independent operations.</p>
    <sec id="Sec3">
      <title>Python package</title>
      <p id="Par24">pyKVFinder can be imported as a package in the Python environment and users can decide to run the full cavity detection and characterization workflow through the <italic>run_workflow</italic> function or run pyKVFinder functions in a stepwise fashion. At the latter, users can integrate pyKVFinder functions into third-party Python packages and benefit from interactive IPython/Jupyter notebooks. By running pyKVFinder in Python environment, users can visualize the detected cavities through the Python NGL Viewer widget [<xref ref-type="bibr" rid="CR21">21</xref>]. Still, the full workflow was also coded as a command-line interface. Either way, users have access to a full set of customizable parameters to detect and characterize biomolecular cavities. A schematic diagram of cavity detection and characterization workflow is described in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Diagram of cavity detection and characterization workflow using pyKVFinder package. The flowchart illustrates function calls and their dependencies for performing cavity detection and characterization with pyKVFinder package</p></caption><graphic xlink:href="12859_2021_4519_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par25">In the cavity detection and characterization workflow, <italic>read_vdw</italic> function reads a customizable van der Waals (vdW) radii file (<italic>.dat</italic> extension; default <italic>vdw.dat</italic>) into a nested Python dictionary, which is first indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.), and then indexed by the atom name (e. g., C, N, O, CA, etc.) to access its respective radius value. The vdW radii file defines the radius values for each atom by residue and when not defined, uses a generic value based on the atom type. The built-in file (<italic>vdw.dat</italic>) applies the vdW radii of the Amber ff99 force field [<xref ref-type="bibr" rid="CR22">22</xref>]. Afterwards, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a target PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension), respectively. The atomic data is stored in an ndarray with residue number, chain identifier, residue name, atom name, xyz coordinates and radius per atom.</p>
      <p id="Par26">To perform the cavity detection on the whole structure, the 3D grid is defined based on the target biomolecule coordinates and the user-defined parameters: grid spacing and Probe Out diameter. Thus, the grid coordinates are extracted from the atomic data ndarray, using <italic>get_vertices</italic> function that defines the grid origin and XYZ axis. The first vertex (p1) is the minimum xyz coordinates of the atomic data. The second (p2), third (p3) and fourth (p4) vertices represent the maximum coordinate along the X, Y and Z axes, respectively. Given these four vertices, the original coordinate system is transformed in the <italic>detect</italic> function, using translation and rotation, into a new coordinate system with P1 as its origin. Also, for internal calculations, the sum of the grid spacing and the Probe Out size is padded in each direction of the 3D grid. With user-defined parameters and atomic coordinates, the <italic>detect</italic> function creates and fills the 3D grids with Probe In and Probe Out probes, and compares these grids to define the biomolecular cavities, which are returned in an ndarray. In this ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), each element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (− 1).<fig id="Fig2"><label>Fig. 2</label><caption><p>Representative view of detected cavities in the pyKVFinder data structure. Based on a 3D grid (left figure), pyKVFinder detects cavities in biomolecules and returns an ndarray with dimensions (m, n, o) (right figure). Each ndarray element corresponds to cavity space (&gt; 1), empty space (1), biomolecule space (0) or bulk space (-1). Cavity properties such as depth and hydropathy are also stored in the same data structure, with ndarray elements corresponding to the property value</p></caption><graphic xlink:href="12859_2021_4519_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">Instead of performing the cavity detection on the whole structure, the search space can be set to a custom search box, called box adjustment mode. This mode is defined based on a TOML-formatted configuration file (<italic>.toml</italic> extension; Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A1), which can explicitly define the vertices coordinates or pass a list of residues of the target biomolecule to be used as reference instead of the whole structure. The box can also be drawn using parKVFinder PyMOL plugin and its coordinates can be extracted from parKVFinder parameters file. Thus, the <italic>get_vertices_from_file</italic> function loads a box configuration file and atomic data from <italic>read_pdb</italic> or <italic>read_xyz</italic> function, which returns the grid coordinates (p1, p2, p3 and p4) and selects the atoms inside the custom 3D grid with their respective atomic data. Hence, these parameters are passed to <italic>detect</italic> function, together with <italic>box_adjustment</italic> flag, to perform cavity detection on a custom 3D grid.</p>
      <p id="Par28">Either way, whole structure mode or box adjustment mode, another space segmentation method, called ligand adjustment mode, can be applied to constrain the search space around a target ligand, defined by a PDB or XYZ file (<italic>.pdb</italic> or.<italic>xyz</italic> extension). For this mode, <italic>read_pdb</italic> or <italic>read_xyz</italic> function gets the vdW dictionary and reads a ligand PDB or XYZ file and returns the ligand atomic coordinates with their respective radius that must be passed to <italic>detect</italic> function to further restrict the search space within a radius of the target ligand.</p>
    </sec>
    <sec id="Sec4">
      <title>Cavity characterization</title>
      <p id="Par29">With the ndarray of detected cavities, pyKVFinder package may perform four characterization procedures, i.e., spatial, constitutional, depth and hydropathy characterizations. The spatial characterization, using <italic>spatial</italic> function, defines the surface points in an ndarray, and estimates the volume and area of the detected cavities, following the methodology proposed in [<xref ref-type="bibr" rid="CR8">8</xref>]. The constitutional characterization, using <italic>constitutional</italic> function, defines the interface residues that surround the detected cavities, checking if the atoms of the residues are within a radius, which is the sum of the Probe In size and the atom radius. Alternatively, the <italic>constitutional</italic> function can ignore backbone contacts by enabling <italic>ignore_backbone</italic> flag. This function stores the interface residues in a Python dictionary. Using the interface residues, the <italic>calculate_frequencies</italic> function calculates the occurrence of each residue and classes of residues per cavity. The classes of amino acid residues [<xref ref-type="bibr" rid="CR23">23</xref>] are aliphatic apolar (R1), aromatic (R2), polar uncharged (R3), negatively charged (R4), positively charged (R5) and non-standard (RX) (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table A1).</p>
      <p id="Par30">The depth characterization identifies the degree of burial of the binding site. This characterization applies <italic>depth</italic> function to identify the cavity-bulk boundary by applying a spatial filter, which defines a boundary point as cavity points where at least one direct neighbor is a bulk point, marking it with the negative of the cavity integer (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). Subsequently, the depth of each cavity point is heuristically estimated by the shortest Euclidean distance between the cavity point and its respective boundary points (Eq. <xref rid="Equ1" ref-type="">1</xref>). Each cavity point is distributed among the user-defined number of threads to perform this chunk of distance calculations (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A2). With the depth of all cavity points calculated and stored as an ndarray (Fig. <xref rid="Fig2" ref-type="fig">2</xref>), the maximum and average depths are calculated for each detected cavity and returned as Python dictionaries.<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }} = \mathop {min}\limits_{j} \left[ {d\left( {p_{i} ,p_{j} } \right)} \right] = \mathop {min}\limits_{j} \left[ {\sqrt {\left( {p_{{i_{x} }} - p_{{j_{x} }} } \right)^{2} + \left( {p_{{i_{y} }} - p_{{j_{v} }} } \right)^{2} + \left( {p_{{i_{z} }} - p_{{j_{z} }} } \right)^{2} } } \right],$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:munder><mml:mfenced close="]" open="["><mml:msqrt><mml:mrow><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>y</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="12859_2021_4519_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{{D_{i} }}$$\end{document}</tex-math><mml:math id="M4"><mml:mover accent="true"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq1.gif"/></alternatives></inline-formula> is the depth of the cavity point i, <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\left( {p_{i} ,p_{j} } \right)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>d</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq2.gif"/></alternatives></inline-formula> is the Euclidean distance between points i and j, <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{i}$$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq3.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity point i, <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{j}$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4519_Article_IEq4.gif"/></alternatives></inline-formula> is the x, y, z coordinates of a cavity-bulk boundary point j.</p>
      <p id="Par31">The hydropathy characterization extracts the water attractiveness of the interface residues surrounding the binding site. This characterization uses <italic>hydropathy</italic> function at surface points detected in spatial characterization to map a target hydrophobicity scale on them. Firstly, a customizable TOML-formatted hydrophobicity scale file (<italic>.toml</italic> extension) is loaded into a Python dictionary, which is indexed by the three-letter residue code (e. g., ALA, ARG, ASH, etc.) to access the respective hydrophobicity value. With the dictionary loaded, the function identifies the nearest interface residues for each surface point and projects the residue’s hydrophobicity value onto them (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Alternatively, backbone contacts may be ignored by enabling the <italic>ignore_backbone</italic> flag. Finally, with the hydrophobicity mapped on the surface and returned as an ndarray, the average hydropathy is calculated for each detected cavity and stored in a Python dictionary. The hydrophobicity scale file defines the scale name and hydrophobicity value for each residue and, when not defined, assigns zero to the missing residues (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A3). The package contains six built-in hydrophobicity scales: Eisenberg and Weiss [<xref ref-type="bibr" rid="CR24">24</xref>], Hessa and Heijne [<xref ref-type="bibr" rid="CR25">25</xref>], Kyte and Doolittle [<xref ref-type="bibr" rid="CR26">26</xref>], Moon and Fleming [<xref ref-type="bibr" rid="CR27">27</xref>], Wimley and White [<xref ref-type="bibr" rid="CR28">28</xref>] and Zhao and London [<xref ref-type="bibr" rid="CR29">29</xref>]. Benefiting from the Python environment, users can test different scales without having to perform the cavity detection step every time. A pre-released version of hydropathy characterization has been successfully applied to compare cavities of alphavirus-related proteins [<xref ref-type="bibr" rid="CR30">30</xref>].<fig id="Fig3"><label>Fig. 3</label><caption><p>Detection and characterization of ADRP substrate-binding cavity of SARS-CoV-2 and its comparison to related coronaviruses and human macroD1 and macroD2 proteins. <bold>a</bold> Three different characterizations of the apo ADRP substrate-binding cavity of SARS-CoV-2 (PDB ID: 6WEN) using pyKVFinder. The upper panel shows the detected cavity represented as gray surface and residues surrounding it as red sticks. The cavity area and volume are displayed. The middle panel presents the same cavity colored by depth, while the bottom panel shows the cavity colored by hydropathy using Eisenberg and Weiss scale. <bold>b</bold> Conservation analysis of the ADP-ribose binding site in ADRP domain of SARS-CoV-2 (PDB ID: 6WEN, chain A), SARS-CoV (PDB ID: 2ACF, chain B), MERS-CoV (PDB ID: 5HIH, chain A), NL63 (PDB ID: 2VRI, chain A), HCoV-229E (PDB ID: 3EJG, chain A), FCoV (PDB ID: 3ETI, chain B) and human macrodomain proteins macroD1 (PDB ID: 2X47, chain A) and macroD2 (PDB ID: 6Y73, chain D) from human. These protein domains were selected using Dali and choosing homologs in apo form. The structures were realigned using MUSTANG algorithm [<xref ref-type="bibr" rid="CR39">39</xref>] from YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]. The figure presents cavity points that were detected in at least two structures and the points are colored by conservation percentage. <bold>c</bold> Hydropathy profile of the same compared cavities collected from pyKVFinder ndarrays. <bold>d</bold> Hierarchical clustering dendrogram of the frequency of residues surrounding the compared cavities. The correlation metric was used to assess the similarity and the complete method was chosen as linkage method. All the images and graphics were created inside a Jupyter notebook. To create images of tridimensional structures, we used NGL Viewer tool and to plot graphics, we used matplotlib library</p></caption><graphic xlink:href="12859_2021_4519_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par32">The cavity detection and characterization objects, from <italic>detect</italic>, <italic>spatial</italic>, <italic>constitutional</italic>, <italic>calculate_frequencies</italic>, <italic>depth</italic>, <italic>hydropathy</italic> functions, can be stored into a <italic>pyKVFinderResults</italic> class that accumulates them in its attributes. As this data structure is filled, these attributes can be exported to files through <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods. The <italic>export</italic> method writes cavities together with their surface points to a PDB-formatted file with depth values in the B-factor column, while surface points with hydropathy values in the B-factor column are written to another PDB-formatted file. The <italic>write</italic> method saves file paths, volume, area, interface residues and their frequencies, maximum and average depth, and average hydropathy in a TOML-formatted file. The <italic>plot_frequencies</italic> method plots bar charts of frequencies per cavity in a PDF file. These three methods are also wrapped in <italic>export_all</italic> method. Although we presented the full workflow, all functions explained in this section can be applied independently in a step-by-step manner. In this scenario, the <italic>export</italic>, <italic>write</italic> and <italic>plot_frequencies</italic> methods have their counterparts in the <italic>export</italic>, <italic>write_results</italic> and <italic>plot_frequencies</italic> functions of pyKVFinder package, respectively. Additionally, the <italic>read_cavity</italic> function reads a cavity file (<italic>.pdb</italic> extension), written by pyKVFinder, parKVFinder or KVFinder, and a target PDB or XYZ file (<italic>.pdb</italic> or<italic>.xyz</italic> extension), and returns an ndarray with each element corresponding to the cavity space (&gt; 1), biomolecule space (0), or bulk or empty space (− 1), similar to the output of the <italic>detect</italic> function. In this way, it allows to recharacterize a previously detected cavity or characterize a cavity with manually trimmed points.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Results and discussion</title>
    <sec id="Sec6">
      <title>Usage example</title>
      <p id="Par33">To demonstrate the use of pyKVFinder and how it benefits from the Python ecosystem, we identified the substrate-binding pocket of the ADP-ribose phosphatase (ADRP) domain of SARS-CoV-2 nsp3 protein in the apo form (PDB ID: 6WEN). Still under investigation to determine its exact functions in coronavirus life cycle, the ADRP domain recognizes ADP-ribose 1″ phosphate [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>] and seems to have an important role in virulence and innate immunity regulation to infection [<xref ref-type="bibr" rid="CR33">33</xref>–<xref ref-type="bibr" rid="CR35">35</xref>]. In this regard, recent efforts have been made to characterize ADP-ribose substrate-binding pocket and evaluate this site as a putative antiviral drug target [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>].</p>
    </sec>
    <sec id="Sec7">
      <title>Visualizing detected cavities with NGL Viewer in Jupyter notebook</title>
      <p id="Par34">pyKVFinder successfully detected the ADRP substrate-binding cavity and determined traditional cavity properties such as volume, area and residues surrounding the ADP-ribose cavity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, upper panel). For instance, we used pyKVFinder <italic>calculate_frequencies</italic> and <italic>plot_frequencies</italic> functions to determine the composition of the type of residues surrounding the cavity and plotted this composition as a bar chart (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. A4). In pyKVFinder, this step is performed using matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>], but users are free to analyze data and present results on their favorite graphing library. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, the ADP-ribose site forms a cleft sandwiched between ADRP α-helices and the main contacts involve residues from coil regions, which could possibly explain the pocket plasticity upon substrate binding [<xref ref-type="bibr" rid="CR31">31</xref>, <xref ref-type="bibr" rid="CR32">32</xref>]. These results were visualized using NGL Viewer on a Jupyter notebook; alternatively, users can use another molecular visualization tool for notebooks or load results into the parKVFinder PyMOL Plugin [<xref ref-type="bibr" rid="CR8">8</xref>].<fig id="Fig4"><label>Fig. 4</label><caption><p>Performance evaluation of the benchmarking methods for detecting the ADRP substrate-binding site. <bold>a</bold> The structures of the protein (green cartoon) at frame 30 (smallest RMSD compared to the crystallographic structure) of the ADRP domain trajectory with the corresponding cavities detected (gray surfaces) by each benchmarking method. <bold>b</bold> The total volume of the cavities detected in the ADRP substrate-binding site along the 600 ns simulation. The total volume is averaged in a window of 20 frames. The red dashed line indicates the molecular surface volume of the ADP-ribose molecule that originally occupied the ADRP substrate-binding site in the crystallographic structure (PDB ID: 6W02, chain B). <bold>c</bold> Elapsed time to detect and characterize ADRP substrate-binding site. The standard workflow of pyKVFinder, as in parKVFinder, detects cavities and applies spatial and constitutional characterizations. The full workflow of pyKVFinder comprises standard workflow with depth and hydropathy characterizations</p></caption><graphic xlink:href="12859_2021_4519_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec8">
      <title>Characterizing hydropathy and depth of cavities</title>
      <p id="Par35">We also inspected the ADRP substrate-binding cavity through other two points of view: depth and hydropathy. Those physicochemical descriptions are usually essential for drug development [<xref ref-type="bibr" rid="CR36">36</xref>]. In apo form, despite being solvent-exposed, the cavity has some internal components (red color) that can reach a more central portion of the ADRP β-sheet (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a, middle panel). The hydropathy analysis shows that the cavity core is most hydrophobic (yellow color), with some polar residues on the edges (blue color) that may contribute to the design of more specific ligands. Since pyKVFinder stores the properties to be colored in cavities in the B-factor column of a PDB-formatted file, users can easily change the style and color scheme in most of molecular visualization programs.</p>
    </sec>
    <sec id="Sec9">
      <title>Using NumPy operations to present conservation and matplotlib library to plot hydropathy distribution of cavities</title>
      <p id="Par36">In addition to SARS-CoV-2, the ADRP domain is also present in other related coronaviruses and has the macroD1 and macroD2 as homologous in humans. For this reason, we used pyKVFinder to detect the ADRP substrate-binding site in aligned ADRP domains from different species and compare their properties. Firstly, we applied arithmetic operations on the ndarrays of the detected cavities to determine the cavity conservation among the species. As observed in Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, the ADRP cavity has a core (red points) very conserved in the analyzed species which is occupied by the diphosphate and ribose of ADP and the second ribose bound to ADP in the ADRP substrate-bound form. In turn, adenosine occupies a less conserved cavity region, which may indicate that the structure of this site in some species changes to accommodate ADP-ribose substrate. To compare the cavity hydropathy across species, we plotted a hydropathy distribution from the hydropathy ndarray using the matplotlib library [<xref ref-type="bibr" rid="CR38">38</xref>] (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, left graph). The distribution clearly shows the hydrophobic characteristic of the pocket that is mostly shared between ADRP substrate-binding pockets of coronaviruses. Interestingly, the human macroD1 and macroD2 seem to shift the distribution to a less hydrophobic profile. This finding should be better evaluated, as the differences between these homologous domains that share the same substrate can contribute to the design of specific ligands for viral ADRP domains.</p>
    </sec>
    <sec id="Sec10">
      <title>Hierarchical clustering of cavity residues using SciPy package</title>
      <p id="Par37">Finally, since pyKVFinder uses native Python dictionaries to store the residues surrounding the detected cavity, we can easily tabulate the residue frequency. With this information, we performed a hierarchical clustering, an unsupervised machine learning algorithm, using the SciPy package [<xref ref-type="bibr" rid="CR41">41</xref>], and represented clusters arrangement as a dendrogram (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c, right graph). The ADRP cavity of SARS-CoV-2 grouped with that of SARS-CoV, demonstrating the high identity between these betacoronaviruses. Close to them, we can observe another betacoronavirus, MERS-CoV. On the other hand, the alphacoronaviruses NL63 and HCoV-229E and the feline FCoV are grouped together. Further away from the coronaviruses’ domains are the two human macrodomain proteins, macroD1 and D2. Despite the cavity of ADRP or macro D1/D2 sharing the same substrate, ADP-ribose, these results show that the profile of the residues surrounding these cavities follows evolutionary traces.</p>
    </sec>
    <sec id="Sec11">
      <title>Benchmarking</title>
      <p id="Par38">In addition to identifying and characterizing the ADRP substrate-binding site of SARS-CoV-2 and a set of homologous proteins, we simulated ADRP domain of SARS-CoV-2 (PDB ID: 6W02, chain B) without its ligand, ADP-ribose, for 600 ns, extracting a frame at regular intervals of 1 ns (Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Thus, we used pyKVFinder with its box adjustment mode to detect and estimate the volume of the ADP-ribose binding site throughout 600 frames of the ADRP domain’s trajectory. This analysis was repeated with other well-known software: POVME [<xref ref-type="bibr" rid="CR14">14</xref>], Biobb_vs [<xref ref-type="bibr" rid="CR18">18</xref>], MSPocket [<xref ref-type="bibr" rid="CR13">13</xref>], GHECOM [<xref ref-type="bibr" rid="CR11">11</xref>], fpocket [<xref ref-type="bibr" rid="CR10">10</xref>] and parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>]. Biobb_vs, as mentioned in the Background section, is a Python package that allow scripting, while POVME, MSpocket, GHECOM, fpocket, GHECOM and parKVFinder are command-line interfaces. A detailed description of software parameters and versions is in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p id="Par39">All these methods successfully detected the pocket of the ADRP substrate-binding site, in which the shape and volume vary slightly during the molecular dynamics simulation (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). The shape of the detected cavities defined by pyKVFinder and parKVFinder finely adjust to the original ligand in the binding site, as well as MSPocket (Fig. <xref rid="Fig4" ref-type="fig">4</xref>a) Besides that, the volume calculated by pyKVFinder (346.8 ± 78.7 Å<sup>3</sup>) and parKVFinder (346.5 ± 79.3 Å<sup>3</sup>) is closely related to the volume of ADP-ribose (351.1 Å<sup>3</sup>; molecular surface volume estimated by YASARA program [<xref ref-type="bibr" rid="CR40">40</xref>]), the ligand that originally occupied the binding site in the crystallographic structure used in the molecular dynamics simulations (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Nevertheless, the differences in the shape and volume of detected cavities derive from the methodology employed (e.g., Voronoi tessellation, alpha spheres, and grid-and-sphere), the cavity-bulk boundary definition, and the ability to segment the space. For instance, pyKVFinder, parKVFinder and POVME can segment the search space, which trims points outside this custom space, while the other methods only explore the whole structure, which includes neighboring regions at the binding site.</p>
      <p id="Par40">Besides being able to accurately detect biomolecular cavities, current software must also perform fast detection and characterizations. Thus, we also evaluated the elapsed time to execute these benchmarking methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). pyKVFinder outperformed all analyzed methods. Even when applying the newly available characterization, depth and hydropathy, pyKVFinder's elapsed time only increased 36%, still outperforming other benchmarking methods. Further, compared to its counterpart, parKVFinder, pyKVFinder was 3.3 times faster in detecting ADRP binding site. The main reason for the performance gain is the additional possibility to parallelize routines, i. e., the insertion of atoms in the 3D grid in <italic>detect</italic> function, based on ndarrays. Hence, experienced users requiring scripting routines are encouraged to use pyKVFinder due to its improved performance, while newcomers should prioritize parKVFinder due to its simplicity of installation and execution. Further, the scalability of pyKVFinder, upon increasing number of threads, follows the same behavior presented by parKVFinder [<xref ref-type="bibr" rid="CR8">8</xref>].</p>
      <p id="Par41">Despite all methods characterizing volume, each method has its own set of characterizations to be performed on the detected cavities. However, the cavities data structure is only accessible inside the Python ecosystem in pyKVFinder, which provides ndarrays and Python dictionaries. The ndarrays stores cavity points, surface points, hydropathy for each surface point and depth for each cavity point, while Python dictionaries stores volume, area, average hydropathy, maximum depth and average depth, and interface residues and their frequencies per detected cavity. Thus, users may develop new characterizations and/or analysis pipelines with these data structures.</p>
    </sec>
    <sec id="Sec12">
      <title>Future development</title>
      <p id="Par42">pyKVFinder will undergo continuous improvements and updates, according to its applications by the scientific community. In the future, pipelines will be implemented in molecular dynamics and machine learning, along with new features that are valuable to ligand-binding site characterization. Additionally, pyKVFinder aims to offload its routines to the GPU for performance enhancement in data-intensive applications.</p>
    </sec>
  </sec>
  <sec id="Sec13">
    <title>Conclusion</title>
    <p id="Par43">pyKVFinder provides an efficient and integrable Python package for cavity detection and characterization in biomolecular structures for data science and automated pipelines. In addition to fast, accurate and efficient cavity detection and characterization, pyKVFinder stores spatial and physicochemical properties in Python ndarrays, that ease scripting and data analysis. Further, pyKVFinder performance was benchmarked against well-known geometrical methods for cavity detection and characterization. Finally, we have successfully shown an application of pyKVFinder integration with matplotlib, NGL Viewer, SciPy and Jupyter notebook, that compared the ADRP substrate-binding site of SARS-CoV-2 in homologous proteins.</p>
  </sec>
  <sec id="Sec14">
    <title>Availability and requirements</title>
    <p id="Par44">
      <list list-type="bullet">
        <list-item>
          <p id="Par45"><bold>Project name:</bold> pyKVFinder</p>
        </list-item>
        <list-item>
          <p id="Par46">
            <bold>Project home page:</bold>
            <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>
          </p>
        </list-item>
        <list-item>
          <p id="Par47"><bold>Operating system(s):</bold> any supporting Python &gt;  = 3.7 (tested on Linux and macOS)</p>
        </list-item>
        <list-item>
          <p id="Par48"><bold>Programming language:</bold> Python, C</p>
        </list-item>
        <list-item>
          <p id="Par49"><bold>Other requirements:</bold> swig &gt;  = 4.0.1, toml &gt;  = 0.10.2, numpy &gt;  = 1.20.3, matplotlib &gt;  = 3.3.3</p>
        </list-item>
        <list-item>
          <p id="Par50"><bold>License:</bold> GNU General Public License v3.0</p>
        </list-item>
        <list-item>
          <p id="Par51"><bold>Any restrictions to use by non-academics:</bold> None.</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec15">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2021_4519_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> The Additional file 1 contains <bold>Table A1</bold>, <bold>Figures A1</bold>, <bold>A2</bold>, <bold>A3</bold> and <bold>A4</bold>, and a detailed description of the molecular dynamics simulation of ADRP domain of SARS-CoV-2 and the benchmarking procedure. <bold>Table A1</bold> reports the classes of amino acid residues. <bold>Figure A1</bold> shows examples of box configuration files. <bold>Figure A2</bold> shows the methodology of depth characterization. <bold>Figure A3</bold> shows the methodology of hydropathy characterization. <bold>Figure A4</bold> shows a bar chart of residues frequencies.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ADRP</term>
        <def>
          <p id="Par4">ADP-ribose phosphatase</p>
        </def>
      </def-item>
      <def-item>
        <term>CoV</term>
        <def>
          <p id="Par5">Coronavirus</p>
        </def>
      </def-item>
      <def-item>
        <term>MERS</term>
        <def>
          <p id="Par6">Middle East Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>ndarrays</term>
        <def>
          <p id="Par7">N-dimensional arrays</p>
        </def>
      </def-item>
      <def-item>
        <term>PDB</term>
        <def>
          <p id="Par8">Protein Data Bank</p>
        </def>
      </def-item>
      <def-item>
        <term>R1</term>
        <def>
          <p id="Par9">Aliphatic apolar</p>
        </def>
      </def-item>
      <def-item>
        <term>R2</term>
        <def>
          <p id="Par10">Aromatic</p>
        </def>
      </def-item>
      <def-item>
        <term>R3</term>
        <def>
          <p id="Par11">Polar uncharged</p>
        </def>
      </def-item>
      <def-item>
        <term>R4</term>
        <def>
          <p id="Par12">Negatively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>R5</term>
        <def>
          <p id="Par13">Positively charged</p>
        </def>
      </def-item>
      <def-item>
        <term>RX</term>
        <def>
          <p id="Par14">Non-standard</p>
        </def>
      </def-item>
      <def-item>
        <term>SARS</term>
        <def>
          <p id="Par15">Severe Acute Respiratory Syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>SWIG</term>
        <def>
          <p id="Par16">Simplified Wrapper and Interface Generator</p>
        </def>
      </def-item>
      <def-item>
        <term>TOML</term>
        <def>
          <p id="Par17">Tom's Obvious, Minimal Language</p>
        </def>
      </def-item>
      <def-item>
        <term>vdW</term>
        <def>
          <p id="Par18">Van der Waals</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank the Brazilian Biosciences National Laboratory (LNBio), part of the Brazilian Center for Research in Energy and Materials (CNPEM) for accessibility to the Computational Biology Laboratory (LBC).</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>JVSG, JGCP and PSLO conceptualize and design the code package structure. JVSG implemented the code. HVRF, LOB, GEJ, and JGCP tested and performed validation checks. JVSG and HVRF wrote the manuscript. LOB, GEJ, JGCP and PSLO reviewed the manuscript and provided critical revision. PSLO supervised coding steps and decisions. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Fundação de Amparo à Pesquisa do Estado de São Paulo (FAPESP) [Grant Number 2018/00629-0], Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) [Grant Number 350244/2020-0], and Brazilian Center for Research in Energy and Materials (CNPEM). None of these funding bodies provided any direct role nor influence in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>pyKVFinder source code, documentation and tutorials are available in the Python Package Index (PyPI) repository, <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/pyKVFinder">https://pypi.org/project/pyKVFinder</ext-link>, and the GitHub repository, <ext-link ext-link-type="uri" xlink:href="https://github.com/LBC-LNBio/pyKVFinder">https://github.com/LBC-LNBio/pyKVFinder</ext-link>. Documentation and tutorials are available at pyKVFinder webpage, <ext-link ext-link-type="uri" xlink:href="https://lbc-lnbio.github.io/pyKVFinder">https://lbc-lnbio.github.io/pyKVFinder</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par52">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par53">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par54">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Draizen</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>Structural biology meets data science: does anything change?</article-title>
        <source>Curr Opin Struct Biol</source>
        <year>2018</year>
        <volume>52</volume>
        <fpage>102</fpage>
        <pub-id pub-id-type="doi">10.1016/j.sbi.2018.09.003</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burley</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Bhikadiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Bi</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Di Constanzo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Protein Data Bank: the single global archive for 3D macromolecular structure data</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <fpage>D520</fpage>
        <lpage>D528</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1004</pub-id>
        <pub-id pub-id-type="pmid">30357364</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tunyasuvunakool</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Adler</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Žídek</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Highly accurate protein structure prediction for the human proteome</article-title>
        <source>Nature</source>
        <year>2021</year>
        <volume>596</volume>
        <fpage>590</fpage>
        <pub-id pub-id-type="doi">10.1038/s41586-021-03828-1</pub-id>
        <pub-id pub-id-type="pmid">34293799</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Woodward</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Edelsbrunner</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Anatomy of protein pockets and cavities: measurement of binding site geometry and implications for ligand design</article-title>
        <source>Protein Sci</source>
        <year>1998</year>
        <volume>7</volume>
        <fpage>1884</fpage>
        <lpage>1897</lpage>
        <pub-id pub-id-type="doi">10.1002/pro.5560070905</pub-id>
        <?supplied-pmid 9761470?>
        <pub-id pub-id-type="pmid">9761470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sotriffer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Klebe</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Identification and mapping of small-molecule binding sites in proteins: computational tools for structure-based drug design</article-title>
        <source>Farm</source>
        <year>2002</year>
        <volume>57</volume>
        <fpage>243</fpage>
        <lpage>251</lpage>
        <pub-id pub-id-type="doi">10.1016/S0014-827X(02)01211-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henrich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Salo-Ahen</surname>
            <given-names>OMH</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>FF</given-names>
          </name>
          <name>
            <surname>Cruciani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Wade</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Computational approaches to identifying and characterizing protein binding sites for ligand design</article-title>
        <source>J Mol Recognit</source>
        <year>2009</year>
        <volume>23</volume>
        <fpage>209</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1002/jmr.984</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oliveira</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Ferraz</surname>
            <given-names>FA</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>Xavier-Neto</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sobreira</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>de Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>KVFinder: steered identification of protein cavities as a PyMOL plugin</article-title>
        <source>BMC Bioinform</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>197</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-15-197</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>Ribeiro Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Bortot</surname>
            <given-names>LO</given-names>
          </name>
          <name>
            <surname>Honorato</surname>
            <given-names>RV</given-names>
          </name>
          <name>
            <surname>de Carvalho Pereira</surname>
            <given-names>JG</given-names>
          </name>
          <name>
            <surname>Lopes-de-Oliveira</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>ParKVFinder: a thread-level parallel approach in biomolecular cavity detection</article-title>
        <source>SoftwareX</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>100606</fpage>
        <pub-id pub-id-type="doi">10.1016/j.softx.2020.100606</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simões</surname>
            <given-names>TMC</given-names>
          </name>
          <name>
            <surname>Gomes</surname>
            <given-names>AJP</given-names>
          </name>
        </person-group>
        <article-title>CavVis—a field-of-view geometric algorithm for protein cavity detection</article-title>
        <source>J Chem Inf Model</source>
        <year>2019</year>
        <volume>59</volume>
        <fpage>786</fpage>
        <lpage>796</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.8b00572</pub-id>
        <?supplied-pmid 30629446?>
        <pub-id pub-id-type="pmid">30629446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Le Guilloux</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Schmidtke</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Tuffery</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Fpocket: an open source platform for ligand pocket detection</article-title>
        <source>BMC Bioinform</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>168</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawabata</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Detection of multiscale pockets on protein surfaces using mathematical morphology</article-title>
        <source>Proteins</source>
        <year>2010</year>
        <volume>78</volume>
        <fpage>1195</fpage>
        <lpage>1211</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.22639</pub-id>
        <?supplied-pmid 19938154?>
        <pub-id pub-id-type="pmid">19938154</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Capra</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Laskowski</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Thornton</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Funkhouser</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Predicting protein ligand binding sites by combining evolutionary sequence conservation and 3D structure</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000585</pub-id>
        <?supplied-pmid 19997483?>
        <pub-id pub-id-type="pmid">19997483</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Pisabarro</surname>
            <given-names>MT</given-names>
          </name>
        </person-group>
        <article-title>MSPocket: an orientation-independent algorithm for the detection of ligand binding pockets</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>351</fpage>
        <lpage>358</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq672</pub-id>
        <?supplied-pmid 21134896?>
        <pub-id pub-id-type="pmid">21134896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wagner</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Sørensen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hensley</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Perison</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>POVME 3.0: software for mapping binding pocket flexibility</article-title>
        <source>J Chem Theory Comput</source>
        <year>2017</year>
        <volume>13</volume>
        <fpage>4584</fpage>
        <lpage>4592</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jctc.7b00500</pub-id>
        <pub-id pub-id-type="pmid">28800393</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Raschka</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Patterson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Nolet</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Machine learning in Python: main developments and technology trends in data science, machine learning, and artificial intelligence</article-title>
        <source>Information</source>
        <year>2020</year>
        <volume>11</volume>
        <fpage>193</fpage>
        <pub-id pub-id-type="doi">10.3390/info11040193</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Groom</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Bruno</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Lightfoot</surname>
            <given-names>MP</given-names>
          </name>
          <name>
            <surname>Ward</surname>
            <given-names>SC</given-names>
          </name>
        </person-group>
        <article-title>The Cambridge structural database</article-title>
        <source>Acta Crystallogr Sect B Struct Sci Cryst Eng Mater</source>
        <year>2016</year>
        <volume>72</volume>
        <fpage>171</fpage>
        <lpage>179</lpage>
        <pub-id pub-id-type="doi">10.1107/S2052520616003954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hendlich</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rippmann</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Barnickel</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>LIGSITE: Automatic and efficient detection of potential small molecule-binding sites in proteins</article-title>
        <source>J Mol Graph Model</source>
        <year>1997</year>
        <volume>15</volume>
        <fpage>359</fpage>
        <lpage>363</lpage>
        <pub-id pub-id-type="doi">10.1016/S1093-3263(98)00002-3</pub-id>
        <pub-id pub-id-type="pmid">9704298</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andrio</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hospital</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Conejero</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Jordá</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Del Pino</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Codo</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioExcel Building Blocks, a software library for interoperable biomolecular simulation workflows</article-title>
        <source>Sci Data</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1038/s41597-019-0177-4</pub-id>
        <?supplied-pmid 31506435?>
        <pub-id pub-id-type="pmid">31506435</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature</source>
        <year>2020</year>
        <volume>585</volume>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pedregosa</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Varoquaux</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gramfort</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michel</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Thirion</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Grisel</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Scikit-learn: machine learning in Python</article-title>
        <source>J Mach Learn Res</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>2825</fpage>
        <lpage>2830</lpage>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nguyen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Case</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>AS</given-names>
          </name>
        </person-group>
        <article-title>NGLview—interactive molecular graphics for Jupyter notebooks</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>1241</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx789</pub-id>
        <pub-id pub-id-type="pmid">29236954</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cieplak</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kollman</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>How well does a restrained electrostatic potential (RESP) model perform in calculating conformational energies of organic and biological molecules?</article-title>
        <source>J Comput Chem</source>
        <year>2000</year>
        <volume>21</volume>
        <fpage>1049</fpage>
        <lpage>1074</lpage>
        <pub-id pub-id-type="doi">10.1002/1096-987X(200009)21:12&lt;1049::AID-JCC3&gt;3.0.CO;2-F</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Nelson DL, Cox MM. Lehninger principles of biochemistry, 4th edition. 2004.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eisenberg</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Weiss</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Terwilliger</surname>
            <given-names>TC</given-names>
          </name>
        </person-group>
        <article-title>The hydrophobic moment detects periodicity in protein hydrophobicity</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>1984</year>
        <volume>81</volume>
        <fpage>140</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.81.1.140</pub-id>
        <pub-id pub-id-type="pmid">6582470</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hessa</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bihlmaier</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lundin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boekel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Andersson</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recognition of transmembrane helices by the endoplasmic reticulum translocon</article-title>
        <source>Nature</source>
        <year>2005</year>
        <volume>433</volume>
        <fpage>377</fpage>
        <lpage>381</lpage>
        <pub-id pub-id-type="doi">10.1038/nature03216</pub-id>
        <pub-id pub-id-type="pmid">15674282</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kyte</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Doolittle</surname>
            <given-names>RF</given-names>
          </name>
        </person-group>
        <article-title>A simple method for displaying the hydropathic character of a protein</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>157</volume>
        <fpage>105</fpage>
        <lpage>132</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90515-0</pub-id>
        <pub-id pub-id-type="pmid">7108955</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moon</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Fleming</surname>
            <given-names>KG</given-names>
          </name>
        </person-group>
        <article-title>Side-chain hydrophobicity scale derived from transmembrane protein folding into lipid bilayers</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>2011</year>
        <volume>108</volume>
        <fpage>10174</fpage>
        <lpage>10177</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1103979108</pub-id>
        <pub-id pub-id-type="pmid">21606332</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wimley</surname>
            <given-names>WC</given-names>
          </name>
          <name>
            <surname>White</surname>
            <given-names>SH</given-names>
          </name>
        </person-group>
        <article-title>Experimentally determined hydrophobicity scale for proteins at membrane interfaces</article-title>
        <source>Nat Struct Mol Biol</source>
        <year>1996</year>
        <volume>3</volume>
        <fpage>842</fpage>
        <lpage>848</lpage>
        <pub-id pub-id-type="doi">10.1038/nsb1096-842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>London</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>An amino acid “transmembrane tendency” scale that approaches the theoretical limit to accuracy for prediction of transmembrane helices: relationship to biological hydrophobicity</article-title>
        <source>Protein Sci</source>
        <year>2006</year>
        <volume>15</volume>
        <fpage>1987</fpage>
        <lpage>2001</lpage>
        <pub-id pub-id-type="doi">10.1110/ps.062286306</pub-id>
        <pub-id pub-id-type="pmid">16877712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ribeiro-Filho</surname>
            <given-names>HV</given-names>
          </name>
          <name>
            <surname>Coimbra</surname>
            <given-names>LD</given-names>
          </name>
          <name>
            <surname>Cassago</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rocha</surname>
            <given-names>RPF</given-names>
          </name>
          <name>
            <surname>da Silva Guerra</surname>
            <given-names>JV</given-names>
          </name>
          <name>
            <surname>de Felicio</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Cryo-EM structure of the mature and infective Mayaro virus at 4.4 Å resolution reveals features of arthritogenic alphaviruses</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23400-9</pub-id>
        <?supplied-pmid 34031424?>
        <pub-id pub-id-type="pmid">34031424</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michalska</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Jedrzejczak</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Maltseva</surname>
            <given-names>NI</given-names>
          </name>
          <name>
            <surname>Stols</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Endres</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Crystal structures of SARS-CoV-2 ADP-ribose phosphatase: from the apo form to ligand complexes</article-title>
        <source>IUCrJ</source>
        <year>2020</year>
        <volume>5</volume>
        <fpage>536</fpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frick</surname>
            <given-names>DN</given-names>
          </name>
          <name>
            <surname>Virdi</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Vuksanovic</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Dahal</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Silvaggi</surname>
            <given-names>NR</given-names>
          </name>
        </person-group>
        <article-title>Molecular basis for ADP-ribose binding to the Mac1 domain of SARS-CoV-2 nsp3</article-title>
        <source>Biochemistry</source>
        <year>2020</year>
        <volume>178</volume>
        <fpage>104793</fpage>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Claverie</surname>
            <given-names>J-M</given-names>
          </name>
        </person-group>
        <article-title>A putative role of de-mono-ADP-Ribosylation of STAT1 by the SARS-CoV-2 Nsp3 protein in the cytokine storm syndrome of COVID-19</article-title>
        <source>Viruses</source>
        <year>2020</year>
        <volume>12</volume>
        <fpage>646</fpage>
        <pub-id pub-id-type="doi">10.3390/v12060646</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fehr</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Channappanavar</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Jankevicius</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fett</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Athmer</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The conserved coronavirus macrodomain promotes virulence and suppresses the innate immune response during severe acute respiratory syndrome coronavirus infection</article-title>
        <source>MBio</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1128/mBio.01721-16</pub-id>
        <?supplied-pmid 27965448?>
        <pub-id pub-id-type="pmid">27965448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Eriksson</surname>
            <given-names>KK</given-names>
          </name>
          <name>
            <surname>Cervantes-Barragán</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ludewig</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Thiel</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Mouse hepatitis virus liver pathology is dependent on ADP-Ribose-1″-Phosphatase, a viral function conserved in the alpha-like supergroup</article-title>
        <source>J Virol</source>
        <year>2008</year>
        <volume>82</volume>
        <fpage>12325</fpage>
        <lpage>12334</lpage>
        <pub-id pub-id-type="doi">10.1128/JVI.02082-08</pub-id>
        <pub-id pub-id-type="pmid">18922871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brosey</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Houl</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Katsonis</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Balapiti-Modarage</surname>
            <given-names>LPF</given-names>
          </name>
          <name>
            <surname>Bommagani</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arvai</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Targeting SARS-CoV-2 Nsp3 macrodomain structure with insights from human poly(ADP-ribose) glycohydrolase (PARG) structures with inhibitors</article-title>
        <source>Prog Biophys Mol Biol</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2021.02.002</pub-id>
        <?supplied-pmid 33636189?>
        <pub-id pub-id-type="pmid">33636189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robson</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The use of knowledge management tools in viroinformatics. Example study of a highly conserved sequence motif in Nsp3 of SARS-CoV-2 as a therapeutic target</article-title>
        <source>Comput Biol Med</source>
        <year>2020</year>
        <volume>125</volume>
        <fpage>103963</fpage>
        <pub-id pub-id-type="doi">10.1016/j.compbiomed.2020.103963</pub-id>
        <pub-id pub-id-type="pmid">32828990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunter</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Matplotlib: a 2D graphics environment</article-title>
        <source>Comput Sci Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>90</fpage>
        <lpage>95</lpage>
        <pub-id pub-id-type="doi">10.1109/MCSE.2007.55</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Konagurthu</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Whisstock</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Stuckey</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Lesk</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>MUSTANG: a multiple structural alignment algorithm</article-title>
        <source>Proteins Struct Funct Bioinform</source>
        <year>2006</year>
        <volume>64</volume>
        <fpage>559</fpage>
        <lpage>574</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.20921</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krieger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Vriend</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>YASARA View—molecular graphics for all devices—from smartphones to workstations</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>2981</fpage>
        <lpage>2982</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu426</pub-id>
        <pub-id pub-id-type="pmid">24996895</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Oliphant</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Haberland</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Reddy</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SciPy 10: fundamental algorithms for ScientificComputing in Python</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <fpage>261</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0686-2</pub-id>
        <pub-id pub-id-type="pmid">32015543</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9171953</article-id>
    <article-id pub-id-type="publisher-id">8619</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-022-08619-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MeShClust v3.0: high-quality clustering of DNA sequences using the mean shift algorithm and alignment-free identity scores</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Girgis</surname>
          <given-names>Hani Z.</given-names>
        </name>
        <address>
          <email>hani.girgis@tamuk.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.264760.1</institution-id><institution-id institution-id-type="ISNI">0000 0004 0387 0036</institution-id><institution>Bioinformatics Toolsmith Laboratory, Department of Electrical Engineering and Computer Science, </institution><institution>Texas A&amp;M University-Kingsville, </institution></institution-wrap>Kingsville, TX USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>6</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>6</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>423</elocation-id>
    <history>
      <date date-type="received">
        <day>15</day>
        <month>1</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>5</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Tools for accurately clustering biological sequences are among the most important tools in computational biology. Two pioneering tools for clustering sequences are <italic>CD-HIT</italic> and <italic>UCLUST</italic>, both of which are fast and consume reasonable amounts of memory; however, there is a big room for improvement in terms of cluster quality. Motivated by this opportunity for improving cluster quality, we applied the mean shift algorithm in <italic>MeShClust v1.0</italic>. The mean shift algorithm is an instance of unsupervised learning. Its strong theoretical foundation guarantees the convergence to the true cluster centers. Our implementation of the mean shift algorithm in <italic>MeShClust v1.0</italic> was a step forward. In this work, we scale up the algorithm by adapting an out-of-core strategy while utilizing alignment-free identity scores in a new tool: <italic>MeShClust v3.0</italic>.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We evaluated <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic>, and <italic>UCLUST</italic> on 22 synthetic sets and five real sets. These data sets were designed or selected for testing the tools in terms of scalability and different similarity levels among sequences comprising clusters. On the synthetic data sets, <italic>MeShClust v3.0</italic> outperformed the related tools on all sets in terms of cluster quality. On two real data sets obtained from human microbiome and maize transposons, <italic>MeShClust v3.0</italic> outperformed the related tools by wide margins, achieving 55%–300% improvement in cluster quality. On another set that includes degenerate viral sequences, <italic>MeShClust v3.0</italic> came third. On two bacterial sets, <italic>MeShClust v3.0</italic> was the only applicable tool because of the long sequences in these sets. <italic>MeShClust v3.0</italic> requires more time and memory than the related tools; almost all personal computers at the time of this writing can accommodate such requirements. <italic>MeShClust v3.0</italic> can estimate an important parameter that controls cluster membership with high accuracy.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">These results demonstrate the high quality of clusters produced by <italic>MeShClust v3.0</italic> and its ability to apply the mean shift algorithm to large data sets and long sequences. Because clustering tools are utilized in many studies, providing high-quality clusters will help with deriving accurate biological knowledge.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at (10.1186/s12864-022-08619-0).</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Sequence analysis</kwd>
      <kwd>DNA</kwd>
      <kwd>Clustering</kwd>
      <kwd>Alignment-free</kwd>
      <kwd>Machine learning</kwd>
      <kwd>Unsupervised learning</kwd>
      <kwd>Mean shift</kwd>
      <kwd>Software</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100010859</institution-id>
            <institution>Texas A and M University-Kingsville</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Clustering DNA sequences has broad applications in molecular biology. Clustering tools have been applied to grouping transposable elements [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>], open reading frames [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], and expressed sequence tags [<xref ref-type="bibr" rid="CR7">7</xref>–<xref ref-type="bibr" rid="CR10">10</xref>]. Cluster analysis has been utilized as a “complement” to phylogenetic analysis [<xref ref-type="bibr" rid="CR11">11</xref>]. Clustering tools have been used in identifying sub-types in a viral population [<xref ref-type="bibr" rid="CR12">12</xref>], identifying “non-reference representative sequences” needed for constructing a pangenome [<xref ref-type="bibr" rid="CR13">13</xref>], decomposing genomes [<xref ref-type="bibr" rid="CR14">14</xref>], and “assigning individuals” to operational taxonomic units using DNA barcodes [<xref ref-type="bibr" rid="CR15">15</xref>].</p>
    <p>The two most widely used clustering tools are <italic>CD-HIT</italic> [<xref ref-type="bibr" rid="CR16">16</xref>] and <italic>UCLUST</italic> [<xref ref-type="bibr" rid="CR17">17</xref>]. These pioneering tools have been utilized in thousands of studies. <italic>CD-HIT</italic> and <italic>UCLUST</italic> depend on greedy algorithms for clustering sequences and on the Needleman-Wunsch global alignment algorithm [<xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR19">19</xref>] for evaluating sequence similarity. While studying these two tools, we identified two main limitations. Because of the greedy nature of these tools, they are not guaranteed to find the optimal clusters, i.e., the true clusters. The clusters produced by <italic>CD-HIT</italic> and <italic>UCLUST</italic> are likely fragments of the true clusters. Because of the slow nature of the global alignment algorithm, the two tools cannot be applied to clustering very long sequences such as bacterial genomes.</p>
    <p>Motivated to overcome the first limitation, we proposed <italic>MeShClust v1.0</italic> [<xref ref-type="bibr" rid="CR20">20</xref>], which is based on the mean shift algorithm [<xref ref-type="bibr" rid="CR21">21</xref>]. The ability of the mean shift algorithm to find the true cluster centers is proven theoretically. There are more than 15,000 applications of the mean shift algorithm in the computer vision field [<xref ref-type="bibr" rid="CR22">22</xref>–<xref ref-type="bibr" rid="CR24">24</xref>]. Our bioinformatics field is slowly taking advantage of this powerful algorithm [<xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR25">25</xref>–<xref ref-type="bibr" rid="CR28">28</xref>]. The first adaptation of the mean shift algorithm to clustering DNA sequences resulted in clusters of better quality than those produced by <italic>CD-HIT</italic> and <italic>UCLUST</italic> [<xref ref-type="bibr" rid="CR20">20</xref>]. This adaptation is not the orthodox implementation of the mean shift algorithm. What prevented us from applying the orthodox mean shift algorithm in <italic>MeShClust v1.0</italic> is its initialization step that requires evaluating similarity between every two sequences in a data set. Such initialization step would take an impractical long time on large data sets. We are convinced that the orthodox mean shift algorithm should result in high-quality clusters. To this end, we propose a new adaptation of the mean shift algorithm that is closer to the orthodox algorithm than our earlier adaptation.</p>
    <p><italic>MeShClust v1.0</italic> overcame the first limitation of <italic>CD-HIT</italic> and <italic>UCLUST</italic>; however, it cannot be applied to very long sequences because it is assisted by a global alignment algorithm. <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, and <italic>UCLUST</italic>, utilize identity scores as the sequence similarity measure. We define an identity score of two sequences as the percentage or ratio of the number of identical nucleotides in two optimally aligned sequences to the length of the alignment. The alignment length can be longer than the length of any of the two sequences because an alignment may include gaps representing insertions and deletions. Traditionally, identity scores are produced by alignment algorithms. Recently, we have devised an efficient machine-learning-based alternative to global alignment algorithms in a tool we call <italic>Identity</italic> [<xref ref-type="bibr" rid="CR29">29</xref>]. <italic>Identity</italic> can produce pairwise identity scores efficiently and without performing any costly alignments. Taking advantage of <italic>Identity</italic>, <italic>MeShClust v3.0</italic> can cluster long sequences such as those of bacterial genomes, overcoming the second limitation.</p>
    <p>In sum, the two main contributions of <italic>MeShClust v3.0</italic> are: (i) high-quality clusters as measured by multiple quality measures including purity, Jaccard index, G-Measure, Davies-Bouldin index, Dunn index, Silhouette score, intra-cluster similarity, and inter-cluster similarity and (ii) the ability to cluster long sequences using alignment-free identity scores.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p>Here, we explain how the mean shift algorithm works. Then we propose a new out-of-core learning strategy, in which the learning algorithm is trained on separate batches of the training data consecutively, in order to scale the algorithm to large data sets.</p>
    <p>The original algorithm and the scaled-up version require a method for calculating the similarity between two sequences; in this work, we utilize identity scores. We could use the Needleman-Wunsch global alignment algorithm for calculating identity scores; however, this algorithm is quadratic and will not scale to a large number of sequences or very long sequences. Alignment-free methods are more efficient — and could be more accurate — than alignment algorithms [<xref ref-type="bibr" rid="CR30">30</xref>, <xref ref-type="bibr" rid="CR31">31</xref>]. For this reason, we utilize a machine-learning-based, alignment-free tool called <italic>Identity</italic> for predicting identity scores much faster than the Needleman-Wunsch global alignment algorithm (linear vs. quadratic).</p>
    <sec id="Sec3">
      <title>Calculating alignment-free identity scores efficiently</title>
      <p><italic>Identity</italic> is designed to work on large sequence sets and long sequences, e.g., bacterial genomes. <italic>Identity</italic> is an instance of self-supervised learning. The tool selects sequences from the input set to generate its own labeled training data. Each sequence of the selected input sequences is mutated to produce multiple similar copies with known identity scores when compared to the original sequence. The idea is that <italic>Identity</italic> keeps track of the mutations (introduced to a copy of the original sequence), each of which could change the alignment length and the number of matched nucleotides in a unique way if the original sequence and the mutated version were to be aligned. For example, introducing an insertion increases the length of the alignment by the size of the insertion and has no effect on the number of matched nucleotides. This way, the identity score can be calculated <italic>without applying an alignment algorithm</italic> by dividing the number of matches by the length of the alignment; both numbers are calculated according to the mutations introduced to the original sequence.</p>
      <p>At this point, <italic>Identity</italic> has a set of sequence pairs with their identity scores; it is ready to train itself. The training process is automatic and involves the following steps: 
<list list-type="bullet"><list-item><p>Convert each sequence to a k-mer histogram (<italic>k</italic>=⌈log4average length of training sequences⌉−1).</p></list-item><list-item><p>Calculate a set of single statistics (Manhattan, Euclidean, <italic>χ</italic><sup>2</sup>, Chebyshev, Hamming, Minkowski, Cosine, Correlation, Bray Curtis, Squared chord, Hellinger, Jeffrey divergence, Intersection, Kulczynski 1, Kulczynski 2, Covariance, Harmonic mean, Similarity ratio, SimMM, <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$D_{2}^{S}$\end{document}</tex-math><mml:math id="M2"><mml:msubsup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq1.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$D_{2}^{*}$\end{document}</tex-math><mml:math id="M4"><mml:msubsup><mml:mrow><mml:mi>D</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq2.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR32">32</xref>]) on each pair of histograms representing an original-mutated sequence pair; take the square of each statistic to produce squared statistics; multiply every unique pair of statistics (single or squared) to produce paired statistics.</p></list-item><list-item><p>Select a subset of these statistics (single, squared, and paired) using the best-first algorithm [<xref ref-type="bibr" rid="CR33">33</xref>].</p></list-item><list-item><p>Train a general linear model on the selected statistics, resulting in a weight for each selected statistic.</p></list-item></list></p>
      <p>
        <graphic position="anchor" xlink:href="12864_2022_8619_Figa_HTML" id="MO4"/>
      </p>
      <p>Now, <italic>Identity</italic> is ready to predict the identity score of any sequence pair in an input data set. Two sequences are converted to two k-mer histograms, on both of which the selected statistics are calculated. The identity score is calculated as the weighted sum of the statistics.</p>
      <p><italic>Identity</italic> has an option to skip a sequence pair if it is impossible to produce a desired minimum identity score. A sequence pair is skipped if (i) the length ratio (length of short sequence ÷ length of long sequence) is less than the desired identity score or (ii) their monomer potential (Eq. <xref rid="Equ1" ref-type="">1</xref>) is less than the desired threshold score. 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Potential(h_{1}, h_{2}) =\frac{\sum\limits_{b \in \{A,C,G,T\}} \min(h_{1}(b), h_{2}(b))}{\max(l_{1}, l_{2})}  $$ \end{document}</tex-math><mml:math id="M6"><mml:mtext mathvariant="italic">Potential</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:munder><mml:mo>min</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>b</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>b</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>max</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Here, <italic>h</italic><sub>1</sub> and <italic>h</italic><sub>2</sub> are monomer histograms (counts of A, C, G, and T) of two sequences, and <italic>l</italic><sub>1</sub> and <italic>l</italic><sub>2</sub> are the lengths of the two sequences. This equation is similar to the one applied in the MUSCLE program [<xref ref-type="bibr" rid="CR34">34</xref>]. We apply it in <italic>Identity</italic> to monomer histograms, whereas it is applied to k-mer histograms in MUSCLE.</p>
      <p>Note that the user is not required to provide labeled training data; <italic>Identity</italic> generates its own training data from the input sequences. Further, the training process is repeated on each input sequence set; the process is automatic and does not require any involvement from the user. Next, the mean shift clustering algorithm utilizes <italic>Identity</italic> for calculating pairwise identity scores.</p>
    </sec>
    <sec id="Sec4">
      <title>Clustering few thousands of sequences</title>
      <p>The original mean shift algorithm — without any modifications — can cluster 25K–45K sequences in reasonable time using memory available on personal computers. The algorithm is iterative and consists of four steps. The first step is executed only once, but the second, third, and fourth steps are executed many times until the algorithm converges. Algorithm 1 outlines the mean-shift algorithm as it is applied to nucleotide sequences. Input sequences are converted to k-mer histograms (k is determined the same way as in <italic>Identity</italic>), on which the algorithm performs the following steps: 
<list list-type="bullet"><list-item><p>Step 1: <bold>Initialize</bold>. Every k-mer histogram is treated as a center of a one-member cluster.</p></list-item><list-item><p>Step 2: <bold>Shift</bold>. A new mean for each cluster is computed as the average of sequences (k-mer histograms) that have identity scores with the center of the cluster above or equal to a threshold score (provided by the user or estimated automatically).</p></list-item><list-item><p>Step 3: <bold>Merge</bold>. Centers whose identity scores are greater than or equal to the threshold identity score are merged. We keep the center that represents the mean of the largest number of histograms.</p></list-item><list-item><p>Step 4: <bold>Represent</bold>. The mean of each cluster is represented, i.e., replaced, by the sequence (k-mer histogram) with the highest identity score.</p></list-item></list></p>
      <p>Steps 2–4 are repeated until the algorithm converges. Note that Step 3 and Step 4 are reversed when clustering degenerate sequences (≤70<italic>%</italic> identity score); this way, the merging step is performed on k-mer histograms of real sequences not on the means of degenerate sequences. Convergence occurs when the number of iterations is reached or the number of clusters does not change in two consecutive iterations.</p>
      <p>Once the algorithm converges, we have centers — but no clusters yet. Input sequences are re-read. Each sequence is assigned to the center that has the highest identity score with it.</p>
    </sec>
    <sec id="Sec5">
      <title>Clustering hundreds of thousands of sequences</title>
      <p>Running the original mean shift algorithm on a large data set would take impractically long time because of the initialization step. In the original algorithm, each sequence is treated as the center of a one-member cluster in the initialization step. Then the identity score of every two centers is calculated. This step is quadratic with respect to the number of sequences in a data set — very slow on very large data sets. To make the issue clear, consider a data set consisting of 1,000,000 sequences. The initialization step requires 499,999,500,000 sequence comparisons. Calculating this huge number of identity scores — even with an efficient tool such as <italic>Identity</italic> — takes approximately one day. Keep in mind that this number of sequence comparisons is required in the first step only, and more sequence comparisons will be performed in subsequent steps.</p>
      <p>To circumvent this limitation, we propose an out-of-core learning adaptation to the original mean shift algorithm. In out-of-core learning, the learning algorithm (the mean shift clustering algorithm here) is trained on batch by batch instead of the entire data set [<xref ref-type="bibr" rid="CR35">35</xref>]. The large-scale mean shift algorithm requires multiple passes through the data.</p>
      <p>To allow the algorithm to work on batch by batch, Step 2 (the mean-shift step) needs to be modified. The algorithm keeps track of how many sequences (k-mer histograms) contributed to each center. In the modified Step 2, the new mean is calculated as the weighted average of the old mean and new sequences. For example, suppose that 80 sequences contributed to a center after the algorithm had run on some batches. While processing the next batch, 20 sequences were similar to the center (their identity scores with the center were above or equal to the threshold score). The new mean is the weighted average of the old mean (weight: 80/100 = 0.80) and each of the new 20 sequences (weight: 1/100 = 0.01). Once the new mean is computed, the number of sequences contributing to the mean is updated to 100 (80 + 20).</p>
      <p>We outline the first data pass of the out-of-core mean shift algorithm in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. To begin, a batch of the input sequences is read. Once the first batch is read, the four steps of the original mean shift algorithm are executed until convergence. Sequences that do not belong to any cluster of size greater than one — we call them singles — are kept in a reservoir. After that, a new batch is read. The algorithm is initialized using the centers found in the previous batch(es), i.e., no new centers are introduced. Steps 2–4 are executed on the new batch one time. Next, singles found in the new batch are added to the reservoir. After processing a batch, <italic>MeShClust v3.0</italic> checks to see if enough (more than the batch size) sequences have been accumulated in the reservoir. If yes, sequences in the reservoir are shuffled; a new instance of the mean shift algorithm is executed on a batch obtained from the reservoir — not from the input file. This instance is initialized according to the original algorithm, i.e., every sequence represents the center of a one-member cluster. It is run until convergence. Centers found in this batch are added to the main mean shift instance. Some of the centers found in the reservoir batch may be merged with some of the centers found so far; others are new centers. To fill the reservoir faster, the number of sequences to read increases adaptively by a factor equal to the batch size (25,000 is the default) divided by the number of singles found in the previous sequences. The increase is limited by a maximum of four times, i.e., the maximum number of sequences that can be read when using the default batch size is 100,000 sequences. These steps are repeated until all sequences in the input file are processed and the reservoir is empty.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of the first data pass. <italic>MeShClust v3.0</italic> is based on the mean shift algorithm, which is an instance of unsupervised learning. The scaled-up <italic>MeShClust v3.0</italic> is also an instance of out-of-core learning [<xref ref-type="bibr" rid="CR35">35</xref>], in which the learning algorithm is trained on separate batches of the training data consecutively. The algorithm requires multiple passes through the input data. In the first data pass, the tool reads a batch of input sequences. Then the mean shift algorithm (all of the four steps) is run on the batch until convergence. Sequences that cannot be assigned to any center are kept in the reservoir. Next, a new batch is read. The main mean shift is run on this batch but without the initialization step and for one iteration only, i.e., already found centers are shifted and merged on the new batch and no new centers are discovered. Sequences that cannot be assigned to any of the centers are added to the reservoir. When the reservoir has enough sequences (more than the batch size), sequences in it are shuffled and a batch of them is clustered using an independent instance of the mean shift algorithm. This instance is run until convergence. The resulting centers (if any) are merged with the centers accumulated by the main mean shift. This procedure is repeated until all sequences are read and the reservoir is empty. In subsequent passes, the algorithm rereads input sequences batch by batch. The main mean shift algorithm is run for one iteration on each batch. If the number of clusters does not change during a pass, the algorithm converges. In the final data pass, all sequences are reread batch by batch, and each sequence is assigned to the cluster with the closest center to it</p></caption><graphic xlink:href="12864_2022_8619_Fig1_HTML" id="MO1"/></fig></p>
      <p>In subsequent data passes, input sequences are re-read batch by batch. Steps 2–4 are executed once on each batch. Singles are <italic>not</italic> added to the reservoir. If the number of centers does not change in a data pass, the algorithm converges.</p>
      <p>In the final data pass, input sequences are re-read batch by batch. Each sequence is assigned to the cluster with the closest center to it.</p>
      <p>Overall, the first data pass is for discovering centers, the subsequent passes are for fine-tuning them, and the final pass is for forming clusters.</p>
      <p>This adaptation was motivated by the need to reduce the number of sequence comparisons at the initialization step. The number of sequence comparisons required for the initialization step on a 25K-sized batch is 312,487,500. <italic>Identity</italic> can calculate these scores in a matter of seconds or minutes — not a day as it is the case if the original algorithm was to be applied. The rational is that a sequence that belongs to one of the already found clusters does not need to form its own cluster because this cluster would merge with the already-found cluster. Further, in a data set that has a smaller number of clusters than the batch size, most of the clusters could be found by running the mean shift on the first batch. In case some of the clusters are missed, we accumulate singles in the reservoir. Then, sequences in the reservoir are clustered independently to find any clusters that could have been missed.</p>
    </sec>
    <sec id="Sec6">
      <title>Estimating the threshold score</title>
      <p>One advantage of <italic>MeShClust v3.0</italic> is that the user may choose not to provide a threshold score. In this case, the tool determines the threshold score from input data automatically. The idea is that for a sequence to belong to a cluster, its identity score with the center must be greater than or equal to the threshold score. If we assume that any sequence may represent the center of a cluster and the smallest cluster consists of five sequences, then the threshold score is approximately equal to the maximum identity score between the center and any of the other four members.</p>
      <p>To determine the maximum center-member identity score, <italic>MeShClust v3.0</italic> reads 10,000 sequences. It calculates all-versus-all identity scores on these sequences using <italic>Identity</italic>. For each sequence, the highest four identity scores are collected.</p>
      <p>If the size of the input data set is smaller than 10,000, the threshold score is estimated to be the mean minus three times the standard deviation. Assuming that these scores are normally distributed, this threshold score should cover 99.9% of the data. If the size of the input data set is greater than 10,000, the collected scores are clustered into two groups. One group should represent scores of sequences that belong to clusters. The other group should represent sequences that do not belong to clusters; this case is possible if the data include noise or the batch analyzed is smaller than the entire input. <italic>MeShClust v3.0</italic> utilizes the k-means clustering algorithm with a k value of 2. Assuming that the percentage of noisy scores is small, the cluster with the smallest number of points is removed. The estimated threshold, <italic>t</italic>, is determined by Eq. <xref rid="Equ2" ref-type="">2</xref>. 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  t = \mu_{l} - f \times \sigma_{l}  $$ \end{document}</tex-math><mml:math id="M8"><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>f</mml:mi><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Here, <italic>μ</italic><sub><italic>l</italic></sub> and <italic>σ</italic><sub><italic>l</italic></sub> are the mean and the standard deviation of the large cluster, and <italic>f</italic> is determined according to the ratio of the batch size to the input size. 
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ f = \left\{ \begin{array}{rl} 2 &amp; ratio &gt; 0.25\\ 1 &amp; ratio &gt; 0.05 and ratio \leq 0.25\\ 0 &amp; ratio \le 0.05\\ \end{array} \right.  $$ \end{document}</tex-math><mml:math id="M10"><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable class="array" columnalign="left"><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd><mml:mtd><mml:mtext mathvariant="italic">ratio</mml:mtext><mml:mo>&gt;</mml:mo><mml:mn>0.25</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mtext mathvariant="italic">ratio</mml:mtext><mml:mo>&gt;</mml:mo><mml:mn>0.05</mml:mn><mml:mtext mathvariant="italic">andratio</mml:mtext><mml:mo>≤</mml:mo><mml:mn>0.25</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mtext mathvariant="italic">ratio</mml:mtext><mml:mo>≤</mml:mo><mml:mn>0.05</mml:mn></mml:mtd></mml:mtr><mml:mtr/></mml:mtable></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>This estimation procedure is repeated three times (if the input data are large enough) using a new batch each time; the median threshold is selected.</p>
    </sec>
    <sec id="Sec7">
      <title>Related tools</title>
      <p>We compared the performance of our tool to those of <italic>CD-HIT</italic> [<xref ref-type="bibr" rid="CR16">16</xref>], <italic>MeShClust v1.0</italic> [<xref ref-type="bibr" rid="CR20">20</xref>], and <italic>UCLUST</italic> [<xref ref-type="bibr" rid="CR17">17</xref>]. <italic>CD-HIT</italic> was run with -M with a value of 0, -G with a value of 1, -d with a value of 0, -T with a value of 16, and -c with a value of the desired threshold score. If the threshold identity score is between 60% and 50%, the -t parameter was used with a value of 3. When the threshold identity score is less than 50%, the -n parameter was used with a value of 3. <italic>MeShClust v1.0</italic> was run with the “threads” parameter with a value of 16. For <italic>UCLUST</italic>, the usearch program was executed with -cluster_fast, -id with a value of the desired threshold score, -sort with a value of “length”, and -threads with a value of 16. <italic>MeShClust v3.0</italic> was run with -t with a value of the desired threshold score. In the experiments where <italic>MeShClust v3.0</italic> estimated the threshold score itself, it was run without any parameters. <italic>MeShClust v3.0</italic> determines the number of threads automatically as the number of hyper-threads available on a computer, i.e., <italic>MeShClust v3.0</italic> utilized 16 threads.</p>
    </sec>
    <sec id="Sec8">
      <title>Evaluation computer</title>
      <p>All experiments were conducted on a computer with 8 cores/16 hyper-threads (16 Megabyte Cache and 3.6 Ghz), Nvidia Quadro RTX 4000 graphic card, 64 Gigabyte (GB) of RAM, 1-TB solid state disk, two 2-TB hard disk drives, and Ubuntu 18.04 as the operating system.</p>
    </sec>
    <sec id="Sec9">
      <title>Data</title>
      <p>To evaluate <italic>MeShClust v3.0</italic> and the related tools, we collected real sequences and generated synthetic ones.</p>
      <p><bold>Real Data:</bold> Five real data sets were utilized in this work. These data sets represent bacterial genomes, viral genomes, the 16S rRNA gene of the human microbiome [<xref ref-type="bibr" rid="CR36">36</xref>] (European Nucleotide Archive, accession number: ERA000159), and Long Terminal Repeats (LTRs) of maize retrotransposons. The viral set was obtained from viruSITE [<xref ref-type="bibr" rid="CR37">37</xref>] (Supplementary data set 9 of [<xref ref-type="bibr" rid="CR20">20</xref>]). All bacterial genomes were downloaded from the National Center for Biotechnology Information. Table <xref rid="Tab1" ref-type="table">1</xref> shows statistics on these data sets.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Statistics of the real data sets. The 14-bacterial-species data set includes 14 clusters. The viral set includes 9 clusters. Cluster counts in the bacterial, maize LTRs, and human microbiome sets are unknown</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Sequence count</th><th align="left">Total length</th><th align="left">Maximum length</th><th align="left">Minimum length</th><th align="left">Mean length</th><th align="left">Median length</th></tr></thead><tbody><tr><td align="left">14 bacterial species</td><td align="left">1,328</td><td align="left">4,256,374,969</td><td align="left">9,270,175</td><td align="left">801,203</td><td align="left">3,205,102</td><td align="left">2,874,351</td></tr><tr><td align="left">Bacterial</td><td align="left">10,562</td><td align="left">38,577,794,947</td><td align="left">16,040,666</td><td align="left">112,031</td><td align="left">3,652,509</td><td align="left">3,647,501</td></tr><tr><td align="left">LTRs</td><td align="left">253,224</td><td align="left">346,337,915</td><td align="left">5,999</td><td align="left">100</td><td align="left">1,368</td><td align="left">1,187</td></tr><tr><td align="left">Microbiome</td><td align="left">1,071,335</td><td align="left">269,374,512</td><td align="left">372</td><td align="left">171</td><td align="left">251</td><td align="left">256</td></tr><tr><td align="left">Viral</td><td align="left">96</td><td align="left">635,979</td><td align="left">13,246</td><td align="left">2,605</td><td align="left">6,625</td><td align="left">7,458</td></tr></tbody></table></table-wrap></p>
      <p><bold>Synthetic Data:</bold> One of the advantages of using synthetic data sets is that we know the true clusters and their true centers. We generated 22 <italic>training</italic> data sets, on which we trained and optimized <italic>MeShClust v3.0</italic>, and additional 22 <italic>testing</italic> data sets, on which we evaluated our tool and the related ones. Table <xref rid="Tab2" ref-type="table">2</xref> shows the statistics of the training data sets. The testing data sets have very similar statistics to the training ones (data are not shown). To generate a data set, a number of random sequences — templates — are synthesized. These templates may represent the true cluster centers. The length of each template is chosen at random between a minimum length and a maximum length. To reduce the chance of generating intersecting clusters, identity scores among all templates in the same data set are at most 10% less than the provided threshold score that determines cluster membership. A random number (between a minimum and a maximum) of mutated copies are generated from each template by introducing single-point mutations and block mutations to a copy of a template. These mutated copies are generated using the module that generates training data for <italic>Identity</italic> [<xref ref-type="bibr" rid="CR29">29</xref>]. All mutated copies generated from the same template have identity scores with the template greater than or equal to the provided threshold score. Each of the small data sets (Short-X, Medium-X, and Long-X) includes 100 clusters and less than 25,000 sequences. Each of the large data sets (Numerous-X) includes 5,000 clusters and about one million sequences.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Statistics of the synthetic training data sets. To construct a synthetic data set, a specific number of template random sequences are synthesized. The length of a template is chosen at random between minimum and maximum lengths. A random number (between minimum and maximum numbers) of mutated copies are generated from each template. All clusters in the same data set have the same minimum identity score. For example, members comprising the clusters of the Short-97 data set are 97.00–99.99% identical to the templates, from which these members were generated. Identity scores among templates in the same data set are at most 10% less than the provided minimum identity score. Length is measured in base pairs (bp)</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Template avg. length (bp)</th><th align="left">Template min. length (bp)</th><th align="left">Template max. length (bp)</th><th align="left">Cluster avg. size</th><th align="left">Cluster min. size</th><th align="left">Cluster max. size</th><th align="left">Cluster count</th><th align="left">Sequence count</th></tr></thead><tbody><tr><td align="justify">Short-97</td><td align="justify">288</td><td align="justify">202</td><td align="justify">396</td><td align="justify">202</td><td align="justify">12</td><td align="justify">400</td><td align="justify">100</td><td align="justify">20,195</td></tr><tr><td align="justify">Short-95</td><td align="justify">307</td><td align="justify">200</td><td align="justify">400</td><td align="justify">177</td><td align="justify">5</td><td align="justify">400</td><td align="justify">100</td><td align="justify">17,734</td></tr><tr><td align="justify">Short-90</td><td align="justify">298</td><td align="justify">204</td><td align="justify">399</td><td align="justify">199</td><td align="justify">9</td><td align="justify">400</td><td align="justify">100</td><td align="justify">19,877</td></tr><tr><td align="justify">Short-80</td><td align="justify">302</td><td align="justify">200</td><td align="justify">400</td><td align="justify">204</td><td align="justify">6</td><td align="justify">392</td><td align="justify">100</td><td align="justify">20,423</td></tr><tr><td align="justify">Short-70</td><td align="justify">299</td><td align="justify">205</td><td align="justify">400</td><td align="justify">202</td><td align="justify">7</td><td align="justify">395</td><td align="justify">100</td><td align="justify">20,230</td></tr><tr><td align="justify">Short-60</td><td align="justify">304</td><td align="justify">200</td><td align="justify">399</td><td align="justify">195</td><td align="justify">9</td><td align="justify">395</td><td align="justify">100</td><td align="justify">19,539</td></tr><tr><td align="justify">Medium-97</td><td align="justify">1,394</td><td align="justify">752</td><td align="justify">1,998</td><td align="justify">192</td><td align="justify">13</td><td align="justify">390</td><td align="justify">100</td><td align="justify">19,215</td></tr><tr><td align="justify">Medium-95</td><td align="justify">1,358</td><td align="justify">750</td><td align="justify">1,968</td><td align="justify">203</td><td align="justify">7</td><td align="justify">396</td><td align="justify">100</td><td align="justify">20,315</td></tr><tr><td align="justify">Medium-90</td><td align="justify">1,405</td><td align="justify">759</td><td align="justify">1,977</td><td align="justify">194</td><td align="justify">5</td><td align="justify">400</td><td align="justify">100</td><td align="justify">19,393</td></tr><tr><td align="justify">Medium-80</td><td align="justify">1,434</td><td align="justify">760</td><td align="justify">2,000</td><td align="justify">222</td><td align="justify">14</td><td align="justify">398</td><td align="justify">100</td><td align="justify">22,208</td></tr><tr><td align="justify">Medium-70</td><td align="justify">1,345</td><td align="justify">768</td><td align="justify">1,999</td><td align="justify">212</td><td align="justify">8</td><td align="justify">398</td><td align="justify">100</td><td align="justify">21,184</td></tr><tr><td align="justify">Medium-60</td><td align="justify">1,387</td><td align="justify">771</td><td align="justify">1,993</td><td align="justify">202</td><td align="justify">13</td><td align="justify">398</td><td align="justify">100</td><td align="justify">20,211</td></tr><tr><td align="justify">Long-97</td><td align="justify">2,677</td><td align="justify">1,520</td><td align="justify">3,983</td><td align="justify">210</td><td align="justify">5</td><td align="justify">398</td><td align="justify">100</td><td align="justify">20,994</td></tr><tr><td align="justify">Long-95</td><td align="justify">2,611</td><td align="justify">1,508</td><td align="justify">3,959</td><td align="justify">206</td><td align="justify">10</td><td align="justify">400</td><td align="justify">100</td><td align="justify">20,565</td></tr><tr><td align="justify">Long-90</td><td align="justify">2,677</td><td align="justify">1,530</td><td align="justify">3,969</td><td align="justify">196</td><td align="justify">5</td><td align="justify">400</td><td align="justify">100</td><td align="justify">19,622</td></tr><tr><td align="justify">Long-80</td><td align="justify">2,859</td><td align="justify">1,528</td><td align="justify">3,990</td><td align="justify">194</td><td align="justify">5</td><td align="justify">398</td><td align="justify">100</td><td align="justify">19,424</td></tr><tr><td align="justify">Long-70</td><td align="justify">2,830</td><td align="justify">1,512</td><td align="justify">3,993</td><td align="justify">224</td><td align="justify">19</td><td align="justify">399</td><td align="justify">100</td><td align="justify">22,396</td></tr><tr><td align="justify">Long-60</td><td align="justify">2,630</td><td align="justify">1,519</td><td align="justify">3,977</td><td align="justify">207</td><td align="justify">7</td><td align="justify">398</td><td align="justify">100</td><td align="justify">20,699</td></tr><tr><td align="justify">Numerous-97</td><td align="justify">272</td><td align="justify">171</td><td align="justify">372</td><td align="justify">203</td><td align="justify">5</td><td align="justify">400</td><td align="justify">5,000</td><td align="justify">1,012,543</td></tr><tr><td align="justify">Numerous-95</td><td align="justify">272</td><td align="justify">171</td><td align="justify">372</td><td align="justify">203</td><td align="justify">5</td><td align="justify">400</td><td align="justify">5,000</td><td align="justify">1,012,528</td></tr><tr><td align="justify">Numerous-90</td><td align="justify">271</td><td align="justify">171</td><td align="justify">372</td><td align="justify">204</td><td align="justify">5</td><td align="justify">400</td><td align="justify">5,000</td><td align="justify">1,018,681</td></tr><tr><td align="justify">Numerous-80</td><td align="justify">271</td><td align="justify">171</td><td align="justify">372</td><td align="justify">203</td><td align="justify">5</td><td align="justify">400</td><td align="justify">5,000</td><td align="justify">1,016,997</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec10">
      <title>Evaluation measures</title>
      <p>A number of criteria for evaluating the results of clustering algorithms have been proposed (<ext-link ext-link-type="uri" xlink:href="https://en.wikipedia.org/wiki/Cluster_analysis">https://en.wikipedia.org/wiki/Cluster_analysis</ext-link>). Some criteria are applicable when the true clusters are known, other criteria are applicable when the true clusters are unknown, and others are applicable when the true clusters are available or unavailable.</p>
      <p><bold>Criteria for known true clusters:</bold> All (or the majority of) sequences in a good, predicted cluster should come from one real cluster. The purity criterion measures the mixing extent of sequences comprising a predicted cluster (Eq. <xref rid="Equ4" ref-type="">4</xref>). 
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  purity = \frac{1}{m} \sum\limits_{p \in P} \max_{t \in T} |p \cap t|  $$ \end{document}</tex-math><mml:math id="M12"><mml:mtext mathvariant="italic">purity</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:mfrac><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:munder><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>∩</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Here, <italic>m</italic> in the number of sequences comprising predicted clusters of size two or more, <italic>P</italic> is the set of predicted clusters, and <italic>T</italic> is the set of true clusters. The higher the purity, the better.</p>
      <p>Jaccard index compares the number of sequences common to a predicted cluster and a real cluster (i.e., the intersection of the two clusters) to the total number of unique sequences found in both clusters (i.e., the union of the two clusters). Equation <xref rid="Equ5" ref-type="">5</xref> describes how the Jaccard index is calculated. Perfect clustering results have a Jaccard score of 1. 
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Jaccard = \frac{1}{|P|} \sum\limits_{p \in P} \max_{t \in T} \frac{|p \cap t|}{|p \cup t|}  $$ \end{document}</tex-math><mml:math id="M14"><mml:mtext mathvariant="italic">Jaccard</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>∩</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>∪</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The G-Measure [<xref ref-type="bibr" rid="CR38">38</xref>] is similar to the Jaccard index. It compares the number of common sequences to a predicted cluster and a real cluster to the size of each cluster separately (Eq. <xref rid="Equ6" ref-type="">6</xref>). Perfect clustering results have a G-Measure score of 1. 
<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  G-Measure = \frac{1}{|P|} \sum\limits_{p \in P} \max_{t \in T} \sqrt{\frac{|p \cap t|}{|p|} \times \frac{|p \cap t|}{|t|}}  $$ \end{document}</tex-math><mml:math id="M16"><mml:mi>G</mml:mi><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">Measure</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:munder><mml:msqrt><mml:mrow><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>∩</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:mo>×</mml:mo><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>∩</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>t</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:msqrt></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>To look at these three criteria simultaneously, we define a new criterion called cluster quality for known clusters which is the harmonic mean of purity, Jaccard index, and G-Measure (Eq. <xref rid="Equ7" ref-type="">7</xref>). 
<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Cluster quality = \frac{3}{\frac{1}{purity} + \frac{1}{Jaccard} + \frac{1}{\scriptsize{{G-Measure}}}}  $$ \end{document}</tex-math><mml:math id="M18"><mml:mtext mathvariant="italic">Clusterquality</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">purity</mml:mtext></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">Jaccard</mml:mtext></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">Measure</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The harmonic mean is usually suitable to averaging rates that have the same range.</p>
      <p><bold>Criteria for unknown true clusters:</bold> In high-quality clustering, a cluster is desired to be compact and as far as possible from its neighbors to maximize separation. For each cluster, Davies-Bouldin index [<xref ref-type="bibr" rid="CR39">39</xref>] evaluates the closest most-scattered cluster (Eq. <xref rid="Equ8" ref-type="">8</xref>). 
<disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Davies-Bouldin = \frac{1}{|P|} \sum\limits_{i=1}^{|P|} \max_{i \neq j} \left(\frac{s_{i} + s_{j}}{d_{ij}} \right)  $$ \end{document}</tex-math><mml:math id="M20"><mml:mtext mathvariant="italic">Davies</mml:mtext><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">Bouldin</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>P</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:munderover><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:mfenced close=")" open="("><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ij</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Here, <italic>s</italic><sub><italic>i</italic></sub> measures the scatter of members of cluster <italic>i</italic> as the average distance between a member and the cluster center; <italic>d</italic><sub><italic>i</italic><italic>j</italic></sub> measures the separation between clusters <italic>i</italic> and <italic>j</italic> as the distance between their centers. The lower the Davies-Bouldin score, the better.</p>
      <p>Dunn index [<xref ref-type="bibr" rid="CR40">40</xref>] takes into account clusters’ scatter and separation. This index is calculated as the ratio of the distance between the closest two clusters in a data set to the maximum scatter (Eq. <xref rid="Equ9" ref-type="">9</xref>). The higher the Dunn score, the better. 
<disp-formula id="Equ9"><label>9</label><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Dunn = \frac{ \min\limits_{i,j, i \neq j} d_{i,j} }{ \max\limits_{i} s_{i} }  $$ \end{document}</tex-math><mml:math id="M22"><mml:mtext mathvariant="italic">Dunn</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munder><mml:mrow><mml:mo>min</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>≠</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The Silhouette [<xref ref-type="bibr" rid="CR41">41</xref>] criterion compares the placement of a sequence in a cluster to the placement of the same sequence in the closest neighbor cluster (<xref rid="Equ10" ref-type="">10</xref>). 
<disp-formula id="Equ10"><label>10</label><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  Silhouette = \frac{1}{m} \sum\limits_{i}^{m} \frac{ x_{ni} - x_{ci}}{max(x_{ni}, x_{ci})}  $$ \end{document}</tex-math><mml:math id="M24"><mml:mtext mathvariant="italic">Silhouette</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ni</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ci</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">max</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ni</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ci</mml:mtext></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12864_2022_8619_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Here, <italic>m</italic> is the number of sequences in a data set; <italic>x</italic><sub><italic>c</italic><italic>i</italic></sub> is the distance between the <italic>i</italic><sup><italic>t</italic><italic>h</italic></sup> sequence and the center of its own cluster and <italic>x</italic><sub><italic>n</italic><italic>i</italic></sub> is the distance between the <italic>i</italic><sup><italic>t</italic><italic>h</italic></sup> sequence and the center of the closest neighboring cluster. Silhouette scores are between -1 (the worst score) and 1 (the best score). In our calculation of Silhouette scores, the neighbor cluster is determined for an entire cluster — not for each sequence separately — as the cluster with the closest center.</p>
      <p>A distance is calculated as 1 minus the corresponding identity score reported by <italic>Identity</italic> [<xref ref-type="bibr" rid="CR29">29</xref>]. Recall that an identity score is a sequence similarity measure calculated as the ratio of the number of identical nucleotides of two sequences to the length of the alignment (including gaps) of the two sequences.</p>
      <p>Intra-cluster similarity is the average similarity (identity score) of a sequence to the center of its cluster (the higher, the better). Inter-cluster similarity is the average similarity between two centers of predicted clusters (the lower, the better).</p>
      <p>To look at multiple criteria assessing the quality of predicted clusters, for which we do not have a ground truth, we defined the cluster quality for unknown clusters. The geometric mean is suitable to averaging values that have different units or ranges. Thus, the cluster quality for unknown clusters is defined as the geometric mean of the following: 
<list list-type="bullet"><list-item><p>1 ÷ Bavies-Bouldin,</p></list-item><list-item><p>Dunn,</p></list-item><list-item><p>(1+ Silhouette) ÷ 2,</p></list-item><list-item><p>Intra-cluster similarity, and</p></list-item><list-item><p>1− inter-cluster similarity.</p></list-item></list></p>
      <p><bold>Criteria for known and unknown true clusters:</bold> Coverage, run time, and memory requirement are criteria applicable to known and unknown true clusters. Coverage is the ratio of the total size of predicted clusters including at least two sequences to the size of the data set. The wall-clock time is reported. Memory is measured in Gigabyte (GB).</p>
    </sec>
  </sec>
  <sec id="Sec11" sec-type="results">
    <title>Results</title>
    <sec id="Sec12">
      <title>Results on synthetic data</title>
      <p><bold>Small data sets with 80–97% identity:</bold> We evaluated <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic>, and <italic>UCLUST</italic> on the following 12 testing data sets: Short 80, Short 90, Short 95, Short 97, Medium 80, Medium 90, Medium 95, Medium 97, Long 80, Long 90, Long 95, and Long 97. Each of these data sets includes less than 25,000 sequences. Note that these data sets were generated for this work and were not available at the time we developed <italic>MeShClust v1.0</italic>. Additionally, these <italic>testing</italic> data sets are different from the <italic>training</italic> data sets that were utilized while developing and optimizing <italic>MeShClust v3.0</italic>. We report the average performance on the 12 sets in Table <xref rid="Tab3" ref-type="table">3</xref> and the performance on each data set in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Evaluations on the synthetic testing data sets. The first set of evaluations was conducted on 12 sets, each of which includes clusters whose members are 80%, 90%, 95%, or 97% identical to a template sequence, i.e., a true center. The second set of evaluations was conducted on six data sets representing clusters of degenerate sequences (e.g., members are 60% or 70% identical to true centers). Each set of the first and second sets of evaluations includes less than 25k sequences. The third set of evaluations was conducted on four data sets, each of which includes more than one million sequences (80%, 90%, 95%, or 97% identical to true centers). All clusters in the same data set have the same minimum identity score. For example, cluster members of the Short-97 data set are 97.00–99.99% identical to the true centers. The direction of the arrow next to each criterion indicates whether a high or a low value is better. We mark <italic>MeShClust v3.0</italic> with “auto” when the threshold is estimated automatically, otherwise a specific threshold is provided to the tool</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Tool</th><th align="left">Purity (<italic>↑</italic>)</th><th align="left">Jaccard (<italic>↑</italic>)</th><th align="left">G-Measure (<italic>↑</italic>)</th><th align="left">Cluster quality (<italic>↑</italic>)</th><th align="left">Coverage (<italic>↑</italic>)</th><th align="left">Centers (<italic>↑</italic>)</th><th align="left">Time (<italic>↓</italic>)</th><th align="left">Memory (GB) (<italic>↓</italic>)</th></tr></thead><tbody><tr><td align="left" colspan="9">Short, Medium, and Long: 80–97%</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">0.92</td><td align="left">0.19</td><td align="left">0.33</td><td align="left">0.29</td><td align="left">0.92</td><td align="left">0.01</td><td align="left">00:71:00</td><td align="left">0.36</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">0.99</td><td align="left">0.92</td><td align="left">0.93</td><td align="left">0.94</td><td align="left">0.99</td><td align="left">0.35</td><td align="left">00:00:26</td><td align="left">0.20</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">0.78</td><td align="left">00:05:18</td><td align="left">6.55</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (auto)</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">0.80</td><td align="left">00:12:08</td><td align="left">6.59</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">0.70</td><td align="left">0.08</td><td align="left">0.20</td><td align="left">0.15</td><td align="left">0.70</td><td align="left">0.00</td><td align="left">00:00:16</td><td align="left">0.12</td></tr><tr><td align="left" colspan="9">Short, Medium, and Long: 60–70%</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">1.00</td><td align="left">0.14</td><td align="left">0.28</td><td align="left">0.24</td><td align="left">0.90</td><td align="left">0.01</td><td align="left">01:23:46</td><td align="left">0.35</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">0.98</td><td align="left">0.93</td><td align="left">0.96</td><td align="left">0.96</td><td align="left">1.00</td><td align="left">0.53</td><td align="left">00:00:25</td><td align="left">0.19</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">0.76</td><td align="left">00:11:44</td><td align="left">5.79</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (auto)</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">0.98</td><td align="left">0.65</td><td align="left">00:14:32</td><td align="left">5.83</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">1.00</td><td align="left">0.22</td><td align="left">0.34</td><td align="left">0.34</td><td align="left">0.83</td><td align="left">0.01</td><td align="left">00:00:28</td><td align="left">0.08</td></tr><tr><td align="left" colspan="9">Numerous: 80–97%</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">1.00</td><td align="left">0.48</td><td align="left">0.59</td><td align="left">0.62</td><td align="left">1.00</td><td align="left">0.00</td><td align="left">00:39:31</td><td align="left">0.91</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">1.00</td><td align="left">0.81</td><td align="left">0.83</td><td align="left">0.87</td><td align="left">0.99</td><td align="left">0.01</td><td align="left">00:19:04</td><td align="left">2.58</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">1.00</td><td align="left">0.99</td><td align="left">0.99</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">0.15</td><td align="left">02:58:15</td><td align="left">12.76</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (auto)</td><td align="left">1.00</td><td align="left">0.98</td><td align="left">0.99</td><td align="left">0.99</td><td align="left">0.99</td><td align="left">0.15</td><td align="left">02:50:40</td><td align="left">13.06</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">1.00</td><td align="left">0.07</td><td align="left">0.20</td><td align="left">0.15</td><td align="left">0.89</td><td align="left">0.00</td><td align="left">00:06:41</td><td align="left">0.72</td></tr></tbody></table></table-wrap></p>
      <p>We start by looking at cluster quality as defined in Eq. <xref rid="Equ7" ref-type="">7</xref>, <italic>MeShClust v3.0</italic> came first, achieving almost perfect score (1.00); <italic>MeShClust v1.0</italic> came second (0.99) followed by <italic>CD-HIT</italic> (0.29) and <italic>UCLUST</italic> (0.15). The same trend was observed on the percentage of true centers identified by each tool (<italic>MeShClust v3.0</italic>: 78%; <italic>MeShClust v1.0</italic>: 35%; <italic>CD-HIT</italic>: 1%; and <italic>UCLUST</italic>: 0%). The greedy nature of <italic>CD-HIT</italic> and <italic>UCLUST</italic> does not allow them to identify the true centers. Because these data sets are synthetic, they do not include noisy sequences. Therefore, a coverage score of one is desired. A coverage score of less than one indicates that some sequences do not belong to any cluster. <italic>MeShClust v3.0</italic> and <italic>MeShClust v1.0</italic> achieved perfect or almost perfect coverage scores, followed by <italic>CD-HIT</italic> (0.92) and <italic>UCLUST</italic> (0.70). With respect to time, <italic>UCLUST</italic> was the fastest followed by <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic>, and <italic>CD-HIT</italic>. <italic>MeShClust v3.0</italic> required the highest amount of memory. Regardless of the rank of <italic>MeShClust v3.0</italic> with respect to its time and memory requirements, these requirements are very reasonable. It took <italic>MeShClust v3.0</italic> five minutes and 18 seconds on average to process one of the 12 sets. <italic>MeShClust v3.0</italic> required 6.55 GB of memory on average for each data set; such memory is available on almost all personal computers at the time of this writing. In sum, <italic>MeShClust v3.0</italic> achieved the highest scores on cluster quality and the percentage of true centers while requiring reasonable time and memory.</p>
      <p><bold>Small data sets with low identity:</bold> Clustering degenerate sequences (≤60% identity) using alignment-free statistics was a challenge while developing <italic>MeShClust v1.0</italic>. Therefore, we decided to utilize a global alignment algorithm in clustering degenerate sequences with <italic>MeShClust v1.0</italic>. Due to the improvement we introduced to <italic>Identity</italic> (the tool for calculating pairwise identity scores using alignment-free statistics), <italic>MeShClust v3.0</italic> is able to cluster degenerate sequences <italic>without</italic> the use of any alignment algorithms.</p>
      <p>We evaluated the performances of the four tools on the following six testing data sets: Short 60, Short 70, Medium 60, Medium 70, Long 60, and Long 70. The average performance is reported in Table <xref rid="Tab3" ref-type="table">3</xref> and the performance on each data set in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p><italic>MeShClust v3.0</italic> achieved perfect score on the cluster-quality criterion; <italic>MeShClust v1.0</italic> came second with a score of 0.96, <italic>UCLUST</italic> came third with a score of 0.34, and <italic>CD-HIT</italic> came fourth with a score of 0.28. <italic>MeShClust v3.0</italic> and <italic>MeShClust v1.0</italic> were able to cluster almost all sequences, whereas <italic>CD-HIT</italic> and <italic>UCLUST</italic> clustered 90% and 83% of the sequences. <italic>MeShClust v3.0</italic> was able to identify 76% of the true centers, i.e., the predicted center of a cluster is the same as the true center, from which member sequences were generated. <italic>MeShClust v1.0</italic> identified 53% of the true centers, whereas <italic>CD-HIT</italic> and <italic>UCLUST</italic> identified 1%. With respect to processing time, <italic>MeShClust v1.0</italic> was the fastest followed by <italic>UCLUST</italic>, <italic>MeShClust v3.0</italic>, and <italic>CD-HIT</italic>. <italic>MeShClust v3.0</italic> took 11 minutes and 44 seconds on average to process one of the degenerate sets. The memory required by <italic>MeShClust v3.0</italic> was the highest (5.79 GB), whereas the three related tools required 0.08–0.35 GB. Overall, <italic>MeShClust v3.0</italic> is able produce high-quality clusters while utilizing available memory and acceptable processing time.</p>
      <p><bold>Large data sets with 80–97% identity:</bold> The previous two experiments were conducted on small data sets, each of which includes less than 25,000 sequences. Now, we report the performances of the four tools on the following testing sets: Numerous 80, Numerous 90, Numerous 95, and Numerous 97. Each of these data sets consists of more than one million sequences and 5,000 clusters. Table <xref rid="Tab3" ref-type="table">3</xref> displays the average performance on the four large sets. Additional file <xref rid="MOESM1" ref-type="media">1</xref> includes the performance on each set individually.</p>
      <p>According to the cluster-quality criterion, <italic>MeShClust v3.0</italic> achieved the highest score of 1.00; <italic>MeShClust v1.0</italic> came second with a score of 0.87; <italic>CD-HIT</italic> came third with a score of 0.62; <italic>UCLUST</italic> came fourth with a score of 0.15. According to the true-centers criterion, <italic>MeShClust v3.0</italic> identified the largest percentage of the true centers (15%), whereas <italic>MeShClust v1.0</italic> identified 1% and <italic>CD-HIT</italic> and <italic>UCLUST</italic> could not identify any true centers. Even though <italic>MeShClust v3.0</italic>’s performance based on the true-centers criterion is not as good as the performance on the small data sets, it is the best on the large data sets in contrast to the three related tools. According to the coverage criterion, <italic>MeShClust v3.0</italic> and <italic>CD-HIT</italic> achieved almost perfect coverage scores, followed by <italic>MeShClust v1.0</italic> (0.99) and <italic>UCLUST</italic> (0.89). <italic>MeShClust v3.0</italic> took about three hours on average to process each of the large data sets. <italic>MeShClust v3.0</italic> was the slowest among the four tools. With respect to memory requirement, <italic>MeShClust v3.0</italic> required the largest amount of memory of 12.76 GB.</p>
      <p><italic>MeShClust v3.0</italic> achieved the highest scores on the cluster-quality, the true-centers, and the coverage criteria. Producing these high-quality clusters required more time and more memory than the related tools. From the prospective of a life scientist who is about to drive biological insights from sequence clusters, the high quality of clusters produced by <italic>MeShClust v3.0</italic> greatly outweighs its time and memory requirements, both of which are reasonable and available.</p>
      <p><bold>Estimating a threshold identity score from data:</bold> A life scientist may not know or uncertain of a good value (or at least a good starting point) for the threshold-score parameter. <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, and <italic>UCLUST</italic> require the user to provide a threshold identity score. <italic>MeShClust v1.0</italic> can handle some error in the threshold score; however, it still requires the user to provide a score. A tool uses this threshold as a cutoff for determining cluster membership. All members of a cluster must have identity scores with the center greater than or equal to the threshold score. <italic>MeShClust v3.0</italic> can estimate the threshold score without any assistance from the user.</p>
      <p>First, we applied <italic>MeShClust v3.0</italic> to estimating threshold identity scores on the 22 <italic>training</italic> sets. The error ranged from 0.02% to 3.36% with an average of 1.05% and a standard deviation of 0.81%. Second, we applied <italic>MeShClust v3.0</italic> to estimating the threshold scores and using them in clustering the 22 <italic>testing</italic> sets. In Table <xref rid="Tab3" ref-type="table">3</xref>, we report (marked with “auto”) the average performances in the three previous experiments. The performance due to an estimated threshold score is very comparable to that due to a user-provided one, demonstrating <italic>MeShClust v3.0</italic>’s success in estimating the threshold score needed for determining cluster membership. Another implication of these results is that a user may use <italic>MeShClust v3.0</italic> without adjusting any parameters, minimizing guesswork.</p>
      <p>The user should use this feature in combination with the evaluation feature that calculates scores indicating cluster quality. This way, the user has a reference point to compare to if the user decides to adjust the threshold around the estimated value. One drawback is that the user may run <italic>MeShClust v3.0</italic> few times. Another drawback is that estimating the threshold may require slightly more time and memory than providing a threshold by the user. Nonetheless, this feature is very important when a life scientist does not know a good value for the threshold-score parameter.</p>
    </sec>
    <sec id="Sec13">
      <title>Results on real data</title>
      <p>We evaluated <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic>, and <italic>UCLUST</italic> on the Microbiome data set, which includes more than one million sequences, using an identity score of 97% (Table <xref rid="Tab4" ref-type="table">4</xref>). <italic>MeShClust v3.0</italic> outperformed all related tools on every criterion measuring cluster quality. According to the overall cluster quality measure, <italic>MeShClust v3.0</italic> came first followed by <italic>MeShClust v1.0</italic>, <italic>CD-HIT</italic>, and <italic>UCLUST</italic>. <italic>MeShClust v3.0</italic> achieved 100% improvement over our previous version, more than 200% over <italic>CD-HIT</italic>, and 300% over <italic>UCLUST</italic>. The coverage of our tool was 96%, meaning that 4% of the sequences did not belong to any clusters according to the 97% threshold. One possible explanation is that the unclustered sequences represent noisy sequences due to sequencing errors. Another possible explanation is that these sequences represent rare bacterial species found in the human microbiome. A third explanation is that <italic>MeShClust v3.0</italic> tends to be a bit strict in assigning sequences to clusters.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Evaluations on real data sets. The microbiome set was clustered with an identity score of 97%. The LTRs set was clustered with an identity score of 70%. The direction of the arrow next to each criterion indicates whether a high or a low value is better</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Tool</th><th align="left">Dunn (<italic>↑</italic>)</th><th align="left">Davies-Bouldin (<italic>↓</italic>)</th><th align="left">Silhouette (<italic>↑</italic>)</th><th align="left">Intra (<italic>↑</italic>)</th><th align="left">Inter (<italic>↓</italic>)</th><th align="left">Cluster quality (<italic>↑</italic>)</th><th align="left">Coverage (<italic>↑</italic>)</th><th align="left">Time (<italic>↓</italic>)</th><th align="left">Memory (GB) (<italic>↓</italic>)</th></tr></thead><tbody><tr><td align="left" colspan="10">Microbiome</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">0.01</td><td align="justify">3.39</td><td align="left">0.24</td><td align="left">0.94</td><td align="left">0.94</td><td align="justify">0.16</td><td align="left">0.99</td><td align="left">00:01:45</td><td align="justify">0.93</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">0.02</td><td align="justify">1.50</td><td align="left">0.43</td><td align="left">0.96</td><td align="left">0.90</td><td align="justify">0.25</td><td align="left">0.99</td><td align="left">00:05:01</td><td align="justify">2.56</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">0.27</td><td align="justify">0.77</td><td align="left">0.74</td><td align="left">0.97</td><td align="left">0.90</td><td align="justify">0.50</td><td align="left">0.96</td><td align="left">01:41:06</td><td align="justify">15.08</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">0.01</td><td align="justify">5.50</td><td align="left">-0.14</td><td align="left">0.94</td><td align="left">0.96</td><td align="justify">0.12</td><td align="left">0.98</td><td align="left">00:00:31</td><td align="justify">0.42</td></tr><tr><td align="left" colspan="10">LTRs</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">0.02</td><td align="justify">1.81</td><td align="left">0.05</td><td align="left">0.78</td><td align="left">0.52</td><td align="justify">0.29</td><td align="left">1.00</td><td align="left">03:47:05</td><td align="justify">0.75</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">0.14</td><td align="justify">1.13</td><td align="left">0.33</td><td align="left">0.86</td><td align="left">0.52</td><td align="justify">0.51</td><td align="left">1.00</td><td align="left">00:02:57</td><td align="justify">1.75</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">0.98</td><td align="justify">0.86</td><td align="left">0.47</td><td align="left">0.88</td><td align="left">0.58</td><td align="justify">0.79</td><td align="left">0.94</td><td align="left">02:01:22</td><td align="justify">16.24</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">0.02</td><td align="justify">2.02</td><td align="left">0.11</td><td align="left">0.75</td><td align="left">0.55</td><td align="justify">0.27</td><td align="left">1.00</td><td align="left">00:09:01</td><td align="justify">0.50</td></tr></tbody></table></table-wrap></p>
      <p>The improvement in <italic>MeShClust v3.0</italic>’s cluster quality came at the cost of time and memory. <italic>MeShClust v3.0</italic> took the longest time (one hour and 41 minutes) and required the largest memory (about 15 GB), whereas the other related tools took few minutes and required 0.42–2.56 GB of memory. <italic>MeShClust v3.0</italic>’s memory requirement of 15 GB is already available on almost all personal computers at the time of this writing. When scientific conclusions depend on the formed clusters, waiting for two hours to obtain high-quality clusters is well justified.</p>
      <p>Next, we evaluated the tools on the LTRs data set, which includes about 250,000 sequences, using an identity score of 70%. This data set was produced by a program called LtrDetector that discovers LTR retrotransposons [<xref ref-type="bibr" rid="CR42">42</xref>]. LtrDetector processed the maize genome. One way to reduce the false positive rate of LtrDetector is to cluster the LTRs; sequences with predicted LTRs that do not belong to any cluster are likely to be false positives and should be removed. <italic>MeShClust v3.0</italic> outperformed the three related tools on every criterion related to cluster quality except the inter-cluster similarity measure. According to the overall cluster quality measure, our tool came first followed by <italic>MeShClust v1.0</italic>, <italic>CD-HIT</italic>, and <italic>UCLUST</italic>. The margin of improvement is very clear (55% over <italic>MeShClust v1.0</italic>, 172% over <italic>CD-HIT</italic>, and 193% over <italic>UCLUST</italic>). Only 94% of the LTRs were clustered. This coverage is in line with the assumption that this data set includes false positives; the purpose of clustering these sequences is to identify and remove sequences that do not belong to any cluster. Similar to the Microbiome data set, our tool took the longest time and required the largest amount of memory. However, our time and memory requirements are well justified given the high quality of the clusters produced by <italic>MeShClust v3.0</italic>.</p>
      <p>In the third evaluation experiment on real data, we evaluated the four tools on the viral data set with a threshold identity score of 50%. This is a challenging experiment because k-mer statistics may be ineffective on highly degenerate sequences [<xref ref-type="bibr" rid="CR32">32</xref>]. To circumvent this challenge while developing <italic>MeShClust v1.0</italic>, we utilized the actual global alignment algorithm instead of the k-mer-statistics-based classifier when the threshold identity score is 60% or below. <italic>MeShClust v3.0</italic> is completely free from alignment algorithms and depends entirely on alignment-free k-mer statistics. The results of this experiment are shown in Table <xref rid="Tab5" ref-type="table">5</xref>. Recall that the viral data set consists of nine known clusters. In terms of cluster quality, <italic>MeShClust v1.0</italic> (0.81) came first followed by <italic>CD-HIT</italic> (0.78), <italic>MeShClust v3.0</italic> (0.71), and <italic>UCLUST</italic> (0.43). In terms of coverage, the same exact performance ranking was observed. In terms of time, <italic>CD-HIT</italic> was the fastest followed by <italic>MeShClust v3.0</italic>, <italic>UCLUST</italic>, and <italic>MeShClust v1.0</italic>. In terms of memory, <italic>MeShClust v1.0</italic> and <italic>UCLUST</italic> came first, <italic>MeShClust v3.0</italic> came second, and <italic>CD-HIT</italic> came last. Although <italic>MeShClust v3.0</italic> did not come first in this experiment, its cluster quality is within 10–14% from those obtained by the first and the second-best performing tools. Because clustering degenerate sequences using alignment-free k-mer statistics could not be done in the past, these results represent a progress in the alignment-free field.
<table-wrap id="Tab5"><label>Table 5</label><caption><p>Evaluations on the viral and the 14-bacterial-species data sets. The viral set was clustered with an identity score of 50%; it includes nine clusters representing nine viruses. The 14-bacterial-species set was clustered with multiple identity scores; it includes 14 clusters representing 14 bacterial species. We mark <italic>MeShClust v3.0</italic> with “auto” when the threshold is estimated automatically, otherwise a specific threshold is provided to the tool</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Tool</th><th align="left">Purity (<italic>↑</italic>)</th><th align="left">Jaccard (<italic>↑</italic>)</th><th align="left">G-Measure (<italic>↑</italic>)</th><th align="left">Cluster quality (<italic>↑</italic>)</th><th align="left">Coverage (<italic>↑</italic>)</th><th align="left">Time (<italic>↓</italic>)</th><th align="left">Memory (GB) (<italic>↓</italic>)</th></tr></thead><tbody><tr><td align="left" colspan="8">Viral data set</td></tr><tr><td align="left"><italic>CD-HIT</italic></td><td align="left">0.97</td><td align="left">0.67</td><td align="left">0.77</td><td align="justify">0.78</td><td align="left">0.95</td><td align="left">00:00:02</td><td align="justify">0.18</td></tr><tr><td align="left"><italic>MeShClust v1.0</italic></td><td align="left">0.91</td><td align="left">0.72</td><td align="left">0.83</td><td align="justify">0.81</td><td align="left">0.98</td><td align="left">00:00:28</td><td align="justify">0.08</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic></td><td align="left">0.96</td><td align="left">0.56</td><td align="left">0.72</td><td align="justify">0.71</td><td align="left">0.72</td><td align="left">00:00:07</td><td align="justify">0.12</td></tr><tr><td align="left"><italic>UCLUST</italic></td><td align="left">1.00</td><td align="left">0.26</td><td align="left">0.46</td><td align="justify">0.43</td><td align="left">0.64</td><td align="left">00:00:17</td><td align="justify">0.08</td></tr><tr><td align="left" colspan="8">14-bacterial-species set</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (0.80)</td><td align="left">1.00</td><td align="left">1.00</td><td align="left">1.00</td><td align="justify">1.00</td><td align="left">1.00</td><td align="left">00:29:36</td><td align="justify">14.09</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (0.85)</td><td align="left">1.00</td><td align="left">0.93</td><td align="left">0.97</td><td align="justify">0.97</td><td align="left">0.91</td><td align="left">00:46:01</td><td align="justify">14.11</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (0.90)</td><td align="left">1.00</td><td align="left">0.64</td><td align="left">0.76</td><td align="justify">0.78</td><td align="left">0.96</td><td align="left">00:42:54</td><td align="justify">14.21</td></tr><tr><td align="left"><italic>MeShClust v3.0</italic> (auto)</td><td align="left">1.00</td><td align="left">0.62</td><td align="left">0.73</td><td align="justify">0.77</td><td align="left">0.93</td><td align="left">02:48:41</td><td align="justify">14.21</td></tr></tbody></table></table-wrap></p>
      <p>In the fourth evaluation experiment on real data, we applied <italic>MeShClust v3.0</italic> to clustering bacterial genomes. <italic>None of the related tools can cluster very long sequences such as those of bacteria because of the prohibitive time alignment algorithms would take to calculate pairwise identity scores.</italic> We applied our tool to clustering bacterial genomes into species. To start, we assembled the 14-bacterial species data set, which includes 1,328 sequences representing 14 bacterial species. The length of an average genome is approximately 3 mega base pairs. Because this is the first time to cluster bacterial genomes using identity scores, there is no community-accepted threshold identity score as the one we utilized in clustering the microbiome data set (97%). Using the threshold-estimation feature of <italic>MeShClust v3.0</italic>, an identity score of 91.23% served as a starting point. The clusters obtained due to the estimated threshold were fine but not perfect — their cluster quality was 0.77 (a perfect cluster quality score is 1). After that, we tried three lower threshold scores of 90%, 85%, and 80%. Table <xref rid="Tab5" ref-type="table">5</xref> shows the results of this experiment. The clusters due to the 80% and 85% threshold scores had high cluster quality and high coverage, suggesting that bacterial genomes of the same species are 80-85% identical to each other. Using a threshold identity score of 84%, we clustered the bacterial data set, which consists of 10,562 sequences with an average length of 3.7 mega base pairs. This experiment represents a stress test for <italic>MeShClust v3.0</italic> because of the high time and memory requirements. <italic>MeShClust v3.0</italic> successfully clustered this data set in about 50 hours using 56 GB of memory, resulting in 482 clusters of size 2 or greater covering 67% of the data set. To the best of our knowledge, this is the first time long sequences such as those of bacterial genomes can be clustered using identity scores.</p>
    </sec>
  </sec>
  <sec id="Sec14" sec-type="discussion">
    <title>Discussion</title>
    <sec id="Sec15">
      <title>The scaled-up mean shift algorithm in action</title>
      <p>Figure <xref rid="Fig2" ref-type="fig">2</xref> shows detail about how <italic>MeShClust v3.0</italic> discovered centers in the Numerous-97 training data set, which includes 5,000 clusters and more than one million sequences. The bottom plot of Fig. <xref rid="Fig2" ref-type="fig">2</xref> shows the number of sequences read as <italic>MeShClust v3.0</italic> progresses. Recall that <italic>MeShClust v3.0</italic> employs an out-of-core strategy, in which the tool processes input sequences batch by batch. <italic>MeShClust v3.0</italic> scanned the data three times until it converged. The middle figure shows the number of sequences that do not belong to any of the clusters discovered so far; these sequences are kept in the reservoir. The reservoir is utilized during the first data pass only; therefore, it is empty during the second and third data passes. The top plot shows the number of discovered centers as the tool runs. All centers are discovered in the first data pass; the first set of centers were discovered by the main mean shift instance that was started with a quadratic initialization step. Additional centers were discovered by running an independent instance of the mean shift with a quadratic initialization step when 25,000 (the batch size) sequences were accumulated in the reservoir. For this reason, every increase in the number of centers is associated with a decrease in the reservoir size due to removing a batch. The number of discovered centers decreased a little bit (from 5,016 to 5,012) during the second data pass because some centers were merged. The number of centers did not change at all during the third data pass, resulting in convergence.
<fig id="Fig2"><label>Fig. 2</label><caption><p><italic>MeShClust v3.0</italic> in action on the Numerous-97 training data set. The top plot shows the number of centers as the algorithm runs. The middle plot shows the number of sequences accumulated in the reservoir; this number changes in the first data pass (Pass 1) and is zero in the second and third data passes (Pass 2 and Pass 3). The bottom plot shows the number of sequences read during the three data passes</p></caption><graphic xlink:href="12864_2022_8619_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec16">
      <title>Effects of the all-vs-all block size on <italic>MeShClust v3.0</italic></title>
      <p>To evaluate the effects of the all-vs-all block size on the performance of <italic>MeShClust v3.0</italic>, we ran our tool using different block sizes (1k, 2k, 5k, 10k, 15k, 20k, 25k, and 46k) and measured cluster quality, percentage of true centers, coverage, time, and memory (Fig. <xref rid="Fig3" ref-type="fig">3</xref>). Recall that this block of sequences is used for initializing the mean shift algorithm, which applies <italic>Identity</italic> to calculating the similarity scores of every unique pair of sequences in this block. In other words, <italic>Identity</italic> performs all-vs-all on this block of sequences. This step is the most time-consuming step in <italic>MeShClust v3.0</italic>. The larger the block size is, the more time and memory are required. We performed this experiment on four training data sets: 60-Short, 70-Medium, 80-Long, and 97-Numerous. Each of the first three data sets includes less than 25k sequences, whereas the 97-Numerous set includes more than one million sequences.
<fig id="Fig3"><label>Fig. 3</label><caption><p>The effects of the size of the all-vs-all block on cluster quality, percentage of true centers, time, and memory. Figures <bold>a</bold>–<bold>d</bold> are produced by evaluating <italic>MeShClust v3.0</italic> using different block sizes (1k, 2k, 5k, 10k, 15k, 20k, and 25k) on three small data sets: Short 60, Medium 70, and Long 80; each of these sets consists of less than 25k sequences and includes 100 clusters. Figures <bold>e</bold>–<bold>h</bold> are produced by evaluating <italic>MeShClust v3.0</italic> using different block sizes (1k, 2k, 5k, 10k, 15k, 20k, 25k, and 46k) on one large data set (the Numerous 97 set), which includes more than one million sequences and 5,000 clusters</p></caption><graphic xlink:href="12864_2022_8619_Fig3_HTML" id="MO3"/></fig></p>
      <p>First, we looked at cluster quality (the harmonic mean of purity, Jaccard index, and G-Measure). On the small data sets (60-Short, 70-Medium, and 80-Long), the block size seems to have no effect on cluster quality. On the large data set (97-Numerous), we observed a minor increase in performance as the block size increased; almost the same cluster qualities were obtained using a size of 10k or larger. After that we looked at the percentage of true centers identified. On the small data sets, using large blocks (20–25k) resulted in identifying more true centers than using small sizes. The same trend was observed on the large data set, but it was not as strong as that observed on the small data sets. In general, the percentage of true centers increases with using large block sizes. This observation is consistent except on the 1k and the 2k block sizes on the small data sets. Determining the true centers depends on the availability of sequences of the same cluster in a block. If these sequences are well distributed, i.e., represent the entire cluster, the true center is likely to be found. However, if the majority of these sequences come from one part of the cluster, i.e., they are not well distributed, the true center is unlikely to be found. Clearly, the block size has an effect on the distribution of sequences that belong to the same cluster in a block; this effect is more noticeable in the cases of small blocks. The block size has almost no effect on the coverage measure (99.6–99.7% on average on the three small data sets and 99.6–99.9% on the large data set).</p>
      <p>With respect to time, <italic>MeShClust v3.0</italic> took longer time using large blocks than using small blocks on the three small data sets. This time trend is expected because <italic>MeShClust v3.0</italic> utilized one mean shift instance with the quadratic initialization step while processing the small sets. On the large data set, the time requirements due to different block sizes were very similar. Processing small blocks takes shorter time and discovers a smaller number of new centers than processing large blocks. The smaller the number of discovered centers is, the more frequent executing the mean shift with the quadratic initialization step occurs and vice versa, i.e., these two trends balance each other. Finally, we looked at memory, which increases as the block size increases.</p>
      <p>In sum, using a large block size is likely to result in identifying more true centers than using a small size but at the cost of memory. Further, cluster quality due to a large block size is likely to be better than that due to a small block size — specially on large data sets.</p>
    </sec>
    <sec id="Sec17">
      <title><italic>MeShClust v1.0</italic> versus <italic>MeShClust v3.0</italic></title>
      <p>Even though <italic>MeShClust v1.0</italic> and <italic>MeShClust v3.0</italic> are both based on the mean shift algorithm, their adaptations of the algorithm are completely different. <italic>MeShClust v1.0</italic> consists of two stages. In the first stage, it builds initial clusters one at a time. First, <italic>MeShClust v1.0</italic> sorts its input sequences according to length. Starting with the shortest sequence as the initial center of the first cluster, it scans all input sequences for sequences that are similar to the center. The mean of these sequences is calculated (sequences are converted into k-mer histograms) and a representative sequence is selected. This representative sequence becomes the new center of the cluster. The just-found, similar sequences are removed from the input sequences. Next, <italic>MeShClust v1.0</italic> scans the remaining sequences for sequences that are similar to the new center. This procedure — (i) find similar sequences, (ii) calculate a new mean, and (iii) find a representative sequence — is repeated until no new similar sequences can be found. At that time, the cluster is put aside, and a new sequence is selected from the remaining sequences to be the initial center of the new cluster. The new sequence is the closest sequence (among the remaining sequences) to the center of the previous cluster. The first stage results in a semi-sorted list of clusters. In the second stage, <italic>MeShClust v1.0</italic> attempts to merge a cluster with the five clusters before it in the list and the five clusters after it in the list. In contrast to <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic> builds many clusters at the same time — not only one. <italic>MeShClust v3.0</italic> attempts to merge a cluster with every other cluster — not only the neighboring 10 clusters. <italic>MeShClust v3.0</italic> may scan input sequences as many times as needed until the algorithm converges — not only two stages. <italic>MeShClust v3.0</italic> processes input data batch by batch — the entire data set is <italic>not</italic> loaded in memory. For this reason, <italic>MeShClust v1.0</italic> cannot process very large data sets.</p>
      <p><italic>MeShClust v3.0</italic> is alignment free, whereas <italic>MeShClust v1.0</italic> is not entirely alignment free. <italic>MeShClust v1.0</italic> determines sequence similarity using a machine-learning-based classifier that is trained on identity scores produced by a global alignment algorithm. <italic>MeShClust v3.0</italic> utilizes <italic>Identity</italic> whose core is a regression model trained on identity scores that are calculated by introducing mutations into real sequences, i.e., alignment algorithms are never used. For this reason, <italic>MeShClust v3.0</italic> can be applied to very long sequences, e.g., bacterial genomes, but <italic>MeShClust v1.0</italic> cannot be applied because of the impractical long time a global alignment algorithm would take on such long sequences. When the threshold identity score is less than or equal to 60%, <italic>MeShClust v1.0</italic> uses a global alignment algorithm — instead of the classifier — to determine the similarity between a sequence and the center of a cluster, whereas <italic>MeShClust v3.0</italic> uses <italic>Identity</italic> which is completely alignment free.</p>
      <p>The classifier utilized in <italic>MeShClust v1.0</italic> depends on four features only and applies a greedy strategy for feature selection, whereas <italic>MeShClust v3.0</italic> utilizes <italic>Identity</italic> that employs the best-first algorithm to select features from 903 statistics, i.e., a stronger feature-selection algorithm and many more informative features than those utilized in <italic>MeShClust v1.0</italic>.</p>
    </sec>
    <sec id="Sec18">
      <title>
        <italic>MeShClust v2.0</italic>
      </title>
      <p>The adaptation of the mean shift algorithm in <italic>MeShClust v2.0</italic> (<ext-link ext-link-type="uri" xlink:href="https://github.com/BioinformaticsToolsmith/MeShClust2">https://github.com/BioinformaticsToolsmith/MeShClust2</ext-link>) is the same as that of <italic>MeShClust v1.0</italic>. The difference between the two versions is that the second version’s classifier utilized in selecting similar sequences does not utilize alignment algorithms to generate identity scores for training; it generates — similar to <italic>Identity</italic> — semi-synthetic sequence pairs with known identity scores.</p>
    </sec>
    <sec id="Sec19">
      <title>Runtime analysis of <italic>MeShClust v3.0</italic></title>
      <p>Two cases should be considered when we analyze the runtime. In the first case, the data size (<italic>n</italic>) is smaller than the all-vs-all block size (<italic>b</italic>). Here, the algorithm is quadratic with respect to the data size, i.e., <inline-formula id="IEq3"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n^{2})$\end{document}</tex-math><mml:math id="M26"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq3.gif"/></alternatives></inline-formula>, because of the initialization step, which requires calculating the identity scores of all unique sequence pairs. In the second case, the data size is larger than the block size. Here, the scaled-up version of the algorithm (i.e., the out-of-core strategy) is applied, processing block by block. When the mean shift algorithm is initialized, it requires calculating the identity scores of all unique sequence pairs in the provided block. This step is quadratic with respect to the all-vs-all block size, i.e., <inline-formula id="IEq4"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(b^{2})$\end{document}</tex-math><mml:math id="M28"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq4.gif"/></alternatives></inline-formula>. The quadratic, initialization step is applied at the beginning of the algorithm and when there are enough sequences in the reservoir. When the mean shift is not initialized, it requires calculating the identity scores between sequences in a new block and the identified centers. The runtime of this step is <inline-formula id="IEq5"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(cb)$\end{document}</tex-math><mml:math id="M30"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mtext mathvariant="italic">cb</mml:mtext><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq5.gif"/></alternatives></inline-formula>, <italic>c</italic> is the number of centers. There are <italic>n</italic>/<italic>b</italic> blocks approximately. The runtime of the scaled-up version is <inline-formula id="IEq6"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n \max {(b, c)})$\end{document}</tex-math><mml:math id="M32"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>max</mml:mo><mml:mo>(</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq6.gif"/></alternatives></inline-formula>. In sum, the algorithm is quadratic, <inline-formula id="IEq7"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n^{2})$\end{document}</tex-math><mml:math id="M34"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq7.gif"/></alternatives></inline-formula>, if the size of the input sequences is smaller than the block size. Otherwise, the runtime of the scaled-up version is <inline-formula id="IEq8"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n \max {(b, c)})$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>max</mml:mo><mml:mo>(</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq8.gif"/></alternatives></inline-formula>; this runtime is linear (<inline-formula id="IEq9"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}(n)$\end{document}</tex-math><mml:math id="M38"><mml:mi mathvariant="script">O</mml:mi><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12864_2022_8619_Article_IEq9.gif"/></alternatives></inline-formula>) when <italic>b</italic> and <italic>c</italic> are smaller than — and independent of — the data size.</p>
    </sec>
  </sec>
  <sec id="Sec20" sec-type="conclusion">
    <title>Conclusions</title>
    <p>Computational tools for clustering DNA sequences are utilized in many studies in molecular biology. Two pioneering tools — <italic>CD-HIT</italic> and <italic>UCLUST</italic> — are based on greedy algorithms. For this reason, they may result in fragmented clusters and are unable to identify the true centers of the clusters they form. Further, these widely used tools cannot be applied to clustering long sequences such as those of bacterial genomes. Earlier, we developed <italic>MeShClust v1.0</italic>, which is based on the mean shift algorithm to address some of the limitations of <italic>CD-HIT</italic> and <italic>UCLUST</italic>. Although the adaptation of the mean shift algorithm in <italic>MeShClust v1.0</italic> was a step forward, it was not the original algorithm. We are convinced that applying the original mean shift algorithm should result in high-quality clusters. In this work, we propose <italic>MeShClust v3.0</italic>, which applies the original mean shift algorithm on small data sets and a scaled-up version of it on large data sets.</p>
    <p>The main contributions of <italic>MeShClust v3.0</italic> are: 
<list list-type="bullet"><list-item><p>High-quality clusters;</p></list-item><list-item><p>Clustering long sequences as those of bacterial genomes using identity scores for the first time;</p></list-item><list-item><p>Clustering large data sets that cannot fit in memory using the mean shift algorithm;</p></list-item><list-item><p>Automatic estimation of the threshold identity score; and</p></list-item><list-item><p>Progress towards using alignment-free k-mer statistics in clustering degenerate DNA sequences.</p></list-item></list></p>
    <p><italic>MeShClust v3.0</italic> represents progress in terms of cluster quality and scale, resulting in accurate biological insights and providing opportunities for new studies.</p>
  </sec>
  <sec id="Sec21">
    <title>Availability and requirements</title>
    <p><bold>Project name</bold>: <italic>MeShClust v3.0</italic></p>
    <p><bold>Project home page</bold>: <ext-link ext-link-type="uri" xlink:href="https://github.com/BioinformaticsToolsmith/Identity">https://github.com/BioinformaticsToolsmith/Identity</ext-link></p>
    <p><bold>Operating system(s)</bold>: UNIX/Linux/Mac</p>
    <p><bold>Programming language</bold>: C++</p>
    <p><bold>Other requirements</bold>: GNU g++ 7.5.0 or later, GNU Make, and CMake v3.10</p>
    <p><bold>License</bold>: The source code is licensed under Affero General Public License version 1 and the data are licensed under Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License (CC BY-NC-SA 4.0)</p>
    <p><bold>Any restrictions to use by non-academics</bold>: Alternative commercial license is required</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec22">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12864_2022_8619_MOESM1_ESM.xlsx">
            <caption>
              <p><bold>Additional file 1</bold> Results on the synthetic testing data sets. This file includes the results of evaluating <italic>CD-HIT</italic>, <italic>MeShClust v1.0</italic>, <italic>MeShClust v3.0</italic>, and <italic>UCLUST</italic> on all synthetic testing data sets. Results shown in Table <xref rid="Tab3" ref-type="table">3</xref> were derived from this file. File format is MS Excel (.xlsx).</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>GB</term>
        <def>
          <p>Gigabyte</p>
        </def>
      </def-item>
      <def-item>
        <term>LTR</term>
        <def>
          <p>Long Terminal Repeat</p>
        </def>
      </def-item>
      <def-item>
        <term>bp</term>
        <def>
          <p>Base Pair</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank the anonymous reviewers for their comments, which have improved our manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>HZG designed and implemented the software, designed and conducted the evaluation experiments, produced the results, and wrote the manuscript. The author read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This research was supported in part by Frank H. Dotterweich College of Engineering of Texas A&amp;M University-Kingsville. The funding organization has no role in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code of <italic>MeShClust v3.0</italic> is available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/BioinformaticsToolsmith/Identity">https://github.com/BioinformaticsToolsmith/Identity</ext-link>). Our results on the testing synthetic data sets are available in Additional file 1. All synthetic data sets — training and testing — and the maize LTRs are available on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/BioinformaticsToolsmith/IdentityData">https://github.com/BioinformaticsToolsmith/IdentityData</ext-link>). The microbiome data set [<xref ref-type="bibr" rid="CR36">36</xref>] is available through the European Nucleotide Archive (accession number: ERA000159). The viral set was obtained from viruSITE [<xref ref-type="bibr" rid="CR37">37</xref>]; it is available as Supplementary data set 9 of [<xref ref-type="bibr" rid="CR20">20</xref>].</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p>The author declares that he has no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Borredá</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pérez-Román</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Ibanez</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Terol</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Talon</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Reprogramming of Retrotransposon Activity during Speciation of the Genus Citrus</article-title>
        <source>Genome Biol Evol</source>
        <year>2019</year>
        <volume>11</volume>
        <issue>12</issue>
        <fpage>3478</fpage>
        <lpage>95</lpage>
        <?supplied-pmid 31710678?>
        <pub-id pub-id-type="pmid">31710678</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abrouk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ahmed</surname>
            <given-names>HI</given-names>
          </name>
          <name>
            <surname>Cubry</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Šimoníková</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Cauet</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pailles</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bettgenhaeuser</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Gapa</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Scarcelli</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Couderc</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Zekraoui</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kathiresan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Čížková</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hřibová</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Doležel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Arribat</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bergès</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wieringa</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Gueye</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kane</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Leclerc</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Causse</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Vancoppenolle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Billot</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wicker</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Vigouroux</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Barnaud</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Krattinger</surname>
            <given-names>SG</given-names>
          </name>
        </person-group>
        <article-title>Fonio millet genome unlocks African orphan crop diversity for agriculture in a changing climate</article-title>
        <source>Nat Commun</source>
        <year>2020</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>4488</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-18329-4</pub-id>
        <pub-id pub-id-type="pmid">32901040</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ma</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Srivastav</surname>
            <given-names>SP</given-names>
          </name>
          <name>
            <surname>Gamez</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dayama</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Feitosa-Suntheimer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Patterson</surname>
            <given-names>EI</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Matson</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Gold</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Brackney</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Connor</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Colpitts</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Hughes</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Rasgon</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Nolan</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Akbari</surname>
            <given-names>OS</given-names>
          </name>
          <name>
            <surname>Lau</surname>
            <given-names>NC</given-names>
          </name>
        </person-group>
        <article-title>A mosquito small RNA genomics resource reveals dynamic evolution and host responses to viruses and transposons</article-title>
        <source>Genome Res</source>
        <year>2021</year>
        <volume>31</volume>
        <issue>3</issue>
        <fpage>512</fpage>
        <lpage>28</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.265157.120</pub-id>
        <pub-id pub-id-type="pmid">33419731</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vassetzky</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Borodulina</surname>
            <given-names>OR</given-names>
          </name>
          <name>
            <surname>Ustyantsev</surname>
            <given-names>IG</given-names>
          </name>
          <name>
            <surname>Kosushkin</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Kramerov</surname>
            <given-names>DA</given-names>
          </name>
        </person-group>
        <article-title>Analysis of SINE families B2, Dip, and Ves with special reference to polyadenylation signals and transcription terminators</article-title>
        <source>Int J Mol Sci</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>18</issue>
        <fpage>9897</fpage>
        <pub-id pub-id-type="doi">10.3390/ijms22189897</pub-id>
        <pub-id pub-id-type="pmid">34576060</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patin</surname>
            <given-names>NV</given-names>
          </name>
          <name>
            <surname>Peña-Gonzalez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hatt</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Moe</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Kirby</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Konstantinidis</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Manning</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>VS</given-names>
          </name>
        </person-group>
        <article-title>The role of the gut microbiome in resisting Norovirus infection as revealed by a human challenge study</article-title>
        <source>mBio</source>
        <year>2020</year>
        <volume>11</volume>
        <issue>6</issue>
        <fpage>02634</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1128/mBio.02634-20</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patin</surname>
            <given-names>NV</given-names>
          </name>
          <name>
            <surname>Dietrich</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Stancil</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Quinan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Beckler</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>ER</given-names>
          </name>
          <name>
            <surname>Culter</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>CG</given-names>
          </name>
          <name>
            <surname>Taillefert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stewart</surname>
            <given-names>FJ</given-names>
          </name>
        </person-group>
        <article-title>Gulf of mexico blue hole harbors high levels of novel microbial lineages</article-title>
        <source>ISME J</source>
        <year>2021</year>
        <volume>15</volume>
        <issue>8</issue>
        <fpage>2206</fpage>
        <lpage>32</lpage>
        <pub-id pub-id-type="doi">10.1038/s41396-021-00917-x</pub-id>
        <pub-id pub-id-type="pmid">33612832</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Crowhurst</surname>
            <given-names>RN</given-names>
          </name>
          <name>
            <surname>Gleave</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>MacRae</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Ampomah-Dwamena</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Atkinson</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Beuning</surname>
            <given-names>LL</given-names>
          </name>
          <name>
            <surname>Bulley</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Chagne</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Marsh</surname>
            <given-names>KB</given-names>
          </name>
          <name>
            <surname>Matich</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Montefiori</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Newcomb</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Schaffer</surname>
            <given-names>RJ</given-names>
          </name>
          <name>
            <surname>Usadel</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Allan</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Boldingh</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Bowen</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Davy</surname>
            <given-names>MW</given-names>
          </name>
          <name>
            <surname>Eckloff</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ferguson</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Fraser</surname>
            <given-names>LG</given-names>
          </name>
          <name>
            <surname>Gera</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hellens</surname>
            <given-names>RP</given-names>
          </name>
          <name>
            <surname>Janssen</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Klages</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Lo</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>MacDiarmid</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Nain</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>McNeilage</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Rassam</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Richardson</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Rikkerink</surname>
            <given-names>EH</given-names>
          </name>
          <name>
            <surname>Ross</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Schröder</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Snowden</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Souleyre</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Templeton</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Walton</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>MY</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>YY</given-names>
          </name>
          <name>
            <surname>Wood</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yauk</surname>
            <given-names>Y-K</given-names>
          </name>
          <name>
            <surname>Laing</surname>
            <given-names>WA</given-names>
          </name>
        </person-group>
        <article-title>Analysis of expressed sequence tags from Actinidia: applications of a cross species EST database for gene discovery in the areas of flavor, health, color and ripening</article-title>
        <source>BMC Genomics</source>
        <year>2008</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>351</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-9-351</pub-id>
        <pub-id pub-id-type="pmid">18655731</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Malde</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Jonassen</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Repeats and EST analysis for new organisms</article-title>
        <source>BMC Genomics</source>
        <year>2008</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>23</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-9-23</pub-id>
        <pub-id pub-id-type="pmid">18205940</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Florent</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Porcel</surname>
            <given-names>BM</given-names>
          </name>
          <name>
            <surname>Guillaume</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Da Silva</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Artiguenave</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Maréchal</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Bréhélin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Gascuel</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Charneau</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wincker</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Grellier</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A Plasmodium falciparum FcB1-schizont-EST collection providing clues to schizont specific gene structure and polymorphism</article-title>
        <source>BMC Genomics</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>235</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-10-235</pub-id>
        <pub-id pub-id-type="pmid">19454033</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <mixed-citation publication-type="other">Ng K-H, Phon-Amnuaisuk S, Ho C-K. Clustering of expressed sequence tags with distance measure based on burrows-wheeler transform. In: Int Conf Bioinform Biomed Eng: 2010. p. 2183–7.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reuter</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Boros</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Pankovics</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Review of hepatitis E virus in rats: Evident risk of species orthohepevirus C to human zoonotic infection and disease</article-title>
        <source>Viruses</source>
        <year>2020</year>
        <volume>12</volume>
        <issue>10</issue>
        <fpage>1148</fpage>
        <pub-id pub-id-type="doi">10.3390/v12101148</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">Melnyk A, Mohebbi F, Knyazev S, Sahoo B, Hosseini R, Skums P, Zelikovsky A, Patterson M. Clustering based identification of SARS-CoV-2 subtypes. In: IEEE Int Conf Comput Adv Bio Med Sci: 2021. p. 127–41.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Hu Z, Wei C, Li Z. In: Tettelin H, Medini D, (eds).Cham: Springer; 2020, pp. 293–307.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Aunin</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Berriman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Reid</surname>
            <given-names>AJ</given-names>
          </name>
        </person-group>
        <article-title>Characterising genome architectures using genome decomposition analysis</article-title>
        <source>BMC Genomics</source>
        <year>2022</year>
        <volume>23</volume>
        <issue>1</issue>
        <fpage>398</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-022-08616-3</pub-id>
        <pub-id pub-id-type="pmid">35610562</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ratnasingham</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hebert</surname>
            <given-names>PDN</given-names>
          </name>
        </person-group>
        <article-title>A DNA-based registry for all animal species: The barcode index number (BIN) system</article-title>
        <source>PLoS ONE</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>7</issue>
        <fpage>1</fpage>
        <lpage>16</lpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0066213</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Godzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>CD-HIT: a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>13</issue>
        <fpage>1658</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl158</pub-id>
        <pub-id pub-id-type="pmid">16731699</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>Search and clustering orders of magnitude faster than BLAST</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>19</issue>
        <fpage>2460</fpage>
        <lpage>1</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq461</pub-id>
        <pub-id pub-id-type="pmid">20709691</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>An improved algorithm for matching biological sequences</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>162</volume>
        <fpage>705</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90398-9</pub-id>
        <pub-id pub-id-type="pmid">7166760</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Luczak</surname>
            <given-names>BB</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>MeShClust: an intelligent tool for clustering DNA sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2018</year>
        <volume>46</volume>
        <issue>14</issue>
        <fpage>e83</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky315</pub-id>
        <pub-id pub-id-type="pmid">29718317</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Mean shift, mode seeking, and clustering</article-title>
        <source>IEEE Trans Pattern Anal Mach Intell</source>
        <year>1995</year>
        <volume>17</volume>
        <issue>8</issue>
        <fpage>790</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1109/34.400568</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Comaniciu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Meer</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Mean shift analysis and applications</article-title>
        <source>Proc IEEE Int Conf Comput Vis</source>
        <year>1999</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Comaniciu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Meer</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Mean shift: a robust approach toward feature space analysis</article-title>
        <source>IEEE Trans Pattern Anal Mach Intell</source>
        <year>2002</year>
        <volume>24</volume>
        <issue>5</issue>
        <fpage>603</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1109/34.1000236</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
          <name>
            <surname>Mitchell</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Dassopoulos</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mullin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Hager</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>An intelligent system to detect crohn’s disease inflammation in wireless capsule endoscopy videos</article-title>
        <source>Proc IEEE Int Symp Biomed Imaging</source>
        <year>2010</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Barash</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Comaniciu</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Meanshift clustering for DNA microarray analysis</article-title>
        <source>Proc IEEE Comput Syst Bioinform Conf</source>
        <year>2004</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>L-y</given-names>
          </name>
          <name>
            <surname>Abyzov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Korbel</surname>
            <given-names>JO</given-names>
          </name>
          <name>
            <surname>Snyder</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gerstein</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Msb: a mean-shift-based approach for the analysis of structural variation in the genome</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>19</volume>
        <issue>1</issue>
        <fpage>106</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.080069.108</pub-id>
        <pub-id pub-id-type="pmid">19037015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de Brito</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Maracaja-Coutinho</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>de Farias</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Batista</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>do Rêgo</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>A novel method to predict genomic islands based on mean shift clustering algorithm</article-title>
        <source>PLoS ONE</source>
        <year>2016</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>0146352</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0146352</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="book">
        <person-group person-group-type="editor">
          <name>
            <surname>Dang</surname>
            <given-names>TK</given-names>
          </name>
          <name>
            <surname>Küng</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Takizawa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Chung</surname>
            <given-names>TM</given-names>
          </name>
        </person-group>
        <source>Inflammatory Bowel Disease Classification Improvement with Metagenomic Data Binning Using Mean-Shift Clustering</source>
        <year>2020</year>
        <publisher-loc>Singapore</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Luczak</surname>
            <given-names>BB</given-names>
          </name>
        </person-group>
        <article-title><italic>Identity</italic>: rapid alignment-free prediction of sequence alignment identity scores using self-supervised general linear models</article-title>
        <source>NAR Genom Bioinform</source>
        <year>2021</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>001</fpage>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Alignment-free sequence comparison: benefits, applications, and tools</article-title>
        <source>Genome Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>186</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1319-7</pub-id>
        <pub-id pub-id-type="pmid">28974235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zielezinski</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
          <name>
            <surname>Bernard</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Leimeister</surname>
            <given-names>C-A</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Dencker</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Lau</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Röhling</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Comin</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>S-H</given-names>
          </name>
          <name>
            <surname>Vinga</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Almeida</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Chan</surname>
            <given-names>CX</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Sun</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Morgenstern</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Karlowski</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Benchmarking of alignment-free sequence comparison methods</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>144</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1755-7</pub-id>
        <pub-id pub-id-type="pmid">31345254</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Luczak</surname>
            <given-names>BB</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>A survey and evaluations of histogram-based statistics in alignment-free sequence comparison</article-title>
        <source>Brief Bioinform</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>1222</fpage>
        <lpage>37</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbx161</pub-id>
        <pub-id pub-id-type="pmid">29220512</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kohavi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>John</surname>
            <given-names>GH</given-names>
          </name>
        </person-group>
        <article-title>Wrappers for feature subset selection</article-title>
        <source>Artif Intell</source>
        <year>1997</year>
        <volume>97</volume>
        <issue>1–2</issue>
        <fpage>273</fpage>
        <lpage>24</lpage>
        <pub-id pub-id-type="doi">10.1016/S0004-3702(97)00043-X</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>MUSCLE: a multiple sequence alignment method with reduced time and space complexity</article-title>
        <source>BMC Bioinformatics</source>
        <year>2004</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>113</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-5-113</pub-id>
        <pub-id pub-id-type="pmid">15318951</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Géron</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <source>Hands-on Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, 2nd ed</source>
        <year>2019</year>
        <publisher-loc>Sebastopol</publisher-loc>
        <publisher-name>O’Reilly Media</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Costello</surname>
            <given-names>EK</given-names>
          </name>
          <name>
            <surname>Lauber</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Hamady</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fierer</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Gordon</surname>
            <given-names>JI</given-names>
          </name>
          <name>
            <surname>Knight</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Bacterial community variation in human body habitats across space and time</article-title>
        <source>Science</source>
        <year>2009</year>
        <volume>326</volume>
        <issue>5960</issue>
        <fpage>1694</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1126/science.1177486</pub-id>
        <pub-id pub-id-type="pmid">19892944</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stano</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Beke</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Klucar</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>viruSITE—integrated database for viral genomics</article-title>
        <source>Database (Oxford)</source>
        <year>2016</year>
        <volume>2016</volume>
        <fpage>162</fpage>
        <pub-id pub-id-type="doi">10.1093/database/baw162</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowlkes</surname>
            <given-names>EB</given-names>
          </name>
          <name>
            <surname>Mallows</surname>
            <given-names>CL</given-names>
          </name>
        </person-group>
        <article-title>A method for comparing two hierarchical clusterings</article-title>
        <source>J Am Stat Assoc</source>
        <year>1983</year>
        <volume>78</volume>
        <issue>383</issue>
        <fpage>553</fpage>
        <lpage>69</lpage>
        <pub-id pub-id-type="doi">10.1080/01621459.1983.10478008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Davies</surname>
            <given-names>DL</given-names>
          </name>
          <name>
            <surname>Bouldin</surname>
            <given-names>DW</given-names>
          </name>
        </person-group>
        <article-title>A cluster separation measure</article-title>
        <source>IEEE Trans Pattern Anal Mach Intell</source>
        <year>1979</year>
        <volume>PAMI-1</volume>
        <issue>2</issue>
        <fpage>224</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1109/TPAMI.1979.4766909</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dunn</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>Well-separated clusters and optimal fuzzy partitions</article-title>
        <source>J Cybern</source>
        <year>1974</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>95</fpage>
        <lpage>104</lpage>
        <pub-id pub-id-type="doi">10.1080/01969727408546059</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rousseeuw</surname>
            <given-names>PJ</given-names>
          </name>
        </person-group>
        <article-title>Silhouettes: a graphical aid to the interpretation and validation of cluster analysis</article-title>
        <source>J Comput Appl Math</source>
        <year>1987</year>
        <volume>20</volume>
        <fpage>53</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1016/0377-0427(87)90125-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Valencia</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Girgis</surname>
            <given-names>HZ</given-names>
          </name>
        </person-group>
        <article-title>LtrDetector: A tool-suite for detecting long terminal repeat retrotransposons de-novo</article-title>
        <source>BMC Genomics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>450</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-019-5796-9</pub-id>
        <pub-id pub-id-type="pmid">31159720</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

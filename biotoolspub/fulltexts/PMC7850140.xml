<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">NAR Genom Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">NAR Genom Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">nargab</journal-id>
    <journal-title-group>
      <journal-title>NAR Genomics and Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2631-9268</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7850140</article-id>
    <article-id pub-id-type="doi">10.1093/nargab/lqab003</article-id>
    <article-id pub-id-type="publisher-id">lqab003</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00030</subject>
        <subject>AcademicSubjects/SCI00980</subject>
        <subject>AcademicSubjects/SCI01060</subject>
        <subject>AcademicSubjects/SCI01140</subject>
        <subject>AcademicSubjects/SCI01180</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ClipSV: improving structural variation detection by read extension, spliced alignment and tree-based decision rules</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Xu</surname>
          <given-names>Peng</given-names>
        </name>
        <aff><institution>Department of Genetics, the University of Alabama at Birmingham</institution>, Birmingham, AL, 35294, <country country="US">USA</country></aff>
        <aff><institution>Informatics Institute, the University of Alabama at Birmingham</institution>, Birmingham, AL 35294, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>chen</surname>
          <given-names>Yu</given-names>
        </name>
        <aff><institution>Department of Genetics, the University of Alabama at Birmingham</institution>, Birmingham, AL, 35294, <country country="US">USA</country></aff>
        <aff><institution>Informatics Institute, the University of Alabama at Birmingham</institution>, Birmingham, AL 35294, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gao</surname>
          <given-names>Min</given-names>
        </name>
        <aff><institution>Informatics Institute, the University of Alabama at Birmingham</institution>, Birmingham, AL 35294, <country country="US">USA</country></aff>
        <aff><institution>Department of Medicine, Division of Cardiovascular Disease, the University of Alabama at Birmingham</institution>, Birmingham, AL 35233, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-5750-1808</contrib-id>
        <name>
          <surname>Chong</surname>
          <given-names>Zechen</given-names>
        </name>
        <!--<email>zchong@uab.edu</email>-->
        <aff><institution>Department of Genetics, the University of Alabama at Birmingham</institution>, Birmingham, AL, 35294, <country country="US">USA</country></aff>
        <aff><institution>Informatics Institute, the University of Alabama at Birmingham</institution>, Birmingham, AL 35294, <country country="US">USA</country></aff>
        <xref ref-type="corresp" rid="COR1"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +1 205 801 7590; Fax: +1 205 996 1118; Email: <email>zchong@uab.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-02-01">
      <day>01</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>01</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>lqab003</elocation-id>
    <history>
      <date date-type="received">
        <day>06</day>
        <month>8</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>02</day>
        <month>12</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>05</day>
        <month>1</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press on behalf of NAR Genomics and Bioinformatics.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="lqab003.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Structural variation (SV), which consists of genomic variation from 50 to millions of base pairs, confers considerable impacts on human diseases, complex traits and evolution. Accurately detecting SV is a fundamental step to characterize the features of individual genomes. Currently, several methods have been proposed to detect SVs using the next-generation sequencing (NGS) platform. However, due to the short length of sequencing reads and the complexity of SV content, the SV-detecting tools are still limited by low sensitivity, especially for insertion detection. In this study, we developed a novel tool, ClipSV, to improve SV discovery. ClipSV utilizes a read extension and spliced alignment approach to overcoming the limitation of read length. By reconstructing long sequences from SV-associated short reads, ClipSV discovers deletions and short insertions from the long sequence alignments. To comprehensively characterize insertions, ClipSV implements tree-based decision rules that can efficiently utilize SV-containing reads. Based on the evaluations of both simulated and real sequencing data, ClipSV exhibited an overall better performance compared to currently popular tools, especially for insertion detection. As NGS platform represents the mainstream sequencing capacity for routine genomic applications, we anticipate ClipSV will serve as an important tool for SV characterization in future genomic studies.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>University of Alabama at Birmingham</institution>
            <institution-id institution-id-type="DOI">10.13039/100008333</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institute of General Medical Sciences</institution>
            <institution-id institution-id-type="DOI">10.13039/100000057</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>1R35GM138212</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Heart, Lung, and Blood Institute</institution>
            <institution-id institution-id-type="DOI">10.13039/100000050</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>1OT3HL147154</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institute on Minority Health and Health Disparities</institution>
            <institution-id institution-id-type="DOI">10.13039/100006545</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>U54MD000502</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Human Genome Research Institute</institution>
            <institution-id institution-id-type="DOI">10.13039/100000051</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>3U01HG007301–06S1</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>American Heart Association</institution>
            <institution-id institution-id-type="DOI">10.13039/100000968</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>17IF33890015</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>Structural variations (SVs), which refer to genomic variants over 50 bp in length, are important sources of genomic mutations and potential causes of various human diseases (<xref rid="B1" ref-type="bibr">1</xref>). Over 8.5 Mbp genomic sequences belong to SVs that are shared in human populations (<xref rid="B2" ref-type="bibr">2</xref>). For decades, many efforts have been made to discover the SV events and resolve exact breakpoints in human genomes (<xref rid="B3" ref-type="bibr">3</xref>). Early studies relied on array CGH and SNP microarray to detect large-scale SVs and copy number variants (<xref rid="B4" ref-type="bibr">4</xref>,<xref rid="B5" ref-type="bibr">5</xref>). With the advancement of the next-generation sequencing (NGS) platform, paired-end short reads from whole genome sequencing (WGS) experiments have been widely applied to the human genome. The NGS platform shows better resolution in identifying and characterizing short SV events at the base level (<xref rid="B6" ref-type="bibr">6</xref>). More recently, long reads from the third-generation sequencing platforms have been employed for SV discovery in human genome (<xref rid="B7" ref-type="bibr">7</xref>). The circular consensus sequencing (CCS) or HiFi sequencing technology from PacBio further improves the long-read sequencing by generating high-fidelity (accuracy 99.8%) reads (<xref rid="B8" ref-type="bibr">8</xref>). However, compared with the long reads sequencing platform, NGS platform still dominates the current WGS studies due to the high-base accuracy, high-throughput and low-cost advantages (<xref rid="B3" ref-type="bibr">3</xref>).</p>
    <p>Based on the NGS platform, several methods have been developed to detect SV events from short reads (<xref rid="B9" ref-type="bibr">9</xref>). These methods can be classified into read depth, split reads, discordant read-pairs, (local) <italic>de novo</italic> assembly, and/or a combination of these methods (<xref rid="B10" ref-type="bibr">10</xref>). However, the SV detection from short reads are still limited by a low sensitivity and the detected events are biased toward deletions (<xref rid="B8" ref-type="bibr">8</xref>). There are two hindering factors with major influences on the performance of SV tools: the length of sequencing reads and the complexity of SV content. Currently, the read length for a typical NGS study ranges from 100 to 250 bp. Accurate alignment of the short reads onto the reference genome around the SV regions is computationally challenging (<xref rid="B11" ref-type="bibr">11</xref>). For the complexity of SV configuration, it was estimated that around 55% of SVs are present in repetitive sequences in human genome (<xref rid="B2" ref-type="bibr">2</xref>). Those repetitive regions pose a great challenge for accurate read alignment, as well as read assembly when resolving large insertion events. The complexity of SV sequences also indicates that traditional simulation analyses with random SV sequences may not properly estimate the performance of SV tools on real human genomes.</p>
    <p>In this study, we developed a novel SV detecting tool, ClipSV, to comprehensively characterize SV events from short reads. To overcome the above limitations of short reads, ClipSV has two major improvements compared with previous methods. First, it employs read extension and spliced alignment methods to resolve read length problem. Second, it implements a tree-based decision rules to efficiently process SV-containing reads and comprehensively detect insertion events. Rather than generating simple and random SV sequences, our simulation experiments were performed by spiking real SV events, which retains the complexity nature of the human genome. Based on evaluations from both simulation and real data, ClipSV shows a better performance than the current popular tools.</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>Detection of SV-containing reads</title>
      <p>ClipSV implements a multithreaded pipeline to detect SV signals. By retrieving aligned reads in 1 Mb region of a chromosome, ClipSV calculates the read length from the longest aligned length. The mean and the standard deviation of the insert size are calculated with all the fragment size of primary aligned reads with a mapping score equal 60. With the read length and insert size, ClipSV collects and categorizes all kinds of reads that are not perfectly aligned: (i) clipped reads are collected based on the feature that the read has any sequence (longer than 5 bp) clipped during alignment. (ii) Split reads are collected when they contain a supplementary alignment based on the SA tag in the BAM file. (iii) Discordant read pairs are defined as when the read pairs have an insert size longer than min(mean(insert size) + sd(insert size), mean(insert size) + 300). (iv) Translocation reads are collected based on the feature that the two paired reads are aligned to different chromosomes. (v) Inversion reads are collected based on the feature that the two read pairs have the same direction during alignment. For the reads that are clipped during alignment, the base qualities were examined for the mapped region and the clipped region, respectively. The ratio of high-quality bases is calculated by dividing the number of high-quality base (Phred value &gt; 20) by the total bases in the mapped or clipped region. All the reads with a duplication mark are filtered out before downstream analysis.</p>
    </sec>
    <sec id="SEC2-2">
      <title>Read extension and spliced alignment</title>
      <p>ClipSV employs read extension and spliced alignment to detect deletions and small insertions (Figure <xref ref-type="fig" rid="F1">1A</xref>). To perform read extension from the clipped reads, ClipSV filters out the clipped reads with low quality (mapping score &lt;20, supplementary alignments). Next, it slides along the chromosome and dynamically classifies the clipped reads within 1 kb bin into two groups based on directions of their clipped sequences: the MS group and SM group (M: Matched sequence; S: clipped sequences). For each clipped read in the SM group, ClipSV iteratively checks its overlapping with the clipped reads in the MS group within 1 kb. This process compares the first n bases in the SM read with the last n bases in the MS read, starting from the largest <italic>n</italic> = read length −30. For each iteration, the program decreases the n value until it identifies the longest <italic>n</italic> bases that are shared by the two clipped reads. If <italic>n</italic> is &gt;30, it will output the extended sequences by concatenating the two clipped reads. Considering potential sequencing errors, three bases shift is allowed at the boundary of the clipped reads. The resulted long sequences are reported in a FASTA format for downstream spliced alignment.</p>
      <fig id="F1" orientation="portrait" position="float">
        <label>Figure 1.</label>
        <caption>
          <p>Overview of the key methods implemented by ClipSV. (<bold>A</bold>) Schematic diagram of the read extension and spliced alignment to detect SVs. In the process of read extension, ClipSV slides along the chromosome and dynamically concatenates the clipped reads within 1 kb bin based on the reciprocal overlapping of the last 30 bp regions. With the reconstructed long sequences and the raw clipped reads, ClipSV utilizes the spliced alignment method to detect SV events (left: deletions; right: insertions). (<bold>B</bold>) The pipeline of the tree-based decision rules for insertion detection. By extracting all the positions supported by the clipped reads, ClipSV tests whether an insertion could be identified by the following decision nodes: the CIGAR string, the read extension and spliced alignment, the local <italic>de novo</italic> assembly, and the complex read alignment. These methods are sequentially arranged as the major decision nodes. The ‘yes’ or ‘no’ indicates whether an insertion from the SV containing position could be detected by the corresponding method. The test will terminate if an insertion event could be identified by the earlier node.</p>
        </caption>
        <graphic xlink:href="lqab003fig1"/>
      </fig>
      <p>The inputs of ClipSV include two sets of reads for spliced alignment: (i) the raw clipped reads without read extension; (ii) the extended sequences from clipped reads. The spliced function in Minimap2 (v2.14) is employed to perform the spliced alignment (Li, (<xref rid="B12" ref-type="bibr">12</xref>)). The resulted SAM file is analyzed to identify the reads with spliced alignment in the genome. With the SAM file, the CIGAR string is extracted and analyzed to search the location with ‘N’ or ‘D’ for deletions and ‘I’ for insertions. The deletions and short insertions are identified with at least X reads support (X is set as 10% of the sequencing coverage). The low-quality alignments are filtered out before downstream analysis: (i) mapping quality is lower than 10. (ii) Boundary sequence is clipped during alignment. (iii) Aligned boundary sequence is shorter than 20. (iv) More than five regions within a read are separately aligned.</p>
    </sec>
    <sec id="SEC2-3">
      <title>Detection of insertions by tree-based decision rules</title>
      <p>To detect insertions, ClipSV employs tree-based decision rules to efficiently process the clipped reads (Figure <xref ref-type="fig" rid="F1">1B</xref>). ClipSV extracts all the positions that are supported by the raw clipped reads. Then ClipSV tests whether an insertion can be discovered by the method in each node. The order of each decision tree node was arranged based on the following considerations: The CIGAR can discover indels (&lt;50 bp); the read extension and spliced alignment can identify short insertions; the local assembly can identify large insertions and the insertions missed by spliced alignment; the complex read alignment can rescue insertions that fail to be identified by the above methods.</p>
      <p>In detail, the positions of SV signals are collected based on the support of the raw clipped reads (5 bp region with at least X clipped reads; X is set as 10% of the sequencing coverage). Then ClipSV implements the decision tree by testing whether the SV signal could be resolved with an insertion event:</p>
      <list list-type="roman-lower">
        <list-item>
          <p>Starting from the original SAM file, the CIGAR string is extracted to check whether SV events are within the aligned reads.</p>
        </list-item>
        <list-item>
          <p>The raw clipped reads are subjected to read extension and spliced alignment to identify short insertions.</p>
        </list-item>
        <list-item>
          <p>If an insertion fails to be identified at the location, the local assembly will be performed by extracting all the raw short reads around the breakpoint regions. Around the 1.2 kb region of a high-confident breakpoint, all the clipped reads and improperly paired reads lacking alignment flag 0 × 2 (mapping score ≥ 20), as well as their read pairs are extracted from the BAM file. Then the retrieved read pairs are converted to FASTQ format. Velvet (v1.2) is employed to perform local de novo assembly (<xref rid="B13" ref-type="bibr">13</xref>). Three <italic>k</italic>-mers are used for <italic>de novo</italic> assembly: 41, 61 and 81 bp. The assembled contigs are pooled together as FASTA format and aligned to the genome by Minimap2. The aligned SAM file is processed to identify two types of insertions: the fully assembled insertions and the partially assembled insertions. The fully assembled insertions are identified by ‘I’ symbol in the CIGAR string around the breakpoint region. The partially assembled events are identified by the clipped sequences (&gt;50bp) around the breakpoint region.</p>
        </list-item>
        <list-item>
          <p>After <italic>de novo</italic> assembly, additional insertion events are identified by complex read alignments. Because of the sequence complexity, reads arising from insertion events are often unmapped or misaligned to other regions. To resolve such insertion events, the breakpoints of the SV events are identified with the following criteria: (a) the clipped reads are aligned with high confidence (mapping score ≥ 50, the ratio of high-quality bases ≥ 0.8), while their mates are aligned to other chromosomes or unmapped. (b) The breakpoints are supported with at least X clipped reads (X is set as 10% of the sequencing coverage). (c) The breakpoints do not overlap with indels, inversions or translocation events.</p>
        </list-item>
      </list>
      <p>Both translocation reads and complex read alignments from insertions include clipped reads and their mates mapped to different chromosomes. However, the complex read alignments include more types of read alignments: (i) when the inserted sequences are distinct from the genome sequence (e.g. <italic>de novo</italic> sequence insertion), the clipped reads will be only mapped to the breakpoint regions. Meanwhile, the clipped reads in translocations need to be mapped to two different chromosome locations; (ii) when the inserted sequences are slightly similar to the genome sequence, the inserted sequence may be mapped to other chromosomes, but with a low mapping quality. Such low mapping quality will not meet the criteria to support a translocation event (mapping quality &gt;20 for both locations). Therefore, these clipped reads in insertion regions can be distinguished from translocation reads; (iii) in the cases when the clipped sequences are quite short, only one region of the clipped reads can be mapped to the genome, leaving the clipped sequences unmapped. This kind of clipped reads will be regarded as complex read alignments to identify insertions, but they do not belong to translocation reads. To exclude the potential false positive signals, ClipSV performs an additional filtering step to ensure that translocations and other SV events are absent from the insertion positions. Consistent with long read studies that consider tandem duplications are one type of insertion events (<xref rid="B2" ref-type="bibr">2</xref>,<xref rid="B8" ref-type="bibr">8</xref>), ClipSV does not distinguish tandem duplications with the insertion events. The tandem duplication events are regarded as insertions when evaluating different SV tools.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Detection of inversions and translocations</title>
      <p>ClipSV relies on raw short reads to detect the inversion and translocation events. Inversion events are identified based on the reversion features from the split reads and discordant read pairs (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref>). For split reads, the orientations of the primary and supplementary alignments from the split reads are analyzed. If the two alignments from one split read have opposite orientations, an inversion spanning the two breakpoints will be identified. For discordant read pairs, if the orientations of the aligned read pairs are the same, this read pair will support a large inversion event. In this scenario, the precise location of the inversion breakpoint can be inferred based on the observed and the predicted insert size of the read pair. If the two breakpoint regions contain any clipped reads, the exact breakpoints of the clipped reads will be used to estimate the positions of inversion events. If the breakpoints are supported with at least X coverage of the split reads or discordant read pairs (X is set as 10% of the sequencing coverage), the inversion will be considered as a confident event.</p>
      <p>Translocation events involve the sequences between two chromosomes. Both clipped reads and discordant read pairs can be observed around the translocation regions (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2</xref>). For split reads, the breakpoints of the two alignments are regarded as the translocation site. For discordant read pairs, the translocation sites could be approximated by the alignments of the two read pairs. If the region of discordant read pairs overlaps with split reads, the exact breakpoints of the split reads will be used to estimate the positions of translocations. If the breakpoints are supported by at least 2*X coverage with the total number of split reads and discordant read pairs (X is set as 10% of the sequencing coverage), the translocation will be considered as a confident event.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Simulation of the SV-containing genome and the sequencing reads</title>
      <p>The SV events are enriched with repetitive sequences and are more prone to be distributed in centromeres and telomere regions (<xref rid="B2" ref-type="bibr">2</xref>). Therefore, simulating SV events that can reflect SV sequence features and chromosome locations is important to benchmark the performance of SV detection tools. To achieve this, we employed a non-random simulation strategy to simulate SV events in the genome. In this pipeline, the diploid genome was simulated separately by merging two haploid genomes. In each haploid genome, we spiked in the real deletions and insertion events of HG002 from GIAB database. These SV callsets were obtained from GIAB database (<ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/analysis/">ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/analysis/</ext-link> NIST_SVs_Integration_v0.6/), and only ‘PASS’ events were used for simulation. These SV events were identified by integration of multiple sequencing platforms and have a high-confidence based on the evaluation of CCS reads (<xref rid="B8" ref-type="bibr">8</xref>,<xref rid="B14" ref-type="bibr">14</xref>).</p>
      <p>Because the SV callset of HG002 in GIAB does not contain inversion and translocations, these two SV types were generated by random simulation. In real human genomes, the inversions and translocations are very few based on the evaluation of long read sequencing results (<xref rid="B2" ref-type="bibr">2</xref>). Therefore, 200 inversion events and 60 translocation events were simulated to benchmark performance of SV tools. To simulate inversion events, a genomic location was randomly selected while avoiding the co-occurrence with previous SV events within 1 kb region. The length of inversion was randomly assigned within 50–10 kb length. To generate translocation events, the chromosomes in the genome were grouped into two haplotypes. For each haplotype, two chromosomes were randomly selected as a pair for translocations. In total, 10 chromosome pairs were generated from each haplotype of the genome. For each chromosome pair, three reciprocal translocation events were created along the two chromosomes. Each reciprocal translocation generated two breakpoints, which lead to 60 translocation breakpoints for each haplotype. Deletions, insertions and inversions were randomly assigned to one haploid genome (heterozygous) or two haploid genomes (homozygous). Specifically, three numbers 1, 2 and 3 were randomly generated. These numbers represent three genotypes ‘1|1’, ‘0|1’ and ‘1|0’, and were randomly assigned to each SV event. Theoretically, the ratio of homozygous to heterozygous genotype in the simulation is 1:2 = 0.5. Using this method, we spiked in GIAB calls and generated 4089 ‘1|1’, 4165 ‘0|1’ and 4113 ‘1|0’ SV events. Translocation events were heterozygous and randomly assigned to a haplotype.</p>
      <p>After simulating SV events in the genome, two haploid genome sequences were obtained. Each haploid genome FASTA file was used to simulate reads by DWGSIM (v0.1.11) (<ext-link ext-link-type="uri" xlink:href="https://github.com/nh13/DWGSIM">https://github.com/nh13/DWGSIM</ext-link>) with parameters: -C 15 -S 2 -e 0.002 -E 0.002. Then the simulated raw reads from each genome were pooled together to generate a 30× coverage of paired-end reads. Two datasets were simulated with both 150 and 250 bp read length, respectively.</p>
      <p>The simulated reads and real sequencing reads were aligned to genome reference hg19 by BWA-MEM (v0.7.17) (<xref rid="B15" ref-type="bibr">15</xref>). SAMBLASTER (v0.1.24) was used to mark duplicate reads in the alignment (<xref rid="B16" ref-type="bibr">16</xref>). The commands used to generate the aligned bam file is: bwa mem -t 12 -R ‘@RG\tID:foo\tSM:bar’ genome.fa sim.read1.fastq sim.read2.fastq |samblaster | samtools view -1 - &gt;out.bam. Then the aligned bam file was sorted, indexed, and used for downstream SV calling.</p>
    </sec>
    <sec id="SEC2-6">
      <title>Evaluation of SV signal detection by different read alignments</title>
      <p>For the split reads and clipped reads, we extracted the aligned reads and calculated the breakpoint position. Then high-confident breakpoints, which were supported by breakpoint sites of two reads within 5 bp, were used to overlap with the high-confident SV events from GIAB database. If the breakpoint region overlapped with SV events within 200 bp window, the SV event signal was considered to be captured by this type of read alignment. For the discordant read-pairs, mate unmapped or mapped to other chromosomes, we approximated the breakpoint sites using the 200 bp boundary from start and the end positions of the mapped reads respectively. If these breakpoint sites were supported by two reads within 200 bp, they were considered as high-confident breakpoint sites. If the high-confident breakpoint sites overlapped with SV events within 600 bp window, the SV event signal was considered to be captured by this type of read alignment. Overall, in this process analyzed the captured SVsignal by different read alignments without resolving SV events.</p>
    </sec>
    <sec id="SEC2-7">
      <title>Evaluation of different SV tools by simulation</title>
      <p>To evaluate performance of each tool by simulation, Lumpy (v0.2.13) (Layer <italic>et al.</italic>, (<xref rid="B17" ref-type="bibr">17</xref>), Manta (v1.3.2) (Chen <italic>et al.</italic>, (<xref rid="B18" ref-type="bibr">18</xref>) and ClipSV were used to detect SV events with default parameters. For simulation studies, the identified SV events by each tool were compared with the ground truth events. For deletions and inversions, the identified true SV events were defined as the events overlapping with ground truth with 200 bp window shift, and less than 50% of size difference. For insertions, the identified true events were defined as 200 bp shift around the breakpoint of ground truth, and &lt;50% of size change. For large insertion events that do not have an event size, the evaluation was performed based on 200 bp shift around the breakpoint of ground truth. For translocations, the true events were defined as the events overlapping with ground truth with 200 bp window shift. The sensitivity was calculated by dividing the number of true positive events by the number of ground true events. The precision was calculated by dividing the number of true positive events by the number of total identified events. The F1 score was calculated as: 2*(sensitivity*precision)/(sensitivity+precision).</p>
    </sec>
    <sec id="SEC2-8">
      <title>Evaluation of different SV tools by real sequencing data</title>
      <p>To evaluate performance of different SV tools in real genome sequencing reads, we obtained 2 × 150 bp and 2 × 250 bp reads sequenced by Illumina platform from GIAB (<ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/HG002_NA24385_son/">ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/HG002_NA24385_son/</ext-link>). The raw reads were mapped to hg19 reference genome and down-sampled to 30× coverage. Lumpy (v0.2.13), Manta (v1.3.2) and ClipSV were run with default parameters to detect SVs.</p>
      <p>We used two datasets to evaluate the performance of different SV tools: the high-confident SVs in GIAB database and the CCS detected SV results. As the GIAB high-confident callset only contains half of the SV events identified by the CCS dataset (<xref rid="B8" ref-type="bibr">8</xref>), this callset is only suitable to evaluate the sensitivity of SV tools. The SV events detected by the CCS reads was used to evaluate the precision of different SV tools. For the high-confident SVs in GIAB database, we compared the SV events with those detected by each tool. The true SV events were defined with the same criteria as the simulation analysis.</p>
      <p>For CCS read analysis, we downloaded the mapped CCS reads from GIAB database (<ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/HG002_NA24385_son/">ftp://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/AshkenazimTrio/HG002_NA24385_son/</ext-link>). Each CIGAR string of the read alignment was analyzed. The CIGAR character ‘I’ and ‘D’ was searched by a custom python script to identify SV events within the CIGAR string. The split information was also considered to identify large deletions and insertions. The SV events supported by at least three CCS reads were considered as confident events. These SVs were used as ground truth to evaluate performance of each SV tool. The criteria were similar with those in the simulation analysis: for deletions, the identified true SV events were defined as the events overlapping with ground truth with 200 bp window shift, and less than 50% of size difference; for insertions, the identified true events were defined as 200 bp shift around the breakpoint of ground truth and &lt;50% of size change; for the insertion events without an event size, the evaluation was only based on 200 bp shift around the breakpoint of ground truth.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS AND DISCUSSIONS</title>
    <sec id="SEC3-1">
      <title>Methods of ClipSV to detect SV events</title>
      <p>In human genomes, deletions and insertions represent the major types of SV events. Split reads, which have two alignments at the boundaries of the deleted sequences, are important signal for deletion discovery (Tattini <italic>et al.</italic>, (<xref rid="B10" ref-type="bibr">10</xref>). However, due to the repetitive nature of the contents of the SV events, the intrinsic short length of the sequencing reads and the uneven read distribution, the split read signal may disappear around the SV boundary (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3</xref>). Unlike split reads methods that use two alignments of a split read, ClipSV starts from all clipped reads (the reads with sequence clipped during alignment) that contain SV signals. Two key methods distinguish ClipSV from other tools. First, ClipSV employs the read extension and spliced alignment to detect deletions and short insertions (Figure <xref ref-type="fig" rid="F1">1A</xref>). Second, it adopts tree-based decision rules to comprehensively detect and classify insertion events (Figure <xref ref-type="fig" rid="F1">1B</xref>).</p>
      <p>To alleviate the read length limitation, ClipSV seeks to extend the read length to generate long sequences and aligning the reconstructed long sequences onto the genome (Figure <xref ref-type="fig" rid="F1">1A</xref>). It first performs pair-wise overlapping of the clipped reads to generate long sequences. This process involves concatenating the two reads that contain common sequences (&gt;30 bp) with a ‘head-to-tail’ structures between them. With the reconstructed long sequences as well as raw clipped reads, ClipSV utilizes spliced alignment method to detect SV events. Spliced alignment was originally proposed as an algorithm to construct exon assemblies from the genome background (<xref rid="B19" ref-type="bibr">19</xref>). Recently, it was used in mapping the long reads onto the genome reference (<xref rid="B12" ref-type="bibr">12</xref>). Here, taking the advantage of longer read length, spliced alignment method is employed by ClipSV to discover SV events within the reconstructed long sequences. The design of read extension and spliced alignment method has the following advantages. First, as read extension performs pair-wise overlapping of clipped reads, the computational process is efficient and the resulted long sequences are accurate. Second, unlike assembly based methods that usually reply on reads with a high coverage and try to calculate a long consensus sequence representing that region (<xref rid="B20" ref-type="bibr">20</xref>), the read extension method faithfully keeps useful and informative reads and the extended sequences can be treated as a single long read to support an SV event. Third, spliced alignment can identify deletions and short insertions by aligning the clipped reads to the boundary sequences of SV events. Meanwhile, the long sequences from read extension can be directly used by spliced alignment, alleviating read length limitation of the raw clipped reads.</p>
      <p>Detecting insertion events is intrinsically difficult for short reads. Based on recent estimates from Pacbio sequencing results, the sensitivity of SV detection in current tools is still very low and biased toward deletions (<xref rid="B8" ref-type="bibr">8</xref>). To improve insertion detection, ClipSV implements tree-based decision rules to efficiently stream the clipped reads for insertion detection. Briefly, it first collects the SV candidate breakpoints based on the raw clipped reads. Then it implements read extension and spliced alignment to detect short insertion events within the raw clipped reads and extended long sequences. If an insertion fails to be identified at the location, the de bruijn graph based local assembly will be performed by extracting all the raw short reads around the breakpoint regions. If both spliced alignment and local assembly fail to identify the insertion event, ClipSV will test whether an insertion could be supported by the complex read alignments. Considering complex read alignments may be introduced by clipped reads of other types of SVs, ClipSV further filters the positions overlapping with deletions, inversions and translocations.</p>
    </sec>
    <sec id="SEC3-2">
      <title>Evaluation of SV signals captured by ClipSV</title>
      <p>Clipped reads are the starting point for ClipSV pipeline. We evaluated the performance of clipped reads in capturing SV signals. We benchmarked the results with high-confident SV events from the HG002 sample of the GIAB database (<xref rid="B14" ref-type="bibr">14</xref>). To compare different types of read alignments, we categorized the sequencing reads into five groups: (i) the split reads; (ii) the discordant read pairs (distance of a read pair longer than expected); (iii) the mates of read pairs unmapped; (iv) the mates of read pairs mapped to other chromosomes; (v) the clipped reads. Among 386 high-confident deletions and 567 high-confident insertions (including tandem duplications) evaluated, the split reads overlapped with 177 (45.9%) deletions and 34 (6.0%) insertions, and the discordant read pairs overlapped with 149 (38.6%) deletions (Figure <xref ref-type="fig" rid="F2">2A</xref>). Noticeably, the split reads and discordant read pairs had a bias toward deletions compared with insertions. On the other hand, 7% of insertion signals overlapped with the reads whose mates were unmapped, indicating these events are novel sequence insertions. Moreover, 31% of insertion signals overlapped with the reads whose mates were mapped to different chromosomes, suggesting the inserted sequences have sequence similarity to other genomic regions. Among the five different alignments, the clipped reads captured the most comprehensive SV signals, which included 273 (70.7%) deletions and 374 (66.0%) insertions (Figure <xref ref-type="fig" rid="F2">2A</xref>).</p>
      <fig id="F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>Evaluation of SV detecting methods implemented by ClipSV. (<bold>A</bold>) Percentage of SV events overlapping with signals of clipped reads, split reads and discordant read pairs. The Mate unmap and Mate transposition refer to the reads whose mates were unmapped or mapped to different chromosomes. (<bold>B</bold>) Percentage of detected SVs by read extension and spliced alignment with 150 and 250 bp read length. (<bold>C</bold>) Percentage of identified deletions by different methods with split reads, discordant read pairs and clipped reads. The orange column indicates the spliced alignment and read extension applied by ClipSV. (<bold>D</bold>) Percentage of identified insertions by different methods applied in tree-based decision rules. The orange column indicates the assembled decision tree approach applied by ClipSV. For above evaluation analyses, the high-confident SVs from chromosome 1 of HG002 sample in the GIAB database were used as ground truth. The read alignments are from 2 × 150 bp read length with 30× sequencing depth. Two reads were used to support each read signal.</p>
        </caption>
        <graphic xlink:href="lqab003fig2"/>
      </fig>
    </sec>
    <sec id="SEC3-3">
      <title>Evaluation of read extension and spliced alignment methods</title>
      <p>Read length is a key factor that influences read alignment and SV detection (<xref rid="B7" ref-type="bibr">7</xref>). With the advancement of short read sequencing technology, 150 bp read length is widely adopted in genome sequencing projects. Meanwhile, 250 bp read length is nowadays also available in MiSeq and NovaSeq 6000 sequencers on Illumina platform (<ext-link ext-link-type="uri" xlink:href="https://www.illumina.com/">https://www.illumina.com/</ext-link>). Therefore, we investigated the performance of read extension and splice alignment with different read lengths. Among the same evaluation SVs from the HG002 of the GIAB database, spliced alignment of clipped reads detected 218 (56.5%) deletions and 5 (0.9%) insertions with 2 × 150 bp sequencing reads (Figure <xref ref-type="fig" rid="F2">2B</xref>). After the procedure of read extension, it discovered 244 (63.2%) deletions and 78 (13.8%) insertions. In contrast, split reads alone detected 177 (45.9%) deletions (Figure <xref ref-type="fig" rid="F2">2C</xref>). Even when combining with discordant read pairs, it could only detect 205 (53%) deletions. This result showed the read extension and spliced alignment had a better performance than split reads and discordant read pairs in detecting deletions. For 2 × 250 bp reads, spliced alignment of clipped reads could identify 235 (60.9%) deletions and 36 (6.3%) insertions. After read extension, it discovered 257 (66.6%) and 108 (19.0%) insertions. This result showed the read extension and spliced alignment method had an even better performance with a 250 bp sequencing length.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Evaluation of tree-based decision rules</title>
      <p>As spliced alignment compares the two parts of clipped reads with the boundary sequences of the deletions, the length of deleted sequence is not a constraint for deletion detection. For insertions, the spliced alignment can only identify small insertion events within the clipped reads and the extended long sequences (<xref ref-type="supplementary-material" rid="sup1">Supplementary figure S4</xref>). To improve insertion discovery, ClipSV implements the tree-based decision rules that sequentially integrate multiple detection methods. Thus, we evaluated the performance of each detection method and their contributions to the whole pipeline. Among the evaluated SVs from the GIAB database, the read extension and spliced alignment detected 86 insertions (15%) (Figure <xref ref-type="fig" rid="F2">2D</xref>). Then these SV sites were excluded from the candidate breakpoints, and local de novo assembly was performed by extracting all the raw clipped reads. In this process, the local assembly detected 72 (13%) insertions. Next, we excluded candidate breakpoints overlapping with identified deletions, inversions and translocations. For the remaining candidate breakpoints, 71 (13%) insertions were supported by evidences of complex read pair alignments. When integrated with different methods as decision nodes, the tree-based decision rules could identify 226 (40%) insertion events. This result showed the tree-based decision rules improved the insertion detection by taking advantage of each detection method.</p>
    </sec>
    <sec id="SEC3-5">
      <title>Performance of ClipSV in 150 bp WGS datasets</title>
      <p>To evaluate the overall performance at the whole genome level, we compared the ClipSV with currently popular SV tools Lumpy and Manta. These two tools were chosen because they are representative for the different methods to detect SVs: Lumpy discovers SV events by integrating SV signals from split reads, discordant read pairs and read depths (<xref rid="B17" ref-type="bibr">17</xref>), while Manta improves SV detection by resolving breakend graphs with a local assembly approach (<xref rid="B18" ref-type="bibr">18</xref>). Based on a recent study, both Lumpy and Manta were ranked among top tools for SV detection (<xref rid="B21" ref-type="bibr">21</xref>).</p>
      <p>We first constructed a nonrandom simulation dataset by spiking in 12 047 high-confident SV events of the sample HG002 from the GIAB. These SV events include 5192 deletions and 6855 insertions. We also randomly simulated 200 inversions and 120 translocation breakpoints in the genome to encompass diverse SV types. With the SV containing genome sequence, 150 bp paired-end reads were simulated to a 30× sequencing depth. Figure <xref ref-type="fig" rid="F3">3A</xref> shows the overall performance of different tools in detecting SV events in the 150 bp simulation dataset. For deletions, Manta and ClipSV had a comparable performance (3757 versus 3745, <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). But Lumpy only detected 2620 events, which was much lower than Manta and ClipSV. For insertions, ClipSV had the best performance among the three tools. It detected 6069 (88.9%) insertion events. In contrast, Manta detected 5737 (83.7%) insertions and Lumpy did not detect any true insertions. Instead, Lumpy reported a great proportion of false positive events in translocations (Figure <xref ref-type="fig" rid="F3">3A</xref>). This is likely because Lumpy does not perform well in resolving insertions from translocations. For inversions, Lumpy has the best performance among the three tools. To estimate the overall performance, we calculated the F1 score for the three tools. ClipSV has a highest F1 score (0.90), followed by Manta (0.88) and Lumpy (0.35). Apart from Lumpy and Manta, we also evaluated the performance of a local assembly based SV tool svABA, which relies on String Graph Assembler and is efficient for SV detection at genome-wide scale with low memory and computing requirement (<xref rid="B22" ref-type="bibr">22</xref>). As svABA only outputs breakpoints without resolving SV types, we used all the breakpoints it identified to support the true SV events in simulation. The results showed that svABA had 24.6% sensitivity and 29.3% precision to detect the spiked-in SV events (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>). In contrast, ClipSV showed 81.9% sensitivity and 98.9% precision (Figure <xref ref-type="fig" rid="F3">3A</xref>). These results suggest a better performance of ClipSV compared with the pure assembly based method.</p>
      <fig id="F3" orientation="portrait" position="float">
        <label>Figure 3.</label>
        <caption>
          <p>Performance of different SV detecting tools with 2 × 150 bp sequencing reads. (<bold>A</bold>) Performance of SV detecting tools in 2 × 150 bp simulation dataset with 30× sequencing depth. The insertions and deletions were generated by spiking in 12 047 high-confident SV events of the sample HG002 from the GIAB. The inversions and translocations were generated by random simulation. The number of true SV events were shown for each SV category, followed by the number of total detected events in brackets. Evaluation of SV tools was based on the detected SV events in each type. (<bold>B</bold>) Evaluation of deletion detection by different SV tools on real WGS data. Bar plots show the deletion events detected by each tool with 2 × 150 bp sequencing reads. Two datasets were used to evaluate tool performance: the GIAB high-confident SVs (light gray bars) and the CCS SVs (gray bars). The black bar indicates total detected events. (<bold>C</bold>) Evaluation of insertion detection by different SV tools on real WGS data.</p>
        </caption>
        <graphic xlink:href="lqab003fig3"/>
      </fig>
      <p>We also evaluated the performance of ClipSV on the bias of the homologous SV events. Of all the simulated SV events (4089 homozygous events and 8278 heterozygous events), ClipSV identified 3493 (85.4%) of the homologous SVs and 6635 (80.2%) heterozygous events. Among the simulated deletions, ClipSV detected 1314 (76.1%) homologous events and 2431 (70.1%) heterozygous events. For insertions, ClipSV detected 2121 (92.3%) homologous events and 3975 (87.2%) heterozygous events. These results showed ClipSV has a slight bias in the detecting homologous events which are supported by more read alignment signals.</p>
      <p>To evaluate the performance of SV tools on real WGS datasets, we analyzed 150 bp paired-end reads with 30× sequencing depth in the HG002 sample. We used the GIAB high-confident SV callset and CCS long reads to evaluate the performance of different tools. In total, ClipSV detected 9149 SV events, which included 5019 deletions and 4130 insertions, respectively. Among them, 5826 events (63.7%) are supported by GIAB high-confident SV callset and 7383 events (80.7%) are supported by CCS reads (Figure <xref ref-type="fig" rid="F3">3B</xref> and <xref ref-type="fig" rid="F3">C</xref>). In contrast, Manta detected 7993 SV events, including 5141 deletions and 2852 insertions, respectively. Among them, 4927 events (61.6%) were supported by GIAB high-confident SV callset and 6590 events (82.4%) were supported by CCS reads. Lumpy reported 3777 SV events that included 3269 deletions and 508 insertions/duplications. Among them, 2348 (62.2%) and 2332 (61.7%) events were supported by GIAB high-confident SV callset and CCS reads, respectively. With CCS reads as a benchmark, ClipSV identified the highest number of true SV events (7383), followed by Manta (6590) and Lumpy (2332). Consistent with the simulation results, ClipSV had a comparable performance with Manta in detecting deletions but exhibited a significant improvement in insertion detections.</p>
    </sec>
    <sec id="SEC3-6">
      <title>Performance of ClipSV in 250 bp WGS datasets</title>
      <p>Using a similar strategy to 150 bp reads, we compared the performance of different SV tools with 250 bp sequencing reads. First, we spiked the same SV events into the genome and simulated 250 bp paired-end reads to a 30× sequencing depth. Compared with 150 bp simulation results (Figure <xref ref-type="fig" rid="F3">3A</xref>), both ClipSV and Manta had an improved performance with 250 bp reads. The overall sensitivity of ClipSV increased from 81.9 to 90.2% (Figure <xref ref-type="fig" rid="F4">4A</xref>). Similarly, the sensitivity of Manta increased from 79.2 to 84.7%. However, Lumpy showed a decreased sensitivity from 23.7 to 22.5%. With 250 bp sequencing reads, ClipSV excelled Manta in all kinds of SV types, including deletions, insertions, inversions and translocations (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>). Consistently, ClipSV had a highest F1 score (0.94) among three tools, followed by Manta (0.91) and Lumpy (0.33). As shown in Figure <xref ref-type="fig" rid="F4">4A</xref>, compared with 150 bp sequencing reads, Manta had a higher false positive rate (28.4 versus 9.3%) in detecting translocations with a longer read length. We also evaluated the performance of svABA with the 250 bp reads. The result showed that svABA had 24.6% sensitivity and 35.1% precision to detect the spiked-in SV events, slightly better than the 150 bp reads (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S2</xref>).</p>
      <fig id="F4" orientation="portrait" position="float">
        <label>Figure 4.</label>
        <caption>
          <p>Performance of different SV detecting tools with 2 × 250 bp sequencing reads. (<bold>A</bold>) Performance of SV detecting tools in 2 × 250 bp simulation dataset with 30× sequencing depth. The insertions and deletions were generated by spiking in 12 047 high-confident SV events of the sample HG002 from the GIAB. The inversions and translocations were generated by random simulation. Evaluation of SV tools was based on the detected SV events in each type. (<bold>B</bold>) Evaluation of deletion detection by different SV tools on real WGS data. Bar plots show the deletion events detected by each tool with 2 × 250 bp sequencing reads. Two datasets were used to evaluate tool performance: the GIAB high-confident SVs (light gray bars) and the CCS SVs (gray bars). The black bar indicates total detected events. (<bold>C</bold>) Evaluation of insertion detection by different SV tools on real WGS data.</p>
        </caption>
        <graphic xlink:href="lqab003fig4"/>
      </fig>
      <p>The detection bias toward the homologous SV events was also evaluated for ClipSV. Of all the simulated SV events (4089 homozygous events and 8278 heterozygous events), ClipSV identified 3757 (91.2%) of the homologous SVs and 7404 (89.4%) heterozygous events. Among the simulated deletions, ClipSV detected 1547 (89.6%) homologous events and 2936 (84.7%) heterozygous events. For insertions, ClipSV detected 2151 (93.6%) homologous events and 4232 (92.9%) heterozygous events. These results showed ClipSV with the 2 × 250 bp reads has a better performance in detecting heterozygous events compared with the 2 × 150 bp reads.</p>
      <p>We also investigated the performance of SV tools on real WGS datasets with 250 bp paired-end reads in the HG002 sample. Similar to the 150 bp dataset, the performance was evaluated by the GIAB high-confident SV callset and CCS long reads. ClipSV detected 9573 SV events with 250 bp reads, including 4909 deletions and 4664 insertions, respectively. Among them, 6338 events (66.2%) were supported by GIAB high-confident SV callset and 8215 events (85.8%) were supported by CCS reads (Figure <xref ref-type="fig" rid="F4">4B</xref> and <xref ref-type="fig" rid="F4">C</xref>). Compared with 150 bp sequencing reads, ClipSV showed an improved performance in both deletions and insertions with 250 bp reads. In contrast, Manta totally detected 6994 SV events, which included 4848 deletions and 2146 insertions, respectively. Among them, 4457 events (63.7%) were supported by GIAB high-confident SV callset and 5938 events (84.9%) were supported by CCS reads. Compared with 150 bp sequencing reads, Manta showed a comparable performance in detecting deletions but a decreased performance in detecting insertions with 250 bp reads. For Lumpy, it totally reported 3624 SV events, including 3262 deletions and 362 insertions/duplications. Among them, 2398 (66.2%) and 2382 (65.7%) events were supported by GIAB high-confident SV callset and CCS reads, respectively. Its performance in 250 bp reads was similar to the 150 bp sequencing reads. With CCS reads as a benchmark, ClipSV identified the highest number of true SV events (8215), followed by Manta (5938) and Lumpy (2382). Consistent with simulation results, ClipSV had a better performance than Manta and Lumpy in both deletion and insertion events.</p>
    </sec>
    <sec id="SEC3-7">
      <title>Read depth, running time and memory cost</title>
      <p>Finally, we evaluate the performance of ClipSV on different read coverage. We generated five different coverage (10×, 15×, 20×, 25× and 30×) by down-sampling of 150 bp WGS reads of HG002. As shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>, ClipSV identified 5019 deletions and 4130 insertions with the sequencing reads of 30× coverage. Among them, 3973 (79.2%) deletions and 3410 (82.6%) insertions could be supported by CCS reads. When read coverage was decreased to 15×, ClipSV identified 4434 deletions and 3962 insertions. Among them, 3475 (78.4%) deletions and 2831 (71.5%) insertions could be supported by CCS reads. Therefore, compared with 30× read coverage, ClipSV could retain 87.5% (3475/3973) sensitivity for deletions and 83.0% (2831/3410) sensitivity for insertions with 15× read coverage. When the read coverage was down-sampled to 10×, ClipSV could retain 72.2% (2868/3973) sensitivity for deletions and 60.0% (2045/3410) sensitivity for insertions.</p>
      <table-wrap id="tbl1" orientation="portrait" position="float">
        <label>Table 1.</label>
        <caption>
          <p>Run time and memory usage for the SV tools</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="3" align="center" rowspan="1">2 × 150 bp WGS (30×)</th>
              <th colspan="3" align="center" rowspan="1">2 × 250 bp WGS (30×)</th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">Tools</th>
              <th rowspan="1" colspan="1">ClipSV</th>
              <th rowspan="1" colspan="1">Lumpy</th>
              <th rowspan="1" colspan="1">Manta</th>
              <th rowspan="1" colspan="1">ClipSV</th>
              <th rowspan="1" colspan="1">Lumpy</th>
              <th rowspan="1" colspan="1">Manta</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Wall-clock (hours)</td>
              <td align="center" rowspan="1" colspan="1">2.9</td>
              <td align="center" rowspan="1" colspan="1">5.3</td>
              <td align="center" rowspan="1" colspan="1">0.4</td>
              <td align="center" rowspan="1" colspan="1">3.5</td>
              <td align="center" rowspan="1" colspan="1">6.7</td>
              <td align="center" rowspan="1" colspan="1">1.0</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Memory (GB)</td>
              <td align="center" rowspan="1" colspan="1">22.3</td>
              <td align="center" rowspan="1" colspan="1">14.7</td>
              <td align="center" rowspan="1" colspan="1">1.3</td>
              <td align="center" rowspan="1" colspan="1">29.3</td>
              <td align="center" rowspan="1" colspan="1">22.9</td>
              <td align="center" rowspan="1" colspan="1">1.5</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>We also compared the running time and memory cost of the three tools (Table <xref rid="tbl1" ref-type="table">1</xref>). With a high-performance cluster with 12 threads, the three tools could be finished within 7 h for one WGS sample with a 30× sequencing depth. The peak memory costs were within 30 GB for these tools. Among them, Manta had the best performance in both running time and memory cost. Compared with Lumpy, ClipSV had a shorter running time but a higher memory cost. The 250 bp sequencing reads required more computational resources for all the three tools. Based on overall performance, ClipSV has a potential to serve as a widely used tool for SV analysis in individual genomes as well as large consortium cohorts.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>lqab003_Supplemental_File</label>
      <media xlink:href="lqab003_supplemental_file.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ACK1">
    <title>ACKNOWLEDGEMENTS</title>
    <p>We are grateful of using the Genome In A Bottle dataset for our evaluation. We also thank the anonymous reviewers’ insightful comments to help improve the manuscript.</p>
  </ack>
  <sec sec-type="data-availability" id="SEC4">
    <title>DATA AVAILABILITY</title>
    <p>Implemented in Python, ClipSV is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ChongLab/ClipSV">https://github.com/ChongLab/ClipSV</ext-link>,</p>
  </sec>
  <sec id="SEC5">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="https://academic.oup.com/nargab/article-lookup/doi/10.1093/nargab/lqab003#supplementary-data">Supplementary Data</ext-link> are available at NARGAB Online.</p>
  </sec>
  <sec id="SEC6">
    <title>FUNDING</title>
    <p>University of Alabama at Birmingham, Research Start-up Fund (in part); National Institute of General Medical Sciences [1R35GM138212]; National Heart, Lung, and Blood Institute, BioData Catalyst Fellowship [1OT3HL147154]; National Institute on Minority Health and Health Disparities [U54MD000502]; National Human Genome Research Institute [3U01HG007301–06S1; American Heart Association (AHA), Institutional Data Fellowship [17IF33890015] to Z.C.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <notes id="NT1">
    <title>Notes</title>
    <p>Present address: Peng Xu, Department of Genetics &amp; Genomic Sciences, Icahn School of Medicine at Mount Sinai, New York, NY 10029, USA.</p>
  </notes>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Carvalho</surname><given-names>C.M.</given-names></string-name>, <string-name><surname>Lupski</surname><given-names>J.R.</given-names></string-name></person-group><article-title>Mechanisms underlying structural variant formation in genomic disorders</article-title>. <source>Nat. Rev. Genet.</source><year>2016</year>; <volume>17</volume>:<fpage>224</fpage>–<lpage>238</lpage>.<pub-id pub-id-type="pmid">26924765</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Audano</surname><given-names>P.A.</given-names></string-name>, <string-name><surname>Sulovari</surname><given-names>A.</given-names></string-name>, <string-name><surname>Graves-Lindsay</surname><given-names>T.A.</given-names></string-name>, <string-name><surname>Cantsilieris</surname><given-names>S.</given-names></string-name>, <string-name><surname>Sorensen</surname><given-names>M.</given-names></string-name>, <string-name><surname>Welch</surname><given-names>A.E.</given-names></string-name>, <string-name><surname>Dougherty</surname><given-names>M.L.</given-names></string-name>, <string-name><surname>Nelson</surname><given-names>B.J.</given-names></string-name>, <string-name><surname>Shah</surname><given-names>A.</given-names></string-name>, <string-name><surname>Dutcher</surname><given-names>S.K.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Characterizing the major structural variant alleles of the human genome</article-title>. <source>Cell</source>. <year>2019</year>; <volume>176</volume>:<fpage>663</fpage>–<lpage>675</lpage>.<pub-id pub-id-type="pmid">30661756</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sudmant</surname><given-names>P.H.</given-names></string-name>, <string-name><surname>Rausch</surname><given-names>T.</given-names></string-name>, <string-name><surname>Gardner</surname><given-names>E.J.</given-names></string-name>, <string-name><surname>Handsaker</surname><given-names>R.E.</given-names></string-name>, <string-name><surname>Abyzov</surname><given-names>A.</given-names></string-name>, <string-name><surname>Huddleston</surname><given-names>J.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Ye</surname><given-names>K.</given-names></string-name>, <string-name><surname>Jun</surname><given-names>G.</given-names></string-name>, <string-name><surname>Fritz</surname><given-names>M.H.</given-names></string-name><etal>et al</etal>.</person-group><article-title>An integrated map of structural variation in 2,504 human genomes</article-title>. <source>Nature</source>. <year>2015</year>; <volume>526</volume>:<fpage>75</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">26432246</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Iafrate</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Feuk</surname><given-names>L.</given-names></string-name>, <string-name><surname>Rivera</surname><given-names>M.N.</given-names></string-name>, <string-name><surname>Listewnik</surname><given-names>M.L.</given-names></string-name>, <string-name><surname>Donahoe</surname><given-names>P.K.</given-names></string-name>, <string-name><surname>Qi</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Scherer</surname><given-names>S.W.</given-names></string-name>, <string-name><surname>Lee</surname><given-names>C.</given-names></string-name></person-group><article-title>Detection of large-scale variation in the human genome</article-title>. <source>Nat. Genet.</source><year>2004</year>; <volume>36</volume>:<fpage>949</fpage>–<lpage>951</lpage>.<pub-id pub-id-type="pmid">15286789</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Peiffer</surname><given-names>D.A.</given-names></string-name>, <string-name><surname>Le</surname><given-names>J.M.</given-names></string-name>, <string-name><surname>Steemers</surname><given-names>F.J.</given-names></string-name>, <string-name><surname>Chang</surname><given-names>W.</given-names></string-name>, <string-name><surname>Jenniges</surname><given-names>T.</given-names></string-name>, <string-name><surname>Garcia</surname><given-names>F.</given-names></string-name>, <string-name><surname>Haden</surname><given-names>K.</given-names></string-name>, <string-name><surname>Li</surname><given-names>J.</given-names></string-name>, <string-name><surname>Shaw</surname><given-names>C.A.</given-names></string-name>, <string-name><surname>Belmont</surname><given-names>J.</given-names></string-name><etal>et al</etal>.</person-group><article-title>High-resolution genomic profiling of chromosomal aberrations using Infinium whole-genome genotyping</article-title>. <source>Genome Res.</source><year>2006</year>; <volume>16</volume>:<fpage>1136</fpage>–<lpage>1148</lpage>.<pub-id pub-id-type="pmid">16899659</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Korbel</surname><given-names>J.O.</given-names></string-name>, <string-name><surname>Urban</surname><given-names>A.E.</given-names></string-name>, <string-name><surname>Affourtit</surname><given-names>J.P.</given-names></string-name>, <string-name><surname>Godwin</surname><given-names>B.</given-names></string-name>, <string-name><surname>Grubert</surname><given-names>F.</given-names></string-name>, <string-name><surname>Simons</surname><given-names>J.F.</given-names></string-name>, <string-name><surname>Kim</surname><given-names>P.M.</given-names></string-name>, <string-name><surname>Palejev</surname><given-names>D.</given-names></string-name>, <string-name><surname>Carriero</surname><given-names>N.J.</given-names></string-name>, <string-name><surname>Du</surname><given-names>L.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Paired-end mapping reveals extensive structural variation in the human genome</article-title>. <source>Science</source>. <year>2007</year>; <volume>318</volume>:<fpage>420</fpage>–<lpage>426</lpage>.<pub-id pub-id-type="pmid">17901297</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huddleston</surname><given-names>J.</given-names></string-name>, <string-name><surname>Ranade</surname><given-names>S.</given-names></string-name>, <string-name><surname>Malig</surname><given-names>M.</given-names></string-name>, <string-name><surname>Antonacci</surname><given-names>F.</given-names></string-name>, <string-name><surname>Chaisson</surname><given-names>M.</given-names></string-name>, <string-name><surname>Hon</surname><given-names>L.</given-names></string-name>, <string-name><surname>Sudmant</surname><given-names>P.H.</given-names></string-name>, <string-name><surname>Graves</surname><given-names>T.A.</given-names></string-name>, <string-name><surname>Alkan</surname><given-names>C.</given-names></string-name>, <string-name><surname>Dennis</surname><given-names>M.Y.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Reconstructing complex regions of genomes using long-read sequencing technology</article-title>. <source>Genome Res.</source><year>2014</year>; <volume>24</volume>:<fpage>688</fpage>–<lpage>696</lpage>.<pub-id pub-id-type="pmid">24418700</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wenger</surname><given-names>A.M.</given-names></string-name>, <string-name><surname>Peluso</surname><given-names>P.</given-names></string-name>, <string-name><surname>Rowell</surname><given-names>W.J.</given-names></string-name>, <string-name><surname>Chang</surname><given-names>P.C.</given-names></string-name>, <string-name><surname>Hall</surname><given-names>R.J.</given-names></string-name>, <string-name><surname>Concepcion</surname><given-names>G.T.</given-names></string-name>, <string-name><surname>Ebler</surname><given-names>J.</given-names></string-name>, <string-name><surname>Fungtammasan</surname><given-names>A.</given-names></string-name>, <string-name><surname>Kolesnikov</surname><given-names>A.</given-names></string-name>, <string-name><surname>Olson</surname><given-names>N.D.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Accurate circular consensus long-read sequencing improves variant detection and assembly of a human genome</article-title>. <source>Nat. Biotechnol.</source><year>2019</year>; <volume>37</volume>:<fpage>1155</fpage>–<lpage>1162</lpage>.<pub-id pub-id-type="pmid">31406327</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alkan</surname><given-names>C.</given-names></string-name>, <string-name><surname>Coe</surname><given-names>B.P.</given-names></string-name>, <string-name><surname>Eichler</surname><given-names>E.E.</given-names></string-name></person-group><article-title>Genome structural variation discovery and genotyping</article-title>. <source>Nat. Rev. Genet.</source><year>2011</year>; <volume>12</volume>:<fpage>363</fpage>–<lpage>376</lpage>.<pub-id pub-id-type="pmid">21358748</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tattini</surname><given-names>L.</given-names></string-name>, <string-name><surname>D’Aurizio</surname><given-names>R.</given-names></string-name>, <string-name><surname>Magi</surname><given-names>A.</given-names></string-name></person-group><article-title>Detection of genomic structural variants from next-generation sequencing data</article-title>. <source>Front. Bioeng. Biotechnol.</source><year>2015</year>; <volume>3</volume>:<fpage>92</fpage>.<pub-id pub-id-type="pmid">26161383</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huddleston</surname><given-names>J.</given-names></string-name>, <string-name><surname>Chaisson</surname><given-names>M.J.P.</given-names></string-name>, <string-name><surname>Steinberg</surname><given-names>K.M.</given-names></string-name>, <string-name><surname>Warren</surname><given-names>W.</given-names></string-name>, <string-name><surname>Hoekzema</surname><given-names>K.</given-names></string-name>, <string-name><surname>Gordon</surname><given-names>D.</given-names></string-name>, <string-name><surname>Graves-Lindsay</surname><given-names>T.A.</given-names></string-name>, <string-name><surname>Munson</surname><given-names>K.M.</given-names></string-name>, <string-name><surname>Kronenberg</surname><given-names>Z.N.</given-names></string-name>, <string-name><surname>Vives</surname><given-names>L.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Discovery and genotyping of structural variation from long-read haploid genome sequence data</article-title>. <source>Genome Res.</source><year>2017</year>; <volume>27</volume>:<fpage>677</fpage>–<lpage>685</lpage>.<pub-id pub-id-type="pmid">27895111</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H.</given-names></string-name></person-group><article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>. <source>Bioinformatics</source>. <year>2018</year>; <volume>34</volume>:<fpage>3094</fpage>–<lpage>3100</lpage>.<pub-id pub-id-type="pmid">29750242</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zerbino</surname><given-names>D.R.</given-names></string-name>, <string-name><surname>Birney</surname><given-names>E.</given-names></string-name></person-group><article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>. <source>Genome Res.</source><year>2008</year>; <volume>18</volume>:<fpage>821</fpage>–<lpage>829</lpage>.<pub-id pub-id-type="pmid">18349386</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zook</surname><given-names>J.M.</given-names></string-name>, <string-name><surname>Hansen</surname><given-names>N.F.</given-names></string-name>, <string-name><surname>Olson</surname><given-names>N.D.</given-names></string-name>, <string-name><surname>Chapman</surname><given-names>L.M.</given-names></string-name>, <string-name><surname>Mullikin</surname><given-names>J.C.</given-names></string-name>, <string-name><surname>Xiao</surname><given-names>C.</given-names></string-name>, <string-name><surname>Sherry</surname><given-names>S.</given-names></string-name>, <string-name><surname>Koren</surname><given-names>S.</given-names></string-name>, <string-name><surname>Phillippy</surname><given-names>A.M.</given-names></string-name>, <string-name><surname>Boutros</surname><given-names>P.C.</given-names></string-name><etal>et al</etal>.</person-group><article-title>A robust benchmark for detection of germline large deletions and insertions</article-title>. <source>Nat. Biotechnol.</source><year>2020</year>; <volume>38</volume>:<fpage>1347</fpage>–<lpage>1355</lpage>.<pub-id pub-id-type="pmid">32541955</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H.</given-names></string-name></person-group><article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>. <year>2013</year>; <comment>arXiv doi:</comment><comment>26 May 2013, preprint: not peer reviewed</comment><uri xlink:href="https://www.arxiv.org/abs/1303.3997">https://arxiv.org/abs/1303.3997</uri>.</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gregory</surname><given-names>G.F.</given-names></string-name>, <string-name><surname>Ira</surname><given-names>M.H.</given-names></string-name></person-group><article-title>SAMBLASTER: fast duplicate marking and structural variant read extraction</article-title>. <source>Bioinformatics</source>. <year>2014</year>; <volume>30</volume>:<fpage>2503</fpage>–<lpage>2505</lpage>.<pub-id pub-id-type="pmid">24812344</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Layer</surname><given-names>R.M.</given-names></string-name>, <string-name><surname>Chiang</surname><given-names>C.</given-names></string-name>, <string-name><surname>Quinlan</surname><given-names>A.R.</given-names></string-name>, <string-name><surname>Hall</surname><given-names>I.M.</given-names></string-name></person-group><article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title>. <source>Genome Biol.</source><year>2014</year>; <volume>15</volume>:<fpage>R84</fpage>.<pub-id pub-id-type="pmid">24970577</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>X.</given-names></string-name>, <string-name><surname>Schulz-Trieglaff</surname><given-names>O.</given-names></string-name>, <string-name><surname>Shaw</surname><given-names>R.</given-names></string-name>, <string-name><surname>Barnes</surname><given-names>B.</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F.</given-names></string-name>, <string-name><surname>Källberg</surname><given-names>M.</given-names></string-name>, <string-name><surname>Cox</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Kruglyak</surname><given-names>S.</given-names></string-name>, <string-name><surname>Saunders</surname><given-names>C.T.</given-names></string-name></person-group><article-title>Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications</article-title>. <source>Bioinformatics</source>. <year>2016</year>; <volume>32</volume>:<fpage>1220</fpage>–<lpage>1222</lpage>.<pub-id pub-id-type="pmid">26647377</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>T.D.</given-names></string-name>, <string-name><surname>Watanabe</surname><given-names>C.K.</given-names></string-name></person-group><article-title>GMAP: a genomic mapping and alignment program for mRNA and EST sequences</article-title>. <source>Bioinformatics</source>. <year>2005</year>; <volume>21</volume>:<fpage>1859</fpage>–<lpage>1875</lpage>.<pub-id pub-id-type="pmid">15728110</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>X.</given-names></string-name>, <string-name><surname>Li</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zou</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Wu</surname><given-names>F.-X.</given-names></string-name>, <string-name><surname>Yi</surname><given-names>P.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>J.</given-names></string-name></person-group><article-title>Current challenges and solutions of de novo assembly</article-title>. <source>Quant. Biol.</source><year>2019</year>; <volume>7</volume>:<fpage>90</fpage>–<lpage>109</lpage>.</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kosugi</surname><given-names>S.</given-names></string-name>, <string-name><surname>Momozawa</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>X.</given-names></string-name>, <string-name><surname>Terao</surname><given-names>C.</given-names></string-name>, <string-name><surname>Kubo</surname><given-names>M.</given-names></string-name>, <string-name><surname>Kamatani</surname><given-names>Y.</given-names></string-name></person-group><article-title>Comprehensive evaluation of structural variation detection algorithms for whole genome sequencing</article-title>. <source>Genome Biol.</source><year>2019</year>; <volume>20</volume>:<fpage>117</fpage>.<pub-id pub-id-type="pmid">31159850</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wala</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Bandopadhayay</surname><given-names>P.</given-names></string-name>, <string-name><surname>Greenwald</surname><given-names>N.F.</given-names></string-name>, <string-name><surname>O’Rourke</surname><given-names>R.</given-names></string-name>, <string-name><surname>Sharpe</surname><given-names>T.</given-names></string-name>, <string-name><surname>Stewart</surname><given-names>C.</given-names></string-name>, <string-name><surname>Schumacher</surname><given-names>S.</given-names></string-name>, <string-name><surname>Li</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Weischenfeldt</surname><given-names>J.</given-names></string-name>, <string-name><surname>Yao</surname><given-names>X.</given-names></string-name><etal>et al</etal>.</person-group><article-title>SvABA: genome-wide detection of structural variants and indels by local assembly</article-title>. <source>Genome Res.</source><year>2018</year>; <volume>28</volume>:<fpage>581</fpage>–<lpage>591</lpage>.<pub-id pub-id-type="pmid">29535149</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

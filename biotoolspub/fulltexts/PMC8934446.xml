<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8934446</article-id>
    <article-id pub-id-type="publisher-id">4637</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-022-04637-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>3GOLD: optimized Levenshtein distance for clustering third-generation sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Logan</surname>
          <given-names>Robert</given-names>
        </name>
        <address>
          <email>logan.ro@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fleischmann</surname>
          <given-names>Zoe</given-names>
        </name>
        <address>
          <email>fleischmann.z@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Annis</surname>
          <given-names>Sofia</given-names>
        </name>
        <address>
          <email>annis.s@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wehe</surname>
          <given-names>Amy Wangsness</given-names>
        </name>
        <address>
          <email>awehe@fitchburgstate.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Tilly</surname>
          <given-names>Jonathan L.</given-names>
        </name>
        <address>
          <email>j.tilly@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Woods</surname>
          <given-names>Dori C.</given-names>
        </name>
        <address>
          <email>d.woods@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Khrapko</surname>
          <given-names>Konstantin</given-names>
        </name>
        <address>
          <email>k.khrapko@northeastern.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.261112.7</institution-id><institution-id institution-id-type="ISNI">0000 0001 2173 3359</institution-id><institution>College of Science, Department of Biology, </institution><institution>Northeastern University, </institution></institution-wrap>330 Huntington Ave, Boston, MA 02115 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.255405.3</institution-id><institution-id institution-id-type="ISNI">0000 0004 0457 479X</institution-id><institution>Department of Biology, </institution><institution>Eastern Nazarene College, </institution></institution-wrap>23 E Elm Ave, Quincy, MA 02170 USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.255936.e</institution-id><institution-id institution-id-type="ISNI">0000 0000 9620 1544</institution-id><institution>Health and Natural Sciences Division, Mathematics Department, </institution><institution>Fitchburg State University, </institution></institution-wrap>Fitchburg, MA 01420-2697 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>3</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>3</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>95</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>5</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>3</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Third-generation sequencing offers some advantages over next-generation sequencing predecessors, but with the caveat of harboring a much higher error rate. Clustering-related sequences is an essential task in modern biology. To accurately cluster sequences rich in errors, error type and frequency need to be accounted for. Levenshtein distance is a well-established mathematical algorithm for measuring the edit distance between words and can specifically weight insertions, deletions and substitutions. However, there are drawbacks to using Levenshtein distance in a biological context and hence has rarely been used for this purpose. We present novel modifications to the Levenshtein distance algorithm to optimize it for clustering error-rich biological sequencing data.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We successfully introduced a bidirectional frameshift allowance with end-user determined accommodation caps combined with weighted error discrimination. Furthermore, our modifications dramatically improved the computational speed of Levenstein distance. For simulated ONT MinION and PacBio Sequel datasets, the average clustering sensitivity for 3GOLD was 41.45% (S.D. 10.39) higher than Sequence-Levenstein distance, 52.14% (S.D. 9.43) higher than Levenshtein distance, 55.93% (S.D. 8.67) higher than Starcode, 42.68% (S.D. 8.09) higher than CD-HIT-EST and 61.49% (S.D. 7.81) higher than DNACLUST. For biological ONT MinION data, 3GOLD clustering sensitivity was 27.99% higher than Sequence-Levenstein distance, 52.76% higher than Levenshtein distance, 56.39% higher than Starcode, 48% higher than CD-HIT-EST and 70.4% higher than DNACLUST.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">Our modifications to Levenshtein distance have improved its speed and accuracy compared to the classic Levenshtein distance, Sequence-Levenshtein distance and other commonly used clustering approaches on simulated and biological third-generation sequenced datasets. Our clustering approach is appropriate for datasets of unknown cluster centroids, such as those generated with unique molecular identifiers as well as known centroids such as barcoded datasets. A strength of our approach is high accuracy in resolving small clusters and mitigating the number of singletons.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-022-04637-7.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Clustering</kwd>
      <kwd>Edit-distance</kwd>
      <kwd>Single-molecule sequencing</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100009633</institution-id>
            <institution>Eunice Kennedy Shriver National Institute of Child Health and Human Development</institution>
          </institution-wrap>
        </funding-source>
        <award-id>RO1-HD091439</award-id>
        <award-id>RO1-HD091439</award-id>
        <award-id>RO1-HD091439</award-id>
        <award-id>RO1-HD091439</award-id>
        <award-id>RO1-HD091439</award-id>
        <award-id>RO1-HD091439</award-id>
        <principal-award-recipient>
          <name>
            <surname>Logan</surname>
            <given-names>Robert</given-names>
          </name>
          <name>
            <surname>Fleischmann</surname>
            <given-names>Zoe</given-names>
          </name>
          <name>
            <surname>Annis</surname>
            <given-names>Sofia</given-names>
          </name>
          <name>
            <surname>Tilly</surname>
            <given-names>Jonathan L.</given-names>
          </name>
          <name>
            <surname>Woods</surname>
            <given-names>Dori C.</given-names>
          </name>
          <name>
            <surname>Khrapko</surname>
            <given-names>Konstantin</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>Â© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par14">Third-generation sequencing (TGS) platforms such as Pacific Biosciences (PacBio) Single-Molecule Real-Time (SMRT) Sequencing and Oxford Nanopore Technologies (ONT) produce average read lengths of over 10,000 bases [<xref ref-type="bibr" rid="CR1">1</xref>]. Long reads offer large-scale accuracy at the expense of a high per-base error rate compared to Sanger sequencing and next-generation sequencing. Error rates of TGS platforms have been reported to be as low asââ¤â1% for PacBio HiFi reads to 15% or higher for ONT R9.4.1 chemistry [<xref ref-type="bibr" rid="CR2">2</xref>â<xref ref-type="bibr" rid="CR4">4</xref>]. As technology continues to rapidly improve, it is expected that these error rates will drop.</p>
    <p id="Par15">TGS error is random. Therefore, clustering related reads to build a consensus can resolve the error. Clustering related reads for this purpose can be assisted with the use of random short (4â20Â bp) oligonucleotides appended to individual molecules in a specific genomic locus, such as barcodes or unique molecular identifiers (UMIs) [<xref ref-type="bibr" rid="CR5">5</xref>]. There are other molecular sequences that have biologically relevant reasons for being clustered, such as motifs, promoters and repeated genomic sequences [<xref ref-type="bibr" rid="CR6">6</xref>]. In all cases, these sequences are subject to sequencing error, which needs to be corrected before they can be clustered appropriately [<xref ref-type="bibr" rid="CR7">7</xref>].</p>
    <p id="Par16">All clustering algorithms are based on the notion of edit distance between strings. Edit distance is a measurement of the number of insertions, deletions and substitutions required to make one sequence match another. The most commonly used edit distance algorithm is Levenshtein distance (LD) [<xref ref-type="bibr" rid="CR8">8</xref>]. LD has frequently been used in computerized spell checking, speech recognition, and dialect and plagiarism detection. Rarely has it been used in molecular biology analysis. There are three hurdles that LD needs to overcome for it to be optimized for biological applications, especially in clustering error-rich TGS data. First, it needs to accommodate frameshift due to indels. Second, the time complexity needs to be reduced to make it more efficient for large datasets. Third, weighted errors must be accommodated to match the error profile of the data. We have, for the first time, overcome the challenges associated with combining these improvements in our approach called Third-Generation Optimized Levenshtein distance (3GOLD). We demonstrate that 3GOLD metrics coupled with a density-based clustering algorithm are able to accurate cluster sequences without prior knowledge of cluster centroid sequences, making it well suited for UMI datasets as well as barcoded datasets.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Accommodating frameshift</title>
      <p id="Par17">Traditional LD is calculated to assume that the lengths of the two sequences being compared are absolute. LD can be computed between two strings that have differing lengths. However, LD cannot interpret changes at sequence borders due to an insertion or deletion as being frameshift consequence of the internal errors when the sequence of interest is embedded in a larger sequence. Biological sequences of interest for error correction, locating or clustering are subject to frameshift errors, since they are merely a subsequence of the whole in which they find themselves.</p>
      <p id="Par18">This limitation of LD has been addressed in the development of Sequence-Levenshtein distance (SLD) [<xref ref-type="bibr" rid="CR9">9</xref>]. SLD accommodates a truncation or elongation of sequence <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A$$\end{document}</tex-math><mml:math id="M2"><mml:mi>A</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq1.gif"/></alternatives></inline-formula> to match the length of sequence <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$B$$\end{document}</tex-math><mml:math id="M4"><mml:mi>B</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq2.gif"/></alternatives></inline-formula> without an increase in the distance calculation, provided that <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A$$\end{document}</tex-math><mml:math id="M6"><mml:mi>A</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq3.gif"/></alternatives></inline-formula> is a prefix of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$B$$\end{document}</tex-math><mml:math id="M8"><mml:mi>B</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq4.gif"/></alternatives></inline-formula>. Therefore, SLD is only adequate for sequences that experience mutations leading to a frameshift on the downstream (3â) border of the sequence of interest. This occurrence will not always be the case and is subject to how the sequence of interest is identified, especially when it is embedded as a subsequence. Consequently, SLD is limited to an unrealistically simple assumption of what nucleotide sequences are like that need to be clustered, found or error corrected. Although the development of SLD was an important step in the right direction for making LD appropriate for a biological context, it falls short of truly being adequate for most situations. The benefit of SLD was more theoretical than practical. There are many instances in which DNA sequences need to rely on edit distances for analysis while being embedded in an entire molecule. For example, ligation adapters, primers, probes and sequence loci that are alignment products can all have error-induced border frameshifts in an upstream (5â) position [<xref ref-type="bibr" rid="CR10">10</xref>].</p>
      <p id="Par19">To overcome this limitation of SLD, we included mirrored SLD in 3GOLD computations to accommodate both upstream and downstream frameshifts. This can be accomplished by computing the distance between words as they appear as well as between the reverse of both words. The lowest edit distance value between the comparisons is used in clustering threshold analysis. An example of this improvement is shown in Fig.Â <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>3GOLD accommodates upstream and downstream frameshift. <bold>A</bold> SLD is lower than LD when computing a single deletion-induced downstream frameshift. If an upstream frameshift occurs due to the single base deletion, there is no benefit to using SLD over LD. <bold>B</bold> The benefit of SLD accommodating frameshift can be rescued in the case of an upstream frameshift by calculating the SLD of mirrored sequences, effectively converting upstream frameshift to downstream frameshift</p></caption><graphic xlink:href="12859_2022_4637_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>Speed improvement</title>
      <p id="Par20">Previous attempts at reducing LD computational speed have focused on capturing the value in the position at the last column and last row of the LD matrix. However, we are interested in capturing the SLD, which is the lowest value along the rightmost column and the bottommost row in the LD matrix, not just the corner intersection between them. Therefore, earlier strategies are insufficient for our purposes. By appropriately reducing the number of computations required by 3GOLD while still capturing the SLD value, we have been able to reduce 3GOLDâs computational time compared to LD and SLD. We tested the effects of dataset length and depth on our speed improvements using identical Perl scripts except for edit distance metrics subroutines. As the sequence length increased, the computational time increased quadratically, as expected [<xref ref-type="bibr" rid="CR11">11</xref>]. As the database depth increased, the computational time increased linearly, which was also expected because the sequence length was held constant. The SLD computational time was nearly identical to LD but was slightly longer due to searching the entire rightmost column and bottommost row for the lowest value rather than just identifying the value in the bottommost and rightmost corner of the matrix as LD does.</p>
      <p id="Par21">For depth experiments, our 3GOLD method was an average of 2.77 (S.D. 0.11) times faster than the average computation time for SLD and LD. For example, at a depth of 100,000 sequences, 3GOLD computation finished at 97.16Â s, SLD finished at 274.02Â s and LD finished at 267.39Â s. The linear trendline equation for 3GOLD depth computation time is <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.001x + 0.3411$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.001</mml:mn><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mn>0.3411</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq5.gif"/></alternatives></inline-formula> with <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9962$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9962</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq6.gif"/></alternatives></inline-formula>. The linear trendline equation for the SLD depth computation time is <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.0027x + 1.3613$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0027</mml:mn><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mn>1.3613</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq7.gif"/></alternatives></inline-formula> with <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9982$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9982</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq8.gif"/></alternatives></inline-formula>. The linear trendline equation for LD depth computation time is <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.0027x - 0.0365$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0027</mml:mn><mml:mi>x</mml:mi><mml:mo>-</mml:mo><mml:mn>0.0365</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq9.gif"/></alternatives></inline-formula> with <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9975$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9975</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq10.gif"/></alternatives></inline-formula>. During the length experiments, 3GOLD was on average 3.68 (S.D. 0.60) times faster than SLD or LD. For example, at length 100 3GOLD computation finished at 30.98Â s, SLD finished at 101.29Â s and LD finished at 96.13Â s. The power trendline equation for 3 GOLD length computation time is <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.0058x^{1.8182}$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0058</mml:mn><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mn>1.8182</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq11.gif"/></alternatives></inline-formula> with <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9936$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9936</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq12.gif"/></alternatives></inline-formula>. The power trendline equation for SLD length computation time is <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.0144x^{1.9146}$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0144</mml:mn><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mn>1.9146</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq13.gif"/></alternatives></inline-formula> with <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9951$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9951</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq14.gif"/></alternatives></inline-formula>. The power trendline equation for LD length computation time is <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y = 0.0144x^{1.9146}$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mi>y</mml:mi><mml:mo>=</mml:mo><mml:mn>0.0144</mml:mn><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mn>1.9146</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq15.gif"/></alternatives></inline-formula> with <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R^{2} = 0.9951$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>0.9951</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq16.gif"/></alternatives></inline-formula>. The results of these speed experiments are presented in Fig.Â <xref rid="Fig2" ref-type="fig">2</xref>.<fig id="Fig2"><label>Fig. 2</label><caption><p>3GOLD is faster than SLD and LD. <bold>A</bold> Computation time increases linearly with increased dataset depth. Sequence length was held constant at 50 bases. <bold>B</bold> Computation time increases quadratically with increased sequence length. Dataset depth was held constant at 10,000 sequences</p></caption><graphic xlink:href="12859_2022_4637_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Accommodating weighted errors</title>
      <p id="Par22">To accurately cluster error-rich TGS data, error types need to be accommodated or discriminated against according to their frequency. LD can successfully accommodate weighted errors by manipulating the assigned cost to each error type. The following is an example of manipulating the core of the classic Levenshtein distance algorithm to accommodate weighted error. Given two strings <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a, b$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq17.gif"/></alternatives></inline-formula> of known lengths <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| a \right| = i$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mfenced close="|" open="|"><mml:mi>a</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq18.gif"/></alternatives></inline-formula> and <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| b \right| = j$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mfenced close="|" open="|"><mml:mi>b</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq19.gif"/></alternatives></inline-formula> respectively, the LD <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$lev\left( {i,j} \right)$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq20.gif"/></alternatives></inline-formula> between strings <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M42"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M44"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq22.gif"/></alternatives></inline-formula> is<disp-formula id="Equa"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{lev}}\left( {{\text{i}},{\text{j}}} \right) = \left\{ {\begin{array}{*{20}l} {\max \left( {{\text{i}},{\text{j}}} \right) } \hfill &amp; {if\min \left( {{\text{i}},{\text{j}}} \right) = 0,} \hfill \\ {\min \left\{ {\begin{array}{*{20}c} {lev\left( {{\text{i}} - 1,{\text{j}}} \right) + 1 } \\ {lev\left( {{\text{i}},{\text{ j}} - 1} \right) + 1 } \\ {lev\left( {{\text{i}} - 1,{\text{ j}} - 1} \right) + K} \\ \end{array} } \right.} \hfill &amp; {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M46" display="block"><mml:mrow><mml:mtext>lev</mml:mtext><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo movablelimits="true">min</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:mo movablelimits="true">min</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="italic">otherwise</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2022_4637_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq23"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 0$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq23.gif"/></alternatives></inline-formula> if <inline-formula id="IEq24"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {a_{i} = b_{i} } \right)$$\end{document}</tex-math><mml:math id="M50"><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq24.gif"/></alternatives></inline-formula> otherwise <inline-formula id="IEq25"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 1$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq25.gif"/></alternatives></inline-formula>. The added values can be manipulated to reflect the error weight of substitutions <inline-formula id="IEq26"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {lev\left( {i - 1,j - 1} \right)} \right)$$\end{document}</tex-math><mml:math id="M54"><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq26.gif"/></alternatives></inline-formula>, deletions <inline-formula id="IEq27"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {lev\left( {i,j - 1} \right)} \right)$$\end{document}</tex-math><mml:math id="M56"><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq27.gif"/></alternatives></inline-formula> or insertions <inline-formula id="IEq28"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {lev\left( {i - 1,j} \right)} \right)$$\end{document}</tex-math><mml:math id="M58"><mml:mfenced close=")" open="("><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq28.gif"/></alternatives></inline-formula>. The following example represents the modification of LD algorithm to weight insertions twice as much as deletions and substitutions. Given two strings <inline-formula id="IEq29"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a, b$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq29.gif"/></alternatives></inline-formula> of known lengths <inline-formula id="IEq30"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| a \right|$$\end{document}</tex-math><mml:math id="M62"><mml:mfenced close="|" open="|"><mml:mi>a</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq30.gif"/></alternatives></inline-formula> and <inline-formula id="IEq31"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| b \right|$$\end{document}</tex-math><mml:math id="M64"><mml:mfenced close="|" open="|"><mml:mi>b</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq31.gif"/></alternatives></inline-formula> respectively, the LD <inline-formula id="IEq32"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$lev\left( {i,j} \right)$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq32.gif"/></alternatives></inline-formula> between strings <inline-formula id="IEq33"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M68"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq33.gif"/></alternatives></inline-formula> and <inline-formula id="IEq34"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M70"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq34.gif"/></alternatives></inline-formula> is<disp-formula id="Equb"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{lev}}\left( {{\text{i}},{\text{j}}} \right) = \left\{ {\begin{array}{*{20}l} {\max \left( {{\text{i}},{\text{j}}} \right)} \hfill &amp; { if\min \left( {{\text{i}},{\text{j}}} \right) = 0,} \hfill \\ {\min \left\{ {\begin{array}{*{20}c} {lev\left( {{\text{i}} - 1,{\text{j}}} \right) + 2} \\ {lev\left( {{\text{i}},{\text{ j}} - 1} \right) + 1 } \\ {lev\left( {{\text{i}} - 1,{\text{ j}} - 1} \right) + K } \\ \end{array} } \right.} \hfill &amp; {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M72" display="block"><mml:mrow><mml:mtext>lev</mml:mtext><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo movablelimits="true">min</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:mo movablelimits="true">min</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="italic">otherwise</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2022_4637_Article_Equb.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq35"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 0$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq35.gif"/></alternatives></inline-formula> if <inline-formula id="IEq36"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {a_{i} = b_{i} } \right)$$\end{document}</tex-math><mml:math id="M76"><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq36.gif"/></alternatives></inline-formula> otherwise <inline-formula id="IEq37"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 1$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq37.gif"/></alternatives></inline-formula>.</p>
      <p id="Par23">The following example represents the modification of LD algorithm to weight deletions twice as much as insertions and substitutions. Given two strings <inline-formula id="IEq38"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a, b$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq38.gif"/></alternatives></inline-formula> of known lengths <inline-formula id="IEq39"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| a \right|$$\end{document}</tex-math><mml:math id="M82"><mml:mfenced close="|" open="|"><mml:mi>a</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq39.gif"/></alternatives></inline-formula> and <inline-formula id="IEq40"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| b \right|$$\end{document}</tex-math><mml:math id="M84"><mml:mfenced close="|" open="|"><mml:mi>b</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq40.gif"/></alternatives></inline-formula> respectively, the LD <inline-formula id="IEq41"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$lev\left( {i,j} \right)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq41.gif"/></alternatives></inline-formula> between strings <inline-formula id="IEq42"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M88"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq42.gif"/></alternatives></inline-formula> and <inline-formula id="IEq43"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M90"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq43.gif"/></alternatives></inline-formula> is<disp-formula id="Equc"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{lev}}\left( {{\text{i}},{\text{j}}} \right) = \left\{ {\begin{array}{*{20}l} {\max \left( {{\text{i}},{\text{j}}} \right) } \hfill &amp; {if\min \left( {{\text{i}},{\text{j}}} \right) = 0,} \hfill \\ {\min \left\{ {\begin{array}{*{20}c} {lev\left( {{\text{i}} - 1,{\text{j}}} \right) + 1} \\ {lev\left( {{\text{i}},{\text{ j}} - 1} \right) + 2} \\ {lev\left( {{\text{i}} - 1,{\text{ j}} - 1} \right) + K} \\ \end{array} } \right.} \hfill &amp; {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M92" display="block"><mml:mrow><mml:mtext>lev</mml:mtext><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mo movablelimits="true">min</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:mo movablelimits="true">min</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="italic">otherwise</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2022_4637_Article_Equc.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq44"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 0$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq44.gif"/></alternatives></inline-formula> if <inline-formula id="IEq45"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {a_{i} = b_{i} } \right)$$\end{document}</tex-math><mml:math id="M96"><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq45.gif"/></alternatives></inline-formula> otherwise <inline-formula id="IEq46"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 1$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq46.gif"/></alternatives></inline-formula>.</p>
      <p id="Par24">The following example represents the modification of LD algorithm to weight substitutions twice as much as insertions and deletions. Given two strings <inline-formula id="IEq47"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a, b$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq47.gif"/></alternatives></inline-formula> of known lengths <inline-formula id="IEq48"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| a \right|$$\end{document}</tex-math><mml:math id="M102"><mml:mfenced close="|" open="|"><mml:mi>a</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq48.gif"/></alternatives></inline-formula> and <inline-formula id="IEq49"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left| b \right|$$\end{document}</tex-math><mml:math id="M104"><mml:mfenced close="|" open="|"><mml:mi>b</mml:mi></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq49.gif"/></alternatives></inline-formula> respectively, the LD <inline-formula id="IEq50"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$lev\left( {i,j} \right)$$\end{document}</tex-math><mml:math id="M106"><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq50.gif"/></alternatives></inline-formula> between strings <inline-formula id="IEq51"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M108"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq51.gif"/></alternatives></inline-formula> and <inline-formula id="IEq52"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M110"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq52.gif"/></alternatives></inline-formula> is<disp-formula id="Equd"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{lev}}\left( {{\text{i}},{\text{j}}} \right) = \left\{ {\begin{array}{*{20}l} {\max \left( {{\text{i}},{\text{j}}} \right)} \hfill &amp; {if\;\min \left( {{\text{i}},{\text{j}}} \right) = 0,} \hfill \\ {\min \left\{ {\begin{array}{*{20}c} {lev\left( {{\text{i}} - 1,{\text{j}}} \right) + 1} \\ {lev\left( {{\text{i}},{\text{ j}} - 1} \right) + 1} \\ {lev\left( {{\text{i}} - 1,{\text{ j}} - 1} \right) + K} \\ \end{array} } \right.} \hfill &amp; {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M112" display="block"><mml:mrow><mml:mtext>lev</mml:mtext><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.277778em"/><mml:mo movablelimits="true">min</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:mo movablelimits="true">min</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mtext>j</mml:mtext></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>v</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>j</mml:mtext></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="italic">otherwise</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="12859_2022_4637_Article_Equd.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq53"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 0$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq53.gif"/></alternatives></inline-formula> if <inline-formula id="IEq54"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {a_{i} = b_{i} } \right)$$\end{document}</tex-math><mml:math id="M116"><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq54.gif"/></alternatives></inline-formula> otherwise <inline-formula id="IEq55"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K = 2$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq55.gif"/></alternatives></inline-formula>.</p>
      <p id="Par25">SLD, however, cannot successfully incorporate weighted errors into its calculation because the border values of the edit distance matrix table become erroneously inflated. An example of how weighted SLD fails is shown in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>.<fig id="Fig3"><label>Fig. 3</label><caption><p>SLD cannot accommodate weighted errors. <bold>A</bold> LD comparison of TAGCTAGC to TAGTAGCT reveals that an insertion of âCâ and a deletion of âTâ are required to make the second string match the first for an unweighted edit distance of 2. SLD analysis only considers the insertion of âCâ for an unweighted edit distance of 1. <bold>B</bold> When insertions are weighted 1 and deletions are weighted 5, LD is appropriately 6, reflecting an insertion of âCâ and a deletion of âTâ. However, SLD is not 1 as expected, but rather 3</p></caption><graphic xlink:href="12859_2022_4637_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par26">3GOLD offers an accurate and novel way of determining error type and frequency by interpreting the unweighted SLD value and position on the matrix by comparing it to the unweighted LD value. Therefore, 3GOLD combines the discriminatory benefits of weighted LD and the permissive benefits of SLD. For example, 3GOLD interprets the matrix table in Fig.Â <xref rid="Fig3" ref-type="fig">3</xref>(A) to determine that a single deletion is required to change âTAGCTAGCâ to âTAGTAGCTâ. In this case, âCâ following the first âGâ has been deleted. A description of the 3GOLD algorithm is found in the methods section. The pseudocode of the 3GOLD algorithm is presented in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    </sec>
    <sec id="Sec6">
      <title>Clustering simulated data</title>
      <p id="Par27">Singleton processing and resolving small clusters is a challenge for biological clustering tools. Therefore, we designed our simulated clustering experiments to test the sensitivity and specificity of clustering tools and their ability to correctly capture singletons at progressively more challenging parameters. The PacBio Sequencing Simulator (PaSS) tool was used to generate simulated Sequel reads [<xref ref-type="bibr" rid="CR12">12</xref>]. Nanosim version 2.5 was used to create ONT MinION R9.4 simulated reads [<xref ref-type="bibr" rid="CR13">13</xref>]. Six clustering parameters were tested: 4 clusters of 125 sequences each, 5 clusters of 100 sequences each, 10 clusters of 50 sequences each, 20 clusters of 25 sequences each, 25 clusters of 20 sequences each, and 50 clusters of 10 sequences each. We compared the performance of 3GOLD, SLD, LD, Starcode, CD-HIT-EST and DNACLUST [<xref ref-type="bibr" rid="CR14">14</xref>â<xref ref-type="bibr" rid="CR17">17</xref>]. Starcode is a LD based DNA clustering tool. CD-HIT-EST and DNACLUST are non-LD based but were included for comparison due to their popularity as DNA clustering tools.</p>
      <p id="Par28">Clustering ability was assessed using five criteria: specificity, sensitivity, total correct sequences clustered, number of qualified clusters formed and the number of singletons. In all areas, 3GOLD had a strong advantage except for specificity. All clustering tools and cluster parameters across datasets from both simulators had specificity values of 100% except for the following 3GOLD results. For PaSS simulated clusters, the 3GOLD specificity was 99.42% (S.D. 1.40) at 20âÃâ25, 99.10% (S.D. 2.76) at 25âÃâ20 and 98.97% (S.D. 3.66) at 50âÃâ10. For Nanosim simulated clusters, the 3GOLD specificity was 99.80% (S. D 0.40) at 4âÃâ125, 99.80% (S.D. 0.44) at 5âÃâ100, 99.60% (S.D. 0.85) at 10âÃâ50, 99.08% (S.D. 1.85) at 20âÃâ25, 97.48% (S.D. 5.30) at 25âÃâ20 and 95.82% (S.D. 8.65). These slight dips in 3GOLD specificity become progressively worse with increasingly small cluster sizes. As clusters become progressively larger in number and smaller in size, they begin to saturate the data field and reside closer to one another, which makes it harder to correctly resolve. No other clustering tool assessed had less than 100% specificity because of their relative inability to include sequences in clusters safeguarded against that risk.</p>
      <p id="Par29">There are three ways singletons responsible for 3GOLD specificity drops became erroneously clustered: a singleton that was equidistant between centroids was added to the larger of the two clusters, a singleton had accumulated enough error to have a weighted distance closer to an erroneous centroid, a singleton was âorphanedâ by the original reference centroid being clustered as a sequence in another cluster, leaving it to be clustered to another centroid that was within the clustering threshold. At parameter 4âÃâ125, PaSS had no incorrectly clustered sequences. Nanosim had 1 equidistant singleton that was added to the larger of the two clusters. At a parameter of 5âÃâ100, PaSS also had no incorrectly clustered sequences. Nanosim had the same equidistant singleton that was added to the larger of the two clusters as in parameter 4âÃâ125. At parameter 10âÃâ50, PaSS continued to have no incorrectly clustered sequences. Nanosim had 2 equidistant singletons that were added to the larger of two clusters. At parameter 20âÃâ25, PaSS had 2 equidistant singletons that were added to the largest of two clusters as well as 1 singleton that was closer to an erroneous centroid. Nanosim had 4 equidistant singletons that were added to the largest of two clusters. At parameter 25âÃâ20, PaSS had 1 equidistant singleton that was added to the largest of two clusters as well as 1 singleton that was closer to an erroneous centroid. PaSS also had 2 orphaned singletons. At 25âÃâ20, Nanosim produced 4 equidistant singletons that were clustered to the largest cluster and 1 orphaned singleton. At parameter 50âÃâ10, PaSS had 3 singletons that were closer to an erroneous centroid and 2 equidistant singletons that were added to the largest of two clusters. Nanosim had 1 equidistant singleton that was added to the largest of two clusters and 5 orphaned singletons.</p>
      <p id="Par30">3GOLD had statistically greater sensitivity than all other tools at all parameters tested with one exception. There was no significant difference between 3GOLD (99.40% S.D. 0.77) and SLD (74.40% S.D. 13.78) at the 4âÃâ125 clustering parameter as simulated by PaSS (Pâ=â0.1713), despite the large 25% difference between the two averages. DNACLUST had the highest number of significantly different sensitivity scores at 28 out of the 60 total comparisons. Starcode had the second highest number at 22 significantly different sensitivity scores. The sensitivity scores of Starcode and DNACLUST were never significantly different from each other. Perhaps the similarity between DNACLUST and Starcode performance is found in the fact that they both use a variant of the Needleman-Wunsch algorithm and store sequences in a trie data structure. Starcode and LD never exhibited statistically significant sensitivity scores, presumably because they are the only unweighted LD-based clustering tools without frameshift allowance. The specificity and sensitivity raw data for PaSS simulations are presented as a table in Additional file <xref rid="MOESM2" ref-type="media">2</xref>. The specificity data for the PaSS simulations are presented graphically in Additional file <xref rid="MOESM3" ref-type="media">3</xref>. The specificity and sensitivity raw data for Nanosim simulations are presented as a table in Additional file <xref rid="MOESM4" ref-type="media">4</xref>. The specificity data for the Nanosim simulations are presented graphically in Additional file <xref rid="MOESM5" ref-type="media">5</xref>. 3GOLD clustered more sequences than all other tools assessed. For PaSS simulated sequences across all clustering parameters, 3GOLD clustered 92.23% (S.D. 7.04). For Nanosim simulated sequences across all clustering parameters, 3GOLD clustered 85.27% (S.D. 13.79). The second-best performance was by SLD, which clustered only 49.73% (S.D. 12.51) of PaSS simulated sequences and 36.43% (S.D. 26.94) of Nanosim simulated sequences across all clustering parameters. Therefore, the performance differential between 3GOLD and SLD remained comparable between clustered sensitivity, specificity and total sequences.</p>
      <p id="Par31">LD and Starcode clustered a comparable number of sequences. LD clustered 26.87% (S.D. 5.94) and Starcode clustered 24.47% (S.D. 3.89) of PaSS simulated sequences. For Nanosim simulated sequences, LD clustered 16.27% (S.D. 11.92) and Starcode clustered 15.53% (S.D. 11.96). The similar clustering performance of LD and Starcode mirrors their sensitivity performance, presumably due to their use of unweighted LD without frameshift accommodation. Interestingly, SLD and CD-HIT-EST clustered about the same percentage of sequences. SLD clustered 49.73% (S.D. 12.51) of PaSS sequences, whereas CD-HIT-EST clustered 42.57% (S.D. 5.76) of PaSS simulated sequences. For the Nanosim simulated datasets, SLD clustered 36.43% (S.D. 26.94) and CD-HIT-EST clustered 31.07% (S.D. 20.44) of all sequences. CD-HIT-EST makes use of identity measures as a way of determining distance. Like LD and SLD, identity-based distance does not follow triangle inequality. Furthermore, CD-HIT-EST uses pairwise alignment and k-mer short word filtering in its clustering algorithm, which can accommodate occasional frameshifts such as SLD. Although the clustering algorithm of CD-HIT-EST is most similar to that employed in DNACLUST, the distance metric used in DNACLUST is uniquely stringent among all tools assayed. DNACLUST therefore had the worst performance by only clustering 16.37% (S.D. 5.07) of PaSS reads and 11.07% (S.D. 9.39) of Nanosim reads.</p>
      <p id="Par32">3GOLD produced far fewer singletons than all other compared clustering tools. The clustering parameter that resulted in the greatest number of singletons, regardless of clustering tool or simulator, was unsurprisingly the most challenging parameter of 50âÃâ10. At 50âÃâ10, 3GOLD clustering resulted in 30 singletons and 125 singletons from the PaSS- and Nanosim-generated datasets, respectively. In contrast, the second-best performing clustering tool, SLD, left 257 singletons and 405 singletons generated by PaSS and Nanosim, respectively. The worst performer was DNACLUST, which left 376 PaSS simulated singletons and 446 Nanosim simulated singletons. The raw data for total sequences clustered, number of qualified clusters formed, the number of singletons left, and the cluster size range are presented as a table in Additional file <xref rid="MOESM6" ref-type="media">6</xref> for PaSS simulated datasets and Additional file <xref rid="MOESM8" ref-type="media">8</xref> for Nanosim simulated datasets. The cluster size range data generated by PaSS is presented graphically in Additional file <xref rid="MOESM7" ref-type="media">7</xref>. The cluster size range data generated by Nanosim is presented graphically in Additional file <xref rid="MOESM9" ref-type="media">9</xref>.</p>
    </sec>
    <sec id="Sec7">
      <title>Clustering biological data</title>
      <p id="Par33">To demonstrate the value of 3GOLD on clustering biological data, we chose a barcoded dataset that is particularly challenging to demultiplex [<xref ref-type="bibr" rid="CR18">18</xref>]. The dataset consists of 96 barcodes comprised of a dual-barcode design and 56Â bp in length. Molecules were sequenced by ONT MinION R9.4.1 chemistry. As before, we compared the clustering performance of 3GOLD, SLD, LD, Starcode, CD-HIT-EST and DNACLUST. The quality of clustering was assessed through specificity, sensitivity, total correct sequences clustered, number of qualified clusters formed and the number of singletons.</p>
      <p id="Par34">For all performance metrics, 3GOLD outperformed the other clustering tools. Sensitivity was 98.83% (S.D. 5.74) for 3GOLD, 70.84% (S.D. 13.04) for SLD, 46.07% (S.D. 10.45) for LD, 42.44% (S.D. 10.78) for Starcode, 28.43% (S.D. 8.59) for DNACLUST and 50.83% (S.D. 17.50) for CD-HIT-EST. All clustering sensitivity results were statistically significant (Pâ&lt;â0.0001) except between CD-HIT-EST and LD (Pâ=â0.0733) and between LD and Starcode (Pâ=â0.3244). As was seen with the simulated datasets, sensitivity scores between LD and Starcode were similar presumably because they both rely on unweighted LD as their clustering metric without frameshift allowance. Compared to the simulated datasets, the sensitivity performance of CD-HIT-EST decreased, likely due to the dual-barcode design and decreased error rate of the sequences. Therefore, the short-word filtering accuracy could have been reduced, allowing the sensitivity performance of CD-HIT-EST to more closely match that seen with LD. As with the simulated data, DNACLUST had the lowest sensitivity score due to its stringent clustering algorithm. Specificity for all clustering tools was 100% (S.D. 0.00). These results are presented in Table <xref rid="Tab1" ref-type="table">1</xref>.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Sensitivity and specificity of clustering tools on ONT MinION R9.4.1 biological data</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Clustering tool</th><th align="left">Specificity</th><th align="left">Sensitivity range</th><th align="left">Sensitivity average</th><th align="left">Sensitivity insignificant P-values</th></tr></thead><tbody><tr><td align="left">3GOLD</td><td align="left">100% (0.00)</td><td align="left">100â67%</td><td align="left">98.83% (5.74)</td><td align="left"/></tr><tr><td align="left">SLD</td><td align="left">100% (0.00)</td><td align="left">92â22%</td><td align="left">70.84% (13.04)</td><td align="left"/></tr><tr><td align="left">LD</td><td align="left">100% (0.00)</td><td align="left">70â25%</td><td align="left">46.07% (10.45)</td><td align="left">LD vs. CD-HIT-EST [0.0733]</td></tr><tr><td align="left">Starcode</td><td align="left">100% (0.00)</td><td align="left">70â21%</td><td align="left">42.44% (10.78)</td><td align="left">Starcode vs. LD [0.3244]</td></tr><tr><td align="left">CD-HIT-EST</td><td align="left">100% (0.00)</td><td align="left">85â24%</td><td align="left">50.83% (17.50)</td><td align="left"/></tr><tr><td align="left">DNACLUST</td><td align="left">100% (0.00)</td><td align="left">49â20%</td><td align="left">28.43% (8.59)</td><td align="left"/></tr></tbody></table><table-wrap-foot><p>Standard deviation values are presented inside parentheses. <italic>P</italic> values are presented inside brackets. Only statistically insignificant <italic>P</italic> values (<italic>P</italic>â&gt;â0.05) are presented in the table. All other <italic>P</italic> values areâ&lt;â0.0001. The decision to only show insignificant values was made to reduce the size of the table for easier viewing and interpretation</p></table-wrap-foot></table-wrap></p>
      <p id="Par35">3GOLD correctly clustered more biological sequences than all other tools assessed. 3GOLD correctly clustered 98.83% (S.D. 5.74) of all sequences. SLD had the second-best clustering performance by correctly clustering 70.84% (S.D. 13.04) of all sequences. LD, Starcode and CD-HIT-EST all correctly clustered about the same percentage. LD correctly clustered 43.67% (S.D. 10.45) of all sequences. Starcode correctly clustered 38.90% (S.D. 10.78) of all sequences. CD-HIT-EST correctly clustered 50.30% (S.D. 17.50) of all sequences. Unsurprisingly, DNACLUST had the worst performance by only correctly clustering 10.36% (S.D. 8.59) of all sequences.</p>
      <p id="Par36">3GOLD produced at least two orders of magnitude fewer singletons than the competing clustering tools by leaving only 10 singletons. The greatest number of unclustered single sequences was produced by DNACLUST, which left 4,045 singletons, likely due to the disadvantageous clustering metrics. SLD and CD-HIT-EST left comparable numbers of singletons at 2199 and 1827, respectively. It is likely that the similar performance between SLD and CD-HIT-EST is due to the ability to accommodate occasional frameshifts. LD and Starcode, which both rely on unweighted LD without frameshift accommodation, left 3259 and 3463 singletons, respectively.</p>
      <p id="Par37">3GOLD clustering was completed in 3,830.411Â s. Building the cluster matrix took 3,698.292Â s, whereas collapsing it into final clusters took only 132.119Â s. In contrast, SLD and LD clustering took approximately eighteen times longer to compute, requiring 69,712.716Â s and 72,766.322Â s, respectively. For SLD, 67,719.119Â s were consumed in building the cluster matrix, whereas collapsing the cluster matrix took 1993.597Â s. LD cluster matrix building took a similar amount of time as SLD cluster matrix building did, requiring 66,528.418Â s. However, the matrix collapse and final cluster processing took much longer at 6237.904Â s. This was due to LD clustering needing to process through many more singletons. 3GOLD had very few singletons to process through, so it was very quick in this regard. These findings are reported in Table <xref rid="Tab2" ref-type="table">2</xref>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Characteristics of clusters formed on ONT MinION R9.4.1 biological data</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Clustering tool</th><th align="left">Total clustered</th><th align="left">Singletons</th><th align="left">Qualified clusters</th><th align="left">Cluster size range</th><th align="left">Time to cluster</th></tr></thead><tbody><tr><td align="left">3GOLD</td><td align="left">9488</td><td align="left">10</td><td align="left">96</td><td align="left">100â67</td><td char="." align="char">3,830.411</td></tr><tr><td align="left">SLD</td><td align="left">6801</td><td align="left">2199</td><td align="left">96</td><td align="left">92â22</td><td char="." align="char">69,712.716</td></tr><tr><td align="left">LD</td><td align="left">4192</td><td align="left">3259</td><td align="left">91</td><td align="left">70â25</td><td char="." align="char">72,766.322</td></tr><tr><td align="left">Starcode</td><td align="left">3735</td><td align="left">3463</td><td align="left">88</td><td align="left">70â21</td><td char="." align="char">0.174</td></tr><tr><td align="left">CD-HIT-EST</td><td align="left">4829</td><td align="left">1827</td><td align="left">95</td><td align="left">85â24</td><td char="." align="char">2.370</td></tr><tr><td align="left">DNACLUST</td><td align="left">995</td><td align="left">4045</td><td align="left">35</td><td align="left">49â20</td><td char="." align="char">4.997</td></tr></tbody></table><table-wrap-foot><p>Time was measured in seconds</p></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par38">There are four possible downsides to using 3GOLD. First, input string lengths need to be uniform and therefore might require trimming prior to clustering. If 3GOLD were to broaden its application to include sequences of differing lengths, it might be able to do so by incorporating a normalized LD metric, such as generalized Levenshtein distance [<xref ref-type="bibr" rid="CR19">19</xref>]. Second, the combination of identified errors can be inflated by selecting the lowest cumulative error. For example, an insertion and deletion will be included in the distance calculation if they have a combined weight that is lower than a substitution weight, despite increasing the total number of errors between the strings by 1. Similarly, the preference for the lowest cumulative error weight between strings can lead to erroneous clustering. This drawback was seen a few times in clustering the simulated datasets. For example, as seen in the PacBio simulated 50âÃâ10 dataset, the bidirectional weighted distances calculated between the sequence GACTGCCGCAGTTTCTCTTA and the reference centroid GACTCCGCAGTTCATATCTC are 7 and 8. In contrast, the bidirectional weighted distance between GACTGCCGCAGTTTCTCTTA and the experimental centroid TATACCCGAACTTTCTCCTA is 6 and 9, respectively. Therefore, the sequence to be clustered was closer to an erroneous centroid than the reference centroid. Finally, the accuracy of our clustering approach is at the expense of speed. As with any clustering algorithm, there is a trade-off between speed and accuracy. Clustering with 3GOLD might not be practical for very large datasets or datasets comprised of long sequences if time is more valuable than accuracy, despite the ability to run 3GOLD scripts in parallel, multithreaded and the currently employed speed improvement strategies.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par39">We present modifications to the shortcomings of LD to optimize it for clustering error-rich biological sequences. We successfully used 3GOLD metrics to find, characterize and cluster sequences. We show the benefits of 3GOLD on clustering simulated datasets of short sequences as well as a biological dataset consisting of long barcodes (56Â bp). We used a barcoded dataset because clustering accuracy can be assessed using known centroids. However, a strength of our approach is the ability to accurately cluster sequences with no prior knowledge of cluster or centroid identity, especially if the clusters are small, densely populate the data field and prone to creating singletons. Therefore, our tool is well suited for clustering UMI data. There are no currently available tools for clustering UMI data generated from TGS platforms.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>Strategy for speed improvement</title>
      <p id="Par40">3GOLD initializes the LD matrix in the traditional manner until the border lengths equal <inline-formula id="IEq56"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau + 1$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:mi>Ï</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq56.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq57"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M122"><mml:mi>Ï</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq57.gif"/></alternatives></inline-formula> is the total number of expected errors. Once the border lengths equal <inline-formula id="IEq58"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau + 1$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mi>Ï</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq58.gif"/></alternatives></inline-formula>, the initialization increments diagonally. The border values halt during diagonal progression and continue to be incorporated into distance calculations. We drew inspiration for our strategy from the modified Needleman-Wunsch algorithm presented in the Starcode algorithm [<xref ref-type="bibr" rid="CR14">14</xref>]. Furthermore, 3GOLD computation terminates if <inline-formula id="IEq59"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ i \right]\left[ j \right] \ge h$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced><mml:mfenced close="]" open="["><mml:mi>j</mml:mi></mml:mfenced><mml:mo>â¥</mml:mo><mml:mi>h</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq59.gif"/></alternatives></inline-formula> at any point in the matrix, where <inline-formula id="IEq60"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h = \tau + f$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:mi>h</mml:mi><mml:mo>=</mml:mo><mml:mi>Ï</mml:mi><mml:mo>+</mml:mo><mml:mi>f</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq60.gif"/></alternatives></inline-formula> and <inline-formula id="IEq61"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M130"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq61.gif"/></alternatives></inline-formula> is the tolerated number of frameshift positions. Therefore, our approach differs from Starcode because it adds frameshift thresholds to the classic LD values at <inline-formula id="IEq62"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ i \right]\left[ j \right]$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced><mml:mfenced close="]" open="["><mml:mi>j</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq62.gif"/></alternatives></inline-formula>. It also differs from SLD in that it allows the end user to place a reasonable cap on the frameshift allowance. Finally, similar to the trie techniques used by Starcode, we eliminate upstream matching bases from compared strings since the LD between them would be zero. An example of this strategy is presented in Additional file <xref rid="MOESM10" ref-type="media">10</xref>.</p>
    </sec>
    <sec id="Sec12">
      <title>Datasets and computational parameters for speed experiments</title>
      <p id="Par41">To test the effects of sequence length on computational efficiency, we generated 10 random datasets of 10,000 sequences each. The sequences in the first dataset were 10 bases long, and each subsequent dataset increased sequence length by 10 bases until sequences reached 100 bases long. All sequences in the shorter datasets were prefixes for the longer datasets to reduce any possible influence of different sequences among datasets. To test the effects of dataset depth on speed, we created 10 random datasets ranging in size from 10,000 sequences to 100,000 sequences. The length of sequences in all datasets was 50 bases. The scripts used for testing computational speed received dataset inputs organized such that one sequence was presented per line. The first sequence in the datasets served as the reference for comparison to all other sequences. For 3GOLD computations, the frameshift allowance was calculated as 20% of the sequence length, and the error rate was computed as 10% of the sequence length. All error weights were assigned as 1. These single-threaded experiments were run on a machine with a 2.9Â GHz Intel Core i5 processor and 8Â GB of RAM.</p>
    </sec>
    <sec id="Sec13">
      <title>Algorithm for accommodating weighted errors and frameshift</title>
      <p id="Par42">The discrepancy in SLD weighted error computations can be overcome by comparing the value and position of the unweighted SLD along the matrix table borders to the unweighted LD to interpret the number and type of errors, respectively. Briefly, deletions move the position of an unweighted SLD away from the classic LD position leftward along the <inline-formula id="IEq63"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M134"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq63.gif"/></alternatives></inline-formula> border, whereas insertions move the SLD up along the <inline-formula id="IEq64"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M136"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq64.gif"/></alternatives></inline-formula> border. Substitutions or indel pairs result in no net movement of the SLD position. SLD can either have a single position or multiple. If SLD is found repeatedly on a single border, the position closest to the <inline-formula id="IEq65"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[ i \right]\left[ j \right]$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced><mml:mfenced close="]" open="["><mml:mi>j</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq65.gif"/></alternatives></inline-formula> corner reveals the error characteristics. If SLD is found on both borders excluding the corner, analysis is completed using the value that represents the lowest error weight. If insertions and deletions have the same error weight and the SLD is found on both borders, error type interpretation is done using the values found on the <inline-formula id="IEq66"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M140"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq66.gif"/></alternatives></inline-formula> border to reduce computational time. If insertions and deletions have differing weights, bidirectional analysis is performed. In all cases, 3GOLD will select the lowest penalty for all error combinations.</p>
    </sec>
    <sec id="Sec14">
      <title>Clustering approach</title>
      <p id="Par43">To demonstrate the quality of 3GOLD for clustering, we combine 3GOLD metrics with an all-to-all sequence comparison approach. Sequences that are within the weight threshold are clustered together. Sequences that are not clustered to any other sequences are considered singletons. Once all sequences have been compared to all sequences, clusters that match at least 80% of their sequences to a larger related cluster are collapsed into the larger clusters. If the sequences that are exclusive to the smaller cluster are not within the weighted distance threshold of the seed sequence of the larger cluster, they are not merged. Once all clusters have merged and have collapsed, centroids are determined by density. We consider the centroid of a cluster to meet two criteria: it clustered the most sequences to itself to form the current cluster, and it has the shortest average distance between itself and all its clustered sequences. Our centroid approach is compatible with the prototype-based notion of centroids, where centroids consist of identically repeated sequences. Our approach is advantageous, however, because it can accommodate asymmetrical, noisy and entwined clusters such as those produced by TGS platforms. Once all clusters are formed, the centroids are then compared to all left-over singletons. Singletons that are within the threshold distance of a centroid become clustered and then removed from the singleton set. Our object-oriented clustering codes work for both Linux and MacOS systems. The 3GOLD clustering scripts for MacOS are called ThreeGold_MacOS_Matrix_Building.pl, ThreeGold_MacOS_Matrix_Building.pm, ThreeGold_MacOS_Matrix_Clustering.pl and ThreeGold_MacOS_Matrix_Clustering.pm. Matrix building is performed before matrix clustering.</p>
      <p id="Par44">Clustering performance was characterized by sensitivity, specificity, total sequences clustered, number of qualified clusters formed and the number of singletons. Sensitivity was determined by <inline-formula id="IEq67"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left( {100 - \left( {100\left( {p/m} \right)} \right)} \right)$$\end{document}</tex-math><mml:math id="M142"><mml:mfenced close=")" open="("><mml:mrow><mml:mn>100</mml:mn><mml:mo>-</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mn>100</mml:mn><mml:mfenced close=")" open="("><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq67.gif"/></alternatives></inline-formula>, where <italic>p</italic> represents the number of sequences only found in the reference cluster and not in the experimental cluster and <italic>m</italic> represents the number of sequences in the reference cluster. Specificity was computed by <inline-formula id="IEq68"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(t - u/t)\left( {100} \right)$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo>-</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mfenced close=")" open="("><mml:mn>100</mml:mn></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq68.gif"/></alternatives></inline-formula> where <italic>t</italic> represents the total number of sequences found in the reference cluster and <italic>u</italic> represents the total number of unclustered sequences. For sequences to be considered âclusteredâ and included in specificity and sensitivity analysis, they needed to have at least 20% sensitivity and a size threshold that resulted in no more than the expected number of clusters. Cluster specificity and sensitivity were assessed using Tukeyâs multiple comparisons test with ordinary one-way ANOVA for the biological data and two-way ANOVA for the simulated data. Our script for characterizing clustering quality is called Characterize_Quality_Of_Clusters.pl.</p>
    </sec>
    <sec id="Sec15">
      <title>Characterizing sequencing error profiles</title>
      <p id="Par45">Using 3GOLD clustering metrics requires the end user to input information on the error number threshold, the weight threshold, the weight assigned to an insertion, deletion and substitution error and the number of frameshifts to accommodate. We built an error profiling script that characterizes the expected input parameters between a reference and an experimental string of data, except for establishing a frameshift limit. If the end user does not determine how much frameshift to allow, the default is 15% of the sequence length.</p>
      <p id="Par46">Our training script assumes that the input strings have a common beginning. If the two strings do not match at their beginnings, the end user will need to tell the code where to start computing the interstring distance along the experimental sequence. This position can be determined visually or discovered through pairwise alignment of the two sequences. The length of the longer string will be trimmed to match the length of the shorter string before calculations begin. It is assumed that one string will be larger than the other based on the instances of indels. Relying on the algorithmic behavior of 3GOLD, the error profiling script counts the number of errors between the reference and experimental strings. It also logs the occurrences of insertions, deletions and substitutions and then suggests weights to be assigned to each. Because an insertion and deletion pair can technically produce the same output as a substitution in some rare cases, the end user is asked to clarify if it is more likely, less likely or equally likely to have a substitution or both an insertion and deletion. End users are also asked to judge whether insertions occur more, less or equally as frequently as deletions. These relationships help establish probability and weight relationships. When fitting the error profiling output to the desired data, end users should remember that errors occur as whole numbers rather than rational numbers. Our error profiling script is called ThreeGold_Error_Profiling.pl.</p>
    </sec>
    <sec id="Sec16">
      <title>Simulated datasets for clustering</title>
      <p id="Par47">We tested 3GOLDâs ability to cluster sequences generated by PaSS and Nanosim version 2.5, which simulate PacBio Sequel and ONT MinION R9.4 reads, respectively [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. We designed our sequences to be 20 bases long to resemble the longer barcodes or UMIs that have been used [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]. To ensure adequate cluster separation, our randomly generated centroids were designed to be greater than LD 8 apart. Therefore, each of the 20-mer centroids could harbor 20% error (4 errors) without risk of neighboring clusters bleeding into each other.</p>
      <p id="Par48">Every centroid-based cluster was formed by sending a fasta file through the simulator that contained 10,000 repeated copies of the centroid sequence, for a total input length of 200,000 bases. Each simulator got the same 50 input sequences. All 50 input fastas were concatenated into a single file as input into PaSS for the first step in the simulation of making an index file. The command line parameters used for PaSS simulations were â-list percentage.txt -index index -m pacbio_sequel -c sim.config -r 10,000â. We used Nanosim version 2.5 in genome mode and used the pretrained human NA12878 DNA FAB49712 guppy model. Each of the 50 input fastas served individually as an input reference genome. The other command line parameters used for Nanosim simulations were â-n 1 -max 11,000 -min 11,000 -b guppy -s 0 -dna_type linearâ.</p>
      <p id="Par49">Error profiles of the simulated datasets were determined. Analysis of 195,859 bases from 20 PacBio Sequel simulated reads revealed that PaSS introduced 21,646 errors (11.10% error rate) with 14,362 insertions (66.35%), 7,284 deletions (33.70%) and 0 substitutions (0.00%) according to the ThreeGold_Error_Profiling.pl output when selecting âless, moreâ. Since the number of errors appearing in sequences can only be whole numbers, we rounded up to allow for 3 errors and assigned the following weights: insertions 1, deletions 2, substitutions 4, so that a substitution is weighted greater than an insertion and deletion. Analysis of 145,000 bases from 20 ONT MinION R9.4 simulated reads revealed that Nanosim introduced 14,727 errors (10.13% error rate) with 4,463 insertions (30.30%), 10,264 deletions (69.70%) and 0 substitutions (0.00%) according to ThreeGold_Error_Profiling.pl output when selecting âless, moreâ. Therefore, we assigned a weight of 2 for insertions, 1 for deletions and 4 for substitutions and allowed 3 errors. For both PaSS and Nanosim reads, we accommodated a frameshift allowance of 20% when characterizing error profiles. The 20% frameshift allowance allows the full capture of concentrated errors in the neighboring sequence if it were to appear only at the periphery of the capture.</p>
      <p id="Par50">To process the simulated output files into formats suitable for clustering and analysis, we used a series of four scripts. The first script is called Extract_Simulated_Files.pl and is designed to select one of the many output files as a representative. The input is a directory of centroids. The code matches a centroid to the name of the simulated file and simply takes the first match. The second script is Trim_simulated_reads.pl, which finds simulated sequences that are within the distance threshold for clustering. It relies on a sliding window approach with a step size of 1 until a perfect match is made, at which point the step size turns to 20, since sequences of interest are 20 bases long and are in tandem. We relied on the determined error profiles of the simulators for extraction with a frameshift allowance of 15% and a weight threshold of 8. The third script, Order_Untrimmed_Sequences.pl, was designed to keep clustering performance uniform across clustering parameters by sorting the discovered sequences to cluster by their weighted distance from their respective centroids. In this way, the sequences chosen to cluster were beneath the weighted threshold but were selected with a preference for noisier sequences. The final code used in processing simulated data was Format_simulated_data_for_clustering.pl. This script took the sorted sequences to cluster, shuffled them and then formatted them per the desired clustering parameters. The output was both reference cluster files and files of sequences to cluster.</p>
      <p id="Par51">Six clustering parameters were tested: 4 clusters of 125 sequences each, 5 clusters of 100 sequences each, 10 clusters of 50 sequences each, 20 clusters of 25 sequences each, 25 clusters of 20 sequences each, and 50 clusters of 10 sequences each. To maximize the challenge of clustering, we preferentially included the noisiest of the discovered sequences. We used an error threshold of 3 edit distances for 3GOLD, SLD, LD and Starcode. Starcode was run with sphere clustering, as it was the most similar clustering strategy to 3GOLD. Starcode output was generated using the ââprint-clustersâ parameter, which does not include duplicates. We appropriately replaced all duplicated sequences that were otherwise omitted from the Starcode output before comparing the results to reference clusters. We used default parameters for both DNACLUST and the web-based CD-HIT-EST tool. The similarity for both DNACLUST and CD-HIT-EST was set at 0.85 to accommodate three errors within a 20-base sequence (<inline-formula id="IEq69"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 - 0.15 = 0.85$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mn>0.15</mml:mn><mml:mo>=</mml:mo><mml:mn>0.85</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_4637_Article_IEq69.gif"/></alternatives></inline-formula>).</p>
    </sec>
    <sec id="Sec17">
      <title>Biological datasets for clustering</title>
      <p id="Par52">To show that our approach works on biological data, we chose to analyze a complex barcoded dataset consisting of 96 dual barcodes of length 56Â bp [<xref ref-type="bibr" rid="CR18">18</xref>]. The samples used for this dataset were 96 different meticillin-resistant <italic>Staphylococcus aureus</italic> isolates. Dual-barcode architecture consisted of eight barcodes that were individually combined with forward and reverse primers and introduced during PCR. The resulting amplicons were then barcoded according to the ONT 1D native barcoding genomic DNA protocol using the native barcoding expansion 1â12 kit EXP-NBD103 and the ligation sequencing kit 1D SQK-LSK109. The barcoded reads were generated by ONT MinION R9.4.1 chemistry using a single flow cell and sequenced using MinKNOW version 2.1. Albacore version 2.3.1 was then used to extract FASTQ reads. More information about the sequences and barcode design can be found in the original manuscript by Liou and colleagues, and the original barcoded datasets can be found in Figshare [<xref ref-type="bibr" rid="CR18">18</xref>,Â <xref ref-type="bibr" rid="CR21">21</xref>].</p>
      <p id="Par53">To determine the error rate of the biological sequences, we chose the first four reads of the first barcoded set, BC01BC01. These were processed through BLAST one at a time, and the first hit for each sequence was used as the reference sequence. Analysis of the 4,984 bases through the ThreeGold_Error_Profiling.pl script revealed a total of 238 errors (121 insertions, 117 deletions) for an error rate of 4.78%. We rounded up to an error rate of 5%, allowing for 3 errors out of the 56-base barcode. The weights assigned to insertions and deletions were both 1, and substitutions were weighted 3. The weight threshold was determined to be 5.</p>
      <p id="Par54">Using these 3GOLD metrics for weighted errors and weight threshold, we extracted barcode sequences using a 2-step sliding-window approach to search for matches to the known barcode sequences. Matches were made against the original 96 barcode sequences published by Liou and colleagues [<xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR22">22</xref>]. We accommodated a frameshift of 4. Our frameshift allowance was a smaller percentage of the sequence of interest length than that used for the simulated datasets because we were extracting the single best match out of an entire fasta and the sequence of interest was more than twice as long. Therefore, we could afford a higher stringency in extracting matches. We searched the 96-barcoded file database until 100 matches per barcode were found, for a total database of 9,600 sequences to cluster. We worked with this subset of the original biological dataset to mitigate the computational challenges associated with clustering the full dataset. We maintained a uniform cluster size of 100 to make interpreting the specificity and sensitivity outcomes intuitive and uniform across all clusters. All barcode searches discovered at least one perfect match, ensuring that each cluster could be built around the appropriate centroid. Discovered barcode matches were formatted into reference clusters and multifasta files of sequences to cluster.</p>
      <p id="Par55">The other clustering tools used did not accommodate frameshift or weighted error parameters. Therefore, SLD, LD and Starcode only allowed for an error threshold of 3 for clustering. The command used for Starcode was â./starcode âd 3 -s -i All_Seqs_To_Cluster.txt -o Clustered_by_starcode.txt âseq-idâ. The percent similarity that we allowed for DNACLUST and for CD-HIT-EST clustering was 0.94642, since a 3-error allowance was calculated by 53/56. Therefore, the command used for DNACLUST was âdnaclust -s 0.9465 âi All_Seqs_To_Cluster.txtâ&gt;âClustered_by_dnaclust.txtâ. The online CD-HIT-EST tool was used with default parameters except for allowing a sequence identity cut-off of 0.9465.</p>
    </sec>
    <sec id="Sec18">
      <title>Determining weighted distance threshold for clustering</title>
      <p id="Par56">For both the simulated and biological datasets, sequences were extracted using a sliding window approach to determine an appropriate weight threshold for clustering. For the simulated datasets, the discovered error profiles and a 20% frameshift allowance were used without weight threshold limits to collect matches. The step size for the sliding window search was 1 until a perfect match between the sequence and search probe was found. Thereafter, the step size became 20 since matches are expected to be in sequential order onward. The centroid sequences served as the search probes. All 50 simulated sequences produced by both Nanosim and PaSS were searched for matches using the script Weight_Threshold_Simulated_Datasets.pl. The Nanosim-generated sequences produced 8,205 matches, and the PaSS-simulated sequences produced 5,463 matches. Matches were graphed, and the weight threshold was determined by the point on the graph of the steepest inflection point and aâ&gt;â99% representation of the matches. For the Nanosim simulated data, 67 matches had weights due to two or more substitutions, whereas 99.18% of the 8,205 matches did not. Therefore, the weight threshold for the Nanosim data was set at 8. For the PaSS simulated data, 39 matches had weights due to two or more substitutions, whereas 99.28% of the 5,463 matches did not. Therefore, the weight threshold for the PaSS data was also set at 8.</p>
      <p id="Par57">For the biological dataset, we searched all 6,010 sequences of the first cluster (BC01BC01) of sequences for the single best match per sequence using a sliding window search of step 1, 15% frameshift allowance and the discovered error profile weights (insertions weighted 1, deletions weighted 1, substitutions weighted 3) without weight threshold limits. The weight of every match was graphed. A total of 4,440 out of the 6,010 (73.87%) sequences had a cumulative error weight of 5, with no sequences having a cumulative weight higher than that. Therefore, the clustering weight threshold for the biological dataset was set to 5.</p>
      <p id="Par58">Once the appropriate weight threshold was established, sequences were selected for clustering by following the same steps as for determining the weight threshold but with the determined weight threshold parameter used. These weight threshold distribution graphs are included in the supplemental information as Additional file <xref rid="MOESM11" ref-type="media">11</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2022_4637_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1.</bold> Pseudocode of the 3GOLD algorithm.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2022_4637_MOESM2_ESM.docx">
            <caption>
              <p><bold>Additional file 2.</bold> Sensitivity and specificity of clustering PacBio Sequel simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2022_4637_MOESM3_ESM.pptx">
            <caption>
              <p><bold>Additional file 3.</bold> Boxplots of clustering specificity on PacBio Sequel simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12859_2022_4637_MOESM4_ESM.docx">
            <caption>
              <p><bold>Additional file 4.</bold> Sensitivity and specificity of clustering ONT MinION simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="12859_2022_4637_MOESM5_ESM.pptx">
            <caption>
              <p><bold>Additional file 5.</bold> Boxplots of clustering specificity on ONT MinION simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM6">
          <media xlink:href="12859_2022_4637_MOESM6_ESM.docx">
            <caption>
              <p><bold>Additional file 6.</bold> Characteristics of clusters formed from PacBio Sequel simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM7">
          <media xlink:href="12859_2022_4637_MOESM7_ESM.pptx">
            <caption>
              <p><bold>Additional file 7.</bold> Boxplots of cluster sizes formed from PacBio Sequel simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM8">
          <media xlink:href="12859_2022_4637_MOESM8_ESM.docx">
            <caption>
              <p><bold>Additional file 8.</bold> Characteristics of clusters formed from ONT MinION simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM9">
          <media xlink:href="12859_2022_4637_MOESM9_ESM.pptx">
            <caption>
              <p><bold>Additional file 9.</bold> Boxplots of cluster sizes formed from ONT MinION simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM10">
          <media xlink:href="12859_2022_4637_MOESM10_ESM.pptx">
            <caption>
              <p><bold>Additional file 10.</bold> Speed improvement example.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM11">
          <media xlink:href="12859_2022_4637_MOESM11_ESM.pptx">
            <caption>
              <p><bold>Additional file 11.</bold> Weight threshold determination.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>3GOLD</term>
        <def>
          <p id="Par4">Third-generation optimized Levenshtein distance</p>
        </def>
      </def-item>
      <def-item>
        <term>LD</term>
        <def>
          <p id="Par5">Levenshtein distance</p>
        </def>
      </def-item>
      <def-item>
        <term>ONT</term>
        <def>
          <p id="Par6">Oxford nanopore technologies</p>
        </def>
      </def-item>
      <def-item>
        <term>PacBio</term>
        <def>
          <p id="Par7">Pacific biosciences</p>
        </def>
      </def-item>
      <def-item>
        <term>PaSS</term>
        <def>
          <p id="Par8">PacBio sequencing simulator</p>
        </def>
      </def-item>
      <def-item>
        <term>SD</term>
        <def>
          <p id="Par9">Standard deviation</p>
        </def>
      </def-item>
      <def-item>
        <term>SLD</term>
        <def>
          <p id="Par10">Sequence-Levenshtein distance</p>
        </def>
      </def-item>
      <def-item>
        <term>SMRT</term>
        <def>
          <p id="Par11">Single molecule real-time</p>
        </def>
      </def-item>
      <def-item>
        <term>TGS</term>
        <def>
          <p id="Par12">Third-generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>UMI</term>
        <def>
          <p id="Par13">Unique molecular identifier</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We wish to thank Boris Yazlovitsky, Greg Shomo, Mariana Levi and the rest of the Research Computing team at Northeastern University for their support.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>RL, ZF, SA, AW, JLT, DCW and KK contributed to the conception and design of this work. RL designed the experiments, collected the data, analyzed the data, and wrote the codes and manuscript. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This research was supported by the Eunice Kennedy Shriver National Institute of Child Health and Human Development (RO1-HD091439 to JLT, DCW and KK). National Science Foundation (1750996 to DCW).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The datasets and Perl scripts supporting the conclusions of this article are available in the 3GOLD GitHub repository, <ext-link ext-link-type="uri" xlink:href="https://github.com/roblogan6/3GOLD">https://github.com/roblogan6/3GOLD</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par59">No ethics approval was required for the study.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par60">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par61">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kraft</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kurth</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Long-read sequencing in human genetics</article-title>
        <source>Medizinische Genet</source>
        <year>2019</year>
        <volume>31</volume>
        <fpage>198</fpage>
        <lpage>204</lpage>
        <pub-id pub-id-type="doi">10.1007/s11825-019-0249-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Weirather JL, deCesare M, Wang Y, Piazza P, Sebastiano V, Wang X-J, et al. Comprehensive comparison of Pacific Biosciences and Oxford Nanopore Technologies and their applications to transcriptome analysis. F1000Research. 2017;6(1):100</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Laver</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Harrison</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>OâNeill</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Moore</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Farbos</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Paszkiewicz</surname>
            <given-names>K</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assessing the performance of the Oxford Nanopore Technologies MinION</article-title>
        <source>Biomol Detect Quantif.</source>
        <year>2015</year>
        <volume>3</volume>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1016/j.bdq.2015.02.001</pub-id>
        <?supplied-pmid 26753127?>
        <pub-id pub-id-type="pmid">26753127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Logsdon</surname>
            <given-names>GA</given-names>
          </name>
          <name>
            <surname>Vollger</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Eichler</surname>
            <given-names>EE</given-names>
          </name>
        </person-group>
        <article-title>Long-read human genome sequencing and its applications</article-title>
        <source>Nat Rev Genet.</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>10</issue>
        <fpage>597</fpage>
        <lpage>614</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-020-0236-x</pub-id>
        <?supplied-pmid 32504078?>
        <pub-id pub-id-type="pmid">32504078</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Annis</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fleischmann</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Logan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mullin-Bernstein</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Franco</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Saurich</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>LUCS: a high-resolution nucleic acid sequencing tool for accurate long- read analysis of individual DNA molecules</article-title>
        <source>Aging (Albany NY)</source>
        <year>2020</year>
        <volume>12</volume>
        <issue>8</issue>
        <fpage>7603</fpage>
        <pub-id pub-id-type="doi">10.18632/aging.103171</pub-id>
        <pub-id pub-id-type="pmid">32345770</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhong</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Altun</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Harrison</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Tai</surname>
            <given-names>PC</given-names>
          </name>
          <name>
            <surname>Pan</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Improved K-means clustering algorithm for exploring local protein sequence motifs representing common structural property</article-title>
        <source>IEEE Trans Nanobioscience</source>
        <year>2005</year>
        <volume>4</volume>
        <issue>3</issue>
        <fpage>255</fpage>
        <lpage>265</lpage>
        <pub-id pub-id-type="doi">10.1109/TNB.2005.853667</pub-id>
        <pub-id pub-id-type="pmid">16220690</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Heger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sudbery</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>UMI-tools: modelling sequencing errors in unique molecular identifiers to improve quantification accuracy</article-title>
        <source>Genome Res</source>
        <year>2017</year>
        <volume>27</volume>
        <fpage>491</fpage>
        <lpage>499</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.209601.116</pub-id>
        <pub-id pub-id-type="pmid">28100584</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Levenshtein</surname>
            <given-names>VI</given-names>
          </name>
        </person-group>
        <article-title>Binary codes capable of correcting deletions, insertions, and reversals</article-title>
        <source>Sov Physics-Doklady</source>
        <year>1966</year>
        <volume>10</volume>
        <issue>8</issue>
        <fpage>707</fpage>
        <lpage>710</lpage>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buschmann</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bystrykh</surname>
            <given-names>LV</given-names>
          </name>
        </person-group>
        <article-title>Levenshtein error-correcting barcodes for multiplexed DNA sequencing</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-272</pub-id>
        <pub-id pub-id-type="pmid">23323762</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Peng</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Vijaya Satya</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Randad</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Reducing amplification artifacts in high multiplex amplicon sequencing by using molecular barcodes</article-title>
        <source>BMC Genomics.</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1806-8</pub-id>
        <pub-id pub-id-type="pmid">25553907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Backurs</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Indyk</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Edit distance cannot be computed in strongly subquadratic time (unless SETH is false)</article-title>
        <source>SIAM J Comput.</source>
        <year>2018</year>
        <volume>47</volume>
        <issue>3</issue>
        <fpage>1087</fpage>
        <lpage>1097</lpage>
        <pub-id pub-id-type="doi">10.1137/15M1053128</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Jia</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>PaSS : a sequencing simulator for PacBio sequencing</article-title>
        <source>BMC Bioinformatics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-018-2565-8</pub-id>
        <pub-id pub-id-type="pmid">30606105</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Warren</surname>
            <given-names>RL</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>NanoSim: Nanopore sequence read simulator based on statistical characterization</article-title>
        <source>Gigascience</source>
        <year>2017</year>
        <volume>6</volume>
        <issue>4</issue>
        <fpage>1</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/gix010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zorita</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>CuscÃ³</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Filion</surname>
            <given-names>GJ</given-names>
          </name>
        </person-group>
        <article-title>Starcode: Sequence clustering based on all-pairs search</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>12</issue>
        <fpage>1913</fpage>
        <lpage>1919</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv053</pub-id>
        <pub-id pub-id-type="pmid">25638815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Niu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>CD-HIT Suite : a web server for clustering and comparing biological sequences</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>5</issue>
        <fpage>680</fpage>
        <lpage>682</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq003</pub-id>
        <pub-id pub-id-type="pmid">20053844</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Ghodsi M, Liu B, Pop M. DNACLUST: Accurate and efficient clustering of phylogenetic marker genes. BMC Bioinformatics. 2011;12(271).</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weizhong</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Godzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Cd-hit : a fast program for clustering and comparing large sets of protein or nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>13</issue>
        <fpage>1658</fpage>
        <lpage>1659</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl158</pub-id>
        <pub-id pub-id-type="pmid">16731699</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liou</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>HC</given-names>
          </name>
          <name>
            <surname>Liao</surname>
            <given-names>YC</given-names>
          </name>
          <name>
            <surname>Lauderdale</surname>
            <given-names>TLY</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>IW</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>FJ</given-names>
          </name>
        </person-group>
        <article-title>Nanomlst: Accurate multilocus sequence typing using oxford nanopore technologies minion with a dual-barcode approach to multiplex large numbers of samples</article-title>
        <source>Microb Genomics</source>
        <year>2020</year>
        <volume>6</volume>
        <issue>3</issue>
        <fpage>1</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1099/mgen.0.000336</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yujian</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bo</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>A normalized Levenshtein distance metric</article-title>
        <source>IEEE Trans Pattern Anal Mach Intell</source>
        <year>2007</year>
        <volume>29</volume>
        <issue>6</issue>
        <fpage>1091</fpage>
        <lpage>1095</lpage>
        <pub-id pub-id-type="doi">10.1109/TPAMI.2007.1078</pub-id>
        <pub-id pub-id-type="pmid">17431306</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hawkins</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Finkelstein</surname>
            <given-names>IJ</given-names>
          </name>
          <name>
            <surname>Press</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>Indel-correcting DNA barcodes for high-throughput sequencing</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2018</year>
        <volume>115</volume>
        <issue>27</issue>
        <fpage>E6217</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1802640115</pub-id>
        <?supplied-pmid 29925596?>
        <pub-id pub-id-type="pmid">29925596</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">nanoMLST 96 dual barcoded files [Internet]. [cited 2020 Oct 28]. Available from: <ext-link ext-link-type="uri" xlink:href="https://figshare.com/articles/Ninety-six_dual-barcoded_files/9894479">https://figshare.com/articles/Ninety-six_dual-barcoded_files/9894479</ext-link></mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">nanoMLST supplemental text including sequences of seven housekeeping genes, primer sequences and sequences of 96 dual barcodes [Internet]. [cited 2020 Oct 28]. Available from: <ext-link ext-link-type="uri" xlink:href="https://figshare.com/articles/online_resource/Supplemental_text_including_sequences_of_seven_housekeeping_genes_and_sequences_of_96_dual_barcodes/9891386">https://figshare.com/articles/online_resource/Supplemental_text_including_sequences_of_seven_housekeeping_genes_and_sequences_of_96_dual_barcodes/9891386</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>

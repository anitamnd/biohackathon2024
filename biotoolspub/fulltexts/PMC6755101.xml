<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6755101</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkz706</article-id>
    <article-id pub-id-type="publisher-id">gkz706</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Computational Biology</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Reconstructing complex lineage trees from scRNA-seq data using MERLoT</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Parra</surname>
          <given-names>R Gonzalo</given-names>
        </name>
        <!--<email>gonzalo.parra@embl.de</email>-->
        <xref ref-type="aff" rid="AFF1">1</xref>
        <xref ref-type="aff" rid="AFF2">2</xref>
        <xref ref-type="corresp" rid="COR1"/>
        <xref ref-type="author-notes" rid="FN1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Papadopoulos</surname>
          <given-names>Nikolaos</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">1</xref>
        <xref ref-type="author-notes" rid="FN1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ahumada-Arranz</surname>
          <given-names>Laura</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kholtei</surname>
          <given-names>Jakob El</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mottelson</surname>
          <given-names>Noah</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Horokhovsky</surname>
          <given-names>Yehor</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Treutlein</surname>
          <given-names>Barbara</given-names>
        </name>
        <xref ref-type="aff" rid="AFF3">3</xref>
        <xref ref-type="aff" rid="AFF4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Soeding</surname>
          <given-names>Johannes</given-names>
        </name>
        <!--<email>soeding@mpibpc.mpg.de</email>-->
        <xref ref-type="aff" rid="AFF1">1</xref>
        <xref ref-type="corresp" rid="COR2"/>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><label>1</label><institution>Quantitative and Computational Biology Group, Max Planck Institute for Biophysical Chemistry</institution>, Am Fassberg 11, 37077 Goettingen, <country country="DE">Germany</country></aff>
    <aff id="AFF2"><label>2</label><institution>Genome Biology Unit, European Molecular Biology Laboratory</institution>, Meyerhofstraße 1, 69117 Heidelberg, <country country="DE">Germany</country></aff>
    <aff id="AFF3"><label>3</label><institution>Department of Evolutionary Genetics, Max Planck Institute for Evolutionary Anthropology</institution>, Deutscher Platz 6, 04103 Leipzig, <country country="DE">Germany</country></aff>
    <aff id="AFF4"><label>4</label><institution>Department of Biosystems Science and Engineering</institution>, ETH Zürich, Basel, <country country="CH">Switzerland</country></aff>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +49 551 201 2890; Fax: +49 551 201 2803; Email: <email>gonzalo.parra@embl.de</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Johannes Soeding. Email: <email>soeding@mpibpc.mpg.de</email></corresp>
      <fn id="FN1">
        <p>The authors wish it to be known that, in their opinion, the first two authors should be regarded as Joint First Authors.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>26</day>
      <month>9</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-08-20">
      <day>20</day>
      <month>8</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>8</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>47</volume>
    <issue>17</issue>
    <fpage>8961</fpage>
    <lpage>8974</lpage>
    <history>
      <date date-type="accepted">
        <day>01</day>
        <month>8</month>
        <year>2019</year>
      </date>
      <date date-type="rev-recd">
        <day>22</day>
        <month>7</month>
        <year>2019</year>
      </date>
      <date date-type="received">
        <day>18</day>
        <month>12</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkz706.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Advances in single-cell transcriptomics techniques are revolutionizing studies of cellular differentiation and heterogeneity. It has become possible to track the trajectory of thousands of genes across the cellular lineage trees that represent the temporal emergence of cell types during dynamic processes. However, reconstruction of cellular lineage trees with more than a few cell fates has proved challenging. We present MERLoT (<ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot">https://github.com/soedinglab/merlot</ext-link>), a flexible and user-friendly tool to reconstruct complex lineage trees from single-cell transcriptomics data. It can impute temporal gene expression profiles along the reconstructed tree. We show MERLoT’s capabilities on various real cases and hundreds of simulated datasets.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">EMBO</named-content>
          <named-content content-type="funder-identifier">10.13039/501100003043</named-content>
        </funding-source>
        <award-id>ALTF 212-2016</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">Deutsche Forschungsgemeinschaft</named-content>
          <named-content content-type="funder-identifier">10.13039/501100001659</named-content>
        </funding-source>
        <award-id>SPP1935</award-id>
        <award-id>SPP2191</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="14"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <sec id="SEC1-1">
      <title>Background</title>
      <p>Recent advances in single-cell sequencing techniques (<xref rid="B1" ref-type="bibr">1–3</xref>) permit to measure the expression profiles of tens of thousands of cells making ambitious projects like the single-cell transcriptional profiling of a whole organism (<xref rid="B4" ref-type="bibr">4</xref>) or the Human Cell Atlas (<xref rid="B5" ref-type="bibr">5</xref>) possible. These efforts will better characterize the different cell types in multicellular organisms and their lineage relationships (<xref rid="B6" ref-type="bibr">6</xref>). The advances also put within reach the question of how single cells develop into tissues, organs or entire organisms, one of the most fascinating and ambitious goals in biology that would also have wide-ranging consequences for the study of many human diseases.</p>
      <p>It is critical to develop methods that can reliably reconstruct cellular lineage trees that reflect the process by which mature cell types differentiate from progenitor cells. This is challenging due to the inherently high statistical noise levels in single cell transcriptomes, the high-dimensionality of gene expression space and the strong non-linearities among gene interactions due to multiple transcriptional programs running in parallel for specifying the different cell type identities (<xref rid="B6" ref-type="bibr">6</xref>).</p>
      <p>Different methods have been developed in the last years for inferring single-cell trajectories (<xref rid="B7" ref-type="bibr">7</xref>,<xref rid="B8" ref-type="bibr">8</xref>). Most of these methods first apply a manifold embedding in order to reduce the dimensionality of the problem and then implement various strategies for reconstructing the trajectory structure on it. Some tools are intended for linear topologies, while others aim to resolve bifurcations, multifurcations or even complex trees with many internal branchpoints. The latter case has proven very challenging, and there is much room for improvement. Here we present MERLoT (MEthod for Reconstructing Lineage tree Topologies), a tool that can reconstruct highly complex tree topologies containing multiple cell types and bifurcations.</p>
      <p>MERLoT uses a low-dimensional embedding to reconstruct the cellular lineage tree topology and then maps this topology to the original high-dimensional expression space. Different manifolds have been shown to be useful for the reconstruction of different lineage trees. MERLoT implements diffusion maps (<xref rid="B9" ref-type="bibr">9</xref>) as produced by the Destiny package (<xref rid="B10" ref-type="bibr">10</xref>) as the default method for dimensionality reduction. However, users can provide MERLoT with any low-dimensional space coordinates to perform the tree reconstruction.</p>
      <p>MERLoT explicitly models the tree structure, defining its endpoints, branchpoints and locating a set of support nodes between these that act as local neighborhoods for cells. This model-based strategy gives insights into the temporal order of branching and the emergence of intermediary cell types. Once the lineage tree has been reconstructed in the low dimensional space, MERLoT is able to embed it back to the high dimensional gene expression space. The support nodes play a 2-fold role in this step: they integrate the gene expression information of the cells assigned to them, and they inform the gene expression profiles of nearby support nodes. This reduces the overall noise levels, interpolates gene expression values for lowly sampled regions of the lineage tree and imputes missing expression values.</p>
      <p>We show MERLoT’s performance on several real datasets, using different manifold embeddings and on hundreds of simulated datasets. We generated a total of 2000 synthetic datasets with PROSSTT (<xref rid="B11" ref-type="bibr">11</xref>), divided into subsets of 100 simulations containing from 1 to 10 bifurcations. To the best of our knowledge, this benchmark datasets is the largest and most complete one up to date (available at <ext-link ext-link-type="uri" xlink:href="http://wwwuser.gwdg.de/~compbiol/merlot/">http://wwwuser.gwdg.de/∼compbiol/merlot/</ext-link>). We show that MERLoT outperforms other methods by producing a better classification of cells to the different branches that constitute the lineage trees. This is crucial when studying the progression of gene expression along the different trajectories in the tree, since a sub-optimal classification of cells mixing different cell types together leads to inaccurate imputation of gene expression time courses and impairs downstream analysis (<xref rid="B3" ref-type="bibr">3</xref>).</p>
      <p>We repeated the benchmark with simulations generated by another tool, Splatter (<xref rid="B12" ref-type="bibr">12</xref>). For more information, details about method performance, and divergence analysis of the simulations, please refer to the <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 3</xref>.</p>
      <p>MERLoT is implemented as an R package and publicly available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot">https://github.com/soedinglab/merlot</ext-link>. MERLoT allows users to easily retrieve subpopulations of cells that belong to specific branches or belong to specific paths along the tree. It can also calculate pseudotime assignments, impute pseudotemporal gene expression profiles or find genes that are differentially expressed on different tree segments.</p>
    </sec>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>MERLoT’s workflow and section summary</title>
      <p>Given an expression matrix with <italic>N</italic> cells as rows and <italic>G</italic> genes as columns, a manifold embedding technique can project the data onto a number of informative dimensions <italic>D</italic> &lt;&lt;<italic>G</italic>. Since many dimensionality reduction techniques project the data onto mutually orthogonal dimensions, two or three dimensions often do not capture the true topology of the data. In practice, we have found that for topologies with <italic>N</italic> branches we needed <italic>N</italic> + 1 dimensions for optimal results. Determining the correct number of dimensions to use is not trivial, and using more dimensions than needed might introduce undesired noise.</p>
      <p>The rest of the ‘Materials and Methods’ section is structured to explain the different steps that are followed by MERLoT after dimensionality reduction for lineage tree reconstructions and downstream analysis that are further explained in the following subsections:<list list-type="simple"><list-item><p>(i) Scaffold Tree Reconstruction.</p></list-item><list-item><p>(ii) Elastic Principal Tree (EPT) calculation in low dimensional space.</p></list-item><list-item><p>(ii) EPT Embedding into the gene expression space.</p></list-item><list-item><p>(iv) Pseudotime assignment.</p></list-item><list-item><p>(v) Differentially expressed genes detection.</p></list-item></list></p>
      <p>Additionally to the aforementioned features, MERLoT offers several functions to allow users to perform further analysis, exemplified by a correlation network reconstruction using MERLoT’s gene imputed values explained in the section:<list list-type="simple"><list-item><p>(vi) Correlation Network Construction:</p></list-item></list></p>
      <p>We describe the datasets used in the manuscript as well as the benchmark we performed to compare to other tools using synthetic data in the sections:<list list-type="simple"><list-item><p>(vii) Real Datasets</p></list-item><list-item><p>(viii) Benchmark on Synthetic Datasets</p></list-item></list></p>
      <p>More detailed descriptions of different algorithmic steps can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 1</xref>, and an overview of MERLoT in pseudocode form can be found in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 2</xref>.</p>
      <sec id="SEC2-1-1">
        <title>Terminology</title>
        <p>We model cellular lineage trees such as the ones that result from single-cell snapshots of differentiating populations with trees as defined in graph theory, i.e. undirected graphs in which any two vertices are connected by exactly one path (<xref rid="B13" ref-type="bibr">13</xref>). In the context of an EPT, each node is referred as a support node in the lower dimensional space. When embedding the EPT into the gene expression space <inline-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbb {R}^G$\end{document}</tex-math></inline-formula>, support node v<sub><italic>n</italic></sub> is referred to as <italic>pseudocell n</italic>, since it contains the imputed gene expression values based on the cells assigned to them.</p>
        <p>For illustration purposes, consider an experiment where quiescent progenitor cells <italic>A</italic> are given a differentiation signal, mature for a time period and then either differentiate to specific progenitors <italic>B</italic> or become fully differentiated cells <italic>C</italic>. Nodes with exactly one neighbor are called <italic>endpoints</italic>. They correspond to ending or starting points of the process captured in the experiment (<italic>A, B</italic> and <italic>C</italic>). Nodes with more than two neighbors are named <italic>branchpoints</italic>. In this example it will be the node where the maturation ends and the cell fate decision is made. Paths between endpoints and branchpoints or between two branchpoints are named <italic>branches</italic>. The collection of endpoints, branchpoints and their connectivity is the <italic>topology</italic> of the tree. For example, a tree (<italic>BC, BD</italic>)<italic>AB</italic>; (Newick format; for more information see <ext-link ext-link-type="uri" xlink:href="http://evolution.genetics.washington.edu/phylip/newick_doc.html">http://evolution.genetics.washington.edu/phylip/newick_doc.html</ext-link>) describes a tree with a single bifurcation. It has three endpoints <italic>A, C, D</italic>, one branchpoint <italic>B</italic> and three branches, <italic>AB, BC</italic> and <italic>BD</italic>. We refer to trees with many branchpoints as having <italic>complex</italic> topologies.</p>
      </sec>
    </sec>
    <sec id="SEC2-2">
      <title>Scaffold tree reconstruction (Figure <xref ref-type="fig" rid="F1">1B</xref>)</title>
      <p>We calculate the shortest paths <italic>p</italic><sub><italic>ij</italic></sub> between all pairs of cells <italic>i</italic> and <italic>j</italic> that minimize the squared Euclidean distance <inline-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$d_{ij}^{2}$\end{document}</tex-math></inline-formula> (using the distance <italic>d</italic><sub><italic>ij</italic></sub> would only discover the edge <italic>i, j</italic> and not a longer path). We use a modified version of the <monospace>csgraph</monospace> module from the <monospace>scipy</monospace> (<ext-link ext-link-type="uri" xlink:href="https://www.scipy.org/">https://www.scipy.org/</ext-link>) library, available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/csgraph_mod">https://github.com/soedinglab/csgraph_mod</ext-link>.</p>
      <p>The shortest path <italic>p</italic><sub><italic>kl</italic></sub> that maximizes the number of cells <italic>S</italic><sub><italic>kl</italic></sub> (or the longest total euclidean distance in case of ties) is added to the tree <italic>T</italic> and the cells <italic>k, l</italic> added to the set of endpoints of the lineage tree <inline-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {E}$\end{document}</tex-math></inline-formula> (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S1</xref>). Additional endpoints <italic>n</italic> are iteratively added to the tree by selecting the shortest paths <italic>p</italic><sub><italic>ni</italic></sub>, <italic>i</italic> ∈ <italic>T</italic> that maximize <inline-formula><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$s_\mathcal {E}(n)$\end{document}</tex-math></inline-formula>, the number of cells added to <italic>T</italic>:<disp-formula id="M1"><label>(1)</label><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} s_\mathcal {E}(n) := 0.5 \times \min \lbrace S_{kn} + S_{nl} - S_{kl} \, :\, k,l \in \mathcal {E} \rbrace . \end{equation*}$$\end{document}</tex-math></disp-formula></p>
      <fig id="F1" orientation="portrait" position="float">
        <label>Figure 1.</label>
        <caption>
          <p>MERLoT’s workflow: (<bold>A</bold>) Input to MERLoT is a gene expression matrix sampled from a dynamic process in which several cell types are present. MERLoT uses diffusion maps to reduce the dimensionality of the expression vectors for each cell to a few components (typically between 2 and 20). Users can provide any low-dimensional manifold set of coordinates to MERLoT as input. (<bold>B</bold>) A scaffold tree is calculated given the low-dimensional manifold coordinates. (<bold>C</bold>) The scaffold tree is used to initialize a principal elastic tree, composed of <italic>k</italic> support nodes (default: 100), on which cells are assigned to the different branches of the tree. (<bold>D</bold>) Given a cell or tree node as the initial pseudotime t<sub>0</sub>, pseudotime values propagate to the rest of cells/support nodes proportional to the distance along the tree that separates them from t<sub>0</sub>. (<bold>E</bold>) Expression values from cells assigned to a given support node or pseudocells (see main text) are averaged to provide the expression profile of each gene. (<bold>F</bold>) Gene expression values after imputation and interpolation in the gene expression space: A high-dimensional principal elastic tree is initialized with the connectivity from the low dimensional principal elastic tree plus the averaged expression values from the support nodes to impute smoothed gene gene expression data for each gene in the gene expression space. (<bold>G</bold>) MERLoT imputes the pseudotime-dependent expression profile of each gene along each branch in the tree. Gene expression can be visualized as a function of pseudotime.</p>
        </caption>
        <graphic xlink:href="gkz706fig1"/>
      </fig>
      <p>In ‘auto’ mode every time a new endpoint is proposed we evaluate if <inline-formula><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\max \lbrace s_\mathcal {E}(n^{\prime }) : 1 \le n^{\prime } \le N, n^{\prime } \notin \mathcal {E} \rbrace &gt;\sqrt{N}$\end{document}</tex-math></inline-formula> holds true. Otherwise, we calculate the branchpoints and tree connectivity for the endpoints in <inline-formula><tex-math id="M10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {E}$\end{document}</tex-math></inline-formula>, including <italic>n</italic>, using the methodology explained in the next subsection. After this, all cells are mapped to their closest branch. If the branch added by the selected <italic>n</italic> endpoint contains more than <monospace>MinBranchCells</monospace><inline-formula><tex-math id="M11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$=\sqrt{N}$\end{document}</tex-math></inline-formula> cells mapped to it, the branch is kept in the tree scaffold structure and the endpoints search is repeated. Otherwise, the endpoint search terminates and <italic>n</italic> is discarded as endpoint. The <monospace>MinBranchCells</monospace> threshold can be modified by the user. Alternatively, instead of using a stop criterion, users can set the number of endpoints that are aimed to be found (fixed mode) regardless of the branch lengths.</p>
      <p>After locating all endpoints we use the Neighbor Joining (NJ) criterion (<xref rid="B14" ref-type="bibr">14</xref>) in order to derive a tree (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2</xref>). Let <inline-formula><tex-math id="M12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {V}$\end{document}</tex-math></inline-formula> be the set of yet unprocessed endpoint and branchpoint nodes of the tree. We initialize <inline-formula><tex-math id="M13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {V} \leftarrow \mathcal {E}$\end{document}</tex-math></inline-formula> with the endpoint set <inline-formula><tex-math id="M14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {E}$\end{document}</tex-math></inline-formula>.</p>
      <p>We pick the two nodes <italic>k, l</italic> in <inline-formula><tex-math id="M15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {V}$\end{document}</tex-math></inline-formula> that are guaranteed to be next neighbors and therefore can be linked via a single branchpoint by minimizing the NJ distance <inline-formula><tex-math id="M16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$d^\mathrm{NJ}_{kl}$\end{document}</tex-math></inline-formula>:<disp-formula id="M2"><label>(2)</label><tex-math id="M17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} d^\mathrm{NJ}_{kl} := S_{kl} - \frac{1}{|\mathcal {V}-2|} \sum _{m \in \mathcal {V}} (S_{mk} + S_{ml}) \, . \end{equation*}$$\end{document}</tex-math></disp-formula></p>
      <p>The branchpoint cell <italic>m</italic> between <italic>k, l</italic> has a minimal distance from <italic>k</italic> and <italic>l</italic> as well minimal average distance from all other nodes in <inline-formula><tex-math id="M18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {V}$\end{document}</tex-math></inline-formula>:<disp-formula id="M3"><label>(3)</label><tex-math id="M19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} m = \arg _m \min \left\lbrace S_{km} + S_{lm} + \frac{\sum \limits _{n \in \mathcal {V} \backslash \lbrace k, l\rbrace }{S_{nm}}}{|\mathcal {V}-2|} \right\rbrace \, . \end{equation*}$$\end{document}</tex-math></disp-formula></p>
      <p>In <inline-formula><tex-math id="M20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {V}$\end{document}</tex-math></inline-formula><italic>k</italic> and <italic>l</italic> are replaced by <italic>m</italic>, while the edges <italic>l</italic> − <italic>m</italic> and <italic>m</italic> − <italic>k</italic> are added to the tree (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2</xref>). This is repeated until <inline-formula><tex-math id="M21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$|\mathcal {V}| = 2$\end{document}</tex-math></inline-formula>, where the remaining nodes trivially fulfill the criterion and can be joined. Note that the same cell can be detected more than once as a branchpoint.</p>
      <sec id="SEC2-2-1">
        <title>Local averaging mode</title>
        <p>Dijkstra’s shortest path algorithm has, in the <monospace>scipy</monospace> implementation that MERLoT uses, a time complexity of <inline-formula><tex-math id="M22">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(Nk + N\mathrm{log}(N))$\end{document}</tex-math></inline-formula> where <italic>N</italic> is the number of nodes (cells) and <italic>k</italic> the average number of connected edges per node (cell). During the scaffold tree calculation, MERLoT calls Dijkstra’s algorithm for every cell, leading to an overall complexity of <inline-formula><tex-math id="M23">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(N(Nk + N\mathrm{log}(N)))$\end{document}</tex-math></inline-formula>. Since MERLoT does not impose a cut-off on <italic>k</italic>, it is equal to <italic>N</italic>, and the complexity becomes <inline-formula><tex-math id="M24">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(N^3 + N^2\mathrm{log}(N))$\end{document}</tex-math></inline-formula>. This means that a linear increase in cell number leads to more than a cubic increase in complexity.</p>
        <p>To speed up the calculation of the scaffold tree, we implemented a local averaging strategy. Given a number of centroids we cluster the manifold coordinates of the cells with k-nearest neighbors (knn) (<xref rid="B15" ref-type="bibr">15</xref>) and subsequently calculate the scaffold tree on the cluster centroids. This knn-reduced scaffold tree is then used as input to the EPT, which returns a knn-reduced elastic tree. This can then be inflated with the original manifold coordinates. For the ‘deep’ benchmark (see Section) we reduced coordinates to <inline-formula><tex-math id="M25">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$4 \sqrt{N}$\end{document}</tex-math></inline-formula> cells, for an effective complexity of <inline-formula><tex-math id="M26">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(64N\sqrt{N} + 16N\mathrm{log}(4N))$\end{document}</tex-math></inline-formula>.</p>
        <p>Apart from a massive speed-up, the local averaging strategy also made the quality of the elastic trees less dependent on the choice of elasticity hyperparameters (see next subsection). Local averaging adds little value for small datasets, as averaging over very limited samples only worsens the signal-to-noise ratio. We recommend that MERLoT should be used with local averaging for large datasets (more than a few thousand cells; also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S7</xref>).</p>
      </sec>
    </sec>
    <sec id="SEC2-3">
      <title>Elastic principal tree in the low dimensional manifold (Figure <xref ref-type="fig" rid="F1">1C</xref>)</title>
      <p>To produce smoother, more homogeneously interpolated lineage trees MERLoT uses the EPT algorithm (<xref rid="B16" ref-type="bibr">16</xref>,<xref rid="B17" ref-type="bibr">17</xref>) as implemented in the ElPiGraph.R module (<ext-link ext-link-type="uri" xlink:href="https://github.com/Albluca/ElPiGraph.R">https://github.com/Albluca/ElPiGraph.R</ext-link> and described on arXiv: <ext-link ext-link-type="uri" xlink:href="https://arxiv.org/abs/1804.07580">https://arxiv.org/abs/1804.07580</ext-link>). The EPT algorithm is used to approximate the distribution of cells in a given space with a tree structure composed of <italic>k</italic> nodes. Direct application of the EPT algorithm is unstable as it often returns trees that are manifestly far from the global optimum (e.g. wrong number of endpoints or grossly misplaced branchpoints). This can be observed in the tree reconstructions that were performed using the non-initialized EPT using ElPiGraph (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S19</xref>). The recovered tree topologies have more (small) branches than MERLoT reconstructions, while neighboring bifurcations found by our method get collapsed. We use the <monospace>computeElasticPrincipalCurve</monospace> function from ElPiGraph, that we initialize with the coordinates of the scaffold tree endpoints and branchpoints and the edges among them. This function will not change the scaffold tree topology used as an initialization point but add nodes to the EPT by iterative bisection of edges until it reaches the specified number of <italic>k</italic> support nodes. As a result a smoothed version of the scaffold tree is obtained.</p>
      <p>We performed a grid search around the default EPT hyperparameter values by visually examining reconstructed EPTs with <italic>k</italic> = 100 support nodes on the datasets shown in Figure <xref ref-type="fig" rid="F2">2</xref>. We obtained μ<sub>0</sub> = 0.0025 and λ<sub>0</sub> = 0.8 · 10<sup>−9</sup>, values that have held up well for simulated datasets (see below). For different values of <italic>k</italic> we adjust according to μ = (<italic>k</italic> − 1)μ<sub>0</sub> and λ = (<italic>k</italic> − 2)<sup>3</sup>λ<sub>0</sub>. All reconstructions in our benchmark were performed with the standard function using <italic>k</italic> = 100.</p>
      <fig id="F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>MERLoT’s scaffold tree reconstructions: in combination with (<bold>A</bold>) DDRTree coordinates for analyzing the data from Paul <italic>et al.</italic> (<xref rid="B22" ref-type="bibr">22</xref>); (<bold>B</bold>) diffusion maps coordinates for analyzing the data from Guo <italic>et al.</italic> (<xref rid="B23" ref-type="bibr">23</xref>) (diffusion components 2 and 3 rotated around component 1 for better visualization of the data); (<bold>C</bold>) STEMNET coordinates for analyzing the data from Velten <italic>et al.</italic> (<xref rid="B24" ref-type="bibr">24</xref>). Cells are colored according to cell type annotations provided by the authors of each dataset. (<bold>D–F</bold>) EPT reconstructions using the scaffold trees from panels A–C, respectively, as an initialization point. Cells are colored according to MERLoT’s branch assignments.</p>
        </caption>
        <graphic xlink:href="gkz706fig2"/>
      </fig>
      <p>For some particular topologies μ and λ might need to be tuned in order to produce optimal results, in particular if <italic>k</italic> is increased a lot. Alternatively, MERLoT can bisect the edges in a given EPT, by additional nodes producing a new EPT with almost 2<italic>k</italic> support nodes. Note that these are special cases. For future development of MERLoT we plan to introduce a fitness function to automatically optimize the hyperparameters individually on each dataset by maximizing the log likelihood of the EPT. An in-depth discussion of elasticity hyperparameters can be found in the Supplementary Material.</p>
      <p>During the revision of this article a new tool called STREAM has been published that also exploits our strategy of using EPTs (<xref rid="B18" ref-type="bibr">18</xref>). STREAM exploits EPTs to find the tree structure in the embedded low dimensional space (Modified Locally Linear Embedding, MLLE). As mentioned, MERLoT can reconstruct trees in any low dimensional representation. Additionally, MERLoT exploits the EPT algorithm to embed the low-dimensional tree structure into the high-dimensional gene expression space and hence obtains imputed gene expression values (see next subsection).</p>
    </sec>
    <sec id="SEC2-4">
      <title>Elastic principal tree embedding into the gene expression space (Figure <xref ref-type="fig" rid="F1">1E</xref> and <xref ref-type="fig" rid="F1">F</xref>)</title>
      <p>First, cells are assigned to their closest support node according to euclidean distance in manifold space. Their average expression profile is used to initialize the ‘expression profile’ of the node to which we will refer now as a ‘pseudocell’. Nodes without cells assigned to them are initialized with a null vector. By constructing such ‘pseudocells’, we translate the positions of the support nodes in the low-dimensional manifold space to approximate positions in the full gene expression space.</p>
      <p>Finally, the EPT algorithm is initialized with the average expression profiles of the pseudocells and a list of edges representing their connectivity in the low dimensional EPT to calculate an EPT in the high-dimensional gene expression space. As a result the pseudocell profiles are updated with imputed values based on the cells from which the initial averaged values were calculated.</p>
    </sec>
    <sec id="SEC2-5">
      <title>Pseudotime assignment (Figure <xref ref-type="fig" rid="F1">1D</xref>)</title>
      <p>Pseudotime is a quantitative measure of the progress of a cell through a biological process (<xref rid="B19" ref-type="bibr">19</xref>). Given the reconstruction of a lineage tree by MERLoT, cells can be assigned pseudotime values as a function of the number of edges along the structure that separate them from the initial point of the process. MERLoT automatically sets the initial pseudotime, <italic>t</italic><sub>0</sub>, to one of the first two detected endpoints. Users can also set <italic>t</italic><sub>0</sub> to any endpoint, branchpoint or to any individual cell. In the latter case, the closest node to that cell will be assigned as <italic>t</italic><sub>0</sub> and the pseudotime values for the other nodes will be assigned as before. After a pseudotime value is assigned to each support node, cells will take the pseudotime value from their closest node in the tree. Alternatively, cells can be projected to the edge that connects their two nearest support nodes and thereby receive continuous pseudotime labels. MERLoT can calculate pseudotime in both the low-dimensional manifold space and in the high-dimensional gene expression space.</p>
    </sec>
    <sec id="SEC2-6">
      <title>Differentially expressed genes detection</title>
      <p>After a linear tree reconstruction has been performed, MERLoT can easily find groups of genes being differentially expressed among different groups of cells. If two groups of cells are provided, e.g cells assigned to two branches in the tree (Figure <xref ref-type="fig" rid="F3">3C</xref>), MERLoT performs a Kruskal–Wallis rank sum test (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 4</xref> for details) to evaluate which genes in the full expression matrix are differentially expressed on them. If a single subpopulation of cells is provided, the comparison is made against the rest of cells in the data. The entire list of genes is given as output, ordered by the test <italic>P</italic>-values results. Also, <italic>e</italic>-values are provided by multiplying the <italic>P</italic>-values by the number of <italic>G</italic> genes being tested.</p>
      <fig id="F3" orientation="portrait" position="float">
        <label>Figure 3.</label>
        <caption>
          <p>Pseudotime assignment and interpolation of gene expression profiles: (<bold>A</bold>) Pseudotime assignment in color code for cells from Figure <xref ref-type="fig" rid="F2">2B</xref> and <xref ref-type="fig" rid="F2">E</xref>, taking the zygote state as <italic>t</italic><sub>0</sub>. (<bold>B</bold>) Color-coded matrix of gene expression values for tree pseudo cells (rows) times genes (columns) before (top) and after (bottom) the gene expression space interpolation using the EPT. Pseudo cells are ordered according to their pseudotime and genes were hierarchically clustered. Numbers indicate specific genes shown in panel C. The color code in the bar on the left side of the heatmaps refers to pseudo cells branch assignments. (<bold>C</bold>) Gene expression profiles over pseudotime for four genes that are differentially expressed between the EPI and PE lineages. Semi-transparent circles represent the expression values of individual cells and solid lines correspond to MERLoT’s interpolations. Colors as in Figure <xref ref-type="fig" rid="F2">2E</xref>.</p>
        </caption>
        <graphic xlink:href="gkz706fig3"/>
      </fig>
    </sec>
    <sec id="SEC2-7">
      <title>Correlation network reconstruction (Figure <xref ref-type="fig" rid="F8">8</xref>)</title>
      <p>We performed a Gene Correlation Network (GCN) reconstruction for the fibroblasts to neurons transdifferentiation dataset from the Treutlein group (<xref rid="B20" ref-type="bibr">20</xref>). We reconstructed the lineage tree, reconstructed the GCN, performed gene clustering and differential gene expression analysis. The script for performing this analysis is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/">https://github.com/soedinglab/merlot/tree/master/inst/example/</ext-link>.</p>
      <sec id="SEC2-7-1">
        <title>Network construction</title>
        <p>Given the expression profile of a gene in all cells (non-imputed values) or in the tree support nodes (imputed values) we create a matrix that contains the pairwise Pearson’s correlation coefficient between all pairs of genes. Given this matrix we can use the R package <italic>igraph</italic> (<ext-link ext-link-type="uri" xlink:href="http://igraph.org/r/">http://igraph.org/r/</ext-link>) by defining a threshold to decide which Pearson’s correlation coefficients to include as weights for the edges in the graph. For the correlation measures and cut-offs used, please refer to <xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S10–14</xref>.</p>
      </sec>
      <sec id="SEC2-7-2">
        <title>Cluster analysis</title>
        <p>We clustered the genes on the GCN by applying the <italic>walktrap</italic> algorithm as implemented in the <italic>igraph</italic> package. This algorithm partitions a graph into densely connected parts of a network (modules) by exploiting the fact that short random walks tend to stay within a module (<xref rid="B21" ref-type="bibr">21</xref>). Any module with less than a specified lower boundary of nodes is dissolved and those genes are considered as unclustered. We set the minimum number of genes to 3.</p>
      </sec>
      <sec id="SEC2-7-3">
        <title>Gene ontology term enrichment analysis</title>
        <p>To help determine the function of network defined clusters, a module for Gene Ontology (GO) term enrichment was implemented. For this purpose the R package topGO was used. Enrichment was computed by the Fisher exact test with the gene set of the data set as the gene universe. Gene ontology tables per cluster were retrieved and representative keywords were selected by cluster.</p>
      </sec>
      <sec id="SEC2-7-4">
        <title>Differentially expressed genes</title>
        <p>We detected the differentially expressed genes at every branch of the reconstructed lineage tree using the <monospace>branch_differential_expression</monospace> function from MERLoT. All genes are ranked according to the <italic>e</italic>-value obtained from the Kruskal–Wallis rank sum test, applied to test whether they are differentially expressed or not. Genes with <italic>e</italic>-value &lt; 10<sup>−3</sup> are considered to be differentially expressed. Genes are colored according to the mean difference in expression between the two compared sets of cells (i.e. selected branch and rest of the tree for each case). Upregulated genes are shown in shades of red and downregulated genes in shades of blue. Intensity corresponds to log fold change of gene expression. Genes that are not significantly differentially expressed are colored in black.</p>
      </sec>
    </sec>
    <sec id="SEC2-8">
      <title>Real datasets</title>
      <sec id="SEC2-8-1">
        <title>Myeloid progenitors differentiation (Paul <italic>et al.</italic>, (<xref rid="B22" ref-type="bibr">22</xref>))</title>
        <p>This dataset was produced applying massively parallel single-cell RNA-seq (MARS-seq) which uses unique molecular identifiers (UMIs). After quality control and selection of informative genes the expression matrix contains 2730 cells and 3459 genes. Originally the authors reported 3461 informative genes with some of them being incorrectly formatted as dates, e.g. 5-Mar, 4-Sep. We were able to correct the IDs of most of them to valid GeneIDs except two (IDs: 7-Sep and 2-Mar) which were excluded from the analysis (<ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExamplePaul2015.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExamplePaul2015.R</ext-link>).</p>
      </sec>
      <sec id="SEC2-8-2">
        <title>Mouse zygote to blastocyst (Guo et. al, (<xref rid="B23" ref-type="bibr">23</xref>))</title>
        <p>The dataset was produced by the Biomark RT-qPCR system and contains Ct values for 48 genes measured in 442 mouse embryonic stem cells at seven different developmental time points, from the zygote to blastocyst (<xref rid="B23" ref-type="bibr">23</xref>). The data was cleaned and normalized by following the vignette from the Destiny package. A total number of 428 cells and 48 genes were kept in the final expression matrix. A diffusion map was calculated using Destiny and the first three diffusion coordinates were used to calculate the lineage tree. We rotated the cells and tree nodes coordinates around the first axis in order to produce a two-dimensional representation of the data and improve visualization (see Figure <xref ref-type="fig" rid="F2">2B</xref>, <xref ref-type="fig" rid="F2">E</xref> and <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleGuo2010.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleGuo2010.R</ext-link>).</p>
      </sec>
      <sec id="SEC2-8-3">
        <title>Haematopoietic stem and progenitor cells (HSPCs) (Velten <italic>et al.</italic>, (<xref rid="B24" ref-type="bibr">24</xref>))</title>
        <p>The scRNA-seq data was generated samples taken from two donor individuals (smart-seq2.HSC for individual 1 and QUARTZ-seq for individual 2), with all findings systematically compared between them. We followed the vignette for the STEMNET software available as part of its R package and obtained the normalized data, the cell types labels, and the STEMNET coordinates (see Figure <xref ref-type="fig" rid="F2">2C</xref>, <xref ref-type="fig" rid="F2">F</xref> and <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleVelten2017.R">https://github.com/soedinglab/merlot/tree/master/inst/example/ExampleVelten2017.R</ext-link>).</p>
      </sec>
    </sec>
    <sec id="SEC2-9">
      <title>Benchmark on synthetic datasets</title>
      <p>We evaluated the performance of MERLoT and other lineage tree reconstruction methods on synthetic data. We produced two simulation sets with PROSSTT (<xref rid="B11" ref-type="bibr">11</xref>) and one more with Splatter (<xref rid="B12" ref-type="bibr">12</xref>). Each set contains 1000 (10 × 100) datasets with 1–10 bifurcations (3–12 endpoints) each. The topology of each dataset was created by successively adding a bifurcation to a random end point until the desired number of bifurcations was reached (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S8</xref>). In the first PROSSTT set (‘lean’) we sampled for each lineage tree 50 cells from every branch, while in the second (‘deep’) we used the same lineage trees but sampled 500 cells from each branch. In the Splatter set we sampled 100 cells from each branch.</p>
      <p>PROSSTT generates a simulated scRNA-seq dataset in four steps: (i) it generates a tree (number and length of branches, connectivity), (ii) it simulates average gene expression levels μ<sub><italic>g</italic></sub>(<italic>t, b</italic>) (pseudotime <italic>t</italic>, branch <italic>b</italic>), (iii) it samples points in the tree (<italic>t, b</italic>) (4) it retrieves μ<sub><italic>g</italic></sub>(<italic>t, b</italic>) for each sampled point and draws UMI counts from a negative binomial distribution.</p>
      <p>We provide the scripts used to create the simulations (<ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot-scripts">https://github.com/soedinglab/merlot-scripts</ext-link>) as well as the simulations themselves (<ext-link ext-link-type="uri" xlink:href="http://wwwuser.gwdg.de/~compbiol/merlot/">http://wwwuser.gwdg.de/∼compbiol/merlot/</ext-link>). Detailed information about the simulation procedure and parameter values can be found in the Supplementary Material.</p>
      <p>Splatter takes a slightly different approach to the simulation of lineage trees (‘paths’ in the terminology of Splatter). It is a software primarily designed to simulate populations of cells with differential expression between them. In order to simulate a lineage tree, it simulates populations with differential expression at each successive waypoint of the lineage tree (between start and first branchpoint, between successive branchpoints, between branchpoints and endpoints), and then simulates how gene expression changes from one waypoint to the other.</p>
      <p>For parameter selection, we kept default parameters as far as the count model and the generation of average gene expression values were concerned (parameters controlling mean, library size, expression outlier, biological coefficient of variation). The rest of the simulation parameters were picked to mirror those in the PROSSTT simulations (see Supplementary Material).</p>
      <p>We visualized typical prediction examples for three topologies and several methods in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S5</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS AND DISCUSSION</title>
    <sec id="SEC3-1">
      <title>MERLoT’s workflow for lineage trees reconstruction and gene expression imputation</title>
      <p>Given the matrix of expression values for all cells (Figure <xref ref-type="fig" rid="F1">1A</xref>), MERLoT reconstructs lineage trees according to the following steps (for details see ‘Materials and Methods’ section): First, MERLoT applies a dimensionality reduction method to map the high-dimensional expression vectors of cells to a low-dimensional space. Users can replace the default, diffusion maps, with the method of their choice. Second, MERLoT calculates a scaffold tree in the low-dimensional space combining the Dijkstra’s shortest path (<xref rid="B25" ref-type="bibr">25</xref>) and NJ (<xref rid="B14" ref-type="bibr">14</xref>) algorithms to define the location of endpoints, branchpoints and their connectivity (Figure <xref ref-type="fig" rid="F1">1B</xref>). (View <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 5</xref> for a pseudocode explanation). The scaffold tree is used as initialization for calculating an EPT (<xref rid="B16" ref-type="bibr">16</xref>) (see Methods for details). The EPT smooths the scaffold via an optimization procedure that places a user-defined number of support nodes between endpoints and their corresponding branchpoints interpolating the density of cells in the low-dimensional space (Figure <xref ref-type="fig" rid="F1">1C</xref>). Once the low-dimensional tree is optimized, an initial pseudotime t<sub>0</sub> is assigned to the user-specified tree root. The pseudotime of each cell is then proportional to its distance from the root along the tree structure (Figure <xref ref-type="fig" rid="F1">1D</xref>).</p>
      <p>To study gene expression changes along the different tree branches, MERLoT embeds the low-dimensional EPT structure into the high-dimensional gene expression space. Each tree support node in the low-dimensional space is mapped one-to-one to a tree support node in the gene expression space: we first assign each cell in the low-dimensional space to its nearest support node. Then, we initialize the corresponding support node in the gene expression space to the average gene expression level of all cells assigned to it (Figure <xref ref-type="fig" rid="F1">1E</xref>), and we run the EPT algorithm again (‘Materials and Methods’ section). In this way, we find the gene expression values of all the support nodes (Figure <xref ref-type="fig" rid="F1">1F</xref>), which can be considered as ‘pseudocells’, representing waypoints in the idealized cell differentiation paths and containing imputed gene expression values for their surroundings in the expression space.</p>
      <p>The cells’ pseudotime values can also be refined in this step, since cells are reassigned to support nodes in the full multi-dimensional space. By combining the imputed expression values with the pseudotime assignments of the support nodes, MERLoT can reconstruct imputed pseudotime courses of gene expression profiles along the tree (Figure <xref ref-type="fig" rid="F1">1G</xref>).</p>
    </sec>
    <sec id="SEC3-2">
      <title>Applying MERLoT to real datasets</title>
      <p>We applied MERLoT on three real datasets with different degrees of lineage tree structure complexity (details in ‘Materials and Methods’ section): (i) scRNA-seq data (with Unique Molecular Identifiers, UMIs) for myeloid progenitor differentiation (2730 cells, 3460 genes) (<xref rid="B22" ref-type="bibr">22</xref>), embedded in DDRTree coordinates (Figure <xref ref-type="fig" rid="F2">2A</xref> and <xref ref-type="fig" rid="F2">D</xref>), (ii) single-cell quantitative polymerase chain reaction (qPCR) data for zygote to blastocyst differentiation (428 cells, 48 genes) (<xref rid="B23" ref-type="bibr">23</xref>), embedded in a diffusion map (Figure <xref ref-type="fig" rid="F2">2B</xref> and <xref ref-type="fig" rid="F2">E</xref>) and (iii) scRNA-seq data (index-omics) for haematopoietic stem and progenitor cells (1034 cells, 469 genes), using STEMNET coordinates (<xref rid="B24" ref-type="bibr">24</xref>). The number of endpoints of the lineage trees, found by MERLoT in ‘auto’ mode, are consistent with the expected number of cell types that are described to be present on each of the analyzed datasets.</p>
      <p>After the lineage tree reconstruction, each support node on the tree will be assigned a pseudotime value equal to the number of edges that separate it from the beginning of the differentiation, <italic>t</italic><sub>0</sub>. This can be a tree endpoint (the Zygote branch in Figure <xref ref-type="fig" rid="F2">2B</xref>) or an internal support node (for example a node in the red branch of Figure <xref ref-type="fig" rid="F2">2E</xref>). Each cell will be assigned the pseudotime value of its closest tree node. In Figure <xref ref-type="fig" rid="F3">3A</xref>, pseudotime values for the zygote to blastocyst dataset are shown. Because scRNA-seq data contain a lot of technical and biological noise (<xref rid="B6" ref-type="bibr">6</xref>), cells with similar pseudotime values may have large variations in gene expression. MERLoT imputes denoised gene expression profiles by embedding the reconstructed lineage tree into the original gene expression space.</p>
      <p>This model-based interpolation results in denoised pseudotime courses of gene expression for the entire tree. As an example, Figure <xref ref-type="fig" rid="F3">3C</xref> shows the expression profiles of four genes that are differentially expressed between the epiblast (EPI, in red) and the primitive endoderm (PE, in blue) cell lineages (Methods). Note how the expression values of the pseudocells (solid lines) interpolate and smooth the noisy single-cell expression values (circles) even in regions with low cell density.</p>
    </sec>
    <sec id="SEC3-3">
      <title>Lineage tree reconstruction in high-dimensional space</title>
      <p>While two or three-dimensional projections of datasets are easier to visualize, MERLoT can utilize any number of informative dimensions of the embedding space to reconstruct a lineage tree. However, visualizing hundreds or thousands of cells in multiple dimensions is challenging. MERLoT overcomes this limitation by using graph drawing techniques to project complex multidimensional EPTs into two dimensions while still displaying cell annotation and density. In <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S3</xref> we show reconstructed topologies for simulations with 6, 8, 10 and 12 different cell types.</p>
      <p>In the original Monocle2 paper (<xref rid="B26" ref-type="bibr">26</xref>), the authors show in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S16</xref> their analysis of the haematopoiesis dataset produced by Paul <italic>et al.</italic> (<xref rid="B22" ref-type="bibr">22</xref>). They use 10 components of the DDRTree projection to recover a topology with five branching points. We applied MERLoT on these coordinates and visualized the resulting tree using as annotation the cell types that Paul <italic>et al.</italic> assigned to the various clusters (Figure <xref ref-type="fig" rid="F4">4</xref>; also see Figure <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 6</xref> in the Supplementary Material).</p>
      <fig id="F4" orientation="portrait" position="float">
        <label>Figure 4.</label>
        <caption>
          <p>Reconstruction of haematopoietic system B: basophil (green); DC: dendritic cell (red); E: eosinophil (light blue); Ery: erythrocyte (purple); GMP: granulocyte and monocyte progenitor (brown); M: monocyte; MK: megakaryocyte; MP/EP: multipotent myeloid and erythroid progenitors; N: neutrophil (orange). Each pie chart represents a tree node, and the colors denote the different cell types mapped to it. (<bold>A</bold>) The Monocle2 reconstruction of the process. Each pie chart is one of the nodes of the minimum spanning tree. (<bold>B</bold>) The MERLoT reconstruction of the process. Each pie chart is a node of the EPT. Pie charts corresponding to branchpoints and endpoints are larger just for aesthetic purposes</p>
        </caption>
        <graphic xlink:href="gkz706fig4"/>
      </fig>
      <p>Monocle2 (Figure <xref ref-type="fig" rid="F4">4A</xref>) separates the progenitors (left-most, cyan), the erythrocytes (top, purple) and an internal branch of granulocyte/monocyte progenitors (bottom middle, brown). However, it fails to separate the megakaryocyte branch (top middle, blue) and groups dendritic cells (bottom right, red) together with basophils (green) and monocytes (orange). Furthermore, it groups neutrophils together with monocytes (right, magenta). MERLoT (Figure <xref ref-type="fig" rid="F4">4B</xref>) achieves almost pure megakaryocyte and dendritic cell branches and separates the bulk of the neutrophils from the monocytes (also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S21C</xref>). Additionally, it separates most of the neutrophils and basophils from the bulk of the progenitor population (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S21C</xref>). Although MERLoT better resolved certain branches in the lineage tree, neither method succeeds in separating basophils from monocytes and granulocyte-monocyte progenitors, and both trees contain a branch with a mixture of almost all cell types, including pluripotent progenitors (right, middle).</p>
    </sec>
    <sec id="SEC3-4">
      <title>Tree reconstruction performance assessment on synthetic data</title>
      <p>In order to assess the quality of MERLoT’s lineage tree reconstruction, we compared its performance to four tools with a similar approach to trajectory inference, namely unsupervised methods that produce branch assignments and assign a pseudotime to each cell: SLICER (<xref rid="B27" ref-type="bibr">27</xref>), Monocle2 (<xref rid="B26" ref-type="bibr">26</xref>), TSCAN (<xref rid="B28" ref-type="bibr">28</xref>) and Slingshot (<xref rid="B29" ref-type="bibr">29</xref>). Since our focus was on correctly predicting cell labels and cell pseudotime, we needed data from complex topologies with known intrinsic developmental time.</p>
      <p>For this purpose we developed PROSSTT (‘Materials and Methods’ section, (<xref rid="B11" ref-type="bibr">11</xref>)), a software that simulates scRNA-seq expression matrices with complex lineage tree structures. PROSSTT provides pseudotime and branch assignment labels for the cells, as well as branch connectivity information. Examples of diffusion maps for PROSSTT simulations and their lineage tree reconstructions with up to three bifurcations, performed by MERLoT, are shown in Figure <xref ref-type="fig" rid="F5">5A</xref>. Additionally, we used Splatter (‘Materials and Methods’ section, (<xref rid="B12" ref-type="bibr">12</xref>)), a suite to simulate cell populations with differential expression that can also be used to simulate branched topologies.</p>
      <fig id="F5" orientation="portrait" position="float">
        <label>Figure 5.</label>
        <caption>
          <p>Simulated datasets and benchmarking: (<bold>A</bold>) Examples for diffusion map embeddings of PROSSTT simulations. From top to bottom: one, two and three bifurcations. Cell colors the labeled branch assignments. The double bifurcation is plotted by rotating diffusion components 2 and 3 around component 1. The triple bifurcation is plotted by rotating diffusion components 3 and 4 around component 1. (<bold>B</bold>) Branch assignment comparison using Monocle2, SLICER, TSCAN, Slingshot and MERLoT using both PROSSTT (left) and Splatter (right) simulations. Slingshot and MERLoT are used in combination with DDRTree and diffusion map (Destiny) coordinates. (<bold>C</bold>) Pseudotime assignment comparison. The error bars are 95% confidence intervals assuming the prediction scores are normally distributed.</p>
        </caption>
        <graphic xlink:href="gkz706fig5"/>
      </fig>
      <p>We generated three simulated datasets, two of 1000 simulations each by PROSSTT (‘lean’ and ‘deep’) and one of 1000 simulations with Splatter. All sets contain 10 subsets of 100 trees with 3–12 different cell fates and 1–10 bifurcations each. However, in the dimensionality reductions of datasets simulated by Splatter, branchpoints and endpoints often do not lie far enough from preceding tree segments. This makes it difficult for trajectory inference methods to correctly detect the tree structure, as they may connect non-adjacent tree segments, thereby creating ‘short-circuits’ (Supplementary Material, ‘Divergence Analysis’ and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S18</xref>). Because of this reason, we only use Splatter simulations with 1–4 bifurcations for performance evaluation. The results for the higher order bifurcations and more analysis on why they were left out are shown in Supplementary material (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S15, S4, S16 and S17</xref>; also see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S9</xref>.)</p>
      <p>For all simulations, we predicted the lineage trees, assigned cells to branches, and calculated cell pseudotime values using the aforementioned tools. Since MERLoT and Slingshot work on a given set of manifold dimensions provided by the user, we used them in combination with diffusion maps (provided by the Destiny package) or DDRTree coordinates (provided by Monocle2). For simplicity we will refer to these combinations as MERLoT_Destiny, MERLoT_DDRTree, Slingshot_Destiny and Slingshot_DDRTree. Additionally, MERLoT can be used with and without providing the correct number of cell fates (‘fixed’ and ‘auto’ modes). TSCAN and Slingshot do not provide a formal tree structure object, so in order to evaluate their performance we had to implement wrappers for them (see ‘Materials and Methods’ section).</p>
      <sec id="SEC3-4-1">
        <title>Branch assignment quality</title>
        <p>We assessed the agreement between predicted and labeled branch assignment predictions in the simulations using the Normalized Mutual Information (NMI), since it punishes splitting and merging clusters equally (Figure <xref ref-type="fig" rid="F5">5B</xref>). This avoids systematic advantages for methods that are biased to produce either more or less branches than the simulated ones. We also included other scoring measures (‘Materials and Methods’ section and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S4</xref>).</p>
        <p>In the left side of Figure <xref ref-type="fig" rid="F5">5B</xref> (top panel) we show the results for the ‘lean’ benchmark set. MERLoT_Destiny consistently outperforms Monocle2 and has the best overall performance, while Slingshot_Destiny achieves comparable results for more complex topologies. SLICER scores low mainly because its recursive branch assignment function crashes for many datasets or does not finish in less than 60 min, especially for complex topologies. TSCAN applies dimensionality reduction based on PCA which mixes up all cell types when projected in the reduced space and hence cannot be correctly classified.</p>
        <p>In the Splatter benchmark set (Figure <xref ref-type="fig" rid="F5">5B</xref>, right) we only use lineage trees with up to four bifurcations to avoid short-circuits (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S17</xref>). Still, tools with a DDRTree embedding perform worse than in the ‘lean’ set. Slingshot_Destiny again improves for more complex topologies but MERLoT_Destiny performs better. SLICER and TSCAN still underperform for the same reasons.</p>
        <p>With the 10-fold increase in cell numbers in the ‘deep’ set we expected an overall increase in the performance levels of the methods. Indeed, this is the case for MERLoT, which is consistently between 5 and 10 percentage points better than in the original benchmark. Monocle2 performs at the same level as on the ‘lean’ set. Slingshot_Destiny shows improvement until five bifurcations, where performance starts deteriorating. This happens because starting at five bifurcations (5500 cells) Slingshot fails to compute distances between clusters for multiple simulated datasets due to a ‘computational [matrix] singularity’ error. This bug can be circumvented by adding small amounts of random noise to the diffusion map coordinates, in which case Slingshot’s performance increases with the complexity of the topologies (dotted line).</p>
      </sec>
      <sec id="SEC3-4-2">
        <title>Pseudotime assignment quality</title>
        <p>In a multi-branched lineage tree, multiple trajectories exist between progenitors and differentiated cell fates. Pseudotime only assigns an ordering within each trajectory, while pseudotime values are not comparable between non-consecutive tree branches. We therefore test pseudotime orderings on the cells that belong to the longest possible trajectory in terms of pseudotime steps in every simulation. We use the Goodman–Kruskal’s gamma (Figures <xref ref-type="fig" rid="F5">5C</xref> and <xref ref-type="fig" rid="F6">6B</xref>) and other indices (see ‘Materials and Methods’ section and <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S6</xref>) as a measure of concordance between the true and predicted orderings along the longest trajectory.</p>
        <fig id="F6" orientation="portrait" position="float">
          <label>Figure 6.</label>
          <caption>
            <p>‘Deep’ benchmark set: Branch assignment (left) and pseudotime prediction (right) performance in the ‘deep’ PROSSTT benchmark. Slingshot and MERLoT are used only in combination with diffusion map (Destiny) coordinates, since this combination performed best in the ‘lean’ benchmark. The error bars are 95% confidence intervals assuming the prediction scores are normally distributed.</p>
          </caption>
          <graphic xlink:href="gkz706fig6"/>
        </fig>
        <p>In the ‘lean’ set (Figure <xref ref-type="fig" rid="F5">5C</xref>, left), MERLoT_Destiny and Slingshot_Destiny perform better for easier topologies and are overtaken by MERLoT_DDRTree and Slingshot_DDRTree for more complex ones. MERLoT_DDRTree is overall the best method, and only gets slightly overtaken by Destiny for the most complex topologies in the benchmark. The poor performance of TSCAN and SLICER is a direct result of their poor performance at branch assignment.</p>
        <p>In the Splatter set performance drops with the growing number of short-circuits, something that impacts Monocle2 considerably. Approaches based on diffusion maps, on the other hand, thrive.</p>
        <p>The situation is clearer in the ‘deep’ set. MERLoT improves dramatically compared to the ‘lean’ set, reaching an improvement of 25 percentage points for topologies with 10 bifurcations. Destiny and Monocle2 perform at the level of the ‘lean’ set. Slingshot_Destiny does not improve in pseudotime compared to the original benchmark, even when the computational singularities are circumvented (‘singularity corrected’ in Figure <xref ref-type="fig" rid="F6">6B</xref>).</p>
      </sec>
    </sec>
    <sec id="SEC3-5">
      <title>Post lineage inference analysis</title>
      <p>One of MERLoT’s assets is that it can reconstruct imputed gene expression profiles to study how a gene varies along the different paths in the lineage topology. These profiles interpolate and denoise the gene expression values of cells that are assigned to equivalent pseudotimes and facilitate the study/analysis of gene expression regulation, for example via detecting modules of genes that have correlated expression profiles. By using the imputed gene expression values recovered from MERLoT downstream analysis like Gene Correlation Network (GRN) reconstruction could be improved. Building GRNs requires identifying causality for the gene–gene interactions, which exceeds the scope of this work. However, as proof of concept, we derived a Gene Correlation Network (GCN), a proxy for a GRN. We analysed the dataset in which Treutlein and coworkers studied the transdifferentiation process of fibroblasts into neurons (<xref rid="B20" ref-type="bibr">20</xref>). Overexpression of the proneural pioneer factor <italic>Ascl1</italic> causes cells to exit the cell cycle and re-focus gene expression through distinct neural transcription factors. However, later on in the process a myogenic program competes with the neural one, producing undesired myocyte-like cells and lowering the efficiency of the direct reprogramming process.</p>
      <p>We reconstructed the lineage tree from the data, which shows a single bifurcation (Figure <xref ref-type="fig" rid="F7">7A</xref>). Then, we embedded the tree structure into the gene expression space and recovered the imputed gene expression values for the support nodes. We calculated the Pearson’s correlation coefficients between all pairs of genes using both the original gene expression values from the cells and the imputed ones from the tree support nodes. In Figure <xref ref-type="fig" rid="F7">7B</xref> we show the Pearson’s correlation coefficient distributions for imputed and non-imputed gene expression values. While the non-imputed values concentrate most values between −0.5 and 0.5, the distribution of imputed values contains two subpopulations of genes close to −1 (highly anti-correlated) and 1 (highly correlated) separating them from the rest of weakly correlated genes. In Figure <xref ref-type="fig" rid="F7">7C</xref> and <xref ref-type="fig" rid="F7">D</xref> we show the gene expression values of S100a6, a gene differentially expressed in myocytes and of Ap3b2, a gene differentially expressed in neurons, respectively.</p>
      <fig id="F7" orientation="portrait" position="float">
        <label>Figure 7.</label>
        <caption>
          <p>Lineage tree reconstruction of fibroblasts to neurons transdifferentiation: (<bold>A</bold>) Two-dimensional diffusion map embedding of cells together with the reconstructed lineage tree (tree support nodes shown in black). We observe a single bifurcated tree containing three branches corresponding to fibroblasts, neurons and myocytes. (<bold>B</bold>) Pairwise Pearson’s correlation coefficients for gene expression profiles using imputed (green) and non-imputed (red) values. The dashed line at <italic>x</italic> = 0 represents the separation between positively and negatively correlated genes. The dashed line at <italic>x</italic> = 0.9 points at the threshold for reconstructing the GCN in Figure <xref ref-type="fig" rid="F8">8</xref>. (<bold>C</bold>) Pseudotime gene expression profile of differentially expressed gene in myocytes. (<bold>D</bold>) Pseudotime gene expression profile of a differentially expressed gene in neurons.</p>
        </caption>
        <graphic xlink:href="gkz706fig7"/>
      </fig>
      <p>Once all pairwise gene expression correlations have been calculated, we built a graph where nodes correspond to genes and the pairwise Pearson’s correlation coefficients of imputed expression levels represent the weight of the edges connecting them. In Figure <xref ref-type="fig" rid="F8">8</xref> we observe the graph that results from applying a layout (see ‘Materials and Methods’ section) to distribute highly correlated genes (Pearson’s correlation coefficients &gt;0.9) in space. On this representation, close proximity corresponds to high correlation and <italic>vice versa</italic>.</p>
      <fig id="F8" orientation="portrait" position="float">
        <label>Figure 8.</label>
        <caption>
          <p>Reconstructed gene association network: (<bold>A</bold>) Gene clusters given the network connectivity were calculated and colored. Enriched GO terms were retrieved for each cluster and a general label summarizing their main implications are assigned to each cluster. (<bold>B</bold>) Differentially expressed genes in the fibroblast branch. (<bold>C</bold>) Differentially expressed genes in the neurons branch. (<bold>D</bold>) Differentially expressed genes in the myocytes branch. Genes that are differentially expressed with an <italic>e</italic>-value <italic>e</italic> &lt; 10<sup>−3</sup> are colored according to the mean difference in expression, shades of blue indicating downregulation and shades of red upregulation. Intensity corresponds to log fold change of gene expression (see color scale).</p>
        </caption>
        <graphic xlink:href="gkz706fig8"/>
      </fig>
      <p>For the quality of the reconstructed GCN, concentrating on highly correlated genes and using imputed gene expression levels is crucial. A low correlation threshold will add noise to the GCN by including false positive interactions. Additionally, the noise in the non-imputed data obscures the similarities between the time-dependent expression of genes, resulting in low correlation values (Figure <xref ref-type="fig" rid="F7">7B</xref>). This means that using a high-correlation threshold will result in a GCN with few, small connected components, while a lower threshold will inevitably lead to densely connected ‘hairy ball’ constructs that are difficult to interpret when raw, non-imputed values are used instead (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figures S10–12</xref>).</p>
      <p>After obtaining the GCN, we clustered the network (see Methods) and recovered the gene ontology (GO) terms that were enriched in each cluster (see ‘Materials and Methods’ section). In Figure <xref ref-type="fig" rid="F8">8A</xref> we show the reconstructed network colored by cluster and labeled according to the keywords that best represent their enriched GO terms. We used MERLoT’s module for finding differentially expressed genes, both upregulated (red) and downregulated (blue), on each of the three subpopulations assigned to each branch that composes the lineage tree structure (see ‘Materials and Methods’ section). This was done for each branch, i.e fibroblasts (Figure <xref ref-type="fig" rid="F8">8B</xref>), neurons (Figure <xref ref-type="fig" rid="F8">8C</xref>) and myocytes (Figure <xref ref-type="fig" rid="F8">8D</xref>). Genes that are differentially upregulated in the fibroblasts branch mainly belong to the clusters enriched for GO terms related with ‘mitosis and proliferation’ and ‘protein metabolism’. Downregulated genes in fibroblast cells mostly belong to clusters associated with the GO terms ‘myogenic’, ‘cell death and nucleic acids synthesis’ and ‘nervous system development’. We observe that for neurons, genes related to synaptic GO terms are upregulated while for myocytes the same happens for genes belonging to the myogenic cluster. Interestingly, downregulated genes on each branch belong to interconnected clusters. While neurons downregulate genes mostly associated with protein metabolism, myocytes downregulate genes associated with mitosis and proliferation, protein targeting and muscle hypertrophy and cytoskeleton and chromatin remodeling.</p>
      <p>This dataset contains two mutually exclusive cell lineages, so gene expression patterns are mostly mirrored (upregulated genes in neuronal branch are downregulated in myogenic and <italic>vice versa</italic>). However when the tree topology is more complex, multiple transcriptional programs run in parallel and genes can have quite different behaviors in the different branches of the lineage tree. If GCNs are built using all cells together, spurious correlations can be recovered because of the so called Simpson’s paradox (<xref rid="B3" ref-type="bibr">3</xref>). An analysis of this effect is shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note 5</xref>, where we reconstruct GCNs for the Guo dataset (Figure <xref ref-type="fig" rid="F2">2B</xref>)) that contains one progenitors population (zygote cells) and three mature cell types (TE, EPI and PE). We show that GCNs that are built using all cells do not allow a clear separation of gene markers that are specific for the EPI and PE lineages that emerge from the Inner Cell Mass (ICM) lineage.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="SEC4">
    <title>CONCLUSION</title>
    <p>As single-cell RNA sequencing is becoming a mainstream technology, many datasets with highly complex underlying lineage trees will need to be analyzed. Here we have presented MERLoT, a tool to reconstruct complex lineage tree topologies in a more accurate way than other methods. We show this by applying MERLoT to various published datasets, but also by extensively testing its performance on a total of 2400 simulated datasets, produced by PROSSTT and Splatter. In this benchmark, MERLoT compares favorably to the state of the art in branch detection and pseudotime prediction using a variety of established performance indices.</p>
    <p>Lineage tree reconstructions are not a final objective but rather a proxy to study changes in gene expression and understand the delicate regulation procedures that lead to organisms development, cellular differentiation, transdifferentiation and tissue regeneration. MERLoT simplifies and enhances downstream analysis in multiple ways. By utilizing an explicit tree structure, selecting subgroups of cells that belong to different tree segments or finding differentially expressed genes becomes straightforward. Apart from deriving the tree, MERLoT also imputes and interpolates gene expression by exploiting the use of EPTs in the high dimensional gene expression space applying the tree structure learned in the low dimensional embedding, drastically reducing noise and alleviating the problem of gene dropout and hence enhancing downstream analysis. A recent publication described how diverse connective tissue cell types regenerated axolotl limbs after amputation by converging to the homogeneous transcriptional signatures of multipotent progenitor cells (<xref rid="B30" ref-type="bibr">30</xref>). The authors used MERLoT to reconstruct the lineage tree, impute the gene expression values as a function of pseudotime, and study how gene expression levels changed among the different groups of cells in the process. Here, we have derived a GCN for a dataset representing fibroblast to neuron transdifferentiation as well as zygote to blastocyst differentiation (see Supplemental Note 5). We show that using MERLoT’s imputed expression values improves capture of gene–gene correlations, and could be used as input for more sophisticated methods that aim to reconstruct gene regulatory networks.</p>
    <p>While our benchmark showed that MERLoT’s default approach leads to satisfactory results for a wide variety of topologies and expression matrices of various sizes, we are aware that when dealing with real data most methods do not work out of the box. Currently, researchers rely on external, expert knowledge about the studied systems and manually optimize strategies on every step of the process (gene selection filtering, cell quality filtering, different manifold embeddings and tuning of parameters related to all of these). MERLoT is flexible enough to allow supervision at different parts of the analysis pipeline, while providing default strategies that are robust enough to be used for exploratory analysis.</p>
    <p>Single-cell RNA sequencing enables the study of time-dependent processes in unprecedented detail. With the help of tools like MERLoT, we can overcome the high noise and non-linearities in the data, reconstruct the cellular lineage trees and follow the change of gene expression over developmental time. Such time course gene expression profiles pave the way for the reconstruction of gene regulatory networks and eventually their quantitative modeling, which will profoundly advance our understanding of developmental processes.</p>
  </sec>
  <sec sec-type="data-availability" id="SEC5">
    <title>DATA AVAILABILITY</title>
    <p>The 10 simulation sets with 100 simulated differentiations each are available at <ext-link ext-link-type="uri" xlink:href="http://wwwuser.gwdg.de/~compbiol/merlot/">http://wwwuser.gwdg.de/∼compbiol/merlot/</ext-link>. The code necessary to run the benchmark on the simulations as well as instructions about how to set up a similar benchmark are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot-scripts">https://github.com/soedinglab/merlot-scripts</ext-link>. Formatted expression data for the three datasets in Figure <xref ref-type="fig" rid="F2">2</xref> are available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/soedinglab/merlot/tree/master/inst/example/">https://github.com/soedinglab/merlot/tree/master/inst/example/</ext-link></p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>gkz706_Supplemental_File</label>
      <media xlink:href="gkz706_supplemental_file.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="SEC6">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkz706#supplementary-data">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC7">
    <title>FUNDING</title>
    <p>R. G. Parra acknowledges EMBO for his Long Term Postdoctoral Fellowship (ALTF 212-2016). N. Papadopoulos and J. Soeding acknowledge the grants SPP1935 and SPP2191 of the Deutsche Forschungsgemeinschaf . B. Treutlein acknowledges her ERC starting grant “ORGANOMICS”. Open Access was funded by the Max Planck Institute for Biophysical Chemistry.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klein</surname><given-names>A.M.</given-names></name>, <name name-style="western"><surname>Mazutis</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Akartuna</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Tallapragada</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Veres</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Peshkin</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Weitz</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Kirschner</surname><given-names>M.W.</given-names></name></person-group><article-title>Droplet barcoding for single-cell transcriptomics applied to embryonic stem cells</article-title>. <source>Cell</source>. <year>2015</year>; <volume>161</volume>:<fpage>1187</fpage>–<lpage>1201</lpage>.<pub-id pub-id-type="pmid">26000487</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Macosko</surname><given-names>E.Z.</given-names></name>, <name name-style="western"><surname>Basu</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Satija</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Nemesh</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Shekhar</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Goldman</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Tirosh</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Bialas</surname><given-names>A.R.</given-names></name>, <name name-style="western"><surname>Kamitaki</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Martersteck</surname><given-names>E.M.</given-names></name><etal>et al</etal>.</person-group><article-title>Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets</article-title>. <source>Cell</source>. <year>2015</year>; <volume>161</volume>:<fpage>1202</fpage>–<lpage>1214</lpage>.<pub-id pub-id-type="pmid">26000488</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Trapnell</surname><given-names>C.</given-names></name></person-group><article-title>Defining cell types and states with single-cell genomics</article-title>. <source>Genome Res.</source><year>2015</year>; <volume>25</volume>:<fpage>1491</fpage>–<lpage>1498</lpage>.<pub-id pub-id-type="pmid">26430159</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cao</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Packer</surname><given-names>J.S.</given-names></name>, <name name-style="western"><surname>Ramani</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Cusanovich</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Huynh</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Daza</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Qiu</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Lee</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Furlan</surname><given-names>S.N.</given-names></name>, <name name-style="western"><surname>Steemers</surname><given-names>F.J.</given-names></name><etal>et al</etal>.</person-group><article-title>Comprehensive single-cell transcriptional profiling of a multicellular organism</article-title>. <source>Science</source>. <year>2017</year>; <volume>357</volume>:<fpage>661</fpage>–<lpage>667</lpage>.<pub-id pub-id-type="pmid">28818938</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Regev</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Teichmann</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Lander</surname><given-names>E.S.</given-names></name>, <name name-style="western"><surname>Amit</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Benoist</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Birney</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Bodenmiller</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Campbell</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Carninci</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Clatworthy</surname><given-names>M.</given-names></name><etal>et al</etal>.</person-group><article-title>The Human Cell Atlas</article-title>. <source>eLife</source>. <year>2017</year>; <volume>6</volume>:<fpage>e2704</fpage>.</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Regev</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Yosef</surname><given-names>N.</given-names></name></person-group><article-title>Revealing the vectors of cellular identity with single-cell genomics</article-title>. <source>Nat. Biotechnol.</source><year>2016</year>; <volume>34</volume>:<fpage>1145</fpage>–<lpage>1160</lpage>.<pub-id pub-id-type="pmid">27824854</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rostom</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Svensson</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Teichmann</surname><given-names>S.A.</given-names></name>, <name name-style="western"><surname>Kar</surname><given-names>G.</given-names></name></person-group><article-title>Computational approaches for interpreting scRNA-seq data</article-title>. <source>FEBS Lett.</source><year>2017</year>; <volume>591</volume>:<fpage>2213</fpage>–<lpage>2225</lpage>.<pub-id pub-id-type="pmid">28524227</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Saelens</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Cannoodt</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Todorov</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Saeys</surname><given-names>Y.</given-names></name></person-group><article-title>A comparison of single-cell trajectory inference methods: towards more accurate and robust tools</article-title>. <source>Nat. Biotechnol.</source><year>2(019</year>; <volume>37</volume>:<fpage>554</fpage>–<lpage>547</lpage>.</mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Coifman</surname><given-names>R.R.</given-names></name>, <name name-style="western"><surname>Lafon</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Lee</surname><given-names>A.B.</given-names></name>, <name name-style="western"><surname>Maggioni</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Nadler</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Warner</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Zucker</surname><given-names>S.W.</given-names></name></person-group><article-title>Geometric diffusions as a tool for harmonic analysis and structure definition of data: Diffusion maps</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source><year>2005</year>; <volume>102</volume>:<fpage>7426</fpage>–<lpage>7431</lpage>.<pub-id pub-id-type="pmid">15899970</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Angerer</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Haghverdi</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Büttner</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Theis</surname><given-names>F.J.</given-names></name>, <name name-style="western"><surname>Marr</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Buettner</surname><given-names>F.</given-names></name></person-group><article-title>destiny: diffusion maps for large-scale single-cell data in R</article-title>. <source>Bioinformatics</source>. <year>2016</year>; <volume>32</volume>:<fpage>1241</fpage>–<lpage>1243</lpage>.<pub-id pub-id-type="pmid">26668002</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Papadopoulos</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Parra</surname><given-names>R.G.</given-names></name>, <name name-style="western"><surname>Soeding</surname><given-names>J.</given-names></name></person-group><article-title>PROSSTT: Probabilistic simulation of single-cell RNA-seq data for complex differentiation processes</article-title>. <source>Bioinformatics</source>. <year>2019</year>; <comment>doi:10.1093/bioinformatics/btz078</comment>.</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zappia</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Phipson</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Oshlack</surname><given-names>A.</given-names></name></person-group><article-title>Splatter: simulation of single-cell RNA sequencing data</article-title>. <source>Genome biology</source>. <year>2017</year>; <volume>18</volume>:<fpage>174</fpage>.<pub-id pub-id-type="pmid">28899397</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cayley</surname><given-names>A.</given-names></name></person-group><article-title>XXVIII. On the theory of the analytical forms called trees</article-title>. <source>The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science</source>. <year>1857</year>; <volume>13</volume>:<fpage>172</fpage>–<lpage>176</lpage>.</mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Saitou</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Nei</surname><given-names>M.</given-names></name></person-group><article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title>. <source>Molecular biology and evolution</source>. <year>1987</year>; <volume>4</volume>:<fpage>406</fpage>–<lpage>425</lpage>.<pub-id pub-id-type="pmid">3447015</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pedregosa</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Varoquaux</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Gramfort</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Michel</surname><given-names>V.</given-names></name>, <name name-style="western"><surname>Thirion</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Grisel</surname><given-names>O.</given-names></name>, <name name-style="western"><surname>Blondel</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Prettenhofer</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Weiss</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Dubourg</surname><given-names>V.</given-names></name><etal>et al</etal>.</person-group><article-title>Scikit-learn: Machine Learning in Python</article-title>. <source>Journal of Machine Learning Research</source>. <year>2011</year>; <volume>12</volume>:<fpage>2825</fpage>–<lpage>2830</lpage>.</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gorban</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Zinovyev</surname><given-names>A.</given-names></name></person-group><article-title>Elastic principal graphs and manifolds and their practical applications</article-title>. <source>Computing</source>. <year>2005</year>; <volume>75</volume>:<fpage>359</fpage>–<lpage>379</lpage>.</mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gorban</surname><given-names>A.N.</given-names></name>, <name name-style="western"><surname>Sumner</surname><given-names>N.R.</given-names></name>, <name name-style="western"><surname>Zinovyev</surname><given-names>A.Y.</given-names></name></person-group><article-title>Topological grammars for data approximation</article-title>. <source>Appl. Math. Lett.</source><year>2007</year>; <volume>20</volume>:<fpage>382</fpage>–<lpage>386</lpage>.</mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Albergante</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Hsu</surname><given-names>J.Y.</given-names></name>, <name name-style="western"><surname>Lareau</surname><given-names>C.A.</given-names></name>, <name name-style="western"><surname>Bosco</surname><given-names>G.L.</given-names></name>, <name name-style="western"><surname>Guan</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Zhou</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Gorban</surname><given-names>A.N.</given-names></name>, <name name-style="western"><surname>Bauer</surname><given-names>D.E.</given-names></name>, <name name-style="western"><surname>Aryee</surname><given-names>M.J.</given-names></name><etal>et al</etal>.</person-group><article-title>Single-cell trajectories reconstruction, exploration and mapping of omics data with STREAM</article-title>. <source>Nat. Commun.</source><year>2019</year>; <volume>10</volume>:<fpage>1903</fpage>.<pub-id pub-id-type="pmid">31015418</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Trapnell</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Cacchiarelli</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Grimsby</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Pokharel</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Li</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Morse</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Lennon</surname><given-names>N.J.</given-names></name>, <name name-style="western"><surname>Livak</surname><given-names>K.J.</given-names></name>, <name name-style="western"><surname>Mikkelsen</surname><given-names>T.S.</given-names></name>, <name name-style="western"><surname>Rinn</surname><given-names>J.L.</given-names></name></person-group><article-title>Pseudo-temporal ordering of individual cells reveals dynamics and regulators of cell fate decisions</article-title>. <source>Nat. Biotechnol.</source><year>2014</year>; <volume>32</volume>:<fpage>381</fpage>.<pub-id pub-id-type="pmid">24658644</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Treutlein</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Lee</surname><given-names>Q.Y.</given-names></name>, <name name-style="western"><surname>Camp</surname><given-names>J.G.</given-names></name>, <name name-style="western"><surname>Mall</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Koh</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Shariati</surname><given-names>S.A.M.</given-names></name>, <name name-style="western"><surname>Sim</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Neff</surname><given-names>N.F.</given-names></name>, <name name-style="western"><surname>Skotheim</surname><given-names>J.M.</given-names></name>, <name name-style="western"><surname>Wernig</surname><given-names>M.</given-names></name><etal>et al</etal>.</person-group><article-title>Dissecting direct reprogramming from fibroblast to neuron using single-cell RNA-seq</article-title>. <source>Nature</source>. <year>2016</year>; <volume>534</volume>:<fpage>391</fpage>–<lpage>395</lpage>.<pub-id pub-id-type="pmid">27281220</pub-id></mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Pons</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Latapy</surname><given-names>M.</given-names></name></person-group><article-title>Computing communities in large networks using random walks</article-title>. <source>International Symposium on Computer and Information Sciences</source>. <year>2005</year>; <publisher-name>Springer</publisher-name><fpage>284</fpage><fpage>293</fpage>.</mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Paul</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Arkin</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Giladi</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Jaitin</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Kenigsberg</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Keren-Shaul</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Winter</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Lara-Astiaso</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Gury</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Weiner</surname><given-names>A.</given-names></name><etal>et al</etal>.</person-group><article-title>Transcriptional heterogeneity and lineage commitment in myeloid progenitors</article-title>. <source>Cell</source>. <year>2015</year>; <volume>163</volume>:<fpage>1663</fpage>–<lpage>1677</lpage>.<pub-id pub-id-type="pmid">26627738</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Guo</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Huss</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Tong</surname><given-names>G.Q.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Sun</surname><given-names>L.L.</given-names></name>, <name name-style="western"><surname>Clarke</surname><given-names>N.D.</given-names></name>, <name name-style="western"><surname>Robson</surname><given-names>P.</given-names></name></person-group><article-title>Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst</article-title>. <source>Dev. Cell</source>. <year>2010</year>; <volume>18</volume>:<fpage>675</fpage>–<lpage>685</lpage>.<pub-id pub-id-type="pmid">20412781</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Velten</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Haas</surname><given-names>S.F.</given-names></name>, <name name-style="western"><surname>Raffel</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Blaszkiewicz</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Islam</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Hennig</surname><given-names>B.P.</given-names></name>, <name name-style="western"><surname>Hirche</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Lutz</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Buss</surname><given-names>E.C.</given-names></name>, <name name-style="western"><surname>Nowak</surname><given-names>D.</given-names></name><etal>et al</etal>.</person-group><article-title>Human haematopoietic stem cell lineage commitment is a continuous process</article-title>. <source>Nat. Cell Biol.</source><year>2017</year>; <volume>19</volume>:<fpage>271</fpage>.<pub-id pub-id-type="pmid">28319093</pub-id></mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dijkstra</surname><given-names>E.W.</given-names></name></person-group><article-title>A note on two problems in connexion with graphs</article-title>. <source>Num. Math.</source><year>1959</year>; <volume>1</volume>:<fpage>269</fpage>–<lpage>271</lpage>.</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Qiu</surname><given-names>X.</given-names></name>, <name name-style="western"><surname>Mao</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Tang</surname><given-names>Y.</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Chawla</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Pliner</surname><given-names>H.A.</given-names></name>, <name name-style="western"><surname>Trapnell</surname><given-names>C.</given-names></name></person-group><article-title>Reversed graph embedding resolves complex single-cell trajectories</article-title>. <source>Nat. Methods</source>. <year>2017</year>; <volume>14</volume>:<fpage>979</fpage>–<lpage>982</lpage>.<pub-id pub-id-type="pmid">28825705</pub-id></mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Welch</surname><given-names>J.D.</given-names></name>, <name name-style="western"><surname>Hartemink</surname><given-names>A.J.</given-names></name>, <name name-style="western"><surname>Prins</surname><given-names>J.F.</given-names></name></person-group><article-title>SLICER: inferring branched, nonlinear cellular trajectories from single cell RNA-seq data</article-title>. <source>Genome Biol.</source><year>2016</year>; <volume>17</volume>:<fpage>106</fpage>.<pub-id pub-id-type="pmid">27215581</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ji</surname><given-names>Z.</given-names></name>, <name name-style="western"><surname>Ji</surname><given-names>H.</given-names></name></person-group><article-title>TSCAN: Pseudo-time reconstruction and evaluation in single-cell RNA-seq analysis</article-title>. <source>Nucleic Acids Res.</source><year>2016</year>; <volume>44</volume>:<fpage>e117</fpage>.<pub-id pub-id-type="pmid">27179027</pub-id></mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Street</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Risso</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Fletcher</surname><given-names>R.B.</given-names></name>, <name name-style="western"><surname>Das</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Ngai</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Yosef</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Purdom</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Dudoit</surname><given-names>S.</given-names></name></person-group><article-title>Slingshot: cell lineage and pseudotime inference for single-cell transcriptomics</article-title>. <source>BMC Genomics</source>. <year>2018</year>; <volume>19</volume>:<fpage>477</fpage>.<pub-id pub-id-type="pmid">29914354</pub-id></mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gerber</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Murawala</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Knapp</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Masselink</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Schuez</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Hermann</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Gac-Santel</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Nowoshilow</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Kageyama</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Khattak</surname><given-names>S.</given-names></name><etal>et al</etal>.</person-group><article-title>Single-cell analysis uncovers convergence of cell identities during axolotl limb regeneration</article-title>. <source>Science</source>. <year>2018</year>; <volume>362</volume>:<fpage>eaaq0681</fpage>.<pub-id pub-id-type="pmid">30262634</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

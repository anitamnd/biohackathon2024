<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Res</journal-id>
    <journal-id journal-id-type="hwp">genome</journal-id>
    <journal-id journal-id-type="pmc">genome</journal-id>
    <journal-id journal-id-type="publisher-id">GENOME</journal-id>
    <journal-title-group>
      <journal-title>Genome Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1088-9051</issn>
    <issn pub-type="epub">1549-5469</issn>
    <publisher>
      <publisher-name>Cold Spring Harbor Laboratory Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6836735</article-id>
    <article-id pub-id-type="pmid">31628256</article-id>
    <article-id pub-id-type="medline">9509184</article-id>
    <article-id pub-id-type="doi">10.1101/gr.234435.118</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PhISCS: a combinatorial approach for subperfect tumor phylogeny reconstruction via integrative use of single-cell and bulk sequencing data</article-title>
      <alt-title alt-title-type="left-running">Malikic et al.</alt-title>
      <alt-title alt-title-type="right-running">PhISCS: subperfect tumor phylogeny inference</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Malikic</surname>
          <given-names>Salem</given-names>
        </name>
        <xref ref-type="aff" rid="af1">1</xref>
        <xref ref-type="author-notes" rid="FN2">11</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mehrabadi</surname>
          <given-names>Farid Rashidi</given-names>
        </name>
        <xref ref-type="aff" rid="af2">2</xref>
        <xref ref-type="aff" rid="af3">3</xref>
        <xref ref-type="author-notes" rid="FN2">11</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ciccolella</surname>
          <given-names>Simone</given-names>
        </name>
        <xref ref-type="aff" rid="af4">4</xref>
        <xref ref-type="aff" rid="af5">5</xref>
        <xref ref-type="author-notes" rid="FN2">11</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rahman</surname>
          <given-names>Md. Khaledur</given-names>
        </name>
        <xref ref-type="aff" rid="af2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ricketts</surname>
          <given-names>Camir</given-names>
        </name>
        <xref ref-type="aff" rid="af5">5</xref>
        <xref ref-type="aff" rid="af6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Haghshenas</surname>
          <given-names>Ehsan</given-names>
        </name>
        <xref ref-type="aff" rid="af1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Seidman</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref ref-type="aff" rid="af6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hach</surname>
          <given-names>Faraz</given-names>
        </name>
        <xref ref-type="aff" rid="af1">1</xref>
        <xref ref-type="aff" rid="af7">7</xref>
        <xref ref-type="aff" rid="af8">8</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hajirasouliha</surname>
          <given-names>Iman</given-names>
        </name>
        <xref ref-type="aff" rid="af5">5</xref>
        <xref ref-type="aff" rid="af9">9</xref>
        <xref ref-type="author-notes" rid="FN1">10</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Sahinalp</surname>
          <given-names>S. Cenk</given-names>
        </name>
        <xref ref-type="aff" rid="af3">3</xref>
        <xref ref-type="author-notes" rid="FN1">10</xref>
      </contrib>
    </contrib-group>
    <aff id="af1"><label>1</label>School of Computing Science, Simon Fraser University, Burnaby, BC V5A 1S6, Canada;</aff>
    <aff id="af2"><label>2</label>Department of Computer Science, Indiana University, Bloomington, Indiana 47408, USA;</aff>
    <aff id="af3"><label>3</label>Cancer Data Science Laboratory, National Cancer Institute, National Institutes of Health, Bethesda, Maryland 20892, USA;</aff>
    <aff id="af4"><label>4</label>Department of Computer Systems and Communication, University of Milano-Bicocca, 20136 Milan, Italy;</aff>
    <aff id="af5"><label>5</label>Institute for Computational Biomedicine, Weill Cornell Medicine, New York, New York 10065, USA;</aff>
    <aff id="af6"><label>6</label>Tri-I Computational Biology and Medicine Graduate Program, Cornell University, New York, New York 10065, USA;</aff>
    <aff id="af7"><label>7</label>Department of Urologic Sciences, University of British Columbia, Vancouver, BC V5Z 1M9, Canada;</aff>
    <aff id="af8"><label>8</label>Vancouver Prostate Centre, Vancouver, BC V6H 3Z6, Canada;</aff>
    <aff id="af9"><label>9</label>Department of Physiology and Biophysics, Englander Institute for Precision Medicine, The Meyer Cancer Center, Weill Cornell Medicine, New York, New York 10065, USA</aff>
    <author-notes>
      <fn id="FN1">
        <label>10</label>
        <p>Co-senior authors</p>
      </fn>
      <fn id="FN2">
        <label>11</label>
        <p>Joint first authors</p>
      </fn>
      <corresp>Corresponding author: <email>cenk.sahinalp@nih.gov</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>11</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <month>11</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="ppub"/>. -->
    <volume>29</volume>
    <issue>11</issue>
    <fpage>1860</fpage>
    <lpage>1877</lpage>
    <history>
      <date date-type="received">
        <day>15</day>
        <month>8</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>11</day>
        <month>9</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/site/misc/terms.xhtml">© 2019 Malikic et al.; Published by Cold Spring Harbor Laboratory Press</ext-link>
      </copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This article, published in <italic>Genome Research</italic>, is available under a Creative Commons License (Attribution 4.0 International), as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="1860.pdf"/>
    <abstract>
      <p>Available computational methods for tumor phylogeny inference via single-cell sequencing (SCS) data typically aim to identify the most likely <italic>perfect phylogeny tree</italic> satisfying the <italic>infinite sites assumption</italic> (ISA). However, the limitations of SCS technologies including frequent allele dropout and variable sequence coverage may prohibit a perfect phylogeny. In addition, ISA violations are commonly observed in tumor phylogenies due to the loss of heterozygosity, deletions, and convergent evolution. In order to address such limitations, we introduce the <italic>optimal subperfect phylogeny problem</italic> which asks to integrate SCS data with matching bulk sequencing data by minimizing a linear combination of potential false negatives (due to allele dropout or variance in sequence coverage), false positives (due to read errors) among mutation calls, and the number of mutations that violate ISA (real or because of incorrect copy number estimation). We then describe a combinatorial formulation to solve this problem which ensures that several lineage constraints imposed by the use of variant allele frequencies (VAFs, derived from bulk sequence data) are satisfied. We express our formulation both in the form of an integer linear program (ILP) and—as a first in tumor phylogeny reconstruction—a Boolean constraint satisfaction problem (CSP) and solve them by leveraging state-of-the-art ILP/CSP solvers. The resulting method, which we name PhISCS, is the first to integrate SCS and bulk sequencing data while accounting for ISA violating mutations. In contrast to the alternative methods, typically based on probabilistic approaches, PhISCS provides a guarantee of optimality in reported solutions. Using simulated and real data sets, we demonstrate that PhISCS is more general and accurate than all available approaches.</p>
    </abstract>
    <funding-group>
      <award-group id="funding-1">
        <funding-source>Indiana University Grand Challenges Program Precision Health Initiative</funding-source>
      </award-group>
      <award-group id="funding-2">
        <funding-source>NSERC Discovery Frontiers Grant</funding-source>
      </award-group>
      <award-group id="funding-3">
        <funding-source>Vanier Canada Graduate Scholarship</funding-source>
      </award-group>
      <award-group id="funding-4">
        <funding-source>Mobility Exchange Fellowship</funding-source>
      </award-group>
      <award-group id="funding-5">
        <funding-source>
          <institution-wrap>
            <institution>NIH </institution>
            <institution-id institution-id-type="open-funder-registry">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>1T32GM083937</award-id>
      </award-group>
      <award-group id="funding-6">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation </institution>
            <institution-id institution-id-type="open-funder-registry">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group id="funding-7">
        <funding-source>NSF</funding-source>
        <award-id>IIS-1840275</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="18"/>
    </counts>
  </article-meta>
</front>
<body>
  <p>The clonal theory of cancer evolution suggests that cancer is an evolutionary disease where multiple distinct cellular populations (i.e., subclones) emerge through successive rounds of mutation and selection. At the time of clinical diagnosis, most tumors are heterogeneous, consisting of multiple subclones harboring different sets of somatic mutations. Increasing evidence suggests that this phenomenon, better known as “intra-tumor heterogeneity” (ITH), has a profound impact on treatment outcomes, and that the existence of treatment-resistant subclones is one of the main causes of treatment failures (<xref rid="GR234435MALC1" ref-type="bibr">Alizadeh et al. 2015</xref>). Deciphering intra-tumor heterogeneity and tumor evolutionary history thus represent some of the key challenges in designing effective combinatorial therapies and better understanding of dynamics of cancer initiation and progression.</p>
  <p>Most of the existing approaches for studying ITH are based on analyzing data from high-throughput bulk sequencing experiments where only an average signal over a large number of cells is obtained. In the past few years, numerous computational methods for analyzing such signals with the aim of inferring tumor subclonal composition and evolutionary history have been developed (<xref rid="GR234435MALC36" ref-type="bibr">Strino et al. 2013</xref>; <xref rid="GR234435MALC17" ref-type="bibr">Hajirasouliha et al. 2014</xref>; <xref rid="GR234435MALC20" ref-type="bibr">Jiao et al. 2014</xref>; <xref rid="GR234435MALC9" ref-type="bibr">Deshwar et al. 2015</xref>; <xref rid="GR234435MALC11" ref-type="bibr">El-Kebir et al. 2015</xref>, <xref rid="GR234435MALC12" ref-type="bibr">2016</xref>; <xref rid="GR234435MALC25" ref-type="bibr">Malikic et al. 2015</xref>; <xref rid="GR234435MALC30" ref-type="bibr">Popic et al. 2015</xref>; <xref rid="GR234435MALC37" ref-type="bibr">Yuan et al. 2015</xref>; <xref rid="GR234435MALC27" ref-type="bibr">Marass et al. 2016</xref>; <xref rid="GR234435MALC10" ref-type="bibr">Donmez et al. 2017</xref>; <xref rid="GR234435MALC35" ref-type="bibr">Satas and Raphael 2017</xref>). Even though these methods employ a variety of computational approaches, each with a particular strength, all have theoretical limitations, mainly due to the limited resolution offered by bulk sequencing data, admitting multiple equivalent solutions (e.g., a linear topology for any possible instance of the problem).</p>
  <p>While it is still expensive and experimentally challenging to robustly perform single-cell library preparation, recent technological advancements in single-cell sequencing (SCS) potentially provide higher resolution data for studying ITH. Single-cell data sets are, however, characterized by high levels of sequencing noise that includes both false positive (e.g., due to the read errors) and false negative (e.g., due to the allele dropout or variance in sequence coverage) mutation calls, as well as <italic>missing</italic> values for mutations from sites affected by DNA amplification failure. This necessitates the development of sophisticated computational methods that are sensitive to the noise characteristics of SCS data, while incorporating the assumptions of the clonal theory of cancer evolution to tumor evolution modeling.</p>
  <p>We note that a final additional source of noise is <italic>doublets</italic>, two (or rarely more) cells with heterogeneous mutation profiles treated as a single cell. There already exist computational tools for identifying and decoupling doublets, in particular Single Cell Genotyper (<xref rid="GR234435MALC33" ref-type="bibr">Roth et al. 2016</xref>), which we employ in this study as a preprocessing step for the purpose of reducing their impact in our analysis. Furthermore, a recently developed tool, SiCloneFit (<xref rid="GR234435MALC39" ref-type="bibr">Zafar et al. 2019</xref>) offers the ability to identify doublets while resolving ITH through a Gibbs sampling approach.</p>
  <p>A number of available methods for studying ITH via the use of SCS data are based on probabilistic approaches with the goal of inferring the <italic>most-likely perfect-phylogeny</italic> for a tumor. SCITE (<xref rid="GR234435MALC19" ref-type="bibr">Jahn et al. 2016</xref>), for example, is a Markov chain Monte Carlo (MCMC) search method that aims to infer the maximum-likelihood (ML) mutational history from a potentially incomplete and noisy matrix containing genotypes of single cells. OncoNEM (<xref rid="GR234435MALC32" ref-type="bibr">Ross and Markowetz 2016</xref>) is a maximum-likelihood-based search approach to identify homogeneous cellular subpopulations and infer both their genotypes and the tree describing their evolutionary history. For achieving their respective goals, SCITE and OncoNEM both rely on the <italic>infinite sites assumption</italic> (ISA), that is, that each genomic position is affected by at most one mutation hit in the entire tumor phylogeny.</p>
  <p>A more recent maximum-likelihood-based approach, SiFit (<xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. 2017</xref>), aims to extend the above by employing a model of evolution that accounts for deletions, loss of heterozygosity (LOH), and recurrent point mutations on genomic sites. However, none of the above approaches provide means to integratively use SCS with bulk sequencing data, which, in principle, may provide additional guidance to the tumor phylogeny reconstruction process. Another recent tool, ddClone (<xref rid="GR234435MALC34" ref-type="bibr">Salehi et al. 2017</xref>), is the first to combine the strengths of bulk and SCS data in a joint statistical inference model for the most likely tumor subclonal composition. However, ddClone does not aim to build a tumor phylogeny and is not suitable to study cancer evolution. Finally, B-SCITE (<xref rid="GR234435MALC26" ref-type="bibr">Malikic et al. 2019</xref>) is a newly developed method with the aim of integrating SCITE with CITUP (<xref rid="GR234435MALC25" ref-type="bibr">Malikic et al. 2015</xref>) so as to make joint use of SCS and bulk sequencing data. B-SCITE is an MCMC-based tool and, as per SCITE, it does not account for ISA violations.</p>
  <p>Even though the above methods for SCS data analysis are probabilistic, many of the related methods for bulk sequencing data analysis are combinatorial in nature (<xref rid="GR234435MALC36" ref-type="bibr">Strino et al. 2013</xref>; <xref rid="GR234435MALC17" ref-type="bibr">Hajirasouliha et al. 2014</xref>; <xref rid="GR234435MALC11" ref-type="bibr">El-Kebir et al. 2015</xref>, <xref rid="GR234435MALC12" ref-type="bibr">2016</xref>; <xref rid="GR234435MALC25" ref-type="bibr">Malikic et al. 2015</xref>; <xref rid="GR234435MALC30" ref-type="bibr">Popic et al. 2015</xref>). Combinatorial, in particular integer linear programming (ILP), formulations for phylogeny inference have been available in the literature for a while. One example is the <italic>haplotype inference problem</italic> (HIP) (<xref rid="GR234435MALC16" ref-type="bibr">Gusfield et al. 2007</xref>), where given a binary incomplete matrix <italic>M</italic> of <italic>n</italic> rows (corresponding to <italic>species</italic>) and <italic>m</italic> columns (corresponding to <italic>sites</italic>), the goal is to decompose each row to two binary vectors (haplotypes) so that the haplotypes can fit in a <italic>Perfect Phylogeny</italic>, that is, a phylogeny satisfying ISA. HIP can be formulated and efficiently solved as an instance of ILP. Later, a similar formulation was proposed in <xref rid="GR234435MALC15" ref-type="bibr">Gusfield (2015)</xref> to solve the <italic>Persistent Phylogeny Problem</italic> (<xref rid="GR234435MALC14" ref-type="bibr">Goldberg et al. 1996</xref>; <xref rid="GR234435MALC3" ref-type="bibr">Bonizzoni et al. 2012</xref>). A persistent phylogeny is one in which each mutation is allowed to be “lost” at most once. Recently, an extension of the formulation from <xref rid="GR234435MALC15" ref-type="bibr">Gusfield (2015)</xref> was proposed in <xref rid="GR234435MALC4" ref-type="bibr">Bonizzoni et al. (2017)</xref>, where more general phylogeny models are used and the goal is to infer entire cancer phylogenies by the use of bulk sequencing data.</p>
  <p>Finally, the notion of <italic>flip distance</italic> was introduced in <xref rid="GR234435MALC31" ref-type="bibr">Ragan (1992)</xref> and later explored in <xref rid="GR234435MALC5" ref-type="bibr">Chimani et al. (2010)</xref> to compare a matrix <italic>M</italic> (see above) that does not admit a perfect phylogeny with <italic>M</italic>′, a matrix admitting a perfect phylogeny that differs from <italic>M</italic> as little as possible. As will be seen, our method builds on this notion of distance.</p>
  <p>ILP formulations for HIP and related problems are routinely solved through commercial tools such as Gurobi or IBM CPLEX, which have been developed over many years and provide reliable and fast solutions for relatively small-sized optimization problems. These solvers aim to optimize a typically linear objective while satisfying a number of linear constraints. As such, ILP is related to another fundamental problem, the <italic>Boolean constraint satisfaction problem</italic> (CSP) that can be used as an alternative for modeling many ILP problems encountered in practice.</p>
  <p>Perhaps the best-known variant of CSP is the satisfiability problem (SAT) which asks to find a Boolean assignment to a set of input variables to satisfy (the conjunction of) a number of Boolean constraints. Another variant is Max-SAT, which asks to find a Boolean assignment to variables so that not necessarily all but the maximum number of input constraints are satisfied. Finally, the weighted version of Max-SAT, which can be abbreviated as wMax-SAT, asks for the assignment that maximizes the sum of (user-defined) weights of the constraints satisfied. The generality of wMax-SAT has prompted the development of many tools to solve them with the goal of obtaining solutions to practical instances of NP-complete problems. These tools compete in the annual SAT conference on several benchmarking data sets generated by a wide variety of applications (see <uri xlink:href="http://www.satcompetition.org">http://www.satcompetition.org</uri>). Recently developed wMax-SAT solvers such as MAXINO (<xref rid="GR234435MALC2" ref-type="bibr">Alviano et al. 2015</xref>) and MaxHS (<xref rid="GR234435MALC6" ref-type="bibr">Davies and Bacchus 2011</xref>, <xref rid="GR234435MALC7" ref-type="bibr">2013a</xref>,<xref rid="GR234435MALC8" ref-type="bibr">b</xref>) are very fast; in addition, MaxHS is open source. A number of studies had already demonstrated the utility of CSP solvers for the haplotype inference problem and its variants - before the advent of high-throughput sequencing (<xref rid="GR234435MALC24" ref-type="bibr">Lynce and Marques-Silva 2006</xref>; <xref rid="GR234435MALC29" ref-type="bibr">Neigenfind et al. 2008</xref>; <xref rid="GR234435MALC18" ref-type="bibr">He et al. 2010</xref>). Nevertheless, to the best of our knowledge, no study has explored the use of CSP in the context of intra-tumor heterogeneity or tumor phylogeny modeling.</p>
  <sec sec-type="results" id="s1">
    <title>Results</title>
    <p>In this paper, we introduce three combinatorial formulations for inferring tumor phylogenies via an integrative use of single-cell and bulk sequencing data. (1) Our first formulation generalizes (<xref rid="GR234435MALC5" ref-type="bibr">Chimani et al. 2010</xref>) by asking to minimize a weighted sum of potential false negative (which are common) and false positive (which are rare) mutation calls in genotypes of single cells, whose correction will result in a perfect phylogeny. (2) The goal of our more general formulation is to compute a <italic>subperfect</italic> phylogeny, which not only requires such mutation calls to be corrected but also needs the elimination of (at most a user defined number of) mutations that violate ISA (e.g., due to LOH). More specifically, this formulation asks to minimize a weighted sum of mutations to be corrected, given an upper bound on the number of mutations to be eliminated (due to ISA violations) in order to achieve a perfect phylogeny. Note that this problem differs from that of the “maximum character compatibility” problem, which aims to identify the maximum number of mutations for which a perfect phylogeny is possible. (3) Our most general formulation has additional constraints imposed by the use of variant allele frequencies (VAFs) of single nucleotide variants (from regions not affected by copy number aberrations). VAFs of such mutations can be estimated from bulk sequencing data (as a proxy to the cellular prevalence of a given mutation). These <italic>lineage constraints</italic> impose ancestor-descendant dependencies among mutation pairs (e.g., the prevalence of an ancestral mutation cannot be lower than that of a descendant) or triplets (e.g., the prevalence of an ancestral mutation cannot be lower than the sum of two descendant siblings) and improve inference accuracy. Our formulation allows for one or more samples from the same tumor to be bulk-sequenced independently; each such sample introduces additional lineage constraints that need to be satisfied, within a user-defined error tolerance. For this formulation, eliminating “potential ISA violating mutations” is especially important since the cellular prevalence values could be incorrectly estimated. In fact even VAFs could be incorrectly estimated due to undetected copy number alterations. For example, a copy number gain impacting the allele including the mutation would incorrectly increase its VAF and that impacting the other allele would have the opposite effect. The incorrect VAF estimates may contradict the SCS data, leading to incorrect tumor phylogenies. We describe computational solutions to each of the three formulations to address problems of varying complexity and data availability (i.e., some data sets have no ISA violations and some do not come with matching bulk sequencing data).</p>
    <p>We name our general formulation and the resulting program PhISCS (Ph<italic>ylogeny of tumors using</italic> I<italic>ntegrated bulk and</italic> S<italic>ingle</italic>-C<italic>ell</italic> S<italic>equencing data</italic>), and offer two options: (1) PhISCS-I expresses our formulation in the form of an ILP and efficiently solves it by the use of the Gurobi Optimizer; and (2) PhISCS-B expresses our formulation in the form of a Boolean CSP and solves it by the use of open source solvers for wMax-SAT such as MaxHS, often more efficiently than PhISCS-I.</p>
    <p>Many of the available tools for studying intra-tumor heterogeneity formulate the problem as an ILP or quadratic integer programming (QIP) and solve it via commercial tools such as Gurobi or CPLEX. Our CSP formulation (specifically in wMax-SAT) is the first to express a tumor phylogeny reconstruction problem combinatorially but in a form other than ILP/QIP. Additionally, unlike most of the available alternatives, PhISCS has the ability to integrate single-cell and bulk sequencing data. Furthermore, recent studies suggest that ISA, that forms the basis for most of the above tools, could be violated in tumor phylogenies (<xref rid="GR234435MALC22" ref-type="bibr">Kuipers et al. 2017</xref>; <xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. 2017</xref>), making it impossible to establish a perfect phylogeny. PhISCS addresses this issue by eliminating (a small number of) mutations that violate ISA or have incorrect VAF estimates, with a cost reflected in the objective, and solves the tumor phylogeny reconstruction problem for both simulated and real data more efficiently and more accurately than the available alternatives, including B-SCITE. (In order to simplify presentation of the model and results, we treat losses of reference allele and copy number gains [of any of the two alleles] as a type of ISA violation.)</p>
    <p>Our final contribution is on assessing the (dis)similarity between two tumor phylogenies, typically between <italic>G</italic>, the ground truth tree, and <italic>T</italic>, the tree inferred by any method. Commonly used measures of similarity between tumor phylogenies such as <italic>lineage consistency</italic> and <italic>nonlineage consistency</italic> (used by <xref rid="GR234435MALC25" ref-type="bibr">Malikic et al. 2015</xref> and others), are defined based on the proportion of mutation pairs with the same lineage relationship in the two trees and fail to capture fundamental topological differences between simulated ground truth and inferred trees, especially of different levels of <italic>granularity</italic> (<xref rid="GR234435MALC21" ref-type="bibr">Karpov et al. 2019</xref>). Clustering accuracy used by AncesTree (<xref rid="GR234435MALC11" ref-type="bibr">El-Kebir et al. 2015</xref>) and coclustering accuracy used by B-SCITE (<xref rid="GR234435MALC26" ref-type="bibr">Malikic et al. 2019</xref>) suffer from the same problem as well (<xref rid="GR234435MALC21" ref-type="bibr">Karpov et al. 2019</xref>).</p>
    <p>An alternative to the above measures used in the phylogenetics literature is the Robinson-Foulds (RF) distance, which can be thought as the number of single edge cut partitionings of one tree that could not be obtained (by a single edge cut) in the other. However, RF distance cannot be robustly applied to tumor phylogeny comparison due to the high false negative rates observed in single-cell sequencing. (The relocation of only one single-cell as a result of the high false negative rate may result in very high RF distance.) As a result, RF distance is not commonly used in tumor evolution studies (with the exception of <xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. 2017</xref>); nevertheless, we demonstrate that, even under the RF measure, PhISCS exhibit superior performance to the alternatives.</p>
    <p>In order to overcome the limitations of all above measures, it is appealing to use the standard tree edit distance (TED) (<xref rid="GR234435MALC41" ref-type="bibr">Zhang et al. 1992</xref>) and its derivatives. Even though TED is NP-hard to compute for unordered trees, there are some (worst-case exponential-time) algorithms that work well in practice for reasonably small trees. However, TED is defined only for trees where each node has a single label. Here, we show how to generalize TED for tumor phylogenies where each node may have more than one label (mutation) but each label is unique to a specific node.</p>
    <p>As will be shown, the resulting <italic>tumor phylogeny tree edit distance</italic> measure (TPTED) captures topological (dis)similarities between tumor phylogenies. Additionally, the recently introduced <italic>multilabeled tree dissimilarity</italic> measure, MLTD, is less general than TPTED but has the advantage of being polynomial-time computable (<xref rid="GR234435MALC21" ref-type="bibr">Karpov et al. 2019)</xref>. Furthermore, it can still capture the differences between tumor phylogenies of different granularities accurately in all our simulations. We also consider its dual, <italic>multilabeled tree similarity measure</italic>, MLTSM, to compare tumor phylogenies.</p>
    <p>In what follows, we first demonstrate the comparative performance of PhISCS against available tools on simulated data under various parameter settings. Then, we present an application of PhISCS on two real SCS data sets.</p>
    <sec id="s1a">
      <title>Results on simulated data</title>
      <p>In order to assess PhISCS against alternative methods, we first benchmarked it on simulated data by using three distinct measures of accuracy. As will be seen, PhISCS outperforms all available alternatives on simulated data with respect to all measures of accuracy.</p>
      <p>Below, we first provide a running time analysis for PhISCS, primarily for the purpose of identifying its fastest variant. Then, we briefly describe the measures we used to assess PhISCS results in comparison to alternative methods. (A detailed description of these measures as well as how we generate our simulated data can be found in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>.) We finally demonstrate how well PhISCS performs against the alternatives based on these measures using various simulated data.</p>
      <sec id="s1a1">
        <title>Comparative running time analysis of PhISCS</title>
        <p>We start with a running time comparison between PhISCS-B and PhISCS-I. There are a number of available constraint satisfaction software tools that could be used for PhISCS-B. In order to identify the best performing CSP solver, we evaluated the top-performing tools from the 2017 Max-SAT competition (<uri xlink:href="http://mse17.cs.helsinki.fi/index.html">http://mse17.cs.helsinki.fi/index.html</uri>) on simulated data for the limited version of the problem where no ISA violations are allowed and no bulk sequencing data used. The competition has both unweighted and weighted tracks. The three top-performing Max-SAT solvers in the weighted competition were MaxHS, QMaxSAT, and MAXINO. In addition, two other available tools, CPLEX/ILOG by IBM Research and Z3 by Microsoft Research have been benchmarked by the competition organizers. Among these tools, CPLEX/ILOG consistently performed the worst in Max-SAT; this was our experience as well. Additionally CPLEX/ILOG is commercial; as a result, we do not present results obtained by using this tool. A comparison of the running times of PhISCS-B implementations using Z3, MaxHS, and MAXINO Max-SAT solvers are provided in <xref rid="GR234435MALTB1" ref-type="table">Table 1</xref>. This table also includes the results by the top-performing ILP solver, that is, Gurobi, for PhISCS-I.</p>
        <table-wrap id="GR234435MALTB1" orientation="portrait" position="float">
          <label>Table 1.</label>
          <caption>
            <p>Comparison of running times of PhISCS-B implementations by the use of top-performing CSP solvers from the Max-SAT competition</p>
          </caption>
          <graphic xlink:href="1860tb01"/>
        </table-wrap>
        <p>As demonstrated in <xref rid="GR234435MALTB1" ref-type="table">Table 1</xref>, PhISCS-B outperforms PhISCS-I with respect to running time in all cases. Among the Max-SAT solvers we tested, MAXINO performed the best, typically terminating in a few seconds. The only exceptions are instances with four subclones and higher false negative error rates. However, even in these computationally difficult cases, MAXINO terminates (within a given time limit) on more instances than the other tools (with one exception), which in part explains its higher average running time compared to the other tools (as the running time average was taken over terminated instances). While the average running time of Z3 and MaxHS is higher in comparison to MAXINO, they still perform significantly better than the Gurobi implementation of PhISCS-I. Overall, this demonstrates that PhISCS-B provides a viable alternative to PhISCS-I as well as other existing tumor phylogeny inference approaches that are based on ILP solvers, not only because it is faster but also because it is based on open source Max-SAT solvers rather than commercial ILP solvers.</p>
      </sec>
      <sec id="s1a2">
        <title>Measuring accuracy in tree inference</title>
        <p>In order to assess the (dis)similarity between a simulated ground truth tree, <italic>G</italic>, and the tree inferred by any one of the methods, <italic>T</italic>, we employ three measures, each with distinct properties. Perhaps the natural way to compare tumor phylogenies is through the use of “generalized” tree edit distance. Given two rooted, unordered, and node-labeled trees, TED is defined as the minimum number of <italic>edit operations</italic> (insertion, deletion, and substitution of nodes, and thus their <italic>labels</italic>) to transform one tree to the other (<xref rid="GR234435MALC41" ref-type="bibr">Zhang et al. 1992</xref>; <xref rid="GR234435MALC40" ref-type="bibr">Zhang 1993</xref>). Although TED is a natural measure to assess the similarity between two tumor phylogenies, it is NP-hard to compute. Furthermore, it is defined for trees where each node has a single label. Below we show how to extend the notion of TED in two distinct ways for measuring tumor phylogeny (dis)similarity.</p>
        <sec id="s1a2a">
          <title>Multilabeled tree similarity measure</title>
          <p>In order to address the intractability of TED, a new MLTD measure modifies TED for <italic>multilabeled trees</italic>, where each node may have more than one label but each label is unique to a particular node, as per the tumor phylogenies satisfying ISA (<xref rid="GR234435MALC21" ref-type="bibr">Karpov et al. 2019</xref>). Specifically, MLTD is defined as the minimum number of <italic>label</italic> (i.e., mutation) deletions, in addition to an arbitrary number of empty leaf deletions and vertex expansions, applied in any order to transform each of the two trees to reach a maximum size common tree. MLTD is computable in polynomial time and admits efficient practical implementations. In this paper, we use its “dual,” the multilabeled tree similarity measure, which is defined as the size of the maximum common tree of the two tumor phylogenies. To facilitate interpretation of the results, each of the values of MLTSM shown in the figures is normalized by dividing it by the larger number of mutations present in the two trees compared.</p>
        </sec>
        <sec id="s1a2b">
          <title>Tumor phylogeny tree edit distance</title>
          <p>Even though TED is NP-hard to compute, there are some algorithms (with worst case exponential running time) with good performance on small trees encountered in practice, for example, in RNA-structure comparison (<xref rid="GR234435MALC28" ref-type="bibr">Mori et al. 2012</xref>). These algorithms can be used to compare PhISCS results with the simulated ground truth trees since PhISCS with (bulk sequencing data) produces trees with a single label per node. Note that there are a number of methods that can produce phylogenies with more than one label per node; as a result, it is not always possible to use TED for tumor phylogeny comparison. Thus, we extended TED to a meta-tree edit distance measure that we call tumor phylogeny tree edit distance (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link> for a description).</p>
          <p>TED/TPTED differs from MLTD in the following key issue: Given two tumor phylogenies <italic>T</italic> and <italic>G</italic>, MLTD corresponds to the minimum number of label deletions (and implied node contractions) in <italic>T</italic>,<italic>G</italic>, so that what remains from them are identical trees. TED/TPTED, on the other hand, is the minimum number of <italic>leaf</italic> or <italic>internal node</italic> label deletions to achieve the same. Naturally <inline-formula><mml:math id="il1"><mml:mrow><mml:mi mathvariant="normal">TED</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:mi mathvariant="normal">TPTED</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mrow><mml:mi mathvariant="normal">MLTD</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>. Any permutations of edit operations to “convert” <italic>T</italic> to <italic>G</italic> within the realm of MLTD(<italic>T</italic>,<italic>G</italic>) are valid for <inline-formula><mml:math id="il2"><mml:mrow><mml:mi mathvariant="normal">TED</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">TPTED</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, but some permutations of edit operations within the realm of TED<inline-formula><mml:math id="il3"><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">TPTED</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> would not be valid for MLTD(<italic>T</italic>,<italic>G</italic>).</p>
        </sec>
        <sec id="s1a2c">
          <title>Robinson-Foulds distance</title>
          <p>One of the methods that we compare PhISCS against is SiFit, which reports cell lineage trees. In order to compare the two methods, we use the RF distance used by the original SiFit publication by <xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. (2017)</xref>.</p>
        </sec>
      </sec>
      <sec id="s1a3">
        <title>Comparing the accuracy of PhISCS and alternative methods</title>
        <p>We compared PhISCS against three published methods for single-cell data analysis, namely SiFit, SCITE, and B-SCITE. We were not able to compare PhISCS against OncoNEM since on most input matrices it terminated with an error. Furthermore, no comparison with ddClone was made since it does not infer tumor phylogenies.</p>
        <p>Note that PhISCS-B and PhISCS-I produce highly similar results with the same value of the objective in all cases and slight differences in the resulting genotype corrected matrices <italic>Y</italic>. These slight differences are a consequence of the existence of multiple optimal solutions in some of the cases. All results presented in this section are obtained by taking the average over 10 simulations we generated for each combination of parameters. In all simulations, false positive and missing entries rates were set to 0.0001 and 0.05, respectively. In <xref ref-type="fig" rid="GR234435MALF1">Figures 1</xref>–<xref ref-type="fig" rid="GR234435MALF4">4</xref> and <xref ref-type="fig" rid="GR234435MALF6">6</xref>, the minimum subclonal cellular prevalence was set to 5%. For each of the figures, values of other parameters are specified in the caption. We use a similar approach for generating simulated data as in <xref rid="GR234435MALC26" ref-type="bibr">Malikic et al. (2019)</xref> (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link> for more details).</p>
        <fig id="GR234435MALF1" orientation="portrait" position="float">
          <label>Figure 1.</label>
          <caption>
            <p>Comparison of PhISCS with SiFit based on the (normalized) Robinson-Foulds distance. (<italic>A</italic>) Results for the case where ISA violations are allowed in PhISCS (SiFit, by default accounts for possible ISA violations), but only SCS data is used as the input. (<italic>B</italic>) Results for the case where ISA violations are allowed in PhISCS and both single-cell and bulk data (with coverage 10,000×) used as its input (SiFit does not support the use of bulk data). In all simulations, 100 single cells were sampled from 10 subclones harboring a total of 40 mutations. Only one bulk sample was used in <italic>B</italic>, potentially limiting the relative advantage of PhISCS by its use of bulk data. Nevertheless, the normalized RF distance between PhISCS inferred tree and the ground truth is reduced by the use of bulk data in all settings. (Note that “ISA” on the <italic>x</italic>-axes denotes the number of simulated ISA violating mutations.)</p>
          </caption>
          <graphic xlink:href="1860f01"/>
        </fig>
        <fig id="GR234435MALF2" orientation="portrait" position="float">
          <label>Figure 2.</label>
          <caption>
            <p>Comparison of PhISCS with SCITE based on normalized MLTSM. (<italic>A</italic>) Normalized MLTSM values when no ISA violations are allowed and no bulk data used in PhISCS. (<italic>B</italic>) Normalized MLTSM values when ISA violations are allowed in PhISCS but bulk data is not part of the input. (<italic>C</italic>) Normalized MLTSM values when PhISCS employs both ISA violations and VAFs derived from the bulk data. In each case, 100 single cells were sampled and the total number of simulated mutations was set to 40. In <italic>C</italic>, one bulk sample was used and coverage of bulk data was set to 10,000×. SC and ISA, respectively, denote the number of subclones and the number of simulated mutations for which ISA is violated. These plots illustrate that PhISCS has comparable performance to SCITE in cases where only SCS data is used; however, the additional use of bulk data substantially improves the performance of PhISCS over SCITE.</p>
          </caption>
          <graphic xlink:href="1860f02"/>
        </fig>
        <fig id="GR234435MALF3" orientation="portrait" position="float">
          <label>Figure 3.</label>
          <caption>
            <p>Comparison of PhISCS with SCITE based on TPTED dissimilarity measure. (<italic>A</italic>) TPTED values for SCS data when no ISA violations are allowed. (<italic>B</italic>) TPTED values when ISA violations are allowed in PhISCS. (<italic>C</italic>) TPTED values when ISA violations are allowed in PhISCS and both single-cell and bulk data are used as the input. In each case, 100 single cells were sampled and the total number of simulated mutations set to 40. In <italic>C</italic>, one bulk sample was used and coverage of bulk data was set to 10,000×. SC and ISA, respectively, denote the number of subclones and the number of simulated mutations for which ISA is violated. As our results illustrate, PhISCS has a comparable performance to SCITE in the cases when only SCS data is available; however, the addition of bulk sequencing data improves the performance of PhISCS substantially.</p>
          </caption>
          <graphic xlink:href="1860f03"/>
        </fig>
        <fig id="GR234435MALF4" orientation="portrait" position="float">
          <label>Figure 4.</label>
          <caption>
            <p>Comparison of PhISCS with SCITE on simulated data with multiple bulk samples and larger number of subclones and mutations. In each case, 10 distinct trees of tumor evolution were generated with 15 subclones and 100 mutations (SNVs). The number of cells was set to 100, while the depth of coverage for bulk data was set to 5000×. <italic>A</italic> compares the two tools with respect to the MLTD dissimilarity measure, while <italic>B</italic> compares them with respect to its dual MLTSM similarity measure (normalized values of MLTSM are shown in the figure). On the <italic>x</italic>-axes, h, fn, and ISA, respectively, denote the number of bulk samples, false negative rate of single-cell data, and the number of simulated mutations for which ISA is violated.</p>
          </caption>
          <graphic xlink:href="1860f04"/>
        </fig>
        <p>We first compared PhISCS against SiFit (<xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. 2017</xref>). Note that as SiFit reports cell lineage trees, <xref rid="GR234435MALC38" ref-type="bibr">Zafar et al. (2017)</xref> used a normalized version of the RF distance as a measure of its accuracy; this was also the measure we used in our comparisons. For enabling this comparison, prior to computing the normalized RF distance, we convert the ground truth tree and tree inferred by PhISCS to cell lineage trees. In doing this conversion, we use the strategy used in <xref rid="GR234435MALC19" ref-type="bibr">Jahn et al. (2016)</xref>. We present our comparison results between the two methods in <xref ref-type="fig" rid="GR234435MALF1">Figure 1</xref> which demonstrates that PhISCS outperforms SiFit across all of the simulation settings. These results also indicate that the addition of VAF constraints, derived even from a single bulk sample, can improve tree reconstruction accuracy. Note that the RF distance is not a good measure for comparing tumor phylogenies derived from single-cell genomic sequencing, which suffer from high sequencing noise: Given a ground truth tree with two distinct clones with many cells, the misplacement of only one single-cell in the inferred tree due to noise can result in a very high RF distance.</p>
        <p>Next, we present the results of PhISCS with respect to the general tree (dis)similarity measures. <xref ref-type="fig" rid="GR234435MALF2">Figure 2</xref> demonstrates the performance of PhISCS based on MLTSM in comparison to SCITE. In particular, <xref ref-type="fig" rid="GR234435MALF2">Figure 2</xref>A depicts the results of PhISCS on single-cell data under an infinite sites model. We observe that PhISCS and SCITE have comparable performance in this case. Then, in <xref ref-type="fig" rid="GR234435MALF2">Figure 2</xref>B, we focus on the case with ISA violations allowed in PhISCS but without the use of bulk sequencing data. We observe that the results of PhISCS improve in comparison to the previous case, and overall, it has a slightly better performance compared to SCITE. Finally, when both single-cell and bulk data are available, PhISCS improves its accuracy substantially, as can be seen in <xref ref-type="fig" rid="GR234435MALF2">Figure 2</xref>C, and outperforms SCITE.</p>
        <p>Although our MLTD and its dual MLTSM are quickly computed, they may not capture all aspects of topological differences between tumor phylogenies. In <xref ref-type="fig" rid="GR234435MALF3">Figure 3</xref>, we present comparative performance results of PhISCS with respect to the TED/TPTED measure, which is hard to compute but is more general. In particular, <xref ref-type="fig" rid="GR234435MALF3">Figure 3</xref>A presents the results for the case where no bulk sequencing data is available and no ISA violations are allowed when running PhISCS. Results for the case where the same set of data is used as the input, but allowing ISA violations, are provided in <xref ref-type="fig" rid="GR234435MALF3">Figure 3</xref>B. <xref ref-type="fig" rid="GR234435MALF3">Figure 3</xref>C presents the results for the case of integrative use of single-cell and bulk data in PhISCS, while allowing the existence of mutations for which ISA is violated. As can be observed, PhISCS and SCITE have comparable performance for the first case (we suspect that most of the differences are due to MCMC not converging to an optimal solution in SCITE); however, PhISCS significantly benefits from the use of bulk data, outperforming SCITE in all simulations.</p>
        <p>We also compared the performance of PhISCS with SCITE when multiple bulk sequencing samples are available, through the use of both MLTD and its dual MLTSM measures. Results of these comparisons are shown in <xref ref-type="fig" rid="GR234435MALF4">Figure 4</xref>. As can be seen, the performance of PhISCS improves with the increasing number of available bulk samples, suggesting that it can successfully exploit VAF values from multiple bulk samples when such samples are available. Note that these results are based on simulations with a higher number of mutations (100), higher number of subclones (15), higher number of ISA violations (up to 5), and lower bulk sequencing coverage (5000×), also demonstrating that PhISCS accuracy does not deteriorate with increasing scale and complexity of the input data. Similar results are obtained when simulated trees have either one or two mutations gained at each node (in the latter case, at least one of the two mutations must belong to the set of mutations for which ISA is violated). Results of these comparisons are presented in <xref ref-type="fig" rid="GR234435MALF5">Figure 5</xref>.</p>
        <fig id="GR234435MALF5" orientation="portrait" position="float">
          <label>Figure 5.</label>
          <caption>
            <p>Comparison of PhISCS with SCITE on simulated data where either one or two mutations are acquired at each node (in the latter case, one of the two mutations is an ISA violating mutation). Ten distinct trees of tumor evolution with either 20 mutations (i.e., <italic>s</italic> = 21, <italic>m</italic> = 20) or 40 mutations (i.e., <italic>s</italic> = 41, <italic>m</italic> = 40) were generated and 100 single cells sampled in each case. The false negative rate of single-cell data was set to 0.15. The depth of coverage for bulk data was set to 10,000×, and the minimum cellular prevalence of individual nodes was set to 3% for <italic>m</italic> = 20 and 2% for <italic>m</italic> = 40. <italic>A</italic> and <italic>C</italic>, respectively, show MLTD (dissimilarity) and normalized MLTSM (similarity) measure where ISA violations are allowed, but only SCS data was used as the input. <italic>B</italic> and <italic>D</italic> show, respectively, MLTD (dissimilarity) and normalized MLTSM (similarity) measure where ISA violations are allowed and both single-cell and bulk data are used as the input. On the <italic>x</italic>-axes, h, m, and ISA, respectively, denote the number of bulk samples, the total number of simulated mutations, and the number of simulated mutations for which ISA is violated.</p>
          </caption>
          <graphic xlink:href="1860f05"/>
        </fig>
        <p>We finally compared PhISCS against B-SCITE, which aims to maximize the joint likelihood of single-cell and (multiple) bulk data samples, and as such, is similar to PhISCS. However, because it is based on an MCMC search as per SCITE, it cannot provide any optimality guarantees. Furthermore, while the bulk sequencing data is used to derive hard constraints for PhISCS, they contribute only to the objective function in B-SCITE. The simulated data we used for comparing PhISCS and B-SCITE (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>) introduce CNA impacted mutations in addition to those that violate ISA. The performance of PhISCS in comparison to B-SCITE is presented in <xref ref-type="fig" rid="GR234435MALF6">Figure 6</xref>. As can be seen, PhISCS is quite robust to copy number alterations, especially in comparison to B-SCITE, and outperforms it in most of the simulation settings.</p>
        <fig id="GR234435MALF6" orientation="portrait" position="float">
          <label>Figure 6.</label>
          <caption>
            <p>Comparison of PhISCS and B-SCITE according to MLTD and its dual MLTSM similarity measure (normalized values of MLTSM are shown in the figure). In each case, 10 trees of tumor evolution with seven subclones and 40 mutations were simulated and 100 single cells were sampled. Depth of coverage for bulk data was set to 5000×. More details about generating these simulations are provided in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>. <italic>A</italic> and <italic>B</italic> show MLTD (dissimilarity) between inferred and ground truth trees for cases where three SNVs fall into regions having copy number 3 (<italic>A</italic>) or 4 (<italic>B</italic>) in all cancerous cells (i.e., clonal copy number gains 1 or 2 copies of genomic region harboring SNV). <italic>C</italic> and <italic>D</italic> show normalized MLTSM (similarity) between inferred and ground truth trees for cases where three SNVs fall into regions having copy number 3 (<italic>C</italic>) or 4 (<italic>D</italic>) in all cancerous cells. On the <italic>x</italic>-axes, h, fn, and ISA, respectively, denote the number of bulk samples, false negative rate of single-cell data, and the number of simulated mutations for which ISA is violated.</p>
          </caption>
          <graphic xlink:href="1860f06"/>
        </fig>
      </sec>
    </sec>
    <sec id="s1b">
      <title>Results on real sequencing data</title>
      <p>In order to further demonstrate its utility, we applied PhISCS to two real SCS data sets from recent studies. Both data sets provide additional bulk sequencing data with VAF values.</p>
      <sec id="s1b1">
        <title>Colorectal cancer with liver metastasis</title>
        <p>We first tested PhISCS on a CRC2 patient from <xref rid="GR234435MALC23" ref-type="bibr">Leung et al. (2017)</xref> (note that in <xref rid="GR234435MALC23" ref-type="bibr">Leung et al. 2017</xref>, this patient is sometimes also labeled as CO8). After data preprocessing using the same steps as in B-SCITE (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>; <xref rid="GR234435MALC26" ref-type="bibr">Malikic et al. 2019</xref>), we were left with a single-cell data matrix containing mutation profiles of 86 single cells across 25 mutated loci. (See <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link> and, in particular, <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Fig. S1</ext-link> for results of PhISCS on this data set when no such filtering is performed.)</p>
        <p>In the original study (<xref rid="GR234435MALC23" ref-type="bibr">Leung et al. 2017</xref>), detailed copy number profiling of primary and metastatic tumor samples was performed, revealing that most of the mutated loci are nondiploid and fall into genomic regions affected by copy number gains. For this reason, we opted not to use VAF-derived constraints and to run PhISCS using only SCS data. An observation to be made here is that copy number gains are usually not expected to be very challenging for the single-cell data-only version of PhISCS. Namely, the presence/absence status of mutation in a cell is not affected by copy number gains overlapping with the mutation's locus. In fact, if a gain results in an increased number of copies of a variant allele, this can even be potentially beneficial and reduce allelic dropout (since such an event would provide more starting material for the PCR amplification step that is typically performed prior to DNA sequencing).</p>
        <p>We ran PhISCS using single-cell data, first without considering any ISA violations (the output shown in <xref ref-type="fig" rid="GR234435MALF7">Fig. 7</xref>A), and then allowing ISA violating mutation elimination (the output shown in <xref ref-type="fig" rid="GR234435MALF7">Fig. 7</xref>B). The latter reported a solution eliminating mutation in gene <italic>ATP7B</italic>.</p>
        <fig id="GR234435MALF7" orientation="portrait" position="float">
          <label>Figure 7.</label>
          <caption>
            <p>Inferred tumor phylogeny for CRC2 (CO8) patient from <xref rid="GR234435MALC23" ref-type="bibr">Leung et al. (2017)</xref> by PhISCS through the use of single-cell data only: (<italic>A</italic>) without allowing mutation elimination; (<italic>B</italic>) with allowing mutation elimination. For each mutation, VAFs derived from bulk data are provided next to the gene label. The first number (colored in blue) represents VAF in the primary tumor and the second number (colored in red) represents VAF in the metastasis. Genes <italic>SPEN</italic> and <italic>APC</italic> harbor multiple mutations. <italic>SPEN_1</italic> denotes mutation at position Chr 1, 16,258,997; <italic>SPEN_2</italic>, mutation at Chr 1, 16,202,934; <italic>APC_1</italic>, mutation at Chr 5, 112,164,646; and <italic>APC_2</italic>, mutation at Chr 5, 112,175,328. Coloring of nodes in <italic>A</italic> is motivated by the coloring used in <xref ref-type="fig" rid="GR234435MALF6">Figure 6</xref> in <xref rid="GR234435MALC23" ref-type="bibr">Leung et al. (2017)</xref>. In this coloring, blue and purple nodes represent mutations specific to the primary site, whereas nodes colored in pink and orange represent mutations specific to two distinct metastases. Red edges represent metastatic seeding events. Coloring in <italic>B</italic> is equivalent to the coloring in <italic>A</italic>.</p>
          </caption>
          <graphic xlink:href="1860f07"/>
        </fig>
        <p>After completing the above analysis, we obtained VAFs from the matching bulk data for both primary and metastasis samples. The average coverage of bulk data at the sites of interest is 100.92× (primary) and 110.60× (metastasis). As shown in <xref ref-type="fig" rid="GR234435MALF7">Figure 7</xref>A, several mutations have one or both VAFs above 0.50. In addition, there are also many pairs of mutations where mutation with lower VAF is placed above the mutation with higher VAF. Both of these are expected and can in most cases be attributed to the presence of copy number aberrations present in the data or variance due to the depth of sequencing. One major exception is mutations in genes <italic>ATP7B</italic> and <italic>NR4A3</italic> and their placement with respect to the mutation in <italic>FUS</italic>. Namely, in the metastatic sample, mutations in <italic>ATP7B</italic> and <italic>NR4A3</italic> have VAFs of 0.03 and 0.02, which is significantly lower than 0.29, that is, the VAF of mutation in <italic>FUS</italic>, which is placed below these two genes in the tree shown in <xref ref-type="fig" rid="GR234435MALF7">Figure 7</xref>A. While, in theory, these, as well as other similar discrepancies, can be explained by copy number events (e.g., a massive gain of variant allele in <italic>FUS</italic> in the metastatic sample), we do not see evidence for the existence of such events in bulk data read counts (where coverage of these mutations is in the range from 129 to 223) or in <xref ref-type="fig" rid="GR234435MALF5">Figure 5</xref>D in <xref rid="GR234435MALC23" ref-type="bibr">Leung et al. (2017)</xref> (where copy number profiling of primary and metastatic tumors was performed, suggesting the existence of three or four copies of regions harboring these three mutations). Furthermore, an identical relative order of these mutations can be found in the original study (<xref rid="GR234435MALC23" ref-type="bibr">Leung et al. 2017</xref>), which implies an enormous false positive rate in metastatic cells for the mutation in <italic>FUS</italic>. More precisely, out of 20 single cells (all metastatic) where presence of mutation was reported, 10 needed to be altered 1 → 0 during tumor phylogeny inference, implying a false positive rate of 50% for this mutation. Such a high false positive rate cannot be attributed to sequencing artifacts as no false positive for this mutated position was reported in any of the 137 primary cells sequenced. For some of the mutations, the false positive rate reported by SCITE is even higher (e.g., mutation in gene <italic>PTPRD</italic> was originally reported in 13 single cells, and 10 of these mutation calls were estimated as false positives in the solution inferred by SCITE). Additionally, SCITE infers a tumor phylogeny nearly identical (with a minor difference) to the one discussed above.</p>
        <p>On the other hand, the tree inferred by PhISCS while allowing ISA violations (<xref ref-type="fig" rid="GR234435MALF7">Fig. 7</xref>B), even though the bulk sequencing data and thus VAF values were not used, includes no VAF inconsistencies that cannot be explained by the observed copy number events and/or variance in VAF values due to depth of coverage. Furthermore, this solution implies no mutation loci with elevated false positive mutation calls, and the substantial decrease in the false positive calls are not compensated by any increase in the false negative calls.</p>
        <p>From a biological perspective, looking into the timing of metastatic seeding, the solution reported in <xref ref-type="fig" rid="GR234435MALF7">Figure 7</xref>A suggests two distinct metastatic seeding events: one occurring via cells leaving the primary site at the node labeled with <italic>APC_2</italic> and seeding the metastasis-specific subtree rooted at <italic>LAMB4</italic>, and another occurring when cells from the node labeled with <italic>ATP7B</italic> leave the primary site and seed the metastasis-specific subtree rooted at <italic>NR4A3</italic>. In contrast, the tree reported in <xref ref-type="fig" rid="GR234435MALF7">Figure 7</xref>B requires only a single metastatic seeding event that introduces the metastasis-specific subtree rooted at <italic>FUS</italic>. Here, by metastasis-specific subtree, we refer to the subtree consisting solely of mutations present only in the metastatic sample. Note that the nonzero VAF value in the primary sample for mutations <italic>TSHZ3</italic> and <italic>F8</italic> provides some signal for the possible presence of these mutations in this sample. However, this signal is very likely a consequence of sequencing noise as, for each of the two mutations, there is only a single read supporting the variant allele. In addition, these mutations were not reported in any of the sequenced single cells extracted from the primary tumor.</p>
        <p>In conclusion, in comparison to the results obtained assuming the infinite sites model, the tree inferred by PhISCS by allowing ISA violating mutation elimination, better explains both single-cell and bulk data, while requiring only a single metastatic seeding event, demonstrating the importance of this feature of PhISCS in tumor phylogeny reconstruction.</p>
      </sec>
      <sec id="s1b2">
        <title>Childhood acute lymphoblastic leukemia</title>
        <p>The second data set that we tested PhISCS on is obtained from an acute lymphoblastic leukemia (ALL) study where both single-cell and bulk sequencing data are available (<xref rid="GR234435MALC13" ref-type="bibr">Gawad et al. 2014</xref>). We focused on the second patient from this study for which single-cell data provides a strong signal for the existence of multiple subclones with a nonlinear tree topology. The single-cell data matrix used to run PhISCS consists of 16 mutations and 102 single cells (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>). The estimated FN rate for this data set is 0.181749 (<xref rid="GR234435MALC13" ref-type="bibr">Gawad et al. 2014</xref>). The trees inferred by SCITE and B-SCITE (<xref rid="GR234435MALC26" ref-type="bibr">Malikic et al. 2019</xref>), by the use of SCS data only and by the integrative use of SCS and bulk sequencing data, respectively, with no allowance for ISA violations (see <xref ref-type="fig" rid="GR234435MALF8">Fig. 8</xref>), are generally in agreement with the tree topology published in the original study. However, they differ in the placement of the mutations in genes <italic>RRP8</italic> and <italic>CMTM8</italic>: The VAFs of these mutations do not agree with their placement by SCITE whereas their relative presence/absence in single cells contradicts their placement with B-SCITE.</p>
        <fig id="GR234435MALF8" orientation="portrait" position="float">
          <label>Figure 8.</label>
          <caption>
            <p>Inferred tumor phylogeny for Patient 2 from <xref rid="GR234435MALC13" ref-type="bibr">Gawad et al. (2014)</xref> with (<italic>A</italic>) SCITE and (<italic>B</italic>) B-SCITE. The coloring of the trees is motivated by the colors used for SCITE and B-SCITE in the previous figures. B-SCITE's use of VAFs alter the tree topology by moving the mutation in <italic>CMTM8</italic> higher up in the tree. B-SCITE also reorders the mutations in genes in the linear topology identified by SCITE rooted at <italic>FGD4</italic> —primarily according to their VAFs.</p>
          </caption>
          <graphic xlink:href="1860f08"/>
        </fig>
        <p>The results of PhISCS on this data set, using VAFs and allowing the elimination of mutations, are presented in <xref ref-type="fig" rid="GR234435MALF9">Figure 9</xref>. In this topology, the VAF values do not present a contradiction, a highly desirable feature when the VAF values are measured reasonably accurately. For example, the use of VAFs by PhISCS places the mutation in <italic>FGD4</italic> higher in the tree, as it should be. In addition, PhISCS's ability to eliminate mutations with contradictory VAF values and presence in SCS data removes the inconsistencies in the tumor phylogeny. For example, <italic>CMTM8</italic> has a mutation with a high VAF value that contradicts its lower subclonal placement by SCITE in <xref ref-type="fig" rid="GR234435MALF8">Figure 8</xref>. However, in comparison to <italic>RRP8</italic>, it appears in 20 fewer single cells (out of 38). The discrepancies between the VAFs of mutations in <italic>CMTM8</italic> and <italic>RRP8</italic> and fractions of single cells harboring these mutations are possibly a result of an undetected copy number gain on the nonvariant allele for <italic>RRP8</italic> or another undetected copy number gain on the variant allele for <italic>CMTM8</italic>; such copy number gains would result in a lower VAF estimate for <italic>RRP8</italic> or, respectively, a higher one for <italic>CMTM8</italic>. The above observations point out that PhISCS's ability to identify mutations that have been subject to undetected CNAs, combined with its ability to integrate VAFs with SCS data, can help identify previously underexplored copy number aberrations (especially through targeted platforms, where CNA calls could be unreliable) or notice inconsistencies in CNV calls.</p>
        <fig id="GR234435MALF9" orientation="portrait" position="float">
          <label>Figure 9.</label>
          <caption>
            <p>Inferred tumor phylogeny for Patient 2 from <xref rid="GR234435MALC13" ref-type="bibr">Gawad et al. (2014)</xref> through the joint use of bulk and SCS data while allowing ISA violations. The topology of the tree and the mutational placements are similar to that of B-SCITE in <xref ref-type="fig" rid="GR234435MALF8">Figure 8</xref> with the key difference that three mutations are now eliminated by PhISCS: <italic>RRP8</italic> and <italic>CMTM8</italic> are eliminated due to inconsistent VAF and SCS data; <italic>CMTM8</italic> has a similar SCS profile to <italic>INHA</italic> but has a significantly higher VAF. It also has a higher VAF than <italic>RRP8</italic> but appears in 20 fewer cells. In addition, the mutation in <italic>RIMS2</italic> is eliminated by PhISCS as per the figure. Evidence for ISA violations in this gene has been reported earlier (<xref rid="GR234435MALC22" ref-type="bibr">Kuipers et al. 2017</xref>).</p>
          </caption>
          <graphic xlink:href="1860f09"/>
        </fig>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s2">
    <title>Discussion</title>
    <p>PhISCS is a novel combinatorial approach for inferring tumor phylogenies via an integrative use of single-cell and bulk sequencing data. PhISCS offers two options: PhISCS-I expresses our formulation in the form of an ILP and solves it via the Gurobi Optimizer, and PhISCS-B expresses it in the form of a Boolean CSP and solves it via open source wMax-SAT solvers such as MaxHS, often more efficiently than PhISCS-I. (As such, PhISCS-B is the first to express the combinatorial tumor phylogeny reconstruction problem in a form other than ILP/QIP.) PhISCS is the first method for tumor phylogeny inference by integrated analysis of single-cell and bulk sequencing data while allowing ISA violations. Based on three measures of tumor phylogeny (dis)similarity between the ground truth and inferred tree, we have shown by simulations and real data that PhISCS is not only very efficient but is also more accurate than the available alternatives.</p>
    <p>One limitation of PhISCS is that it assumes doublets have been eliminated in a preprocessing step; since the doublet rate is being reduced significantly through newer technologies and improved library preparation, we do not expect this to be an important limitation, especially in the analysis of newly generated data.</p>
  </sec>
  <sec sec-type="methods" id="s3">
    <title>Methods</title>
    <p>We start describing the algorithmic underpinnings of PhISCS by formulating integrative tumor phylogeny reconstruction as a combinatorial optimization problem. We first focus on two special cases of the problem for the instance in which only single-cell sequencing data is available: (1) a special case where the ISA cannot be violated; and (2) the case where ISA can be violated. We then describe the general integrative problem where both bulk and SCS data are available. We present solutions for this problem in the form of a novel integer linear program as well as a constraint satisfaction problem (CSP).</p>
    <sec id="s3a">
      <title>PhISCS-I for tumor phylogeny inference via SCS data with no ISA violations allowed</title>
      <p>SCS data input to PhISCS is given in a form of ternary matrix <italic>I</italic> with <italic>n</italic> rows and <italic>m</italic> columns, where columns represent mutations and rows represent genotypes of single cells observed in a single-cell sequencing experiment. For a given entry, <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) = 0 indicates the absence, <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) = 1 indicates the presence, and <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) = ? indicates the lack of knowledge about absence or presence (i.e., missing entry) of a mutation <italic>j</italic> in a cell <italic>i</italic>.</p>
      <p>We ask to find the minimum weighted number of <italic>bit flips</italic> (typically from 0 to 1 and rarely from 1 to 0) and <italic>bit assignments</italic> (assigning a 0 or 1 to an entry with value ?), where <italic>bit assignments</italic> are not a part of the objective, such that the resulting matrix provides a Perfect Phylogeny (PP). We recall that a binary matrix is a PP if the <italic>three-gametes rule</italic> holds, that is, for any given pair of columns (mutations), there are no three rows (cells) with configuration (1, 0), (0, 1), and (1, 1). <italic>Bit flipping</italic> in the input matrix <italic>I</italic> is essential to building a PP, as some mutation inferences in <italic>I</italic> are false positives and some mutations are not indicated in <italic>I</italic> (false negatives), as they do not have sufficient read support in sequenced single cells. We name any pair of mutations and triplet of cells violating the three-gametes rule as a <italic>conflict</italic> and refer to the PP matrix also as a <italic>conflict-free matrix</italic>.</p>
      <p>To allow correction of noisy genotypes in <italic>I</italic> (i.e., bit flips and bit assignments), for each cell <italic>i</italic> and mutation <italic>j</italic>, we introduce a binary variable <italic>Y</italic>(<italic>i</italic>, <italic>j</italic>) which denotes the (unknown) true status (i.e., absence or presence) of the mutation <italic>j</italic> in the cell <italic>i</italic>. If <italic>α</italic> and <italic>β</italic>, respectively, denote false positive and false negative error rates of single-cell data, we have
<disp-formula id="GR234435MALM1"><label>(1)</label><mml:math id="M1"><mml:mtable rowspacing="4pt" columnspacing="1em" columnalign="left"><mml:mtr><mml:mtd><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mtext>β</mml:mtext></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mi>Y</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>.</mml:mo></mml:math></disp-formula>
Assuming that the mutated loci are independent and that the missing entries in <italic>I</italic> are noninformative (i.e., bit assignments are not part of the objective), we define the likelihood of an arbitrary conflict-free matrix <italic>Y</italic> as
<disp-formula id="GR234435MALM2"><label>(2)</label><mml:math id="M2"><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>I</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:munder><mml:mo>⁡</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo fence="false">|</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:math></disp-formula>
where <inline-formula><mml:math id="il4"><mml:mrow><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is the set of all pairs of integers (<italic>i</italic>, <italic>j</italic>) such that 1 ≤ <italic>i</italic> ≤ <italic>n</italic>, 1 ≤ <italic>j</italic> ≤ <italic>m</italic> and <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) ∈ {0, 1}.</p>
      <p>Here, our goal is to find a conflict-free matrix <italic>Y</italic> such that the likelihood <italic>P</italic>(<italic>I</italic>|<italic>Y</italic>) defined in Equation <xref ref-type="disp-formula" rid="GR234435MALM2">2</xref> is maximized.</p>
      <p>Now, observe that Equation <xref ref-type="disp-formula" rid="GR234435MALM1">1</xref> can be rewritten as
<disp-formula id="GR234435MALM3"><label>(3)</label><mml:math id="M3"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd/><mml:mtd><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo fence="false">|</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:msup><mml:mtext>β</mml:mtext><mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo fence="false">|</mml:mo><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>α</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi>α</mml:mi><mml:mo>⋅</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p>
      <p>and our objective is equivalent to maximizing the logarithm of <italic>P</italic>(<italic>I</italic>|<italic>Y</italic>)<sub>,</sub> which can be expressed as
<disp-formula id="GR234435MALM4"><label>(4)</label><mml:math id="M4"><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:munder><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munder><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula>
In order to enforce that matrix <italic>Y</italic> satisfies the three-gametes rule, for each pair of mutations (<italic>p</italic>, <italic>q</italic>), we first introduce variables <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, <italic>a</italic>, <italic>b</italic>), for each (<italic>a</italic>, <italic>b</italic>) ∈ {(0, 1), (1, 0), (1, 1)}. The variable <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, <italic>a</italic>, <italic>b</italic>) is set to 1 if there exists row <italic>r</italic> such that <italic>Y</italic>(<italic>r</italic>, <italic>p</italic>) = <italic>a</italic> and <italic>Y</italic>(<italic>r</italic>, <italic>q</italic>) = <italic>b</italic>. This property of matrix <italic>B</italic> is guaranteed by adding the following constraints for all 1 ≤ <italic>i</italic> ≤ <italic>n</italic> and 1 ≤ <italic>p</italic>, <italic>q</italic> ≤ <italic>m</italic>:
<disp-formula id="GR234435MALM5"><label>(5)</label><mml:math id="M5"><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:math></disp-formula>
<disp-formula id="GR234435MALM6"><label>(6)</label><mml:math id="M6"><mml:mo>−</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>0</mml:mn></mml:math></disp-formula>
<disp-formula id="GR234435MALM7"><label>(7)</label><mml:math id="M7"><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>0.</mml:mn></mml:math></disp-formula>
</p>
      <p>Now, adding constraints
<disp-formula id="GR234435MALM8"><label>(8)</label><mml:math id="M8"><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>2</mml:mn></mml:math></disp-formula>
for all 1 ≤ <italic>p</italic>, <italic>q</italic> ≤ <italic>m</italic> suffices to ensure that the three-gametes rule holds for matrix <italic>Y</italic>.</p>
      <p>The problem defined above represents an instance of ILP and can be solved using any of the standard ILP solvers.</p>
    </sec>
    <sec id="s3b">
      <title>Allowing ISA violations in PhISCS-I</title>
      <p>As we have already discussed in the Introduction, recent evidence suggests that the ISA might be violated for a subset of mutations in the input data. To account for this, we introduce a more general version of what we discussed in the previous section, where we allow <italic>elimination</italic> (i.e., deletion from the input matrix) of a given (maximum) number of mutations which do not satisfy ISA; the remaining mutations, after genotype corrections, are expected to satisfy PP. In order to achieve this, for each mutation <italic>q</italic>, we introduce binary variable <italic>K</italic>(<italic>q</italic>) which is set to 1 if and only if mutation <italic>q</italic> is among eliminated mutations. To exclude eliminated mutations from the three-gametes rule, we do not require mutational pairs (<italic>p</italic>, <italic>q</italic>), where at least one of <italic>p</italic> and <italic>q</italic> is among eliminated mutations, to fulfill this rule. Therefore, we modify constraint (8) from the integer linear program described above by replacing it with
<disp-formula id="GR234435MALM9"><label>(9)</label><mml:math id="M9"><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
The objective defined in Equation <xref ref-type="disp-formula" rid="GR234435MALM4">4</xref> is also modified so that the eliminated mutations do not contribute to the objective score. This leads to the following objective to handle the case allowing ISA violations:
<disp-formula id="GR234435MALM10"><label>(10)</label><mml:math id="M10"><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mstyle></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula>
All other constraints used previously in the limited version of the problem are preserved. Note that the above objective contains quadratic terms (of the form <italic>K</italic>(<italic>j</italic>)<italic>Y</italic>(<italic>i</italic>, <italic>j</italic>)) which can be transformed to linear variables using standard linearization techniques. One can observe that mutation elimination never decreases data likelihood, hence the global optimum in the above maximization problem is achieved when all variables <italic>K</italic> are set to 1. However, in real applications, we expect only a limited number of ISA violating mutations and therefore set the upper bound <italic>k</italic><sub>max</sub> on the number of eliminated mutations, which is implemented by the addition of the following constraint
<disp-formula id="GR234435MALM11"><label>(11)</label><mml:math id="M11"><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mo>⁡</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>k</italic><sub>max</sub> is an empirically estimated constant. It is also possible to computationally estimate <italic>k</italic><sub>max</sub> (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link> for details).</p>
    </sec>
    <sec id="s3c">
      <title>Additional ILP constraints to integrate VAFs derived from bulk sequencing data into PhISCS-I</title>
      <p>Now, we show how to integrate SCS data with bulk sequencing data—specifically the VAF of each mutation we consider—through additional linear constraints. These constraints will only apply to the set of single nucleotide variants from the regions not affected by copy number aberrations. Suppose that a particular SNV, denoted <italic>M</italic>, satisfies the above requirement; let <italic>v</italic> and <italic>r</italic>, respectively, denote the number of reads supporting the variant and the reference allele at the genomic locus of <italic>M</italic>. The VAF of <italic>M</italic> is typically defined as <italic>v</italic>/(<italic>v</italic> + <italic>r</italic>). Since we are interested in <italic>cellular prevalence</italic> rather than the VAF below, we define <inline-formula><mml:math id="il5"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>v</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>+</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>. (Cellular prevalence represents the expected fraction of cells in the sample that harbor <italic>M</italic>.)</p>
      <p>Before defining constraints related to VAFs, we first define the <italic>root node</italic> via a new row, indexed by 0, that represents the genotype of a healthy cell. We also add a new column, indexed by 0, and associated <italic>null mutation M</italic><sub>0</sub> which represents mutation specific to the normal cell or, in other words, a germline SNP present in all cells. We set <italic>I</italic>(<italic>t</italic>, 0) = 1 for <italic>t</italic> = 0, 1…, <italic>n</italic> and <italic>I</italic>(0, <italic>p</italic>) = 0 for <italic>p</italic> = 1, 2, …, <italic>m</italic>. We also set <inline-formula><mml:math id="il6"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> and do not allow elimination of <italic>M</italic><sub>0</sub>. Matrices <italic>B</italic> and <italic>Y</italic> are also expanded in an obvious way by allowing mutational indices to be equal to 0. The remainder of the tree topology is imposed through additional constraints that specify ancestor-descendant relationships in a consistent manner across all nodes.
<list list-type="order"><list-item><p>We must satisfy the following constraints: (i) <italic>K</italic>(0) = 0, (ii) <italic>Y</italic>(<italic>t</italic>, 0) = 1 for <italic>t</italic> = 0, 1, …, <italic>n</italic>, and (iii) <italic>Y</italic>(0, <italic>p</italic>) = 0 for <italic>p</italic> = 1, 2, …, <italic>m</italic>.</p></list-item><list-item><p>If a mutation <italic>p</italic> is an ancestor of a mutation <italic>q</italic> and ISA holds for both <italic>p</italic> and <italic>q</italic>, then the true cellular prevalence of <italic>p</italic> is expected to be greater than or equal to the true cellular prevalence of <italic>q</italic>. Since vaf(<italic>p</italic>) and vaf(<italic>q</italic>) reflect cellular prevalences as discussed above, we expect that, in the implied evolutionary tree, <inline-formula><mml:math id="il7"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>δ</italic> is some positive constant which allows for the noise typically present in the observed VAFs. In order to incorporate VAFs in our model, we introduce binary function <italic>a</italic>, such that <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1 only if <italic>p</italic> is an “ancestor” of <italic>q</italic>. By definition, we set <italic>a</italic>(<italic>p</italic>, <italic>p</italic>) = 0 for all <italic>p</italic> ∈ {0, 1, …, <italic>m</italic>}. The constraints that we need to introduce are thus as follows:
<list list-type="alpha-lower"><list-item><p>For any pair of distinct mutations <italic>p</italic>, <italic>q</italic>, we must satisfy the following two constraints to ensure that (i) only one of them could be the ancestor of the other, and (ii) if there is a cell in which they appear together, then one must be the ancestor of the other:
<disp-formula id="GR234435MALM12"><label>(12)</label><mml:math id="M12"><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mo movablelimits="true">min</mml:mo><mml:mo fence="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo fence="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
(we remind the reader that, for any mutation <italic>r</italic>, <italic>K</italic>(<italic>r</italic>) = 1 indicates that the column <italic>r</italic> in input matrix <italic>I</italic> has been eliminated).</p></list-item><list-item><p>Each noneliminated mutation <italic>q</italic> different from null mutation must have at least one ancestor. This is ensured by adding the following constraint:
<disp-formula id="GR234435MALM13"><label>(13)</label><mml:math id="M13"><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mo>⁡</mml:mo><mml:mi>a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p><p>On the other hand, a null mutation has no ancestors, so we set <italic>a</italic>(<italic>p</italic>, 0) = 0 for all <italic>p</italic> ∈ {0, 1, …, <italic>m</italic>}.</p></list-item><list-item><p>Consider two noneliminated mutations <italic>p</italic> and <italic>q</italic>. If <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1, then in genotype corrected output matrix <italic>Y</italic>, the column <italic>p</italic> should dominate the column <italic>q</italic>, that is, for each cell/row <italic>r</italic>, if the entry for <italic>p</italic> is 0, then the entry for <italic>q</italic> should also be 0. In other words, there should not exist row <italic>r</italic> such that <italic>Y</italic>(<italic>r</italic>, <italic>p</italic>) = 0 and <italic>Y</italic>(<italic>r</italic>, <italic>q</italic>) = 1, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 0, 1) = 0. To ensure this, for all pairs of mutation (<italic>p</italic>, <italic>q</italic>), we add the following constraint:
<disp-formula id="GR234435MALM14"><label>(14)</label><mml:math id="M14"><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item><list-item><p>If, for two noneliminated mutations <italic>p</italic> and <italic>q</italic>, matrix <italic>Y</italic> contains a cell in which <italic>p</italic> is present and <italic>q</italic> is absent (i.e., there exists <italic>i</italic> such that <italic>Y</italic>(<italic>i</italic>, <italic>p</italic>) = 1 and <italic>Y</italic>(<italic>i</italic>, <italic>q</italic>) = 0, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 1, 0) = 1), as well as a cell where both <italic>p</italic> and <italic>q</italic> are present (i.e., there exists <italic>j</italic> such that <italic>Y</italic>(<italic>j</italic>, <italic>p</italic>) = 1 and <italic>Y</italic>(<italic>j</italic>, <italic>q</italic>) = 1, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 1, 1) = 1), then <italic>p</italic> must be an ancestor of <italic>q</italic> (i.e., <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1). In order to ensure this, for all pairs of mutations (<italic>p</italic>, <italic>q</italic>), we add the following constraints:
<disp-formula id="GR234435MALM15"><label>(15)</label><mml:math id="M15"><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item><list-item><p>For some small user-defined error tolerance value <italic>δ</italic> &gt; 0 that accounts for variation in sequencing coverage, if <inline-formula><mml:math id="il8"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>&gt;</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula> then <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 0; in other words, for every pair of mutations <italic>p</italic> and <italic>q</italic> we must satisfy
<disp-formula id="GR234435MALM16"><label>(16)</label><mml:math id="M16"><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>If more than one sample from the same tumor with (independent) bulk sequencing data is available, we will have to satisfy the VAF constraints imposed by all of them. Let vaf<sub>ℓ</sub>(<italic>p</italic>) denote vaf(<italic>p</italic>) in sample ℓ. Then, for each pair of mutations <italic>p</italic> and <italic>q</italic> such that <inline-formula><mml:math id="il9"><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:math></inline-formula> we must satisfy: <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 0; that is, for each sample ℓ:
<disp-formula id="GR234435MALM17"><label>(17)</label><mml:math id="M17"><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p></list-item><list-item><p>For all triplets of mutations <italic>p</italic>, <italic>q</italic>, <italic>r</italic>, we must ensure that, if <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1 and <italic>a</italic>(<italic>q</italic>, <italic>r</italic>) = 1, then <italic>a</italic>(<italic>p</italic>, <italic>r</italic>) = 1:
<disp-formula id="GR234435MALM18"><label>(18)</label><mml:math id="M18"><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>:</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mn>1.</mml:mn></mml:math></disp-formula>
</p></list-item></list></p></list-item><list-item><p>Now, we can describe our constraint for every triplet of distinct mutations <italic>p</italic>, <italic>q</italic>, and <italic>r</italic>, such that <italic>p</italic> is an ancestor of <italic>q</italic> and <italic>r</italic> but <italic>q</italic> and <italic>r</italic> do not have an ancestor-descendant relationship (i.e., <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = <italic>a</italic>(<italic>p</italic>, <italic>r</italic>) = 1 and <italic>a</italic>(<italic>q</italic>, <italic>r</italic>) = <italic>a</italic>(<italic>r</italic>, <italic>q</italic>) = 0).
<disp-formula id="GR234435MALM19"><label>(19)</label><mml:math id="M19"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>[</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>[</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p><p>If again, multiple samples with (independent) bulk sequencing data are available, we have to satisfy the triple-VAF constraint for each sample ℓ, that is, for each triplet of mutations <italic>p</italic>, <italic>q</italic>, <italic>r</italic>:
<disp-formula id="GR234435MALM20"><label>(20)</label><mml:math id="M20"><mml:msub><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>[</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>[</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item></list></p>
      <p>Note that the above <italic>triple-VAF</italic> constraint does not fully utilize the information provided by VAFs, for example, in case a <italic>parent</italic> mutation has three distinct <italic>children</italic> whose total VAFs should, in principle, not exceed that of the parent. It is possible to generalize the triple-VAF constraint to any number of children (see <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Material</ext-link>). Nevertheless, we still recommend the use of the triple-VAF constraint instead of this general-VAF constraint (even though this choice may, in principle, produce trees that violate the general-VAF constraint) since the two sets of constraints do not seem to produce different trees in practice. Furthermore, the general-VAF constraint is quadratic and thus slows down PhISCS.</p>
    </sec>
    <sec id="s3d">
      <title>PhISCS-B for tumor phylogeny inference via SCS data</title>
      <p>We first show how to reduce the ILP formulation of PhISCS where only single-cell data is used as the input and no mutation elimination allowed to a wMax-SAT problem. For each input entry <italic>I</italic>(<italic>i</italic>, <italic>j</italic>), <inline-formula><mml:math id="il10"><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:math></inline-formula>, we introduce a Boolean variable <italic>Y</italic>(<italic>i</italic>, <italic>j</italic>) which represents the true state of mutation <italic>j</italic> in cell <italic>i</italic>. Our goal is to find the assignment of values to variables <italic>Y</italic>(<italic>i</italic>, <italic>j</italic>) such that the resulting matrix <italic>Y</italic> is conflict-free and the objective defined below is maximized. In order to enforce that <italic>Y</italic> is conflict-free matrix, we use a set of additional Boolean variables <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, <italic>a</italic>, <italic>b</italic>) (analogous to binary variables used in earlier sections) that need to satisfy the following <italic>hard</italic> constraints (the constraints that <italic>need</italic> to be satisfied):
<disp-formula id="GR234435MALM21"><label>(21)</label><mml:math id="M21"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd/><mml:mtd><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
We can now define our objective as satisfying all the hard constraints with alterations on the input matrix <italic>I</italic> with maximum probability, where each alteration (indicating a false positive or false negative) is independent. This objective corresponds to the minimizing the (weighted) number of flipped entries in the solution matrix <italic>Y</italic> in comparison to <italic>I</italic>, or, for the purpose of formulating the problem as an instance of wMax-SAT, maximizing the weighted sum of the following “soft” constraints (for all <italic>i</italic>, <italic>j</italic>, s.t. <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) ≠ ? originally):
<disp-formula id="GR234435MALM22"><label>(22)</label><mml:math id="M22"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable><mml:mo>.</mml:mo></mml:math></disp-formula>
</p>
      <p>Note that, in order to get exactly the same objective value as in objective defined in Equation <xref ref-type="disp-formula" rid="GR234435MALM4">4</xref>, we need to add constant terms from Equation <xref ref-type="disp-formula" rid="GR234435MALM4">4</xref> to the objective defined in Equation 22. Alternatively, after solving for matrix <italic>Y</italic>, we can compute <italic>P</italic>(<italic>I</italic>|<italic>Y</italic>) by the use of formula given in Equation <xref ref-type="disp-formula" rid="GR234435MALM2">2</xref>.</p>
      <p>We now show how to account for ISA violations: For each column <italic>j</italic> ∈ {1, 2, …, <italic>m</italic>} we introduce a Boolean variable <italic>K</italic>(<italic>j</italic>) that is set to 1 if and only if column <italic>j</italic> is eliminated (i.e., mutation corresponding to column <italic>j</italic> is not considered as a part of the output).</p>
      <p>Analogously as in the ILP formulation, we allow at most <italic>k</italic><sub>max</sub> columns to be eliminated, where <italic>k</italic><sub>max</sub> is a user-defined constant. In order to ensure that no more than <italic>k</italic><sub>max</sub> of variables <italic>K</italic>(1), <italic>K</italic>(2), …, <italic>K</italic>(<italic>m</italic>) are set to 1, for each possible (<italic>k</italic><sub>max</sub> + 1)-tuple <inline-formula><mml:math id="il11"><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mspace width="0.4em"/></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:math></inline-formula> of integers such that <inline-formula><mml:math id="il12"><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:mo>…</mml:mo><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mspace width="0.4em"/></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>m</mml:mi></mml:math></inline-formula>, we add the following hard clause
<disp-formula id="GR234435MALM23"><label>(23)</label><mml:math id="M23"><mml:mi mathvariant="normal">¬</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∧</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∧</mml:mo><mml:mo>…</mml:mo><mml:mo>∧</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>i</mml:mi><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mrow><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:math></disp-formula>
to our model.</p>
      <p>Now, for any eliminated column <italic>p</italic>, we do not have to check whether it is in conflict with any other column <italic>q</italic> or vice versa. Therefore, for each pair (<italic>p</italic>, <italic>q</italic>) of columns, we replace the last constraint in 21 above with the following:
<disp-formula id="GR234435MALM24"><label>(24)</label><mml:math id="M24"><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
To get the objective equivalent to Equation 10, for each pair of cell <italic>i</italic> and mutation <italic>j</italic>, we introduce a binary variable <italic>X</italic>(<italic>i</italic>, <italic>j</italic>) and add the following hard constraint:
<disp-formula id="GR234435MALM25"><label>(25)</label><mml:math id="M25"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd><mml:mo>(</mml:mo><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>X</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mi>Y</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>X</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>X</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo>)</mml:mo></mml:math></disp-formula>
and transform Equation 10 to an instance of wMax-SAT where the goal is to maximize weighted sum of the following “soft” constraints (for all <italic>i</italic>, <italic>j</italic>, s.t. <italic>I</italic>(<italic>i</italic>, <italic>j</italic>) ≠ ?):
<disp-formula id="GR234435MALM26"><label>(26)</label><mml:math id="M26"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="1em"/><mml:mrow><mml:mi mathvariant="normal">log</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>log</mml:mi><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="0.4em"/><mml:mo>−</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mi>X</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="0.4em"/><mml:mo>−</mml:mo><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="1em"/><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mtext>β</mml:mtext><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">weight</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext></mml:mrow><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">for</mml:mi></mml:mrow><mml:mspace width="0.4em"/><mml:mi>Y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mspace width="0.4em"/><mml:mrow><mml:mi mathvariant="normal">is</mml:mi><mml:mo>:</mml:mo></mml:mrow><mml:mspace width="1em"/><mml:mspace width="0.4em"/><mml:mspace width="0.4em"/><mml:mi>log</mml:mi><mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>β</mml:mtext></mml:mrow><mml:mi>α</mml:mi></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p>
    </sec>
    <sec id="s3e">
      <title>Additional Boolean constraints to integrate VAFs derived from bulk sequencing data into PhISCS-B</title>
      <p>In order to integrate information derived from bulk sequencing data, represented in the form of VAFs of the given set of mutations, we explicitly impose a tree structure on the output matrix <italic>Y</italic> through the use of a number of Boolean constraints.</p>
      <p>The Boolean constraints below start by defining the <italic>root node</italic> via a new row, indexed by 0, that represents the genotype of a normal cell. We also add a new column, indexed by 0, and associated <italic>null mutation M</italic><sub>0</sub> which represents a mutation specific to the normal cell or, in other words, a germline SNP present in all cells. We set <italic>I</italic>(<italic>t</italic>, 0) = 1 for <italic>t</italic> = 0, 1…, <italic>n</italic> and <italic>I</italic>(0, <italic>p</italic>) = 0 for <italic>p</italic> = 1, 2, …, <italic>m</italic>. We also set <inline-formula><mml:math id="il13"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> and do not allow elimination of <italic>M</italic><sub>0</sub>. The remainder of the tree topology is imposed through additional constraints that specify ancestor-descendent relationships in a consistent manner across all nodes:
<list list-type="simple"><list-item><label>1.</label><p>We must satisfy the following constraints which can easily be converted into Boolean expressions: (i) <italic>K</italic>(0) = 0, (ii) <italic>Y</italic>(<italic>t</italic>, 0) = 1 for <italic>t</italic> = 0, 1, …, <italic>n</italic>, and (iii) <italic>Y</italic>(0, <italic>p</italic>) = 0 for <italic>p</italic> = 1, 2, …, <italic>m</italic>.</p></list-item><list-item><label>2.</label><p>If a mutation <italic>p</italic> is an ancestor of mutation <italic>q</italic> in the implied evolutionary tree, then <inline-formula><mml:math id="il14"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> within some relatively small error tolerance. In order to employ VAFs using the above constraints between mutational pairs, we introduce Boolean function <italic>a</italic> such that <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1 if and only if <italic>p</italic> is an ancestor of <italic>q</italic>. The hard constraints that need to be imposed on <italic>a</italic> are as follows:
<list list-type="simple"><list-item><label>a.</label><p>For all pairs of distinct mutations <italic>p</italic> and <italic>q</italic>, where both <italic>p</italic> and <italic>q</italic> are different from null mutation, we must satisfy
<disp-formula id="GR234435MALM27"><label>(27)</label><mml:math id="M27"><mml:mtable columnalign="right left" rowspacing=".5em" columnspacing="thickmathspace"><mml:mtr><mml:mtd><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⇒</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="normal">¬</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>⇒</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p></list-item><list-item><label>b.</label><p>For each noneliminated mutation <italic>q</italic> different from null mutation, we must make sure that it has an ancestor mutation (which could be null mutation). This is achieved by imposing the following constraint:
<disp-formula id="GR234435MALM28"><label>(28)</label><mml:math id="M28"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:munder><mml:mrow><mml:mo>∨</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>p</mml:mi><mml:mo>≠</mml:mo><mml:mi>q</mml:mi></mml:mrow></mml:munder><mml:mo>⁡</mml:mo><mml:mi>a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∨</mml:mo><mml:mi>K</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item><list-item><label>c.</label><p>Consider two noneliminated mutations <italic>p</italic> and <italic>q</italic>. If <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1, then in genotype corrected output matrix <italic>Y</italic>, the column <italic>p</italic> should dominate the column <italic>q</italic>, that is, for each cell/row <italic>r</italic>, if the entry for <italic>p</italic> is 0 then the entry for <italic>q</italic> should also be 0. In other words, there should not exist row <italic>r</italic> such that <italic>Y</italic>(<italic>r</italic>, <italic>p</italic>) = 0 and <italic>Y</italic>(<italic>r</italic>, <italic>q</italic>) = 1, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 0, 1) = 0. To ensure this, for all pairs of mutation (<italic>p</italic>, <italic>q</italic>), we add the following constraint:
<disp-formula id="GR234435MALM29"><label>(29)</label><mml:math id="M29"><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item><list-item><label>d.</label><p>If, for two noneliminated mutations <italic>p</italic> and <italic>q</italic>, matrix <italic>Y</italic> contains cells in which <italic>p</italic> is present and <italic>q</italic> is absent (i.e., there exists <italic>i</italic> such that <italic>Y</italic>(<italic>i</italic>, <italic>p</italic>) = 1 and <italic>Y</italic>(<italic>i</italic>, <italic>q</italic>) = 0, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 1, 0) = 1), as well as cells where both <italic>p</italic> and <italic>q</italic> are present (i.e., there exists <italic>j</italic> such that <italic>Y</italic>(<italic>j</italic>, <italic>p</italic>) = 1 and <italic>Y</italic>(<italic>j</italic>, <italic>q</italic>) = 1, which is equivalent to <italic>B</italic>(<italic>p</italic>, <italic>q</italic>, 1, 1) = 1), then <italic>p</italic> must be the ancestor of <italic>q</italic> (i.e., <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1). In order to ensure this, for all pairs of mutations (<italic>p</italic>, <italic>q</italic>), we add the following constraints:
<disp-formula id="GR234435MALM30"><label>(30)</label><mml:math id="M30"><mml:mo>(</mml:mo><mml:mrow><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>B</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>⇒</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>∨</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item><list-item><label>e.</label><p>For some small user-defined error tolerance value <italic>δ</italic> &gt; 0 that accounts for variation in bulk sequencing coverage, if <inline-formula><mml:math id="il15"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>&gt;</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, then <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 0; in other words, for each pair of mutations <italic>p</italic> and <italic>q</italic> for which <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1, we must satisfy <inline-formula><mml:math id="il16"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>. In order to express this as a Boolean constraint, we introduce a new Boolean function <inline-formula><mml:math id="il17"><mml:mrow><mml:mi mathvariant="normal">Pvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> defined for all pairs of mutations <italic>p</italic> and <italic>q</italic> (as a part of the input specification) as follows:
<disp-formula id="GR234435MALM31"><label>(31)</label><mml:math id="M31"><mml:mrow><mml:mi mathvariant="normal">Pvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">otherwise</mml:mi></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula>
</p><p>Then, the constraint that must be satisfied for each pair of mutations <italic>p</italic> and <italic>q</italic> is
<disp-formula id="GR234435MALM32"><label>(32)</label><mml:math id="M32"><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⇒</mml:mo><mml:mrow><mml:mi mathvariant="normal">Pvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>If more than one sample from the same tumor with (independent) bulk sequencing data is available, we will have to satisfy the VAF constraints imposed by all of them. Specifically, let vaf<sub>ℓ</sub>(<italic>p</italic>) denote vaf(<italic>p</italic>) in sample ℓ. Then, for each pair of mutations <italic>p</italic> and <italic>q</italic>, <inline-formula><mml:math id="il18"><mml:mrow><mml:mi mathvariant="normal">Pvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> only if <inline-formula><mml:math id="il19"><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≥</mml:mo><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:math></inline-formula> for all samples ℓ, and <inline-formula><mml:math id="il20"><mml:mrow><mml:mi mathvariant="normal">Pvaf</mml:mi></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:math></inline-formula>, otherwise.</p></list-item><list-item><label>f.</label><p>For all triplets of mutations <italic>p</italic>, <italic>q</italic>, <italic>r</italic>, we must ensure that, if <italic>a</italic>(<italic>p</italic>, <italic>q</italic>) = 1 and <italic>a</italic>(<italic>q</italic>, <italic>r</italic>) = 1, then <italic>a</italic>(<italic>p</italic>, <italic>r</italic>) = 1
<disp-formula id="GR234435MALM33"><label>(33)</label><mml:math id="M33"><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>:</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>⇒</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p></list-item></list></p></list-item><list-item><label>3.</label><p>For all triplets of distinct mutations <italic>p</italic>, <italic>q</italic>, and <italic>r</italic> such that <italic>p</italic> is an ancestor of <italic>q</italic> and <italic>r</italic> but <italic>q</italic> and <italic>r</italic> do not have an ancestor-descendent relationship (i.e., they belong to different lineages in the tree), we must satisfy <inline-formula><mml:math id="il21"><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>. In order to express this as a Boolean constraint, we introduce yet another Boolean function Tvaf(<italic>p</italic>, <italic>q</italic>, <italic>r</italic>) defined for all triplets of mutations <italic>p</italic>, <italic>q</italic>, <italic>r</italic> (as a part of the input specification) as follows:
<disp-formula id="GR234435MALM34"><label>(34)</label><mml:math id="M34"><mml:mrow><mml:mi mathvariant="normal">Tvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">if</mml:mi><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mtext> </mml:mtext><mml:mi mathvariant="normal">otherwise</mml:mi></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula>
</p><p>Then, the constraint that must be satisfied for all mutations <italic>p</italic>, <italic>q</italic>, <italic>r</italic> is
<disp-formula id="GR234435MALM35"><label>(35)</label><mml:math id="M35"><mml:mo>[</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∧</mml:mo><mml:mi mathvariant="normal">¬</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo><mml:mo>⇒</mml:mo><mml:mrow><mml:mi mathvariant="normal">Tvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo></mml:math></disp-formula>
</p><p>If multiple samples from the same tumor with (independent) bulk sequencing data are available, we will have <inline-formula><mml:math id="il22"><mml:mrow><mml:mi mathvariant="normal">Tvaf</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> if <inline-formula><mml:math id="il23"><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≥</mml:mo><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:munder><mml:mrow><mml:mrow><mml:mi mathvariant="normal">vaf</mml:mi></mml:mrow></mml:mrow><mml:mi>ℓ</mml:mi></mml:munder><mml:mo>⁡</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:math></inline-formula> for all ℓ.</p></list-item></list></p>
    </sec>
    <sec id="s3f">
      <title>Software availability</title>
      <p>PhISCS is available at <uri xlink:href="https://github.com/sfu-compbio/PhISCS">https://github.com/sfu-compbio/PhISCS</uri> and as <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.234435.118/-/DC1">Supplemental Code</ext-link>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplemental Material</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_29_11_1860__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_gr.234435.118_Supplemental_Material.pdf"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="x-zip-compressed" xlink:href="supp_gr.234435.118_Supplemental_Code.zip"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>S.C.S. and I.H. thank the Algorithmic Challenges in Genomics program at Simons Institute in UC Berkeley which facilitated this collaboration. I.H. thanks David C. Danko for fruitful discussions on the formulations. This work was supported in part by Indiana University Grand Challenges Program Precision Health Initiative, NSERC Discovery Frontiers Grant, the Cancer Genome Collaboratory to S.C.S., and a Vanier Canada Graduate Scholarship to S.M. S.C. received a Mobility Exchange Fellowship, which allowed him to visit I.H.’s group at Weill Cornell. C.R. and D.S. were also supported by the Tri-Institutional Training Program in Computational Biology and Medicine (via NIH training grant 1T32GM083937). This work was also supported by start-up funds (Weill Cornell Medicine) and a U.S. National Science Foundation (NSF) grant under award number IIS-1840275 to I.H.</p>
    <p><italic>Author contributions:</italic> This research was jointly supervised by S.C.S. and I.H. The algorithmic approach was developed by S.M., I.H., and S.C.S. The simulated data were prepared by S.M. The comparative measures were developed by M.K.R., S.M., and S.C.S. The ILP and CSP implementations of PhISCS were developed by F.R.M., S.M., E.H., and S.C. Experimental results were obtained by F.R.M., S.M., E.H., D.S., M.K.R., F.H., and C.R. The manuscript was written by S.M., F.R.M., I.H., and S.C.S.</p>
  </ack>
  <fn-group>
    <fn fn-type="supplementary-material">
      <p>[Supplemental material is available for this article.]</p>
    </fn>
    <fn>
      <p>Article published online before print. Article, supplemental material, and publication date are at <ext-link ext-link-type="uri" xlink:href="http://www.genome.org/cgi/doi/10.1101/gr.234435.118">http://www.genome.org/cgi/doi/10.1101/gr.234435.118</ext-link>.</p>
    </fn>
    <fn>
      <p>Freely available online through the <italic>Genome Research</italic> Open Access option.</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>References</title>
    <ref id="GR234435MALC1">
      <mixed-citation publication-type="journal"><string-name><surname>Alizadeh</surname><given-names>AA</given-names></string-name>, <string-name><surname>Aranda</surname><given-names>V</given-names></string-name>, <string-name><surname>Bardelli</surname><given-names>A</given-names></string-name>, <string-name><surname>Blanpain</surname><given-names>C</given-names></string-name>, <string-name><surname>Bock</surname><given-names>C</given-names></string-name>, <string-name><surname>Borowski</surname><given-names>C</given-names></string-name>, <string-name><surname>Caldas</surname><given-names>C</given-names></string-name>, <string-name><surname>Califano</surname><given-names>A</given-names></string-name>, <string-name><surname>Doherty</surname><given-names>M</given-names></string-name>, <string-name><surname>Elsner</surname><given-names>M</given-names></string-name>, <etal/><year>2015</year><article-title>Toward understanding and exploiting tumor heterogeneity</article-title>. <source>Nat Med</source><volume>21</volume>: <fpage>846</fpage>–<lpage>853</lpage>. <pub-id pub-id-type="doi">10.1038/nm.3915</pub-id><pub-id pub-id-type="pmid">26248267</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC2">
      <mixed-citation publication-type="confproc"><string-name><surname>Alviano</surname><given-names>M</given-names></string-name>, <string-name><surname>Dodaro</surname><given-names>C</given-names></string-name>, <string-name><surname>Ricca</surname><given-names>F</given-names></string-name>. <year>2015</year><article-title>A MaxSAT algorithm using cardinality constraints of bounded size</article-title>. In <conf-name>Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence</conf-name>, pp. <fpage>2677</fpage>–<lpage>2683</lpage>. <publisher-loc>Buenos Aires</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC3">
      <mixed-citation publication-type="journal"><string-name><surname>Bonizzoni</surname><given-names>P</given-names></string-name>, <string-name><surname>Braghin</surname><given-names>C</given-names></string-name>, <string-name><surname>Dondi</surname><given-names>R</given-names></string-name>, <string-name><surname>Trucco</surname><given-names>G</given-names></string-name>. <year>2012</year><article-title>The binary perfect phylogeny with persistent characters</article-title>. <source>Theor Comput Sci</source><volume>454</volume>: <fpage>51</fpage>–<lpage>63</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcs.2012.05.035</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC4">
      <mixed-citation publication-type="confproc"><string-name><surname>Bonizzoni</surname><given-names>P</given-names></string-name>, <string-name><surname>Ciccolella</surname><given-names>S</given-names></string-name>, <string-name><surname>Della Vedova</surname><given-names>G</given-names></string-name>, <string-name><surname>Soto</surname><given-names>M</given-names></string-name>. <year>2017</year><article-title>Beyond perfect phylogeny: multisample phylogeny reconstruction via ILP</article-title>. In <conf-name>Proceedings of the Eighth ACM International Conference on Bioinformatics, Computational Biology, and Health Informatics</conf-name>, pp. <fpage>1</fpage>–<lpage>10</lpage>. <publisher-loc>New York</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC5">
      <mixed-citation publication-type="confproc"><string-name><surname>Chimani</surname><given-names>M</given-names></string-name>, <string-name><surname>Rahmann</surname><given-names>S</given-names></string-name>, <string-name><surname>Böcker</surname><given-names>S</given-names></string-name>. <year>2010</year><article-title>Exact ILP solutions for phylogenetic minimum ﬂip problems</article-title>. In <conf-name>Proceedings of the First ACM International Conference on Bioinformatics and Computational Biology</conf-name>, pp. <fpage>147</fpage>–<lpage>153</lpage>. <publisher-loc>Niagara Falls</publisher-loc>, <publisher-loc>NY</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC6">
      <mixed-citation publication-type="confproc"><string-name><surname>Davies</surname><given-names>J</given-names></string-name>, <string-name><surname>Bacchus</surname><given-names>F</given-names></string-name>. <year>2011</year><article-title>Solving MAXSAT by solving a sequence of simpler SAT instances</article-title>. In <conf-name>Proceedings, Principles and Practice of Constraint Programming - Seventeenth International Conference</conf-name>, pp. <fpage>225</fpage>–<lpage>239</lpage>. <publisher-loc>Perugia, Italy</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC7">
      <mixed-citation publication-type="confproc"><string-name><surname>Davies</surname><given-names>J</given-names></string-name>, <string-name><surname>Bacchus</surname><given-names>F</given-names></string-name>. <year>2013a</year><article-title>Exploiting the power of MIP solvers in MAXSAT</article-title>. In <conf-name>Theory and Applications of Satisfiability Testing - Sixteenth International Conference, Proceedings</conf-name>, pp. <fpage>166</fpage>–<lpage>181</lpage>. <publisher-loc>Helsinki, Finland</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC8">
      <mixed-citation publication-type="confproc"><string-name><surname>Davies</surname><given-names>J</given-names></string-name>, <string-name><surname>Bacchus</surname><given-names>F</given-names></string-name>. <year>2013b</year><article-title>Postponing optimization to speed up MAXSAT solving</article-title>. In <conf-name>Principles and Practice of Constraint Programming - 19th International Conference</conf-name>, pp. <fpage>247</fpage>–<lpage>262</lpage>. <publisher-loc>Uppsala</publisher-loc><conf-loc>.</conf-loc></mixed-citation>
    </ref>
    <ref id="GR234435MALC9">
      <mixed-citation publication-type="journal"><string-name><surname>Deshwar</surname><given-names>AG</given-names></string-name>, <string-name><surname>Vembu</surname><given-names>S</given-names></string-name>, <string-name><surname>Yung</surname><given-names>CK</given-names></string-name>, <string-name><surname>Jang</surname><given-names>GH</given-names></string-name>, <string-name><surname>Stein</surname><given-names>L</given-names></string-name>, <string-name><surname>Morris</surname><given-names>Q</given-names></string-name>. <year>2015</year><article-title>PhyloWGS: reconstructing subclonal composition and evolution from whole-genome sequencing of tumors</article-title>. <source>Genome Biol</source><volume>16</volume>: <fpage>35</fpage><pub-id pub-id-type="doi">10.1186/s13059-015-0602-8</pub-id><pub-id pub-id-type="pmid">25786235</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC10">
      <mixed-citation publication-type="journal"><string-name><surname>Donmez</surname><given-names>N</given-names></string-name>, <string-name><surname>Malikic</surname><given-names>S</given-names></string-name>, <string-name><surname>Wyatt</surname><given-names>AW</given-names></string-name>, <string-name><surname>Gleave</surname><given-names>ME</given-names></string-name>, <string-name><surname>Collins</surname><given-names>C</given-names></string-name>, <string-name><surname>Sahinalp</surname><given-names>SC</given-names></string-name>. <year>2017</year><article-title>Clonality inference from single tumor samples using low-coverage sequence data</article-title>. <source>J Comput Biol</source><volume>24</volume>: <fpage>515</fpage>–<lpage>523</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2016.0148</pub-id><pub-id pub-id-type="pmid">28056180</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC11">
      <mixed-citation publication-type="journal"><string-name><surname>El-Kebir</surname><given-names>M</given-names></string-name>, <string-name><surname>Oesper</surname><given-names>L</given-names></string-name>, <string-name><surname>Acheson-Field</surname><given-names>H</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>BJ</given-names></string-name>. <year>2015</year><article-title>Reconstruction of clonal trees and tumor composition from multi-sample sequencing data</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>i62</fpage>–<lpage>i70</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv261</pub-id><pub-id pub-id-type="pmid">26072510</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC12">
      <mixed-citation publication-type="journal"><string-name><surname>El-Kebir</surname><given-names>M</given-names></string-name>, <string-name><surname>Satas</surname><given-names>G</given-names></string-name>, <string-name><surname>Oesper</surname><given-names>L</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>BJ</given-names></string-name>. <year>2016</year><article-title>Inferring the mutational history of a tumor using multi-state perfect phylogeny mixtures</article-title>. <source>Cell Syst</source><volume>3</volume>: <fpage>43</fpage>–<lpage>53</lpage>. <pub-id pub-id-type="doi">10.1016/j.cels.2016.07.004</pub-id><pub-id pub-id-type="pmid">27467246</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC13">
      <mixed-citation publication-type="journal"><string-name><surname>Gawad</surname><given-names>C</given-names></string-name>, <string-name><surname>Koh</surname><given-names>W</given-names></string-name>, <string-name><surname>Quake</surname><given-names>SR</given-names></string-name>. <year>2014</year><article-title>Dissecting the clonal origins of childhood acute lymphoblastic leukemia by single-cell genomics</article-title>. <source>Proc Natl Acad Sci</source><volume>111</volume>: <fpage>17947</fpage>–<lpage>17952</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1420822111</pub-id><pub-id pub-id-type="pmid">25425670</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC14">
      <mixed-citation publication-type="journal"><string-name><surname>Goldberg</surname><given-names>LA</given-names></string-name>, <string-name><surname>Goldberg</surname><given-names>PW</given-names></string-name>, <string-name><surname>Phillips</surname><given-names>CA</given-names></string-name>, <string-name><surname>Sweedyk</surname><given-names>E</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>1996</year><article-title>Minimizing phylogenetic number to find good evolutionary trees</article-title>. <source>Discrete Appl Math</source><volume>71</volume>: <fpage>111</fpage>–<lpage>136</lpage>. <pub-id pub-id-type="doi">10.1016/S0166-218X(96)00060-1</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC15">
      <mixed-citation publication-type="confproc"><string-name><surname>Gusfield</surname><given-names>D</given-names></string-name>. <year>2015</year><article-title>Persistent phylogeny: a galled-tree and integer linear programming approach</article-title>. In <conf-name>Proceedings of the 6th ACM Conference on Bioinformatics, Computational Biology and Health Informatics</conf-name>, pp. <fpage>443</fpage>–<lpage>451</lpage>. <publisher-loc>New York</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC16">
      <mixed-citation publication-type="confproc"><string-name><surname>Gusfield</surname><given-names>D</given-names></string-name>, <string-name><surname>Frid</surname><given-names>Y</given-names></string-name>, <string-name><surname>Brown</surname><given-names>D</given-names></string-name>. <year>2007</year><article-title>Integer programming formulations and computations solving phylogenetic and population genetic problems with missing or genotypic data</article-title>. In <conf-name>Proceedings, 13th Annual International Computing and Combinatorics Conference</conf-name>, pp. <fpage>51</fpage>–<lpage>64</lpage>. <publisher-loc>Banff, Canada</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC17">
      <mixed-citation publication-type="journal"><string-name><surname>Hajirasouliha</surname><given-names>I</given-names></string-name>, <string-name><surname>Mahmoody</surname><given-names>A</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>BJ</given-names></string-name>. <year>2014</year><article-title>A combinatorial approach for analyzing intra-tumor heterogeneity from high-throughput sequencing data</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>i78</fpage>–<lpage>i86</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu284</pub-id><pub-id pub-id-type="pmid">24932008</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC18">
      <mixed-citation publication-type="journal"><string-name><surname>He</surname><given-names>D</given-names></string-name>, <string-name><surname>Choi</surname><given-names>A</given-names></string-name>, <string-name><surname>Pipatsrisawat</surname><given-names>K</given-names></string-name>, <string-name><surname>Darwiche</surname><given-names>A</given-names></string-name>, <string-name><surname>Eskin</surname><given-names>E</given-names></string-name>. <year>2010</year><article-title>Optimal algorithms for haplotype assembly from whole-genome sequence data</article-title>. <source>Bioinformatics</source><volume>26</volume>: <fpage>i183</fpage>–<lpage>i190</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq215</pub-id><pub-id pub-id-type="pmid">20529904</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC19">
      <mixed-citation publication-type="journal"><string-name><surname>Jahn</surname><given-names>K</given-names></string-name>, <string-name><surname>Kuipers</surname><given-names>J</given-names></string-name>, <string-name><surname>Beerenwinkel</surname><given-names>N</given-names></string-name>. <year>2016</year><article-title>Tree inference for single-cell data</article-title>. <source>Genome Biol</source><volume>17</volume>: <fpage>86</fpage><pub-id pub-id-type="doi">10.1186/s13059-016-0936-x</pub-id><pub-id pub-id-type="pmid">27149953</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC20">
      <mixed-citation publication-type="journal"><string-name><surname>Jiao</surname><given-names>W</given-names></string-name>, <string-name><surname>Vembu</surname><given-names>S</given-names></string-name>, <string-name><surname>Deshwar</surname><given-names>AG</given-names></string-name>, <string-name><surname>Stein</surname><given-names>L</given-names></string-name>, <string-name><surname>Morris</surname><given-names>Q</given-names></string-name>. <year>2014</year><article-title>Inferring clonal evolution of tumors from single nucleotide somatic mutations</article-title>. <source>BMC Bioinformatics</source><volume>15</volume>: <fpage>35</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-15-35</pub-id><pub-id pub-id-type="pmid">24484323</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC21">
      <mixed-citation publication-type="journal"><string-name><surname>Karpov</surname><given-names>N</given-names></string-name>, <string-name><surname>Malikic</surname><given-names>S</given-names></string-name>, <string-name><surname>Rahman</surname><given-names>MK</given-names></string-name>, <string-name><surname>Sahinalp</surname><given-names>SC</given-names></string-name>. <year>2019</year><article-title>A multi-labeled tree dissimilarity measure for comparing “clonal trees” of tumor progression</article-title>. <source>Algorithms Mol Biol</source><volume>14</volume>: <fpage>17</fpage><pub-id pub-id-type="doi">10.1186/s13015-019-0152-9</pub-id><pub-id pub-id-type="pmid">31372179</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC22">
      <mixed-citation publication-type="journal"><string-name><surname>Kuipers</surname><given-names>J</given-names></string-name>, <string-name><surname>Jahn</surname><given-names>K</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Beerenwinkel</surname><given-names>N</given-names></string-name>. <year>2017</year><article-title>Single-cell sequencing data reveal widespread recurrence and loss of mutational hits in the life histories of tumors</article-title>. <source>Genome Res</source><volume>27</volume>: <fpage>1885</fpage>–<lpage>1894</lpage>. <pub-id pub-id-type="doi">10.1101/gr.220707.117</pub-id><pub-id pub-id-type="pmid">29030470</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC23">
      <mixed-citation publication-type="journal"><string-name><surname>Leung</surname><given-names>ML</given-names></string-name>, <string-name><surname>Davis</surname><given-names>A</given-names></string-name>, <string-name><surname>Gao</surname><given-names>R</given-names></string-name>, <string-name><surname>Casasent</surname><given-names>A</given-names></string-name>, <string-name><surname>Wang</surname><given-names>Y</given-names></string-name>, <string-name><surname>Sei</surname><given-names>E</given-names></string-name>, <string-name><surname>Vilar</surname><given-names>E</given-names></string-name>, <string-name><surname>Maru</surname><given-names>D</given-names></string-name>, <string-name><surname>Kopetz</surname><given-names>S</given-names></string-name>, <string-name><surname>Navin</surname><given-names>NE</given-names></string-name>, <etal/><year>2017</year><article-title>Single-cell DNA sequencing reveals a late-dissemination model in metastatic colorectal cancer</article-title>. <source>Genome Res</source><volume>27</volume>: <fpage>1287</fpage>–<lpage>1299</lpage>. <pub-id pub-id-type="doi">10.1101/gr.209973.116</pub-id><pub-id pub-id-type="pmid">28546418</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC24">
      <mixed-citation publication-type="confproc"><string-name><surname>Lynce</surname><given-names>I</given-names></string-name>, <string-name><surname>Marques-Silva</surname><given-names>J</given-names></string-name>. <year>2006</year><article-title>Efficient haplotype inference with Boolean satisfiability</article-title>. In <conf-name>Proceedings of the Twenty-first AAAI Conference on Artificial Intelligence</conf-name>, Vol. 1, pp. 104–109. <publisher-loc>Boston</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC25">
      <mixed-citation publication-type="journal"><string-name><surname>Malikic</surname><given-names>S</given-names></string-name>, <string-name><surname>McPherson</surname><given-names>AW</given-names></string-name>, <string-name><surname>Donmez</surname><given-names>N</given-names></string-name>, <string-name><surname>Sahinalp</surname><given-names>SC</given-names></string-name>. <year>2015</year><article-title>Clonality inference in multiple tumor samples using phylogeny</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>1349</fpage>–<lpage>1356</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv003</pub-id><pub-id pub-id-type="pmid">25568283</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC26">
      <mixed-citation publication-type="journal"><string-name><surname>Malikic</surname><given-names>S</given-names></string-name>, <string-name><surname>Jahn</surname><given-names>K</given-names></string-name>, <string-name><surname>Kuipers</surname><given-names>J</given-names></string-name>, <string-name><surname>Sahinalp</surname><given-names>SC</given-names></string-name>, <string-name><surname>Beerenwinkel</surname><given-names>N</given-names></string-name>. <year>2019</year><article-title>Integrative inference of subclonal tumour evolution from single-cell and bulk sequencing data</article-title>. <source>Nat Commun</source><volume>10</volume>: <fpage>2750</fpage><pub-id pub-id-type="doi">10.1038/s41467-019-10737-5</pub-id><pub-id pub-id-type="pmid">31227714</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC27">
      <mixed-citation publication-type="journal"><string-name><surname>Marass</surname><given-names>F</given-names></string-name>, <string-name><surname>Mouliere</surname><given-names>F</given-names></string-name>, <string-name><surname>Yuan</surname><given-names>K</given-names></string-name>, <string-name><surname>Rosenfeld</surname><given-names>N</given-names></string-name>, <string-name><surname>Markowetz</surname><given-names>F</given-names></string-name>. <year>2016</year><article-title>A phylogenetic latent feature model for clonal deconvolution</article-title>. <source>Ann Appl Stat</source><volume>10</volume>: <fpage>2377</fpage>–<lpage>2404</lpage>. <pub-id pub-id-type="doi">10.1214/16-AOAS986</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC28">
      <mixed-citation publication-type="journal"><string-name><surname>Mori</surname><given-names>T</given-names></string-name>, <string-name><surname>Tamura</surname><given-names>T</given-names></string-name>, <string-name><surname>Fukagawa</surname><given-names>D</given-names></string-name>, <string-name><surname>Takasu</surname><given-names>E</given-names></string-name>, <string-name><surname>Tomita</surname><given-names>E</given-names></string-name>, <string-name><surname>Akutsu</surname><given-names>T</given-names></string-name>. <year>2012</year><article-title>A clique-based method using dynamic programming for computing edit distance between unordered trees</article-title>. <source>J Comput Biol</source><volume>19</volume>: <fpage>1089</fpage>–<lpage>1104</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2012.0133</pub-id><pub-id pub-id-type="pmid">23057820</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC29">
      <mixed-citation publication-type="journal"><string-name><surname>Neigenfind</surname><given-names>J</given-names></string-name>, <string-name><surname>Gyetvai</surname><given-names>G</given-names></string-name>, <string-name><surname>Basekow</surname><given-names>R</given-names></string-name>, <string-name><surname>Diehl</surname><given-names>S</given-names></string-name>, <string-name><surname>Achenbach</surname><given-names>U</given-names></string-name>, <string-name><surname>Gebhardt</surname><given-names>C</given-names></string-name>, <string-name><surname>Selbig</surname><given-names>J</given-names></string-name>, <string-name><surname>Kersten</surname><given-names>B</given-names></string-name>. <year>2008</year><article-title>Haplotype inference from unphased SNP data in heterozygous polyploids based on SAT</article-title>. <source>BMC Genomics</source><volume>9</volume>: <fpage>356</fpage><pub-id pub-id-type="doi">10.1186/1471-2164-9-356</pub-id><pub-id pub-id-type="pmid">18667059</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC30">
      <mixed-citation publication-type="journal"><string-name><surname>Popic</surname><given-names>V</given-names></string-name>, <string-name><surname>Salari</surname><given-names>R</given-names></string-name>, <string-name><surname>Hajirasouliha</surname><given-names>I</given-names></string-name>, <string-name><surname>Kashef-Haghighi</surname><given-names>D</given-names></string-name>, <string-name><surname>West</surname><given-names>RB</given-names></string-name>, <string-name><surname>Batzoglou</surname><given-names>S</given-names></string-name>. <year>2015</year><article-title>Fast and scalable inference of multi-sample cancer lineages</article-title>. <source>Genome Biol</source><volume>16</volume>: <fpage>91</fpage><pub-id pub-id-type="doi">10.1186/s13059-015-0647-8</pub-id><pub-id pub-id-type="pmid">25944252</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC31">
      <mixed-citation publication-type="journal"><string-name><surname>Ragan</surname><given-names>MA</given-names></string-name>. <year>1992</year><article-title>Phylogenetic inference based on matrix representation of trees</article-title>. <source>Mol Phylogenet Evol</source><volume>1</volume>: <fpage>53</fpage>–<lpage>58</lpage>. <pub-id pub-id-type="doi">10.1016/1055-7903(92)90035-F</pub-id><pub-id pub-id-type="pmid">1342924</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC32">
      <mixed-citation publication-type="journal"><string-name><surname>Ross</surname><given-names>EM</given-names></string-name>, <string-name><surname>Markowetz</surname><given-names>F</given-names></string-name>. <year>2016</year><article-title>OncoNEM: inferring tumor evolution from single-cell sequencing data</article-title>. <source>Genome Biol</source><volume>17</volume>: <fpage>69</fpage><pub-id pub-id-type="doi">10.1186/s13059-016-0929-9</pub-id><pub-id pub-id-type="pmid">27083415</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC33">
      <mixed-citation publication-type="journal"><string-name><surname>Roth</surname><given-names>A</given-names></string-name>, <string-name><surname>McPherson</surname><given-names>A</given-names></string-name>, <string-name><surname>Laks</surname><given-names>E</given-names></string-name>, <string-name><surname>Biele</surname><given-names>J</given-names></string-name>, <string-name><surname>Yap</surname><given-names>D</given-names></string-name>, <string-name><surname>Wan</surname><given-names>A</given-names></string-name>, <string-name><surname>Smith</surname><given-names>MA</given-names></string-name>, <string-name><surname>Nielsen</surname><given-names>CB</given-names></string-name>, <string-name><surname>McAlpine</surname><given-names>JN</given-names></string-name>, <string-name><surname>Aparicio</surname><given-names>S</given-names></string-name>, <etal/><year>2016</year><article-title>Clonal genotype and population structure inference from single-cell tumor sequencing</article-title>. <source>Nat Methods</source><volume>13</volume>: <fpage>573</fpage>–<lpage>576</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3867</pub-id><pub-id pub-id-type="pmid">27183439</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC34">
      <mixed-citation publication-type="journal"><string-name><surname>Salehi</surname><given-names>S</given-names></string-name>, <string-name><surname>Steif</surname><given-names>A</given-names></string-name>, <string-name><surname>Roth</surname><given-names>A</given-names></string-name>, <string-name><surname>Aparicio</surname><given-names>S</given-names></string-name>, <string-name><surname>Bouchard-Côté</surname><given-names>A</given-names></string-name>, <string-name><surname>Shah</surname><given-names>SP</given-names></string-name>. <year>2017</year><article-title>ddClone: joint statistical inference of clonal populations from single cell and bulk tumour sequencing data</article-title>. <source>Genome Biol</source><volume>18</volume>: <fpage>44</fpage><pub-id pub-id-type="doi">10.1186/s13059-017-1169-3</pub-id><pub-id pub-id-type="pmid">28249593</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC35">
      <mixed-citation publication-type="journal"><string-name><surname>Satas</surname><given-names>G</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>BJ</given-names></string-name>. <year>2017</year><article-title>Tumor phylogeny inference using tree-constrained importance sampling</article-title>. <source>Bioinformatics</source><volume>33</volume>: <fpage>i152</fpage>–<lpage>i160</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btx270</pub-id><pub-id pub-id-type="pmid">28882002</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC36">
      <mixed-citation publication-type="journal"><string-name><surname>Strino</surname><given-names>F</given-names></string-name>, <string-name><surname>Parisi</surname><given-names>F</given-names></string-name>, <string-name><surname>Micsinai</surname><given-names>M</given-names></string-name>, <string-name><surname>Kluger</surname><given-names>Y</given-names></string-name>. <year>2013</year><article-title>TrAp: a tree approach for fingerprinting subclonal tumor composition</article-title>. <source>Nucleic Acids Res</source><volume>41</volume>: <fpage>e165</fpage><pub-id pub-id-type="doi">10.1093/nar/gkt641</pub-id><pub-id pub-id-type="pmid">23892400</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC37">
      <mixed-citation publication-type="journal"><string-name><surname>Yuan</surname><given-names>K</given-names></string-name>, <string-name><surname>Sakoparnig</surname><given-names>T</given-names></string-name>, <string-name><surname>Markowetz</surname><given-names>F</given-names></string-name>, <string-name><surname>Beerenwinkel</surname><given-names>N</given-names></string-name>. <year>2015</year><article-title>BitPhylogeny: a probabilistic framework for reconstructing intra-tumor phylogenies</article-title>. <source>Genome Biol</source><volume>16</volume>: <fpage>36</fpage><pub-id pub-id-type="doi">10.1186/s13059-015-0592-6</pub-id><pub-id pub-id-type="pmid">25786108</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC38">
      <mixed-citation publication-type="journal"><string-name><surname>Zafar</surname><given-names>H</given-names></string-name>, <string-name><surname>Tzen</surname><given-names>A</given-names></string-name>, <string-name><surname>Navin</surname><given-names>N</given-names></string-name>, <string-name><surname>Chen</surname><given-names>K</given-names></string-name>, <string-name><surname>Nakhleh</surname><given-names>L</given-names></string-name>. <year>2017</year><article-title>SiFit: inferring tumor trees from single-cell sequencing data under finite-sites models</article-title>. <source>Genome Biol</source><volume>18</volume>: <fpage>178</fpage><pub-id pub-id-type="doi">10.1186/s13059-017-1311-2</pub-id><pub-id pub-id-type="pmid">28927434</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC39">
      <mixed-citation publication-type="journal"><string-name><surname>Zafar</surname><given-names>H</given-names></string-name>, <string-name><surname>Navin</surname><given-names>N</given-names></string-name>, <string-name><surname>Chen</surname><given-names>K</given-names></string-name>, <string-name><surname>Nakhleh</surname><given-names>L</given-names></string-name>. <year>2019</year><article-title>SiCloneFit: Bayesian inference of population structure, genotype, and phylogeny of tumor clones from single-cell genome sequencing data</article-title>. <source>Genome Res</source><comment>(this issue)</comment><pub-id pub-id-type="doi">10.1101/gr.243121.118</pub-id></mixed-citation>
    </ref>
    <ref id="GR234435MALC40">
      <mixed-citation publication-type="confproc"><string-name><surname>Zhang</surname><given-names>K</given-names></string-name>. <year>1993</year><article-title>A new editing based distance between unordered labeled trees</article-title>. In <conf-name>Proceedings, Annual Symposium on Combinatorial Pattern Matching</conf-name>, pp. <fpage>254</fpage>–<lpage>265</lpage>. <publisher-loc>Padua, Italy</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR234435MALC41">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>K</given-names></string-name>, <string-name><surname>Statman</surname><given-names>R</given-names></string-name>, <string-name><surname>Shasha</surname><given-names>D</given-names></string-name>. <year>1992</year><article-title>On the editing distance between unordered labeled trees</article-title>. <source>Inf Process Lett</source><volume>42</volume>: <fpage>133</fpage>–<lpage>139</lpage>. <pub-id pub-id-type="doi">10.1016/0020-0190(92)90136-J</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

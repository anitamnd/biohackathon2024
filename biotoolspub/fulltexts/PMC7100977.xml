<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput. Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7100977</article-id>
    <article-id pub-id-type="pmid">32182236</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-19-01042</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1007737</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Bioinformatics</subject>
            <subj-group>
              <subject>Sequence Analysis</subject>
              <subj-group>
                <subject>Sequence Alignment</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Genome Analysis</subject>
            <subj-group>
              <subject>Genomic Libraries</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Genome Analysis</subject>
              <subj-group>
                <subject>Genomic Libraries</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Human Genomics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Genome Analysis</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Genome Analysis</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Cognitive Science</subject>
            <subj-group>
              <subject>Cognition</subject>
              <subj-group>
                <subject>Memory</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Neuroscience</subject>
          <subj-group>
            <subject>Learning and Memory</subject>
            <subj-group>
              <subject>Memory</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Computational Techniques</subject>
          <subj-group>
            <subject>Split-Decomposition Method</subject>
            <subj-group>
              <subject>Multiple Alignment Calculation</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SVXplorer: Three-tier approach to identification of structural variants via sequential recombination of discordant cluster signatures</article-title>
      <alt-title alt-title-type="running-head">SVXplorer: identification of structural variants from discordant cluster signatures</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-1898-8769</contrib-id>
        <name>
          <surname>Kathuria</surname>
          <given-names>Kunal</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Writing – original draft</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0782-3056</contrib-id>
        <name>
          <surname>Ratan</surname>
          <given-names>Aakrosh</given-names>
        </name>
        <role content-type="http://credit.casrai.org/">Conceptualization</role>
        <role content-type="http://credit.casrai.org/">Methodology</role>
        <role content-type="http://credit.casrai.org/">Software</role>
        <role content-type="http://credit.casrai.org/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Center for Public Health Genomics, University of Virginia, Charlottesville, Virginia, United States of America</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Department of Public Health Sciences, University of Virginia, Charlottesville, Virginia, United States of America</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Ma</surname>
          <given-names>Jian</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Carnegie Mellon University, UNITED STATES</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>ratan@virginia.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>3</month>
      <year>2020</year>
    </pub-date>
    <volume>16</volume>
    <issue>3</issue>
    <elocation-id>e1007737</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>6</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>2</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2020 Kathuria, Ratan</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Kathuria, Ratan</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pcbi.1007737.pdf"/>
    <abstract>
      <p>The identification of structural variants using short-read data remains challenging. Most approaches that use discordant paired-end sequences ignore non-trivial signatures presented by variants containing 3 breakpoints, such as those generated by various copy-paste and cut-paste mechanisms. This can result in lower precision and sensitivity in the identification of the more common structural variants such as deletions and duplications. We present SVXplorer, which uses a graph-based clustering approach streamlined by the integration of non-trivial signatures from discordant paired-end alignments, split-reads and read depth information to improve upon existing methods. We show that SVXplorer is more sensitive and precise compared to several existing approaches on multiple real and simulated datasets. SVXplorer is available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/kunalkathuria/SVXplorer">https://github.com/kunalkathuria/SVXplorer</ext-link>.</p>
    </abstract>
    <abstract abstract-type="summary">
      <title>Author summary</title>
      <p>Structural variants (SVs) that include duplications, deletions and inversions of large blocks of DNA sequence account for the greatest share of total nucleotide differences between individuals. Most methods to identify SVs focus on deletions, duplications, and inversions which can be identified by the integration of information from coverage and insert length of aligned reads around the breakpoints. These methods either ignore signatures from other non-trivial rearrangements or represent them as a set of novel adjacencies (breakends) in the output to be processed separately. Here, we show that precise accounting of such signatures and using improved methods for clustering and variant filtering markedly enhance the precision and sensitivity of SV calls such as deletions and duplications, and allow for detection of several other categories of SVs.</p>
    </abstract>
    <funding-group>
      <award-group id="award001">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P30CA044579</award-id>
      </award-group>
      <funding-statement>This work was supported by NIH award [P30CA044579] to the UVA Cancer Center. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="5"/>
      <table-count count="6"/>
      <page-count count="23"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>PLOS Publication Stage</meta-name>
        <meta-value>vor-update-to-uncorrected-proof</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>Publication Update</meta-name>
        <meta-value>2020-03-27</meta-value>
      </custom-meta>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>The CHM1 dataset used to benchmark SVXplorer is available from the Short read archive (accession no. ERR1341794). The NA12878 datasets used to benchmark SVXplorer are available from the Short read archive (accession nos. ERR194147, SRR505885). The fastq files for HG002, HG003, HG004 are available from <ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio</ext-link>. The VCF files of the variant calls made by the different methods for these datasets can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.3634028">https://doi.org/10.5281/zenodo.3634028</ext-link>.</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>The CHM1 dataset used to benchmark SVXplorer is available from the Short read archive (accession no. ERR1341794). The NA12878 datasets used to benchmark SVXplorer are available from the Short read archive (accession nos. ERR194147, SRR505885). The fastq files for HG002, HG003, HG004 are available from <ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio</ext-link>. The VCF files of the variant calls made by the different methods for these datasets can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.3634028">https://doi.org/10.5281/zenodo.3634028</ext-link>.</p>
  </notes>
</front>
<body>
  <disp-quote>
    <p>This is a <italic>PLOS Computational Biology</italic> Methods paper.</p>
  </disp-quote>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>Structural variants (SVs), which include regions of genomic imbalances called copy number variants (CNVs) and balanced rearrangements such as inversions, account for the majority of varying bases in the human genome [<xref rid="pcbi.1007737.ref001" ref-type="bibr">1</xref>]. SVs are more common in regions with segmental duplications and have been associated with phenotypes ranging from sensory perception [<xref rid="pcbi.1007737.ref002" ref-type="bibr">2</xref>] to genomic disorders such as the velocardiofacial [<xref rid="pcbi.1007737.ref003" ref-type="bibr">3</xref>] and Smith-Margenis syndromes [<xref rid="pcbi.1007737.ref004" ref-type="bibr">4</xref>]. The discovery and genotyping of these variants remain challenging due to their proximity to repeats, limitations of the alignment algorithms, large non-Gaussian spread in insert size, and the short read lengths typically used in sequencing.</p>
    <p>More than 40 short-read SV callers have been published since 2010 [<xref rid="pcbi.1007737.ref005" ref-type="bibr">5</xref>]. SV identification from short-reads relies on detecting changes in read-depth (RD), clusters of discordantly aligned paired-end (PE) reads or split reads (SR), or <italic>de novo</italic> genome assembly. Earlier methods were developed to harness evidence from one of these sources, but more recent methods such as LUMPY [<xref rid="pcbi.1007737.ref006" ref-type="bibr">6</xref>], TIDDIT [<xref rid="pcbi.1007737.ref007" ref-type="bibr">7</xref>], and TARDIS [<xref rid="pcbi.1007737.ref008" ref-type="bibr">8</xref>] integrate multiple sources and typically outperform earlier methods [<xref rid="pcbi.1007737.ref005" ref-type="bibr">5</xref>]. Despite these developments, SV callers have varying accuracy for different classes of SVs, and most of them employ specifically designed heuristics for the identification of specific SV types [<xref rid="pcbi.1007737.ref009" ref-type="bibr">9</xref>–<xref rid="pcbi.1007737.ref011" ref-type="bibr">11</xref>]. Most of them focus on the detection of signatures of individual SV types, often ignoring 3-breakpoint SVs and their signatures. However, ignoring those signatures often leads to incorrect identification or annotation of common SVs such as deletions, duplications, and inversions. For example, in <xref ref-type="fig" rid="pcbi.1007737.g001">Fig 1</xref>, ignoring the overlap of signatures from the copy-paste insertion leads to identification of incorrect breakpoints or the wrong SV type in the region. Even if read-depth is used to discover the duplicated segment, such calls will be filtered away by the caller if it considers discordant read-pairs, but does not account for overlaps of the discordant pairs.</p>
    <fig id="pcbi.1007737.g001" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.g001</object-id>
      <label>Fig 1</label>
      <caption>
        <title>Duplication breakpoints.</title>
        <p>The breakpoints of the duplicated segment might be incorrectly identified as shown by the light orange segment at the bottom, if the overlap of signatures from an insertion via ‘copy-paste’ are ignored. If read-depth filters do catch the false calls, the caller would miss the variant entirely as shown in the simulations.</p>
      </caption>
      <graphic xlink:href="pcbi.1007737.g001"/>
    </fig>
    <p>Transposable elements represent the majority of large insertions in the human genome, and specialized methods have been developed to detect them [<xref rid="pcbi.1007737.ref012" ref-type="bibr">12</xref>, <xref rid="pcbi.1007737.ref013" ref-type="bibr">13</xref>]. These methods are required to handle the repetitive nature of these elements, which arise due to repeated copy-and-paste operations through target-primed reverse transcription (TPRT) [<xref rid="pcbi.1007737.ref014" ref-type="bibr">14</xref>]. But even when these transposable elements are not identified accurately, probabilistic models that do not account for them end up with a large number of false-positive as well as false-negative SV calls [<xref rid="pcbi.1007737.ref015" ref-type="bibr">15</xref>]. Analysis of the inversion calls from the 1000 genomes project [<xref rid="pcbi.1007737.ref016" ref-type="bibr">16</xref>] highlights the importance of joint identification of all calls in SV detection. As discussed in Soylev et al. [<xref rid="pcbi.1007737.ref015" ref-type="bibr">15</xref>], 54% of the predicted inversions reported in the 1000 Genomes project are inverted duplications that are incorrectly identified by callers which do not consider overlapping evidence from discordant pairs and do not call the SV events simultaneously.</p>
    <p>We have developed SVXplorer, which uses an efficient, comprehensive 3-tier approach of sequentially using discordant paired-end (PE) alignment, split-read (SR) alignment and read-depth (RD) information to identify multiple SV types while progressively weeding out unlikely candidates. Using a combination of probabilistic and combinatorial approaches, SVXplorer shows marked improvement in comparison to several other popular SV callers on both simulated and real human datasets. It uses Bayesian inference to calculate the probability that two aligned fragments support the same variant based on a precise binning of sampled insert length values. This posterior probability is scaled and used as an edge-weight in a maximal-clique-enumeration framework that is similar to CLEVER [<xref rid="pcbi.1007737.ref017" ref-type="bibr">17</xref>]. Another unique feature of SVXplorer is its exhaustive analysis of cluster signatures to group clusters into two-breakpoint variants (e.g. inversions) and three-breakpoint variants (e.g. copy- and cut- paste insertions) for both PE and SR. SVXplorer implements this progressive variant formation by first combining existing PE clusters appropriately into variants, updating these variants by incorporating SR signatures as seen in each PE variant region, and grouping the remaining clusters of SR alignments into new 2- and 3- breakpoint variants. The signatures considered by SVXplorer include the ones for copy-paste and cut-paste insertion mechanisms (including inverted transcriptions), inversions, tandem duplications and other variants for varying cluster sizes as explained in the following sections.</p>
    <p>SVXplorer dynamically calculates PE and SR alignment-support thresholds based on the sequencing read-depth rather than requiring a fixed number of supporting reads for all data-sets. It also corroborates SVs using local read-depth information from mappable and regionally reliable bases. SVXplorer’s general approach to SV-calling is to ensure a precise treatment at all levels, as shown by its handling of PE and SR inversions (see <xref ref-type="sec" rid="sec002">Results</xref>), as an example. The inclusion of these features in SVXplorer has demonstrated an improvement in the precision and sensitivity of calls for the common SV types over several other SV-callers. First, it exhibits superior performance for simulated data designed to compare various aspects of SV calling for all the tools, and particularly in the assessment of SVs arising from three-breakpoint insertion events. On data from two different libraries sequenced from the same cell line (NA12878) and the CHM1 haploid cell line, SVXplorer outperforms other methods in comparison to calls made using longer PacBio reads or using an ensemble caller. It also shows “highest” self-consistency for the two NA12878 libraries (though the consistency numbers across callers are not directly comparable as will be explained). With the same caveat, in sequences from a family trio, SVXplorer exhibits the “highest” fraction of calls that are shared between the child and the biological parents, while similarly identifying the “lowest” fraction of calls in the child that are not found in either of the parents. Among the methods that are compared, it also shows the highest agreement with an ensemble-based truth set for the child. Before moving onto following sections, the reader may find it helpful to read definitions/explanation of terminology used in the manuscript given at the beginning of the Methods section.</p>
  </sec>
  <sec sec-type="results" id="sec002">
    <title>Results</title>
    <p>We compared SVXplorer (v0.0.4) to the following other structural variant callers: LUMPY (v0.2.11) [<xref rid="pcbi.1007737.ref006" ref-type="bibr">6</xref>], DELLY2 (v0.7.7) [<xref rid="pcbi.1007737.ref018" ref-type="bibr">18</xref>], MANTA (v1.6.0) [<xref rid="pcbi.1007737.ref019" ref-type="bibr">19</xref>], TIDDIT (v2.8.1) [<xref rid="pcbi.1007737.ref007" ref-type="bibr">7</xref>] and TARDIS (v1.0.6) [<xref rid="pcbi.1007737.ref008" ref-type="bibr">8</xref>]. These methods have been used in several large-scale studies including the 1000 Genomes Project, use more than one sources of evidence, and have been shown to be an improvement over most existing tools. We compared their performance to that of SVXplorer on both simulated and real human datasets.</p>
    <p>LUMPY was run using the defaults in the ‘lumpy_express’ script with the exception of the ‘-x’ option which was used to supply a BED file of regions to be excluded from the analyses. These included regions with abnormally high coverage, the mitochondrial genome, the decoy genome and the genome of the Epstein-Barr virus (EBV) [<xref rid="pcbi.1007737.ref006" ref-type="bibr">6</xref>]. The detected SVs were then genotyped using SVTyper [<xref rid="pcbi.1007737.ref020" ref-type="bibr">20</xref>] and the calls were filtered to keep ones with at least one alternate allele. This genotyping improved the precision of calls made by LUMPY substantially. DELLY2 was run using the same parameters as used in Layer et al. (mapping quality threshold: 1, minimum support: 4) [<xref rid="pcbi.1007737.ref006" ref-type="bibr">6</xref>] and an additional BED file with known gaps in the human genome was provided to avoid spurious calls in those regions. MANTA was run using with the default mapping-quality (MQ) threshold and minimum support of 10 and 4 respectively, as in [<xref rid="pcbi.1007737.ref019" ref-type="bibr">19</xref>]. It was provided the same BED file as LUMPY to exclude regions that generate unreliable calls. TIDDIT was run using default specifications, and TARDIS was run with defaults in non-sensitive mode without mrFast realignment with the appropriate SONIC file. SVXplorer was run with its default parameter set using discordant paired-end (PE) alignments with mapping quality ≥ 1 and split-read (SR) alignments with mapping quality ≥ 10. SVXplorer was provided the same exclusion file as LUMPY, along with a BED file of mappable regions. For all tools, only the variants larger than 100 bps were kept for subsequent analyses and evaluation. These specifications were chosen for best overall performance on the human genome for each caller. None of the parameters were changed for any of the callers for any data set, except that no exclude file (or mappable regions file for SVXplorer) was used in processing of simulated datasets. Furthermore, TARDIS was run with ‘--no-interdup’ option for simulated datasets to avoid interspersed duplication clustering, as interspersed duplications were not simulated in this study.</p>
    <p>There are significant differences in how the various methods report their calls in the output VCF file. LUMPY, DELLY, and MANTA do not identify 3-breakpoint events, and annotate the SVTYPE tag for each of the detected SVs with one of DUP (duplication), DEL(deletion), INV(inversion) and BND(breakend). TIDDIT annotates tandem-duplications as TDUP, and other duplication events are annotated as DUP. For duplication events such as those arising via copy-paste as shown in <xref ref-type="supplementary-material" rid="pcbi.1007737.s004">S3 Fig</xref>, TIDDIT records adjacencies between (a) x1 and x2, and (b) between x1 and x3, as BND events. For events arising via cut-paste insertions as shown in <xref ref-type="supplementary-material" rid="pcbi.1007737.s005">S4 Fig</xref>, it records an additional breakend adjacency between x2 and x3. TARDIS annotates duplications with a DUP:TANDEM for tandem duplications and a DUP:ISP for an interspersed duplication. TARDIS also annotates deletions as either DEL:ME for mobile-element deletions, and DEL for other deletion events. TARDIS does not output any breakend events but it uses the observed adjacencies to annotate the SVs as belonging to different variant classes. Our method, SVXplorer, records the adjacencies of <xref ref-type="supplementary-material" rid="pcbi.1007737.s004">S3 Fig</xref> as BND events between x1 and x2, and between x1 and x3 similar to TIDDIT. However, it records an additional DUP event in the VCF file between x2 and x3, and reports all 3 events successively in the output VCF unified by a common GROUPID tag. Cut-paste insertions are handled identically except that a DEL is recorded in the VCF file between x2 and x3 instead of a DUP. SVXplorer is the only tool that groups all detected events arising from 3-breakpoint insertions together, clearly identifying the source and the destination. TARDIS is the only other tool besides SVXplorer that annotates the source region of an insertion with the appropriate SV type.</p>
    <sec id="sec003">
      <title>Simulated data</title>
      <p>We first ran a haploid simulation wherein RSVSim [<xref rid="pcbi.1007737.ref021" ref-type="bibr">21</xref>] was used to simulate 2,000 deletions, 1,000 tandem-duplications, 200 inversions, 200 copy-paste insertions and 100 cut-paste insertions, each of sizes ranging uniformly at random from 100-10,000 bps in the human reference genome (GRCh37+decoy), placing breakpoints with a bias towards repeat regions and regions of high homology. We then simulated 100 bp Illumina paired-end sequences using wgsim (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>) with a specified mean insert length of 350 and standard deviation of 50, to an average coverage of 50X, and aligned them against the reference genome using BWA mem [<xref rid="pcbi.1007737.ref022" ref-type="bibr">22</xref>]. All the SV callers were then run on this dataset, and the results were converted to the BEDPE format. The variants were compared to the true breakpoints using BEDTools [<xref rid="pcbi.1007737.ref023" ref-type="bibr">23</xref>] ‘pairToPair’ allowing a tolerance of 200 bps.</p>
      <p>With this simulation, we wanted to compare the methods in their ability to detect common SV types: deletions, duplications and inversions. For SVXplorer, we included calls that were tagged as DUP as duplications, and calls that were tagged as DEL as deletions. For TIDDIT, variants tagged as DUP or TDUP were considered as duplications, and variants tagged as DEL were considered in deletions. For TARDIS, variants tagged as DUP:TANDEM and DUP:ISP were included as duplications, whereas variants tagged as DEL or DEL:ME were included as deletions. For DELLY, MANTA, and LUMPY we considered all variants that were tagged as DUP or DEL in these assessments. We would also like to point out that both SVXplorer and TARDIS can detect and report on inverted duplications, but we did not include them in these comparisons as they are not currently supported by RSVSim, and the other approaches do not detect them.</p>
      <p>We then computed the sensitivity and precision in each variant category. The same simulation was repeated at coverages ranging from 2X to 48X in steps of 2X to assess how well the callers perform with varying sequenced information. The relative performance for all callers based on sensitivity of the calls is shown in <xref ref-type="fig" rid="pcbi.1007737.g002">Fig 2</xref>. SVXplorer has the highest sensitivity for deletions and duplications at all depths of coverage that were investigated. TARDIS and TIDDIT have the highest sensitivity for inversions closely followed by MANTA, SVXplorer and DELLY. The default specifications for SVXplorer are conservatively aimed at real data and they mandate that an inversion not be called unless evidence is seen at both ends of the variant in a stringent assessment (see Methods/<xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for more details). In fact, as we show with real datasets, the number of inversion calls made by SVXplorer and LUMPY relative to other variants for real datasets are fewer, and much more in line with what is identified via long-read sequencing or ensembl calling. TARDIS was the only caller that called a high number of false-positive duplications and inversions (<xref ref-type="supplementary-material" rid="pcbi.1007737.s011">S10 Fig</xref>) for this simulated dataset. This false-positive rate for TARDIS can be significantly lowered by manual selection of parameters at each coverage. Two parameters, ‘--rp’ which is used to select the minimum number of supporting read pairs in initial clustering, and ‘--read-cluster’, which is used to select the number of clusters that a particular read can belong to, have a significant effect on the number of false-positive calls for TARDIS.</p>
      <fig id="pcbi.1007737.g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>Simulation sensitivity.</title>
          <p>SVXplorer is more sensitive overall compared to the other approaches even at relatively low genome coverage, as assessed using this simulated dataset.</p>
        </caption>
        <graphic xlink:href="pcbi.1007737.g002"/>
      </fig>
      <p>Even though TIDDIT, TARDIS, and SVXplorer can detect 3-breakpoint variants including translocations and interspersed duplications, they report these calls differently from each other. Most importantly, TIDDIT and TARDIS do not group the 2-breakpoint calls arising from 3-breakpoint insertions together like SVXplorer. TARDIS does not output all adjacencies, which makes it difficult to evaluate in comparison with SVXplorer and TIDDIT. It identifies the source location of the cut- or copy-paste insertion (and sometimes the corresponding insertion location as an “INS:ME” event). It also has a “POS2” field to identify the paste location for “DUP:ISP” calls, but it was always listed as being on the same chromosome (even for inter-chromosomal events) and not observed to be correct for the simulated variants. The reason for this is that TARDIS is designed to identify pre-annotated repeat elements in the human genome whereas the simulation places variants randomly throughout the genome. So we ran another simulation where we compared SVXplorer and TIDDIT for their ability to correctly detect cut- and copy-paste insertions. Again, we used RSVSim to generate an altered haploid target consisting of 1000 cut-paste and 1000 copy-paste insertions distributed throughout the genome with a bias towards repeat regions. The source region size of the insertion ranged uniformly from 100–100, 000 bps. The read simulation and alignment details as well as the stepwise simulated coverage were identical to Simulation 1. All tools were run in regular mode without any additional files or parameters. For this simulation, SVXplorer took 43 minutes and TIDDIT took 181 minutes to detect these variants at 50-fold coverage.</p>
      <p>For evaluation, we considered that TIDDIT and SVXplorer recorded a true positive insertion when all 3 breakpoints were identified via BND adjacencies. BND events identifying some but not all of the 3 breakpoints were counted neither as true positive insertions nor false positives. Other SV types were also not counted as false positives if they correctly identified the 2 source region breakpoints (e.g. a deletion recorded for the source region of a cut-paste). All other calls counted as false positives. A slop of 300 was used for breakpoint evaluation due to the more complex nature of 3-breakpoint insertion calls. The plot of performance with respect to varying coverage is given in <xref ref-type="supplementary-material" rid="pcbi.1007737.s012">S11 Fig</xref>, which shows that at all coverages SVXplorer exhibits a higher sensitivity compared to TIDDIT for this dataset. SVXplorer also makes the advance over other tools of effectively unifying all adjacencies arising from a 3-breakpoint variant into a single SV call.</p>
    </sec>
    <sec id="sec004">
      <title>Real data</title>
      <p>We next applied SVXplorer along with the other callers to several real human sequencing datasets to evaluate its relative effectiveness under different conditions. Build 37 of the human genome (GRCh37+decoy) was used as the reference for all datasets. For predictive power, the callers were either evaluated against calls made using PacBio long reads, or those made using ensemble approaches such as Parliament [<xref rid="pcbi.1007737.ref024" ref-type="bibr">24</xref>]. Sensitivity, precision and F1 score were computed for all callers after removing calls less than 100 bps from both the call set and the truth set. A call in the “truth” set that overlaps a predicted call within a slop of 200 bps is defined as a true positive. Deletions were evaluated using events labelled as “DEL” in the VCF file for LUMPY, MANTA, DELLY, TIDDIT and SVXplorer. For TARDIS, we included the variants annotated as DEL or DEL:ME. Wherever possible, an assessment was made as to the self-consistency of calls made by each caller for related samples (different libraries or related individuals). The VCF files of variant calls made for these data can be downloaded from Zenodo (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.3634028">https://doi.org/10.5281/zenodo.3634028</ext-link>).</p>
      <sec id="sec005">
        <title>SVXplorer has high precision and sensitivity on CHM1 deletions</title>
        <p>Performance was first evaluated on the CHM1 cell line, derived from a human haploid hydatidiform mole. We downloaded 40X coverage 2x100 bp Illumina WGS reads from the ENA short read archive (ENA accessions ERR1341794) and realigned it to the b37+decoy genome using BWA mem. We used the comprehensive set of structural variant calls released by Chaisson et al. [<xref rid="pcbi.1007737.ref025" ref-type="bibr">25</xref>] that are publicly available at <ext-link ext-link-type="uri" xlink:href="http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation">http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation</ext-link> as the truth set for this analysis. As we show in <xref rid="pcbi.1007737.t001" ref-type="table">Table 1</xref>, SVXplorer outperforms the other methods in precision and F1 score in the identification of deletions. TARDIS has the highest sensitivity, followed by SVXplorer.</p>
        <table-wrap id="pcbi.1007737.t001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t001</object-id>
          <label>Table 1</label>
          <caption>
            <title>Comparison of the various approaches based on CHM1 deletions.</title>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007737.t001g" xlink:href="pcbi.1007737.t001"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1"/>
                  <th align="left" rowspan="1" colspan="1">SVXplorer</th>
                  <th align="left" rowspan="1" colspan="1">LUMPY</th>
                  <th align="left" rowspan="1" colspan="1">DELLY</th>
                  <th align="left" rowspan="1" colspan="1">MANTA</th>
                  <th align="left" rowspan="1" colspan="1">TIDDIT</th>
                  <th align="left" rowspan="1" colspan="1">TARDIS</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Calls</td>
                  <td align="left" rowspan="1" colspan="1">1759</td>
                  <td align="left" rowspan="1" colspan="1">1804</td>
                  <td align="left" rowspan="1" colspan="1">1116</td>
                  <td align="left" rowspan="1" colspan="1">1585</td>
                  <td align="left" rowspan="1" colspan="1">1386</td>
                  <td align="left" rowspan="1" colspan="1">3739</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">True-positives</td>
                  <td align="left" rowspan="1" colspan="1">1219</td>
                  <td align="left" rowspan="1" colspan="1">1174</td>
                  <td align="left" rowspan="1" colspan="1">397</td>
                  <td align="left" rowspan="1" colspan="1">958</td>
                  <td align="left" rowspan="1" colspan="1">852</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>1265</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Sensitivity</td>
                  <td align="left" rowspan="1" colspan="1">27.3</td>
                  <td align="left" rowspan="1" colspan="1">26.3</td>
                  <td align="left" rowspan="1" colspan="1">8.9</td>
                  <td align="left" rowspan="1" colspan="1">21.5</td>
                  <td align="left" rowspan="1" colspan="1">19.1</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>28.3</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Precision</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>69.9</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">65.0</td>
                  <td align="left" rowspan="1" colspan="1">35.5</td>
                  <td align="left" rowspan="1" colspan="1">60.4</td>
                  <td align="left" rowspan="1" colspan="1">61.5</td>
                  <td align="left" rowspan="1" colspan="1">33.8</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">F1-score</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>39.3</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">37.5</td>
                  <td align="left" rowspan="1" colspan="1">14.2</td>
                  <td align="left" rowspan="1" colspan="1">31.7</td>
                  <td align="left" rowspan="1" colspan="1">29.1</td>
                  <td align="left" rowspan="1" colspan="1">30.8</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t001fn001">
              <p>The “best” result for each metric is highlighted in bold.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>The truth set available for inversions had very few calls (33) to establish statistical significance in comparison across the different callers. Additionally, insertions are difficult to compare faithfully for sensitivity and precision because many callers classify them as generic breakend (BND) events. An enrichment analysis of the false-positive deletion made by SVXplorer using LOLA [<xref rid="pcbi.1007737.ref026" ref-type="bibr">26</xref>] against the UCSC genomic features database using a 1000 bps genomic segments as the background shows enrichment of regions covered by segmental duplications (OddsRatio: 1.47), CNVs in coriell cell line (OddsRatio: 1.4), LaminB1 Lads (OddsRatio: 1.27), nested repeats (OddsRatio: 1.06), and repeat masked regions (OddsRatio: 1.17). However, we would like to point out that 478 of the false-positives identified by SVXplorer are also called by LUMPY, 330 of them are also called by DELLY, and 431 of them are also called identified by MANTA and these calls be indicative of the limitations of short-read sequencing in determination of SV calls. <xref ref-type="fig" rid="pcbi.1007737.g003">Fig 3</xref> shows the size distribution of deletions detected by SVXplorer, and we compare the F1 score of the various callers for the various sizes of deletions. Using the default parameters, DELLY does not identify small deletions less than 250 bps in this sample, and SVXplorer is consistently among the best callers for all strata in this dataset. We also show the size of the duplications and inversions detected by SVXplorer for this sample in <xref ref-type="supplementary-material" rid="pcbi.1007737.s013">S12 Fig</xref>.</p>
        <fig id="pcbi.1007737.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>Size of detected deletions.</title>
            <p>(A) The size of deletions in CHM1 detected by SVXplorer. (B) Comparison of the SV callers based on F1 score for various deletion size intervals.</p>
          </caption>
          <graphic xlink:href="pcbi.1007737.g003"/>
        </fig>
      </sec>
      <sec id="sec006">
        <title>SVXplorer achieves high self-consistency among multiple libraries</title>
        <p>We next applied SVXplorer to two separate libraries for the well studied NA12878 cell line (accession numbers: ERR194147 and SRR505885) along with the other callers. The callers were evaluated for deletion calls against calls made using PacBio long reads that passed quality filters. We downloaded the calls made on the pacbio dataset from <ext-link ext-link-type="ftp" xlink:href="ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/NA12878/NA12878_PacBio_MtSinai">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/NA12878/NA12878_PacBio_MtSinai</ext-link>. The callset was made using 7 different SV callers, and the calls made by at least 3 callers were considered to pass all quality filters. For both libraries SVXplorer exhibits better performance characteristics compared to other callers. The results are shown in <xref rid="pcbi.1007737.t002" ref-type="table">Table 2</xref>.</p>
        <table-wrap id="pcbi.1007737.t002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t002</object-id>
          <label>Table 2</label>
          <caption>
            <title>Comparison of deletion calls made by the various methods for NA12878.</title>
            <p>The “best” result for each metric is highlighted in bold.</p>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007737.t002g" xlink:href="pcbi.1007737.t002"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1">Library</th>
                  <th align="left" rowspan="1" colspan="1"/>
                  <th align="left" rowspan="1" colspan="1">SVXplorer</th>
                  <th align="left" rowspan="1" colspan="1">LUMPY</th>
                  <th align="left" rowspan="1" colspan="1">DELLY</th>
                  <th align="left" rowspan="1" colspan="1">MANTA</th>
                  <th align="left" rowspan="1" colspan="1">TIDDIT</th>
                  <th align="left" rowspan="1" colspan="1">TARDIS</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="5" colspan="1">ERR194147</td>
                  <td align="left" rowspan="1" colspan="1">Calls</td>
                  <td align="left" rowspan="1" colspan="1">2724</td>
                  <td align="left" rowspan="1" colspan="1">2607</td>
                  <td align="left" rowspan="1" colspan="1">2407</td>
                  <td align="left" rowspan="1" colspan="1">2935</td>
                  <td align="left" rowspan="1" colspan="1">2264</td>
                  <td align="left" rowspan="1" colspan="1">2611</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">True-positives</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>2401</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">2274</td>
                  <td align="left" rowspan="1" colspan="1">1867</td>
                  <td align="left" rowspan="1" colspan="1">2202</td>
                  <td align="left" rowspan="1" colspan="1">1874</td>
                  <td align="left" rowspan="1" colspan="1">2211</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Sensitivity</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>64.9</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">61.5</td>
                  <td align="left" rowspan="1" colspan="1">50.5</td>
                  <td align="left" rowspan="1" colspan="1">59.6</td>
                  <td align="left" rowspan="1" colspan="1">50.7</td>
                  <td align="left" rowspan="1" colspan="1">59.8</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Precision</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>88.6</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">87.2</td>
                  <td align="left" rowspan="1" colspan="1">77.5</td>
                  <td align="left" rowspan="1" colspan="1">75.1</td>
                  <td align="left" rowspan="1" colspan="1">82.8</td>
                  <td align="left" rowspan="1" colspan="1">84.7</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">F1-score</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>74.9</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">72.1</td>
                  <td align="left" rowspan="1" colspan="1">61.2</td>
                  <td align="left" rowspan="1" colspan="1">66.4</td>
                  <td align="left" rowspan="1" colspan="1">62.9</td>
                  <td align="left" rowspan="1" colspan="1">70.1</td>
                </tr>
                <tr>
                  <td align="left" rowspan="5" colspan="1">SRR505885</td>
                  <td align="left" rowspan="1" colspan="1">Calls</td>
                  <td align="left" rowspan="1" colspan="1">3141</td>
                  <td align="left" rowspan="1" colspan="1">3439</td>
                  <td align="left" rowspan="1" colspan="1">2253</td>
                  <td align="left" rowspan="1" colspan="1">2520</td>
                  <td align="left" rowspan="1" colspan="1">2628</td>
                  <td align="left" rowspan="1" colspan="1">4187</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">True-positives</td>
                  <td align="left" rowspan="1" colspan="1">2541</td>
                  <td align="left" rowspan="1" colspan="1">2624</td>
                  <td align="left" rowspan="1" colspan="1">1719</td>
                  <td align="left" rowspan="1" colspan="1">2037</td>
                  <td align="left" rowspan="1" colspan="1">2161</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>2712</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Sensitivity</td>
                  <td align="left" rowspan="1" colspan="1">68.7</td>
                  <td align="left" rowspan="1" colspan="1">71.0</td>
                  <td align="left" rowspan="1" colspan="1">46.5</td>
                  <td align="left" rowspan="1" colspan="1">55.1</td>
                  <td align="left" rowspan="1" colspan="1">58.4</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>73.3</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Precision</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>80.7</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">76.2</td>
                  <td align="left" rowspan="1" colspan="1">76.2</td>
                  <td align="left" rowspan="1" colspan="1">80.8</td>
                  <td align="left" rowspan="1" colspan="1">82.2</td>
                  <td align="left" rowspan="1" colspan="1">64.8</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">F1-score</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>74.2</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">73.4</td>
                  <td align="left" rowspan="1" colspan="1">57.7</td>
                  <td align="left" rowspan="1" colspan="1">65.5</td>
                  <td align="left" rowspan="1" colspan="1">68.3</td>
                  <td align="left" rowspan="1" colspan="1">68.8</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
        </table-wrap>
        <p>In addition, performance curves for sensitivity and precision with varying coverage were generated for all callers for the ERR194147 library against the PacBio deletion truth set. SVXplorer shows the highest sensitivity and precision even at lower coverage compared to the other callers (<xref ref-type="fig" rid="pcbi.1007737.g004">Fig 4</xref>). The performance curves for SRR505885 are shown in <xref ref-type="supplementary-material" rid="pcbi.1007737.s014">S13 Fig</xref>. SVXplorer has the highest F1 score compared to the other tools included in this study at all coverages that were sampled. We again show the distribution of sizes of deletion detected by SVXplorer for the ERR194147 library in <xref ref-type="supplementary-material" rid="pcbi.1007737.s015">S14 Fig</xref>.</p>
        <fig id="pcbi.1007737.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>Sensitivity and precision vs coverage for ERR194147.</title>
          </caption>
          <graphic xlink:href="pcbi.1007737.g004"/>
        </fig>
        <p>Even though each library and subsequent short-read sequencing represents an independent experiment, it was natural to assess the concordance of the callers for the two experiments, considering that the data is from the same sample. We asked the question: “What percentage of calls made by each caller for one library were <italic>found</italic> in the other library”? We acknowledge that the results from such a comparison are fraught with caveats, and should not be considered in isolation. For example, a caller could repeat a systematic error and detect a variant in both experiments resulting in higher concordance. Alternatively, it could call a variant resourcefully by using sparse information in one experiment but miss it altogether in the other due to sparser information, resulting in an unfair penalty. However, we believe that this assessment provides an additional metric beyond sensitivity, precision and F1 scores that can be used to understand the differences between the various methods. Many different approaches can be used to evaluate this “reproducibility” between the experiments, and we have chosen a liberal approach to assess it in this study.</p>
        <p>We take the final call-set of one library (called the “base library”) and compute its overlap with a call set including all unfiltered and ungenotyped SVs for the other library (termed the “liberal library”), allowing a slop of 200 bps between the detected breakpoints. For all tools, the final call set comprises of variants that passed all filters, and whose genotype was not homozygous/unknown for the reference if genotyping was implemented. The liberal library for all tools comprises calls either not labelled as “PASS” or with a genotype string of “0/0” or “./.” This is because we are interested in knowing whether a variant called in one sample presents reasonable evidence of being seen in the other sample, given various discrepancies and artifacts in fragmentation, sequencing and alignment. We perform the test with the caveat that the different callers may not be directly compared with each other, as the cluster support thresholds, mapping thresholds, the sheer volume of unfiltered calls, and clustering algorithms are all very different across the various callers. LUMPY, MANTA and DELLY all identify 2-breakpoint variants only, i.e., an “FR” cluster becomes a deletion candidate and an “RF” cluster becomes a duplication candidate. This is true for simple deletions and tandem duplications, but not when clusters with these signatures arrive from cut- or copy-paste insertions. To at least have the same framework as the other callers, SVXplorer’s self-consistency comparison is done at the cluster level (prior to integrated-variant formation). Essentially, all its PE and SR clusters that pass filters in the base library are compared to all PE and SR clusters in the other library (with “FR” clusters or equivalents termed “deletions” and “RF” clusters or equivalents termed “duplications” for uniformity across tools).</p>
        <p>In other words, the collection of all 2-breakpoint clusters of any read orientation arising from PE reads, and all 2-breakpoint clusters arising from split reads are considered for comparison in each library. Clusters in the base library must belong to variants that passed disjointness and read-depth filters in subsequent stages. This collection of clusters is searched for in the liberal collection of the other library containing all unfiltered clusters. A base cluster must match read orientation and overlap within breakpoint slop with another cluster in the liberal collection to be counted as concordant. SVXplorer uses an intermediate file in its workspace called “variants.pe_sr.unfiltered.bedpe” to create the liberal cluster collection. BND events were not assessed in this comparison due to the potential uncertainty in the nature of such events, and hence in their reproducibility. Naturally, due to these differing frameworks, TIDDIT and TARDIS (the other two callers capturing 3-breakpoint events) could not be included in this self-consistency analysis. Since cluster-level information is not available for these tools to the authors it is not possible to provide them a similar framework as the other callers. For example, TIDDIT uses BND events to report adjacencies arising from its 3-breakpoint-variant calls. No tag is provided to separate these BND events from BND events unrelated to 3-breakpoint variants, thus rendering the task of extracting a set of clusters for TIDDIT similar to that of the other tools impossible.</p>
        <p><xref ref-type="fig" rid="pcbi.1007737.g005">Fig 5A</xref> shows the overall normalized self consistency for the four callers. We show plots for each of the three common SV types along with calls by category for each caller in <xref ref-type="supplementary-material" rid="pcbi.1007737.s016">S15 Fig</xref>. All callers perform reasonably, as expected. SVXplorer shows high overall consistency in all categories, though of course, the callers are not directly comparable. As alluded to before, the average number of inversions called for the two libraries was 50 for SVXplorer, 30 for LUMPY, 350 for MANTA and 599 for DELLY. SVXplorer and LUMPY are much more in line with expectation compared to DELLY and MANTA for the called inversions [<xref rid="pcbi.1007737.ref016" ref-type="bibr">16</xref>].</p>
        <fig id="pcbi.1007737.g005" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.g005</object-id>
          <label>Fig 5</label>
          <caption>
            <title>Self-consistency for NA12878.</title>
            <p>(A) Normalized self-consistency comparison for the various approaches. This quantity is obtained by weighing the SV-type self-consistency given in <xref ref-type="supplementary-material" rid="pcbi.1007737.s016">S15 Fig</xref> by number of each SV type. (B) Integrated-variant self-consistency for SVXplorer.</p>
          </caption>
          <graphic xlink:href="pcbi.1007737.g005"/>
        </fig>
        <p>We also evaluated the integrated-variant self-consistency for 3-breakpoint variants (cut- and copy-paste insertions) for NA12878 using SVXplorer and we report it in <xref ref-type="fig" rid="pcbi.1007737.g005">Fig 5B</xref>. The 2-breakpoint source location of all insertion calls made by SVXplorer (cut-paste and copy-paste) was extracted for one library and checked for simple overlap with an “FR” or “RF” cluster, or an integrated-variant source location of the unfiltered call set of the other library (see subsection on “NA12878 integrated-variant self-consistency” in the present section in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for details). This check simply supports the correctness of the observed breakpoints of the 3-breakpoint variant for a given library via evidence of similar breakpoints seen for the other library. The overlap rate being very close to 100% in most cases substantiates that the variants are not products of artefacts in data but real SVs.</p>
      </sec>
      <sec id="sec007">
        <title>SVXplorer exhibits high self-consistency in a trio setting</title>
        <p>We next evaluated the performance of SVXplorer on the data from the AJ trio sequenced as part of the Genome in a Bottle (GIAB) effort. We downloaded the fastq files for samples HG002, HG003, HG004 from <ext-link ext-link-type="uri" xlink:href="http://ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio">ftp://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio</ext-link>. The reads were aligned against the b37+decoy human reference using BWA to a coverage of 25<italic>X</italic> coverage per sample. In general, trio analysis is also useful in testing result reproducibility and accuracy, i.e., we expect that all variants in the child should also be found in the parents and that there must be more variants shared between the child and one of the parents as compared to those shared between both parents. Noting that now we have different related individuals for assessing reproducibility instead of different experiments on the same individual, self-consistency was evaluated identically to NA12878 with the same caveats for all tools. The child’s final calls are treated as analagous to the final call-set of the base library and each unfiltered/ungenotyped call-set of the 2 parents is analogous to the call set of the liberal library. AJ trio self-consistency for the various callers is shown in <xref rid="pcbi.1007737.t003" ref-type="table">Table 3</xref>. SVXplorer again has clear, high consistency in every category in this analysis—in terms of difference between calls shared between parents and those between child and either parent, in terms of calls found in child but not in either parent, and in terms of raw overlap of calls between child and parent. Please refer to the present section in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> and <xref ref-type="supplementary-material" rid="pcbi.1007737.s017">S16 Fig</xref> for more details.</p>
        <table-wrap id="pcbi.1007737.t003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t003</object-id>
          <label>Table 3</label>
          <caption>
            <title>AJ trio self-consistency.</title>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007737.t003g" xlink:href="pcbi.1007737.t003"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1">SV type</th>
                  <th align="left" rowspan="1" colspan="1">Approach</th>
                  <th align="left" rowspan="1" colspan="1">Calls</th>
                  <th align="left" rowspan="1" colspan="1">C-F</th>
                  <th align="left" rowspan="1" colspan="1">C-M</th>
                  <th align="left" rowspan="1" colspan="1">Not in M/F</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="4" colspan="1">Deletion</td>
                  <td align="left" rowspan="1" colspan="1">SVXplorer</td>
                  <td align="left" rowspan="1" colspan="1">2483</td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.76</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.79</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.036</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">LUMPY</td>
                  <td align="left" rowspan="1" colspan="1">2448</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.75</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.77</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.046</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">MANTA</td>
                  <td align="left" rowspan="1" colspan="1">2807</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.68</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.70</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.115</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">DELLY</td>
                  <td align="left" rowspan="1" colspan="1">1312</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.68</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.69</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.097</td>
                </tr>
                <tr>
                  <td align="left" rowspan="4" colspan="1">Duplication</td>
                  <td align="left" rowspan="1" colspan="1">SVXplorer</td>
                  <td align="left" rowspan="1" colspan="1">320</td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.69</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.7</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.103</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">LUMPY</td>
                  <td align="left" rowspan="1" colspan="1">315</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.64</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.66</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.146</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">MANTA</td>
                  <td align="left" rowspan="1" colspan="1">234</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.62</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.58</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.184</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">DELLY</td>
                  <td align="left" rowspan="1" colspan="1">495</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.62</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.59</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.186</td>
                </tr>
                <tr>
                  <td align="left" rowspan="4" colspan="1">Inversion</td>
                  <td align="left" rowspan="1" colspan="1">SVXplorer</td>
                  <td align="left" rowspan="1" colspan="1">46</td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.76</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.78</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>0.065</bold>
                  </td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">LUMPY</td>
                  <td align="left" rowspan="1" colspan="1">35</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.74</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.74</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.114</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">MANTA</td>
                  <td align="left" rowspan="1" colspan="1">292</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.62</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.66</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.151</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">DELLY</td>
                  <td align="left" rowspan="1" colspan="1">578</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.71</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.71</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.118</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t003fn001">
              <p>“C-F” refers to the overlap between calls of child and father for each SV category as a fraction of child’s total calls (first column), “C-M” to the same between child and mother, and the last column shows the fraction of the child’s calls that were not seen in either parent. The “best” result for each metric is highlighted in bold.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>We also evaluated the deletion calls for HG002 against an available truth set generated using an ensemble approach in Parliament [<xref rid="pcbi.1007737.ref024" ref-type="bibr">24</xref>], and show the results from that comparison in <xref rid="pcbi.1007737.t004" ref-type="table">Table 4</xref>. SVXplorer consistently outperforms the other callers in sensitivity, precision and F1 score. This certainly lends further credence to the substantiality of SVXplorer’s self-consistency results above. As a note, the standard deviation in insert length distribution is greater than 400 base pairs for all three data-sets.</p>
        <table-wrap id="pcbi.1007737.t004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t004</object-id>
          <label>Table 4</label>
          <caption>
            <title>Performance of deletion calls for HG002.</title>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007737.t004g" xlink:href="pcbi.1007737.t004"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1"/>
                  <th align="left" rowspan="1" colspan="1">SVXplorer</th>
                  <th align="left" rowspan="1" colspan="1">LUMPY</th>
                  <th align="left" rowspan="1" colspan="1">DELLY</th>
                  <th align="left" rowspan="1" colspan="1">MANTA</th>
                  <th align="left" rowspan="1" colspan="1">TIDDIT</th>
                  <th align="left" rowspan="1" colspan="1">TARDIS</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Calls</td>
                  <td align="left" rowspan="1" colspan="1">2478</td>
                  <td align="left" rowspan="1" colspan="1">2448</td>
                  <td align="left" rowspan="1" colspan="1">1312</td>
                  <td align="left" rowspan="1" colspan="1">2807</td>
                  <td align="left" rowspan="1" colspan="1">1958</td>
                  <td align="left" rowspan="1" colspan="1">1175</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">True-positives</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>2057</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">1969</td>
                  <td align="left" rowspan="1" colspan="1">795</td>
                  <td align="left" rowspan="1" colspan="1">2051</td>
                  <td align="left" rowspan="1" colspan="1">1605</td>
                  <td align="left" rowspan="1" colspan="1">940</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Sensitivity</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>61.2</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">58.6</td>
                  <td align="left" rowspan="1" colspan="1">23.7</td>
                  <td align="left" rowspan="1" colspan="1">61.06</td>
                  <td align="left" rowspan="1" colspan="1">47.8</td>
                  <td align="left" rowspan="1" colspan="1">28.0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Precision</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>83.2</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">80.4</td>
                  <td align="left" rowspan="1" colspan="1">60.6</td>
                  <td align="left" rowspan="1" colspan="1">73.12</td>
                  <td align="left" rowspan="1" colspan="1">82.0</td>
                  <td align="left" rowspan="1" colspan="1">80.0</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">F1-score</td>
                  <td align="left" rowspan="1" colspan="1">
                    <bold>70.6</bold>
                  </td>
                  <td align="left" rowspan="1" colspan="1">67.8</td>
                  <td align="left" rowspan="1" colspan="1">34.0</td>
                  <td align="left" rowspan="1" colspan="1">66.54</td>
                  <td align="left" rowspan="1" colspan="1">60.4</td>
                  <td align="left" rowspan="1" colspan="1">41.5</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t004fn001">
              <p>The “best” result for each metric is highlighted in bold</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec id="sec008">
        <title>Benchmarking of 3-breakpoint variants</title>
        <p>We detected 185 cut- and copy-paste insertions in the child that passed all filters. Of those, 174 were non-inverted copy-paste insertions, 9 were cut-paste insertions with confirmed breakpoint order, and 2 were inverted copy-paste insertions. We used this dataset to evaluate SVXplorer’s performance on these insertion calls. We compared the call made for the child to calls made for each parent, and to a callset that contained the union of the calls from both parents. A true positive was registered when all breakpoints and the exact SV type of the child’s insertion call overlapped and agreed with the SV type of a call in the parent callset within a slop of 300 bps. A false negative was called if a call in the parent callset did not meet the above criteria. All calls in the child’s callset that were not true positives were recorded as false positives.</p>
        <p>The parents’ callsets consisted of all 3-breakpoint variant calls tagged as cut-paste insertions with known breakpoint order or as copy-paste insertions that passed all filters. The results of this assessment are shown in <xref rid="pcbi.1007737.t005" ref-type="table">Table 5</xref>. SVXplorer achieves about 45% or greater precision in comparisons against one parent, and close to 50% sensitivity in this evaluation. This is significant, given the novelty of such an attempt to benchmark 3-breakpoint variants, the low coverage of the AJ Trio dataset and the large insert-length spread seen in these data. The precision of the calls against the combined data further increases to 72% if we include BND calls from the parents that are tagged as most likely being cut-paste or copy-paste insertions (a “PROBTYPE” field in the VCF is listed for BND events). Please see Supplementary Results in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for more details on this analysis.</p>
        <table-wrap id="pcbi.1007737.t005" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t005</object-id>
          <label>Table 5</label>
          <caption>
            <title>SVXplorer’s performance of 3-breakpoint variant calls.</title>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007737.t005g" xlink:href="pcbi.1007737.t005"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="left" rowspan="1" colspan="1"/>
                  <th align="left" rowspan="1" colspan="1">Total calls</th>
                  <th align="left" rowspan="1" colspan="1">Child Calls</th>
                  <th align="left" rowspan="1" colspan="1">Overlap</th>
                  <th align="left" rowspan="1" colspan="1">Sensitivity</th>
                  <th align="left" rowspan="1" colspan="1">Precision</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Father</td>
                  <td align="left" rowspan="1" colspan="1">183</td>
                  <td align="left" rowspan="1" colspan="1">185</td>
                  <td align="left" rowspan="1" colspan="1">90</td>
                  <td align="char" char="." rowspan="1" colspan="1">49.2</td>
                  <td align="char" char="." rowspan="1" colspan="1">48.6</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Mother</td>
                  <td align="left" rowspan="1" colspan="1">184</td>
                  <td align="left" rowspan="1" colspan="1">185</td>
                  <td align="left" rowspan="1" colspan="1">83</td>
                  <td align="char" char="." rowspan="1" colspan="1">45.1</td>
                  <td align="char" char="." rowspan="1" colspan="1">44.9</td>
                </tr>
                <tr>
                  <td align="left" rowspan="1" colspan="1">Combined</td>
                  <td align="left" rowspan="1" colspan="1">367</td>
                  <td align="left" rowspan="1" colspan="1">185</td>
                  <td align="left" rowspan="1" colspan="1">118</td>
                  <td align="char" char="." rowspan="1" colspan="1">46.0</td>
                  <td align="char" char="." rowspan="1" colspan="1">63.8</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t005fn001">
              <p>The child’s cut and copy insertion calls are evaluated against the parents’ in 3 different assessments. Overlap is defined as the number of calls in child where all 3 insertion breakpoints agree with a call in the parent call-set within a slop of 300 base pairs and share exactly the same SV type. Sensitivity and precision are evaluated for the child with the parent call-set acting as ground truth.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec009">
    <title>Discussion</title>
    <p>We have developed a structural variant caller that shows improvement over existing approaches on simulated variants and real datasets (haploid and diploid samples). It produces more consistent calls for related individuals as well as for different libraries for the same individual, compared to several other callers. It outperforms compared callers in precision as well as sensitivity, particularly when the coverage is lower or the insert length distribution is variable. Unlike most other SV callers, SVXplorer registers deletions and duplications arising from 3-breakpoint variants like translocations and copy-paste insertions, improving the precision of CNVs in the process.</p>
    <p><xref rid="pcbi.1007737.t006" ref-type="table">Table 6</xref> shows a comparison of the total user time and peak memory usage for the callers used in this study for three representative datasets. Among the methods that are capable of detection of 3-breakpoint events, SVXplorer uses memory comparable to TIDDIT and is significantly faster compared to both TIDDIT and TARDIS. There are several reasons for SVXplorer’s overall effectiveness and better performance. One significant reason is its probabilistic cluster formation algorithm that uses the insert length distribution via a precise, global binning to characterize the likelihood of two fragments belonging to the same variant in the sample, and is based on both the insert length difference and the alignment distance between the fragments. Another significant reason for better performance is its progressive recombination of clusters with specified signatures to form two- and three-breakpoint integrated variants, which does not call individual clusters as variants until it has exhausted all predefined possibilities of signature matches. Most callers that rely on paired-end signatures annotate RF clusters as evidence for a duplication and FR clusters as evidence of deletion. This can be tricky, just as one example, in the case of breakpoints generated by retrotransposons that can ‘copy and paste’ their genetic code around the genome. The signature of such calls from discordant reads is the overlap of 1 RF and 1 FR cluster. Without cluster consolidation, a putative deletion and duplication in the region would be marked with incorrect breakpoints (<xref ref-type="fig" rid="pcbi.1007737.g001">Fig 1</xref>). If read-depth filters are reliable, no variant would be called in the region. Although a robust truth set for duplications and translocations for real data was not found, we showed that even in simulations sensitivity was significantly compromised for other callers in such regions. And if the read-depth filters were less reliable (as is the case in real data) and the putative deletion or duplication were called with incorrect breakpoints, the sensitivity and precision of calls arising in these regions would both decrease.</p>
    <table-wrap id="pcbi.1007737.t006" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pcbi.1007737.t006</object-id>
      <label>Table 6</label>
      <caption>
        <title>Total CPU time and peak memory usage for the various methods.</title>
      </caption>
      <alternatives>
        <graphic id="pcbi.1007737.t006g" xlink:href="pcbi.1007737.t006"/>
        <table frame="box" rules="all" border="0">
          <colgroup span="1">
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Dataset</th>
              <th align="left" rowspan="1" colspan="1">Method</th>
              <th align="left" rowspan="1" colspan="1">CPU time (minutes)</th>
              <th align="left" rowspan="1" colspan="1">Peak memory usage (GB)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="6" colspan="1">Simulation (50X)</td>
              <td align="left" rowspan="1" colspan="1">SVXplorer</td>
              <td align="char" char="." rowspan="1" colspan="1">25.20</td>
              <td align="char" char="." rowspan="1" colspan="1">1.25</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">MANTA</td>
              <td align="char" char="." rowspan="1" colspan="1">91.58</td>
              <td align="char" char="." rowspan="1" colspan="1">0.10</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">LUMPY</td>
              <td align="char" char="." rowspan="1" colspan="1">9.91</td>
              <td align="char" char="." rowspan="1" colspan="1">1.07</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">DELLY</td>
              <td align="char" char="." rowspan="1" colspan="1">160.57</td>
              <td align="char" char="." rowspan="1" colspan="1">0.30</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TIDDIT</td>
              <td align="char" char="." rowspan="1" colspan="1">106.60</td>
              <td align="char" char="." rowspan="1" colspan="1">3.57</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TARDIS</td>
              <td align="char" char="." rowspan="1" colspan="1">108.59</td>
              <td align="char" char="." rowspan="1" colspan="1">8.72</td>
            </tr>
            <tr>
              <td align="left" rowspan="6" colspan="1">ERR1341794 (40X)</td>
              <td align="left" rowspan="1" colspan="1">SVXplorer</td>
              <td align="char" char="." rowspan="1" colspan="1">63.12</td>
              <td align="char" char="." rowspan="1" colspan="1">3.36</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">MANTA</td>
              <td align="char" char="." rowspan="1" colspan="1">425.63</td>
              <td align="char" char="." rowspan="1" colspan="1">0.26</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">LUMPY</td>
              <td align="char" char="." rowspan="1" colspan="1">159.55</td>
              <td align="char" char="." rowspan="1" colspan="1">3.10</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">DELLY</td>
              <td align="char" char="." rowspan="1" colspan="1">839.45</td>
              <td align="char" char="." rowspan="1" colspan="1">1.34</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TIDDIT</td>
              <td align="char" char="." rowspan="1" colspan="1">123.34</td>
              <td align="char" char="." rowspan="1" colspan="1">3.59</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TARDIS</td>
              <td align="char" char="." rowspan="1" colspan="1">157.16</td>
              <td align="char" char="." rowspan="1" colspan="1">9.45</td>
            </tr>
            <tr>
              <td align="left" rowspan="6" colspan="1">CHM1 (40X)</td>
              <td align="left" rowspan="1" colspan="1">SVXplorer</td>
              <td align="char" char="." rowspan="1" colspan="1">80.98</td>
              <td align="char" char="." rowspan="1" colspan="1">4.43</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">MANTA</td>
              <td align="char" char="." rowspan="1" colspan="1">833.26</td>
              <td align="char" char="." rowspan="1" colspan="1">0.21</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">LUMPY</td>
              <td align="char" char="." rowspan="1" colspan="1">193.59</td>
              <td align="char" char="." rowspan="1" colspan="1">5.28</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">DELLY</td>
              <td align="char" char="." rowspan="1" colspan="1">766.44</td>
              <td align="char" char="." rowspan="1" colspan="1">0.99</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TIDDIT</td>
              <td align="char" char="." rowspan="1" colspan="1">142.12</td>
              <td align="char" char="." rowspan="1" colspan="1">3.59</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">TARDIS</td>
              <td align="char" char="." rowspan="1" colspan="1">891.72</td>
              <td align="char" char="." rowspan="1" colspan="1">12.07</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
    </table-wrap>
    <p>For SVXplorer, if reads aligning to the “copy” (source) and “paste” locations have reasonably high mapping quality (a minimum of 20 is required for both sides of an RF alignment-pair), the concern of these alignments coming from repeated genomic regions is much less. Even if the source region of the insertion had low mappability, the question of “where” the insertion came from is a moot one in the presence of such identical regions in the genome. Further, of similar clusters, the largest one containing the most number of continuous alignments is typically picked by SVXplorer. The efficacy of such insertion calls by SVXplorer has been demonstrated as best as possible using repeat bias in simulated insertions, self-consistency of clusters comprising insertions assessed in two different sequencing libraries, and via its integrated-variant self-consistency. SVXplorer’s comprehensive consolidation for insertions arising through ‘cut and paste’ and ‘copy and paste’ mechanisms, inversions, and even tandem duplications enhance its putative call set by reducing false positives among deletions and tandem duplications while identifying accurate, complete insertion sites. Both PE and SR alignments are used individually and collectively to exhaustively form all putative integrated variants with specific signatures. For example, a cut-paste insertion requires at least 3 supporting clusters of specified signature (<xref ref-type="supplementary-material" rid="pcbi.1007737.s005">S4 Fig</xref>), which may be read in any order, containing either inverted or non-inverted alignments, and which therefore need to be carefully handled to finally form the 3-breakpoint cut-paste variant. All support thresholds (which are dynamic and coverage-based) and filtering are applied not to individual clusters but to integrated variant blocks. Read-depth filtering is applied to streamline these calls further with enhanced features, such as the use of only mappable regions to calculate local coverage and ignoring regions deemed otherwise unreliable in the variant. Zero-mapping-quality alignments are also systematically ignored in read-depth analysis.</p>
    <p>SVXplorer exhibits an increase in sensitivity and precision in comparison to the other approaches for multiple datasets, even though the improvement can appear marginal in some cases. But even if the improvement is marginal in terms of metrics such as sensitivity, the differences between the methods based on breakpoints and their overlaps can be significant. For example in the CHM1 dataset, only 1597 of the 1759 deletion calls made by SVXplorer overlapped calls made by LUMPY. Of the 162 calls (10%) unique to SVXplorer, 101 of them overlap the truth set within a slop of 200 bps. Similarly, for LUMPY, 41 of the 207 calls unique to it are true-positives using a slop of 200 bps. Several enhancements to SVXplorer (and this line of research) can be envisioned that would improve its utility and performance. First, SVXplorer does not have an explicit mechanism to identify insertions and deletions smaller than both the insert-length standard deviation and the lowest primary alignment length for the SV. Another area of improvement for SVXplorer is in the handling of multi-allelic variants. For example, a deletion and a duplication with similar reference breakpoints may not be called by SVXplorer as it could be annotated as a copy-number invariant region in the final filter. Such variants, however, can be identified in a family trio by post-processing the identified variants. The current version of SVXplorer does not model biases in sequencing, relying on a careful examination of read-depth instead. However future versions should be able to incorporate better models of read-depth using single-position models, speeding up the execution of the approach further.</p>
    <p>Future research can also build on SVXplorer’s methodology to precisely model 3-breakpoint variant signatures stemming from copy-paste and cut-paste insertions, and inverted transcriptions, in real data presenting complicated alignments and possibly confounding signatures. Simulations of the human genome with such artificially inserted events can be done to corroborate these models. Several callers could then come up with ensemble truth sets for human non-tandem duplications, which are quite sparse at the moment. One could also characterize more precisely the nature, frequency, size distribution etc. of these duplications and translocations in a healthy genome, and progressively use these findings to aid in classification of diseases associated with atypical genomic rearrangements.</p>
  </sec>
  <sec sec-type="materials|methods" id="sec010">
    <title>Methods</title>
    <p>SVXplorer requires a coordinate-sorted BAM file generated by aligning Illumina paired-end reads belonging to a single read-group against a reference genome as input. It calculates the coverage and insert length distributions from this BAM file, and groups the fragments that are marked as discordant by the aligner into sets we refer to as clusters. All fragments in a cluster are required to have the same relative orientation of their constituent reads after alignment, and are selected so as to support the same putative variant. It then tests if the clusters can be further grouped into integrated variants such as inversions and translocations based on breakpoint overlap and their combined signature. Split-read evidence from the BAM is then incorporated, both to support existing variants and to create variants that were not captured using the discordant paired-end reads. SVXplorer then processes the variants to remove calls that could be caused due to errors in sequencing or alignment. Finally, read-depth information is added to all the variants and used to further filter the set of calls. In case of multiple read-groups as observed in several datasets, SVXplorer should be run on each one of them separately. We now describe each of these steps in detail.</p>
    <p>For clarity, we first define a few terms that are used in the subsequent sections. We refer to the DNA insert as used in Illumina sequencing as ‘fragment’ (<xref ref-type="supplementary-material" rid="pcbi.1007737.s002">S1 Fig</xref>). The “tip” or “head” of an alignment refers to the largest genomic coordinate in case of an alignment to the forward (F) strand, and the smallest genomic coordinate in case of an alignment to the reverse (R) strand of the reference genome. The “tail” analogously refers to the smallest genomic coordinate of a forward-oriented alignment and the largest coordinate for a reverse-stranded alignment. An FR alignment thus would refer to an alignment whose left mate is forward-oriented and whose right mate is reverse-oriented on the same chromosome. “Mappable” regions refer to regions in the reference that are unlikely to contain reads with poor mapping quality and were identified by running GEM mappability [<xref rid="pcbi.1007737.ref027" ref-type="bibr">27</xref>] on the reference genome. A “small” cluster refers to a discordant PE cluster that is composed of discordant alignments where the observed insert length is smaller than the estimated mean insert length. A “variant map” refers to the set of all relevant supporting fragments of a putative variant. An “integrated” variant is any variant composed of more than one discordant alignment cluster or one giving rise to more than one discordant alignment cluster. SVXplorer integrates clusters arising from cut- and copy- paste insertions, inversions and in some cases tandem duplications into these respective variants. A “3-breakpoint variant (event)” refers to a cut-paste or a copy-paste insertion event, which has 2 breakpoints spanning the source of the insertion and 1 identifying the target location where it is pasted in the genome. A “breakpoint region” is the combination of all locations in the reference where the true breakpoint is estimated to possibly exist. A variant whose support tag is “mixed” has support from both PE and SR alignments.</p>
    <sec id="sec011">
      <title>Preprocessing</title>
      <p>In this step, we subsample alignments from the input position-sorted BAM file to calculate the insert length and coverage distributions in the dataset. We filter the BAM file to keep discordant reads that pass preset thresholds relative to the mean of the insert lengths and respective mapping quality thresholds. These are then used as input to the next step (see section “Preprocessing” in Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for details).</p>
    </sec>
    <sec id="sec012">
      <title>Formation of paired-end clusters</title>
      <p>We group fragments aligning discordantly into “clusters” that have the same relative orientation of the reads, and putatively support the same structural variant. Briefly, each fragment with a discordant primary alignment is taken as a node in a graph <italic>G</italic>, and an edge is created between two nodes <italic>i</italic> and <italic>j</italic> if and only if a calculated score <italic>W</italic><sub><italic>ij</italic></sub> for the pair exceeds a predefined threshold. After all the node pairs in a genomic region have been investigated, connected components from the graph are identified and the nodes in each connected component are separated into maximal cliques using a greedy set-cover approach. <xref ref-type="supplementary-material" rid="pcbi.1007737.s003">S2 Fig</xref> shows the size-distribution of connected components in one such dataset. Each clique is treated as a set, and the maximum clique (or largest maximal clique) in the collection of cliques, is processed into a cluster, i.e., its member fragments are used to determine the cluster’s breakpoints and error margins. Once a clique is processed, all its member fragments are removed from all other sets, and are not used as part of any other cluster. The clique set itself is now removed from the collection of cliques in the connected component and the steps are repeated. All cliques that have members fewer than a predefined threshold are ignored. All fragments that are part of the same clique are mutually proximal (per the weight criteria) and purportedly support the same variant. The idea of using cliques to group alignments into clusters is not new, and has been used by CLEVER [<xref rid="pcbi.1007737.ref017" ref-type="bibr">17</xref>], VariationHunter [<xref rid="pcbi.1007737.ref028" ref-type="bibr">28</xref>] and others. SVXplorer, however, calculates the edge-weights starting with a first-principles probabilistic approach and uses the insert length distribution in two significant ways with precision which leads to improvement in performance compared to other tools that use similar approaches. Please refer to the present section in Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for further details.</p>
      <p>In order to motivate how the score <italic>W</italic><sub><italic>ij</italic></sub> is calculated, we now present a heuristic argument. Let us define <italic>C</italic><sub><italic>ij</italic></sub> as the event that two aligned fragments <italic>i</italic> and <italic>j</italic> drawn at random from the genome support the same variant. <italic>The connection weight W<sub>ij</sub> is a calculated score for the probability of the event C</italic><sub><italic>ij</italic></sub>. The distance profile of a pair of fragments <italic>i</italic> and <italic>j</italic>, <italic>D</italic><sub><italic>ij</italic></sub>, is a function of the difference of the insert length of the two fragments accounting for the orientation of the reads in the alignment and the distance between the respective left reads of the fragments. We denote the observed <italic>difference</italic> in the insert length between the two aligned fragments as Δ<sub><italic>ij</italic></sub> and the observed “tip-to-tip” distance between respective left alignments as <italic>L</italic><sub><italic>ij</italic></sub>. Using Bayes’ rule, <italic>X</italic><sub><italic>ij</italic></sub> = <italic>P</italic>(<italic>C</italic><sub><italic>ij</italic></sub>|<italic>D</italic><sub><italic>ij</italic></sub> = <italic>d</italic><sub><italic>ij</italic></sub>) is given by:
<disp-formula id="pcbi.1007737.e001"><alternatives><graphic xlink:href="pcbi.1007737.e001.jpg" id="pcbi.1007737.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives><label>(1)</label></disp-formula>
<disp-formula id="pcbi.1007737.e002"><alternatives><graphic xlink:href="pcbi.1007737.e002.jpg" id="pcbi.1007737.e002g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M2"><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives><label>(2)</label></disp-formula>
where <inline-formula id="pcbi.1007737.e003"><alternatives><graphic xlink:href="pcbi.1007737.e003.jpg" id="pcbi.1007737.e003g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M3"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msubsup></mml:math></alternatives></inline-formula> denotes the complement of the event <italic>C</italic><sub><italic>ij</italic></sub>. We take note here that the overall probability <italic>P</italic>(<italic>C</italic><sub><italic>ij</italic></sub>) does not depend on the distance profile, whereas the other terms in (<xref ref-type="disp-formula" rid="pcbi.1007737.e002">2</xref>) do. We would also like to point out that <italic>P</italic>(<italic>D</italic><sub><italic>ij</italic></sub> = <italic>d</italic><sub><italic>ij</italic></sub>|<italic>C</italic><sub><italic>ij</italic></sub>) is typically a monotonically decreasing function of Δ<sub><italic>ij</italic></sub> and <italic>L</italic><sub><italic>ij</italic></sub>, and <inline-formula id="pcbi.1007737.e004"><alternatives><graphic xlink:href="pcbi.1007737.e004.jpg" id="pcbi.1007737.e004g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M4"><mml:mrow><mml:mi>P</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> is typically a monotonically increasing function of the same two quantities. The event <inline-formula id="pcbi.1007737.e005"><alternatives><graphic xlink:href="pcbi.1007737.e005.jpg" id="pcbi.1007737.e005g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M5"><mml:msubsup><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msubsup></mml:math></alternatives></inline-formula>, among other things, includes the possibilities that the fragments belong to different variants or are sampled from systematic misalignments that resemble true variants. Assuming an unimodal insert length distribution and given that alignments clustering together in the reference arising from true variants far outnumber systematic misalignments that cluster together, the monotonic behavior cited above should be obvious. In other words, as the <italic>difference</italic> in insert length between two different fragments with discordant alignments rises, the likelihood of their being sampled from the same genomic region decreases. Further, as the distance between the respective read alignments on either side (e.g., left reads) rises, the likelihood of their belonging to the same variant cluster decreases. It may be more apparent now from (<xref ref-type="disp-formula" rid="pcbi.1007737.e002">2</xref>) that <italic>X</italic><sub><italic>ij</italic></sub> is a monotonically decreasing function of Δ<sub><italic>ij</italic></sub> and <italic>L</italic><sub><italic>ij</italic></sub>, as the term multiplying <italic>P</italic>(<italic>C</italic><sub><italic>ij</italic></sub>) is always less than 1. Also, the only term in (<xref ref-type="disp-formula" rid="pcbi.1007737.e001">1</xref>) that is grossly dependent on the distance profile is <italic>P</italic>(<italic>D</italic><sub><italic>ij</italic></sub> = <italic>d</italic><sub><italic>ij</italic></sub>|<italic>C</italic><sub><italic>ij</italic></sub>). The denominator in (<xref ref-type="disp-formula" rid="pcbi.1007737.e001">1</xref>) is also dependent but, given the spread/smattering of discordant alignments in the genome, it has opposite monotonicity to the numerator and only supports the same monotonic behavior. Thus, it need not be further treated or considered for this heuristic motivation of the connection weight. Since the algorithmic objective is to define a fragment-connection weight that is monotonically and structurally similar to <italic>X</italic><sub><italic>ij</italic></sub>, the following function, a practical reproduction of <italic>P</italic>(<italic>D</italic><sub><italic>ij</italic></sub> = <italic>d</italic><sub><italic>ij</italic></sub>|<italic>C</italic><sub><italic>ij</italic></sub>), is chosen to define the score between two nodes <italic>i</italic> and <italic>j</italic>:
<disp-formula id="pcbi.1007737.e006"><alternatives><graphic xlink:href="pcbi.1007737.e006.jpg" id="pcbi.1007737.e006g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M6"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>W</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mo>Δ</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>Δ</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mi>T</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mtext>,</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
where <italic>P</italic>(Δ = Δ<sub><italic>ij</italic></sub>|<italic>C</italic><sub><italic>ij</italic></sub>) is directly obtained from the subsampled insert length distribution by binning the insert length difference values, and taking the ratio of the number of entries in the bin in which Δ (the observed insert length difference) resides to the total number of entries. <italic>T</italic>(<italic>L</italic><sub><italic>ij</italic></sub>) is a function that penalizes distance between the respective left alignment reads after the distance crosses a certain threshold. The penalty threshold for <italic>T</italic>(<italic>L</italic><sub><italic>ij</italic></sub>) is chosen to be the “generalized 3 sigma” (<italic>σ</italic><sub>3</sub>) mark, which is the insert length value at the 99.85 percentile mark (which is equivalent to the 3-sigma mark for Gaussian distributions) of the insert length distribution. The penalty is a simple linear cost that takes <inline-formula id="pcbi.1007737.e007"><alternatives><graphic xlink:href="pcbi.1007737.e007.jpg" id="pcbi.1007737.e007g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M7"><mml:mrow><mml:mi>T</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mn>0</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></alternatives></inline-formula> to 0 at <italic>p</italic><sub><italic>mi</italic></sub>, the insert length at the 99.9999 percentile mark of the insert length distribution. Thus
<disp-formula id="pcbi.1007737.e008"><alternatives><graphic xlink:href="pcbi.1007737.e008.jpg" id="pcbi.1007737.e008g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M8"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>T</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4pt"/><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mn>0</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="4pt"/><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mtext>otherwise</mml:mtext></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula></p>
      <p><italic>θ</italic><sub><italic>ij</italic></sub> is an indicator variable that is 1 if the two fragments (a) have the same relative orientation of reads, and (b) align to the same set of chromosomes. If the relative orientation of the reads is “FR” then they are also required to agree on whether the insert length of the fragments is significantly higher or lower when compared to the average insert length. Currently, a suitable connection weight threshold is applied to the graph: <italic>W</italic><sub><italic>ij</italic></sub> &gt; 0, i.e., all fragments that have a positive probability of being pairwise connected are connected to each other. However, the overall structure of <italic>W</italic><sub><italic>ij</italic></sub> is important, as in future work connection weights are envisioned to be edge weights in the graph <italic>G</italic>, and are to be used in generation of maximal weighted cliques. It is also an important consideration in the regime of low <italic>P</italic>(<italic>C</italic><sub><italic>ij</italic></sub>), as the structure of <italic>W</italic><sub><italic>ij</italic></sub> includes hard cutoffs to 0 from discrete sampling of the insert length distribution. After all edges are formed, we find all the maximal cliques of each connected component [<xref rid="pcbi.1007737.ref029" ref-type="bibr">29</xref>] using an implementation from the NetworkX package [<xref rid="pcbi.1007737.ref030" ref-type="bibr">30</xref>]. The cliques are processed into clusters with breakpoints appropriately calculated according to the orientation of the reads. The breakpoint region size or breakpoint margin for each breakpoint of the cluster is given by:
<disp-formula id="pcbi.1007737.e009"><alternatives><graphic xlink:href="pcbi.1007737.e009.jpg" id="pcbi.1007737.e009g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M9"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mtext>,</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
where <italic>X</italic><sub><italic>R</italic></sub> is the location of the “tip” of the rightmost read supporting the breakpoint, and <italic>X</italic><sub><italic>L</italic></sub> the location of the “tip” of the leftmost read. Though SVXplorer lists precise variant breakpoints when split reads are present, using <italic>σ</italic><sub>3</sub> provides a conservative estimate of the breakpoint margin for calls supported only by PE alignments. Statistically, at most 2 variant calls out 1000, for any insert-length distribution, will have breakpoints lying outside the listed breakpoint region (for example when the observed alignments happen to begin at the edge of the true variant region and have the largest possible insert size per the insert-length distribution). Thus, the breakpoint margin is a conservative estimate even for insert length distribution of anomalous shapes such as those generated when enzyme-based fragmentation methods are used. Of course, for typically Gaussian distributions, <italic>σ</italic><sub>3</sub> happens to lie about 3 standard deviations from the mean. As SVXplorer’s edge-weight calculation depends on statistics from a given insert length probability distribution, its efficacy is independent of/takes into account the variance of the distribution.</p>
      <p>So, simplistically, fragments are likely candidates for belonging to the same cluster if their mutual insert length difference and their mutual distance are both low. The mutual distance of aligned fragments being low is not implied by a mere overlap of the alignment regions if the left and right alignments are distant. The insert length distribution (ILD) in reference was the most natural candidate for efficient computation of this likelihood. SVXplorer strives to represent the likelihood of <italic>C</italic><sub><italic>ij</italic></sub> with as much useful precision as the available information allows and uses the ILD via a global binning approach to extract such data-based precision in fragment discrimination.</p>
    </sec>
    <sec id="sec013">
      <title>Consolidation of paired-end clusters into variants</title>
      <p>The clusters that are formed at the end of the previous step are tested for overlap with each other. Cluster “overlap” is defined by overlap of the breakpoint regions in a manner that the composite signature agrees with a specific type of integrated variant. Clusters that overlap are grouped and tagged as part of a putative integrated variant. In fact, each cluster is first compared to all such existing variants for possible matches and then to all clusters that are not yet integrated. This allows a variant to be composed of more than two clusters (e.g., as in translocations). Variant sets are then formed for all variants by union of respective member cluster sets, recording all the alignments that support a given variant.</p>
      <p>Cluster consolidation is detail-intensive (for example, <xref ref-type="supplementary-material" rid="pcbi.1007737.s006">S5 Fig</xref>), and carefully performed for all basic structural variant (SV) categories that we currently consider. The well-known SV categories used are: deletion, tandem duplication, inversion, <italic>de novo</italic> (or non-reference) insertion, and other insertions that occur using a copy- or cut-and-paste mechanisms.</p>
      <list list-type="bullet">
        <list-item>
          <p>Deletion (<bold>DEL</bold>): An “FR” cluster that has not been paired with any other cluster and where the included fragments have an insert length that is significantly larger than the average insert length.</p>
        </list-item>
        <list-item>
          <p>Tandem duplication (<bold>TD</bold>): An “RF” cluster that has not been paired with any other cluster.</p>
        </list-item>
        <list-item>
          <p>Inversion (<bold>INV</bold>): A pairing of 1 “FF” and 1 “RR” cluster due to the overlap of both left and right alignments respectively.</p>
        </list-item>
        <list-item>
          <p>Insertion resulting from a copy-paste mechanism (<bold>INS</bold>): A pairing of 1 “FR” and 1 “RF” cluster. An exact signature match as shown in the <xref ref-type="supplementary-material" rid="pcbi.1007737.s004">S3 Fig</xref> is required.</p>
        </list-item>
        <list-item>
          <p>Insertion resulting from a cut-paste mechanism (<bold>INS_C</bold>): A pairing of 1 “FR” and 1 “RF” cluster as above, but another “FR” deletion cluster flanking 2 adjacent breakpoints (<xref ref-type="supplementary-material" rid="pcbi.1007737.s005">S4 Fig</xref>). If all 3 breakpoints lie on the same chromosome (indicating an intrachromosomal translocation), this is a symmetric situation in the 3 breakpoints and it is not possible to distinguish the source of the translocation from the location where it is pasted without using read-depth information. If identified, the paste location breakpoint is defined as “1” and the source locations are defined as “2” and “3”, and the variant is labelled <bold>INS_C_P</bold>.</p>
        </list-item>
        <list-item>
          <p>De novo insertion (<bold>DN_INS</bold>): A pairing of clusters that are composed of alignments with only one mapped mate and whose alignments have mutually opposite orientation, or an unmatched small “FR” cluster indicating a (novel) inserted segment between its left and right breakpoints.</p>
        </list-item>
      </list>
      <p>SVXplorer allows for a detailed treatment of SV types and categories not typically identified using other approaches. Please refer to the present section in the Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for a more detailed explanation of these signatures.</p>
    </sec>
    <sec id="sec014">
      <title>Incorporation of split-reads</title>
      <p>In this stage, split reads are both used to add support to existing variants and form new variants. Split read alignments (extracted using extractSplitReads_BwaMem script included with LUMPY [<xref rid="pcbi.1007737.ref006" ref-type="bibr">6</xref>]) are compared to all existing putative variants they could support. If an SR alignment supports a given PE variant call with the correct signature, the variant support tag will now include “SR” and the supporting fragment will be added to the variant map of said variant (see <xref ref-type="supplementary-material" rid="pcbi.1007737.s008">S7 Fig</xref> and “Incorporation of split-reads” in Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref>). If the split alignment does not match any existing (PE or SR) variant, then it is stored as a new possible SR variant. As with PE calls, this new SR variant can be composed of/consolidated by different read signatures, and can be a 2-breakpoint or 3-breakpoint variant.</p>
      <p>Variant categories that are created based on SR evidence with no evidence from PE reads are: deletion/insertion, tandem duplication/insertion, insertion and inversion. A brief description of these signatures is provided now, and we include a detailed explanation in the Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> in the cited section.</p>
      <list list-type="bullet">
        <list-item>
          <p>Deletion/insertion (<bold>DEL_INS</bold>): A split read yielding unswapped (please refer to Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for detailed explanation of swapping) “FF” or “RR” alignments on the same chromosome is marked as a deletion/insertion candidate. Such a cluster can be supported by both “FF” and “RR” split reads. If this cluster later matches with another cluster, giving rise to a third breakpoint, then it is promoted to an insertion (see <xref ref-type="supplementary-material" rid="pcbi.1007737.s007">S6 Fig</xref>). Insertions can be inverted or non-inverted. Depth of coverage is used to disambiguate these calls at a later stage.</p>
        </list-item>
        <list-item>
          <p>Tandem duplication/insertion (<bold>TD_I</bold>): A split read with the same orientation on the same chromosome that is a swapped read is marked as a tandem duplication/insertion candidate (<xref ref-type="supplementary-material" rid="pcbi.1007737.s009">S8 Fig</xref>). Again, it can be promoted to purely an insertion as in the case above. Depth of coverage is later used to disambiguate these cases where possible.</p>
        </list-item>
        <list-item>
          <p>Insertion (<bold>INS</bold>): Any split read whose segments map to different chromosomes is an insertion candidate. To be counted as a complete insertion, it must match with split reads that create a third breakpoint via the mechanism described above (<xref ref-type="supplementary-material" rid="pcbi.1007737.s007">S6 Fig</xref>).</p>
        </list-item>
        <list-item>
          <p>Inversion (<bold>INV</bold>): A split read yielding alignments with opposite orientation on the same chromosome is an inversion candidate. To be counted as a complete inversion, an inversion candidate cluster must match with another containing alignments which join the other side of the inversion to the reference. Merely oppositely oriented clusters are not sufficient. See present section in Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for more details.</p>
        </list-item>
      </list>
    </sec>
    <sec id="sec015">
      <title>Variant filtering</title>
      <p>The following was conceived as an improvement on most SV-calling methods using fixed support thresholds to filter variants. SVXplorer dynamically calculates its support threshold, which is determined empirically by using a linear model based on the coverage of the dataset. The model assigns a support threshold for any given coverage in question based on linear interpolation of a plot of F1 score against coverage for simply simulated data containing common SV types (please see Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for more details). The support threshold set (PE, SR, mixed) for coverage = 25<italic>X</italic>, for example, was (4,4,4). This empirical threshold is now required to pass another filter.</p>
      <p>All the variant sets formed thus far can either be completely disjoint or overlap with other variant sets, i.e., share clusters. We require that the <italic>disjointness</italic> of a variant set be the deciding factor in its inclusion in the final stage of processing. For any given data set, if a variant has at least as many supporting alignments (above the mapping quality threshold) as determined by the dynamic coverage model above, and if these are not shared by any other set, then the variant passes the disjointness filter and is processed further (please see <xref ref-type="supplementary-material" rid="pcbi.1007737.s010">S9 Fig</xref> for additional details). For robustness, the statistical procedure used to call variants here is applied to the complete variant set, not to individual clusters. This procedure was initially conceived for secondary alignments, but works just as effectively if only primary alignments are used. It was motivated by a set-cover algorithm based on disjointness which we present in Supplementary Algorithms in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref>.</p>
    </sec>
    <sec id="sec016">
      <title>Incorporation of depth of coverage</title>
      <p>This stage carefully evaluates all the variant calls using local coverage and filters. Local coverage values in regions between reported variant breakpoints are investigated and if the average coverage in the region seems to contradict the variant in question, then the variant is written as a breakend (BND) event. A BED file listing all mappable regions is recommended as input from the command line and is used to identify regions whose local coverage values can be used in filtering.</p>
      <p>In order to calculate variant-region coverage, sampling of bases is done from the middle and edges of the variant region, and only if absolutely necessary, with caveats, from the breakpoint margins. This coverage is assessed relative to the coverage for the chromosome and used to promote potential SR calls to putative variants, or reject PE calls as putative variants. The preset thresholds for deletion and duplication are chosen to be.8 and 1.2 respectively, which is the general standard for typical coverage distributions (due to the presence of other checks and balances they stand even if seemingly liberal for other cases like enzymatic fragmentation). If the ratio of average local coverage in the deletion/duplication variant to the chromosomal median coverage (variant coverage ratio, or <italic>VCR</italic>) exceeds/drops below its respective threshold, then in special cases such variants are not recorded.</p>
      <p>This stage uses only mappable bases for assessing contig coverage as well as to assess local variant-region coverage as far as possible. Variant calls from all types of clusters (PE, SR, mixed) are rejected if sufficient number of bases (mappable or otherwise) did not exist to calculate coverage in the variant region. Further, coverage is also used break the symmetry of the 3 breakpoints for intrachromosomal translocations and corroborate the source (“cut”) and destination (“paste”) breakpoints. Please refer to the present section in Supplementary Methods in <xref ref-type="supplementary-material" rid="pcbi.1007737.s001">S1 File</xref> for more details.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="sec017">
    <title>Supporting information</title>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s001">
      <label>S1 File</label>
      <caption>
        <title>Supplementary methods, results and algorithms.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s002">
      <label>S1 Fig</label>
      <caption>
        <title>Fragment and read as defined for this study.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s003">
      <label>S2 Fig</label>
      <caption>
        <title>Distribution of size of connected components in ERR194147.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s004">
      <label>S3 Fig</label>
      <caption>
        <title>A simple copy-paste insertion.</title>
        <p>The segment in orange is duplicated downstream in the sample. The figure shows 2 distinct clusters in red and blue matching up in the reference to form a copy-paste insertion. Breakpoint 1 (<italic>x</italic><sub>1</sub>) is defined to be the overlap of adjacent oppositely-oriented alignments from the 2 clusters, and breakpoints 2 and 3 (<italic>x</italic><sub>2</sub> and <italic>x</italic><sub>3</sub>) are defined by their respective mate alignments, with <italic>x</italic><sub>2</sub> &lt; <italic>x</italic><sub>3</sub> by convention, whether upstream or downstream from <italic>x</italic><sub>1</sub>.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s005">
      <label>S4 Fig</label>
      <caption>
        <title>A simple cut-paste insertion (translocation).</title>
        <p>The segment in orange is deleted and pasted downstream in the sample. The figure shows 3 distinct clusters, shown in red, blue and light orange. The cluster shown in light orange is the extra “FR” cluster resulting from the deletion of the translocated segment.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s005.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s006">
      <label>S5 Fig</label>
      <caption>
        <title>A “crossover” TD cluster.</title>
        <p>The segment in yellow is adjacently duplicated downstream in the sample. The figure thus shows sequenced fragments from a tandem duplication that align as “FR.” In such a case, the left breakpoint is defined by reverse alignments and the right breakpoint is defined by forward alignments.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s006.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s007">
      <label>S6 Fig</label>
      <caption>
        <title>A copy-paste insertion call from split reads.</title>
        <p>The segment in yellow is duplicated downstream in the sample. The orange read by itself would lead to a TD_I call and the blue by itself to a DEL_INS call. But together they define a copy-paste insertion consisting of 3 distinct breakpoints.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s007.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s008">
      <label>S7 Fig</label>
      <caption>
        <title>Example of a PE deletion call supported by a split read.</title>
        <p>The read shown in yellow (size exaggerated in target) is split into 2 alignments in the reference close to the PE breakpoints. The segment in green is the putative PE deletion call and the segment in yellow shows revised precise breakpoints.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s008.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s009">
      <label>S8 Fig</label>
      <caption>
        <title>A TD_I call from split reads.</title>
        <p>The segment in orange is tandem-duplicated downstream in the sample. The read shown in orange splits in alignment at the point shown in blue. The split partners are swapped in alignment, i.e., the head portion of the original forward-oriented read aligns in the reference to the left of the tail portion of that read. Such cases give rise to a TD_I cluster.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s009.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s010">
      <label>S9 Fig</label>
      <caption>
        <title>A special case.</title>
        <p>A case where 2 PE clusters each separately match up with a third cluster. The clusters in red and green match up with each other and so do the ones in red and blue, each matching pair indicating a copy-paste insertion. It is quite unlikely that both are true. This is addressed in the filtering stage.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s010.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s011">
      <label>S10 Fig</label>
      <caption>
        <title>Precision vs coverage for simulated data.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s011.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s012">
      <label>S11 Fig</label>
      <caption>
        <title>Performance of SVXplorer compared to TIDDIT in detection of 3-breakpoint events.</title>
        <p>(A) Sensitivity with varying coverage (B) Precision with varying coverage.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s012.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s013">
      <label>S12 Fig</label>
      <caption>
        <title>Size distribution of deletions, duplications and inversions detected by SVXplorer for CHM1.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s013.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s014">
      <label>S13 Fig</label>
      <caption>
        <title>Sensitivity and precision vs coverage for SRR505885.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s014.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s015">
      <label>S14 Fig</label>
      <caption>
        <title>Size of deletions detected by SVXplorer and comparison with other methods for the ERR1341794 library.</title>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s015.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s016">
      <label>S15 Fig</label>
      <caption>
        <title>Self-consistency in NA12878 data when various approaches are used.</title>
        <p>“Consistency” refers to the fraction of calls in the listed base library that were found in the other library.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s016.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1007737.s017">
      <label>S16 Fig</label>
      <caption>
        <title>AJ trio self-consistency for the various SV types.</title>
        <p>“A-B” refers to fraction of total calls made for A that were found in B. Here A or B is a placeholder for either child, father or mother. “Difference” refers to the difference between fraction of calls in common between the parents and that between child and a parent (normalized). We expect this to be large. The “not found” column shows the fraction of total calls that were made in the child that were not found in either parent.</p>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pcbi.1007737.s017.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1007737.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Weischenfeldt</surname><given-names>J</given-names></name>, <name><surname>Symmons</surname><given-names>O</given-names></name>, <name><surname>Spitz</surname><given-names>F</given-names></name>, <name><surname>Korbel</surname><given-names>JO</given-names></name>. <article-title>Phenotypic impact of genomic structural variation: insights from and for human disease</article-title>. <source>Nature reviews Genetics</source>. <year>2013</year>;<volume>14</volume>:<fpage>125</fpage>–<lpage>138</lpage>. <pub-id pub-id-type="doi">10.1038/nrg3373</pub-id><?supplied-pmid 23329113?><pub-id pub-id-type="pmid">23329113</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>McCarroll</surname><given-names>SA</given-names></name>, <name><surname>Hadnott</surname><given-names>TN</given-names></name>, <name><surname>Perry</surname><given-names>GH</given-names></name>, <name><surname>Sabeti</surname><given-names>PC</given-names></name>, <name><surname>Zody</surname><given-names>MC</given-names></name>, <name><surname>Barrett</surname><given-names>JC</given-names></name>, <etal>et al</etal><article-title>Common deletion polymorphisms in the human genome</article-title>. <source>Nature genetics</source>. <year>2006</year>;<volume>38</volume>:<fpage>86</fpage>–<lpage>92</lpage>. <pub-id pub-id-type="doi">10.1038/ng1696</pub-id><?supplied-pmid 16468122?><pub-id pub-id-type="pmid">16468122</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Vergés</surname><given-names>L</given-names></name>, <name><surname>Molina</surname><given-names>O</given-names></name>, <name><surname>Geán</surname><given-names>E</given-names></name>, <name><surname>Vidal</surname><given-names>F</given-names></name>, <name><surname>Blanco</surname><given-names>J</given-names></name>. <article-title>Deletions and duplications of the 22q11.2 region in spermatozoa from DiGeorge/velocardiofacial fathers</article-title>. <source>Molecular cytogenetics</source>. <year>2014</year>;<volume>7</volume>:<fpage>86</fpage><pub-id pub-id-type="doi">10.1186/s13039-014-0086-3</pub-id><?supplied-pmid 25435913?><pub-id pub-id-type="pmid">25435913</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Yang</surname><given-names>SP</given-names></name>, <name><surname>Bidichandani</surname><given-names>SI</given-names></name>, <name><surname>Figuera</surname><given-names>LE</given-names></name>, <name><surname>Juyal</surname><given-names>RC</given-names></name>, <name><surname>Saxon</surname><given-names>PJ</given-names></name>, <name><surname>Baldini</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>Molecular analysis of deletion (17)(p11. 2p11. 2) in a family segregating a 17p paracentric inversion: implications for carriers of paracentric inversions</article-title>. <source>American journal of human genetics</source>. <year>1997</year>;<volume>60</volume>(<issue>5</issue>):<fpage>1184</fpage><?supplied-pmid 9150166?><pub-id pub-id-type="pmid">9150166</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Cameron</surname><given-names>DL</given-names></name>, <name><surname>Di Stefano</surname><given-names>L</given-names></name>, <name><surname>Papenfuss</surname><given-names>AT</given-names></name>. <article-title>Comprehensive evaluation and characterisation of short read general-purpose structural variant calling software</article-title>. <source>Nature communications</source>. <year>2019</year>;<volume>10</volume>:<fpage>3240</fpage><pub-id pub-id-type="doi">10.1038/s41467-019-11146-4</pub-id><?supplied-pmid 31324872?><pub-id pub-id-type="pmid">31324872</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Layer</surname><given-names>RM</given-names></name>, <name><surname>Chiang</surname><given-names>C</given-names></name>, <name><surname>Quinlan</surname><given-names>AR</given-names></name>, <name><surname>Hall</surname><given-names>IM</given-names></name>. <article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title>. <source>Genome biology</source>. <year>2014</year>;<volume>15</volume>:<fpage>R84</fpage><pub-id pub-id-type="doi">10.1186/gb-2014-15-6-r84</pub-id><?supplied-pmid 24970577?><pub-id pub-id-type="pmid">24970577</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Eisfeldt</surname><given-names>J</given-names></name>, <name><surname>Vezzi</surname><given-names>F</given-names></name>, <name><surname>Olason</surname><given-names>P</given-names></name>, <name><surname>Nilsson</surname><given-names>D</given-names></name>, <name><surname>Lindstrand</surname><given-names>A</given-names></name>. <article-title>TIDDIT, an efficient and comprehensive structural variant caller for massive parallel sequencing data</article-title>. <source>F1000Research</source>. <year>2017</year>;<volume>6</volume><pub-id pub-id-type="doi">10.12688/f1000research.11168.2</pub-id><?supplied-pmid 28781756?><pub-id pub-id-type="pmid">28781756</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Soylev</surname><given-names>A</given-names></name>, <name><surname>Kockan</surname><given-names>C</given-names></name>, <name><surname>Hormozdiari</surname><given-names>F</given-names></name>, <name><surname>Alkan</surname><given-names>C</given-names></name>. <article-title>Toolkit for automated and rapid discovery of structural variants</article-title>. <source>Methods (San Diego, Calif)</source>. <year>2017</year>;<volume>129</volume>:<fpage>3</fpage>–<lpage>7</lpage>. <pub-id pub-id-type="doi">10.1016/j.ymeth.2017.05.030</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Guan</surname><given-names>P</given-names></name>, <name><surname>Sung</surname><given-names>WK</given-names></name>. <article-title>Structural variation detection using next-generation sequencing data: A comparative technical review</article-title>. <source>Methods (San Diego, Calif)</source>. <year>2016</year>;<volume>102</volume>:<fpage>36</fpage>–<lpage>49</lpage>. <pub-id pub-id-type="doi">10.1016/j.ymeth.2016.01.020</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Lin</surname><given-names>K</given-names></name>, <name><surname>Smit</surname><given-names>S</given-names></name>, <name><surname>Bonnema</surname><given-names>G</given-names></name>, <name><surname>Sanchez-Perez</surname><given-names>G</given-names></name>, <name><surname>de Ridder</surname><given-names>D</given-names></name>. <article-title>Making the difference: integrating structural variation detection tools</article-title>. <source>Briefings in bioinformatics</source>. <year>2015</year>;<volume>16</volume>:<fpage>852</fpage>–<lpage>864</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbu047</pub-id><?supplied-pmid 25504367?><pub-id pub-id-type="pmid">25504367</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Escaramís</surname><given-names>G</given-names></name>, <name><surname>Docampo</surname><given-names>E</given-names></name>, <name><surname>Rabionet</surname><given-names>R</given-names></name>. <article-title>A decade of structural variants: description, history and methods to detect structural variation</article-title>. <source>Briefings in functional genomics</source>. <year>2015</year>;<volume>14</volume>:<fpage>305</fpage>–<lpage>314</lpage>. <pub-id pub-id-type="doi">10.1093/bfgp/elv014</pub-id><?supplied-pmid 25877305?><pub-id pub-id-type="pmid">25877305</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Korbel</surname><given-names>JO</given-names></name>, <name><surname>Urban</surname><given-names>AE</given-names></name>, <name><surname>Affourtit</surname><given-names>JP</given-names></name>, <name><surname>Godwin</surname><given-names>B</given-names></name>, <name><surname>Grubert</surname><given-names>F</given-names></name>, <name><surname>Simons</surname><given-names>JF</given-names></name>, <etal>et al</etal><article-title>Paired-end mapping reveals extensive structural variation in the human genome</article-title>. <source>Science (New York, NY)</source>. <year>2007</year>;<volume>318</volume>:<fpage>420</fpage>–<lpage>426</lpage>. <pub-id pub-id-type="doi">10.1126/science.1149504</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Ewing</surname><given-names>AD</given-names></name>. <article-title>Transposable element detection from whole genome sequence data</article-title>. <source>Mobile DNA</source>. <year>2015</year>;<volume>6</volume>:<fpage>24</fpage><pub-id pub-id-type="doi">10.1186/s13100-015-0055-3</pub-id><?supplied-pmid 26719777?><pub-id pub-id-type="pmid">26719777</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Luan</surname><given-names>DD</given-names></name>, <name><surname>Korman</surname><given-names>MH</given-names></name>, <name><surname>Jakubczak</surname><given-names>JL</given-names></name>, <name><surname>Eickbush</surname><given-names>TH</given-names></name>. <article-title>Reverse transcription of R2Bm RNA is primed by a nick at the chromosomal target site: a mechanism for non-LTR retrotransposition</article-title>. <source>Cell</source>. <year>1993</year>;<volume>72</volume>:<fpage>595</fpage>–<lpage>605</lpage>. <pub-id pub-id-type="doi">10.1016/0092-8674(93)90078-5</pub-id><?supplied-pmid 7679954?><pub-id pub-id-type="pmid">7679954</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Soylev</surname><given-names>A</given-names></name>, <name><surname>Le</surname><given-names>TM</given-names></name>, <name><surname>Amini</surname><given-names>H</given-names></name>, <name><surname>Alkan</surname><given-names>C</given-names></name>, <name><surname>Hormozdiari</surname><given-names>F</given-names></name>. <article-title>Discovery of tandem and interspersed segmental duplications using high-throughput sequencing</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2019</year>;<volume>35</volume>:<fpage>3923</fpage>–<lpage>3930</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btz237</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Sudmant</surname><given-names>PH</given-names></name>, <name><surname>Rausch</surname><given-names>T</given-names></name>, <name><surname>Gardner</surname><given-names>EJ</given-names></name>, <name><surname>Handsaker</surname><given-names>RE</given-names></name>, <name><surname>Abyzov</surname><given-names>A</given-names></name>, <name><surname>Huddleston</surname><given-names>J</given-names></name>, <etal>et al</etal><article-title>An integrated map of structural variation in 2,504 human genomes</article-title>. <source>Nature</source>. <year>2015</year>;<volume>526</volume>:<fpage>75</fpage>–<lpage>81</lpage>. <pub-id pub-id-type="doi">10.1038/nature15394</pub-id><?supplied-pmid 26432246?><pub-id pub-id-type="pmid">26432246</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Marschall</surname><given-names>T</given-names></name>, <name><surname>Costa</surname><given-names>IG</given-names></name>, <name><surname>Canzar</surname><given-names>S</given-names></name>, <name><surname>Bauer</surname><given-names>M</given-names></name>, <name><surname>Klau</surname><given-names>GW</given-names></name>, <name><surname>Schliep</surname><given-names>A</given-names></name>, <etal>et al</etal><article-title>CLEVER: clique-enumerating variant finder</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2012</year>;<volume>28</volume>:<fpage>2875</fpage>–<lpage>2882</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts566</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Rausch</surname><given-names>T</given-names></name>, <name><surname>Zichner</surname><given-names>T</given-names></name>, <name><surname>Schlattl</surname><given-names>A</given-names></name>, <name><surname>Stütz</surname><given-names>AM</given-names></name>, <name><surname>Benes</surname><given-names>V</given-names></name>, <name><surname>Korbel</surname><given-names>JO</given-names></name>. <article-title>DELLY: structural variant discovery by integrated paired-end and split-read analysis</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2012</year>;<volume>28</volume>:<fpage>i333</fpage>–<lpage>i339</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bts378</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>X</given-names></name>, <name><surname>Schulz-Trieglaff</surname><given-names>O</given-names></name>, <name><surname>Shaw</surname><given-names>R</given-names></name>, <name><surname>Barnes</surname><given-names>B</given-names></name>, <name><surname>Schlesinger</surname><given-names>F</given-names></name>, <name><surname>Källberg</surname><given-names>M</given-names></name>, <etal>et al</etal><article-title>Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2016</year>;<volume>32</volume>:<fpage>1220</fpage>–<lpage>1222</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv710</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Chiang</surname><given-names>C</given-names></name>, <name><surname>Layer</surname><given-names>RM</given-names></name>, <name><surname>Faust</surname><given-names>GG</given-names></name>, <name><surname>Lindberg</surname><given-names>MR</given-names></name>, <name><surname>Rose</surname><given-names>DB</given-names></name>, <name><surname>Garrison</surname><given-names>EP</given-names></name>, <etal>et al</etal><article-title>SpeedSeq: ultra-fast personal genome analysis and interpretation</article-title>. <source>Nature methods</source>. <year>2015</year>;<volume>12</volume>:<fpage>966</fpage>–<lpage>968</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.3505</pub-id><?supplied-pmid 26258291?><pub-id pub-id-type="pmid">26258291</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Bartenhagen</surname><given-names>C</given-names></name>, <name><surname>Dugas</surname><given-names>M</given-names></name>. <article-title>RSVSim: an R/Bioconductor package for the simulation of structural variations</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2013</year>;<volume>29</volume>:<fpage>1679</fpage>–<lpage>1681</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt198</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref022">
      <label>22</label>
      <mixed-citation publication-type="other">Li H. Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. arXiv. 2013.</mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Quinlan</surname><given-names>AR</given-names></name>, <name><surname>Hall</surname><given-names>IM</given-names></name>. <article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2010</year>;<volume>26</volume>:<fpage>841</fpage>–<lpage>842</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq033</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref024">
      <label>24</label>
      <mixed-citation publication-type="journal"><name><surname>English</surname><given-names>AC</given-names></name>, <name><surname>Salerno</surname><given-names>WJ</given-names></name>, <name><surname>Hampton</surname><given-names>OA</given-names></name>, <name><surname>Gonzaga-Jauregui</surname><given-names>C</given-names></name>, <name><surname>Ambreth</surname><given-names>S</given-names></name>, <name><surname>Ritter</surname><given-names>DI</given-names></name>, <etal>et al</etal><article-title>Assessing structural variation in a personal genome-towards a human reference diploid genome</article-title>. <source>BMC genomics</source>. <year>2015</year>;<volume>16</volume>:<fpage>286</fpage><pub-id pub-id-type="doi">10.1186/s12864-015-1479-3</pub-id><?supplied-pmid 25886820?><pub-id pub-id-type="pmid">25886820</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref025">
      <label>25</label>
      <mixed-citation publication-type="journal"><name><surname>Chaisson</surname><given-names>MJP</given-names></name>, <name><surname>Huddleston</surname><given-names>J</given-names></name>, <name><surname>Dennis</surname><given-names>MY</given-names></name>, <name><surname>Sudmant</surname><given-names>PH</given-names></name>, <name><surname>Malig</surname><given-names>M</given-names></name>, <name><surname>Hormozdiari</surname><given-names>F</given-names></name>, <etal>et al</etal><article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title>. <source>Nature</source>. <year>2015</year>;<volume>517</volume>:<fpage>608</fpage>–<lpage>611</lpage>. <pub-id pub-id-type="doi">10.1038/nature13907</pub-id><?supplied-pmid 25383537?><pub-id pub-id-type="pmid">25383537</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref026">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Nagraj</surname><given-names>VP</given-names></name>, <name><surname>Magee</surname><given-names>NE</given-names></name>, <name><surname>Sheffield</surname><given-names>NC</given-names></name>. <article-title>LOLAweb: a containerized web server for interactive genomic locus overlap enrichment analysis</article-title>. <source>Nucleic acids research</source>. <year>2018</year>;<volume>46</volume>:<fpage>W194</fpage>–<lpage>W199</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gky464</pub-id><?supplied-pmid 29878235?><pub-id pub-id-type="pmid">29878235</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Derrien</surname><given-names>T</given-names></name>, <name><surname>Estellé</surname><given-names>J</given-names></name>, <name><surname>Marco Sola</surname><given-names>S</given-names></name>, <name><surname>Knowles</surname><given-names>DG</given-names></name>, <name><surname>Raineri</surname><given-names>E</given-names></name>, <name><surname>Guigó</surname><given-names>R</given-names></name>, <etal>et al</etal><article-title>Fast computation and applications of genome mappability</article-title>. <source>PloS one</source>. <year>2012</year>;<volume>7</volume>:<fpage>e30377</fpage><pub-id pub-id-type="doi">10.1371/journal.pone.0030377</pub-id><?supplied-pmid 22276185?><pub-id pub-id-type="pmid">22276185</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref028">
      <label>28</label>
      <mixed-citation publication-type="journal"><name><surname>Hormozdiari</surname><given-names>F</given-names></name>, <name><surname>Hajirasouliha</surname><given-names>I</given-names></name>, <name><surname>Dao</surname><given-names>P</given-names></name>, <name><surname>Hach</surname><given-names>F</given-names></name>, <name><surname>Yorukoglu</surname><given-names>D</given-names></name>, <name><surname>Alkan</surname><given-names>C</given-names></name>, <etal>et al</etal><article-title>Next-generation VariationHunter: combinatorial algorithms for transposon insertion discovery</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>2010</year>;<volume>26</volume>:<fpage>i350</fpage>–<lpage>i357</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btq216</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref029">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Tomita</surname><given-names>E</given-names></name>, <name><surname>Tanaka</surname><given-names>A</given-names></name>, <name><surname>Takahashi</surname><given-names>H</given-names></name>. <article-title>The worst-case time complexity for generating all maximal cliques and computational experiments</article-title>. <source>Theoretical Computer Science</source>. <year>2006</year>;<volume>363</volume>(<issue>1</issue>):<fpage>28</fpage>–<lpage>42</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcs.2006.06.015</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007737.ref030">
      <label>30</label>
      <mixed-citation publication-type="other">Hagberg A, Swart P, S Chult D. Exploring network structure, dynamics, and function using NetworkX. Los Alamos National Lab.(LANL), Los Alamos, NM (United States); 2008.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6816163</article-id>
    <article-id pub-id-type="publisher-id">3096</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-3096-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Moiety modeling framework for deriving moiety abundances from mass spectrometry measured isotopologues</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Jin</surname>
          <given-names>Huan</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3995-5368</contrib-id>
        <name>
          <surname>Moseley</surname>
          <given-names>Hunter N. B.</given-names>
        </name>
        <address>
          <email>hunter.moseley@uky.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8438</institution-id><institution-id institution-id-type="GRID">grid.266539.d</institution-id><institution>Department of Toxicology and Cancer Biology, </institution><institution>University of Kentucky, </institution></institution-wrap>Lexington, KY USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8438</institution-id><institution-id institution-id-type="GRID">grid.266539.d</institution-id><institution>Department of Molecular &amp; Cellular Biochemistry, </institution><institution>University of Kentucky, </institution></institution-wrap>Lexington, KY USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8438</institution-id><institution-id institution-id-type="GRID">grid.266539.d</institution-id><institution>Markey Cancer Center, </institution><institution>University of Kentucky, </institution></institution-wrap>Lexington, KY USA </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8438</institution-id><institution-id institution-id-type="GRID">grid.266539.d</institution-id><institution>Resource Center for Stable Isotope Resolved Metabolomics, </institution><institution>University of Kentucky, </institution></institution-wrap>Lexington, KY USA </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 8438</institution-id><institution-id institution-id-type="GRID">grid.266539.d</institution-id><institution>Institute for Biomedical Informatics, </institution><institution>University of Kentucky, </institution></institution-wrap>Lexington, KY USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>524</elocation-id>
    <history>
      <date date-type="received">
        <day>1</day>
        <month>4</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>9</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Stable isotope tracing can follow individual atoms through metabolic transformations through the detection of the incorporation of stable isotope within metabolites. This resulting data can be interpreted in terms related to metabolic flux. However, detection of a stable isotope in metabolites by mass spectrometry produces a profile of isotopologue peaks that requires deconvolution to ascertain the localization of isotope incorporation.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">To aid the interpretation of the mass spectroscopy isotopologue profile, we have developed a moiety modeling framework for deconvoluting metabolite isotopologue profiles involving single and multiple isotope tracers. This moiety modeling framework provides facilities for moiety model representation, moiety model optimization, and moiety model selection. The moiety_modeling package was developed from the idea of metabolite decomposition into moiety units based on metabolic transformations, i.e. a moiety model. The SAGA-optimize package, solving a boundary-value inverse problem through a combined simulated annealing and genetic algorithm, was developed for model optimization. Additional optimization methods from the Python scipy library are utilized as well. Several forms of the Akaike information criterion and Bayesian information criterion are provided for selecting between moiety models. Moiety models and associated isotopologue data are defined in a JSONized format.</p>
        <p id="Par3">By testing the moiety modeling framework on the timecourses of <sup>13</sup>C isotopologue data for uridine diphosphate N-acetyl-D-glucosamine (UDP-GlcNAc) in human prostate cancer LnCaP-LN3 cells, we were able to confirm its robust performance in isotopologue deconvolution and moiety model selection.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par4">SAGA-optimize is a useful Python package for solving boundary-value inverse problems, and the moiety_modeling package is an easy-to-use tool for mass spectroscopy isotopologue profile deconvolution involving single and multiple isotope tracers. Both packages are freely available on GitHub and via the Python Package Index.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Stable isotope resolved metabolomics (SIRM)</kwd>
      <kwd>Moiety model</kwd>
      <kwd>Isotopologue deconvolution</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par15">Recent work indicates that many human diseases involve metabolic reprogramming that disturbs normal physiology and causes serious tissue dysfunction [<xref ref-type="bibr" rid="CR1">1</xref>]. Advances in analytical technologies, especially mass spectroscopy (MS) and nuclear magnetic resonance (NMR), have made metabolic analysis of human diseases a reality [<xref ref-type="bibr" rid="CR2">2</xref>]. Stable isotope tracing is a powerful technique that enables the tracing of individual atoms through metabolic pathways. Stable isotope-resolved metabolomics (SIRM) uses advanced MS and NMR instrumentation to analyze the fate of stable isotopes traced from enriched precursors to metabolites, providing richer metabolomics datasets for metabolic flux analyses. NMR can measure isotopomer-specific metabolite data, but is typically limited by sensitivity. Often a single piece of NMR data only provides information on the presence of stable isotopes in just a part of a metabolite, which represents a partial isotopomer. In some cases, multiple partial isotopomer information can be interpreted in terms of a full isotopomer. MS can measure isotopologue-specific data; however, an isotopologue represents a set of mass-equivalent isotopomers. Comprehensive metabolic analysis often relies on MS metabolic datasets or a combination of MS and NMR metabolic datasets. Even though large amounts of metabolomics datasets have been generated recently, it is still a big challenge to acquire meaningful biological interpretation from MS raw data, especially for complex metabolites composed of multiple subunits or moieties.</p>
    <p id="Par16">To better interpret complex isotopologue profiles of large composite metabolites, both quantitative analysis as well as detailed modeling are required. Several methods have been developed for quantitative flux analysis of specified pathways based on the stable isotope incorporated data, like the elementary metabolite units (EMU) framework [<xref ref-type="bibr" rid="CR3">3</xref>]. These methods rely heavily on well-curated metabolic networks to accomplish the metabolic flux analysis. However, models of cellular metabolism, even for human, are far from complete.</p>
    <p id="Par17">To deconvolute the relative isotope incorporation fluxes of complex metabolites, first a plausible model of isotope incorporation should be built based on a relevant metabolic network, which is often incomplete. For example, the complex metabolite uridine diphosphose N-acetyl-D-glucosamine (UDP-GlcNAc), illustrated in Fig. <xref rid="Fig1" ref-type="fig">1</xref>a, has four distinct moieties in which <sup>13</sup>C isotopes incorporate through a metabolic network from an isotope labeling source like <sup>13</sup>C-labeled glucose. Based on the well-studied metabolic pathways that trace from glucose to UDP-GlcNAc in human metabolism, the expected (expert-derived) moiety model of <sup>13</sup>C isotope incorporation from <sup>13</sup>C-labeled glucose is illustrated in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b, which includes <sup>13</sup>C incorporation states for each moiety. For example, the g6 state represents the incorporation of <sup>13</sup>C<sub>6</sub> into the glucose moiety. Furthermore, the sum of moiety states for a given moiety is equal to 1. With this moiety model, a UDP-GlcNAc isotopologue profile can be deconvoluted into relative <sup>13</sup>C isotope incorporation into each UDP-GlcNAc moiety: glucose, ribose, uracil, and acetyl. The deconvolution occurs by minimizing an objective function that compares calculated isotopologues based on moiety isotope incorporation (enrichment) state parameters from the model to the directly observed, experimentally-derived isotopologues. From a mathematics perspective, the minimization represents a highly non-linear inverse problem, since the experimental intensities are compared to calculated values from nonlinear equations that use model parameters being optimized (Fig. <xref rid="Fig1" ref-type="fig">1</xref>b). With a time-series of isotopologue profiles, relative isotope fluxes for each moiety can be derived and used for the interpretation of isotope flux through specific metabolic pathways associated with each moiety. However, when multiple models are plausible, development of a robust model selection method is essential for successful isotopologue deconvolution, especially for non-model organisms. This basic approach to isotopologue deconvolution was demonstrated in a prototype Perl program called GAIMS for the metabolite UDP-GlcNAc using a MS isotopologue profile derived from a prostate cancer cell line [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>]. This demonstration derived relative <sup>13</sup>C isotope fluxes for several converging biosynthetic pathways of UDP-GlcNAc under non-steady-state conditions. This demonstration also inspired the development of MAIMS, a software tool for metabolic tracer analysis [<xref ref-type="bibr" rid="CR6">6</xref>], which further validates the robustness of the moiety model deconvolution method. However, the MAIMS software handles only <sup>13</sup>C single isotope tracer data and does not address model selection, which is crucial for addressing incomplete knowledge of cellular metabolic networks.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Example complex metabolite UDP-GlcNAc and associated expert-derived moiety model. <bold>a</bold> Major human metabolic pathways leading from glucose to the four moieties of UDP-GlcNAc. <bold>b</bold> The representative moiety model is based on the expected metabolic tracing from <sup>13</sup>C-labeled glucose to UDP-GlcNAc, with the exception of one carbon in the uracil moiety that traces from carbon dioxide. The moiety states variables are identified by a lowercase moiety letter followed by a number representing the <sup>13</sup>C isotope content. The moiety state variables (model parameters) are used to calculate specific components of the relative isotopologue intensity</p></caption><graphic xlink:href="12859_2019_3096_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par18">In addition, the simultaneous use of multiple stable isotopes in SIRM experiments can provide much more data than a single tracer. However, incorporation of multiple stable isotopes also complicates the analysis of metabolite isotopologue profiles, which limits most of the current isotope tracer experiments to a single tracer. The lack of data analysis tools greatly impedes the application of the multiple-labeled SIRM experiments. Therefore, we have developed a new moiety modeling framework for deconvoluting MS isotopologue profiles for both single and multiple-labeled SIRM MS datasets. This moiety modeling framework not only solves the non-linear deconvolution problem, but also facilitates selection of the optimal model describing the relative isotope fluxes for a specific metabolite(s) from a set of plausible models.</p>
    <sec id="Sec2">
      <title>Implementation</title>
      <sec id="Sec3">
        <title>Overview of the moiety modeling framework</title>
        <p id="Par19">The workflow of the moiety modeling framework is composed of four major steps, model and data representation, model (parameter) optimization, analysis of optimization results, and model selection (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). For the model and data representation step, the moiety_modeling package creates an internal representation of a moiety model from a given JSONized moiety model description (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>). In this representation illustrated by a unified modeling language (UML) class diagram in Fig. <xref rid="Fig3" ref-type="fig">3</xref>, the package first dissembles a complex metabolite into a list of moieties, i.e. metabolic subunits. Each moiety may contain different number of labeling isotopes, representing the flow of isotope from the labeling source to the moiety. A moiety with a specific number of labeled isotopes is represented as an isotope enrichment state of the moiety (i.e. moiety state). As specified in the JSONized model description, non-default mathematical relationships may exist between moiety states, even from different moieties and/or molecules. Molecules, their moieties, the possible moiety states, and relationships between moiety states work together to represent a particular moiety model, and the proportion for each possible moiety state is an optimizable parameter of the model. Each mass spectrum’s worth of isotopologue data is represented as a separate dataset, which holds the set of isotopologues associated with each molecule. Typically, multiple mass spectra are included. Often each mass spectrum represents a single time point in a time series experiment.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Workflow of the moiety modeling framework</p></caption><graphic xlink:href="12859_2019_3096_Fig2_HTML" id="MO2"/></fig>
<fig id="Fig3"><label>Fig. 3</label><caption><p>A unified modeling language (UML) class diagram of a Moiety Model</p></caption><graphic xlink:href="12859_2019_3096_Fig3_HTML" id="MO3"/></fig></p>
        <p id="Par20">The next major step, moiety model (parameter) optimization, involves deriving an optimal set of model parameters, i.e. moiety state fractional abundances (<italic>moiety</italic> _ <italic>state</italic><sub><italic>j</italic>, <italic>i</italic></sub> for moiety j and state i) that are used to calculate relative isotopologue abundances (<italic>I</italic><sub><italic>x,calc</italic></sub> from Eq. 1) that best match experimental isotopologue profiles (<italic>I</italic><sub><italic>x,obs</italic></sub>) as compared by an objective function (see Table <xref rid="Tab1" ref-type="table">1</xref>). In Eq. 1, ic<sub>a</sub> is a component of the isotopologue intensity with an isotope content x. Figure <xref rid="Fig1" ref-type="fig">1</xref>b lists these isotopologue components for each isotopologue based on the expert-derived moiety model.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Different forms of objective function</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Loss function</th><th>Equation</th></tr></thead><tbody><tr><td>Absolute difference</td><td>Σ|I<sub><italic>x,obs</italic></sub> – I<sub><italic>x,calc</italic></sub>|</td></tr><tr><td>Log difference</td><td>Σ|log (I<sub><italic>x,obs</italic></sub>) – log (I<sub><italic>x,calc</italic></sub>)|</td></tr><tr><td>Square difference</td><td>Σ (I<sub><italic>x,obs</italic></sub> – I<sub><italic>x,calc</italic></sub>)<sup>2</sup></td></tr></tbody></table></table-wrap></p>
        <p id="Par21">
          <disp-formula id="Equ1">
            <label>1</label>
            <alternatives>
              <tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {I}_{x, calc}=\sum \limits_{ic_a\in {IC}_x}{ic}_a;{IC}_x=\left\{{ic}_v| isotope\_ content\left({ic}_v\right)=x\right\};{ic}_v={\prod}_j moiety\_{state}_{j,{v}_j} $$\end{document}</tex-math>
              <mml:math id="M2" display="block">
                <mml:msub>
                  <mml:mi>I</mml:mi>
                  <mml:mrow>
                    <mml:mi>x</mml:mi>
                    <mml:mo>,</mml:mo>
                    <mml:mtext mathvariant="italic">calc</mml:mtext>
                  </mml:mrow>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:munder>
                  <mml:mo>∑</mml:mo>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mi mathvariant="italic">ic</mml:mi>
                      <mml:mi>a</mml:mi>
                    </mml:msub>
                    <mml:mo>∈</mml:mo>
                    <mml:msub>
                      <mml:mi mathvariant="italic">IC</mml:mi>
                      <mml:mi>x</mml:mi>
                    </mml:msub>
                  </mml:mrow>
                </mml:munder>
                <mml:msub>
                  <mml:mi mathvariant="italic">ic</mml:mi>
                  <mml:mi>a</mml:mi>
                </mml:msub>
                <mml:mo>;</mml:mo>
                <mml:msub>
                  <mml:mi mathvariant="italic">IC</mml:mi>
                  <mml:mi>x</mml:mi>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mfenced close="}" open="{" separators="|">
                  <mml:msub>
                    <mml:mi mathvariant="italic">ic</mml:mi>
                    <mml:mi>v</mml:mi>
                  </mml:msub>
                  <mml:mrow>
                    <mml:mtext mathvariant="italic">isotope</mml:mtext>
                    <mml:mo>_</mml:mo>
                    <mml:mtext mathvariant="italic">content</mml:mtext>
                    <mml:mfenced close=")" open="(">
                      <mml:msub>
                        <mml:mi mathvariant="italic">ic</mml:mi>
                        <mml:mi>v</mml:mi>
                      </mml:msub>
                    </mml:mfenced>
                    <mml:mo>=</mml:mo>
                    <mml:mi>x</mml:mi>
                  </mml:mrow>
                </mml:mfenced>
                <mml:mo>;</mml:mo>
                <mml:msub>
                  <mml:mi mathvariant="italic">ic</mml:mi>
                  <mml:mi>v</mml:mi>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:msub>
                  <mml:mo>∏</mml:mo>
                  <mml:mi>j</mml:mi>
                </mml:msub>
                <mml:mtext mathvariant="italic">moiety</mml:mtext>
                <mml:mo>_</mml:mo>
                <mml:msub>
                  <mml:mtext mathvariant="italic">state</mml:mtext>
                  <mml:mrow>
                    <mml:mi>j</mml:mi>
                    <mml:mo>,</mml:mo>
                    <mml:msub>
                      <mml:mi>v</mml:mi>
                      <mml:mi>j</mml:mi>
                    </mml:msub>
                  </mml:mrow>
                </mml:msub>
              </mml:math>
              <graphic xlink:href="12859_2019_3096_Article_Equ1.gif" position="anchor"/>
            </alternatives>
          </disp-formula>
        </p>
        <p id="Par22">The moiety_modeling package implements several optimization methods, including a combined simulated annealing and genetic algorithm (SAGA) based on the ‘Genetic Algorithm for Isotopologues in Metabolic Systems’ (GAIMS) Perl implementation [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>], a truncated Newton algorithm (TNC) [<xref ref-type="bibr" rid="CR7">7</xref>], a SLSQP algorithm using Sequential Least Squares Programming [<xref ref-type="bibr" rid="CR8">8</xref>], and a L-BFGS-B algorithm [<xref ref-type="bibr" rid="CR9">9</xref>]. For the latter three algorithms ‘TNC’, ‘SLSQP’, and ‘L-BFGS-B’, the moiety_modeling package uses the implementation from the scipy.optimize Python module. In addition, we have the option to optimize the datasets together or separately.</p>
        <p id="Par23">The third major step involves the analysis of the results from the model optimization. The moiety_modeling package provides facilities for generating summative statistics and graphical visualizations for a set of optimizations performed on one or more moiety models. The final major step, model selection, tries to find the model that best fits the experimental isotopologue profiles from a set of provided moiety models that have been optimized in step two. Several forms of the Akaike information criterion (AIC) [<xref ref-type="bibr" rid="CR10">10</xref>] and Bayesian information criterion (BIC) [<xref ref-type="bibr" rid="CR11">11</xref>] are used as the estimator of the relative quality of moiety models for the set of isotopologue data.</p>
      </sec>
      <sec id="Sec4">
        <title>The moiety_modeling python package implementation</title>
        <p id="Par24">As shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, the moiety_modeling Python package consists of several modules: ‘model.py’, ‘modeling.py’, ‘analysis.py’, and ‘cli.py’. The ‘model.py’ module contains class definitions for the basic elements in the moiety model. It is composed of ‘Moiety’, ‘Relationship’, ‘Molecule’ and ‘Model’ classes. The ‘Moiety’ object represents a specific moiety, the labeling isotopes present in the moiety, and their corresponding states within the moiety. The ‘Relationship’ class describes the non-default mathematical dependencies between moiety states, where the default dependency for a given moiety is that the sum of its states is equal to 1 (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>b for example default relationships). A ‘Molecule’ object represents an individual metabolite made up of a list of ‘Moiety’ objects. The ‘Model’ class simulates the flow of isotope from labeling sources into each moiety of specific metabolites, which is initialized by lists of ‘Moiety’ objects, ‘Molecule’ objects, and ‘Relationship’ objects. A moiety model is generated and stored in a JSONized representation using the jsonpickle Python package [<xref ref-type="bibr" rid="CR12">12</xref>]. This JSONized representation (see Additional file <xref rid="MOESM2" ref-type="media">2</xref>), stored in a file, is then used as the input file for later model optimizations. The ‘modeling.py’ module is responsible for model optimization. It is composed of the ‘Dataset’ class, several model optimization classes, and the ‘OptimizationManager’ class. The ‘Dataset’ class organizes a single MS isotopologue profile dataset into a dictionary-based data structure. ‘Dataset’ objects are stored in a JSONized representation (see Additional file <xref rid="MOESM3" ref-type="media">3</xref>) and used as the input for later model optimizations. Currently, no relationship between Dataset objects like a time-dependence is captured. In the abstract ModelOptimization class, we included several different objective functions (see Table <xref rid="Tab1" ref-type="table">1</xref>). In addition, there are four specific model optimization classes in the ‘modeling’ module that utilize different optimization methods and approaches for combining datasets. The ‘SAGAoptimization’ and ‘SAGAseparateOptimization’ classes use the SAGA-optimize Python package described in the next section for either combined optimization of model parameters across all datasets or separate optimizations of model parameters for each dataset. ‘ScipyOptimization’ and ‘ScipySeparateOptimization’ classes make use of optimization methods (‘TNC’, ‘SLSQP’, and ‘L-BFGS-B’) in the scipy.optimize module to conduct optimizations in either a combined or separate manner. The ‘OptimizationManager’ class is responsible for the management of the optimization process based on the input optimization parameters. The results for a model optimization are stored in a JSONized representation (see Additional file <xref rid="MOESM4" ref-type="media">4</xref>) for further analysis. A text file is used to store the filepaths to all of the optimized models with certain optimization parameters. The filepath file is then used as the input for the ‘analysis.py’ module. The ‘analysis.py’ module has five classes: ‘ResultsAnalysis’, ‘ModelRank’, ‘ComparisonTable’, ‘PlotMoietyDistribution’ and ‘PlotIsotopologueIntensity’. The ‘ResultsAnalysis’ class is responsible for generating standard statistics from the results for a set of optimizations for a given model. The mean, standard deviation, minimum, and maximum value of each model parameter are calculated from a set of model optimizations performed on the same model. The calculated isotopologue intensities and their statistics based on the sets of optimized parameters are also generated. Furthermore, several quality estimators of each model, including different forms of the ‘AIC’ (Table <xref rid="Tab2" ref-type="table">2</xref>), are computed for model selection. The AIC tends to select the model that has too many parameters when the sample size is small, leading to overfitting. The sample size corrected AIC (AICc) was developed to address this overfitting problem [<xref ref-type="bibr" rid="CR13">13</xref>]. The Bayesian information criterion (BIC) is another commonly used criterion for model selection [<xref ref-type="bibr" rid="CR14">14</xref>]. The ‘ResultsAnalysis’ objects with results for each model are stored in a JSONize representation (see Additional file <xref rid="MOESM5" ref-type="media">5</xref>) for further analysis, along with a text report for readability. Also, an analysis filepath file containing the filepaths to the analysis JSON files of all models with the same optimization parameters is created. Next, the ‘ModelRank’ class object uses this analysis filepath file to compare and select the model that best reflects the observed isotopologue profile. The ‘ComparisonTable’ class compares the model selection results with different optimization parameters. The ‘PlotMoietyDistribution’ class and ‘PlotIsotopologueIntensity’ class are responsible for the visualization of the optimization results for a set of optimizations performed on a single model. The ‘cli.py’ module provides the command-line interface to perform model optimization, model optimization analysis, and model selection, which is implemented with the ‘docopt’ Python library [<xref ref-type="bibr" rid="CR15">15</xref>].
<fig id="Fig4"><label>Fig. 4</label><caption><p>Organization of the moiety_modeling package represented with UML diagrams: <bold>a</bold> UML package diagram of the moiety_modeling Python library; <bold>b</bold> Subpackage dependencies diagram; <bold>c</bold> UML class diagram of the ‘modeling.py’ module with dependency relationships; <bold>d</bold> UML class diagram of the ‘analysis.py’ module, which contains a set of classes with no relationships</p></caption><graphic xlink:href="12859_2019_3096_Fig4_HTML" id="MO4"/></fig>
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Different forms of a model selection estimator</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Selection Criterion</th><th>Equation</th></tr></thead><tbody><tr><td>Akaike Information Criterion (AIC)</td><td>2k + nln(RSS/n)</td></tr><tr><td>Sample size corrected AIC (AICc)</td><td>AIC + (2<italic>k</italic><sup>2</sup> + 2k)/(n − k − 1)</td></tr><tr><td>Bayesian Information Criterion (BIC)</td><td>nln(RSS/n) + kln(n)</td></tr></tbody></table><table-wrap-foot><p>k is the number of parameters</p><p>n is the number of data points</p><p>RSS is the residual sum of squares: RSS = <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \sum \limits_{i=1}^n{\left({I}_{obs}-{I}_{calc}\right)}^2 $$\end{document}</tex-math><mml:math id="M4" display="inline"><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mi mathvariant="italic">obs</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mtext mathvariant="italic">calc</mml:mtext></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="12859_2019_3096_Article_IEq1.gif"/></alternatives></inline-formula></p></table-wrap-foot></table-wrap></p>
      </sec>
      <sec id="Sec5">
        <title>SAGA-optimize python package implementation</title>
        <p id="Par25">The SAGA-optimize Python package is a novel type of combined simulated annealing and genetic algorithm [<xref ref-type="bibr" rid="CR4">4</xref>] used to find the optimal solutions to a set of parameters based on the minimization of a given energy (objective) function calculated using the set of parameters. In this context, the energy function represents a comparison of calculated and experimentally-observed isotopologue relative intensities, with the calculated intensities based on the moiety model parameters being optimized. As shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>, it is composed of ‘ElementDescription’, ‘Guess’, ‘Population’ and ‘SAGA’ classes. An ‘ElementDescription’ object describes an individual parameter of the moiety model. In the expert derived moiety model (Fig. <xref rid="Fig1" ref-type="fig">1</xref>b), the g6 model parameter would be represented by a single ‘ElementDescription’ object. The ‘ElementDescription’ object is bound by a range and several mutation methods are available to change the value of the ‘ElementDescription’ object. A ‘Guess’ object contains lists of all the parameters (‘ElementDescription’ objects) and their corresponding values for a particular moiety model. In addition, it also stores the energy calculated based on this set of parameters. A ‘Population’ object contains information of a list of ‘ElementDescription’ objects, a list of ‘Guess’ objects, the range of each ‘ElementDescription’ among all the ‘Guess’ objects, the highest and lowest energy for the list of ‘Guess’ objects, and the best ‘Guess’ object. The ‘ElementDescription’, ‘Guess’ and ‘Population’ classes are the building blocks of the ‘SAGA’ class, which is the main class that provides the interface for optimization. Furthermore, several distinct crossover functions are available for creating new Guess objects from the cross-over of two other Guess objects.
<fig id="Fig5"><label>Fig. 5</label><caption><p>‘SAGA-optimize’ package represented with a UML class diagram with dependencies</p></caption><graphic xlink:href="12859_2019_3096_Fig5_HTML" id="MO5"/></fig></p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results</title>
    <sec id="Sec7">
      <title>The package interface</title>
      <p id="Par26">The moiety_modeling package can be used in two main ways: (i) as a library within Python scripts for accessing and manipulating moiety models and isotopologue datasets stored in JSON files, or (ii) as a command-line tool to perform model optimization, model analysis, and model selection.</p>
      <p id="Par27">To use the moiety_modeling package as a library within Python scripts, it should be imported with a Python program or an interactive interpreter interface. Next, ‘Moiety’, ‘Relationship’ and ‘Molecule’ objects can be created to construct a moiety model. ‘Dataset’ objects are also built with the moiety_modeling package. Table <xref rid="Tab3" ref-type="table">3</xref> summarizes common patterns for using moiety_modeling package as a library in construction of a moiety model and related datasets.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Common creation patterns for the moiety_modeling library</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Entity</th><th>Example</th></tr></thead><tbody><tr><td>Moiety</td><td><p>glucose = moiety_modeling.Moiety(‘glucose’, {‘13C’: 6}, isotopeStates = {‘13C’: [1, 3, 5]}, nickname = ‘g’)</p><p>acetyl = moiety_modeling.Moiety(‘acetyl’, {‘13C’: 2}, isotopeStates = {‘13C’: [0, 1, 2]}, nickname = ‘a’)</p><p>uracil = moiety_modeling.Moiety(‘uracil’, {‘13C’: 4}, isotopeStates = {‘13C’: [1, 2, 4]}, nickname = ‘u’)</p><p>ribose = moiety_modeling.Moiety(‘ribose’, {‘13C’: 5}, isotopeStates = {‘13C’: [0, 3, 5]}, nickname = ‘r’)</p></td></tr><tr><td>Relationship</td><td>relationship = moiety_modeling.Relationship (glucose, ‘13C0’, acetyl, ‘13C2’, ‘*’, 2)</td></tr><tr><td>Molecule</td><td>UDP-GlcNAc = moiety_modeling.Molecule(‘UDP-GlcNAc’, [glucose, uracil, acetyl, ribose])</td></tr><tr><td>Model</td><td>model1 = moiety_modeling.Model(‘model1’, [glucose, uracil, acetyl, ribose], [UDP_GlcNAc], [relationship])</td></tr><tr><td>Dataset</td><td>dataset = moiety_modeling.Dataset(‘12 h’, ‘UDP_GlcNAc’: [{‘labelingIsotopes’:‘13C_0’, ‘height’: 0.0175, ‘heightSE’: 0}, {‘labelingIsotopes’:‘13C_1’, ‘height’: 0.0075, ‘heightSE’: 0}, …])</td></tr></tbody></table></table-wrap></p>
      <p id="Par28">The moiety_modeling package also provides a simple command-line interface to perform model optimization, selection, and visualization. Additional file <xref rid="MOESM6" ref-type="media">6</xref> shows version 1.0 of the command-line interface, and Table <xref rid="Tab4" ref-type="table">4</xref> summarizes common pattern for using moiety_modeling as a command-line tool. The common patterns for using SAGA-optimize as a library are shown in Additional file <xref rid="MOESM7" ref-type="media">7</xref>.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>Common patters for using the moiety_modeling as a command-line tool</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Command</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>modeling</td><td>Perform model optimization</td><td>% python3 –m moiety_modeling modeling --models = models.json --datasets = dataset.json --optimizations = optimization_settings.json</td></tr><tr><td>analyze</td><td>Analyze the optimization results</td><td>% python3 –m moiety_modeling analyze optimizations --a optimizationPaths.txt</td></tr><tr><td>plot</td><td>Plot the distribution of calculated moiety modeling parameters.</td><td>% python3 –m moiety_modeling plot moiety analysisResults.json</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec8">
      <title>Dataset and model</title>
      <p id="Par29">We used the timecourse (34 h, 48 h, and 72 h) of <sup>13</sup>C isotopologue data for UDP-GlcNAc generated from [U-<sup>13</sup>C]-glucose in human prostate cancer LnCaP-LN3 cells to evaluate the robustness of the moiety modeling framework. An expert-derived moiety model of UDP-GlcNAc (6_G1R1A1U3) was created based on known human biochemical pathways (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a) and corroborated by NMR data. Also, 40 hypothetical moiety models of the isotopic flow into UDP-GlcNAc were crafted as simple perturbations of the original expert-derived model. These perturbations include the inclusion of different and/or additional moiety states and non-default moiety state relationships (e.g. g6 = r5). For example, model 7_G2R1A1U3_g5 includes an extra <sup>13</sup>C<sub>5</sub> g5 glucose moiety state for a total of 7 independent model parameters, 2 for glucose, 1 for ribose, 1 for acetyl, and 3 for uracil. We tested whether the expert-derived moiety model could be selected from all the other models.</p>
    </sec>
    <sec id="Sec9">
      <title>Model optimization and selection</title>
      <p id="Par30">The incorporation of <sup>13</sup>C from [U-<sup>13</sup>C]-glucose into UDP-GlcNAc leads to a total of 17 isotopologues plus one due to <sup>13</sup>C natural abundance from carbon dioxide (I<sub>0</sub>, …, I<sub>17</sub>). We applied the moiety modeling framework to the observed UDP-GlcNAc isotopologue data with each built model to test whether the expert-derived moiety model could be selected above the other models. We used the SAGA optimization method with a log difference objective function (see Table <xref rid="Tab1" ref-type="table">1</xref>). The optimization was repeated 100 times for each model. These analyses were performed on a desktop computer with i7-6850K CPU (6 core with HT), 64GB RAM and 512GB SSD. On this hardware, the analyses for all 40 models took roughly 3 h of total execution time. The results are listed in Table <xref rid="Tab5" ref-type="table">5</xref>. From these results, we can see that the expert-derived moiety model can be selected successfully among all the moiety models using the AICc (see Table <xref rid="Tab2" ref-type="table">2</xref>), which demonstrates the robustness of the moiety modeling framework. Model selection criteria like the AICc help to address model overfitting; however, the use of a log difference objective function with multiple time points of data in the form of separate sets of observed isotopologues makes the model selection very robust against most of the model overfitting [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>].
<table-wrap id="Tab5"><label>Table 5</label><caption><p>Model selection results of UDP-GlcNAc isotopologue data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Model<sup>a</sup></th><th>Estimator (AICc)</th></tr></thead><tbody><tr><td>6_G1R1A1U3 (expert-derived model)</td><td>− 229.2918</td></tr><tr><td>6_G1R1A1U3_r4</td><td>− 227.5208</td></tr><tr><td>6_G1R1A1U3_u4</td><td>− 225.0006</td></tr><tr><td>6_G0R2A1U3_g3r2r3_g6r5</td><td>− 223.1633</td></tr><tr><td>6_G1R1A1U3_g5</td><td>− 215.9565</td></tr><tr><td>7_G1R2A1U3_r1</td><td>− 212.4727</td></tr><tr><td>7_G2R1A1U3_g1</td><td>−212.1217</td></tr><tr><td>7_G1R2A1U3_r3</td><td>−210.9640</td></tr><tr><td>7_G1R1A2U3</td><td>−210.0952</td></tr><tr><td>7_G2R1A1U3_g5</td><td>−208.1346</td></tr><tr><td>7_G1R2A1U3_g3r2r3</td><td>− 207.6523</td></tr><tr><td>7_G1R2A1U3_r2</td><td>−207.4187</td></tr><tr><td>7_G2R1A1U3_g4</td><td>− 206.6430</td></tr><tr><td>7_G2R1A1U3_g2</td><td>−206.5609</td></tr><tr><td>7_G0R2A2U3_g3r2r3_g6r5</td><td>− 205.0569</td></tr><tr><td>7_G2R1A1U3_g3</td><td>− 204.8797</td></tr><tr><td>7_G0R3A1U3_g3r2r3_g6r5_g5r4</td><td>−204.2729</td></tr><tr><td>7_G1R1A1U4</td><td>− 203.3710</td></tr><tr><td>7_G1R2A1U3_r4</td><td>− 202.6782</td></tr><tr><td>6_G1R1A1U3_a1</td><td>−199.5560</td></tr><tr><td>8_G2R1A2U3_g1</td><td>− 195.9713</td></tr><tr><td>7_G1R1A1U3C1</td><td>− 195.5788</td></tr><tr><td>8_G1R2A2U3_r1</td><td>−195.4893</td></tr><tr><td>7_G0R3A1U3_g3r2r3_g6r5_r4</td><td>−192.4980</td></tr><tr><td>8_G1R2A2U3_r2r3</td><td>−187.3342</td></tr><tr><td>8_G1R2A2U3_r3</td><td>−186.8810</td></tr><tr><td>8_G2R1A2U3_g5</td><td>−186.2693</td></tr><tr><td>8_G1R2A2U3_r2</td><td>−186.2562</td></tr><tr><td>8_G2R1A2U3_g2</td><td>− 185.6112</td></tr><tr><td>8_G2R1A2U3_g4</td><td>− 184.9444</td></tr><tr><td>8_G1R2A2U3_g3r2r3</td><td>−184.2929</td></tr><tr><td>8_G1R2A2U3_g3r2r3_g6r5_g5</td><td>− 183.2154</td></tr><tr><td>8_G2R1A2U3_g3</td><td>−183.1467</td></tr><tr><td>8_G1R2A2U3_r4</td><td>− 182.1334</td></tr><tr><td>8_G1R1A2U3C1</td><td>− 177.5013</td></tr><tr><td>9_G2R2A2U3_r2r3_g1</td><td>− 170.3323</td></tr><tr><td>9_G2R2A2U3_r2r3_g2</td><td>− 161.5770</td></tr><tr><td>9_G2R2A2U3_r2r3_g3</td><td>− 160.7823</td></tr><tr><td>9_G2R2A2U3_r2r3_g6r5_g3_g5</td><td>−160.6917</td></tr><tr><td>9_G2R2A2U3_r2r3_g4</td><td>−160.4500</td></tr><tr><td>9_G2R2A2U3_r2r3_g5</td><td>− 158.8733</td></tr></tbody></table><table-wrap-foot><p>Optimization settings: method = ‘SAGA’, SAGA_parameters = {‘stepNumber’: 100000, ‘temperatureStepSize’: 100, ‘alpha’: 1, ‘crossoverRate’: 0.05, ‘mutationRate’: 3, ‘populationSize’: 20, ‘startTemperature’: 0.5}, repetition = 100, split, objective function = log difference</p><p><sup>a</sup>The first number in the model name is the total number of free model parameters followed by the number of free parameters for each moiety and perturbations from the expert-derived model</p></table-wrap-foot></table-wrap></p>
      <p id="Par31">We also compared the optimization results generated by the moiety-modeling package to results generated by GAIMS (see Additional files <xref rid="MOESM9" ref-type="media">9</xref>, <xref rid="MOESM10" ref-type="media">10</xref>, <xref rid="MOESM11" ref-type="media">11</xref>). For this comparison, an absolute difference objective function was used with the moiety-modeling package to match the objective function available in the GAIMS software. Also, there are some small differences in the implementation of optimization method between the two software packages. The SAGA-optimize package implements a true simulated annealing, while GAIMS implements a modified annealing with steepest decent qualities. Also, both optimization methods are stochastic as demonstrated by replicate moiety-modeling analyses shown in Additional file <xref rid="MOESM12" ref-type="media">12</xref>. Therefore, the results are not identical; however, they are reasonably comparable. But neither method is able to select the expert-derived model with an AICc model selection method, due to issues of overfitting with the absolute difference objective function.</p>
    </sec>
    <sec id="Sec10">
      <title>Generation of simulated single-tracer and multi-tracer datasets</title>
      <p id="Par32">In addition, we generated simulated single tracer and multi-tracer datasets to test, compare, and evaluate multi-tracer optimization functionality. First, we created a set of rounded moiety state values for the single-tracer expert derived model roughly based on the optimized model state values derived from the experimental UDP-GlcNAc 48 h dataset (Table <xref rid="Tab6" ref-type="table">6</xref>).
<table-wrap id="Tab6"><label>Table 6</label><caption><p>Single-tracer <sup>13</sup>C moiety states and values for UDP-GlcNAc biosynthesis</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Moiety states</th><th>Moiety value</th><th>Moiety states</th><th>Moiety value</th></tr></thead><tbody><tr><td>glucose[13C_0]</td><td>0.1</td><td>ribose[13C_5]</td><td>0.9</td></tr><tr><td>glucose[13C_6]</td><td>0.9</td><td>uracil[13C_0]</td><td>0.2</td></tr><tr><td>acetyl[13C_0]</td><td>0.7</td><td>uracil[13C_1]</td><td>0.2</td></tr><tr><td>acetyl[13C_2]</td><td>0.3</td><td>uracil[13C_2]</td><td>0.5</td></tr><tr><td>ribose[13C_0]</td><td>0.1</td><td>uracil[13C_3]</td><td>0.1</td></tr></tbody></table></table-wrap></p>
      <p id="Par33">We then used <sup>13</sup>C and <sup>18</sup>O labeled glucose (<sup>13</sup>C<sub>6</sub>H<sub>12</sub><sup>18</sup>O<sub>6</sub>) as a hypothetical isotope labeling source for UDP-GlcNAc biosynthesis. Following the expert derived model and with the aid of atom-mapping information of relevant human biochemical reactions from MetaCyc [<xref ref-type="bibr" rid="CR15">15</xref>], we traced the incorporation of oxygen and carbon atoms from glucose to each moiety to derived a multi-tracer model. For glucose, acetyl and ribose, oxygen atoms incorporated into the moiety with their directly bonded carbon atom. However, during the biosynthesis of uracil, some <sup>18</sup>O-<sup>13</sup>C bonds are sometimes broken, creating a more varied set of moiety states. Next, we derived rounded multi-tracer moiety state values that are equivalent to the rounded single-tracer values (Table <xref rid="Tab7" ref-type="table">7</xref>).
<table-wrap id="Tab7"><label>Table 7</label><caption><p>Multi-tracer <sup>13</sup>C/<sup>18</sup>O moiety states and values for UDP-GlcNAc biosynthesis</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Moiety states</th><th>Moiety value</th><th>Moiety states</th><th>Moiety value</th></tr></thead><tbody><tr><td>glucose[13C_0.18O_0]</td><td>0.1</td><td>uracil[13C_0.18O_0]</td><td>0.2</td></tr><tr><td>glucose[13C_6.18O_5]</td><td>0.9</td><td>uracil[13C_1.18O_0]</td><td>0.2</td></tr><tr><td>acetyl[13C_0.18O_0]</td><td>0.7</td><td>uracil[13C_2.18O_0]</td><td>0.25</td></tr><tr><td>acetyl[13C_2.18O_1]</td><td>0.3</td><td>uracil[13C_2.18O_1]</td><td>0.25</td></tr><tr><td>ribose[13C_0.18O_0]</td><td>0.1</td><td>uracil[13C_3.18O_0]</td><td>0.05</td></tr><tr><td>ribose[13C_5.18O_4]</td><td>0.9</td><td>uracil[13C_3.18O_1]</td><td>0.05</td></tr></tbody></table></table-wrap></p>
      <p id="Par34">Next, we generated the base single-tracer and multi-tracer simulated datasets by calculating the set of relative isotopologue intensity values using Eq. 1 with the respective moiety state values. Finally, we created simulated datasets with added normally distributed error that is subsequently thresholded to zero based on a minimum hypothetical detection limit (0.005) and then renormalized to a sum of 1. We generated three sets of 100 simulated datasets for both single and multi-tracer models by adding error from a normal distribution with increasing standard deviations of 0.001, 0.01 and 0.1. We then estimated the effects of error propagation by calculating the average sum of isotopologues across 100 simulated datasets after error addition and thresholding, but before renormalization (Table <xref rid="Tab8" ref-type="table">8</xref>).
<table-wrap id="Tab8"><label>Table 8</label><caption><p>Average sum of simulated isotopologues before renormalization</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">σ of Added Error</th><th colspan="2">Average Sum of Isotopologues</th></tr><tr><th>Single-tracer</th><th>Multi-tracer</th></tr></thead><tbody><tr><td>0.1</td><td>1.50</td><td>9.97</td></tr><tr><td>0.01</td><td>1.02</td><td>1.73</td></tr><tr><td>0.001</td><td>0.99</td><td>0.98</td></tr></tbody></table></table-wrap></p>
      <p id="Par35">Based on this calculation, the single-tracer datasets and the multi-tracer datasets have comparable levels of propagated error when normal error with a 0.001σ is added. However, this quickly deviates with larger amounts of additive error as shown by single-tracer datasets with a 0.1σ added normal error having slightly less propagated error than the multi-tracer datasets with a 0.01σ added normal error. The multi-tracer datasets with a σ = 0.1 added normal error are practically useless due to the level of propagated error being roughly nine (i.e. 9.97–1.00 = 8.97 ≈ 9) times the original signal on average. Using histograms of simulated intensities for the largest respective isotopologue in both the single-tracer and multi-tracer simulated datasets, Fig. <xref rid="Fig6" ref-type="fig">6</xref> illustrates these error propagation effects due to thresholding and renormalization. It is clear from this figure the loss of intensity information in the multi-tracer simulated dataset with σ = 0.1 added normal error.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Histograms of simulated intensities for the largest representative isotopologue</p></caption><graphic xlink:href="12859_2019_3096_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
    <sec id="Sec11">
      <title>Model optimization of simulated multi-tracer and single-tracer datasets and comparison of results</title>
      <p id="Par36">For each simulated dataset consisting of a single time point, the respective model was optimized 100 times (i.e. in 100 separate repetitions), each using 5000 steps of SAGA with an absolute objective function. This generated 10,000 separate optimizations for each set of simulated datasets at a given added level of error. Using histograms, Fig. <xref rid="Fig7" ref-type="fig">7</xref> visualizes the distribution for the acetyl and uracil moiety state values for the multi-tracer dataset with 0.01σ added normal error and for the single-tracer datasets with σ = 0.1 and σ = 0.01 added normal error. The full set of histograms are in Additional file <xref rid="MOESM13" ref-type="media">13</xref> for the multi-tracer results and Additional file <xref rid="MOESM14" ref-type="media">14</xref> for the single tracer results. When comparing multi-tracer and single-tracer experiments with equivalent added normal error (σ = 0.01), the propagated error leads to wider variances in the multi-tracer moiety state values and some additional skewness of their distributions. However, some of the single-tracer moiety state value distributions are bimodal. When comparing multi-tracer and single-tracer experiments with comparable propagated error levels, the multimodality in the single-tracer distributions become very pronounced, especially in the acetyl moiety states.
<fig id="Fig7"><label>Fig. 7</label><caption><p>Histograms of the acetyl and uracil optimized moiety state values derived from simulated datasets</p></caption><graphic xlink:href="12859_2019_3096_Fig7_HTML" id="MO7"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Discussion</title>
    <sec id="Sec13">
      <title>Advantage of JSONized representation for MS isotopologue data and analysis results</title>
      <p id="Par37">JavaScript object notation (JSON) [<xref ref-type="bibr" rid="CR16">16</xref>] is an open-standard file format using human-readable text to collect data in pair-value and array structures, widely used by different programming language. Complex Python objects, like ‘Moiety’ and ‘Molecule’ objects mentioned above, can be serialized to JSON format with the jsonpickle Python library. The moiety model and dataset constructed with moiety_modeling package as well as optimization parameters are the input files for the moiety modeling, all of which are saved in JSON format using jsonpickle (see Additional files <xref rid="MOESM2" ref-type="media">2</xref>, <xref rid="MOESM3" ref-type="media">3</xref>, and <xref rid="MOESM8" ref-type="media">8</xref>). The use of JSON format makes the moiety modeling framework easily accessible to other programming languages and naturally extendible. In addition, the optimization and analysis results are also stored in a JSON file (see Additional files <xref rid="MOESM4" ref-type="media">4</xref> and <xref rid="MOESM5" ref-type="media">5</xref>).</p>
    </sec>
    <sec id="Sec14">
      <title>Advantages and limitations of the SAGA-optimize and moiety-modeling packages</title>
      <p id="Par38">The SAGA-optimize package provides certain advantages to the model optimization versus the other optimization methods from scipy and even a similar implementation in GAIMS. The level and steepness of optimization can be precisely tuned with the specification of the annealing length and schedule. Also, this novel implementation of a combined simulated annealing and genetic algorithm incorporates the annealing processing directly into the mutation step itself, attenuating the level of mutation as the annealing temperature drops. The moiety-modeling package provides a range of objective functions and can split each independent set of isotopologues into individual moiety model optimizations, which neither the GAIMS nor MAIMS packages can do. Moreover, both the SAGA-optimize and moiety-modeling packages have multiprocessing facilities that enable an efficient utilization of all CPU cores. As demonstrated in the Table <xref rid="Tab5" ref-type="table">5</xref> results, the combination of advantages allows the moiety-modeling package to optimize and accurately select the expert-derived model in roughly one tenth of the execution time of the original GAIMS package, i.e. with 100,000 steps of optimization in moiety-modeling versus 1,000,000 steps in GAIMS. Also, both the SAGA-optimize and moiety-modeling packages contain over 2200 lines of code implemented in major version 3 of the Python language with a fully object-oriented design and Pythonic style. Every module, class, method, and function have documentation strings (docstrings) written in the reStructuredText markup language. Variables, data members, methods, functions, and classes have descriptive names as demonstrated in Figs. <xref rid="Fig3" ref-type="fig">3</xref>, <xref rid="Fig4" ref-type="fig">4</xref>, and <xref rid="Fig5" ref-type="fig">5</xref>. Documentation is automatically generated using the Sphinx Python Document Generator and made available on ReadTheDocs. This documentation includes a user guide, installation instructions, tutorial, and application programming interface (API) reference. Both packages are available on GitHub, utilize Travis CI for continuous integration, and are distributed via the Python Package Index. Code coverage from unit testing is above 65% for moiety-modeling and above 73% for SAGA-optimize. These packages enable researchers to perform moiety model isotopologue deconvolution using JSON representations of moiety models, datasets, and optimization method selection and settings provided by the user. At this time, the moiety-modeling package has no facilities for automatic moiety model generation.</p>
    </sec>
    <sec id="Sec15">
      <title>Difficulty in generating simulated datasets and comparing multi-tracer to single-tracer moiety modeling results</title>
      <p id="Par39">The generation of realistic simulated biophysical datasets is always a non-trivial task [<xref ref-type="bibr" rid="CR16">16</xref>]. Even the addition of normal additive error can create non-intuitive propagation of error, especially through inverse problems [<xref ref-type="bibr" rid="CR17">17</xref>]. This is illustrated in Table <xref rid="Tab8" ref-type="table">8</xref> and Fig. <xref rid="Fig6" ref-type="fig">6</xref>, where thresholding creates a positive bias in accumulated error and the renormalization creates a proportional-like error component from this positive accumulated error. The thresholding is required to keep the simulated data within the physical boundaries of the analytical detection, i.e. all non-negative values. The renormalization keeps the simulated data within mathematical boundaries, i.e. the sum of the isotopologue values is equal to 1. Neither step can be avoided with the inclusion of normal additive error. This created error propagation problem is quite dramatic for the simulated multi-tracer datasets, because there are 324 possible isotopologues in the multi-tracer datasets as compared to only 18 isotopologues in the single-tracer datasets. This problem simply increases in magnitude with the number of isotopologues present in a dataset. With a σ = 0.1 added normal error, the isotopologue intensity information is effectively lost for the multi-tracer datasets (see Fig. <xref rid="Fig6" ref-type="fig">6</xref>) and these datasets become effectively unusable (see Additional file <xref rid="MOESM13" ref-type="media">13</xref>). However, the lower additive error datasets are usable and illustrate the power of multi-tracer datasets to reduce multimodality in optimized moiety state values as compared to the single-tracer datasets.</p>
    </sec>
  </sec>
  <sec id="Sec16">
    <title>Conclusions</title>
    <p id="Par40">Here, we present a moiety modeling framework for the deconvolution of metabolite isotopologue profiles using moiety models along with the analysis and selection of the best moiety model(s) based on the experimental data. This framework can analyze datasets involving single and multiple isotope tracers as demonstrated on simulated datasets for multiple tracer models and both simulated and experimental datasets on single tracer models. With a <sup>13</sup>C-labeled UDP-GlcNAc isotopologue dataset, we further demonstrate the robust performance of the moiety modeling framework for model selection on real experimental datasets. The selection of correct moiety models is required for generating deconvolution results that can be accurately interpreted in terms of relative metabolic flux. Furthermore, the JSON formats of moiety model, isotopologue data, and optimization results facilitate the inclusion of these tools in data analysis pipelines. Future work will explore the data quality requirements of model selection and validation of multiple isotope tracing model optimization and selection.</p>
  </sec>
  <sec id="Sec17">
    <title>Availability and requirements</title>
    <p id="Par41"><bold>Project name:</bold> moiety_modeling.</p>
    <p id="Par42">
      <bold>Pipeline Installation manual:</bold>
      <ext-link ext-link-type="uri" xlink:href="https://moiety-modeling.readthedocs.io/en/latest/">https://moiety-modeling.readthedocs.io/en/latest/</ext-link>
    </p>
    <p id="Par43"><bold>Operating system:</bold> Linux.</p>
    <p id="Par44"><bold>Programming language:</bold> Python 3.5+.</p>
    <p id="Par45"><bold>Other requirements:</bold> jsonpickle, matplotlib, docopt, scipy, numpy.</p>
    <p id="Par46"><bold>License:</bold> BSD</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec18">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2019_3096_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1.</bold> JSONized description of moiety model components.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2019_3096_MOESM2_ESM.json">
            <caption>
              <p><bold>Additional file 2.</bold> Moiety model description.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2019_3096_MOESM3_ESM.json">
            <caption>
              <p><bold>Additional file 3.</bold> Dataset for moiety modeling.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12859_2019_3096_MOESM4_ESM.json">
            <caption>
              <p><bold>Additional file 4.</bold> Optimization results.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM5">
          <media xlink:href="12859_2019_3096_MOESM5_ESM.json">
            <caption>
              <p><bold>Additional file 5.</bold> Analysis results.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM6">
          <media xlink:href="12859_2019_3096_MOESM6_ESM.docx">
            <caption>
              <p><bold>Additional file 6.</bold> The moiety_modeling package command line interface.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM7">
          <media xlink:href="12859_2019_3096_MOESM7_ESM.docx">
            <caption>
              <p><bold>Additional file 7.</bold> Common patterns for using ‘SAGA’ module as a library.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM8">
          <media xlink:href="12859_2019_3096_MOESM8_ESM.json">
            <caption>
              <p><bold>Additional file 8.</bold> Optimization parameters.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM9">
          <media xlink:href="12859_2019_3096_MOESM9_ESM.docx">
            <caption>
              <p><bold>Additional file 9.</bold> Model rank comparison between moiety_modeling and GAIMS.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM10">
          <media xlink:href="12859_2019_3096_MOESM10_ESM.docx">
            <caption>
              <p><bold>Additional file 10.</bold> Comparison of optimized model parameters between moiety_modeing and GAIMS (Graph).</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM11">
          <media xlink:href="12859_2019_3096_MOESM11_ESM.docx">
            <caption>
              <p><bold>Additional file 11.</bold> Comparison of optimized model parameters between moiety_modeing and GAIMS (Table).</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM12">
          <media xlink:href="12859_2019_3096_MOESM12_ESM.docx">
            <caption>
              <p><bold>Additional file 12.</bold> Comparison of model rank between different repetitions.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM13">
          <media xlink:href="12859_2019_3096_MOESM13_ESM.docx">
            <caption>
              <p><bold>Additional file 13.</bold> Multi-tracer optimization results for simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM14">
          <media xlink:href="12859_2019_3096_MOESM14_ESM.docx">
            <caption>
              <p><bold>Additional file 14.</bold> Single-tracer optimization results for simulated datasets.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>AIC</term>
        <def>
          <p id="Par5">Akaike information criterion</p>
        </def>
      </def-item>
      <def-item>
        <term>BIC</term>
        <def>
          <p id="Par6">Bayesian information criterion</p>
        </def>
      </def-item>
      <def-item>
        <term>GAIMS</term>
        <def>
          <p id="Par7">Genetic Algorithm for Isotopologues in Metabolic Systems</p>
        </def>
      </def-item>
      <def-item>
        <term>JSON</term>
        <def>
          <p id="Par8">JavaScript Object Notation</p>
        </def>
      </def-item>
      <def-item>
        <term>MS</term>
        <def>
          <p id="Par9">mass spectroscopy</p>
        </def>
      </def-item>
      <def-item>
        <term>NMR</term>
        <def>
          <p id="Par10">nuclear magnetic resonance</p>
        </def>
      </def-item>
      <def-item>
        <term>SAGA</term>
        <def>
          <p id="Par11">simulated annealing and genetic algorithm</p>
        </def>
      </def-item>
      <def-item>
        <term>SIRM</term>
        <def>
          <p id="Par12">stable isotope-resolved metabolomics</p>
        </def>
      </def-item>
      <def-item>
        <term>UDP-GlcNAc</term>
        <def>
          <p id="Par13">UDP-N-acetyl-D-glucosamine</p>
        </def>
      </def-item>
      <def-item>
        <term>UML</term>
        <def>
          <p id="Par14">unified Modeling Language</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-019-3096-7.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
    <sec id="FPar1">
      <title>Note</title>
      <p id="Par47">The authors are very willing to collaborate with anyone with an appropriately collected multi-tracer mass spectrometry time series isotopologue dataset to perform a moiety model deconvolution with the software packages presented in this article.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>HJ and HNBM worked together on the design of the Python libraries, their API, and their CLI (moiety_modeling only). HJ implemented the libraries. HNBM helped troubleshoot implementation issues and redesign. HJ and HNBM wrote the manuscript. All authors have read and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported in part by grant NSF 1419282 (PI Moseley), but NSF played no part in the development of the software, the analysis of data, the interpretation of results, nor in the writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The moiety_modeling and SAGA-optimize packages are available on:</p>
    <p>GitHub - <ext-link ext-link-type="uri" xlink:href="https://github.com/MoseleyBioinformaticsLab/moiety_modeling">https://github.com/MoseleyBioinformaticsLab/moiety_modeling</ext-link>, <ext-link ext-link-type="uri" xlink:href="https://github.com/MoseleyBioinformaticsLab/SAGA_optimize">https://github.com/MoseleyBioinformaticsLab/SAGA_optimize</ext-link> .</p>
    <p>PyPI - <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/moiety-modeling/">https://pypi.org/project/moiety-modeling/</ext-link>, <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/SAGA-optimize/">https://pypi.org/project/SAGA-optimize/</ext-link> .</p>
    <p>Project documentation is available online at ReadTheDocs:</p>
    <p><ext-link ext-link-type="uri" xlink:href="https://moiety-modeling.readthedocs.io/en/latest/">https://moiety-modeling.readthedocs.io/en/latest/</ext-link>, <ext-link ext-link-type="uri" xlink:href="https://saga-optimize.readthedocs.io/en/latest/">https://saga-optimize.readthedocs.io/en/latest/</ext-link> .</p>
    <p>All the results analyzed in this manuscript are available on figshare:</p>
    <p><ext-link ext-link-type="uri" xlink:href="https://figshare.com/articles/moiety_modeling_framework/7886135">https://figshare.com/articles/moiety_modeling_framework/7886135</ext-link> .</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par48">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par49">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par50">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DeBerardinis</surname>
            <given-names>RJ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>CB</given-names>
          </name>
        </person-group>
        <article-title>Cellular metabolism and disease: what do metabolic outliers teach us?</article-title>
        <source>Cell.</source>
        <year>2012</year>
        <volume>148</volume>
        <issue>6</issue>
        <fpage>1132</fpage>
        <lpage>1144</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2012.02.032</pub-id>
        <?supplied-pmid 22424225?>
        <pub-id pub-id-type="pmid">22424225</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fan</surname>
            <given-names>TW-M</given-names>
          </name>
          <name>
            <surname>Lorkiewicz</surname>
            <given-names>PK</given-names>
          </name>
          <name>
            <surname>Sellers</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Moseley</surname>
            <given-names>HNB</given-names>
          </name>
          <name>
            <surname>Higashi</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Lane</surname>
            <given-names>AN</given-names>
          </name>
        </person-group>
        <article-title>Stable isotope-resolved metabolomics and applications for drug development</article-title>
        <source>Pharmacol Ther</source>
        <year>2012</year>
        <volume>133</volume>
        <issue>3</issue>
        <fpage>366</fpage>
        <lpage>391</lpage>
        <pub-id pub-id-type="doi">10.1016/j.pharmthera.2011.12.007</pub-id>
        <?supplied-pmid 22212615?>
        <pub-id pub-id-type="pmid">22212615</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Antoniewicz</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Kelleher</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Stephanopoulos</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Elementary metabolite units (EMU): a novel framework for modeling isotopic distributions</article-title>
        <source>Metab Eng</source>
        <year>2007</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>68</fpage>
        <lpage>86</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ymben.2006.09.001</pub-id>
        <?supplied-pmid 17088092?>
        <pub-id pub-id-type="pmid">17088092</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Moseley</surname>
            <given-names>HN</given-names>
          </name>
          <name>
            <surname>Higashi</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>TWLA</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Pellegrini</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fred</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Joaquim Filipe</surname>
            <given-names>HG</given-names>
          </name>
        </person-group>
        <article-title>Metabolic modeling of converging metabolic pathways: analysis of non-steady state stable isotope-resolve metabolism of UDP-GlcNAc and UDP-GalNAc</article-title>
        <source>Bioinformatics 2011 - proceedings of the international conference on bioinformatics models, methods and algorithms</source>
        <year>2011</year>
        <publisher-loc>SciTePress</publisher-loc>
        <publisher-name>Portugal</publisher-name>
        <fpage>108</fpage>
        <lpage>115</lpage>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moseley</surname>
            <given-names>HN</given-names>
          </name>
          <name>
            <surname>Lane</surname>
            <given-names>AN</given-names>
          </name>
          <name>
            <surname>Belshoff</surname>
            <given-names>AC</given-names>
          </name>
          <name>
            <surname>Higashi</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>TW</given-names>
          </name>
        </person-group>
        <article-title>A novel deconvolution method for modeling UDP-N-acetyl-D-glucosamine biosynthetic pathways based on 13C mass isotopologue profiles under non-steady-state conditions</article-title>
        <source>BMC Biol</source>
        <year>2011</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>37</fpage>
        <pub-id pub-id-type="doi">10.1186/1741-7007-9-37</pub-id>
        <?supplied-pmid 21627825?>
        <pub-id pub-id-type="pmid">21627825</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Verdegem</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Moseley</surname>
            <given-names>HNB</given-names>
          </name>
          <name>
            <surname>Vermaelen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Sanchez</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Ghesquière</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>MAIMS: a software tool for sensitive metabolic tracer analysis through the deconvolution of 13C mass isotopologue profiles of large composite metabolites</article-title>
        <source>Metabolomics.</source>
        <year>2017</year>
        <volume>13</volume>
        <issue>10</issue>
        <fpage>123</fpage>
        <pub-id pub-id-type="doi">10.1007/s11306-017-1250-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nash</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Newton-type minimization via the Lanczos method</article-title>
        <source>SIAM J Numer Anal</source>
        <year>1984</year>
        <volume>21</volume>
        <issue>4</issue>
        <fpage>770</fpage>
        <lpage>788</lpage>
        <pub-id pub-id-type="doi">10.1137/0721052</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boggs</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Tolle</surname>
            <given-names>JW</given-names>
          </name>
        </person-group>
        <article-title>Sequential quadratic programming</article-title>
        <source>Acta Numer</source>
        <year>1995</year>
        <volume>4</volume>
        <fpage>1</fpage>
        <pub-id pub-id-type="doi">10.1017/S0962492900002518</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Byrd</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Nocedal</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Algorithm 778: L-BFGS-B: Fortran subroutines for large-scale bound-constrained optimization</article-title>
        <source>ACM Trans Math Softw</source>
        <year>1997</year>
        <volume>23</volume>
        <issue>4</issue>
        <fpage>550</fpage>
        <lpage>560</lpage>
        <pub-id pub-id-type="doi">10.1145/279232.279236</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Akaike</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>Information theory and an extension of the maximum likelihood principle</source>
        <year>1998</year>
        <fpage>199</fpage>
        <lpage>213</lpage>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schwarz</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Estimating the dimension of a model</article-title>
        <source>Ann Stat</source>
        <year>1978</year>
        <volume>6</volume>
        <issue>2</issue>
        <fpage>461</fpage>
        <lpage>464</lpage>
        <pub-id pub-id-type="doi">10.1214/aos/1176344136</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Aguilar D. jsonpickle. <ext-link ext-link-type="uri" xlink:href="https://github.com/jsonpickle/jsonpickle">https://github.com/jsonpickle/jsonpickle</ext-link>. Accessed 20 July 2005.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cavanaugh</surname>
            <given-names>JE</given-names>
          </name>
        </person-group>
        <article-title>Unifying the derivations for the Akaike and corrected Akaike information criteria</article-title>
        <source>Stat Probab Lett</source>
        <year>1997</year>
        <volume>33</volume>
        <issue>2</issue>
        <fpage>201</fpage>
        <lpage>208</lpage>
        <pub-id pub-id-type="doi">10.1016/S0167-7152(96)00128-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wit</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>van den</surname>
            <given-names>HE</given-names>
          </name>
          <name>
            <surname>Romeijn</surname>
            <given-names>J-W</given-names>
          </name>
        </person-group>
        <article-title>‘All models are wrong...’: An introduction to model uncertainty</article-title>
        <source>Stat Neerl</source>
        <year>2012</year>
        <volume>66</volume>
        <issue>3</issue>
        <fpage>217</fpage>
        <lpage>236</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1467-9574.2012.00530.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Latendresse</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Malerich</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Travers</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>PD</given-names>
          </name>
        </person-group>
        <article-title>Accurate atom-mapping computation for biochemical reactions</article-title>
        <source>J Chem Inf Model</source>
        <year>2012</year>
        <volume>52</volume>
        <issue>11</issue>
        <fpage>2970</fpage>
        <lpage>2982</lpage>
        <pub-id pub-id-type="doi">10.1021/ci3002217</pub-id>
        <?supplied-pmid 22963657?>
        <pub-id pub-id-type="pmid">22963657</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smelter</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rouchka</surname>
            <given-names>EC</given-names>
          </name>
          <name>
            <surname>Moseley</surname>
            <given-names>HNB</given-names>
          </name>
        </person-group>
        <article-title>Detecting and accounting for multiple sources of positional variance in peak list registration analysis and spin system grouping</article-title>
        <source>J Biomol NMR</source>
        <year>2017</year>
        <volume>68</volume>
        <issue>4</issue>
        <fpage>281</fpage>
        <lpage>296</lpage>
        <pub-id pub-id-type="doi">10.1007/s108</pub-id>
        <?supplied-pmid 28815397?>
        <pub-id pub-id-type="pmid">28815397</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moseley</surname>
            <given-names>HNB</given-names>
          </name>
        </person-group>
        <article-title>Error analysis and propagation in metabolomics data analysis</article-title>
        <source>Comput Struct Biotechnol J</source>
        <year>2013</year>
        <volume>4</volume>
        <issue>5</issue>
        <fpage>e201301006</fpage>
        <pub-id pub-id-type="doi">10.5936/csbj.201301006</pub-id>
        <?supplied-pmid 23667718?>
        <pub-id pub-id-type="pmid">23667718</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

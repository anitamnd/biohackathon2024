<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput. Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7444595</article-id>
    <article-id pub-id-type="pmid">32776920</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-19-01891</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1007962</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Applied Mathematics</subject>
            <subj-group>
              <subject>Algorithms</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Simulation and Modeling</subject>
          <subj-group>
            <subject>Algorithms</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Geometry</subject>
            <subj-group>
              <subject>Curvature</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Cell Biology</subject>
          <subj-group>
            <subject>Cellular Structures and Organelles</subject>
            <subj-group>
              <subject>Cell Membranes</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Geometry</subject>
            <subj-group>
              <subject>Radii</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Physical Sciences</subject>
        <subj-group>
          <subject>Mathematics</subject>
          <subj-group>
            <subject>Geometry</subject>
            <subj-group>
              <subject>Geodesics</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Cell Biology</subject>
          <subj-group>
            <subject>Cellular Structures and Organelles</subject>
            <subj-group>
              <subject>Vesicles</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Organisms</subject>
          <subj-group>
            <subject>Eukaryota</subject>
            <subj-group>
              <subject>Fungi</subject>
              <subj-group>
                <subject>Yeast</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Cell Biology</subject>
          <subj-group>
            <subject>Cellular Structures and Organelles</subject>
            <subj-group>
              <subject>Cell Membranes</subject>
              <subj-group>
                <subject>Membrane Characteristics</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Reliable estimation of membrane curvature for cryo-electron tomography</article-title>
      <alt-title alt-title-type="running-head">Membrane curvature in cryo-electron tomography</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-7604-6617</contrib-id>
        <name>
          <surname>Salfer</surname>
          <given-names>Maria</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8707-6619</contrib-id>
        <name>
          <surname>Collado</surname>
          <given-names>Javier F.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Baumeister</surname>
          <given-names>Wolfgang</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8366-7622</contrib-id>
        <name>
          <surname>Fernández-Busnadiego</surname>
          <given-names>Rubén</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="aff004">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-5865-2138</contrib-id>
        <name>
          <surname>Martínez-Sánchez</surname>
          <given-names>Antonio</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="aff004">
          <sup>4</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>Department of Molecular Structural Biology, Max Planck Institute of Biochemistry, Martinsried, Germany</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Graduate School of Quantitative Biosciences Munich, Munich, Germany</addr-line>
    </aff>
    <aff id="aff003">
      <label>3</label>
      <addr-line>Institute of Neuropathology, University Medical Center Göttingen, Göttingen, Germany</addr-line>
    </aff>
    <aff id="aff004">
      <label>4</label>
      <addr-line>Cluster of Excellence “Multiscale Bioimaging: from Molecular Machines to Networks of Excitable Cells” (MBExC), University of Göttingen, Germany</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Saucerman</surname>
          <given-names>Jeffrey J.</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>University of Virginia, UNITED STATES</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>martinez@biochem.mpg.de</email>, <email>antonio.martnezsanchez@med.uni-goettingen.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>8</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>10</day>
      <month>8</month>
      <year>2020</year>
    </pub-date>
    <volume>16</volume>
    <issue>8</issue>
    <elocation-id>e1007962</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>10</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>5</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2020 Salfer et al</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Salfer et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pcbi.1007962.pdf"/>
    <abstract>
      <p>Curvature is a fundamental morphological descriptor of cellular membranes. Cryo-electron tomography (cryo-ET) is particularly well-suited to visualize and analyze membrane morphology in a close-to-native state and molecular resolution. However, current curvature estimation methods cannot be applied directly to membrane segmentations in cryo-ET, as these methods cannot cope with some of the artifacts introduced during image acquisition and membrane segmentation, such as quantization noise and open borders. Here, we developed and implemented a Python package for membrane curvature estimation from tomogram segmentations, which we named PyCurv. From a membrane segmentation, a signed surface (triangle mesh) is first extracted. The triangle mesh is then represented by a graph, which facilitates finding neighboring triangles and the calculation of geodesic distances necessary for local curvature estimation. PyCurv estimates curvature based on tensor voting. Beside curvatures, this algorithm also provides robust estimations of surface normals and principal directions. We tested PyCurv and three well-established methods on benchmark surfaces and biological data. This revealed the superior performance of PyCurv not only for cryo-ET, but also for data generated by other techniques such as light microscopy and magnetic resonance imaging. Altogether, PyCurv is a versatile open-source software to reliably estimate curvature of membranes and other surfaces in a wide variety of applications.</p>
    </abstract>
    <abstract abstract-type="summary">
      <title>Author summary</title>
      <p>Membrane curvature plays a central role in many cellular processes like cell division, organelle shaping and membrane contact sites. While cryo-electron tomography (cryo-ET) allows the visualization of cellular membranes in 3D at molecular resolution and close-to-native conditions, there is a lack of computational methods to quantify membrane curvature from cryo-ET data. Therefore, we developed a computational procedure for membrane curvature estimation from tomogram segmentations and implemented it in a software package called PyCurv. PyCurv converts a membrane segmentation, i.e. a set of voxels, into a surface, i.e. a mesh of triangles. PyCurv uses the local geometrical information to reliably estimate the local surface orientation, the principal (maximum and minimum) curvatures and their directions. PyCurv outperforms well-established curvature estimation methods, and it can also be applied to data generated by other imaging techniques.</p>
    </abstract>
    <funding-group>
      <award-group id="award001">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FP7 GA ERC‐2012‐ 387 SyG_318987–ToPAG</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-7604-6617</contrib-id>
          <name>
            <surname>Salfer</surname>
            <given-names>Maria</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award002">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FP7 GA ERC‐2012‐ 387 SyG_318987–ToPAG</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8707-6619</contrib-id>
          <name>
            <surname>Collado</surname>
            <given-names>Javier F.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award003">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FP7 GA ERC‐2012‐ 387 SyG_318987–ToPAG</award-id>
        <principal-award-recipient>
          <name>
            <surname>Baumeister</surname>
            <given-names>Wolfgang</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award004">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FP7 GA ERC‐2012‐ 387 SyG_318987–ToPAG</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-8366-7622</contrib-id>
          <name>
            <surname>Fernández-Busnadiego</surname>
            <given-names>Rubén</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award005">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/501100000780</institution-id>
            <institution>European Commission</institution>
          </institution-wrap>
        </funding-source>
        <award-id>FP7 GA ERC‐2012‐ 387 SyG_318987–ToPAG</award-id>
        <principal-award-recipient>
          <contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-5865-2138</contrib-id>
          <name>
            <surname>Martínez-Sánchez</surname>
            <given-names>Antonio</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <funding-statement>MS and JC have been supported by the Graduate School of Quantitative Biosciences Munich GSC-1006 (<ext-link ext-link-type="uri" xlink:href="http://qbm.genzentrum.lmu.de">http://qbm.genzentrum.lmu.de</ext-link>). MS, JC, WB, RF-B, and AM-S have received funds from the European Research Council FP7 GA ERC-2012- 387 SyG_318987-ToPAG (<ext-link ext-link-type="uri" xlink:href="http://erc.europa.eu">http://erc.europa.eu</ext-link>). AM-S and RF-B were supported by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy - EXC 2067/1-390729940 and the Lower Saxony Ministry of Science and Culture. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="13"/>
      <table-count count="1"/>
      <page-count count="29"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>PLOS Publication Stage</meta-name>
        <meta-value>vor-update-to-uncorrected-proof</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>Publication Update</meta-name>
        <meta-value>2020-08-20</meta-value>
      </custom-meta>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>The algorithms and experimental data are publicly available in a software package called PyCurv at <ext-link ext-link-type="uri" xlink:href="https://github.com/kalemaria/pycurv">https://github.com/kalemaria/pycurv</ext-link>. Tomograms and segmentations in Figs <xref ref-type="fig" rid="pcbi.1007962.g002">2</xref>, <xref ref-type="fig" rid="pcbi.1007962.g011">11</xref> and <xref ref-type="fig" rid="pcbi.1007962.g012">12</xref> have been deposited EM Data Bank (EMD-10767, EMD-10765, and EMD-10766).</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>The algorithms and experimental data are publicly available in a software package called PyCurv at <ext-link ext-link-type="uri" xlink:href="https://github.com/kalemaria/pycurv">https://github.com/kalemaria/pycurv</ext-link>. Tomograms and segmentations in Figs <xref ref-type="fig" rid="pcbi.1007962.g002">2</xref>, <xref ref-type="fig" rid="pcbi.1007962.g011">11</xref> and <xref ref-type="fig" rid="pcbi.1007962.g012">12</xref> have been deposited EM Data Bank (EMD-10767, EMD-10765, and EMD-10766).</p>
  </notes>
</front>
<body>
  <disp-quote>
    <p>This is a <italic>PLOS Computational Biology</italic> Methods paper.</p>
  </disp-quote>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>Membranes define the limits of the cells and encompass compartments within eukaryotic cells, helping to maintain specific micro-environments with different shapes and functions. Membrane curvature is important for many cellular processes, including organelle shaping, vesicle formation, scission and fusion, protein sorting and enzyme activation [<xref rid="pcbi.1007962.ref001" ref-type="bibr">1</xref>, <xref rid="pcbi.1007962.ref002" ref-type="bibr">2</xref>]. There is a plethora of cellular mechanisms for generation, sensing and maintenance of local membrane curvature, e.g. clustering of conical lipids or transmembrane proteins, insertion of specific protein domains as well as larger scale scaffolding by e.g. cytoskeletal filaments [<xref rid="pcbi.1007962.ref001" ref-type="bibr">1</xref>, <xref rid="pcbi.1007962.ref003" ref-type="bibr">3</xref>].</p>
    <p>Cryo-electron tomography (cryo-ET) enables an accurate three-dimensional (3D) visualization and analysis of the subcellular architecture at molecular resolution [<xref rid="pcbi.1007962.ref004" ref-type="bibr">4</xref>–<xref rid="pcbi.1007962.ref006" ref-type="bibr">6</xref>] and is particularly well-suited to study membrane morphology. While other transmission electron microscopy (TEM) techniques may cause membrane deformations by chemical fixation and dehydration, cryo-ET allows imaging of fully hydrated vitrified cells in a close-to-native state with minimal structural perturbations [<xref rid="pcbi.1007962.ref007" ref-type="bibr">7</xref>]. The nominal resolution of tomograms can reach ∼2-4 Å per voxel, but tomograms are usually binned for membrane segmentation to enhance contrast, resulting in voxel sizes of ∼0.8-1.6 nm. Subtomogram averaging allows to routinely obtain structures in the 10-20 Å resolution range, although higher resolutions are in principle attainable [<xref rid="pcbi.1007962.ref008" ref-type="bibr">8</xref>]. Cryo-ET can be used to study membrane morphology and curvature in reconstituted preparations [<xref rid="pcbi.1007962.ref009" ref-type="bibr">9</xref>–<xref rid="pcbi.1007962.ref013" ref-type="bibr">13</xref>] and intact cells [<xref rid="pcbi.1007962.ref014" ref-type="bibr">14</xref>, <xref rid="pcbi.1007962.ref015" ref-type="bibr">15</xref>]. We have recently employed cryo-ET to visualize peaks of extreme curvature on the cortical endoplasmic reticulum (cER) membrane facing the plasma membrane (PM). These high curvature structures are formed by Tcb proteins and help to maintain PM integrity under heat stress [<xref rid="pcbi.1007962.ref016" ref-type="bibr">16</xref>]. We have also used cryo-ET to show that polyQ-expanded huntingtin exon I fibrils induce high curvature in the endoplasmic reticulum (ER) membrane, perhaps leading to ER membrane disruption [<xref rid="pcbi.1007962.ref017" ref-type="bibr">17</xref>]. Since we lacked a method to reliably quantify membrane curvature in noisy cryo-ET data, we developed a new method, which we formally describe in this paper.</p>
    <p>In cryo-ET, the vitreous sample is tilted around an axis inside the electron microscope, while 2D images of a cellular region of interest are acquired for each tilt. The tilt series are then computationally aligned and reconstructed into a tomogram, which is a 3D gray-value image of the cellular interior. Because in practice it is unfeasible to tilt the sample beyond ∼ ±60°, in single-tilt tomography there is a wedge of missing information in the Fourier space. This artifact, called <italic>missing wedge</italic> [<xref rid="pcbi.1007962.ref004" ref-type="bibr">4</xref>], causes the features to look smeared out along the electron beam direction (Z-axis), while surfaces perpendicular to the tilt axis (Y-axis) are not visible. Thus, missing membrane regions appear at the top and the bottom of both the Y- and Z-axes. Nevertheless, the missing wedge does not affect the automatically segmented membrane, the elongated regions are just omitted [<xref rid="pcbi.1007962.ref018" ref-type="bibr">18</xref>, <xref rid="pcbi.1007962.ref019" ref-type="bibr">19</xref>]. Moreover in cryo-ET, the cells are illuminated by only a low dose of electrons, resulting in tomograms of low signal-to-noise ratio. Segmentation, i.e. voxel labeling of structural components present in tomograms, is necessary for tomogram interpretation. Available software packages can assist membrane segmentation [<xref rid="pcbi.1007962.ref018" ref-type="bibr">18</xref>, <xref rid="pcbi.1007962.ref020" ref-type="bibr">20</xref>–<xref rid="pcbi.1007962.ref022" ref-type="bibr">22</xref>], but in most cases human supervision is still necessary due to the complexity of the cellular context and the low signal-to-noise ratio.</p>
    <p>Currently, the interpretation of membrane segmentations is limited by the lack of computational methods to measure quantitative descriptors. Here, we quantitatively determine local curvature descriptors of cellular membranes from tomogram segmentations. A membrane can be modeled as a surface [<xref rid="pcbi.1007962.ref023" ref-type="bibr">23</xref>], so that curvature descriptors characterize its local geometry. For a surface embedded in a 3D space, principal curvatures measure the maximum and minimum bending at each point, while the principal directions define the directions of the principal curvatures as orthogonal vectors embedded on the tangent plane to the surface at each point [<xref rid="pcbi.1007962.ref024" ref-type="bibr">24</xref>]. From the principal curvatures, both extrinsic (mean) and intrinsic (Gaussian) surface curvatures can be computed for each point.</p>
    <p>An oriented triangle mesh is the most common way to represent discrete surfaces [<xref rid="pcbi.1007962.ref025" ref-type="bibr">25</xref>]. However, triangle mesh generation from a set of voxels [<xref rid="pcbi.1007962.ref026" ref-type="bibr">26</xref>] is not trivial because of the presence of holes in membrane segmentations. Besides the errors generated during membrane segmentation, quantization noise [<xref rid="pcbi.1007962.ref027" ref-type="bibr">27</xref>] is the limiting factor for describing local membrane geometry. The term quantization noise includes here all accuracy limiting factors induced by the discretization of segmented data using binary voxels (1 membrane and 0 background). This binary discretization leads to step-wise surfaces, since surface extraction algorithms would need gray levels to achieve subvoxel precision.</p>
    <p>Curvature estimation algorithms can be divided into three main categories: discrete, analytical and based on tensor voting. Discrete algorithms use discretized formulae of differential geometry, approximating a surface from a mesh [<xref rid="pcbi.1007962.ref025" ref-type="bibr">25</xref>, <xref rid="pcbi.1007962.ref028" ref-type="bibr">28</xref>–<xref rid="pcbi.1007962.ref031" ref-type="bibr">31</xref>]. However, the majority of those algorithms use only a 1-ring neighborhood, i.e. triangle vertices sharing an edge with the central vertex, and therefore are not robust for coarsely triangulated, noisy surfaces [<xref rid="pcbi.1007962.ref032" ref-type="bibr">32</xref>]. An exception is [<xref rid="pcbi.1007962.ref031" ref-type="bibr">31</xref>], which uses a geodesic neighborhood of a certain size. Moreover, discrete algorithms do not directly estimate the principal directions or principal curvatures [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>]. Analytical algorithms fit surfaces [<xref rid="pcbi.1007962.ref032" ref-type="bibr">32</xref>, <xref rid="pcbi.1007962.ref034" ref-type="bibr">34</xref>] or curvature tensors [<xref rid="pcbi.1007962.ref035" ref-type="bibr">35</xref>–<xref rid="pcbi.1007962.ref037" ref-type="bibr">37</xref>] to local patches of the mesh, defined by a central vertex and a small neighborhood around it, and derive principal curvatures and directions from their model. The surface fitting algorithms are more robust to noise but more susceptible to surface discontinuities [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>]. The last category of algorithms applies Medioni’s tensor voting theory [<xref rid="pcbi.1007962.ref038" ref-type="bibr">38</xref>] on a neighborhood of an arbitrary size to fit curvature tensors, increasing the robustness of principal directions and curvatures estimation for noisy surfaces with discontinuities [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>, <xref rid="pcbi.1007962.ref039" ref-type="bibr">39</xref>, <xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>]. However, [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>] leads to wrong curvature sign estimation for non-convex surfaces, while [<xref rid="pcbi.1007962.ref039" ref-type="bibr">39</xref>, <xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>] were designed for point clouds instead of triangle meshes. While most of the algorithms operate on triangle vertices because the computation of distances on surfaces is straightforward, some operate on triangle faces [<xref rid="pcbi.1007962.ref031" ref-type="bibr">31</xref>, <xref rid="pcbi.1007962.ref036" ref-type="bibr">36</xref>, <xref rid="pcbi.1007962.ref037" ref-type="bibr">37</xref>], exhibiting a more robust behavior on irregularly tessellated and moderately noisy meshes.</p>
    <p>Discrete curvature estimation algorithms are included in two software packages for analysis of magnetic resonance imaging (MRI) data of the human brain: the widely used FreeSurfer [<xref rid="pcbi.1007962.ref041" ref-type="bibr">41</xref>] and the newer Mindboggle [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>]. Curvature of the interventricular septum in the heart from MRI was estimated in 3D using smoothing 2D spline surfaces and differential geometry operators [<xref rid="pcbi.1007962.ref043" ref-type="bibr">43</xref>]. However, those algorithms require strong smoothing of surfaces to achieve robust results, which would lead to a loss of high resolution details present in cryo-ET data.</p>
    <p>For microscopy data, there is software to study curvature of linear cellular structures like microtubules [<xref rid="pcbi.1007962.ref044" ref-type="bibr">44</xref>], which is not applicable to surfaces. For fluorescence microscopy data, smooth point cloud surfaces of cellular membranes were reconstructed and their curvatures estimated based on local surface fitting [<xref rid="pcbi.1007962.ref045" ref-type="bibr">45</xref>]. Hoffman et al. [<xref rid="pcbi.1007962.ref046" ref-type="bibr">46</xref>] also used a local surface fitting method to estimate membrane curvature from block-face electron microscopy data. However, also these methods employ strong smoothing of surfaces, eliminating small structural details. In cryo-ET, some membrane curvature approximation methods have been already proposed [<xref rid="pcbi.1007962.ref009" ref-type="bibr">9</xref>, <xref rid="pcbi.1007962.ref014" ref-type="bibr">14</xref>], but they only work on 2D slices and are not capable of measuring curvature on arbitrary membranes in 3D.</p>
    <p>Here, we developed and implemented a method for robust membrane curvature estimation from tomogram segmentations. In brief, the workflow has the following steps. (1) From a segmentation, a single-layered, signed triangle mesh surface is extracted. (2) To extract the surface topology, we generate a spatially embedded graph. Graph vertices depict triangle centers and graph edges connect the centers of triangle pairs sharing an edge or a vertex. (3) Local curvature descriptors are computed for every triangle center. We propose different procedures that combine two established tensor voting-based algorithms [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>, <xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>] but operate on triangle faces, aiming to increase the robustness to membrane geometries present in cryo-ET and to minimize the impact of quantization noise. Extensive evaluation of our algorithms and comparison with three well-established ones [<xref rid="pcbi.1007962.ref030" ref-type="bibr">30</xref>, <xref rid="pcbi.1007962.ref041" ref-type="bibr">41</xref>, <xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>] on synthetic and biological surfaces proved the superiority of our approach in terms of accuracy and robustness to noise for cryo-ET and other imaging techniques.</p>
  </sec>
  <sec sec-type="materials|methods" id="sec002">
    <title>Materials and methods</title>
    <sec id="sec003">
      <title>Cryo-ET data collection and segmentation</title>
      <p>As real-world test input files for PyCurv, in this study we used membrane segmentations from <italic>in situ</italic> cryo-ET data collected from vitrified cells: a human HeLa cell [<xref rid="pcbi.1007962.ref017" ref-type="bibr">17</xref>], yeast <italic>Saccharomyces cerevisiae</italic> (EMD-10767 and EMD-10765) and a primary mouse neuron (EMD-10766). The cells were milled down to 150-250 nm thick lamellas using cryo-focused ion beam [<xref rid="pcbi.1007962.ref016" ref-type="bibr">16</xref>, <xref rid="pcbi.1007962.ref054" ref-type="bibr">54</xref>] and imaged using a Titan Krios cryo-electron microscope (FEI), equipped with a K2 Summit direct electron detector (Gatan), operated in dose fractionation mode. Tilt series were recorded using SerialEM software [<xref rid="pcbi.1007962.ref055" ref-type="bibr">55</xref>] at magnifications of 33,000 X (pixel size of 4.21 Å) for the HeLa cell and the mouse neuron and 42,000 X (pixel size of 3.42 Å) for yeast, typically from -50° to +60° with increments of 2°. The K2 frames were aligned using <ext-link ext-link-type="uri" xlink:href="https://github.com/dtegunov/k2align">K2Align software</ext-link> [<xref rid="pcbi.1007962.ref056" ref-type="bibr">56</xref>]. Tilt series were aligned using patch-tracking and weighted back projection provided by the IMOD software package [<xref rid="pcbi.1007962.ref057" ref-type="bibr">57</xref>]. The tomograms were binned 4 times to improve contrast prior to segmentation, thus the voxel size of the final segmentations was 1.684 nm (HeLa cell and mouse neuron) and 1.368 nm (yeast). The contrast of one tomogram of yeast (EMD-10767) was enhanced prior to segmentation using an anisotropic filter [<xref rid="pcbi.1007962.ref058" ref-type="bibr">58</xref>], while the contrast of the other tomogram of yeast (EMD-10765) and the one of the mouse neuron was enhanced using <ext-link ext-link-type="uri" xlink:href="https://github.com/dtegunov/tom_deconv">a deconvolution filter</ext-link> executed in MATLAB (MathWorks) using the functionalities of the TOM toolbox [<xref rid="pcbi.1007962.ref059" ref-type="bibr">59</xref>]. Membrane segmentations were generated automatically from tomograms using TomoSegMemTV [<xref rid="pcbi.1007962.ref018" ref-type="bibr">18</xref>] using parameters <monospace>s</monospace> = 10 and <monospace>t</monospace> = 0.3 (HeLa cell), <monospace>s</monospace> = 12 and <monospace>t</monospace> = 4 (yeast) and <monospace>s</monospace> = 10 and <monospace>t</monospace> = 3 (mouse neuron) and further refined manually using Amira Software (<ext-link ext-link-type="uri" xlink:href="https://www.thermofisher.com/de/de/home/industrial/electron-microscopy/electron-microscopy-instruments-workflow-solutions/3d-visualization-analysis-software/amira-life-sciences-biomedical.html">ThermoFisher Scientific</ext-link>). The lumen of membrane compartments was then filled manually.</p>
    </sec>
    <sec id="sec004">
      <title>Data preprocessing algorithms</title>
      <p>The first steps of the PyCurv workflow (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A</xref>) are the conversion of the input segmentation into a surface and the extraction of its associated graph.</p>
      <fig id="pcbi.1007962.g001" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g001</object-id>
        <label>Fig 1</label>
        <caption>
          <title>PyCurv workflow.</title>
          <p>(<bold>A</bold>) UML activity diagram of the PyCurv workflow. If the input segmentation (in e.g. MRC format) is filled, the surface is generated using the <italic>compartment segmentation</italic>, otherwise using the <italic>membrane segmentation</italic> algorithm. This step is omitted if the input is a surface (in e.g. VTP format). From the surface, a graph is generated. If the graph has surface borders, they are removed. Then, surface normals are estimated at each triangle center. Finally, principle directions and curvatures are estimated and different combined curvature measures calculated using one of the tensor voting-based algorithms: RVV (Regular Vector Voting), NVV (Normal Vector Voting, only for evaluation), AVV (Augmented Vector Voting, default algorithm) or SSVV (Surface Sampling Vector Voting). The output is a surface with all the calculated values stored as triangle properties (VTP format). All the processing steps (rounded rectangles) are implemented in PyCurv. (<bold>B</bold>) Voxels of a segmentation of a vesicle from a cryo-electron tomogram of a human HeLa cell [<xref rid="pcbi.1007962.ref017" ref-type="bibr">17</xref>]. (<bold>C</bold>) A surface (triangle mesh) generated from the membrane segmentation shown in (A). (<bold>D</bold>) Surface graph generated from the surface shown in (B); the inset shows a magnified region of the graph mapped on top of the triangle mesh (triangles: yellow, graph vertices: black dots, strong edges: red lines, weak edges: light blue lines). (<bold>E</bold>) The output surface with estimated normals, principal directions and curvatures as well as several combined curvature measures. Here, curvedness is shown. See also the video in <xref ref-type="supplementary-material" rid="pcbi.1007962.s001">S1 Video</xref>.</p>
        </caption>
        <graphic xlink:href="pcbi.1007962.g001"/>
      </fig>
      <sec id="sec005">
        <title>Surface generation</title>
        <p>A surface can be extracted using PyCurv from two types of input segmentations, a <italic>membrane segmentation</italic> or a <italic>compartment segmentation</italic>. This step is not required if the input is directly a surface (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A</xref>).</p>
        <p>Using the <italic>membrane segmentation</italic> surface generation algorithm, the segmented membrane of interest (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2B</xref>) from the binned tomogram (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2A</xref>) was used as the input for an algorithm [<xref rid="pcbi.1007962.ref026" ref-type="bibr">26</xref>] that reconstructs signed, single-layered triangle-mesh surfaces from an unorganized set of points, here the membrane voxels (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1B</xref>). This algorithm was designed for closed surfaces without boundaries. However, most segmented membranes in cryo-ET are open, e.g. due to noise or missing wedge artifacts. Attempting to close the surface, the algorithm generated large artefactual surface regions beyond the segmentation (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2D</xref>, transparent white). These regions were largely discarded by applying a mask with the membrane segmentation (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2D</xref>, yellow). Since the masking was done with a distance threshold of three voxels in order to bridge upon small holes in the segmentation, additional three voxels-wide border remained. This additional border was removed in the final cleaning step (see Surface graph generation). We use the convention that normal vectors ("normals") point inwards in a convex surface. However, since membrane segmentations have boundaries, the algorithm [<xref rid="pcbi.1007962.ref026" ref-type="bibr">26</xref>] sometimes mistakenly initiates normals on both sides (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2D</xref>, red arrows). As a result, ridge-like patches appear along the surface (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2E</xref>), leading to holes in the cleaned surface (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2F</xref>). In some cases, the surface reconstruction can be improved by closing small holes in the segmentation using morphological operators.</p>
        <fig id="pcbi.1007962.g002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g002</object-id>
          <label>Fig 2</label>
          <caption>
            <title>Surface generation from <italic>membrane</italic> and <italic>compartment segmentations</italic>.</title>
            <p>(<bold>A</bold>) A filtered tomographic slice showing the cortical endoplasmic reticulum (cER) and plasma membrane (PM) of a yeast cell (scale bar: 100 nm). Panels (B-C) show the same slice as in (A) with (<bold>B</bold>) the <italic>membrane segmentation</italic> of the cER and (<bold>C</bold>) the <italic>compartment segmentation</italic> of the cER; the insets show 3D renderings of the full segmentations (including all tomographic slices). Panels (D-F) show a surface generated from the cER <italic>membrane segmentation</italic> shown in (B): (<bold>D</bold>) The unmasked artefactual surface is shown in transparent white. The masked but uncleaned surface is shown in yellow with normals (every 100th) as red arrows. Some of the normals erroneously point outside the cER lumen (see right inset). (<bold>E</bold>) A different view of the uncleaned surface shown in (D), magnified. The red line marks an artifact. (<bold>F</bold>) The same magnified view as in (E) showing the cleaned surface in blue with a hole resulting from removing the artifact shown in (E). Panels (G-L) show surfaces generated using the <italic>compartment segmentation</italic> shown in (C), (G-I) without and (J-L) with Gaussian smoothing; the views are the same as in panels (D-F) column-wise: (<bold>G</bold>, <bold>J</bold>) Using the <italic>compartment segmentation</italic>, all normals point inside the cER lumen (see the insets). (<bold>H</bold>) Without smoothing, triangles sticking out (red circle) in the uncleaned surface lead to a hole in the cleaned surface shown in (<bold>I</bold>). (<bold>K</bold>-<bold>L</bold>) The cleaned smoothed surface is free from artifacts. The tomogram and segmentation are deposited in EM Data Bank (EMD-10767). See also the video in <xref ref-type="supplementary-material" rid="pcbi.1007962.s001">S1 Video</xref>.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g002"/>
        </fig>
        <p>The <italic>compartment segmentation</italic> surface generation algorithm requires additional segmentation of the inner volume of a compartment enclosed by a membrane (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2C</xref>). This unequivocally defines the orientation of the membrane by closing its holes. After joining the membrane and its inner volume masks, we generate an isosurface around the resulting volume using the Marching Cubes algorithm [<xref rid="pcbi.1007962.ref047" ref-type="bibr">47</xref>]. Finally, we apply a mask using the original membrane segmentation to keep only the surface region going through the membrane (again, except for the additional border that is cleaned in the end). The surface orientation is recovered perfectly in our experiments (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2G</xref>). In some cases, especially where the membrane segmentation was manually refined, Marching Cubes produces triangles standing out perpendicularly to the surface (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2H</xref>), leading to holes in the cleaned surface (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2I</xref>). To correct those artifacts and exploit the subvoxel precision offered by Marching Cubes, the compartment segmentation mask was slightly smoothed using a Gaussian kernel with <italic>σ</italic> = 1 voxel before extracting the surface (<xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2J–2L</xref>).</p>
        <p>In summary, although compartment segmentations require more human intervention, they ensure smoother and well oriented surfaces. Thus, we choose this algorithm as the default for the subsequent data processing.</p>
      </sec>
      <sec id="sec006">
        <title>Surface graph generation</title>
        <p>Curvature is a local property. Thus, for a triangle-mesh surface, curvature has to be estimated using a local neighborhood of triangles. If the neighborhood is too small, one would measure only noise created by the steps between voxels. If the neighborhood is too large, one would underestimate the curvature.</p>
        <p>To estimate geodesic distances within membrane surfaces, we use the graph-tool python library [<xref rid="pcbi.1007962.ref048" ref-type="bibr">48</xref>] to map the triangle mesh (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A and 1C</xref>) into a spatially embedded graph, here referred as <italic>surface graph</italic>. First, graph vertices are associated to triangle centroid coordinates. Second, pairs of triangles sharing two triangle vertices are connected by <italic>strong</italic> edges, while those sharing only one triangle vertex are connected by <italic>weak</italic> edges (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1D</xref>). To approximate the shortest paths along the surface between the centers of a source triangle and a target triangle, the graph is traversed starting from the source vertex along all its edges until the target vertex is found, using the Dijkstra algorithm [<xref rid="pcbi.1007962.ref049" ref-type="bibr">49</xref>]. Using both strong and weak edges increases the number of possible paths and thus improves the estimation of the shortest path. The geodesic distance is computed by summing up the lengths of the edges comprising the shortest path.</p>
        <p>Another application of the surface graph is to remove surface borders to avoid wrong curvature estimations in these regions. Using the surface graph, we can detect triangles at borders because they have less than three strong edges. Then, triangles up to a certain geodesic distance from the border can be found and filtered out from the surface.</p>
      </sec>
    </sec>
    <sec id="sec007">
      <title>Curvature estimation algorithms</title>
      <p>We estimate membrane curvature from surface graphs (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A</xref>). This algorithm combines two previously published algorithms that are based on tensor voting and curvature tensor theory [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>, <xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>], to increase the precision of curvature estimation for noisy surfaces. To estimate principal curvatures, principal directions have to be estimated. For the estimation of principal directions, surface normals are required. Surface normals are robustly estimated by averaging normals of triangles within a geodesic neighborhood.</p>
      <sec id="sec008">
        <title>Parameters defining the geodesic neighborhood</title>
        <p>Similarly to [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>], here we define a <monospace>radius_hit</monospace> (<monospace>rh</monospace>) parameter to approximate the highest curvature value we can estimate reliably, i.e. <monospace>rh</monospace><sup>-1</sup>. For each surface triangle center, we define its local neighborhood as
<disp-formula id="pcbi.1007962.e001"><alternatives><graphic xlink:href="pcbi.1007962.e001.jpg" id="pcbi.1007962.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>π</mml:mi><mml:mo>·</mml:mo><mml:mtext mathvariant="monospace">rh</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(1)</label></disp-formula>
where <italic>g</italic><sub><italic>max</italic></sub> defines the maximum geodesic distance. In <xref ref-type="disp-formula" rid="pcbi.1007962.e001">Eq 1</xref>, <italic>g</italic><sub><italic>max</italic></sub> is approximated by one quarter of a circle perimeter with radius equal to <monospace>rh</monospace> (<xref ref-type="fig" rid="pcbi.1007962.g003">Fig 3A</xref>).</p>
        <fig id="pcbi.1007962.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>Neighborhood parameters and voting geometry.</title>
            <p>(<bold>A</bold>) Schematic illustrating the <monospace>rh</monospace> and <italic>g</italic><sub><italic>max</italic></sub> parameters. <italic>g</italic><sub><italic>max</italic></sub> is one quarter of the circle perimeter with radius equal to <monospace>rh</monospace>. <italic>g</italic><sub><italic>max</italic></sub> defines the maximum geodesic distance from a surface triangle center to the centers of its neighboring triangles, approximated by the shortest path along the edges of the surface graph. (<bold>B</bold>) Collection of normal votes in all proposed algorithms based on [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>]. The rectangle denotes the plane containing the circular arc (dashed line) between the neighboring triangle centers v and c<sub><italic>i</italic></sub>, the normal vector <inline-formula id="pcbi.1007962.e002"><alternatives><graphic id="pcbi.1007962.e002g" xlink:href="pcbi.1007962.e002"/><mml:math id="M2"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> at c<sub><italic>i</italic></sub> and the normal vote <inline-formula id="pcbi.1007962.e003"><alternatives><graphic id="pcbi.1007962.e003g" xlink:href="pcbi.1007962.e003"/><mml:math id="M3"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> at v. (<bold>C</bold>) Collection of curvature votes for the NVV, RVV and AVV algorithms based on [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>]. The rectangle denotes the arc plane containing the triangle center v, its estimated normal <inline-formula id="pcbi.1007962.e004"><alternatives><graphic id="pcbi.1007962.e004g" xlink:href="pcbi.1007962.e004"/><mml:math id="M4"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula>, its tangent <inline-formula id="pcbi.1007962.e005"><alternatives><graphic id="pcbi.1007962.e005g" xlink:href="pcbi.1007962.e005"/><mml:math id="M5"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> towards neighboring triangle center v<sub><italic>i</italic></sub> and the projection <inline-formula id="pcbi.1007962.e006"><alternatives><graphic id="pcbi.1007962.e006g" xlink:href="pcbi.1007962.e006"/><mml:math id="M6"><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>p</mml:mi></mml:msubsup></mml:math></alternatives></inline-formula> of the estimated normal <inline-formula id="pcbi.1007962.e007"><alternatives><graphic id="pcbi.1007962.e007g" xlink:href="pcbi.1007962.e007"/><mml:math id="M7"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> at v<sub><italic>i</italic></sub>. (<bold>D</bold>) Collection of curvature votes in the SSVV algorithm based on [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>]. The rectangle denotes the plane containing the tangent vector <inline-formula id="pcbi.1007962.e008"><alternatives><graphic id="pcbi.1007962.e008g" xlink:href="pcbi.1007962.e008"/><mml:math id="M8"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> at v of length = <monospace>rh</monospace>, ending with the point v<sub><italic>t</italic></sub>, and the normal vector <inline-formula id="pcbi.1007962.e009"><alternatives><graphic id="pcbi.1007962.e009g" xlink:href="pcbi.1007962.e009"/><mml:math id="M9"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> at v. The line <italic>l</italic>, crossing v<sub><italic>t</italic></sub> and parallel to <inline-formula id="pcbi.1007962.e010"><alternatives><graphic id="pcbi.1007962.e010g" xlink:href="pcbi.1007962.e010"/><mml:math id="M10"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula>, intersects the surface (dashed) at point c.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g003"/>
        </fig>
      </sec>
      <sec id="sec009">
        <title>Estimation of surface normals</title>
        <p>Normals computed directly from the triangle mesh are corrupted by quantization noise. To avoid this, we have adapted the first step of the algorithm proposed in [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>], but estimating the normals for each triangle center instead of defining new normals at each triangle vertex.</p>
        <p>For each triangle centroid (or graph vertex) v, the normal votes of all triangles within its geodesic neighborhood are collected and the weighted covariance matrix sum <italic>V</italic><sub>v</sub> is calculated. More precisely, a normal vote <inline-formula id="pcbi.1007962.e011"><alternatives><graphic xlink:href="pcbi.1007962.e011.jpg" id="pcbi.1007962.e011g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M11"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> of a neighboring triangle (whose center c<sub><italic>i</italic></sub> is lying within <italic>g</italic><sub><italic>max</italic></sub> of vertex v) is calculated using the normal <inline-formula id="pcbi.1007962.e012"><alternatives><graphic xlink:href="pcbi.1007962.e012.jpg" id="pcbi.1007962.e012g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M12"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> assigned to this triangle:
<disp-formula id="pcbi.1007962.e013"><alternatives><graphic xlink:href="pcbi.1007962.e013.jpg" id="pcbi.1007962.e013g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M13"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mspace width="2pt"/><mml:mtext>cos</mml:mtext><mml:mspace width="2pt"/><mml:msub><mml:mi>θ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mfrac><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(2)</label></disp-formula>
where <inline-formula id="pcbi.1007962.e014"><alternatives><graphic xlink:href="pcbi.1007962.e014.jpg" id="pcbi.1007962.e014g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M14"><mml:mrow><mml:mtext>cos</mml:mtext><mml:mspace width="2pt"/><mml:msub><mml:mi>θ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mrow></mml:math></alternatives></inline-formula>, <inline-formula id="pcbi.1007962.e015"><alternatives><graphic xlink:href="pcbi.1007962.e015.jpg" id="pcbi.1007962.e015g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M15"><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>t</mml:mi></mml:msubsup></mml:math></alternatives></inline-formula> is the transposed vector <inline-formula id="pcbi.1007962.e016"><alternatives><graphic xlink:href="pcbi.1007962.e016.jpg" id="pcbi.1007962.e016g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M16"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula>, <inline-formula id="pcbi.1007962.e017"><alternatives><graphic xlink:href="pcbi.1007962.e017.jpg" id="pcbi.1007962.e017g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M17"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mtext>v</mml:mtext></mml:mrow></mml:math></alternatives></inline-formula> and 0 ≤ <italic>θ</italic><sub><italic>i</italic></sub> ≤ <italic>π</italic>. This formula fits a smooth curve from c<sub><italic>i</italic></sub> to v, allowing the normal vote <inline-formula id="pcbi.1007962.e018"><alternatives><graphic xlink:href="pcbi.1007962.e018.jpg" id="pcbi.1007962.e018g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M18"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> to follow this curve, so that the angle <italic>θ</italic><sub><italic>i</italic></sub> between <inline-formula id="pcbi.1007962.e019"><alternatives><graphic xlink:href="pcbi.1007962.e019.jpg" id="pcbi.1007962.e019g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M19"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007962.e020"><alternatives><graphic xlink:href="pcbi.1007962.e020.jpg" id="pcbi.1007962.e020g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M20"><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> is equal to the angle between <inline-formula id="pcbi.1007962.e021"><alternatives><graphic xlink:href="pcbi.1007962.e021.jpg" id="pcbi.1007962.e021g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M21"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>c</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> and -<inline-formula id="pcbi.1007962.e022"><alternatives><graphic xlink:href="pcbi.1007962.e022.jpg" id="pcbi.1007962.e022g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M22"><mml:msub><mml:mover accent="true"><mml:mtext>vc</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula>. According to the perceptual continuity constrain [<xref rid="pcbi.1007962.ref038" ref-type="bibr">38</xref>], the most appropriate curve is the shortest circular arc (<xref ref-type="fig" rid="pcbi.1007962.g003">Fig 3B</xref>). Then, each vote is represented by a covariance matrix <inline-formula id="pcbi.1007962.e023"><alternatives><graphic xlink:href="pcbi.1007962.e023.jpg" id="pcbi.1007962.e023g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M23"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></alternatives></inline-formula>, and votes from the geodesic neighborhood are collected as a weighted matrix sum <italic>V</italic><sub>v</sub>:
<disp-formula id="pcbi.1007962.e024"><alternatives><graphic xlink:href="pcbi.1007962.e024.jpg" id="pcbi.1007962.e024g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M24"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mtext>v</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mo>∑</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>V</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(3)</label></disp-formula>
where <italic>w</italic><sub><italic>i</italic></sub> is a weighting term calculated as follows:
<disp-formula id="pcbi.1007962.e025"><alternatives><graphic xlink:href="pcbi.1007962.e025.jpg" id="pcbi.1007962.e025g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M25"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mfrac><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mo>−</mml:mo><mml:mfrac><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>σ</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(4)</label></disp-formula>
The weight of the vote of a neighboring triangle increases linearly with its surface area <italic>a</italic><sub><italic>i</italic></sub>, but decreases exponentially with its geodesic distance <italic>g</italic><sub><italic>i</italic></sub> to v. <italic>a</italic><sub><italic>max</italic></sub> is the area of the largest triangle in the whole surface and <italic>σ</italic> is an exponential decay parameter, which is set to fulfill 3<italic>σ</italic> = <italic>g</italic><sub><italic>max</italic></sub>, so that votes beyond the geodesic neighborhood have almost no influence and can be ignored.</p>
        <p>The votes collected into the matrix <italic>V</italic><sub>v</sub> are used for estimating the correct normal vector for the triangle represented by vertex v. This is done by eigen-decomposition of <italic>V</italic><sub>v</sub>, which generates three real eigenvalues <italic>e</italic><sub>1</sub> ≥ <italic>e</italic><sub>2</sub> ≥ <italic>e</italic><sub>3</sub> with corresponding eigenvectors <inline-formula id="pcbi.1007962.e026"><alternatives><graphic xlink:href="pcbi.1007962.e026.jpg" id="pcbi.1007962.e026g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M26"><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>, <inline-formula id="pcbi.1007962.e027"><alternatives><graphic xlink:href="pcbi.1007962.e027.jpg" id="pcbi.1007962.e027g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M27"><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007962.e028"><alternatives><graphic xlink:href="pcbi.1007962.e028.jpg" id="pcbi.1007962.e028g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M28"><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:math></alternatives></inline-formula>. The normal direction is equal in its absolute value to that of the first eigenvector. During construction of <italic>V</italic><sub>v</sub>, the sign of normal votes is lost when <italic>V</italic><sub><italic>i</italic></sub> is computed. The correct orientation can be recovered from the original normal <inline-formula id="pcbi.1007962.e029"><alternatives><graphic xlink:href="pcbi.1007962.e029.jpg" id="pcbi.1007962.e029g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M29"><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:math></alternatives></inline-formula>, as the original surface was already oriented. Therefore, the estimated normal is correctly oriented by:
<disp-formula id="pcbi.1007962.e030"><alternatives><graphic xlink:href="pcbi.1007962.e030.jpg" id="pcbi.1007962.e030g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M30"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mspace width="0.277778em"/><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>t</mml:mi></mml:msup><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo>)</mml:mo><mml:mo>&gt;</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo>(</mml:mo><mml:mo>−</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>t</mml:mi></mml:msup><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>e</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(5)</label></disp-formula></p>
      </sec>
      <sec id="sec010">
        <title>Estimation of principal directions and curvatures</title>
        <p>For each graph vertex v, we use the estimated normals <inline-formula id="pcbi.1007962.e031"><alternatives><graphic xlink:href="pcbi.1007962.e031.jpg" id="pcbi.1007962.e031g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M31"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> of its geodesic neighbors v<sub><italic>i</italic></sub> in order to cast curvature votes. The curvature votes are summed into a curvature tensor. The resulting curvature tensor is decomposed to find the principal directions and curvatures at vertex v. Below, we describe the basic curvature estimation algorithm as an adaptation of [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>] and [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>].</p>
        <p>Each neighboring vertex v<sub><italic>i</italic></sub> casts a vote to the central vertex v, where the votes are collected into a 3x3 symmetric matrix <italic>B</italic><sub>v</sub> [<xref rid="pcbi.1007962.ref035" ref-type="bibr">35</xref>]:
<disp-formula id="pcbi.1007962.e032"><alternatives><graphic xlink:href="pcbi.1007962.e032.jpg" id="pcbi.1007962.e032g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M32"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mtext>v</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow></mml:mfrac><mml:mo>∑</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:msubsup><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mspace width="0.166667em"/><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(6)</label></disp-formula>
For each v<sub><italic>i</italic></sub>, three variables are computed:
<list list-type="order"><list-item><p>Weight <italic>w</italic><sub><italic>i</italic></sub> depending on the geodesic distance between v<sub><italic>i</italic></sub> and v, as defined in <xref ref-type="disp-formula" rid="pcbi.1007962.e025">Eq 4</xref> but without normalizing by relative triangle area:
<disp-formula id="pcbi.1007962.e033"><alternatives><graphic xlink:href="pcbi.1007962.e033.jpg" id="pcbi.1007962.e033g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M33"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mo>−</mml:mo><mml:mfrac><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>σ</mml:mi></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(7)</label></disp-formula></p><p>Also, all weights around the vertex v are constrained by ∑<italic>w</italic><sub><italic>i</italic></sub> = 2<italic>π</italic>.</p></list-item><list-item><p>Tangent <inline-formula id="pcbi.1007962.e034"><alternatives><graphic xlink:href="pcbi.1007962.e034.jpg" id="pcbi.1007962.e034g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M34"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> from v in the direction of the arc connecting v and v<sub><italic>i</italic></sub> (using the estimated normal <inline-formula id="pcbi.1007962.e035"><alternatives><graphic xlink:href="pcbi.1007962.e035.jpg" id="pcbi.1007962.e035g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M35"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> at v) (<xref ref-type="fig" rid="pcbi.1007962.g003">Fig 3C</xref>):
<disp-formula id="pcbi.1007962.e036"><alternatives><graphic xlink:href="pcbi.1007962.e036.jpg" id="pcbi.1007962.e036g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M36"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mover accent="true"><mml:msup><mml:mi>t</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:msup><mml:mi>t</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mspace width="4pt"/><mml:msub><mml:mover accent="true"><mml:msup><mml:mi>t</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mtext>vv</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mtext>v</mml:mtext></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:msub><mml:mover accent="true"><mml:mtext>vv</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(8)</label></disp-formula></p></list-item><list-item><p>Normal curvature <italic>κ</italic><sub><italic>i</italic></sub> [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>]:
<disp-formula id="pcbi.1007962.e037"><alternatives><graphic xlink:href="pcbi.1007962.e037.jpg" id="pcbi.1007962.e037g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M37"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>=</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mn>2</mml:mn><mml:mspace width="2pt"/><mml:mtext>cos</mml:mtext><mml:mspace width="2pt"/></mml:mrow><mml:mfrac><mml:mrow><mml:mi>π</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mrow><mml:mo>|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mtext>vv</mml:mtext><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(9)</label></disp-formula>
where <italic>ϕ</italic><sub><italic>i</italic></sub> is the turning angle between <inline-formula id="pcbi.1007962.e038"><alternatives><graphic xlink:href="pcbi.1007962.e038.jpg" id="pcbi.1007962.e038g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M38"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> and the projection <inline-formula id="pcbi.1007962.e039"><alternatives><graphic xlink:href="pcbi.1007962.e039.jpg" id="pcbi.1007962.e039g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M39"><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>p</mml:mi></mml:msubsup></mml:math></alternatives></inline-formula> of <inline-formula id="pcbi.1007962.e040"><alternatives><graphic xlink:href="pcbi.1007962.e040.jpg" id="pcbi.1007962.e040g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M40"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:math></alternatives></inline-formula> onto the arc plane (formed by v, <inline-formula id="pcbi.1007962.e041"><alternatives><graphic xlink:href="pcbi.1007962.e041.jpg" id="pcbi.1007962.e041g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M41"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> and v<sub><italic>i</italic></sub>). The following calculations lead to <italic>ϕ</italic><sub><italic>i</italic></sub>:
<disp-formula id="pcbi.1007962.e042"><alternatives><graphic xlink:href="pcbi.1007962.e042.jpg" id="pcbi.1007962.e042g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M42"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mspace width="4pt"/><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>p</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>−</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mspace width="0.166667em"/><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtext>cos</mml:mtext><mml:mspace width="2pt"/><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mtext>v</mml:mtext></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>p</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mrow><mml:mo>‖</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(10)</label></disp-formula></p></list-item></list></p>
        <p>For surface generation, we use the convention that normals point inwards in a convex surface. Then, the curvature is positive if the surface patch is curved towards the normal and negative otherwise. Therefore, the sign of <italic>κ</italic><sub><italic>i</italic></sub> is set by:
<disp-formula id="pcbi.1007962.e043"><alternatives><graphic xlink:href="pcbi.1007962.e043.jpg" id="pcbi.1007962.e043g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M43"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:msubsup><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mspace width="0.166667em"/><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:msub><mml:mtext>v</mml:mtext><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mi>p</mml:mi></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(11)</label></disp-formula>
For a vertex v and its calculated matrix <italic>B</italic><sub>v</sub>, we calculate the principal directions, maximum <inline-formula id="pcbi.1007962.e044"><alternatives><graphic xlink:href="pcbi.1007962.e044.jpg" id="pcbi.1007962.e044g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M44"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula> and minimum <inline-formula id="pcbi.1007962.e045"><alternatives><graphic xlink:href="pcbi.1007962.e045.jpg" id="pcbi.1007962.e045g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M45"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>, and the respective curvatures, <italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub>, at this vertex. This is done using eigen-decomposition of <italic>B</italic><sub>v</sub>, resulting in three eigenvalues <italic>b</italic><sub>1</sub> ≥ <italic>b</italic><sub>2</sub> ≥ <italic>b</italic><sub>3</sub> and their corresponding eigenvectors <inline-formula id="pcbi.1007962.e046"><alternatives><graphic xlink:href="pcbi.1007962.e046.jpg" id="pcbi.1007962.e046g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M46"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></alternatives></inline-formula>
<inline-formula id="pcbi.1007962.e047"><alternatives><graphic xlink:href="pcbi.1007962.e047.jpg" id="pcbi.1007962.e047g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M47"><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007962.e048"><alternatives><graphic xlink:href="pcbi.1007962.e048.jpg" id="pcbi.1007962.e048g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M48"><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:math></alternatives></inline-formula>. The eigenvectors <inline-formula id="pcbi.1007962.e049"><alternatives><graphic xlink:href="pcbi.1007962.e049.jpg" id="pcbi.1007962.e049g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M49"><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula> and <inline-formula id="pcbi.1007962.e050"><alternatives><graphic xlink:href="pcbi.1007962.e050.jpg" id="pcbi.1007962.e050g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M50"><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> are the principal directions. The principal curvatures are found with linear transformations of the first two eigenvalues [<xref rid="pcbi.1007962.ref035" ref-type="bibr">35</xref>]:
<disp-formula id="pcbi.1007962.e051"><alternatives><graphic xlink:href="pcbi.1007962.e051.jpg" id="pcbi.1007962.e051g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M51"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>b</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(12)</label></disp-formula>
The smallest eigenvalue <italic>b</italic><sub>3</sub> has to be close to zero and the corresponding eigenvector <inline-formula id="pcbi.1007962.e052"><alternatives><graphic xlink:href="pcbi.1007962.e052.jpg" id="pcbi.1007962.e052g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M52"><mml:msub><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>3</mml:mn></mml:msub></mml:math></alternatives></inline-formula> has to be similar to the normal <inline-formula id="pcbi.1007962.e053"><alternatives><graphic xlink:href="pcbi.1007962.e053.jpg" id="pcbi.1007962.e053g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M53"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>].</p>
      </sec>
      <sec id="sec011">
        <title>Algorithm variants</title>
        <p>We implemented the following algorithm variants within PyCurv.</p>
        <p><italic>Vector Voting (VV)</italic>: Estimation of surface normals algorithm, which is the same for all our algorithms listed below.</p>
        <p><italic>Regular Vector Voting (RVV)</italic>: Estimation of principal directions and curvatures algorithm described above. Modifications of this algorithm were implemented to determine the best solution for cryo-ET:</p>
        <p><italic>Normal Vector Voting (NVV)</italic>: In [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>], curvature is computed as the turning angle <italic>ϕ</italic><sub><italic>i</italic></sub> divided by arc length between the vertices v and v<sub><italic>i</italic></sub>, which is the geodesic distance between them, <italic>g</italic><sub><italic>i</italic></sub>:
<disp-formula id="pcbi.1007962.e054"><alternatives><graphic xlink:href="pcbi.1007962.e054.jpg" id="pcbi.1007962.e054g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M54"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(13)</label></disp-formula>
However, this definition of <italic>κ</italic><sub><italic>i</italic></sub> with the sign according to our normals convention (<xref ref-type="disp-formula" rid="pcbi.1007962.e043">Eq 11</xref>) lead to erroneous eigenvalue analysis of <italic>B</italic><sub>v</sub>. The eigenvalue analysis was only successful for <italic>κ</italic><sub>i</sub> &gt; 0, leading to wrong curvature sign estimation for non-convex surfaces (see Section Estimation of the curvature sign).</p>
        <p><italic>Augmented Vector Voting (AVV)</italic>: Here, the weights of curvature votes, prioritizing neighbors with a closer geodesic distance to the central triangle vertex v, are normalized by relative triangle area as for normal votes using <xref ref-type="disp-formula" rid="pcbi.1007962.e025">Eq 4</xref> instead of <xref ref-type="disp-formula" rid="pcbi.1007962.e033">Eq 7</xref>.</p>
        <p><italic>Surface Sampling Vector Voting (SSVV)</italic>: We implemented the algorithm <monospace>GenCurvVote</monospace> from [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>] to estimate the principal directions and curvatures. While RVV, NVV and AVV use all points within the geodesic neighborhood of a given surface point v, in SSVV only eight points on the surface are sampled using <monospace>rh</monospace>. For this, an arbitrary tangent vector <inline-formula id="pcbi.1007962.e055"><alternatives><graphic xlink:href="pcbi.1007962.e055.jpg" id="pcbi.1007962.e055g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M55"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:math></alternatives></inline-formula> at v with length equal to <monospace>rh</monospace> is first generated, creating a point v<sub><italic>t</italic></sub> in the plane formed by this tangent and the normal <inline-formula id="pcbi.1007962.e056"><alternatives><graphic xlink:href="pcbi.1007962.e056.jpg" id="pcbi.1007962.e056g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M56"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> at v (<xref ref-type="fig" rid="pcbi.1007962.g003">Fig 3D</xref>). Then, a line <italic>l</italic> crossing v<sub><italic>t</italic></sub> and parallel to the normal <inline-formula id="pcbi.1007962.e057"><alternatives><graphic xlink:href="pcbi.1007962.e057.jpg" id="pcbi.1007962.e057g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M57"><mml:msub><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mtext>v</mml:mtext></mml:msub></mml:math></alternatives></inline-formula> is drawn and its intersection point c with the surface is found. The tangent is rotated seven times around the normal by <inline-formula id="pcbi.1007962.e058"><alternatives><graphic xlink:href="pcbi.1007962.e058.jpg" id="pcbi.1007962.e058g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M58"><mml:mfrac><mml:mi>π</mml:mi><mml:mn>4</mml:mn></mml:mfrac></mml:math></alternatives></inline-formula> radians, generating another seven intersection points. Each vote is weighted equally, thus <xref ref-type="disp-formula" rid="pcbi.1007962.e032">Eq 6</xref> simplifies to:
<disp-formula id="pcbi.1007962.e059"><alternatives><graphic xlink:href="pcbi.1007962.e059.jpg" id="pcbi.1007962.e059g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M59"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mtext>v</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>8</mml:mn></mml:mfrac><mml:mo>∑</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub><mml:msubsup><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mspace width="0.166667em"/><mml:mi>t</mml:mi></mml:mrow></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(14)</label></disp-formula>
The output of these curvature estimation algorithms comprises the surface with corrected normals, estimated principal directions and curvatures as well as different combined curvature measures: mean curvature <italic>H</italic> (<xref ref-type="disp-formula" rid="pcbi.1007962.e060">Eq 15</xref>), Gaussian curvature <italic>K</italic> (<xref ref-type="disp-formula" rid="pcbi.1007962.e061">Eq 16</xref>), curvedness <italic>C</italic> (<xref ref-type="disp-formula" rid="pcbi.1007962.e062">Eq 17</xref>) and shape index <italic>SI</italic> (<xref ref-type="disp-formula" rid="pcbi.1007962.e063">Eq 18</xref>) [<xref rid="pcbi.1007962.ref050" ref-type="bibr">50</xref>]. All these measures are stored as triangle properties in the VTP surface output file that can be viewed using e.g. the free visualization tool ParaView [<xref rid="pcbi.1007962.ref051" ref-type="bibr">51</xref>] (<xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1E</xref>).
<disp-formula id="pcbi.1007962.e060"><alternatives><graphic xlink:href="pcbi.1007962.e060.jpg" id="pcbi.1007962.e060g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M60"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>H</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(15)</label></disp-formula>
<disp-formula id="pcbi.1007962.e061"><alternatives><graphic xlink:href="pcbi.1007962.e061.jpg" id="pcbi.1007962.e061g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M61"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>κ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(16)</label></disp-formula>
<disp-formula id="pcbi.1007962.e062"><alternatives><graphic xlink:href="pcbi.1007962.e062.jpg" id="pcbi.1007962.e062g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M62"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>κ</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>κ</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:msqrt></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(17)</label></disp-formula>
<disp-formula id="pcbi.1007962.e063"><alternatives><graphic xlink:href="pcbi.1007962.e063.jpg" id="pcbi.1007962.e063g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M63"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>S</mml:mi><mml:mi>I</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mfrac><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(18)</label></disp-formula></p>
        <p>The complete workflow of our method including the input, processing steps and output is shown as an UML (Unified Modeling Language) activity diagram in <xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A</xref>. See also the video in <xref ref-type="supplementary-material" rid="pcbi.1007962.s001">S1 Video</xref>.</p>
      </sec>
      <sec id="sec012">
        <title>Other algorithms</title>
        <p>We used the following alternative curvature estimation algorithms available in other software packages for comparison to our algorithms.</p>
        <p><italic>VTK</italic> [<xref rid="pcbi.1007962.ref030" ref-type="bibr">30</xref>]: The Visualization Toolkit (VTK) calculates curvature per triangle vertex using only its adjacent triangles and applying discrete differential operators [<xref rid="pcbi.1007962.ref025" ref-type="bibr">25</xref>]. In order to be able to compare VTK to our tensor voting-based algorithms operating on triangles, we average the values of each curvature type at three triangle vertices to obtain one value per triangle. VTK does not estimate principal directions.</p>
        <p><italic>FreeSurfer</italic> [<xref rid="pcbi.1007962.ref052" ref-type="bibr">52</xref>]: FreeSurfer’s function <monospace>mris_curvature_stats</monospace> [<xref rid="pcbi.1007962.ref041" ref-type="bibr">41</xref>] estimates mean, Gaussian and principal curvatures, curvedness as well as other local and global derived curvature measures per triangle vertex, based on osculating circle fitting. FreeSurfer fails on surface edges and holes, so it cannot be applied to a cylindrical surface.</p>
        <p><italic>Mindboggle</italic> [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>]: Mindboggle’s default algorithm (<monospace>m</monospace> = 0) estimates mean, Gaussian and principal curvatures per triangle vertex, based on the relative directions of the normal vectors in a small neighborhood. We choose the optimal radius of neighborhood parameter (<monospace>n</monospace>) for each benchmark surface in the same way as for our algorithms (see Section Setting the neighborhood parameter).</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="results" id="sec013">
    <title>Results</title>
    <sec id="sec014">
      <title>Quantitative results on benchmark surfaces</title>
      <sec id="sec015">
        <title>Calculation of errors</title>
        <p>We first evaluate the accuracy of our algorithms using benchmark surfaces with known orientation and curvature. For that purpose, we define two types of errors:
<list list-type="order"><list-item><p>For vectors (normals or principal directions):
<disp-formula id="pcbi.1007962.e064"><alternatives><graphic xlink:href="pcbi.1007962.e064.jpg" id="pcbi.1007962.e064g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M64"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mi>V</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mspace width="4pt"/><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>v</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>t</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>v</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>e</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(19)</label></disp-formula>
where <inline-formula id="pcbi.1007962.e065"><alternatives><graphic xlink:href="pcbi.1007962.e065.jpg" id="pcbi.1007962.e065g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M65"><mml:msub><mml:mover accent="true"><mml:mi>v</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>t</mml:mi></mml:msub></mml:math></alternatives></inline-formula> is a true vector and <inline-formula id="pcbi.1007962.e066"><alternatives><graphic xlink:href="pcbi.1007962.e066.jpg" id="pcbi.1007962.e066g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M66"><mml:msub><mml:mover accent="true"><mml:mi>v</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mi>e</mml:mi></mml:msub></mml:math></alternatives></inline-formula> is an estimated vector for the same triangle, both having length 1. The minimum error is 0, when the true and estimated vectors are parallel, and the maximum error is 1, when the vectors are perpendicular.</p></list-item><list-item><p>For scalars (principal curvatures) we use:
<disp-formula id="pcbi.1007962.e067"><alternatives><graphic xlink:href="pcbi.1007962.e067.jpg" id="pcbi.1007962.e067g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M67"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mspace width="4pt"/><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mspace width="4pt"/><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>κ</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow><mml:msub><mml:mi>κ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(20)</label></disp-formula>
where <italic>κ</italic><sub><italic>t</italic></sub> is a true curvature and <italic>κ</italic><sub><italic>e</italic></sub> is an estimated curvature for the same triangle. The minimum error is 0, when the estimate equals to the true value, and there is no upper bound to the error.</p></list-item></list></p>
      </sec>
      <sec id="sec016">
        <title>Robust estimation of normals</title>
        <p>Surface normals are required for a reliable estimation of the principal directions and principal curvatures. In this experiment, we wanted to ensure that VV restores the correct orientation of the normals. For this, we used a plane surface with artificially introduced noise to simulate the quantization noise present in surfaces generated from cryo-ET segmentations. The true normals are those from the plane without noise (i.e. parallel to Z-axis, <xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4A</xref>). Noise was introduced to the original plane by moving each triangle vertex in the direction of its normal vector with Gaussian variance equal to e.g. 10% of the average triangle edge. As a result, the triangle normals of the 10% noisy plane were not parallel to each other nor to Z-axis (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4B</xref>), which was also reflected by the normal orientation errors up to ∼30% (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4E</xref>). Using VV with <monospace>rh</monospace> of 4 voxels, the original orientation of the normals was almost restored (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4C</xref>), and the errors reduced to below 10% (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4E</xref>). Using <monospace>rh</monospace> of 8 voxels, the estimation further improved (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4D and 4E</xref>), since more neighboring triangles helped to average out the noise. For planes with more noise, the normal orientation errors of the initial normals and the estimated ones with <monospace>rh</monospace> of 4 voxels increased, reducing the area under the histogram curve. However, the estimation stayed robust using <monospace>rh</monospace> of 8 voxels even for a 30% noisy plane (<xref ref-type="fig" rid="pcbi.1007962.g004">Fig 4F</xref>). Thus, using VV with a high enough <monospace>rh</monospace> substantially restores the original orientation of the normals.</p>
        <fig id="pcbi.1007962.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>Estimation of normals on a noisy plane.</title>
            <p>(<bold>A</bold>) True normals (black arrows) on a smooth plane surface (yellow). (<bold>B</bold>) Normals on a noisy plane, where each triangle vertex in the original plane shown in (A) was moved in the direction of its normal vector with Gaussian variance equal to 10% of the average triangle edge. Panels (C-D) show normals on the noisy plane corrected by VV with <monospace>rh</monospace> of (<bold>C</bold>) 4 or (<bold>D</bold>) 8 voxels. The neighborhoods of a central triangle are shown in a darker yellow. (<bold>E</bold>) Cumulative relative frequency histogram of normal orientation error for the 10% noisy plane, for initial (uncorrected) normals and those corrected by VV with <monospace>rh</monospace> of 4 or 8 voxels. (<bold>F</bold>) Area under the curve of cumulative relative frequency histograms of normal orientation errors, as shown in (E), for planes with different noise levels. Initial normals and those corrected by VV with <monospace>rh</monospace> of 4 or 8 voxels are shown. Curve colors in (E-F) correspond to the colors of the normals in (B-D).</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g004"/>
        </fig>
      </sec>
      <sec id="sec017">
        <title>Setting the neighborhood parameter</title>
        <p>As shown above, the size of the neighborhood defined by the <monospace>rh</monospace> parameter influences the estimation of normals. Therefore, choosing an appropriate <monospace>rh</monospace> for the data is crucial for accurate curvature estimation.</p>
        <p>To study the influence of <monospace>rh</monospace> in our different curvature estimation algorithms, we generated a synthetic segmentation (25³ voxels) of a sphere with radius of 10 voxels, emulating the quantization noise present in cryo-ET data (the central slice of the sphere is shown in <xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5A</xref>). Then, we generated an isosurface of this segmentation and estimated its curvature using the different algorithms and <monospace>rh</monospace> values. We define the optimal <monospace>rh</monospace> value for a sphere as the one leading to the least errors in both estimated principal curvatures taken together. As above, we measure the error rate by the normalized area under the cumulative error histograms. For this spherical surface, the lowest errors were reached for <monospace>rh</monospace> = 10 voxels for AVV and <monospace>rh</monospace> = 8 voxels for SSVV (<xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5B and 5C</xref>, <xref rid="pcbi.1007962.t001" ref-type="table">Table 1</xref>). These values are close to the sphere radius, suggesting that the most robust estimation can be achieved using a <monospace>rh</monospace> approximately similar to the feature radius. Performance of SSVV decreased drastically for <monospace>rh</monospace> = 10 voxels, because then less sampling points at exactly this radius lie on the surface, preventing a reliable estimation (<xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5C</xref>, <xref rid="pcbi.1007962.t001" ref-type="table">Table 1</xref>). Interestingly, the histogram area kept rising until <monospace>rh</monospace> = 16 voxels for RVV (<xref rid="pcbi.1007962.t001" ref-type="table">Table 1</xref>), which exceeds the sphere radius. Actually, the histogram area kept rising even beyond <monospace>rh</monospace> = 16 voxels for <italic>κ</italic><sub>1</sub> alone, whereas it started to decrease after <monospace>rh</monospace> = 12 voxels for <italic>κ</italic><sub>2</sub> (<xref rid="pcbi.1007962.t001" ref-type="table">Table 1</xref>). For practical reasons, we decided to always limit <monospace>rh</monospace> by the radius of the feature (<xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5D</xref>).</p>
        <fig id="pcbi.1007962.g005" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g005</object-id>
          <label>Fig 5</label>
          <caption>
            <title><monospace>rh</monospace> parameter choice.</title>
            <p>(<bold>A</bold>) A central slice of a synthetic segmentation of a sphere with radius = 10 voxels. Panels (B-D) show cumulative frequency histograms of the <italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub> errors on the surface extracted from the segmentation shown in (A), using different <monospace>rh</monospace> (5-10 voxels) and algorithms: (<bold>B</bold>) AVV, (<bold>C</bold>) SSVV and (<bold>D</bold>) RVV.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g005"/>
        </fig>
        <table-wrap id="pcbi.1007962.t001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.t001</object-id>
          <label>Table 1</label>
          <caption>
            <title><monospace>rh</monospace> parameter choice.</title>
          </caption>
          <alternatives>
            <graphic id="pcbi.1007962.t001g" xlink:href="pcbi.1007962.t001"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="center" rowspan="2" style="border-bottom:thick;border-right:thick" colspan="1">
                    <monospace>rh</monospace>
                  </th>
                  <th align="center" colspan="3" style="border-right:thick" rowspan="1">RVV</th>
                  <th align="center" colspan="3" style="border-right:thick" rowspan="1">AVV</th>
                  <th align="center" colspan="3" rowspan="1">SSVV</th>
                </tr>
                <tr>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>1</sub>
                  </th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>2</sub>
                  </th>
                  <th align="right" style="border-bottom:thick;border-right:thick" rowspan="1" colspan="1"><italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub></th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>1</sub>
                  </th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>2</sub>
                  </th>
                  <th align="right" style="border-bottom:thick;border-right:thick" rowspan="1" colspan="1"><italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub></th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>1</sub>
                  </th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1">
                    <italic>κ</italic>
                    <sub>2</sub>
                  </th>
                  <th align="right" style="border-bottom:thick" rowspan="1" colspan="1"><italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub></th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">5</td>
                  <td align="char" char="." rowspan="1" colspan="1">64.62%</td>
                  <td align="char" char="." rowspan="1" colspan="1">83.59%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">74.10%</td>
                  <td align="char" char="." rowspan="1" colspan="1">78.32%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.68%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">84.50%</td>
                  <td align="char" char="." rowspan="1" colspan="1">70.05%</td>
                  <td align="char" char="." rowspan="1" colspan="1">81.97%</td>
                  <td align="char" char="." rowspan="1" colspan="1">76.01%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">6</td>
                  <td align="char" char="." rowspan="1" colspan="1">70.21%</td>
                  <td align="char" char="." rowspan="1" colspan="1">87.44%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">78.82%</td>
                  <td align="char" char="." rowspan="1" colspan="1">83.80%</td>
                  <td align="char" char="." rowspan="1" colspan="1">94.12%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">88.96%</td>
                  <td align="char" char="." rowspan="1" colspan="1">77.85%</td>
                  <td align="char" char="." rowspan="1" colspan="1">89.90%</td>
                  <td align="char" char="." rowspan="1" colspan="1">83.87%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">7</td>
                  <td align="char" char="." rowspan="1" colspan="1">74.47%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.41%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">82.44%</td>
                  <td align="char" char="." rowspan="1" colspan="1">87.46%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.30%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">91.38%</td>
                  <td align="char" char="." rowspan="1" colspan="1">83.16%</td>
                  <td align="char" char="." rowspan="1" colspan="1">93.81%</td>
                  <td align="char" char="." rowspan="1" colspan="1">88.48%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">8</td>
                  <td align="char" char="." rowspan="1" colspan="1">78.27%</td>
                  <td align="char" char="." rowspan="1" colspan="1">93.24%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">85.75%</td>
                  <td align="char" char="." rowspan="1" colspan="1">89.13%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.67%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.40%</td>
                  <td align="char" char="." rowspan="1" colspan="1">88.03%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.46%</td>
                  <td align="char" char="." rowspan="1" colspan="1">
                    <bold>91.75%</bold>
                  </td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">9</td>
                  <td align="char" char="." rowspan="1" colspan="1">80.89%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.73%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">88.31%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.11%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.90%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">93.00%</td>
                  <td align="char" char="." rowspan="1" colspan="1">87.25%</td>
                  <td align="char" char="." rowspan="1" colspan="1">89.53%</td>
                  <td align="char" char="." rowspan="1" colspan="1">88.39%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">10</td>
                  <td align="char" char="." rowspan="1" colspan="1">82.76%</td>
                  <td align="char" char="." rowspan="1" colspan="1">97.24%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">90.00%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.75%</td>
                  <td align="char" char="." rowspan="1" colspan="1">96.09%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">
                    <bold>93.42%</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">57.63%</td>
                  <td align="char" char="." rowspan="1" colspan="1">2.61%</td>
                  <td align="char" char="." rowspan="1" colspan="1">30.12%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">11</td>
                  <td align="char" char="." rowspan="1" colspan="1">84.31%</td>
                  <td align="char" char="." rowspan="1" colspan="1">97.93%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">91.12%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.72%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.95%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">93.34%</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.00%</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.00%</td>
                  <td align="char" char="." rowspan="1" colspan="1">0.00%</td>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">12</td>
                  <td align="char" char="." rowspan="1" colspan="1">85.12%</td>
                  <td align="char" char="." rowspan="1" colspan="1">98.23%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">91.67%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.71%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.46%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">93.09%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">13</td>
                  <td align="char" char="." rowspan="1" colspan="1">85.55%</td>
                  <td align="char" char="." rowspan="1" colspan="1">98.09%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">91.82%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.60%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.14%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.87%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">14</td>
                  <td align="char" char="." rowspan="1" colspan="1">85.95%</td>
                  <td align="char" char="." rowspan="1" colspan="1">98.01%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">91.98%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.76%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.08%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.92%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">15</td>
                  <td align="char" char="." rowspan="1" colspan="1">86.15%</td>
                  <td align="char" char="." rowspan="1" colspan="1">98.01%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.08%</td>
                  <td align="char" char="." rowspan="1" colspan="1">90.97%</td>
                  <td align="char" char="." rowspan="1" colspan="1">95.02%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.99%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">16</td>
                  <td align="char" char="." rowspan="1" colspan="1">86.35%</td>
                  <td align="char" char="." rowspan="1" colspan="1">97.92%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">
                    <bold>92.13%</bold>
                  </td>
                  <td align="char" char="." rowspan="1" colspan="1">91.14%</td>
                  <td align="char" char="." rowspan="1" colspan="1">94.92%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">93.03%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <td align="center" style="border-right:thick" rowspan="1" colspan="1">17</td>
                  <td align="char" char="." rowspan="1" colspan="1">86.53%</td>
                  <td align="char" char="." rowspan="1" colspan="1">97.72%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">92.13%</td>
                  <td align="char" char="." rowspan="1" colspan="1">91.28%</td>
                  <td align="char" char="." rowspan="1" colspan="1">94.86%</td>
                  <td align="char" char="." style="border-right:thick" rowspan="1" colspan="1">93.07%</td>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                  <td align="right" rowspan="1" colspan="1"/>
                </tr>
              </tbody>
            </table>
          </alternatives>
          <table-wrap-foot>
            <fn id="t001fn001">
              <p>Performance of our proposed algorithms on noisy sphere with radius = 10 voxels depending on <monospace>rh</monospace> (in voxels) is measured by normalized area of the cumulative histograms of the principal curvature errors (separately and taken together). The “<italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub>” maxima for each algorithm are shown in bold.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>The optimal <monospace>rh</monospace>, which can differ between surfaces and algorithms, defines a neighborhood sufficient for robust estimation of curvature. Features with a radius less than <monospace>rh</monospace> are averaged (RVV and AVV) or neglected (SSVV), so <monospace>rh</monospace><sup>−1</sup> can be set as a limit for the maximum curvature that can be reliably computed.</p>
      </sec>
      <sec id="sec018">
        <title>Estimation of the curvature sign</title>
        <p>To determine the correct procedure for curvature sign determination, we used a torus as a benchmark, as this surface has regions with both positive, <italic>κ</italic><sub>1</sub><italic>κ</italic><sub>2</sub> &gt; 0, and negative, <italic>κ</italic><sub>1</sub><italic>κ</italic><sub>2</sub> &lt; 0, Gaussian curvature. Analytically calculated <italic>κ</italic><sub>2</sub> is shown in <xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6A</xref>. VTK, Mindboggle and FreeSurfer estimated the curvature sign correctly (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6D, 6F and 6G</xref>). Whereas NVV did not distinguish negative from positive regions (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6B</xref>), RVV and SSVV differentiated these regions correctly (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6C and 6G</xref>). Since RVV and SSVV both calculate normal curvature using Eqs <xref ref-type="disp-formula" rid="pcbi.1007962.e037">9</xref> and <xref ref-type="disp-formula" rid="pcbi.1007962.e043">11</xref>, while NVV uses <xref ref-type="disp-formula" rid="pcbi.1007962.e054">Eq 13</xref>, the latter must be the source of the erroneous curvature sign estimation. Therefore, we exclude NVV from further consideration.</p>
        <fig id="pcbi.1007962.g006" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g006</object-id>
          <label>Fig 6</label>
          <caption>
            <title>Curvature sign, principal direction and curvature estimation accuracy for a torus.</title>
            <p>Panels (A-D) show visualizations of <italic>κ</italic><sub>2</sub> (voxel<sup>-1</sup>, triangles are color-coded by curvature, see color bar on the right) and <inline-formula id="pcbi.1007962.e068"><alternatives><graphic id="pcbi.1007962.e068g" xlink:href="pcbi.1007962.e068"/><mml:math id="M68"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> (every fourth vector is shown as an arrow from a triangle center): (<bold>A</bold>) true values calculated analytically for a smooth torus surface with ring radius (rr) = 25 voxels and cross-section radius (csr) = 10 voxels, (<bold>B</bold>) estimated values using NVV, (<bold>C</bold>) RVV (both with <monospace>rh</monospace> = 8 voxels) and (<bold>D</bold>) Mindboggle (MB, with <monospace>n</monospace> = 4 voxels). Panels (E-G) show cumulative relative frequency histograms of the principal direction and curvature errors: (<bold>E</bold>) <inline-formula id="pcbi.1007962.e069"><alternatives><graphic id="pcbi.1007962.e069g" xlink:href="pcbi.1007962.e069"/><mml:math id="M69"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula>, (<bold>F</bold>) <italic>κ</italic><sub>1</sub>, (<bold>G</bold>) <italic>κ</italic><sub>2</sub> on the torus surface using different algorithms: RVV, AVV, SSVV, VTK, MB and FreeSurfer (FS); the latter three algorithms only for curvatures in (F-G), since they do not estimate principle directions; the optimal <monospace>rh</monospace> or <monospace>n</monospace> (in voxels) were used for each algorithm and are indicated in the legends.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g006"/>
        </fig>
      </sec>
      <sec id="sec019">
        <title>Accuracy of curvature estimation on smooth surfaces</title>
        <p>To evaluate the performance of the different curvature estimation algorithms, we first calculated the errors in principal directions and curvatures using smooth surfaces.</p>
        <p>First, we applied the algorithms to the smooth torus surface shown in <xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6A</xref> using for each algorithm an <monospace>rh</monospace> optimal for <italic>κ</italic><sub>2</sub> (10 voxels for RVV, 9 voxels for AVV and 6 voxels for SSVV). The <inline-formula id="pcbi.1007962.e070"><alternatives><graphic xlink:href="pcbi.1007962.e070.jpg" id="pcbi.1007962.e070g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M70"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> error histogram is shown in <xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6E</xref>, and very similar results were observed for <inline-formula id="pcbi.1007962.e071"><alternatives><graphic xlink:href="pcbi.1007962.e071.jpg" id="pcbi.1007962.e071g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M71"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:math></alternatives></inline-formula>. SSVV estimated both principal directions and curvatures (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6E–6G</xref>) more accurately than RVV. AVV slightly outperformed RVV in the estimation of principal curvatures. However, VTK estimated principal curvatures slightly better than the tensor voting-based algorithms for this smooth surface with uniform triangles. Mindboggle with the optimal (for <italic>κ</italic><sub>2</sub>) <monospace>n</monospace> = 4 voxels was the best method for estimating <italic>κ</italic><sub>1</sub> (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6F</xref>), but the worst for <italic>κ</italic><sub>2</sub> (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6D and 6G</xref>), whereas FreeSurfer performed the best for <italic>κ</italic><sub>2</sub> (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6G</xref>). Note that the curvature errors for <italic>κ</italic><sub>1</sub> (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6F</xref>) were lower than for <italic>κ</italic><sub>2</sub> (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6G</xref>) for all algorithms. A possible explanation is that <italic>κ</italic><sub>1</sub> is constant for a torus and thus easier to estimate, while <italic>κ</italic><sub>2</sub> changes depending on the position.</p>
        <p>We also compared the algorithms using a smooth spherical surface with a non-uniform triangle tessellation, generated from a spherical volume mask smoothed using a 3D Gaussian function (<italic>σ</italic> = 3.3) and applying an isosurface. Since both principal curvatures should be the same for a spherical surface, they were considered together. Also, no true principal directions exist for a spherical surface. For a sphere with radius = 10 voxels, the optimal values of <monospace>rh</monospace> were used: 10 voxels for RVV and AVV and 9 voxels for SSVV as well as the optimal <monospace>n</monospace> = 2 voxels for Mindboggle. VTK, Mindboggle and FreeSurfer had very high errors (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7A, 7B and 7E</xref>). The maximum error was only ∼0.16 for RVV (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7C and 7E</xref>), while AVV achieved a substantial improvement (maximum error ∼0.03) over RVV (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7D and 7E</xref>), presumably because of the non-uniform tessellation of the sphere. SSVV performed slightly better than AVV (maximum error ∼0.01; <xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7E</xref>).</p>
        <fig id="pcbi.1007962.g007" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g007</object-id>
          <label>Fig 7</label>
          <caption>
            <title>Accuracy of curvature estimation on a smooth spherical surface.</title>
            <p>Panels (A-D) show visualizations of <italic>κ</italic><sub>2</sub> (voxel<sup>-1</sup>) estimated by (<bold>A</bold>) VTK, (<bold>B</bold>) FreeSurfer (FS), (<bold>C</bold>) RVV or (<bold>D</bold>) AVV on a smooth sphere with radius = 10 voxels, using <monospace>rh</monospace> = 10 voxels for RVV and AVV. Panels (E-F) show cumulative relative frequency histograms of the principal curvature (<italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub>) errors on a smooth sphere with radius = 10 (<bold>E</bold>) or 20 voxels (<bold>F</bold>) using different algorithms: RVV, AVV, SSVV, VTK, Mindboggle (MB) and FS; the values of <monospace>rh</monospace> or <monospace>n</monospace> (in voxels) used for each algorithm are indicated in the legends.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g007"/>
        </fig>
        <p>To test how stable the algorithms are for different curvature scales, we increased the radius of the smooth sphere from 10 to 20 voxels, while leaving the <monospace>rh</monospace> and <monospace>n</monospace> values the same. All algorithms performed almost the same as for the sphere with radius 10 voxels (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7F</xref>).</p>
        <p>Altogether, the evaluation results on smooth benchmark surfaces show that the tensor voting-based algorithms are quite stable to feature sizes variations (beyond <monospace>rh</monospace>) and irregular triangles within one surface (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7</xref>), whereas VTK, Mindboggle and FreeSurfer only perform well for a very smooth surface with a regular triangulation (<xref ref-type="fig" rid="pcbi.1007962.g006">Fig 6</xref>). AVV can deal with non-uniformly tessellated surfaces better than RVV, likely because curvature votes are also weighted by relative triangle area in AVV. In the original algorithm [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>], weighting curvature votes by triangle area would not make sense because normals and curvatures are estimated at triangle vertices. Since we decided to estimate normals and curvatures at triangle centers instead, curvature votes are cast by complete triangles and weighting them by triangle area proved to be advantageous.</p>
      </sec>
      <sec id="sec020">
        <title>Robustness to surface noise</title>
        <p>Surfaces generated from segmentations of biological membranes are not smooth, as the surface triangles tend to follow the voxel boundaries resulting in steps. As we are considering binary voxel values, the size of the steps depends on the voxel size of the segmented tomogram.</p>
        <p>To test how the algorithms perform in presence of quantization noise, we generated a step-like surface of a sphere with a radius of 10 voxels, as in <xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5</xref>. As expected, VTK only measured the curvature differences between directly neighboring triangles, resulting in high errors, similar to Mindboggle (using the optimal <monospace>n</monospace> = 2 voxels) and FreeSurfer (<xref ref-type="fig" rid="pcbi.1007962.g008">Fig 8A, 8B and 8E</xref>). To compare RVV, AVV and SSVV, we first used optimal <monospace>rh</monospace> values (10 voxels for RVV and AVV and 8 voxels for SSVV, <xref ref-type="fig" rid="pcbi.1007962.g005">Fig 5B–5D</xref>, <xref rid="pcbi.1007962.t001" ref-type="table">Table 1</xref>). The principal curvature errors were higher for AVV and SSVV compared to the smooth sphere (5-10 fold, compare X-axis scales in Figs <xref ref-type="fig" rid="pcbi.1007962.g007">7E</xref> and <xref ref-type="fig" rid="pcbi.1007962.g008">8E</xref>), but were similar for RVV. However, AVV outperformed SSVV in this case (<xref ref-type="fig" rid="pcbi.1007962.g008">Fig 8C–8E</xref>), whereas the latter performed slightly better on the smooth spherical surface (<xref ref-type="fig" rid="pcbi.1007962.g007">Fig 7E</xref>).</p>
        <fig id="pcbi.1007962.g008" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g008</object-id>
          <label>Fig 8</label>
          <caption>
            <title>Accuracy of curvature estimation on a spherical surface with quantization noise.</title>
            <p>Panels (A-D) show visualizations of <italic>κ</italic><sub>2</sub> (voxel<sup>-1</sup>) estimated by (<bold>A</bold>) VTK, (<bold>B</bold>) FreeSurfer (FS), (<bold>C</bold>) AVV using the optimal <monospace>rh</monospace> = 10 voxels or (<bold>D</bold>) SSVV using the optimal <monospace>rh</monospace> = 8 voxels on a sphere with quantization noise and radius = 10 voxels. Panels (<bold>E</bold>-<bold>G</bold>) show cumulative relative frequency histograms of the principal curvature (<italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub>) errors on a spherical surface with quantization noise and (E) radius = 10 or (F-G) 30 voxels using RVV, AVV, SSVV, VTK, Mindboggle (MB) and FS; latter three algorithms only in (E-F). The values of <monospace>rh</monospace> or <monospace>n</monospace> (in voxels) used for each algorithm are indicated in the legends.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g008"/>
        </fig>
        <p>We compared again the accuracy of the algorithms for increasing feature size and a constant <monospace>rh</monospace> value. When using a sphere with a radius of 30 voxels, VTK, Mindboggle and FreeSurfer still performed extremely poorly, and the estimation accuracy of SSVV decreased drastically, while the performance of AVV and RVV decreased only slightly (<xref ref-type="fig" rid="pcbi.1007962.g008">Fig 8F</xref>). The performance of SSVV improved using a <monospace>rh</monospace> value similar to the sphere radius, 28 voxels, which should be close to optimum (<xref ref-type="fig" rid="pcbi.1007962.g008">Fig 8G</xref>). Also the performance of AVV increased in this case, while the performance of RVV stayed similar (compare <xref ref-type="fig" rid="pcbi.1007962.g008">Fig 8F and 8G</xref>).</p>
        <p>Therefore, when quantization noise is present, all our algorithms perform better than the currently available methods tested here. SSVV requires a higher <monospace>rh</monospace> in the range of the curvature radius, while AVV is quite stable with a lower <monospace>rh</monospace> value. Using a very high <monospace>rh</monospace> is generally not advisable, as it would lead to the underestimation of curvatures at smaller surface features. Since RVV performed consistently worse than AVV, we exclude RVV from further comparison.</p>
      </sec>
      <sec id="sec021">
        <title>Higher errors at surface borders</title>
        <p>As explained previously, membranes in cryo-ET segmentations have holes and open ends. Thus, we aimed for a curvature estimation algorithm that is robust to such artifacts.</p>
        <p>Tensor voting-based algorithms use a supporting neighborhood in order to improve the estimation, so holes much smaller than the neighborhood region do not affect them critically. However, a vertex close to surface border has considerably less neighbors. Therefore, we hypothesized that the estimation accuracy at vertices close to such borders would be worse. To prove this hypothesis, we generated a smooth cylindrical surface opened at both sides with radius = 10 and height = 25 voxels and evaluated the performance of our algorithms. Optimal <monospace>rh</monospace> values were used for AVV (5 voxels) and for SSVV (6 voxels), as well as optimal <monospace>n</monospace> for Mindboggle (2 voxels). FreeSurfer was not included in this test, since it failed on this open surface.</p>
        <p>As expected, both tensor voting-based algorithms made a worse estimation near borders: AVV overestimated <italic>κ</italic><sub>1</sub> gradually when moving towards the borders and <italic>κ</italic><sub>2</sub> at the last triangles (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9A</xref>), while SSVV underestimated <italic>κ</italic><sub>1</sub> consistently and made a gradient of wrong estimations for <italic>κ</italic><sub>2</sub> in the same region (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9B</xref>). Since VTK does not use a bigger neighborhood, it showed high errors at changes in the triangle pattern all over the cylinder (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9C</xref>). Mindboggle showed high errors for <italic>κ</italic><sub>1</sub> in a striped pattern and for <italic>κ</italic><sub>2</sub> at some patches near the borders (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9D</xref>). SSVV and AVV showed <inline-formula id="pcbi.1007962.e072"><alternatives><graphic xlink:href="pcbi.1007962.e072.jpg" id="pcbi.1007962.e072g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M72"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> and <italic>κ</italic><sub>1</sub> errors in the same range (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9E and 9F</xref>), while VTK and Mindboggle made higher <italic>κ</italic><sub>1</sub> errors than our algorithms (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9F</xref>). When excluding values within the distance of 5 voxels to the graph border, the errors were virtually eliminated for AVV and SSVV, but did not change for VTK (<xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9G and 9H</xref>). For Mindboggle, we could not exclude values at borders because our graph structure used for borders filtering is not available for that method. However, as one can see in <xref ref-type="fig" rid="pcbi.1007962.g009">Fig 9D</xref>, the high <italic>κ</italic><sub>1</sub> errors of Mindboggle would not have been eliminated with this strategy.</p>
        <fig id="pcbi.1007962.g009" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g009</object-id>
          <label>Fig 9</label>
          <caption>
            <title>Estimation accuracy on a cylindrical surface.</title>
            <p>Panels (A-D) show principal curvatures on a smooth cylinder with radius = 10 and height = 25 voxels estimated by different algorithms: (<bold>A</bold>) AVV using the optimal <monospace>rh</monospace> = 5 voxels, (<bold>B</bold>) SSVV using the optimal <monospace>rh</monospace> = 6 voxels, (<bold>C</bold>) VTK and (<bold>D</bold>) Mindboggle (MB) using the optimal <monospace>n</monospace> = 2 voxels; the estimated <italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub> are shown in their original ranges; true <italic>κ</italic><sub>1</sub> = 0.1, true <italic>κ</italic><sub>2</sub> = 0 voxel<sup>-1</sup>. Panels (E-H) show cumulative relative frequency histograms of the <inline-formula id="pcbi.1007962.e073"><alternatives><graphic id="pcbi.1007962.e073g" xlink:href="pcbi.1007962.e073"/><mml:math id="M73"><mml:msub><mml:mover accent="true"><mml:mi>t</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:math></alternatives></inline-formula> errors (<bold>E</bold>, <bold>G</bold>) and <italic>κ</italic><sub>1</sub> errors (<bold>F</bold>, <bold>H</bold>) on the cylinder using different algorithms: AVV, SSVV, VTK and MB; latter two algorithms only for <italic>κ</italic><sub>1</sub> in (F, H); the optimal <monospace>rh</monospace> or <monospace>n</monospace> (in voxels) were used for each algorithm and are indicated in the legends. In panels (G-H), values within 5 voxels to the graph border were excluded.</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g009"/>
        </fig>
        <p>Altogether, these benchmark results demonstrate the validity of our tensor voting-based algorithms and their robustness to quantization noise, especially of AVV. Additionally, curvature estimations at surface borders can be erroneous, so they should be excluded from an analysis.</p>
      </sec>
    </sec>
    <sec id="sec022">
      <title>Application to biological surfaces</title>
      <sec id="sec023">
        <title>Choice of algorithms and parameters for membranes from cryo-ET</title>
        <p>AVV and SSVV proved most robust to quantization noise in synthetic surfaces. To evaluate their performance on real cryo-ET data, we used a cER compartment segmentation that contains several high curvature regions or peaks [<xref rid="pcbi.1007962.ref016" ref-type="bibr">16</xref>].</p>
        <p>First, we studied the relationship between the <monospace>rh</monospace> parameter and the feature size. For this, we isolated a single cER peak with a maximum base radius of approximately 10 nm from a tomogram and estimated its curvature using several <monospace>rh</monospace> values. We observed that real membrane features have a diverse curvature distribution with several local maxima and minima (<xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10A and 10B</xref>). For low values of <monospace>rh</monospace>, the distributions of curvature are broad, getting progressively sharper with increasing <monospace>rh</monospace>. For AVV (<xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10A</xref>), the maximum amount of values around 0.1 nm<sup>-1</sup> (corresponding to the 10 nm radius of the peak) is reached for <monospace>rh</monospace> = 10, indicating that the feature is observed as a whole and its smaller components fade. Higher <monospace>rh</monospace> no longer produce curvature values around 0.1 nm<sup>-1</sup>, indicating that the feature is averaged out. A similar trend is observed for SSVV (<xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10B</xref>), although this method produces less curvature values around 0.1 nm<sup>-1</sup>, thus underestimating the real curvature of the feature.</p>
        <fig id="pcbi.1007962.g010" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g010</object-id>
          <label>Fig 10</label>
          <caption>
            <title>Algorithms and parameters comparison using a small cER membrane feature from cryo-ET.</title>
            <p>Surface of a cER membrane region with maximum base radius ∼10 nm (from the same tomogram of a yeast cell as the cER in <xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11</xref>) was generated using the compartment segmentation. Panels (A-B) show relative frequency histograms of <italic>κ</italic><sub>1</sub> estimated by (<bold>A</bold>) AVV or (<bold>B</bold>) SSVV using <monospace>rh</monospace> = 2, 5, 10, 15 and 20 nm. Panels (C-D) show visualizations of the estimated <italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub> (color scale was set to the value range of [-0.1, 0.1] nm<sup>-1</sup> in both panels) and the corresponding principal directions (black arrows, sampled for every forth triangle) by (<bold>C</bold>) AVV or (<bold>D</bold>) SSVV using <monospace>rh</monospace> = 10 nm (scale bar: 20 nm, applies for both panels).</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g010"/>
        </fig>
        <p>Second, we visualized the principal curvatures of the feature using <monospace>rh</monospace> = 10 nm to analyze the difference between the two curvature estimation algorithms. For this specific feature, its principal curvatures estimated by AVV (<xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10C</xref>) increased in the direction from the base to the summit, while SSVV (<xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10D</xref>) underestimated the curvatures, especially <italic>κ</italic><sub>2</sub>. Since SSVV sampled only surface points at distance equal to <monospace>rh</monospace> of 10 nm from each triangle center, it “oversaw” the high curvature at and near the summit. Contrary to SSVV, AVV considered all triangles within the geodesic neighborhood and thus estimated the curvature increase towards the summit correctly. This example confirms that AVV performs better than SSVV for complex surfaces like biological membranes.</p>
        <p>Lastly, we applied AVV with <monospace>rh</monospace> = 10 nm to the full cER membrane surface, from which the peak shown in <xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10</xref> was extracted (<xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11A and 11B</xref>). For comparison, we also applied VTK and Mindboggle to this surface (<xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11C</xref>). Visually, <monospace>n</monospace> = 2 nm yielded the best results for Mindboggle. On this membrane surface, AVV clearly outperforms VTK and Mindboggle, which provide very noisy results with high values following the steps between neighboring triangles and the surface borders (compare the values of curvedness in <xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11A and 11C</xref>).</p>
        <fig id="pcbi.1007962.g011" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g011</object-id>
          <label>Fig 11</label>
          <caption>
            <title>Application of curvature estimation algorithms to a cER membrane from cryo-ET.</title>
            <p>Analysis of yeast cER membrane curvature on a surface generated using the compartment segmentation. (<bold>A</bold>) Visualizations of the curvatures: <italic>κ</italic><sub>1</sub>, <italic>κ</italic><sub>2</sub> and curvedness, estimated by AVV with <monospace>rh</monospace> of 10 nm (scale bar: 40 nm). The insets show the peak feature from <xref ref-type="fig" rid="pcbi.1007962.g010">Fig 10</xref> (scale bar: 20 nm). Color scale was set to the value range of [-0.1, 0.1] nm<sup>-1</sup> for <italic>κ</italic><sub>1</sub> and <italic>κ</italic><sub>2</sub> and of [0, 0.1] nm<sup>-1</sup> for curvedness. (<bold>B</bold>) Relative frequency histograms of the curvatures estimated by AVV shown in (A). (<bold>C</bold>) Visualizations of curvedness on the same surface as in (A) calculated by VTK (top) and Mindboggle (MB; using <monospace>n</monospace> = 2 nm; bottom), scale bar as in the main panel (A). Since curvedness ranges were larger for these algorithms, color scales were set to the value range of [0, 0.5] nm<sup>-1</sup> for VTK and [0, 1] nm<sup>-1</sup> for Mindboggle. The tomogram and segmentation are deposited in EM Data Bank (EMD-10765).</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g011"/>
        </fig>
      </sec>
      <sec id="sec024">
        <title>Curvature comparison across cellular organelles</title>
        <p>To test our method on membranes with different morphologies, we segmented the Golgi apparatus and Golgi-derived vesicles in a tomogram recorded on a mouse neuron. A Golgi apparatus is composed of flat cisternae stacked in a bent, semicircular shape. Again, we extracted the membrane surfaces using the compartment segmentation and estimated the curvatures using AVV with <monospace>rh</monospace> of 10 nm (<xref ref-type="fig" rid="pcbi.1007962.g012">Fig 12A</xref>). To minimize borders effects, values within 1 nm to surface border were excluded for plotting. <xref ref-type="fig" rid="pcbi.1007962.g012">Fig 12B</xref> compares the curvedness of the cER (<xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11</xref>) with that of the Golgi and Golgi-derived vesicles. The histogram shows that the Golgi has much lower curvedness than the other two organelles, whereas the cER reaches higher curvedness values than the vesicles. The results can be visually confirmed: the thin and long Golgi cisternae are only slightly curved, while the vesicles are smaller and thus much more curved (<xref ref-type="fig" rid="pcbi.1007962.g012">Fig 12A</xref>). The cER is generally less curved than the vesicles, but has high curvature at the peaks and sides of its sheets (<xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11A</xref>). These data show that curvedness estimated by AVV can be a useful descriptor of biological membranes.</p>
        <fig id="pcbi.1007962.g012" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g012</object-id>
          <label>Fig 12</label>
          <caption>
            <title>Application of AVV to Golgi and vesicles from cryo-ET.</title>
            <p>(<bold>A</bold>) Two different views of surfaces of Golgi and vesicles (from a primary mouse neuron) generated using the compartment segmentation showing curvedness estimated by AVV with <monospace>rh</monospace> of 10 nm. Color scale was set to the value range of [0, 0.1] nm<sup>-1</sup> (scale bar: 100 nm). (<bold>B</bold>) Relative exceedance frequency histograms (reversed cululative histograms with frequency normalized to the total surface area of each compartment) of the curvedness of cER (shown in <xref ref-type="fig" rid="pcbi.1007962.g011">Fig 11A and 11B</xref>), Golgi and vesicles (shown in panel A of this figure), excluding values within 1 nm to surface border. The tomogram and segmentations are deposited in EM Data Bank (EMD-10766).</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g012"/>
        </fig>
      </sec>
      <sec id="sec025">
        <title>Application to other data types</title>
        <p>To demonstrate the applicability of AVV beyond cryo-ET, we applied it to two other data types. The first data set is comprised of <italic>C. elegans</italic> embryo cells imaged by confocal light microscopy and segmented by LimeSeg [<xref rid="pcbi.1007962.ref022" ref-type="bibr">22</xref>]. The cell surfaces colored by their Gaussian curvature estimated by AVV using <monospace>rh</monospace> = 3 <italic>μ</italic>m are shown in <xref ref-type="fig" rid="pcbi.1007962.g013">Fig 13A</xref>. The second data set, taken from Mindboggle [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>], are cortical pial surfaces of both human brain hemispheres imaged by MRI and segmented by FreeSurfer [<xref rid="pcbi.1007962.ref052" ref-type="bibr">52</xref>]. The cortical surfaces colored by their mean curvature estimated by AVV using <monospace>rh</monospace> = 2 mm are shown in <xref ref-type="fig" rid="pcbi.1007962.g013">Fig 13B</xref>. The range of curvature values for the embryo and the brain is consistent with their sizes. Using Mindboggle [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>] with <monospace>n</monospace> = 2 mm (<xref ref-type="fig" rid="pcbi.1007962.g013">Fig 13C</xref>) and FreeSurfer [<xref rid="pcbi.1007962.ref041" ref-type="bibr">41</xref>] (<xref ref-type="fig" rid="pcbi.1007962.g013">Fig 13D</xref>), we obtained comparable, but noisier, mean curvature distributions on the brain; FreeSurfer introduced finer-grained noise than Mindboggle. Despite the lack of ground truth, this comparison suggests that AVV provides a more accurate curvature estimation for different data types.</p>
        <fig id="pcbi.1007962.g013" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pcbi.1007962.g013</object-id>
          <label>Fig 13</label>
          <caption>
            <title>Application of curvature estimation algorithms to other data types.</title>
            <p>(<bold>A</bold>) Surfaces of <italic>C. elegans</italic> embryo cells imaged by confocal light microscopy and segmented by LimeSeg [<xref rid="pcbi.1007962.ref022" ref-type="bibr">22</xref>], colored by Gaussian curvature (<italic>μ</italic>m<sup>-2</sup>) estimated by AVV using <monospace>rh</monospace> = 3 <italic>μ</italic>m (scale bar: 5 <italic>μ</italic>m). (<bold>B</bold>) Cortical pial surfaces of both human brain hemispheres imaged by MRI and segmented by FreeSurfer [<xref rid="pcbi.1007962.ref052" ref-type="bibr">52</xref>], colored by mean curvature (mm<sup>-1</sup>) estimated by AVV using <monospace>rh</monospace> = 2 mm (scale bar: 20 mm). Panels (C-D) show the same brain surface colored by mean curvature (mm<sup>-1</sup>) with the same color scale as in (B) estimated by (<bold>C</bold>) Mindboggle (MB; using <monospace>n</monospace> = 2 mm) and (<bold>D</bold>) FreeSurfer (FS).</p>
          </caption>
          <graphic xlink:href="pcbi.1007962.g013"/>
        </fig>
      </sec>
    </sec>
    <sec id="sec026">
      <title>Implementation and availability</title>
      <p>All the described algorithms and the tests on benchmark surfaces were implemented using Python and are available in PyCurv at <ext-link ext-link-type="uri" xlink:href="https://github.com/kalemaria/pycurv">https://github.com/kalemaria/pycurv</ext-link>, along with the experimental data sets and scripts allowing to obtain the results presented in the Section Application to biological surfaces. PyCurv depends only on open source packages, including: <ext-link ext-link-type="uri" xlink:href="https://github.com/vladanl/Pyto">Pyto</ext-link> [<xref rid="pcbi.1007962.ref053" ref-type="bibr">53</xref>], <ext-link ext-link-type="uri" xlink:href="https://graph-tool.skewed.de">Graph-tool</ext-link> [<xref rid="pcbi.1007962.ref048" ref-type="bibr">48</xref>] and <ext-link ext-link-type="uri" xlink:href="https://vtk.org">VTK</ext-link> [<xref rid="pcbi.1007962.ref030" ref-type="bibr">30</xref>]. Note that <ext-link ext-link-type="uri" xlink:href="https://surfer.nmr.mgh.harvard.edu">FreeSurfer</ext-link> [<xref rid="pcbi.1007962.ref052" ref-type="bibr">52</xref>] and <ext-link ext-link-type="uri" xlink:href="https://github.com/nipy/mindboggle">Mindboggle</ext-link> [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>] had to be installed and called externally for the evaluation; FreeSurfer version “stable v6.0.0” for Linux and Mindboggle Docker container from 2019-09-24 were used.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec027">
    <title>Discussion</title>
    <p>In this article, we described a method for the estimation of the local curvature of biological membranes and validated it on synthetic and real data. The curvature estimation workflow in PyCurv can be divided in two main steps. The first step is to represent the membrane as a triangle mesh surface that can be obtained from two different types of segmentation: segmentation of the membrane alone, or a filled segmentation of a membrane-bound cellular compartment. The second option usually demands more human intervention but the surface orientation could be recovered perfectly in our experiments. Smoothing of the filled segmentation prior to surface extraction leads to less quantization noise because the surface is extracted at subvoxel precision. Surface triangles are mapped to a graph to facilitate the computation of geodesic distances and to filter border artifacts. The second step is to determine the underlying surface orientation (represented by normal vectors), local curvatures and principal directions.</p>
    <p>Here, we evaluated the performance of our curvature estimation algorithms, RVV, AVV and SSVV (adaptations of [<xref rid="pcbi.1007962.ref033" ref-type="bibr">33</xref>] and [<xref rid="pcbi.1007962.ref040" ref-type="bibr">40</xref>]) against the publicly available VTK [<xref rid="pcbi.1007962.ref030" ref-type="bibr">30</xref>], FreeSurfer [<xref rid="pcbi.1007962.ref041" ref-type="bibr">41</xref>] and Mindboggle [<xref rid="pcbi.1007962.ref042" ref-type="bibr">42</xref>]. Although we chose the optimal radius of the neighborhood (<monospace>n</monospace>) parameter for each benchmark surface, Mindboggle performed poorly on irregular and noisy surfaces. Also FreeSurfer, which performed the best on a smooth and regular surface, yielded high errors on irregular and noisy surfaces. Moreover, FreeSurfer cannot be applied to surfaces containing borders, so it is not applicable for cryo-ET data. Our tests using synthetic and biological surfaces showed that the proposed algorithms, RVV, AVV and SSVV, are more robust to quantization noise than the above-mentioned existing methods. AVV performs better than RVV for non-uniformly tessellated surfaces. For complex non-spherical surfaces like biological membranes, AVV yields better results than SSVV. Therefore, AVV is the default algorithm in PyCurv.</p>
    <p>Curvature is a local property, so its value on discrete surfaces depends on the definition of a neighborhood. Robustness to noise increases with the neighborhood size by averaging the contributions of the neighboring triangles. However, features smaller than the neighborhood are averaged out. Therefore, the neighborhood size defines the scale of the features that can be analyzed. To achieve more reliable results for cryo-ET segmentations that contain holes, curvature values at surface borders and/or higher than <monospace>rh</monospace><sup>-1</sup> should be excluded from the analysis.</p>
    <p>PyCurv was already applied in a cryo-ET study in yeast proposing that cER membrane curvature plays a key role in the regulation of ER-to-PM lipid homeostasis at membrane contact sites [<xref rid="pcbi.1007962.ref016" ref-type="bibr">16</xref>]. Moreover, the analysis of data generated by MRI and light microscopy shows that our method can be applied to any segmented membrane compartments or other volumes from which a surface can be extracted, originating from any 3D imaging technique. We conclude that the open-source Python package PyCurv can be used to reliably process cryo-ET and other data to study membrane and surface curvature in a large variety of applications.</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec028">
    <title>Supporting information</title>
    <supplementary-material content-type="local-data" id="pcbi.1007962.s001">
      <label>S1 Video</label>
      <caption>
        <title>PyCurv workflow.</title>
        <p>The visualization of PyCurv processing workflow, as described in <xref ref-type="fig" rid="pcbi.1007962.g001">Fig 1A</xref>, for the tomogram from <xref ref-type="fig" rid="pcbi.1007962.g002">Fig 2</xref>, showing in the order of occurrence: <italic>membrane</italic> and <italic>compartment segmentations</italic> of the cortical ER, generated surface, normals estimated by Vector Voting (VV) and curvedness estimated by Augmented Vector Voting (AVV) algorithms.</p>
        <p>(MP4)</p>
      </caption>
      <media xlink:href="pcbi.1007962.s001.mp4">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank Markus Hohle, Vladan Lučić and Martin Salfer for helpful discussions as well as Felix J.B. Bäuerlein and Tillman Schäfer for tomography data.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1007962.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>McMahon</surname><given-names>HT</given-names></name>, <name><surname>Boucrot</surname><given-names>E</given-names></name>. <article-title>Membrane curvature at a glance</article-title>. <source>J Cell Sci</source>. <year>2015</year>;<volume>128</volume>(<issue>6</issue>):<fpage>1065</fpage>–<lpage>1070</lpage>. <pub-id pub-id-type="doi">10.1242/jcs.114454</pub-id><?supplied-pmid 25774051?><pub-id pub-id-type="pmid">25774051</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Bassereau</surname><given-names>P</given-names></name>, <name><surname>Jin</surname><given-names>R</given-names></name>, <name><surname>Baumgart</surname><given-names>T</given-names></name>, <name><surname>Deserno</surname><given-names>M</given-names></name>, <name><surname>Dimova</surname><given-names>R</given-names></name>, <name><surname>Frolov</surname><given-names>VA</given-names></name>, <etal>et al</etal><article-title>The 2018 biomembrane curvature and remodeling roadmap</article-title>. <source>J Phys D Appl Phys</source>. <year>2018</year>;<volume>51</volume>(<issue>34</issue>). <pub-id pub-id-type="doi">10.1088/1361-6463/aacb98</pub-id><?supplied-pmid 30655651?><pub-id pub-id-type="pmid">30655651</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Kozlov</surname><given-names>MM</given-names></name>, <name><surname>Campelo</surname><given-names>F</given-names></name>, <name><surname>Liska</surname><given-names>N</given-names></name>, <name><surname>Chernomordik</surname><given-names>LV</given-names></name>, <name><surname>Marrink</surname><given-names>SJ</given-names></name>, <name><surname>McMahon</surname><given-names>HT</given-names></name>. <article-title>Mechanisms shaping cell membranes</article-title>. <source>Curr Opin Cell Biol</source>. <year>2014</year>;<volume>29</volume>:<fpage>53</fpage>–<lpage>60</lpage>. <pub-id pub-id-type="doi">10.1016/j.ceb.2014.03.006</pub-id><?supplied-pmid 24747171?><pub-id pub-id-type="pmid">24747171</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Lučić</surname><given-names>V</given-names></name>, <name><surname>Förster</surname><given-names>F</given-names></name>, <name><surname>Baumeister</surname><given-names>W</given-names></name>. <article-title>Structural Studies By Electron Tomography: From Cells to Molecules</article-title>. <source>Annu Rev Biochem</source>. <year>2005</year>;<volume>74</volume>:<fpage>833</fpage>–<lpage>865</lpage>. <pub-id pub-id-type="doi">10.1146/annurev.biochem.73.011303.074112</pub-id><?supplied-pmid 15952904?><pub-id pub-id-type="pmid">15952904</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Beck</surname><given-names>M</given-names></name>, <name><surname>Baumeister</surname><given-names>W</given-names></name>. <article-title>Cryo-Electron Tomography: Can it Reveal the Molecular Sociology of Cells in Atomic Detail?</article-title><source>Trends Cell Biol</source>. <year>2016</year>;<volume>26</volume>(<issue>11</issue>):<fpage>825</fpage>–<lpage>837</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcb.2016.08.006</pub-id><?supplied-pmid 27671779?><pub-id pub-id-type="pmid">27671779</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Wagner</surname><given-names>J</given-names></name>, <name><surname>Schaffer</surname><given-names>M</given-names></name>, <name><surname>Fernández-Busnadiego</surname><given-names>R</given-names></name>. <article-title>Cryo-electron tomography—the cell biology that came in from the cold</article-title>. <source>FEBS Lett</source>. <year>2017</year>;<volume>591</volume>:<fpage>2520</fpage>–<lpage>2533</lpage>. <pub-id pub-id-type="doi">10.1002/1873-3468.12757</pub-id><?supplied-pmid 28726246?><pub-id pub-id-type="pmid">28726246</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref007">
      <label>7</label>
      <mixed-citation publication-type="journal"><name><surname>Collado</surname><given-names>J</given-names></name>, <name><surname>Fernández-Busnadiego</surname><given-names>R</given-names></name>. <article-title>Deciphering the molecular architecture of membrane contact sites by cryo-electron tomography</article-title>. <source>Biochim Biophys Acta Mol Cell Res</source>. <year>2017</year>;<volume>1864</volume>:<fpage>1507</fpage>–<lpage>1512</lpage>. <pub-id pub-id-type="doi">10.1016/j.bbamcr.2017.03.009</pub-id><?supplied-pmid 28330771?><pub-id pub-id-type="pmid">28330771</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>O’Reilly</surname><given-names>FJ</given-names></name>, <name><surname>Xue</surname><given-names>L</given-names></name>, <name><surname>Graziadei</surname><given-names>A</given-names></name>, <name><surname>Sinn</surname><given-names>L</given-names></name>, <name><surname>Lenz</surname><given-names>S</given-names></name>, <name><surname>Tegunov</surname><given-names>D</given-names></name>, <etal>et al</etal><article-title>In-cell architecture of an actively transcribing-translating expressome</article-title>. <source>Science</source><year>2020</year>; <volume>369</volume>(<issue>6503</issue>):<fpage>554</fpage>–<lpage>557</lpage>. <pub-id pub-id-type="doi">10.1126/science.abb3758</pub-id><?supplied-pmid 32732422?><pub-id pub-id-type="pmid">32732422</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>Y</given-names></name>, <name><surname>Yong</surname><given-names>J</given-names></name>, <name><surname>Martínez-Sánchez</surname><given-names>A</given-names></name>, <name><surname>Yang</surname><given-names>Y</given-names></name>, <name><surname>Wu</surname><given-names>Y</given-names></name>, <name><surname>De Camilli</surname><given-names>P</given-names></name>, <etal>et al</etal><article-title>Dynamic instability of clathrin assembly provides proofreading control for endocytosis</article-title>. <source>J Cell Biol</source>. <year>2019</year>;<volume>218</volume>(<issue>10</issue>):<fpage>3200</fpage>–<lpage>3211</lpage>. <pub-id pub-id-type="doi">10.1083/jcb.201804136</pub-id><?supplied-pmid 31451612?><pub-id pub-id-type="pmid">31451612</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Lee</surname><given-names>KK</given-names></name>. <article-title>Architecture of a nascent viral fusion pore</article-title>. <source>EMBO J</source>. <year>2010</year>;<volume>29</volume>(<issue>7</issue>):<fpage>1299</fpage>–<lpage>1311</lpage>. <pub-id pub-id-type="doi">10.1038/emboj.2010.13</pub-id><?supplied-pmid 20168302?><pub-id pub-id-type="pmid">20168302</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref011">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Cardone</surname><given-names>G</given-names></name>, <name><surname>Brecher</surname><given-names>M</given-names></name>, <name><surname>Fontana</surname><given-names>J</given-names></name>, <name><surname>Winkler</surname><given-names>DC</given-names></name>, <name><surname>Butan</surname><given-names>C</given-names></name>, <name><surname>White</surname><given-names>JM</given-names></name>, <etal>et al</etal><article-title>Visualization of the Two-Step Fusion Process of the Retrovirus Avian Sarcoma/Leukosis Virus by Cryo-Electron Tomography</article-title>. <source>J Virol</source>. <year>2012</year>;<volume>86</volume>(<issue>22</issue>):<fpage>12129</fpage>–<lpage>12137</lpage>. <pub-id pub-id-type="doi">10.1128/JVI.01880-12</pub-id><?supplied-pmid 22933285?><pub-id pub-id-type="pmid">22933285</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Bharat</surname><given-names>TAM</given-names></name>, <name><surname>Malsam</surname><given-names>J</given-names></name>, <name><surname>Hagen</surname><given-names>WJH</given-names></name>, <name><surname>Scheutzow</surname><given-names>A</given-names></name>, <name><surname>Söllner</surname><given-names>TH</given-names></name>, <name><surname>Briggs</surname><given-names>JAG</given-names></name>. <article-title>SNARE and regulatory proteins induce local membrane protrusions to prime docked vesicles for fast calcium-triggered fusion</article-title>. <source>EMBO Rep</source>. <year>2014</year>;<volume>15</volume>(<issue>3</issue>):<fpage>308</fpage>–<lpage>314</lpage>. <pub-id pub-id-type="doi">10.1002/embr.201337807</pub-id><?supplied-pmid 24493260?><pub-id pub-id-type="pmid">24493260</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Chlanda</surname><given-names>P</given-names></name>, <name><surname>Mekhedov</surname><given-names>E</given-names></name>, <name><surname>Waters</surname><given-names>H</given-names></name>, <name><surname>Schwartz</surname><given-names>CL</given-names></name>, <name><surname>Fischer</surname><given-names>ER</given-names></name>, <name><surname>Ryham</surname><given-names>RJ</given-names></name>, <etal>et al</etal><article-title>The hemifusion structure induced by influenza virus haemagglutinin is determined by physical properties of the target membranes</article-title>. <source>Nat Microbiol</source>. <year>2016</year>;<volume>1</volume>(<issue>6</issue>):<fpage>1</fpage>–<lpage>8</lpage>. <pub-id pub-id-type="doi">10.1038/nmicrobiol.2016.50</pub-id><?supplied-pmid 27572837?><pub-id pub-id-type="pmid">27572837</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Yao</surname><given-names>Q</given-names></name>, <name><surname>Jewett</surname><given-names>AI</given-names></name>, <name><surname>Chang</surname><given-names>YW</given-names></name>, <name><surname>Oikonomou</surname><given-names>CM</given-names></name>, <name><surname>Beeby</surname><given-names>M</given-names></name>, <name><surname>Iancu</surname><given-names>CV</given-names></name>, <etal>et al</etal><article-title>Short FtsZ filaments can drive asymmetric cell envelope constriction at the onset of bacterial cytokinesis</article-title>. <source>EMBO J</source>. <year>2017</year>;<volume>36</volume>(<issue>11</issue>):<fpage>1577</fpage>–<lpage>1589</lpage>. <pub-id pub-id-type="doi">10.15252/embj.201696235</pub-id><?supplied-pmid 28438890?><pub-id pub-id-type="pmid">28438890</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref015">
      <label>15</label>
      <mixed-citation publication-type="journal"><name><surname>Bharat</surname><given-names>TAM</given-names></name>, <name><surname>Hoffmann</surname><given-names>PC</given-names></name>, <name><surname>Kukulski</surname><given-names>W</given-names></name>. <article-title>Correlative Microscopy of Vitreous Sections Provides Insights into BAR-Domain Organization In Situ</article-title>. <source>Structure</source>. <year>2018</year>;<volume>26</volume>(<issue>6</issue>):<fpage>879</fpage>–<lpage>886</lpage>. <pub-id pub-id-type="doi">10.1016/j.str.2018.03.015</pub-id><?supplied-pmid 29681471?><pub-id pub-id-type="pmid">29681471</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Collado</surname><given-names>J</given-names></name>, <name><surname>Kalemanov</surname><given-names>M</given-names></name>, <name><surname>Campelo</surname><given-names>F</given-names></name>, <name><surname>Bourgoint</surname><given-names>C</given-names></name>, <name><surname>Thomas</surname><given-names>F</given-names></name>, <name><surname>Loewith</surname><given-names>R</given-names></name>, <etal>et al</etal><article-title>Tricalbin-Mediated Contact Sites Control ER Curvature to Maintain Plasma Membrane Integrity</article-title>. <source>Dev Cell</source>. <year>2019</year>;<volume>51</volume>:<fpage>476</fpage>–<lpage>487</lpage>. <pub-id pub-id-type="doi">10.1016/j.devcel.2019.10.018</pub-id><?supplied-pmid 31743662?><pub-id pub-id-type="pmid">31743662</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Bäuerlein</surname><given-names>FJB</given-names></name>, <name><surname>Saha</surname><given-names>I</given-names></name>, <name><surname>Mishra</surname><given-names>A</given-names></name>, <name><surname>Kalemanov</surname><given-names>M</given-names></name>, <name><surname>Martínez-Sánchez</surname><given-names>A</given-names></name>, <name><surname>Klein</surname><given-names>R</given-names></name>, <etal>et al</etal><article-title>In Situ Architecture and Cellular Interactions of PolyQ Inclusions</article-title>. <source>Cell</source>. <year>2017</year>;<volume>171</volume>:<fpage>179</fpage>–<lpage>187</lpage>. <pub-id pub-id-type="doi">10.1016/j.cell.2017.08.009</pub-id><?supplied-pmid 28890085?><pub-id pub-id-type="pmid">28890085</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Martinez-Sanchez</surname><given-names>A</given-names></name>, <name><surname>Garcia</surname><given-names>I</given-names></name>, <name><surname>Asano</surname><given-names>S</given-names></name>, <name><surname>Lucic</surname><given-names>V</given-names></name>, <name><surname>Fernandez</surname><given-names>JJ</given-names></name>. <article-title>Robust membrane detection based on tensor voting for electron tomography</article-title>. <source>J Struct Biol</source>. <year>2014</year>;<volume>186</volume>:<fpage>49</fpage>–<lpage>61</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2014.02.015</pub-id><?supplied-pmid 24625523?><pub-id pub-id-type="pmid">24625523</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Martinez-Sanchez</surname><given-names>A</given-names></name>, <name><surname>Kochovski</surname><given-names>Z</given-names></name>, <name><surname>Laugks</surname><given-names>U</given-names></name>, <name><surname>Meyer zum Alten Borgloh</surname><given-names>J</given-names></name>, <name><surname>Chakraborty</surname><given-names>S</given-names></name>, <name><surname>Pfeffer</surname><given-names>S</given-names></name>, <etal>et al</etal><article-title>Template-free detection and classification of membrane-bound complexes in cryo-electron tomograms</article-title>. <source>Nat Methods</source>. <year>2020</year>; p. <fpage>1</fpage>–<lpage>15</lpage>. <pub-id pub-id-type="doi">10.1038/s41592-019-0675-5</pub-id><?supplied-pmid 31907446?><pub-id pub-id-type="pmid">31907477</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Mosaliganti</surname><given-names>KR</given-names></name>, <name><surname>Noche</surname><given-names>RR</given-names></name>, <name><surname>Xiong</surname><given-names>F</given-names></name>, <name><surname>Swinburne</surname><given-names>IA</given-names></name>, <name><surname>Megason</surname><given-names>SG</given-names></name>. <article-title>ACME: Automated Cell Morphology Extractor for Comprehensive Reconstruction of Cell Membranes</article-title>. <source>PLoS Comput Biol</source>. <year>2012</year>;<volume>8</volume>(<issue>12</issue>):<fpage>e1002780</fpage><pub-id pub-id-type="doi">10.1371/journal.pcbi.1002780</pub-id><?supplied-pmid 23236265?><pub-id pub-id-type="pmid">23236265</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>M</given-names></name>, <name><surname>Dai</surname><given-names>W</given-names></name>, <name><surname>Sun</surname><given-names>SY</given-names></name>, <name><surname>Jonasch</surname><given-names>D</given-names></name>, <name><surname>He</surname><given-names>CY</given-names></name>, <name><surname>Schmid</surname><given-names>MF</given-names></name>, <etal>et al</etal><article-title>Convolutional neural networks for automated annotation of cellular cryo-electron tomograms</article-title>. <source>Nat Methods</source>. <year>2017</year>;<volume>14</volume>(<issue>10</issue>):<fpage>983</fpage>–<lpage>985</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.4405</pub-id><?supplied-pmid 28846087?><pub-id pub-id-type="pmid">28846087</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Machado</surname><given-names>S</given-names></name>, <name><surname>Mercier</surname><given-names>V</given-names></name>, <name><surname>Chiaruttini</surname><given-names>N</given-names></name>. <article-title>LimeSeg: A coarse-grained lipid membrane simulation for 3D image segmentation</article-title>. <source>BMC Bioinformatics</source>. <year>2019</year>;<volume>20</volume>(<issue>2</issue>):<fpage>1</fpage>–<lpage>12</lpage>. <pub-id pub-id-type="doi">10.1186/s12859-018-2471-0</pub-id><?supplied-pmid 30606118?><pub-id pub-id-type="pmid">30606105</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Martinez-Sanchez</surname><given-names>A</given-names></name>, <name><surname>Garcia</surname><given-names>I</given-names></name>, <name><surname>Fernandez</surname><given-names>JJ</given-names></name>. <article-title>A differential structure approach to membrane segmentation in electron tomography</article-title>. <source>J Struct Biol</source>. <year>2011</year>;<volume>175</volume>:<fpage>372</fpage>–<lpage>383</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2011.05.010</pub-id><?supplied-pmid 21616152?><pub-id pub-id-type="pmid">21616152</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref024">
      <label>24</label>
      <mixed-citation publication-type="book"><name><surname>do Carmo</surname><given-names>MP</given-names></name>. <source>Differential geometry of curves and surfaces</source>. <publisher-loc>New Jersey</publisher-loc>: <publisher-name>Prentice-Hall, Inc., Englewood Cliffs</publisher-name>; <year>1976</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref025">
      <label>25</label>
      <mixed-citation publication-type="book"><name><surname>Meyer</surname><given-names>M</given-names></name>, <name><surname>Desbrun</surname><given-names>M</given-names></name>, <name><surname>Schröder</surname><given-names>P</given-names></name>, <name><surname>Barr</surname><given-names>AH</given-names></name>. <source>Discrete Differential-Geometry Operators for Triangulated 2-Manifolds</source>. <publisher-name>Springer</publisher-name>, <publisher-loc>Berlin, Heidelberg</publisher-loc>; <year>2003</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref026">
      <label>26</label>
      <mixed-citation publication-type="other">Hoppe H, DeRose T, Duchamp T, McDonald J, Stuetzle W. Surface reconstruction from unorganized points. In: SIGGRAPH’92 Proceedings of the 19th annual conference on Computer graphics and interactive techniques. New York: ACM; 1992. p. 71–78. <pub-id pub-id-type="doi">10.1145/133994.134011</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref027">
      <label>27</label>
      <mixed-citation publication-type="journal"><name><surname>Magid</surname><given-names>E</given-names></name>, <name><surname>Soldea</surname><given-names>O</given-names></name>, <name><surname>Rivlin</surname><given-names>E</given-names></name>. <article-title>A comparison of Gaussian and mean curvature estimation methods on triangular meshes of range image data</article-title>. <source>Comput Vis Image Underst</source>. <year>2007</year>;<volume>107</volume>:<fpage>139</fpage>–<lpage>159</lpage>. <pub-id pub-id-type="doi">10.1016/j.cviu.2006.09.007</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref028">
      <label>28</label>
      <mixed-citation publication-type="book"><name><surname>Polthier</surname><given-names>K</given-names></name>, <name><surname>Schmies</surname><given-names>M</given-names></name>. <chapter-title>Straightest Geodesics on Polyhedral Surfaces</chapter-title> In: <source>Mathematical Visualization</source>. <publisher-name>Springer Verlag</publisher-name>; <year>1998</year> p. <fpage>391</fpage>–<lpage>409</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref029">
      <label>29</label>
      <mixed-citation publication-type="other">Desbrun M, Meyer M, Schröder P, Barr AH. Implicit fairing of irregular meshes using diffusion and curvature flow. In: SIGGRAPH’99 Proceedings of the 26th annual conference on Computer graphics and interactive techniques. New York: ACM Press/Addison-Wesley Publishing; 1999. p. 317–324. <pub-id pub-id-type="doi">10.1145/311535.311576</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref030">
      <label>30</label>
      <mixed-citation publication-type="book"><name><surname>Schroeder</surname><given-names>W</given-names></name>, <name><surname>Martin</surname><given-names>K</given-names></name>, <name><surname>Lorensen</surname><given-names>B</given-names></name>. <source>The Visualization Toolkit</source> (<edition>4th ed</edition>). <publisher-name>Kitware</publisher-name>; <year>2006</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref031">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Szilvási-Nagy</surname><given-names>M</given-names></name>. <article-title>Face-based estimations of curvatures on triangle meshes</article-title>. <source>Journal for Geometry and Graphics</source>. <year>2008</year>;<volume>12</volume>(<issue>1</issue>):<fpage>63</fpage>–<lpage>73</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref032">
      <label>32</label>
      <mixed-citation publication-type="journal"><name><surname>Razdan</surname><given-names>A</given-names></name>, <name><surname>Bae</surname><given-names>M</given-names></name>. <article-title>Curvature estimation scheme for triangle meshes using biquadratic Bézier patches</article-title>. <source>Comput Aided Des</source>. <year>2005</year>;<volume>37</volume>:<fpage>1481</fpage>–<lpage>1491</lpage>. <pub-id pub-id-type="doi">10.1016/j.cad.2005.03.003</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref033">
      <label>33</label>
      <mixed-citation publication-type="journal"><name><surname>Page</surname><given-names>DL</given-names></name>, <name><surname>Sun</surname><given-names>Y</given-names></name>, <name><surname>Koschan</surname><given-names>AF</given-names></name>, <name><surname>Paik</surname><given-names>J</given-names></name>, <name><surname>Abidi</surname><given-names>MA</given-names></name>. <article-title>Normal Vector Voting: Crease Detection and Curvature Estimation on Large, Noisy Meshes</article-title>. <source>Graph Models</source>. <year>2002</year>;<volume>64</volume>:<fpage>199</fpage>–<lpage>229</lpage>. <pub-id pub-id-type="doi">10.1006/gmod.2002.0574</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref034">
      <label>34</label>
      <mixed-citation publication-type="journal"><name><surname>Goldfeather</surname><given-names>J</given-names></name>, <name><surname>Interrante</surname><given-names>V</given-names></name>. <article-title>A novel cubic-order algorithm for approximating principal direction vectors</article-title>. <source>ACM Trans Graph</source>. <year>2004</year>;<volume>23</volume>(<issue>1</issue>):<fpage>45</fpage>–<lpage>63</lpage>. <pub-id pub-id-type="doi">10.1145/966131.966134</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref035">
      <label>35</label>
      <mixed-citation publication-type="other">Taubin G. Estimating the tensor of curvature of a surface from a polyhedral approximation. In: Proceedings of IEEE International Conference on Computer Vision. Cambridge: IEEE; 1995. p. 902–907. <pub-id pub-id-type="doi">10.1109/ICCV.1995.466840</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref036">
      <label>36</label>
      <mixed-citation publication-type="other">Theisel H, Rössl C, Zayer R, Seidel HP. Normal based estimation of the curvature tensor for triangular meshes. In: 12th Pacific Conference on Computer Graphics and Applications. Seoul, South Korea: IEEE; 2004. p. 288–297. <pub-id pub-id-type="doi">10.1109/PCCGA.2004.1348359</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref037">
      <label>37</label>
      <mixed-citation publication-type="other">Rusinkiewicz S. Estimating curvatures and their derivatives on triangle meshes. In: Proceedings of the 2nd International Symposium on 3D Data Processing, Visualization, and Transmission. Thessaloniki, Greece: IEEE; 2004. p. 486–493. <pub-id pub-id-type="doi">10.1109/TDPVT.2004.1335277</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref038">
      <label>38</label>
      <mixed-citation publication-type="book"><name><surname>Medioni</surname><given-names>G</given-names></name>, <name><surname>Lee</surname><given-names>MS</given-names></name>, <name><surname>Tang</surname><given-names>CK</given-names></name>. <source>A Computational Framework for Segmentation and Grouping</source>. <publisher-loc>Amsterdam</publisher-loc>: <publisher-name>Elsevier Science B.V.</publisher-name>; <year>2000</year>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref039">
      <label>39</label>
      <mixed-citation publication-type="other">Tang CK, Medioni G. Robust Estimation of Curvature Information from Noisy 3D Data for Shape Description. In: Proceedings of the Seventh IEEE International Conference on Computer Vision. Kerkyra, Greece: IEEE; 1999. <pub-id pub-id-type="doi">10.1109/ICCV.1999.791252</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref040">
      <label>40</label>
      <mixed-citation publication-type="journal"><name><surname>Tong</surname><given-names>WS</given-names></name>, <name><surname>Tang</surname><given-names>CK</given-names></name>. <article-title>Robust Estimation of Adaptive Tensors of Curvature by Tensor Voting</article-title>. In: <source>IEEE Trans. Pattern Anal. Mach. Intell</source>. <volume>vol. 27</volume>; <year>2005</year> p. <fpage>434</fpage>–<lpage>449</lpage>. <pub-id pub-id-type="doi">10.1109/tpami.2005.62</pub-id>
<?supplied-pmid 15747797?><pub-id pub-id-type="pmid">15747797</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref041">
      <label>41</label>
      <mixed-citation publication-type="journal"><name><surname>Pienaar</surname><given-names>R</given-names></name>, <name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Caviness</surname><given-names>V</given-names></name>, <name><surname>Makris</surname><given-names>N</given-names></name>, <name><surname>Grant</surname><given-names>PE</given-names></name>. <article-title>A methodology for analyzing curvature in the developing brain from preterm to adult</article-title>. <source>Int J Imaging Syst Technol</source>. <year>2008</year>;<volume>18</volume>:<fpage>42</fpage>–<lpage>68</lpage>. <pub-id pub-id-type="doi">10.1002/ima.v18:1</pub-id><?supplied-pmid 19936261?><pub-id pub-id-type="pmid">19936261</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref042">
      <label>42</label>
      <mixed-citation publication-type="journal"><name><surname>Klein</surname><given-names>A</given-names></name>, <name><surname>Ghosh</surname><given-names>SS</given-names></name>, <name><surname>Bao</surname><given-names>FS</given-names></name>, <name><surname>Giard</surname><given-names>J</given-names></name>, <name><surname>Häme</surname><given-names>Y</given-names></name>, <name><surname>Stavsky</surname><given-names>E</given-names></name>, <etal>et al</etal><article-title>Mindboggling morphometry of human brains</article-title>. <source>PLoS Comput Biol</source>. <year>2017</year>;<volume>13</volume>(<issue>2</issue>):<fpage>1</fpage>–<lpage>40</lpage>. <?supplied-pmid 28231282?><pub-id pub-id-type="pmid">28231282</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref043">
      <label>43</label>
      <mixed-citation publication-type="journal"><name><surname>Moses</surname><given-names>DA</given-names></name>, <name><surname>Axel</surname><given-names>L</given-names></name>. <article-title>Quantification of the curvature and shape of the interventricular septum</article-title>. <source>Magnetic Resonance in Medicine</source>. <year>2004</year>;<volume>52</volume>(<issue>1</issue>):<fpage>154</fpage>–<lpage>163</lpage>. <pub-id pub-id-type="doi">10.1002/mrm.20105</pub-id><?supplied-pmid 15236379?><pub-id pub-id-type="pmid">15236379</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref044">
      <label>44</label>
      <mixed-citation publication-type="journal"><name><surname>Bechstedt</surname><given-names>S</given-names></name>, <name><surname>Lu</surname><given-names>K</given-names></name>, <name><surname>Brouhard</surname><given-names>GJ</given-names></name>. <article-title>Doublecortin recognizes the longitudinal curvature of the microtubule end and lattice</article-title>. <source>Curr Biol</source>. <year>2014</year>;<volume>24</volume>:<fpage>2366</fpage>–<lpage>2375</lpage>. <pub-id pub-id-type="doi">10.1016/j.cub.2014.08.039</pub-id><?supplied-pmid 25283777?><pub-id pub-id-type="pmid">25283777</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref045">
      <label>45</label>
      <mixed-citation publication-type="journal"><name><surname>Xu</surname><given-names>M</given-names></name>, <name><surname>Wu</surname><given-names>Y</given-names></name>, <name><surname>Shroff</surname><given-names>H</given-names></name>, <name><surname>Wu</surname><given-names>M</given-names></name>, <name><surname>Mani</surname><given-names>M</given-names></name>. <article-title>A scheme for 3-dimensional morphological reconstruction and force inference in the early C. elegans embryo</article-title>. <source>PLoS One</source>. <year>2018</year>;<volume>13</volume>(<issue>7</issue>). <pub-id pub-id-type="doi">10.1371/journal.pone.0199151</pub-id><?supplied-pmid 29990323?><pub-id pub-id-type="pmid">29990323</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref046">
      <label>46</label>
      <mixed-citation publication-type="journal"><name><surname>Hoffman</surname><given-names>DP</given-names></name>, <name><surname>Shtengel</surname><given-names>G</given-names></name>, <name><surname>Xu</surname><given-names>CS</given-names></name>, <name><surname>Campbell</surname><given-names>KR</given-names></name>, <name><surname>Freeman</surname><given-names>M</given-names></name>, <name><surname>Wang</surname><given-names>L</given-names></name>, <etal>et al</etal><article-title>Correlative three-dimensional super-resolution and block face electron microscopy of whole vitreously frozen cells</article-title>. <source>Science</source>. <year>2020</year>;<volume>367</volume>(<issue>265</issue>):<fpage>14</fpage><pub-id pub-id-type="doi">10.1126/science.aaz5357</pub-id><?supplied-pmid 31949053?><pub-id pub-id-type="pmid">31896700</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref047">
      <label>47</label>
      <mixed-citation publication-type="journal"><name><surname>Lorensen</surname><given-names>WE</given-names></name>, <name><surname>Cline</surname><given-names>HE</given-names></name>. <article-title>Marching Cubes: A High Resolution 3D Surface Construction Algorithm</article-title>. <source>ACM SIGGRAPH Comput Graph</source>. <year>1987</year>;<volume>21</volume>(<issue>4</issue>):<fpage>163</fpage>–<lpage>169</lpage>. <pub-id pub-id-type="doi">10.1145/37401.37422</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref048">
      <label>48</label>
      <mixed-citation publication-type="other">Peixoto TP. The graph-tool python library. Database: figshare [Internet]; 2014. Available from: <ext-link ext-link-type="uri" xlink:href="http://figshare.com/articles/graph_tool/1164194">http://figshare.com/articles/graph_tool/1164194</ext-link>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref049">
      <label>49</label>
      <mixed-citation publication-type="journal"><name><surname>Dijkstra</surname><given-names>EW</given-names></name>. <article-title>A Note on Two Problems in Connexion with Graphs</article-title>. <source>Numer Math</source>. <year>1959</year>;<volume>1</volume>:<fpage>269</fpage>–<lpage>271</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref050">
      <label>50</label>
      <mixed-citation publication-type="journal"><name><surname>Koenderink</surname><given-names>JJ</given-names></name>, <name><surname>van Doorn</surname><given-names>AJ</given-names></name>. <article-title>Surface shape and curvature scales</article-title>. <source>Image Vis Comput</source>. <year>1992</year>;<volume>10</volume>(<issue>8</issue>):<fpage>557</fpage>–<lpage>564</lpage>. <pub-id pub-id-type="doi">10.1016/0262-8856(92)90076-F</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref051">
      <label>51</label>
      <mixed-citation publication-type="journal"><name><surname>Ahrens</surname><given-names>J</given-names></name>, <name><surname>Geveci</surname><given-names>B</given-names></name>, <name><surname>Law</surname><given-names>C</given-names></name>. <article-title>ParaView: An end-user tool for large-data visualization</article-title>. <source>Visualization Handbook</source>. <year>2005</year>;<volume>836</volume>:<fpage>717</fpage>–<lpage>731</lpage>. <pub-id pub-id-type="doi">10.1016/B978-012387582-2/50038-1</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref052">
      <label>52</label>
      <mixed-citation publication-type="journal"><name><surname>Dale</surname><given-names>AM</given-names></name>, <name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Sereno</surname><given-names>MI</given-names></name>. <article-title>Cortical Surface-Based Analysis</article-title>. <source>Neuroimage</source>. <year>1999</year>;<volume>9</volume>:<fpage>179</fpage>–<lpage>194</lpage>. <pub-id pub-id-type="doi">10.1006/nimg.1998.0395</pub-id><?supplied-pmid 9931268?><pub-id pub-id-type="pmid">9931268</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref053">
      <label>53</label>
      <mixed-citation publication-type="journal"><name><surname>Lučić</surname><given-names>V</given-names></name>, <name><surname>Fernández-Busnadiego</surname><given-names>R</given-names></name>, <name><surname>Laugks</surname><given-names>U</given-names></name>, <name><surname>Baumeister</surname><given-names>W</given-names></name>. <article-title>Hierarchical detection and analysis of macromolecular complexes in cryo-electron tomograms using Pyto software</article-title>. <source>J Struct Biol</source>. <year>2016</year>;<volume>196</volume>(<issue>3</issue>):<fpage>503</fpage>–<lpage>514</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2016.10.004</pub-id><?supplied-pmid 27742578?><pub-id pub-id-type="pmid">27742578</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref054">
      <label>54</label>
      <mixed-citation publication-type="journal"><name><surname>Rigort</surname><given-names>A</given-names></name>, <name><surname>Bäuerlein</surname><given-names>FJB</given-names></name>, <name><surname>Villa</surname><given-names>E</given-names></name>, <name><surname>Eibauer</surname><given-names>M</given-names></name>, <name><surname>Laugks</surname><given-names>T</given-names></name>, <name><surname>Baumeister</surname><given-names>W</given-names></name>, <etal>et al</etal><article-title>Focused ion beam micromachining of eukaryotic cells for cryoelectron tomography</article-title>. <source>PNAS</source>. <year>2012</year>;<volume>109</volume>(<issue>12</issue>):<fpage>4449</fpage>–<lpage>4454</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1201333109</pub-id><?supplied-pmid 22392984?><pub-id pub-id-type="pmid">22392984</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref055">
      <label>55</label>
      <mixed-citation publication-type="journal"><name><surname>Mastronarde</surname><given-names>DN</given-names></name>. <article-title>Automated electron microscope tomography using robust prediction of specimen movements</article-title>. <source>J Struct Biol</source>. <year>2005</year>;<volume>152</volume>:<fpage>36</fpage>–<lpage>51</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2005.07.007</pub-id><?supplied-pmid 16182563?><pub-id pub-id-type="pmid">16182563</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref056">
      <label>56</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>X</given-names></name>, <name><surname>Mooney</surname><given-names>P</given-names></name>, <name><surname>Zheng</surname><given-names>S</given-names></name>, <name><surname>Booth</surname><given-names>CR</given-names></name>, <name><surname>Braunfeld</surname><given-names>MB</given-names></name>, <name><surname>Gubbens</surname><given-names>S</given-names></name>, <etal>et al</etal><article-title>Electron counting and beam-induced motion correction enable near-atomic-resolution single-particle cryo-EM</article-title>. <source>Nat Methods</source>. <year>2013</year>;<volume>10</volume>(<issue>6</issue>):<fpage>584</fpage>–<lpage>590</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.2472</pub-id><?supplied-pmid 23644547?><pub-id pub-id-type="pmid">23644547</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref057">
      <label>57</label>
      <mixed-citation publication-type="journal"><name><surname>Kremer</surname><given-names>JR</given-names></name>, <name><surname>Mastronarde</surname><given-names>DN</given-names></name>, <name><surname>McIntosh</surname><given-names>JR</given-names></name>. <article-title>Computer visualization of three-dimensional image data using IMOD</article-title>. <source>J Struct Biol</source>. <year>1996</year>;<volume>116</volume>:<fpage>71</fpage>–<lpage>76</lpage>. <pub-id pub-id-type="doi">10.1006/jsbi.1996.0013</pub-id><?supplied-pmid 8742726?><pub-id pub-id-type="pmid">8742726</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref058">
      <label>58</label>
      <mixed-citation publication-type="journal"><name><surname>Moreno</surname><given-names>JJ</given-names></name>, <name><surname>Martínez-Sánchez</surname><given-names>A</given-names></name>, <name><surname>Martínez</surname><given-names>JA</given-names></name>, <name><surname>Garzón</surname><given-names>EM</given-names></name>, <name><surname>Fernández</surname><given-names>JJ</given-names></name>. <article-title>TomoEED: fast edge-enhancing denoising of tomographic volumes</article-title>. <source>Bioinformatics</source>. <year>2018</year>;<volume>34</volume>(<issue>21</issue>):<fpage>3776</fpage>–<lpage>3778</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bty435</pub-id><?supplied-pmid 29850773?><pub-id pub-id-type="pmid">29850773</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1007962.ref059">
      <label>59</label>
      <mixed-citation publication-type="journal"><name><surname>Nickell</surname><given-names>S</given-names></name>, <name><surname>Förster</surname><given-names>F</given-names></name>, <name><surname>Linaroudis</surname><given-names>A</given-names></name>, <name><surname>Net</surname><given-names>WD</given-names></name>, <name><surname>Beck</surname><given-names>F</given-names></name>, <name><surname>Hegerl</surname><given-names>R</given-names></name>, <etal>et al</etal><article-title>TOM software toolbox: acquisition and analysis for electron tomography</article-title>. <source>J Struct Biol</source>. <year>2005</year>;<volume>149</volume>(<issue>3</issue>):<fpage>227</fpage>–<lpage>234</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2004.10.006</pub-id><?supplied-pmid 15721576?><pub-id pub-id-type="pmid">15721576</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="publisher-id">ci</journal-id>
    <journal-id journal-id-type="coden">jcisd8</journal-id>
    <journal-title-group>
      <journal-title>Journal of Chemical Information and Modeling</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1549-9596</issn>
    <issn pub-type="epub">1549-960X</issn>
    <publisher>
      <publisher-name>American Chemical Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10751785</article-id>
    <article-id pub-id-type="pmid">38052452</article-id>
    <article-id pub-id-type="doi">10.1021/acs.jcim.3c01085</article-id>
    <article-categories>
      <subj-group>
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scipion-Chem: An
Open Platform for Virtual Drug Screening</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="ath1">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0005-3321-1810</contrib-id>
        <name>
          <surname>Del Hoyo</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <name>
          <surname>Salinas</surname>
          <given-names>Martin</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath3">
        <name>
          <surname>Lomas</surname>
          <given-names>Alba</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath4">
        <name>
          <surname>Ulzurrun</surname>
          <given-names>Eugenia</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <contrib contrib-type="author" id="ath5">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9948-2665</contrib-id>
        <name>
          <surname>Campillo</surname>
          <given-names>Nuria E.</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
        <xref rid="aff3" ref-type="aff">§</xref>
      </contrib>
      <contrib contrib-type="author" id="ath6">
        <name>
          <surname>Sorzano</surname>
          <given-names>Carlos Oscar</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <aff id="aff1"><label>†</label><institution>National
Center of Biotechnology (CNB-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
      <aff id="aff2"><label>‡</label><institution>Center
for Biological Research (CIB-CSIC)</institution>, Madrid 28040, <country>Spain</country></aff>
      <aff id="aff3"><label>§</label><institution>Institute
of Mathematical Sciences (ICMAT-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>Email: <email>ddelhoyo@cnb.csic.es</email>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>05</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>25</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <volume>63</volume>
    <issue>24</issue>
    <fpage>7873</fpage>
    <lpage>7885</lpage>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>07</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>07</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2023 The Authors. Published by American Chemical Society</copyright-statement>
      <copyright-year>2023</copyright-year>
      <copyright-holder>The Authors</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbyncndlicense">https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref>
        <license-p>Permits non-commercial access and re-use, provided that author attribution and integrity are maintained; but does not permit creation of adaptations or other derivative works (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc-nd/4.0/">https://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0015" id="ab-tgr1"/>
      </p>
      <p>Virtual drug screening (VDS) tackles the problem of drug
discovery
by computationally reducing the number of potential pharmacological
molecules that need to be tested experimentally to find a new drug.
To do so, several approaches have been developed through the years,
typically focusing on either the physicochemical characteristics of
the receptor structure (structure-based virtual screening) or those
of the potential ligands (ligand-based virtual screening). Scipion
is a workflow engine well suited for structural studies of biological
macromolecules. Here, we present Scipion-chem, a new branch oriented
to VDS. A total of 11 plugins have already been integrated from the
most common programs used in the field. They can be used through the
Scipion graphical user interface to execute and analyze typical VDS
tasks. In addition, we have developed several consensus protocols
that combine results from the different integrated programs to generate
more robust predictions. Backstage, Scipion also facilitates the interoperability
of those different software packages while tracking all of the intermediate
files, parameters, and user decisions. In summary, in this article,
we present Scipion-chem. This accessible, interoperable, and traceable
platform provides the user with all of the tools to carry out a successful
VDS workflow. Scipion-chem is openly available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri>.</p>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>European Commission</institution>
            <institution-id institution-id-type="doi">10.13039/501100000780</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>NA</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>FormaciÃ³n al Profesorado Universitario</institution>
            <institution-id institution-id-type="doi">NA</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>FPU21/00938</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <label>1</label>
    <title>Introduction</title>
    <p>Drug discovery and development
is a challenging and multistage
process that involves compound identification, in vitro evaluation,
hit optimization, in vivo and preclinical studies, and clinical phases,
demanding substantial time and resources. Even after a promising compound
is selected, several years are needed to pass the different clinical
stages, and most of them are actually discarded in this process. Due
to the difficulties of this process, the cost of developing a new
drug is estimated to be around 2.6 billion dollars.<sup><xref ref-type="bibr" rid="ref1">1</xref></sup> Apart from being a lengthy, costly, and complex process,
it is crucial to acknowledge the vastness of the chemical space involved
in drug development. This chemical space of drug-like compounds, which
is estimated to consist of approximately 10<sup>63</sup> molecules,
remains considerably beyond our reach. Therefore, computer-aided drug
discovery tools have been developed to speed up this process by filtering
out nonpromising molecules based on either the molecule’s characteristics
or the unlikeliness of its interaction with the target of interest.
Now, exploring this gigantic chemical space is still very challenging
even using this computational method, but researchers keep developing
new approaches and methods to improve the accuracy and speed of drug
discovery tasks.</p>
    <p>This in silico process of molecule filtering
is typically referred
to as virtual drug screening (VDS). It comprises different approaches,
which can usually be classified as structure based (SB) or ligand
based (LB) depending on the focus of the methods: either the receptor
structure characteristics in SB, which is typically a protein, or
the small molecules characteristics in LB.<sup><xref ref-type="bibr" rid="ref2">2</xref>−<xref ref-type="bibr" rid="ref4">4</xref></sup> Inside these two fields, we can find different commonly used approaches,
such as molecular docking and de novo design in SB; or quantitative
structure–activity relationship and pharmacophore modeling
in LB, among many others.<sup><xref ref-type="bibr" rid="ref8">8</xref>−<xref ref-type="bibr" rid="ref11">11</xref></sup></p>
    <p>Throughout these last years, researchers and
developers worldwide
have been adding new tools and methods to approach these different
tasks. Some of these programs can cover more than one step in a typical
VDS workflow but usually not all of them. Among this software, we
could cite Schrödinger,<sup><xref ref-type="bibr" rid="ref12">12</xref></sup> AutoDock,<sup><xref ref-type="bibr" rid="ref13">13</xref></sup> LePhar,<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> Fpocket,<sup><xref ref-type="bibr" rid="ref15">15</xref></sup> and P2Rank.<sup><xref ref-type="bibr" rid="ref16">16</xref></sup> Even
though this continuous improvement helps the community to gradually
solve the problem of drug discovery, for a researcher to use several
different and independent programs usually involves a series of difficulties
that hamper the development of complete VDS workflows, including<list id="list1" list-type="simple"><list-item><label>1.</label><p>Installation: Researchers may encounter
difficulties trying to install software due to the requirements or
incompatibilities each of them has.</p></list-item><list-item><label>2.</label><p>File formats: Although several common
formats have been established for protein and small molecule structures,
some programs require a specific format, which may not coincide with
the one provided by the previous step. The conversion between these
formats is possible, but sometimes, it is tricky and imperfect and
requires external software.</p></list-item><list-item><label>3.</label><p>Command line: Many programs rely on
extensive command line use. Even though this can offer high flexibility,
it also implies a strong entry barrier for many users who need to
learn and remember different commands for each program.</p></list-item><list-item><label>4.</label><p>Traceability: VDS workflows can be
composed of a considerable number of steps. When these steps are run
separately, it might be difficult to keep track of all the decisions,
parameters, or intermediate files, especially if these intermediate
files sometimes need conversions or modifications.</p></list-item><list-item><label>5.</label><p>Comparison: Even though having several
software options is mostly helpful, it also adds the problem of deciding
which results should be trusted or how to compare them.</p></list-item></list></p>
    <p>Scipion-chem is an extension of the Scipion workflow
engine<sup><xref ref-type="bibr" rid="ref5">5</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup> that has been designed to get rid of these complications
by (1)
automatically installing the software of interest and building any
necessary environment to avoid conflicts; (2) automatically converting
the intermediate files using OBabel,<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> RDKit,<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> or Biopython<sup><xref ref-type="bibr" rid="ref19">19</xref></sup> when
necessary; (3) offering a graphic user interface (GUI) to design and
manage the workflows and running the programs; (4) saving and organizing
all the parameters, workflows, and files in a straightforward folder
structure; and (5) providing intuitive viewers and consensus protocols
to compare and extract the most relevant information out of results
from different software in equivalent steps.</p>
  </sec>
  <sec id="sec2">
    <label>2</label>
    <title>VDS Workflow</title>
    <p>In this section, we follow
the typical VDS pipeline steps to characterize
promising ligands for a protein target, explaining each step and the
available programs and tools in Scipion-chem. The PDB structure <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>(<xref ref-type="bibr" rid="ref20">20</xref>) will be used as target throughout the workflow to give
examples and figures of the outputs of each step. In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, we show the software integrated
by Scipion-chem and the steps in which they are used. Moreover, the
viewers included along the pipeline are also shown along with some
extra functionalities that can be used from the platform.</p>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Scipion-chem
currently integrated software, organized by the step
of the typical VDS workflow in which they are involved in. Those programs
that can only perform one of the tasks in the row are marked with
red circles (only for target operations) and blue triangles (only
for ligand operations). The viewers and other utilities available
from Scipion-chem are also shown.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0001" id="gr1" position="float"/>
    </fig>
    <sec id="sec2.1">
      <label>2.1</label>
      <title>Molecule Import</title>
      <p>This step, previous
to those presented in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, involves adding either a new target or ligand structures
into a Scipion project. The import protocols allow the user to intuitively
choose the origin of the structures and download the corresponding
files if necessary.</p>
      <sec id="sec2.1.1">
        <label>2.1.1</label>
        <title>Target Import</title>
        <p>The targets for VDS
are mainly proteins whose structure can be characterized by diverse
methods such as X-ray crystallography or cryo-electron microscopy.
These methods ultimately generate the files that contain the information
on the structure. The most well-known structure file types are pdb
and cif, usually downloaded from the PDB database.<sup><xref ref-type="bibr" rid="ref21">21</xref></sup> From Scipion, the user can choose whether to download an
existing structure from the PDB using its unique identifier or import
the structure from a local file on his/her computer. In addition,
Scipion includes protocols for similarly importing sequences and using
modeling programs such as AlphaFold<sup><xref ref-type="bibr" rid="ref22">22</xref>,<xref ref-type="bibr" rid="ref23">23</xref></sup> in order to
get their corresponding structures.</p>
      </sec>
      <sec id="sec2.1.2">
        <label>2.1.2</label>
        <title>Ligand Import</title>
        <p>The hypothetical
ligands are usually small molecules that can interact, fit on the
protein surface, and change the target’s functionality. The
ligands can be imported using different formats depending on the type
of ligand representation, 2D or 3D, such as sdf, mol2, or pdb, and
others simply contain atomic information on the molecule, without
specifying any coordinates, such as smi. Many of these formats are
supported by Scipion-chem using OpenBabel and RDKit. The user can
choose to import the ligand structures from<list id="list2" list-type="simple"><list-item><label>1.</label><p>Local file(s): Import the ligand(s)
structures from local file(s).</p></list-item><list-item><label>2.</label><p>Predefined libraries: Throughout the
years, the drug screening community has defined several libraries
of ligands based on specific criteria. Scipion-chem allows downloading
some of these default libraries (e.g., ZINC<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> and ECBL<sup><xref ref-type="bibr" rid="ref25">25</xref></sup>).</p></list-item><list-item><label>3.</label><p>Database IDs: Import ligand(s) by their
ID in several databases such as PubChem,<sup><xref ref-type="bibr" rid="ref26">26</xref></sup> ChEMBL,<sup><xref ref-type="bibr" rid="ref27">27</xref></sup> BindingDB,<sup><xref ref-type="bibr" rid="ref28">28</xref></sup> or ZINC.<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> Some of these databases
group ligands based on some criteria. The IDs of these groups can
also be used to download the components of the group.</p></list-item><list-item><label>4.</label><p>Atomic structures: Some atomic structure
files from PDB include small molecules that can be extracted.</p></list-item><list-item><label>5.</label><p>Draw molecules: Scipion-chem
includes
a protocol calling JChemPaint,<sup><xref ref-type="bibr" rid="ref29">29</xref></sup> a Java
program that allows users to draw small molecules manually.</p></list-item></list></p>
      </sec>
    </sec>
    <sec id="sec2.2">
      <label>2.2</label>
      <title>Molecule Preparation</title>
      <p>Usually, both
the protein target and the small molecules used as hypothetical ligands
must be prepared to have some characteristics needed by the posterior
software in the pipeline. <xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref> contains a graphical example of target and ligand
preparations.</p>
      <fig id="fig2" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Example of Scipion-chem preparations for a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) and a ligand (ZINC480).
The target is cleaned from water molecules and preexisting ligands,
hydrogens are added, and only one of the three chains is generated.
Hydrogens are added to the ligand, and three different conformers
are generated.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0002" id="gr2" position="float"/>
      </fig>
      <sec id="sec2.2.1">
        <label>2.2.1</label>
        <title>Target Preparation</title>
        <p>Depending on
the method and procedure for resolving the protein target structure,
the resulting structure file might have slightly different characteristics
that we want to modify. The main modifications include adding missing
hydrogens, removing water molecules or other heteroatoms, and removing
irrelevant chains. Some of the included programs can also perform
more advanced preparations such as assigning new partial charges to
the atoms, performing energy minimization, or adding missing atoms
in the structure. Moreover, Scipion also includes programs specifically
oriented to modeling and modifying the atomic structures which can
also be used to accomplish this step.<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the
different options for target preparation are shown. These protocols
generate an output of type AtomStruct, containing the prepared atomic
structure.</p>
      </sec>
      <sec id="sec2.2.2">
        <label>2.2.2</label>
        <title>Ligand Preparation</title>
        <p>As for the target
structure, some modifications may need to be performed over the ligand
structures to make them compatible with the following steps. Similarly,
ligands can be treated to add hydrogens or assign charges, among other
options. Another preparation specific to ligands is the optional generation
of conformers, alternative energetically favorable conformations that
the molecule can acquire. Depending on the downstream pipeline programs
to use, the generation of conformers might or might not be necessary.
In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the different
options for the ligand preparation are shown. These protocols generate
an output of type SetOfSmallMolecules, containing the prepared ligand
structures.</p>
      </sec>
    </sec>
    <sec id="sec2.3">
      <label>2.3</label>
      <title>Molecule Filtering</title>
      <p>The steps described
in this section reduce the computations the posterior docking step
needs. It includes the definition of regions of interest (ROIs) on
the target structure, on one hand, to reduce the docking space to
explore and, on the other hand, to reduce the number of ligands to
dock by discarding poor, unpromising ligands based only on their own
characteristics.</p>
      <sec id="sec2.3.1">
        <label>2.3.1</label>
        <title>ROI Definition</title>
        <p>In Scipion-chem,
we define the structural ROIs as groups of atoms in the target that
are of concern for some reason. Depending on their origin, they can
be represented as points over target atoms, over the surface of the
target, or near it (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>). From a molecular docking perspective, structural ROIs reduce
the total space to explore from the complete target to a few promising
or interesting sites. However, they are ultimately groups of atoms
that can be of interest for any other topic inside the platform. There
are a number of intuitive protocols to define the structural ROIs
in Scipion-chem.<list id="list3" list-type="simple"><list-item><label>1.</label><p>Manually: The user might want to manually
define the structural ROIs directly from coordinates, specific residues,
existing ligands, interchain protein–protein interfaces, or
patterns of near residues in the target.</p></list-item><list-item><label>2.</label><p>Based on target characteristics: By
examining certain structural properties of the target and its corresponding
atoms and residues, the structural ROIs can be identified based on
predetermined thresholds. In Scipion-chem, we can, for example, define
the structural ROIs for sites with a high SASA (solvent-accessible
surface area), which can be visualized in the same protocol (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>).</p></list-item><list-item><label>3.</label><p>Predicted pockets: There are programs
specifically designed to predict those sites of the target that are
more likely to interact with a ligand. The exact procedure for determining
these regions differs depending on the program. Still, they are usually
concave regions or pockets where the ligands find themselves more
surrounded by the target atoms, and therefore, the interaction can
be energetically more favorable. In Scipion-chem, we have incorporated
FPocket, P2Rank, AutoSite, and SiteMap programs, and their results
are all parsed as the structural ROIs.</p></list-item><list-item><label>4.</label><p>Sequence ROIs: Parallel to the structural
ROIs, we defined sequence ROIs, which are defined as a group of consecutive
residues on a protein sequence. There are also several ways to define
sequence ROIs, such as manually, based on conservation, or existing
natural variants or mutations. These sequence ROIs can be mapped to
the structural ROIs based on the alignment of their sequence and the
sequence of a protein structure.</p></list-item></list></p>
        <fig id="fig3" position="float">
          <label>Figure 3</label>
          <caption>
            <p>Example of Scipion-chem per-residue SASA calculation over a target
(PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A).
Histogram with the number of residues vs the SASA values is shown
in the left panel. On the right panel, the structure of the complex
is visualized in ChimeraX, and each residue is colored by its SASA
value.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0003" id="gr10" position="float"/>
        </fig>
        <p>At this point of the pipeline, Scipion-chem offers
a consensus
tool to compare the structural ROIs obtained from different sources
and extract those shared among them. It works by clustering the structural
ROIs based on the residue overlap. A set of contact residues and atoms
ultimately defines each structural ROI. These clusters define whether
a pair of structural ROIs approximately defines the same region. Once
the clusters are built, only those containing a determined number
of ROIs are kept, which might be useful in different situations. For
example, we might want to keep the most promising protein pockets
by running the consensus over several sets of pockets obtained from
different tools. This way, only the most druggable pockets according
to both programs will remain. Another more trivial but still useful
example is to run the consensus protocol over a set of predicted pockets
and a structural ROI defined by hand on a residue of interest, for
example, a residue involved in the enzyme reaction of the protein.
Using this procedure, we will extract only the pocket(s) where the
residue of interest is found (<xref rid="fig4" ref-type="fig">Figure <xref rid="fig4" ref-type="fig">4</xref></xref>).</p>
        <fig id="fig4" position="float">
          <label>Figure 4</label>
          <caption>
            <p>Example of Scipion-chem
ROIs over a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the top left
panel, two manually generated sequence ROIs are represented in AliView.
On the left bottom panel, the two corresponding structural ROIs from
mapping those sequence ROIs to the structure are represented as points
over the surface in PyMol. Finally, on the right panel, the FPocket
predicted pockets are represented as alpha spheres in VMD for the
same structure.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0004" id="gr3" position="float"/>
        </fig>
      </sec>
      <sec id="sec2.3.2">
        <label>2.3.2</label>
        <title>Ligand-Based Filtering</title>
        <p>We can filter
the ligands before the docking step using an LB step. Scipion-chem
includes several filters based on only the characteristics of the
ligand. To do so, we use the RDKit package to include the following
filters based on<list id="list4" list-type="simple"><list-item><label>1.</label><p>Chemical features: We include two protocols
based on the molecule features. The first one uses the ADME (absorption,
distribution, metabolism, and excretion) filter to evaluate which
molecules have desirable pharmacokinetic properties. The second one
applies the PAINS (pan-assay interference compounds) filter to remove
the ligands containing molecular patterns that would lead to highly
unspecific interactions.</p></list-item><list-item><label>2.</label><p>Molecule shape: This protocol applies
a filter that takes out those molecules whose shape is not similar
enough to the shape of another molecule. For example, this filter
is used when we know the structure of a reference ligand, and we would
like to find more ligands with a similar shape, but that might have
different chemical compositions. We support shape comparison with
RDKit or Shape-it, using Tanimoto, Protrude, or rmsd distances.<sup><xref ref-type="bibr" rid="ref30">30</xref></sup></p></list-item><list-item><label>3.</label><p>Molecule fingerprints: Molecular fingerprints
are encoded representations of molecules. They typically represent
the absence or presence of specific molecular patterns in the molecule.
As with the previous filter, this one will remove those molecules
whose fingerprints are not similar enough to that of another molecule.
The user can choose among the Morgan or MACCS fingerprints<sup><xref ref-type="bibr" rid="ref31">31</xref></sup> and whether to use Tanimoto or Dice similarity
coefficients.</p></list-item><list-item><label>4.</label><p>Pharmacophore:
Pharmacophores are a
type of molecular representation.<sup><xref ref-type="bibr" rid="ref32">32</xref></sup> They
extract molecular features of one or more molecules and represent
them in 3D space, usually as spheres (see <xref rid="fig5" ref-type="fig">Figure <xref rid="fig5" ref-type="fig">5</xref></xref>). For another molecule to pass a pharmacophore
filter, it must be possible to align and match its own features to
those in the pharmacophore, with some degree of error. Scipion-chem
includes protocols to (1) generate pharmacophores out of a group of
small molecules, (2) define and manually modify RDKit pharmacophores,
and (3) run the filter over a set of small molecules. Pharmacophores
can be powerful tools for determining the most relevant features a
ligand must have to interact with a receptor site. The user might,
for example, want to build a pharmacophore out of the best results
of a structural-based docking to perform a pharmacophore-based docking
later. Scipion-chem currently supports pharmacophore generation and
filter protocols through RDKit.</p></list-item></list></p>
        <fig id="fig5" position="float">
          <label>Figure 5</label>
          <caption>
            <p>Example of Scipion-chem pharmacophore over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the left
panel, actual ligand OR3 is used to generate a pharmacophore. In an
intermediate step, the pharmacophore is slightly modified to make
the hydrogen acceptor feature (red sphere) larger and to remove the
aromatic feature (purple sphere). Then, on the right panel, molecule
ZINC1099, which passed this pharmacophore filter, is plotted aligned
to the pharmacophore.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0005" id="gr11" position="float"/>
        </fig>
      </sec>
    </sec>
    <sec id="sec2.4">
      <label>2.4</label>
      <title>Docking</title>
      <p>Molecular docking is usually
the main process in an SB VDS workflow. It calculates the pose of
the desired small molecules over the surface of the target, trying
to find the position with the most favorable energy, which, hopefully,
will coincide with the actual position of the ligand in the case this
interaction really occurs. Usually, every docking method relies on
a scoring function that ranks the positions provided by a search method
and the different tested ligands. The scoring function and the search
method are variable among the numerous methods the scientific community
has developed. In Scipion-chem, we have integrated six docking protocols:
AutoDock4, Vina, AutoDock-GPU (all from Autodock), LeDock (from LePhar),
DARC (from Rosetta), and Glide (from Schrödinger). The user
can choose among these methods whether to dock a set of small molecules
over the whole protein or a set of structural ROIs and choose the
different parameters that the software allows. The results can be
visualized grouped by ROIs or small molecule and either in ChimeraX
or in PyMol (see <xref rid="fig6" ref-type="fig">Figure <xref rid="fig6" ref-type="fig">6</xref></xref>).</p>
      <fig id="fig6" position="float">
        <label>Figure 6</label>
        <caption>
          <p>Example of Scipion-chem docking results in ChimeraX. Different
small molecules appear to be docked onto the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A protein. Each
of these molecules stores the different metadata that the docking
program provides, including the docking score or energy.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0006" id="gr4" position="float"/>
      </fig>
      <p>To ensure the comparability of docking results
obtained from each
of these methods, the molecules that have been docked onto the target
can be rescored using a consistent scoring function. In Scipion-chem,
we have integrated two protocols for docking rescoring: the first
uses the AutoDock4 scoring function and the second uses the ODDT package.
This package rescores the docking positions using a number of scoring
functions, and the user can choose a list of these that will be stored
in each molecule metadata. Therefore, once the docking poses are rescored
using the same function, we developed a consensus protocol to extract
the most relevant poses from a set of different docking results. To
do so, the docking positions are clustered based on their rmsd, and
only clusters containing a determined number of poses are considered
part of the consensus. Then, the molecule with the best chosen score
or energy is used to represent the cluster. This consensus does not
need the previous rescoring since the clustering process would proceed
similarly. Still, thanks to it, we can compare the different poses
in the cluster and choose the most favorable.</p>
      <p>Finally, another
tool is integrated to analyze the docking poses
in detail: PLIP (protein–ligand interaction profiler)<sup><xref ref-type="bibr" rid="ref33">33</xref></sup> (<xref rid="fig7" ref-type="fig">Figure <xref rid="fig7" ref-type="fig">7</xref></xref>). This tool plots in PyMol the docking pose and the different
noncovalent interactions that the target and the ligand would have
based on the distance and the atom types.</p>
      <fig id="fig7" position="float">
        <label>Figure 7</label>
        <caption>
          <p>Example of Scipion-chem
docking over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A) with its actual
ligand (OR3). The left side shows the target in cartoon representation
with one of the nine positions found for the molecule in PyMol using
Vina. On the right side, the same docked molecule is visualized in
PyMol using PLIP, plotting and listing all the noncovalent interactions
between the ligand and the target, only representing the interacting
residues.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0007" id="gr5" position="float"/>
      </fig>
    </sec>
    <sec id="sec2.5">
      <label>2.5</label>
      <title>Molecular Dynamics</title>
      <p>Molecular dynamics
(MD) is a broad and complex field of science that tries to simulate
at the atom level the interactions and dynamics of molecules, trying
to represent them in a closer way to reality, compared to usual docking
methods. Therefore, MD calculations are usually computationally expensive,
and it may not be worth using them for VDS studies compromising many
hypothetical ligands. However, under some circumstances, simulating
the interactions of a limited number of specific target–ligand
pairs might be interesting. For example, in our case, if our filters
during the VDS pipeline are strict enough, we could extract the best
few docked poses and then simulate these pairs. This way, we would
further check how strong their interactions are and whether the ligand
would actually stay in the receptor pocket enough time to act as a
drug. Moreover, MD might be useful for many other purposes involving
simulation of the receptor or the ligand separately to study their
behaviors freely. In Scipion-chem, we provide several packages for
preparing and running full MD simulations. These include Gromacs,<sup><xref ref-type="bibr" rid="ref34">34</xref></sup> AmberTools,<sup><xref ref-type="bibr" rid="ref35">35</xref></sup> OpenMM,<sup><xref ref-type="bibr" rid="ref36">36</xref></sup> and Desmond (from Schrödinger). For the
case of Desmond, in addition to the standard viewers, the Maestro
viewer is also available. These plugins contain protocols for<list id="list5" list-type="simple"><list-item><label>1.</label><p>System preparation: The protocol takes
the structure of either a receptor or a docked ligand to prepare a
solvated system (<xref rid="fig8" ref-type="fig">Figure <xref rid="fig8" ref-type="fig">8</xref></xref>). The different parameters accepted to tune these systems by each
software are provided in the protocol GUI, including the force fields
to use, size and form of the water box, whether to add ions and in
which quantities or concentrations, etc. The resulting solvated systems
can be visualized using PyMol from the Scipion project.</p></list-item><list-item><label>2.</label><p>Simulation: The user can define a list
of steps to be performed consecutively, choosing the parameters for
each of them and whether to store or not the trajectory out of each
step simulation. The steps included can perform energy minimization,
equilibration, or just production simulations. The list of steps is
modified in the protocol GUI using wizards to ensure the correctness
of the defined steps. The results of these protocols are the molecular
systems after the simulation and, if stored, the trajectories followed
by these system atoms through the simulation. Both can be visualized
using PyMol and VMD, and several trajectory analyses are included
to explore the simulation results further (see <xref rid="fig9" ref-type="fig">Figure <xref rid="fig9" ref-type="fig">9</xref></xref>).</p></list-item><list-item><label>3.</label><p>Trajectory modifications: A protocol
to perform trajectory or system modifications is included to allow
for standard operations such as removing water from a trajectory or
subsampling it.</p></list-item></list></p>
      <fig id="fig8" position="float">
        <label>Figure 8</label>
        <caption>
          <p>Example of the Scipion-chem solvated MD system (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). The left panel
shows the protein in a cubic water box and a number of ions (green
spheres) counter the charges of the protein using PyMol. A snapshot
of the same system is visualized on the right panel by using VMD,
showing only the closest water to the protein.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0008" id="gr12" position="float"/>
      </fig>
      <fig id="fig9" position="float">
        <label>Figure 9</label>
        <caption>
          <p>Example of Scipion-chem MD analysis that can be performed
on the
trajectory. On the top left and right panels, different analyses on
the mobility of the protein (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) throughout the trajectory are performed using Gromacs.
On the bottom panels, Schrödinger is used to analyze the trajectory
of <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link> together
with the OR3 ligand, and the images show representations of the target–ligand
contacts.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0009" id="gr13" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec id="sec3">
    <label>3</label>
    <title>Show Case</title>
    <p>In this section, we executed
the main VDS workflow in Scipion-chem,
including the consensus docking protocol, in a bigger data set. This
example, with code FABP4, was extracted from the DUD-E database<sup><xref ref-type="bibr" rid="ref37">37</xref></sup> and contains 47 active molecules, each of them
with around 50 decoys, making a total of 2749 decoy molecules. Both
the active, decoy libraries and the receptor structure are imported
to the Scipion GUI from the files provided by DUD-E. Then, the main
VDS workflow is executed, including the use of an LB filter, a receptor
binding site prediction, and 3 different docking programs (AutoDock-GPU,
AutoDock Vina, and LeDock). Finally, their results are combined by
using ODDT rescoring and our consensus docking protocol. Thanks to
the Scipion workflow engine, all of these VDS screening steps can
be scheduled and run in parallel as a complete workflow, where the
user can specify how to manage the resources devoted to each of the
steps and software. Moreover, for each of these steps or protocols,
Scipion GUI forms are accessible to easily modify and explore the
different parameters involved in their execution (see <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p>
    <fig id="fig10" position="float">
      <label>Figure 10</label>
      <caption>
        <p>Scipion-chem RDKit ligand
preparation form. The figure shows the
Scipion forms corresponding to the RDKit ligand preparation described.
The form contains an upper section where technical (run) parameters
can be set (protocol name, number of threads, queue system, etc.)
and a second section (input) where the user can define the input set
of molecules and the different parameters RDKit must use for the preparation.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0010" id="gr6" position="float"/>
    </fig>
    <p>In the following lines, we will go through the
steps involved in
this VDS workflow. A more detailed description of these steps, together
with the corresponding forms, the actual workflows, and the data generated,
can be accessed in our GitHub docs page: <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>.<list id="list6" list-type="simple"><list-item><label>1.</label><p>Import: In this example, we imported
the structures directly from the pdb files (for the receptor, corresponding
to PDB <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="2NNQ">2NNQ</ext-link>)<sup><xref ref-type="bibr" rid="ref38">38</xref></sup> and sdf files (for the ligands) provided by
DUD-E. The forms provided by Scipion allow the user to choose the
origin of the structure and, in the case of the small molecules, the
molecule handler (RDKit or OpenBabel) to use and if a 3D reconstruction
is needed.</p></list-item><list-item><label>2.</label><p>Preparation:
Once the structures are
imported into the Scipion workflow, separate preparation steps are
performed for the receptor and ligand libraries. In this case, we
used the protein preparation protocol in the OpenMM plugin, which
uses PDBFixer for the receptor protein, and RDKit for the preparation
of the ligands. In each of the forms, the user is asked about the
preparation parameters desired, such as removing undesired atoms (water
and other nonprotein entities) or adding missing atoms in the receptor,
which force fields to use, and whether to generate conformers (5 for
our example) in the preparation of the ligands (shown in <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p></list-item><list-item><label>3.</label><p>ROI definition: In this particular
example, P2Rank is used to predict the most promising pockets in our
receptor, which will become those ROIs where we will direct the docking
processes. Then, this P2Rank protocol is followed by a filter protocol
to extract only the 2 best pockets predicted, in order to speed up
the downstream workflow.</p></list-item><list-item><label>4.</label><p>LB filtering: On the ligand side, a
filtering step is used by passing the ADME LB filter protocol to our
active and decoy molecules. After this filter, we continue the processing
with 46 active and 2611 decoy molecules, discarding 1 and 138 molecules,
respectively.</p></list-item><list-item><label>5.</label><p>Docking:
This step involves the execution
of 3 independent docking programs (AutoDock-GPU, AutoDock Vina, and
LeDock) over the 2 defined ROIs and both the active and decoy prepared
libraries. In practice, this is the slowest step of the workflow and
therefore becomes the usual bottleneck in its execution, so it is
important to choose appropriate resources for them. In our case, the
forms allow us to define the number of threads and GPUs (only for
AutoDock-GPU) to allocate for each of the executions. Moreover, as
the previous cases, the forms also include the parameters that the
user can tweak to define the docking processes, such as the number
of docking poses to generate for each of the molecule conformers.
In our case, we chose five, resulting on 96226, 109139, and 76830
docking poses for each of the cited docking programs.</p></list-item><list-item><label>6.</label><p>Rescoring: In order to combine and
compare the docking poses generated by each of the software, we need
to first evaluate those poses using the same scoring function. In
this case, we use the ODDT score protocol to rescore all the docking
poses with its Vina score function.</p></list-item><list-item><label>7.</label><p>Filter and consensus: Finally, the
rescored poses can be combined and ranked, and the consensus protocol
can be applied to cluster and extract the most promising docking positions.
In our example, different ranking filters and consensus parameters
were used to evaluate the results. Nine filtered subsets of our docked
molecules containing the 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, and 100%
of the highest-scored poses were generated. Then, two consensus protocols
were executed for each of these subsets with a difference in a vital
parameter. First, both consensus runs will produce the same pose clusters;
however, one of the consensus executions will only consider sufficient
those clusters containing at least one pose from each of the three
docking software (N3), while the other, more permissive one, will
consider sufficient those that contain at least poses from 2 docking
software (N2). This way, we intend to generate sets enriched in active
molecules and smaller than the original set of 2796 molecules. The
results of this experiment comparing the filtering vs N2 consensus
are shown in <xref rid="fig11" ref-type="fig">Figure <xref rid="fig11" ref-type="fig">11</xref></xref>, where we can observe the enrichment of actives vs decoys of the
output subsets and the total number of molecules kept for each of
them. Subsets labeled % <italic>x</italic> show the enrichment for
the sets generated only passing the score filter, while those labeled
% <italic>x</italic>_N2 represents the corresponding set generated
after passing the score filter plus the consensus protocol. A similar
image with the results for the N3 consensus can be found in our GitHub
documentation page.</p></list-item></list></p>
    <fig id="fig11" position="float">
      <label>Figure 11</label>
      <caption>
        <p>Scipion-chem consensus protocol enrichment. The graph shows the
percentage of actives (blue bars) and the total number of molecules
(red dots) for each of the subsets generated in the workflow. The
subset “Original” represents the original set imported
from DUD-E; “% 100” represents the subset of molecules
remaining after the described LB filtering (which slightly improves
the enrichment), and then each of the consensus subsets generated
by applying a best ODDT score ranking filter for the top % <italic>x</italic> and consensus docking with parameter N2.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0011" id="gr14" position="float"/>
    </fig>
    <p>As we can infer from the graphs, both strategies
lead to a considerable
enrichment of the original data set as the percentage of actives (the
blue bars) is generally enhanced, while the number of total molecules
in the subset (the red line) is reduced. For our FABP4 example, from
the original 2796 (47 actives to 2749 decoys) molecules (1.68% of
actives), we obtained considerable enrichment in both the filtered
and filter plus consensus subsets. For instance, we obtained a subset
of 64 molecules where 11 actives were kept (17.19%) for the 0.1% filtered
subset, or once this same subset is passed through the N2 consensus,
we further enriched it to keep 7 actives out of just 24 molecules
(29.17%).</p>
    <p>Therefore, we were able to reduce the total number
of molecules
in the original set while significantly enhancing the proportion of
actives. However, the user must be careful not to reduce too much
the number of docking poses with the score filter since we can observe
that subsets below 0.05% lose all or most of the active molecules.</p>
    <p>Additionally, in <xref rid="fig12" ref-type="fig">Figure <xref rid="fig12" ref-type="fig">12</xref></xref>, the experimental values for the interaction of the active
molecules and the receptor are represented and plotted based on their
experimental <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) values and their best pose ODDTScore. Those points with a
yellow star correspond to the active molecules present in the best
resulting consensus data set (% 0.1_N2). As we can observe, the ODDTScore
seems to correlate relatively well, and most of the highest ODDTScores
represent the best experimental affinities, which are captured in
the consensus.</p>
    <fig id="fig12" position="float">
      <label>Figure 12</label>
      <caption>
        <p>Experimental interaction values (nM) of actives in <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) against the
corresponding
values in the ODDTScore Vina. The yellow stars specify actives found
in the best consensus set.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0012" id="gr7" position="float"/>
    </fig>
    <p>In summary, a complete VDS workflow was executed
from the Scipion
GUI on the FABP4 data set, which allowed to run all the different
software involved from the same program, while maintaining the flexibility
of those program executions since the user can easily modify both
the functional and resource management parameters. In addition, the
Scipion API allowed for the automation and parallelization of all
of the tasks involved in the workflow. Finally, the use of new Scipion-chem
own tools, such as the consensus docking protocol, provides the user
with further resources and, together with the viewers and filter protocols,
can be helpful for the VDS process. In future works, we will keep
developing and integrating new tools. Specifically, we focus on improving
our consensus protocols in order to generate robust and reliable results
from the combination of several outputs.</p>
  </sec>
  <sec id="sec4">
    <label>4</label>
    <title>Implementation</title>
    <p>Scipion-chem is a Python-based
workflow package designed to work
as a plugin for Scipion, which is therefore necessary for its installation.
Then, Scipion-chem works as the core plugin for the rest of the chem
plugins. Today, 11 different plugins plus the core are available in
the Scipion-chem website (see <xref rid="fig13" ref-type="fig">Figure <xref rid="fig13" ref-type="fig">13</xref></xref>), with around 80 different protocols to be executed.
Still, we expect to continue to incorporate more plugins and protocols
in the future.</p>
    <fig id="fig13" position="float">
      <label>Figure 13</label>
      <caption>
        <p>Scipion-chem plugin schema. The red circle represents
the Scipion
workflow engine, which is made of three parts. The Scipion-chem core
plugin is a blue circle containing the main functionalities and tools
needed by the rest of the plugins, in green, which depend on it.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0013" id="gr8" position="float"/>
    </fig>
    <p>These plugins integrate the previously described
programs into
the workflow, which are currently mainly related to VDS and MD. Inside
Scipion, the user can visualize the workflows as a set of connected
boxes, each representing a protocol like the one we previously described.
These protocols can be found in various lists on the left-hand side
of the screen or by using a search operation. In <xref rid="fig14" ref-type="fig">Figure <xref rid="fig14" ref-type="fig">14</xref></xref>, an example of a VDS workflow
is shown following the schema in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. Inside each of these protocol boxes, the
different parameters governing the execution of the program can be
modified in the protocol form.</p>
    <fig id="fig14" position="float">
      <label>Figure 14</label>
      <caption>
        <p>Scipion-chem VDS workflow example following
the color convention
in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. The results
of this workflow are small molecules that have passed the ligand filters
and docked to the predicted pockets (structural ROIs) from the receptor.
The most promising pockets and docked poses are extracted using the
consensus protocols described above.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0014" id="gr9" position="float"/>
    </fig>
  </sec>
  <sec id="sec5">
    <label>5</label>
    <title>Conclusions</title>
    <p>The number of tools related
to VDS keeps growing each year, with
new or updated scripts and algorithms that try to solve specific parts
of the drug discovery process accurately. While this increasing number
of software offers high flexibility and possibilities, it also poses
a high difficulty barrier to users who must learn how to use each
of these programs, usually in combination. Hereby, we have presented
Scipion-chem, an open and interactive platform for VDS that eases
access to this software and provides interoperability among them.
Scipion-chem is built over the workflow engine Scipion, which provides
complete traceability and automation of the workflows and software
installation. Advanced users may work with a python API that enhances
the automatic and programmatic access to Scipion-chem tools. Finally,
the user can use different consensus tools that compare the results
from different software to extract the most relevant pieces of common
information.</p>
    <p>Even though Scipion-chem was born focused on VDS,
its name suggests
that it can be projected to a range of chemoinformatic fields. From
the Scipion team, we are already involved in expanding Scipion-chem
to MD (with already useable tools) and quantum mechanics, and we hope
to release new plugins related to these soon. We will keep working
on maintaining and offering new VDS-related tools such as ligand retrosynthetic
analysis or fragment-based screening.</p>
  </sec>
</body>
<back>
  <notes notes-type="COI-statement" id="notes1">
    <p>The authors
declare no competing financial interest.</p>
  </notes>
  <notes notes-type="" id="notes2">
    <title>Notes</title>
    <p>All discussed
Scipion-chem plugins can be found
openly available in <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri> as GitHub repositories. We encourage users to use them, check the
code, look for bugs, and actively provide us any feedback or suggestions
via GitHub or mail. Also, all the data discussed so far in this paper
are documented and can be found in the corresponding GitHub page <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>, which contains the importable workflows, the input data from DUD-E,
and all the results generated. Finally, a list of the software installed
by the referenced Scipion-chem plugins is detailed in this same documentation,
together with their versions and sources.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>This research work was funded by the European Commission—NextGenerationEU
(Regulation 2020/2094), through CSIĆs Global Health Platform
(PTI Salud Global) and an FPU (Formación de Profesorado Universitario)
grant from the Spanish Ministry of Education. In addition, we would
like to express our gratitude to Pedro Febrer, Aida Pinacho and Carlos
Roca for their contributions to the molecular dynamics section of
this project that provided a starting point for our work.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Leelananda</surname><given-names>S. P.</given-names></name>; <name><surname>Lindert</surname><given-names>S.</given-names></name><article-title>Computational Methods in Drug Discovery</article-title>. <source>Beilstein J. Org. Chem.</source><year>2016</year>, <volume>12</volume>, <fpage>2694</fpage>–<lpage>2718</lpage>. <pub-id pub-id-type="doi">10.3762/bjoc.12.267</pub-id>.<pub-id pub-id-type="pmid">28144341</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Lin</surname><given-names>X.</given-names></name>; <name><surname>Li</surname><given-names>X.</given-names></name>; <name><surname>Lin</surname><given-names>X.</given-names></name><article-title>A Review on
Applications of Computational Methods in
Drug Screening and Design</article-title>. <source>Molecules</source><year>2020</year>, <volume>25</volume>, <fpage>1375</fpage><pub-id pub-id-type="doi">10.3390/molecules25061375</pub-id>.<pub-id pub-id-type="pmid">32197324</pub-id></mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="journal" id="cit3"><name><surname>McInnes</surname><given-names>C.</given-names></name><article-title>Virtual Screening
Strategies in Drug Discovery</article-title>. <source>Curr. Opin. Chem.
Biol.</source><year>2007</year>, <volume>11</volume>, <fpage>494</fpage>–<lpage>502</lpage>. <pub-id pub-id-type="doi">10.1016/j.cbpa.2007.08.033</pub-id>.<pub-id pub-id-type="pmid">17936059</pub-id></mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Varela-Rial</surname><given-names>A.</given-names></name>; <name><surname>Majewski</surname><given-names>M.</given-names></name>; <name><surname>De Fabritiis</surname><given-names>G.</given-names></name><article-title>Structure
Based Virtual Screening:
Fast and Slow</article-title>. <source>Wiley Interdiscip. Rev.: Comput.
Mol. Sci.</source><year>2021</year>, <volume>12</volume>, <elocation-id>e1544</elocation-id><pub-id pub-id-type="doi">10.1002/wcms.1544</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="journal" id="cit8"><name><surname>Park</surname><given-names>H.</given-names></name>; <name><surname>Jeon</surname><given-names>J.</given-names></name>; <name><surname>Kim</surname><given-names>K.</given-names></name>; <name><surname>Choi</surname><given-names>S.</given-names></name>; <name><surname>Hong</surname><given-names>S.</given-names></name><article-title>Structure-Based
Virtual Screening and De Novo Design of PIM1 Inhibitors With Anticancer
Activity From Natural Products</article-title>. <source>Pharmaceuticals</source><year>2021</year>, <volume>14</volume>, <fpage>275</fpage><pub-id pub-id-type="doi">10.3390/ph14030275</pub-id>.<pub-id pub-id-type="pmid">33803840</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="journal" id="cit9"><name><surname>Klenner</surname><given-names>A.</given-names></name>; <name><surname>Hartenfeller</surname><given-names>M.</given-names></name>; <name><surname>Schneider</surname><given-names>P.</given-names></name>; <name><surname>Schneider</surname><given-names>G.</given-names></name><article-title>“Fuzziness”
in Pharmacophore-Based Virtual Screening and De Novo Design</article-title>. <source>Drug Discovery Today: Technol.</source><year>2010</year>, <volume>7</volume>, <fpage>e237</fpage>–<lpage>e244</lpage>. <pub-id pub-id-type="doi">10.1016/j.ddtec.2010.10.004</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="journal" id="cit10"><name><surname>Lill</surname><given-names>M. A.</given-names></name><article-title>Multi-Dimensional
QSAR in Drug Discovery</article-title>. <source>Drug Discovery Today</source><year>2007</year>, <volume>12</volume>, <fpage>1013</fpage>–<lpage>1017</lpage>. <pub-id pub-id-type="doi">10.1016/j.drudis.2007.08.004</pub-id>.<pub-id pub-id-type="pmid">18061879</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="journal" id="cit11"><name><surname>Neves</surname><given-names>B. J.</given-names></name>; <name><surname>Braga</surname><given-names>R. C.</given-names></name>; <name><surname>Melo-Filho</surname><given-names>C. C.</given-names></name>; <name><surname>Moreira-Filho</surname><given-names>J. T.</given-names></name>; <name><surname>Muratov</surname><given-names>E. N.</given-names></name>; <name><surname>Andrade</surname><given-names>C. H.</given-names></name><article-title>QSAR-Based Virtual
Screening: Advances
and Applications in Drug Discovery</article-title>. <source>Front. Pharmacol.</source><year>2018</year>, <volume>9</volume>, <fpage>1275</fpage><pub-id pub-id-type="doi">10.3389/fphar.2018.01275</pub-id>.<pub-id pub-id-type="pmid">30524275</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="journal" id="cit12"><name><surname>Repasky</surname><given-names>M. P.</given-names></name>; <name><surname>Shelley</surname><given-names>M.</given-names></name>; <name><surname>Friesner</surname><given-names>R. A.</given-names></name><article-title>Flexible Ligand
Docking With Glide</article-title>. <source>Curr. Protoc. Bioinf.</source><year>2007</year>, <volume>18</volume>, <fpage>8</fpage>–<lpage>12</lpage>. <pub-id pub-id-type="doi">10.1002/0471250953.bi0812s18</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="journal" id="cit13"><name><surname>Forli</surname><given-names>S.</given-names></name>; <name><surname>Huey</surname><given-names>R.</given-names></name>; <name><surname>Pique</surname><given-names>M. E.</given-names></name>; <name><surname>Sanner</surname><given-names>M. F.</given-names></name>; <name><surname>Goodsell</surname><given-names>D. S.</given-names></name>; <name><surname>Olson</surname><given-names>A. J.</given-names></name><article-title>Computational Protein-Ligand
Docking and Virtual Drug
Screening With the AutoDock Suite</article-title>. <source>Nat. Protoc.</source><year>2016</year>, <volume>11</volume>, <fpage>905</fpage>–<lpage>919</lpage>. <pub-id pub-id-type="doi">10.1038/nprot.2016.051</pub-id>.<pub-id pub-id-type="pmid">27077332</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="conf-proc" id="cit14"><person-group person-group-type="allauthors"><name><surname>Liu</surname><given-names>N.</given-names></name>; <name><surname>Xu</surname><given-names>Z.</given-names></name></person-group><article-title>Using LeDock as
a Docking Tool
for Computational Drug Design</article-title>. <source>IOP Conference
Series: Earth and Environmental Science</source>, <year>2019</year>; p <fpage>012143</fpage>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="journal" id="cit15"><name><surname>Le
Guilloux</surname><given-names>V.</given-names></name>; <name><surname>Schmidtke</surname><given-names>P.</given-names></name>; <name><surname>Tuffery</surname><given-names>P.</given-names></name><article-title>Fpocket: An Open Source
Platform for Ligand Pocket Detection</article-title>. <source>BMC Bioinf.</source><year>2009</year>, <volume>10</volume>, <fpage>168</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="journal" id="cit16"><name><surname>Krivák</surname><given-names>R.</given-names></name>; <name><surname>Hoksza</surname><given-names>D.</given-names></name><article-title>P2Rank: Machine Learning Based Tool
for Rapid and Accurate
Prediction of Ligand Binding Sites From Protein Structure</article-title>. <source>J. Cheminf.</source><year>2018</year>, <volume>10</volume>, <fpage>39</fpage><pub-id pub-id-type="doi">10.1186/s13321-018-0285-8</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>de
la Rosa-Trevín</surname><given-names>J.</given-names></name>; <name><surname>Quintana</surname><given-names>A.</given-names></name>; <name><surname>del Cano</surname><given-names>L.</given-names></name>; <name><surname>Zaldívar</surname><given-names>A.</given-names></name>; <name><surname>Foche</surname><given-names>I.</given-names></name>; <name><surname>Gutiérrez</surname><given-names>J.</given-names></name>; <name><surname>Gómez-Blanco</surname><given-names>J.</given-names></name>; <name><surname>Burguet-Castell</surname><given-names>J.</given-names></name>; <name><surname>Cuenca-Alba</surname><given-names>J.</given-names></name>; <name><surname>Abrishami</surname><given-names>V.</given-names></name>; et al. <article-title>Scipion: A Software Framework Toward Integration, Reproducibility
and Validation in 3D Electron Microscopy</article-title>. <source>J.
Struct. Biol.</source><year>2016</year>, <volume>195</volume>, <fpage>93</fpage>–<lpage>99</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2016.04.010</pub-id>.<pub-id pub-id-type="pmid">27108186</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>de la
Morena</surname><given-names>J. J.</given-names></name>; <name><surname>Sharov</surname><given-names>G.</given-names></name>; <name><surname>de la Rosa-Trevín</surname><given-names>J. M.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Mena</surname><given-names>A. G.</given-names></name>; <name><surname>de Francisco</surname><given-names>B. R.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name><article-title>Scipion3: A Workflow Engine for Cryo-Electron
Microscopy Image Processing and Structural Biology</article-title>. <source>Biol. Imaging</source><year>2023</year>, <volume>3</volume>, <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1017/S2633903X23000132</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Krieger</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name><article-title>Scipion-EM-ProDy:
A Graphical Interface
for the ProDy Python Package within the Scipion Workflow Engine Enabling
Integration of Databases, Simulations and Cryo-Electron Microscopy
Image Processing</article-title>. <source>Int. J. Mol. Sci.</source><year>2023</year>, <volume>24</volume>, <fpage>14245</fpage><pub-id pub-id-type="doi">10.3390/ijms241814245</pub-id>.<pub-id pub-id-type="pmid">37762547</pub-id></mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>O’Boyle</surname><given-names>N. M.</given-names></name>; <name><surname>Banck</surname><given-names>M.</given-names></name>; <name><surname>James</surname><given-names>C. A.</given-names></name>; <name><surname>Morley</surname><given-names>C.</given-names></name>; <name><surname>Vandermeersch</surname><given-names>T.</given-names></name>; <name><surname>Hutchison</surname><given-names>G. R.</given-names></name><article-title>Open Babel: An Open Chemical Toolbox</article-title>. <source>J. Cheminf.</source><year>2011</year>, <volume>3</volume>, <fpage>33</fpage><pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>Landrum</surname><given-names>G.</given-names></name><article-title>RDKit: A Software
Suite for Cheminformatics, Computational Chemistry, and Predictive
Modeling</article-title>. <source>Greg Landrum</source><year>2013</year>, <volume>8</volume>, <fpage>31</fpage><pub-id pub-id-type="doi">10.5281/zenodo.7541264</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Cock</surname><given-names>P. J. A.</given-names></name>; <name><surname>Antao</surname><given-names>T.</given-names></name>; <name><surname>Chang</surname><given-names>J. T.</given-names></name>; <name><surname>Chapman</surname><given-names>B. A.</given-names></name>; <name><surname>Cox</surname><given-names>C. J.</given-names></name>; <name><surname>Dalke</surname><given-names>A.</given-names></name>; <name><surname>Friedberg</surname><given-names>I.</given-names></name>; <name><surname>Hamelryck</surname><given-names>T.</given-names></name>; <name><surname>Kauff</surname><given-names>F.</given-names></name>; <name><surname>Wilczynski</surname><given-names>B.</given-names></name>; et al. <article-title>Biopython: Freely Available
Python Tools for Computational Molecular Biology and Bioinformatics</article-title>. <source>Bioinformatics</source><year>2009</year>, <volume>25</volume>, <fpage>1422</fpage>–<lpage>1423</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Rew</surname><given-names>Y.</given-names></name>; <name><surname>Sun</surname><given-names>D.</given-names></name>; <name><surname>Gonzalez-Lopez De Turiso</surname><given-names>F.</given-names></name>; <name><surname>Bartberger</surname><given-names>M. D.</given-names></name>; <name><surname>Beck</surname><given-names>H. P.</given-names></name>; <name><surname>Canon</surname><given-names>J.</given-names></name>; <name><surname>Chen</surname><given-names>A.</given-names></name>; <name><surname>Chow</surname><given-names>D.</given-names></name>; <name><surname>Deignan</surname><given-names>J.</given-names></name>; <name><surname>Fox</surname><given-names>B. M.</given-names></name>; et al. <article-title>Structure-Based Design
of Novel Inhibitors of the MDM2-p53 Interaction</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>4936</fpage>–<lpage>4954</lpage>. <pub-id pub-id-type="doi">10.1021/jm300354j</pub-id>.<pub-id pub-id-type="pmid">22524527</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="journal" id="cit21"><name><surname>Berman</surname><given-names>H. M.</given-names></name><article-title>The Protein
Data Bank</article-title>. <source>Nucleic Acids Res.</source><year>2000</year>, <volume>28</volume>, <fpage>235</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>.<pub-id pub-id-type="pmid">10592235</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <mixed-citation publication-type="journal" id="cit22"><name><surname>Jumper</surname><given-names>J.</given-names></name>; <name><surname>Evans</surname><given-names>R.</given-names></name>; <name><surname>Pritzel</surname><given-names>A.</given-names></name>; <name><surname>Green</surname><given-names>T.</given-names></name>; <name><surname>Figurnov</surname><given-names>M.</given-names></name>; <name><surname>Ronneberger</surname><given-names>O.</given-names></name>; <name><surname>Tunyasuvunakool</surname><given-names>K.</given-names></name>; <name><surname>Bates</surname><given-names>R.</given-names></name>; <name><surname>Žídek</surname><given-names>A.</given-names></name>; <name><surname>Potapenko</surname><given-names>A.</given-names></name>; et al. <article-title>Highly Accurate Protein Structure Prediction
With AlphaFold</article-title>. <source>Nature</source><year>2021</year>, <volume>596</volume>, <fpage>583</fpage>–<lpage>589</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>.<pub-id pub-id-type="pmid">34265844</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="journal" id="cit23"><name><surname>Martínez</surname><given-names>M.</given-names></name>; <name><surname>Jiménez-Moreno</surname><given-names>A.</given-names></name>; <name><surname>Maluenda</surname><given-names>D.</given-names></name>; <name><surname>Ramírez-Aportela</surname><given-names>E.</given-names></name>; <name><surname>Melero</surname><given-names>R.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>del Caño</surname><given-names>L.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>Sánchez-García</surname><given-names>R.</given-names></name>; et al. <article-title>Integration of Cryo-EM Model Building Software in Scipion</article-title>. <source>J. Chem. Inf. Model.</source><year>2020</year>, <volume>60</volume>, <fpage>2533</fpage>–<lpage>2540</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jcim.9b01032</pub-id>.<pub-id pub-id-type="pmid">31994878</pub-id></mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="journal" id="cit24"><name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>ZINC—A Free Database of Commercially Available
Compounds for Virtual Screening</article-title>. <source>J. Chem. Inf.
Model.</source><year>2005</year>, <volume>45</volume>, <fpage>177</fpage>–<lpage>182</lpage>. <pub-id pub-id-type="doi">10.1021/ci049714+</pub-id>.<pub-id pub-id-type="pmid">15667143</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="journal" id="cit25"><name><surname>Meiners</surname><given-names>T.</given-names></name>; <name><surname>Stechmann</surname><given-names>B.</given-names></name>; <name><surname>Frank</surname><given-names>R.</given-names></name><article-title>EU-OPENSCREEN—Chemical Tools
for the Study of Plant Biology and Resistance Mechanisms</article-title>. <source>J. Chem. Biol.</source><year>2014</year>, <volume>7</volume>, <fpage>113</fpage>–<lpage>118</lpage>. <pub-id pub-id-type="doi">10.1007/s12154-014-0118-9</pub-id>.<pub-id pub-id-type="pmid">25320643</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <mixed-citation publication-type="journal" id="cit26"><name><surname>Kim</surname><given-names>S.</given-names></name>; <name><surname>Thiessen</surname><given-names>P. A.</given-names></name>; <name><surname>Bolton</surname><given-names>E. E.</given-names></name>; <name><surname>Chen</surname><given-names>J.</given-names></name>; <name><surname>Fu</surname><given-names>G.</given-names></name>; <name><surname>Gindulyte</surname><given-names>A.</given-names></name>; <name><surname>Han</surname><given-names>L.</given-names></name>; <name><surname>He</surname><given-names>J.</given-names></name>; <name><surname>He</surname><given-names>S.</given-names></name>; <name><surname>Shoemaker</surname><given-names>B. A.</given-names></name>; <name><surname>Wang</surname><given-names>J.</given-names></name>; <name><surname>Yu</surname><given-names>B.</given-names></name>; <name><surname>Zhang</surname><given-names>J.</given-names></name>; <name><surname>Bryant</surname><given-names>S. H.</given-names></name><article-title>PubChem
Substance and Compound Databases</article-title>. <source>Nucleic Acids
Res.</source><year>2016</year>, <volume>44</volume>, <fpage>D1202</fpage>–<lpage>D1213</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv951</pub-id>.<pub-id pub-id-type="pmid">26400175</pub-id></mixed-citation>
    </ref>
    <ref id="ref27">
      <mixed-citation publication-type="journal" id="cit27"><name><surname>Gaulton</surname><given-names>A.</given-names></name>; <name><surname>Hersey</surname><given-names>A.</given-names></name>; <name><surname>Nowotka</surname><given-names>M.</given-names></name>; <name><surname>Bento</surname><given-names>A. P.</given-names></name>; <name><surname>Chambers</surname><given-names>J.</given-names></name>; <name><surname>Mendez</surname><given-names>D.</given-names></name>; <name><surname>Mutowo</surname><given-names>P.</given-names></name>; <name><surname>Atkinson</surname><given-names>F.</given-names></name>; <name><surname>Bellis</surname><given-names>L. J.</given-names></name>; <name><surname>Cibrián-Uhalte</surname><given-names>E.</given-names></name>; et al. <article-title>The ChEMBL Database
in 2017</article-title>. <source>Nucleic Acids Res.</source><year>2016</year>, <volume>45</volume>, <fpage>D945</fpage>–<lpage>D954</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkw1074</pub-id>.<pub-id pub-id-type="pmid">27899562</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <mixed-citation publication-type="journal" id="cit28"><name><surname>Liu</surname><given-names>T.</given-names></name>; <name><surname>Lin</surname><given-names>Y.</given-names></name>; <name><surname>Wen</surname><given-names>X.</given-names></name>; <name><surname>Jorissen</surname><given-names>R. N.</given-names></name>; <name><surname>Gilson</surname><given-names>M. K.</given-names></name><article-title>BindingDB: A Web-Accessible
Database of Experimentally Determined Protein-Ligand Binding Affinities</article-title>. <source>Nucleic Acids Res.</source><year>2007</year>, <volume>35</volume>, <fpage>D198</fpage>–<lpage>D201</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkl999</pub-id>.<pub-id pub-id-type="pmid">17145705</pub-id></mixed-citation>
    </ref>
    <ref id="ref29">
      <mixed-citation publication-type="journal" id="cit29"><name><surname>Krause</surname><given-names>S.</given-names></name>; <name><surname>Willighagen</surname><given-names>E.</given-names></name>; <name><surname>Steinbeck</surname><given-names>C.</given-names></name><article-title>JChemPaint - Using the Collaborative
Forces of the Internet to Develop a Free Editor for 2D Chemical Structures</article-title>. <source>Molecules</source><year>2000</year>, <volume>5</volume>, <fpage>93</fpage>–<lpage>98</lpage>. <pub-id pub-id-type="doi">10.3390/50100093</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref30">
      <mixed-citation publication-type="journal" id="cit30"><name><surname>Taminau</surname><given-names>J.</given-names></name>; <name><surname>Thijs</surname><given-names>G.</given-names></name>; <name><surname>De Winter</surname><given-names>H.</given-names></name><article-title>Pharao: Pharmacophore
Alignment and
Optimization</article-title>. <source>J. Mol. Graphics Modell.</source><year>2008</year>, <volume>27</volume>, <fpage>161</fpage>–<lpage>169</lpage>. <pub-id pub-id-type="doi">10.1016/j.jmgm.2008.04.003</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref31">
      <mixed-citation publication-type="journal" id="cit31"><name><surname>He</surname><given-names>K.</given-names></name><article-title>Pharmacological
Affinity Fingerprints Derived From Bioactivity Data for the Identification
of Designer Drugs</article-title>. <source>J. Cheminf.</source><year>2022</year>, <volume>14</volume>, <fpage>35</fpage><pub-id pub-id-type="doi">10.1186/s13321-022-00607-6</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref32">
      <mixed-citation publication-type="book" id="cit32"><person-group person-group-type="allauthors"><name><surname>Horvath</surname><given-names>D.</given-names></name></person-group><source>Chemoinformatics and
Computational Chemical Biology</source>; <person-group person-group-type="editor"><name><surname>Bajorath</surname><given-names>J.</given-names></name></person-group>, Ed.; <publisher-name>Humana
Press</publisher-name>: <publisher-loc>Totowa, NJ</publisher-loc>, <year>2011</year>; pp <fpage>261</fpage>–<lpage>298</lpage>.</mixed-citation>
    </ref>
    <ref id="ref33">
      <mixed-citation publication-type="journal" id="cit33"><name><surname>Salentin</surname><given-names>S.</given-names></name>; <name><surname>Schreiber</surname><given-names>S.</given-names></name>; <name><surname>Haupt</surname><given-names>V. J.</given-names></name>; <name><surname>Adasme</surname><given-names>M. F.</given-names></name>; <name><surname>Schroeder</surname><given-names>M.</given-names></name><article-title>PLIP: Fully
Automated Protein–Ligand Interaction Profiler</article-title>. <source>Nucleic Acids Res.</source><year>2015</year>, <volume>43</volume>, <fpage>W443</fpage>–<lpage>W447</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv315</pub-id>.<pub-id pub-id-type="pmid">25873628</pub-id></mixed-citation>
    </ref>
    <ref id="ref34">
      <mixed-citation publication-type="journal" id="cit34"><name><surname>Van
Der Spoel</surname><given-names>D.</given-names></name>; <name><surname>Lindahl</surname><given-names>E.</given-names></name>; <name><surname>Hess</surname><given-names>B.</given-names></name>; <name><surname>Groenhof</surname><given-names>G.</given-names></name>; <name><surname>Mark</surname><given-names>A. E.</given-names></name>; <name><surname>Berendsen</surname><given-names>H. J.</given-names></name><article-title>GROMACS: Fast, Flexible, and Free</article-title>. <source>J. Comput. Chem.</source><year>2005</year>, <volume>26</volume>, <fpage>1701</fpage>–<lpage>1718</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.20291</pub-id>.<pub-id pub-id-type="pmid">16211538</pub-id></mixed-citation>
    </ref>
    <ref id="ref35">
      <mixed-citation publication-type="journal" id="cit35"><name><surname>Salomon-Ferrer</surname><given-names>R.</given-names></name>; <name><surname>Case</surname><given-names>D. A.</given-names></name>; <name><surname>Walker</surname><given-names>R. C.</given-names></name><article-title>An Overview of the Amber Biomolecular
Simulation Package</article-title>. <source>Wiley Interdiscip. Rev.:
Comput. Mol. Sci.</source><year>2013</year>, <volume>3</volume>, <fpage>198</fpage>–<lpage>210</lpage>. <pub-id pub-id-type="doi">10.1002/wcms.1121</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref36">
      <mixed-citation publication-type="journal" id="cit36"><name><surname>Eastman</surname><given-names>P.</given-names></name>; <name><surname>Swails</surname><given-names>J.</given-names></name>; <name><surname>Chodera</surname><given-names>J. D.</given-names></name>; <name><surname>McGibbon</surname><given-names>R. T.</given-names></name>; <name><surname>Zhao</surname><given-names>Y.</given-names></name>; <name><surname>Beauchamp</surname><given-names>K. A.</given-names></name>; <name><surname>Wang</surname><given-names>L.-P.</given-names></name>; <name><surname>Simmonett</surname><given-names>A. C.</given-names></name>; <name><surname>Harrigan</surname><given-names>M. P.</given-names></name>; <name><surname>Stern</surname><given-names>C. D.</given-names></name>; et al. <article-title>OpenMM 7: Rapid Development
of High Performance Algorithms for Molecular Dynamics</article-title>. <source>PLoS Comput. Biol.</source><year>2017</year>, <volume>13</volume>, <elocation-id>e1005659</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005659</pub-id>.<pub-id pub-id-type="pmid">28746339</pub-id></mixed-citation>
    </ref>
    <ref id="ref37">
      <mixed-citation publication-type="journal" id="cit37"><name><surname>Mysinger</surname><given-names>M. M.</given-names></name>; <name><surname>Carchia</surname><given-names>M.</given-names></name>; <name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>Directory of Useful
Decoys, Enhanced (DUD-E): Better Ligands and Decoys for Better Benchmarking</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>6582</fpage>–<lpage>6594</lpage>. <pub-id pub-id-type="doi">10.1021/jm300687e</pub-id>.<pub-id pub-id-type="pmid">22716043</pub-id></mixed-citation>
      <note>
        <p>Accessed: 2023-09-24</p>
      </note>
    </ref>
    <ref id="ref38">
      <mixed-citation publication-type="report" id="cit38"><person-group person-group-type="allauthors"><name><surname>Jacobson</surname><given-names>B. L.</given-names></name></person-group><source>Crystal
Structure
of Human Adipocyte Fatty Acid Binding Protein in Complex with ((2′-(5-ethyl-3,
4-diphenyl-1H-pyrazol-1-yl)-3-biphenylyl)oxy)acetic Acid</source>, <year>2007</year>. <pub-id pub-id-type="doi">10.2210/pdb2nnq/pdb</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="publisher-id">ci</journal-id>
    <journal-id journal-id-type="coden">jcisd8</journal-id>
    <journal-title-group>
      <journal-title>Journal of Chemical Information and Modeling</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1549-9596</issn>
    <issn pub-type="epub">1549-960X</issn>
    <publisher>
      <publisher-name>American Chemical Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10751785</article-id>
    <article-id pub-id-type="pmid">38052452</article-id>
    <article-id pub-id-type="doi">10.1021/acs.jcim.3c01085</article-id>
    <article-categories>
      <subj-group>
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scipion-Chem: An
Open Platform for Virtual Drug Screening</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="ath1">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0005-3321-1810</contrib-id>
        <name>
          <surname>Del Hoyo</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <name>
          <surname>Salinas</surname>
          <given-names>Martin</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath3">
        <name>
          <surname>Lomas</surname>
          <given-names>Alba</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath4">
        <name>
          <surname>Ulzurrun</surname>
          <given-names>Eugenia</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <contrib contrib-type="author" id="ath5">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9948-2665</contrib-id>
        <name>
          <surname>Campillo</surname>
          <given-names>Nuria E.</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
        <xref rid="aff3" ref-type="aff">§</xref>
      </contrib>
      <contrib contrib-type="author" id="ath6">
        <name>
          <surname>Sorzano</surname>
          <given-names>Carlos Oscar</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <aff id="aff1"><label>†</label><institution>National
Center of Biotechnology (CNB-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
      <aff id="aff2"><label>‡</label><institution>Center
for Biological Research (CIB-CSIC)</institution>, Madrid 28040, <country>Spain</country></aff>
      <aff id="aff3"><label>§</label><institution>Institute
of Mathematical Sciences (ICMAT-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>Email: <email>ddelhoyo@cnb.csic.es</email>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>05</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>25</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <volume>63</volume>
    <issue>24</issue>
    <fpage>7873</fpage>
    <lpage>7885</lpage>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>07</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>07</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2023 The Authors. Published by American Chemical Society</copyright-statement>
      <copyright-year>2023</copyright-year>
      <copyright-holder>The Authors</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbyncndlicense">https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref>
        <license-p>Permits non-commercial access and re-use, provided that author attribution and integrity are maintained; but does not permit creation of adaptations or other derivative works (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc-nd/4.0/">https://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0015" id="ab-tgr1"/>
      </p>
      <p>Virtual drug screening (VDS) tackles the problem of drug
discovery
by computationally reducing the number of potential pharmacological
molecules that need to be tested experimentally to find a new drug.
To do so, several approaches have been developed through the years,
typically focusing on either the physicochemical characteristics of
the receptor structure (structure-based virtual screening) or those
of the potential ligands (ligand-based virtual screening). Scipion
is a workflow engine well suited for structural studies of biological
macromolecules. Here, we present Scipion-chem, a new branch oriented
to VDS. A total of 11 plugins have already been integrated from the
most common programs used in the field. They can be used through the
Scipion graphical user interface to execute and analyze typical VDS
tasks. In addition, we have developed several consensus protocols
that combine results from the different integrated programs to generate
more robust predictions. Backstage, Scipion also facilitates the interoperability
of those different software packages while tracking all of the intermediate
files, parameters, and user decisions. In summary, in this article,
we present Scipion-chem. This accessible, interoperable, and traceable
platform provides the user with all of the tools to carry out a successful
VDS workflow. Scipion-chem is openly available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri>.</p>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>European Commission</institution>
            <institution-id institution-id-type="doi">10.13039/501100000780</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>NA</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>FormaciÃ³n al Profesorado Universitario</institution>
            <institution-id institution-id-type="doi">NA</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>FPU21/00938</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <label>1</label>
    <title>Introduction</title>
    <p>Drug discovery and development
is a challenging and multistage
process that involves compound identification, in vitro evaluation,
hit optimization, in vivo and preclinical studies, and clinical phases,
demanding substantial time and resources. Even after a promising compound
is selected, several years are needed to pass the different clinical
stages, and most of them are actually discarded in this process. Due
to the difficulties of this process, the cost of developing a new
drug is estimated to be around 2.6 billion dollars.<sup><xref ref-type="bibr" rid="ref1">1</xref></sup> Apart from being a lengthy, costly, and complex process,
it is crucial to acknowledge the vastness of the chemical space involved
in drug development. This chemical space of drug-like compounds, which
is estimated to consist of approximately 10<sup>63</sup> molecules,
remains considerably beyond our reach. Therefore, computer-aided drug
discovery tools have been developed to speed up this process by filtering
out nonpromising molecules based on either the molecule’s characteristics
or the unlikeliness of its interaction with the target of interest.
Now, exploring this gigantic chemical space is still very challenging
even using this computational method, but researchers keep developing
new approaches and methods to improve the accuracy and speed of drug
discovery tasks.</p>
    <p>This in silico process of molecule filtering
is typically referred
to as virtual drug screening (VDS). It comprises different approaches,
which can usually be classified as structure based (SB) or ligand
based (LB) depending on the focus of the methods: either the receptor
structure characteristics in SB, which is typically a protein, or
the small molecules characteristics in LB.<sup><xref ref-type="bibr" rid="ref2">2</xref>−<xref ref-type="bibr" rid="ref4">4</xref></sup> Inside these two fields, we can find different commonly used approaches,
such as molecular docking and de novo design in SB; or quantitative
structure–activity relationship and pharmacophore modeling
in LB, among many others.<sup><xref ref-type="bibr" rid="ref8">8</xref>−<xref ref-type="bibr" rid="ref11">11</xref></sup></p>
    <p>Throughout these last years, researchers and
developers worldwide
have been adding new tools and methods to approach these different
tasks. Some of these programs can cover more than one step in a typical
VDS workflow but usually not all of them. Among this software, we
could cite Schrödinger,<sup><xref ref-type="bibr" rid="ref12">12</xref></sup> AutoDock,<sup><xref ref-type="bibr" rid="ref13">13</xref></sup> LePhar,<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> Fpocket,<sup><xref ref-type="bibr" rid="ref15">15</xref></sup> and P2Rank.<sup><xref ref-type="bibr" rid="ref16">16</xref></sup> Even
though this continuous improvement helps the community to gradually
solve the problem of drug discovery, for a researcher to use several
different and independent programs usually involves a series of difficulties
that hamper the development of complete VDS workflows, including<list id="list1" list-type="simple"><list-item><label>1.</label><p>Installation: Researchers may encounter
difficulties trying to install software due to the requirements or
incompatibilities each of them has.</p></list-item><list-item><label>2.</label><p>File formats: Although several common
formats have been established for protein and small molecule structures,
some programs require a specific format, which may not coincide with
the one provided by the previous step. The conversion between these
formats is possible, but sometimes, it is tricky and imperfect and
requires external software.</p></list-item><list-item><label>3.</label><p>Command line: Many programs rely on
extensive command line use. Even though this can offer high flexibility,
it also implies a strong entry barrier for many users who need to
learn and remember different commands for each program.</p></list-item><list-item><label>4.</label><p>Traceability: VDS workflows can be
composed of a considerable number of steps. When these steps are run
separately, it might be difficult to keep track of all the decisions,
parameters, or intermediate files, especially if these intermediate
files sometimes need conversions or modifications.</p></list-item><list-item><label>5.</label><p>Comparison: Even though having several
software options is mostly helpful, it also adds the problem of deciding
which results should be trusted or how to compare them.</p></list-item></list></p>
    <p>Scipion-chem is an extension of the Scipion workflow
engine<sup><xref ref-type="bibr" rid="ref5">5</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup> that has been designed to get rid of these complications
by (1)
automatically installing the software of interest and building any
necessary environment to avoid conflicts; (2) automatically converting
the intermediate files using OBabel,<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> RDKit,<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> or Biopython<sup><xref ref-type="bibr" rid="ref19">19</xref></sup> when
necessary; (3) offering a graphic user interface (GUI) to design and
manage the workflows and running the programs; (4) saving and organizing
all the parameters, workflows, and files in a straightforward folder
structure; and (5) providing intuitive viewers and consensus protocols
to compare and extract the most relevant information out of results
from different software in equivalent steps.</p>
  </sec>
  <sec id="sec2">
    <label>2</label>
    <title>VDS Workflow</title>
    <p>In this section, we follow
the typical VDS pipeline steps to characterize
promising ligands for a protein target, explaining each step and the
available programs and tools in Scipion-chem. The PDB structure <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>(<xref ref-type="bibr" rid="ref20">20</xref>) will be used as target throughout the workflow to give
examples and figures of the outputs of each step. In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, we show the software integrated
by Scipion-chem and the steps in which they are used. Moreover, the
viewers included along the pipeline are also shown along with some
extra functionalities that can be used from the platform.</p>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Scipion-chem
currently integrated software, organized by the step
of the typical VDS workflow in which they are involved in. Those programs
that can only perform one of the tasks in the row are marked with
red circles (only for target operations) and blue triangles (only
for ligand operations). The viewers and other utilities available
from Scipion-chem are also shown.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0001" id="gr1" position="float"/>
    </fig>
    <sec id="sec2.1">
      <label>2.1</label>
      <title>Molecule Import</title>
      <p>This step, previous
to those presented in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, involves adding either a new target or ligand structures
into a Scipion project. The import protocols allow the user to intuitively
choose the origin of the structures and download the corresponding
files if necessary.</p>
      <sec id="sec2.1.1">
        <label>2.1.1</label>
        <title>Target Import</title>
        <p>The targets for VDS
are mainly proteins whose structure can be characterized by diverse
methods such as X-ray crystallography or cryo-electron microscopy.
These methods ultimately generate the files that contain the information
on the structure. The most well-known structure file types are pdb
and cif, usually downloaded from the PDB database.<sup><xref ref-type="bibr" rid="ref21">21</xref></sup> From Scipion, the user can choose whether to download an
existing structure from the PDB using its unique identifier or import
the structure from a local file on his/her computer. In addition,
Scipion includes protocols for similarly importing sequences and using
modeling programs such as AlphaFold<sup><xref ref-type="bibr" rid="ref22">22</xref>,<xref ref-type="bibr" rid="ref23">23</xref></sup> in order to
get their corresponding structures.</p>
      </sec>
      <sec id="sec2.1.2">
        <label>2.1.2</label>
        <title>Ligand Import</title>
        <p>The hypothetical
ligands are usually small molecules that can interact, fit on the
protein surface, and change the target’s functionality. The
ligands can be imported using different formats depending on the type
of ligand representation, 2D or 3D, such as sdf, mol2, or pdb, and
others simply contain atomic information on the molecule, without
specifying any coordinates, such as smi. Many of these formats are
supported by Scipion-chem using OpenBabel and RDKit. The user can
choose to import the ligand structures from<list id="list2" list-type="simple"><list-item><label>1.</label><p>Local file(s): Import the ligand(s)
structures from local file(s).</p></list-item><list-item><label>2.</label><p>Predefined libraries: Throughout the
years, the drug screening community has defined several libraries
of ligands based on specific criteria. Scipion-chem allows downloading
some of these default libraries (e.g., ZINC<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> and ECBL<sup><xref ref-type="bibr" rid="ref25">25</xref></sup>).</p></list-item><list-item><label>3.</label><p>Database IDs: Import ligand(s) by their
ID in several databases such as PubChem,<sup><xref ref-type="bibr" rid="ref26">26</xref></sup> ChEMBL,<sup><xref ref-type="bibr" rid="ref27">27</xref></sup> BindingDB,<sup><xref ref-type="bibr" rid="ref28">28</xref></sup> or ZINC.<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> Some of these databases
group ligands based on some criteria. The IDs of these groups can
also be used to download the components of the group.</p></list-item><list-item><label>4.</label><p>Atomic structures: Some atomic structure
files from PDB include small molecules that can be extracted.</p></list-item><list-item><label>5.</label><p>Draw molecules: Scipion-chem
includes
a protocol calling JChemPaint,<sup><xref ref-type="bibr" rid="ref29">29</xref></sup> a Java
program that allows users to draw small molecules manually.</p></list-item></list></p>
      </sec>
    </sec>
    <sec id="sec2.2">
      <label>2.2</label>
      <title>Molecule Preparation</title>
      <p>Usually, both
the protein target and the small molecules used as hypothetical ligands
must be prepared to have some characteristics needed by the posterior
software in the pipeline. <xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref> contains a graphical example of target and ligand
preparations.</p>
      <fig id="fig2" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Example of Scipion-chem preparations for a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) and a ligand (ZINC480).
The target is cleaned from water molecules and preexisting ligands,
hydrogens are added, and only one of the three chains is generated.
Hydrogens are added to the ligand, and three different conformers
are generated.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0002" id="gr2" position="float"/>
      </fig>
      <sec id="sec2.2.1">
        <label>2.2.1</label>
        <title>Target Preparation</title>
        <p>Depending on
the method and procedure for resolving the protein target structure,
the resulting structure file might have slightly different characteristics
that we want to modify. The main modifications include adding missing
hydrogens, removing water molecules or other heteroatoms, and removing
irrelevant chains. Some of the included programs can also perform
more advanced preparations such as assigning new partial charges to
the atoms, performing energy minimization, or adding missing atoms
in the structure. Moreover, Scipion also includes programs specifically
oriented to modeling and modifying the atomic structures which can
also be used to accomplish this step.<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the
different options for target preparation are shown. These protocols
generate an output of type AtomStruct, containing the prepared atomic
structure.</p>
      </sec>
      <sec id="sec2.2.2">
        <label>2.2.2</label>
        <title>Ligand Preparation</title>
        <p>As for the target
structure, some modifications may need to be performed over the ligand
structures to make them compatible with the following steps. Similarly,
ligands can be treated to add hydrogens or assign charges, among other
options. Another preparation specific to ligands is the optional generation
of conformers, alternative energetically favorable conformations that
the molecule can acquire. Depending on the downstream pipeline programs
to use, the generation of conformers might or might not be necessary.
In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the different
options for the ligand preparation are shown. These protocols generate
an output of type SetOfSmallMolecules, containing the prepared ligand
structures.</p>
      </sec>
    </sec>
    <sec id="sec2.3">
      <label>2.3</label>
      <title>Molecule Filtering</title>
      <p>The steps described
in this section reduce the computations the posterior docking step
needs. It includes the definition of regions of interest (ROIs) on
the target structure, on one hand, to reduce the docking space to
explore and, on the other hand, to reduce the number of ligands to
dock by discarding poor, unpromising ligands based only on their own
characteristics.</p>
      <sec id="sec2.3.1">
        <label>2.3.1</label>
        <title>ROI Definition</title>
        <p>In Scipion-chem,
we define the structural ROIs as groups of atoms in the target that
are of concern for some reason. Depending on their origin, they can
be represented as points over target atoms, over the surface of the
target, or near it (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>). From a molecular docking perspective, structural ROIs reduce
the total space to explore from the complete target to a few promising
or interesting sites. However, they are ultimately groups of atoms
that can be of interest for any other topic inside the platform. There
are a number of intuitive protocols to define the structural ROIs
in Scipion-chem.<list id="list3" list-type="simple"><list-item><label>1.</label><p>Manually: The user might want to manually
define the structural ROIs directly from coordinates, specific residues,
existing ligands, interchain protein–protein interfaces, or
patterns of near residues in the target.</p></list-item><list-item><label>2.</label><p>Based on target characteristics: By
examining certain structural properties of the target and its corresponding
atoms and residues, the structural ROIs can be identified based on
predetermined thresholds. In Scipion-chem, we can, for example, define
the structural ROIs for sites with a high SASA (solvent-accessible
surface area), which can be visualized in the same protocol (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>).</p></list-item><list-item><label>3.</label><p>Predicted pockets: There are programs
specifically designed to predict those sites of the target that are
more likely to interact with a ligand. The exact procedure for determining
these regions differs depending on the program. Still, they are usually
concave regions or pockets where the ligands find themselves more
surrounded by the target atoms, and therefore, the interaction can
be energetically more favorable. In Scipion-chem, we have incorporated
FPocket, P2Rank, AutoSite, and SiteMap programs, and their results
are all parsed as the structural ROIs.</p></list-item><list-item><label>4.</label><p>Sequence ROIs: Parallel to the structural
ROIs, we defined sequence ROIs, which are defined as a group of consecutive
residues on a protein sequence. There are also several ways to define
sequence ROIs, such as manually, based on conservation, or existing
natural variants or mutations. These sequence ROIs can be mapped to
the structural ROIs based on the alignment of their sequence and the
sequence of a protein structure.</p></list-item></list></p>
        <fig id="fig3" position="float">
          <label>Figure 3</label>
          <caption>
            <p>Example of Scipion-chem per-residue SASA calculation over a target
(PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A).
Histogram with the number of residues vs the SASA values is shown
in the left panel. On the right panel, the structure of the complex
is visualized in ChimeraX, and each residue is colored by its SASA
value.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0003" id="gr10" position="float"/>
        </fig>
        <p>At this point of the pipeline, Scipion-chem offers
a consensus
tool to compare the structural ROIs obtained from different sources
and extract those shared among them. It works by clustering the structural
ROIs based on the residue overlap. A set of contact residues and atoms
ultimately defines each structural ROI. These clusters define whether
a pair of structural ROIs approximately defines the same region. Once
the clusters are built, only those containing a determined number
of ROIs are kept, which might be useful in different situations. For
example, we might want to keep the most promising protein pockets
by running the consensus over several sets of pockets obtained from
different tools. This way, only the most druggable pockets according
to both programs will remain. Another more trivial but still useful
example is to run the consensus protocol over a set of predicted pockets
and a structural ROI defined by hand on a residue of interest, for
example, a residue involved in the enzyme reaction of the protein.
Using this procedure, we will extract only the pocket(s) where the
residue of interest is found (<xref rid="fig4" ref-type="fig">Figure <xref rid="fig4" ref-type="fig">4</xref></xref>).</p>
        <fig id="fig4" position="float">
          <label>Figure 4</label>
          <caption>
            <p>Example of Scipion-chem
ROIs over a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the top left
panel, two manually generated sequence ROIs are represented in AliView.
On the left bottom panel, the two corresponding structural ROIs from
mapping those sequence ROIs to the structure are represented as points
over the surface in PyMol. Finally, on the right panel, the FPocket
predicted pockets are represented as alpha spheres in VMD for the
same structure.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0004" id="gr3" position="float"/>
        </fig>
      </sec>
      <sec id="sec2.3.2">
        <label>2.3.2</label>
        <title>Ligand-Based Filtering</title>
        <p>We can filter
the ligands before the docking step using an LB step. Scipion-chem
includes several filters based on only the characteristics of the
ligand. To do so, we use the RDKit package to include the following
filters based on<list id="list4" list-type="simple"><list-item><label>1.</label><p>Chemical features: We include two protocols
based on the molecule features. The first one uses the ADME (absorption,
distribution, metabolism, and excretion) filter to evaluate which
molecules have desirable pharmacokinetic properties. The second one
applies the PAINS (pan-assay interference compounds) filter to remove
the ligands containing molecular patterns that would lead to highly
unspecific interactions.</p></list-item><list-item><label>2.</label><p>Molecule shape: This protocol applies
a filter that takes out those molecules whose shape is not similar
enough to the shape of another molecule. For example, this filter
is used when we know the structure of a reference ligand, and we would
like to find more ligands with a similar shape, but that might have
different chemical compositions. We support shape comparison with
RDKit or Shape-it, using Tanimoto, Protrude, or rmsd distances.<sup><xref ref-type="bibr" rid="ref30">30</xref></sup></p></list-item><list-item><label>3.</label><p>Molecule fingerprints: Molecular fingerprints
are encoded representations of molecules. They typically represent
the absence or presence of specific molecular patterns in the molecule.
As with the previous filter, this one will remove those molecules
whose fingerprints are not similar enough to that of another molecule.
The user can choose among the Morgan or MACCS fingerprints<sup><xref ref-type="bibr" rid="ref31">31</xref></sup> and whether to use Tanimoto or Dice similarity
coefficients.</p></list-item><list-item><label>4.</label><p>Pharmacophore:
Pharmacophores are a
type of molecular representation.<sup><xref ref-type="bibr" rid="ref32">32</xref></sup> They
extract molecular features of one or more molecules and represent
them in 3D space, usually as spheres (see <xref rid="fig5" ref-type="fig">Figure <xref rid="fig5" ref-type="fig">5</xref></xref>). For another molecule to pass a pharmacophore
filter, it must be possible to align and match its own features to
those in the pharmacophore, with some degree of error. Scipion-chem
includes protocols to (1) generate pharmacophores out of a group of
small molecules, (2) define and manually modify RDKit pharmacophores,
and (3) run the filter over a set of small molecules. Pharmacophores
can be powerful tools for determining the most relevant features a
ligand must have to interact with a receptor site. The user might,
for example, want to build a pharmacophore out of the best results
of a structural-based docking to perform a pharmacophore-based docking
later. Scipion-chem currently supports pharmacophore generation and
filter protocols through RDKit.</p></list-item></list></p>
        <fig id="fig5" position="float">
          <label>Figure 5</label>
          <caption>
            <p>Example of Scipion-chem pharmacophore over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the left
panel, actual ligand OR3 is used to generate a pharmacophore. In an
intermediate step, the pharmacophore is slightly modified to make
the hydrogen acceptor feature (red sphere) larger and to remove the
aromatic feature (purple sphere). Then, on the right panel, molecule
ZINC1099, which passed this pharmacophore filter, is plotted aligned
to the pharmacophore.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0005" id="gr11" position="float"/>
        </fig>
      </sec>
    </sec>
    <sec id="sec2.4">
      <label>2.4</label>
      <title>Docking</title>
      <p>Molecular docking is usually
the main process in an SB VDS workflow. It calculates the pose of
the desired small molecules over the surface of the target, trying
to find the position with the most favorable energy, which, hopefully,
will coincide with the actual position of the ligand in the case this
interaction really occurs. Usually, every docking method relies on
a scoring function that ranks the positions provided by a search method
and the different tested ligands. The scoring function and the search
method are variable among the numerous methods the scientific community
has developed. In Scipion-chem, we have integrated six docking protocols:
AutoDock4, Vina, AutoDock-GPU (all from Autodock), LeDock (from LePhar),
DARC (from Rosetta), and Glide (from Schrödinger). The user
can choose among these methods whether to dock a set of small molecules
over the whole protein or a set of structural ROIs and choose the
different parameters that the software allows. The results can be
visualized grouped by ROIs or small molecule and either in ChimeraX
or in PyMol (see <xref rid="fig6" ref-type="fig">Figure <xref rid="fig6" ref-type="fig">6</xref></xref>).</p>
      <fig id="fig6" position="float">
        <label>Figure 6</label>
        <caption>
          <p>Example of Scipion-chem docking results in ChimeraX. Different
small molecules appear to be docked onto the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A protein. Each
of these molecules stores the different metadata that the docking
program provides, including the docking score or energy.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0006" id="gr4" position="float"/>
      </fig>
      <p>To ensure the comparability of docking results
obtained from each
of these methods, the molecules that have been docked onto the target
can be rescored using a consistent scoring function. In Scipion-chem,
we have integrated two protocols for docking rescoring: the first
uses the AutoDock4 scoring function and the second uses the ODDT package.
This package rescores the docking positions using a number of scoring
functions, and the user can choose a list of these that will be stored
in each molecule metadata. Therefore, once the docking poses are rescored
using the same function, we developed a consensus protocol to extract
the most relevant poses from a set of different docking results. To
do so, the docking positions are clustered based on their rmsd, and
only clusters containing a determined number of poses are considered
part of the consensus. Then, the molecule with the best chosen score
or energy is used to represent the cluster. This consensus does not
need the previous rescoring since the clustering process would proceed
similarly. Still, thanks to it, we can compare the different poses
in the cluster and choose the most favorable.</p>
      <p>Finally, another
tool is integrated to analyze the docking poses
in detail: PLIP (protein–ligand interaction profiler)<sup><xref ref-type="bibr" rid="ref33">33</xref></sup> (<xref rid="fig7" ref-type="fig">Figure <xref rid="fig7" ref-type="fig">7</xref></xref>). This tool plots in PyMol the docking pose and the different
noncovalent interactions that the target and the ligand would have
based on the distance and the atom types.</p>
      <fig id="fig7" position="float">
        <label>Figure 7</label>
        <caption>
          <p>Example of Scipion-chem
docking over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A) with its actual
ligand (OR3). The left side shows the target in cartoon representation
with one of the nine positions found for the molecule in PyMol using
Vina. On the right side, the same docked molecule is visualized in
PyMol using PLIP, plotting and listing all the noncovalent interactions
between the ligand and the target, only representing the interacting
residues.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0007" id="gr5" position="float"/>
      </fig>
    </sec>
    <sec id="sec2.5">
      <label>2.5</label>
      <title>Molecular Dynamics</title>
      <p>Molecular dynamics
(MD) is a broad and complex field of science that tries to simulate
at the atom level the interactions and dynamics of molecules, trying
to represent them in a closer way to reality, compared to usual docking
methods. Therefore, MD calculations are usually computationally expensive,
and it may not be worth using them for VDS studies compromising many
hypothetical ligands. However, under some circumstances, simulating
the interactions of a limited number of specific target–ligand
pairs might be interesting. For example, in our case, if our filters
during the VDS pipeline are strict enough, we could extract the best
few docked poses and then simulate these pairs. This way, we would
further check how strong their interactions are and whether the ligand
would actually stay in the receptor pocket enough time to act as a
drug. Moreover, MD might be useful for many other purposes involving
simulation of the receptor or the ligand separately to study their
behaviors freely. In Scipion-chem, we provide several packages for
preparing and running full MD simulations. These include Gromacs,<sup><xref ref-type="bibr" rid="ref34">34</xref></sup> AmberTools,<sup><xref ref-type="bibr" rid="ref35">35</xref></sup> OpenMM,<sup><xref ref-type="bibr" rid="ref36">36</xref></sup> and Desmond (from Schrödinger). For the
case of Desmond, in addition to the standard viewers, the Maestro
viewer is also available. These plugins contain protocols for<list id="list5" list-type="simple"><list-item><label>1.</label><p>System preparation: The protocol takes
the structure of either a receptor or a docked ligand to prepare a
solvated system (<xref rid="fig8" ref-type="fig">Figure <xref rid="fig8" ref-type="fig">8</xref></xref>). The different parameters accepted to tune these systems by each
software are provided in the protocol GUI, including the force fields
to use, size and form of the water box, whether to add ions and in
which quantities or concentrations, etc. The resulting solvated systems
can be visualized using PyMol from the Scipion project.</p></list-item><list-item><label>2.</label><p>Simulation: The user can define a list
of steps to be performed consecutively, choosing the parameters for
each of them and whether to store or not the trajectory out of each
step simulation. The steps included can perform energy minimization,
equilibration, or just production simulations. The list of steps is
modified in the protocol GUI using wizards to ensure the correctness
of the defined steps. The results of these protocols are the molecular
systems after the simulation and, if stored, the trajectories followed
by these system atoms through the simulation. Both can be visualized
using PyMol and VMD, and several trajectory analyses are included
to explore the simulation results further (see <xref rid="fig9" ref-type="fig">Figure <xref rid="fig9" ref-type="fig">9</xref></xref>).</p></list-item><list-item><label>3.</label><p>Trajectory modifications: A protocol
to perform trajectory or system modifications is included to allow
for standard operations such as removing water from a trajectory or
subsampling it.</p></list-item></list></p>
      <fig id="fig8" position="float">
        <label>Figure 8</label>
        <caption>
          <p>Example of the Scipion-chem solvated MD system (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). The left panel
shows the protein in a cubic water box and a number of ions (green
spheres) counter the charges of the protein using PyMol. A snapshot
of the same system is visualized on the right panel by using VMD,
showing only the closest water to the protein.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0008" id="gr12" position="float"/>
      </fig>
      <fig id="fig9" position="float">
        <label>Figure 9</label>
        <caption>
          <p>Example of Scipion-chem MD analysis that can be performed
on the
trajectory. On the top left and right panels, different analyses on
the mobility of the protein (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) throughout the trajectory are performed using Gromacs.
On the bottom panels, Schrödinger is used to analyze the trajectory
of <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link> together
with the OR3 ligand, and the images show representations of the target–ligand
contacts.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0009" id="gr13" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec id="sec3">
    <label>3</label>
    <title>Show Case</title>
    <p>In this section, we executed
the main VDS workflow in Scipion-chem,
including the consensus docking protocol, in a bigger data set. This
example, with code FABP4, was extracted from the DUD-E database<sup><xref ref-type="bibr" rid="ref37">37</xref></sup> and contains 47 active molecules, each of them
with around 50 decoys, making a total of 2749 decoy molecules. Both
the active, decoy libraries and the receptor structure are imported
to the Scipion GUI from the files provided by DUD-E. Then, the main
VDS workflow is executed, including the use of an LB filter, a receptor
binding site prediction, and 3 different docking programs (AutoDock-GPU,
AutoDock Vina, and LeDock). Finally, their results are combined by
using ODDT rescoring and our consensus docking protocol. Thanks to
the Scipion workflow engine, all of these VDS screening steps can
be scheduled and run in parallel as a complete workflow, where the
user can specify how to manage the resources devoted to each of the
steps and software. Moreover, for each of these steps or protocols,
Scipion GUI forms are accessible to easily modify and explore the
different parameters involved in their execution (see <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p>
    <fig id="fig10" position="float">
      <label>Figure 10</label>
      <caption>
        <p>Scipion-chem RDKit ligand
preparation form. The figure shows the
Scipion forms corresponding to the RDKit ligand preparation described.
The form contains an upper section where technical (run) parameters
can be set (protocol name, number of threads, queue system, etc.)
and a second section (input) where the user can define the input set
of molecules and the different parameters RDKit must use for the preparation.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0010" id="gr6" position="float"/>
    </fig>
    <p>In the following lines, we will go through the
steps involved in
this VDS workflow. A more detailed description of these steps, together
with the corresponding forms, the actual workflows, and the data generated,
can be accessed in our GitHub docs page: <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>.<list id="list6" list-type="simple"><list-item><label>1.</label><p>Import: In this example, we imported
the structures directly from the pdb files (for the receptor, corresponding
to PDB <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="2NNQ">2NNQ</ext-link>)<sup><xref ref-type="bibr" rid="ref38">38</xref></sup> and sdf files (for the ligands) provided by
DUD-E. The forms provided by Scipion allow the user to choose the
origin of the structure and, in the case of the small molecules, the
molecule handler (RDKit or OpenBabel) to use and if a 3D reconstruction
is needed.</p></list-item><list-item><label>2.</label><p>Preparation:
Once the structures are
imported into the Scipion workflow, separate preparation steps are
performed for the receptor and ligand libraries. In this case, we
used the protein preparation protocol in the OpenMM plugin, which
uses PDBFixer for the receptor protein, and RDKit for the preparation
of the ligands. In each of the forms, the user is asked about the
preparation parameters desired, such as removing undesired atoms (water
and other nonprotein entities) or adding missing atoms in the receptor,
which force fields to use, and whether to generate conformers (5 for
our example) in the preparation of the ligands (shown in <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p></list-item><list-item><label>3.</label><p>ROI definition: In this particular
example, P2Rank is used to predict the most promising pockets in our
receptor, which will become those ROIs where we will direct the docking
processes. Then, this P2Rank protocol is followed by a filter protocol
to extract only the 2 best pockets predicted, in order to speed up
the downstream workflow.</p></list-item><list-item><label>4.</label><p>LB filtering: On the ligand side, a
filtering step is used by passing the ADME LB filter protocol to our
active and decoy molecules. After this filter, we continue the processing
with 46 active and 2611 decoy molecules, discarding 1 and 138 molecules,
respectively.</p></list-item><list-item><label>5.</label><p>Docking:
This step involves the execution
of 3 independent docking programs (AutoDock-GPU, AutoDock Vina, and
LeDock) over the 2 defined ROIs and both the active and decoy prepared
libraries. In practice, this is the slowest step of the workflow and
therefore becomes the usual bottleneck in its execution, so it is
important to choose appropriate resources for them. In our case, the
forms allow us to define the number of threads and GPUs (only for
AutoDock-GPU) to allocate for each of the executions. Moreover, as
the previous cases, the forms also include the parameters that the
user can tweak to define the docking processes, such as the number
of docking poses to generate for each of the molecule conformers.
In our case, we chose five, resulting on 96226, 109139, and 76830
docking poses for each of the cited docking programs.</p></list-item><list-item><label>6.</label><p>Rescoring: In order to combine and
compare the docking poses generated by each of the software, we need
to first evaluate those poses using the same scoring function. In
this case, we use the ODDT score protocol to rescore all the docking
poses with its Vina score function.</p></list-item><list-item><label>7.</label><p>Filter and consensus: Finally, the
rescored poses can be combined and ranked, and the consensus protocol
can be applied to cluster and extract the most promising docking positions.
In our example, different ranking filters and consensus parameters
were used to evaluate the results. Nine filtered subsets of our docked
molecules containing the 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, and 100%
of the highest-scored poses were generated. Then, two consensus protocols
were executed for each of these subsets with a difference in a vital
parameter. First, both consensus runs will produce the same pose clusters;
however, one of the consensus executions will only consider sufficient
those clusters containing at least one pose from each of the three
docking software (N3), while the other, more permissive one, will
consider sufficient those that contain at least poses from 2 docking
software (N2). This way, we intend to generate sets enriched in active
molecules and smaller than the original set of 2796 molecules. The
results of this experiment comparing the filtering vs N2 consensus
are shown in <xref rid="fig11" ref-type="fig">Figure <xref rid="fig11" ref-type="fig">11</xref></xref>, where we can observe the enrichment of actives vs decoys of the
output subsets and the total number of molecules kept for each of
them. Subsets labeled % <italic>x</italic> show the enrichment for
the sets generated only passing the score filter, while those labeled
% <italic>x</italic>_N2 represents the corresponding set generated
after passing the score filter plus the consensus protocol. A similar
image with the results for the N3 consensus can be found in our GitHub
documentation page.</p></list-item></list></p>
    <fig id="fig11" position="float">
      <label>Figure 11</label>
      <caption>
        <p>Scipion-chem consensus protocol enrichment. The graph shows the
percentage of actives (blue bars) and the total number of molecules
(red dots) for each of the subsets generated in the workflow. The
subset “Original” represents the original set imported
from DUD-E; “% 100” represents the subset of molecules
remaining after the described LB filtering (which slightly improves
the enrichment), and then each of the consensus subsets generated
by applying a best ODDT score ranking filter for the top % <italic>x</italic> and consensus docking with parameter N2.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0011" id="gr14" position="float"/>
    </fig>
    <p>As we can infer from the graphs, both strategies
lead to a considerable
enrichment of the original data set as the percentage of actives (the
blue bars) is generally enhanced, while the number of total molecules
in the subset (the red line) is reduced. For our FABP4 example, from
the original 2796 (47 actives to 2749 decoys) molecules (1.68% of
actives), we obtained considerable enrichment in both the filtered
and filter plus consensus subsets. For instance, we obtained a subset
of 64 molecules where 11 actives were kept (17.19%) for the 0.1% filtered
subset, or once this same subset is passed through the N2 consensus,
we further enriched it to keep 7 actives out of just 24 molecules
(29.17%).</p>
    <p>Therefore, we were able to reduce the total number
of molecules
in the original set while significantly enhancing the proportion of
actives. However, the user must be careful not to reduce too much
the number of docking poses with the score filter since we can observe
that subsets below 0.05% lose all or most of the active molecules.</p>
    <p>Additionally, in <xref rid="fig12" ref-type="fig">Figure <xref rid="fig12" ref-type="fig">12</xref></xref>, the experimental values for the interaction of the active
molecules and the receptor are represented and plotted based on their
experimental <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) values and their best pose ODDTScore. Those points with a
yellow star correspond to the active molecules present in the best
resulting consensus data set (% 0.1_N2). As we can observe, the ODDTScore
seems to correlate relatively well, and most of the highest ODDTScores
represent the best experimental affinities, which are captured in
the consensus.</p>
    <fig id="fig12" position="float">
      <label>Figure 12</label>
      <caption>
        <p>Experimental interaction values (nM) of actives in <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) against the
corresponding
values in the ODDTScore Vina. The yellow stars specify actives found
in the best consensus set.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0012" id="gr7" position="float"/>
    </fig>
    <p>In summary, a complete VDS workflow was executed
from the Scipion
GUI on the FABP4 data set, which allowed to run all the different
software involved from the same program, while maintaining the flexibility
of those program executions since the user can easily modify both
the functional and resource management parameters. In addition, the
Scipion API allowed for the automation and parallelization of all
of the tasks involved in the workflow. Finally, the use of new Scipion-chem
own tools, such as the consensus docking protocol, provides the user
with further resources and, together with the viewers and filter protocols,
can be helpful for the VDS process. In future works, we will keep
developing and integrating new tools. Specifically, we focus on improving
our consensus protocols in order to generate robust and reliable results
from the combination of several outputs.</p>
  </sec>
  <sec id="sec4">
    <label>4</label>
    <title>Implementation</title>
    <p>Scipion-chem is a Python-based
workflow package designed to work
as a plugin for Scipion, which is therefore necessary for its installation.
Then, Scipion-chem works as the core plugin for the rest of the chem
plugins. Today, 11 different plugins plus the core are available in
the Scipion-chem website (see <xref rid="fig13" ref-type="fig">Figure <xref rid="fig13" ref-type="fig">13</xref></xref>), with around 80 different protocols to be executed.
Still, we expect to continue to incorporate more plugins and protocols
in the future.</p>
    <fig id="fig13" position="float">
      <label>Figure 13</label>
      <caption>
        <p>Scipion-chem plugin schema. The red circle represents
the Scipion
workflow engine, which is made of three parts. The Scipion-chem core
plugin is a blue circle containing the main functionalities and tools
needed by the rest of the plugins, in green, which depend on it.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0013" id="gr8" position="float"/>
    </fig>
    <p>These plugins integrate the previously described
programs into
the workflow, which are currently mainly related to VDS and MD. Inside
Scipion, the user can visualize the workflows as a set of connected
boxes, each representing a protocol like the one we previously described.
These protocols can be found in various lists on the left-hand side
of the screen or by using a search operation. In <xref rid="fig14" ref-type="fig">Figure <xref rid="fig14" ref-type="fig">14</xref></xref>, an example of a VDS workflow
is shown following the schema in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. Inside each of these protocol boxes, the
different parameters governing the execution of the program can be
modified in the protocol form.</p>
    <fig id="fig14" position="float">
      <label>Figure 14</label>
      <caption>
        <p>Scipion-chem VDS workflow example following
the color convention
in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. The results
of this workflow are small molecules that have passed the ligand filters
and docked to the predicted pockets (structural ROIs) from the receptor.
The most promising pockets and docked poses are extracted using the
consensus protocols described above.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0014" id="gr9" position="float"/>
    </fig>
  </sec>
  <sec id="sec5">
    <label>5</label>
    <title>Conclusions</title>
    <p>The number of tools related
to VDS keeps growing each year, with
new or updated scripts and algorithms that try to solve specific parts
of the drug discovery process accurately. While this increasing number
of software offers high flexibility and possibilities, it also poses
a high difficulty barrier to users who must learn how to use each
of these programs, usually in combination. Hereby, we have presented
Scipion-chem, an open and interactive platform for VDS that eases
access to this software and provides interoperability among them.
Scipion-chem is built over the workflow engine Scipion, which provides
complete traceability and automation of the workflows and software
installation. Advanced users may work with a python API that enhances
the automatic and programmatic access to Scipion-chem tools. Finally,
the user can use different consensus tools that compare the results
from different software to extract the most relevant pieces of common
information.</p>
    <p>Even though Scipion-chem was born focused on VDS,
its name suggests
that it can be projected to a range of chemoinformatic fields. From
the Scipion team, we are already involved in expanding Scipion-chem
to MD (with already useable tools) and quantum mechanics, and we hope
to release new plugins related to these soon. We will keep working
on maintaining and offering new VDS-related tools such as ligand retrosynthetic
analysis or fragment-based screening.</p>
  </sec>
</body>
<back>
  <notes notes-type="COI-statement" id="notes1">
    <p>The authors
declare no competing financial interest.</p>
  </notes>
  <notes notes-type="" id="notes2">
    <title>Notes</title>
    <p>All discussed
Scipion-chem plugins can be found
openly available in <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri> as GitHub repositories. We encourage users to use them, check the
code, look for bugs, and actively provide us any feedback or suggestions
via GitHub or mail. Also, all the data discussed so far in this paper
are documented and can be found in the corresponding GitHub page <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>, which contains the importable workflows, the input data from DUD-E,
and all the results generated. Finally, a list of the software installed
by the referenced Scipion-chem plugins is detailed in this same documentation,
together with their versions and sources.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>This research work was funded by the European Commission—NextGenerationEU
(Regulation 2020/2094), through CSIĆs Global Health Platform
(PTI Salud Global) and an FPU (Formación de Profesorado Universitario)
grant from the Spanish Ministry of Education. In addition, we would
like to express our gratitude to Pedro Febrer, Aida Pinacho and Carlos
Roca for their contributions to the molecular dynamics section of
this project that provided a starting point for our work.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Leelananda</surname><given-names>S. P.</given-names></name>; <name><surname>Lindert</surname><given-names>S.</given-names></name><article-title>Computational Methods in Drug Discovery</article-title>. <source>Beilstein J. Org. Chem.</source><year>2016</year>, <volume>12</volume>, <fpage>2694</fpage>–<lpage>2718</lpage>. <pub-id pub-id-type="doi">10.3762/bjoc.12.267</pub-id>.<pub-id pub-id-type="pmid">28144341</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Lin</surname><given-names>X.</given-names></name>; <name><surname>Li</surname><given-names>X.</given-names></name>; <name><surname>Lin</surname><given-names>X.</given-names></name><article-title>A Review on
Applications of Computational Methods in
Drug Screening and Design</article-title>. <source>Molecules</source><year>2020</year>, <volume>25</volume>, <fpage>1375</fpage><pub-id pub-id-type="doi">10.3390/molecules25061375</pub-id>.<pub-id pub-id-type="pmid">32197324</pub-id></mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="journal" id="cit3"><name><surname>McInnes</surname><given-names>C.</given-names></name><article-title>Virtual Screening
Strategies in Drug Discovery</article-title>. <source>Curr. Opin. Chem.
Biol.</source><year>2007</year>, <volume>11</volume>, <fpage>494</fpage>–<lpage>502</lpage>. <pub-id pub-id-type="doi">10.1016/j.cbpa.2007.08.033</pub-id>.<pub-id pub-id-type="pmid">17936059</pub-id></mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Varela-Rial</surname><given-names>A.</given-names></name>; <name><surname>Majewski</surname><given-names>M.</given-names></name>; <name><surname>De Fabritiis</surname><given-names>G.</given-names></name><article-title>Structure
Based Virtual Screening:
Fast and Slow</article-title>. <source>Wiley Interdiscip. Rev.: Comput.
Mol. Sci.</source><year>2021</year>, <volume>12</volume>, <elocation-id>e1544</elocation-id><pub-id pub-id-type="doi">10.1002/wcms.1544</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="journal" id="cit8"><name><surname>Park</surname><given-names>H.</given-names></name>; <name><surname>Jeon</surname><given-names>J.</given-names></name>; <name><surname>Kim</surname><given-names>K.</given-names></name>; <name><surname>Choi</surname><given-names>S.</given-names></name>; <name><surname>Hong</surname><given-names>S.</given-names></name><article-title>Structure-Based
Virtual Screening and De Novo Design of PIM1 Inhibitors With Anticancer
Activity From Natural Products</article-title>. <source>Pharmaceuticals</source><year>2021</year>, <volume>14</volume>, <fpage>275</fpage><pub-id pub-id-type="doi">10.3390/ph14030275</pub-id>.<pub-id pub-id-type="pmid">33803840</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="journal" id="cit9"><name><surname>Klenner</surname><given-names>A.</given-names></name>; <name><surname>Hartenfeller</surname><given-names>M.</given-names></name>; <name><surname>Schneider</surname><given-names>P.</given-names></name>; <name><surname>Schneider</surname><given-names>G.</given-names></name><article-title>“Fuzziness”
in Pharmacophore-Based Virtual Screening and De Novo Design</article-title>. <source>Drug Discovery Today: Technol.</source><year>2010</year>, <volume>7</volume>, <fpage>e237</fpage>–<lpage>e244</lpage>. <pub-id pub-id-type="doi">10.1016/j.ddtec.2010.10.004</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="journal" id="cit10"><name><surname>Lill</surname><given-names>M. A.</given-names></name><article-title>Multi-Dimensional
QSAR in Drug Discovery</article-title>. <source>Drug Discovery Today</source><year>2007</year>, <volume>12</volume>, <fpage>1013</fpage>–<lpage>1017</lpage>. <pub-id pub-id-type="doi">10.1016/j.drudis.2007.08.004</pub-id>.<pub-id pub-id-type="pmid">18061879</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="journal" id="cit11"><name><surname>Neves</surname><given-names>B. J.</given-names></name>; <name><surname>Braga</surname><given-names>R. C.</given-names></name>; <name><surname>Melo-Filho</surname><given-names>C. C.</given-names></name>; <name><surname>Moreira-Filho</surname><given-names>J. T.</given-names></name>; <name><surname>Muratov</surname><given-names>E. N.</given-names></name>; <name><surname>Andrade</surname><given-names>C. H.</given-names></name><article-title>QSAR-Based Virtual
Screening: Advances
and Applications in Drug Discovery</article-title>. <source>Front. Pharmacol.</source><year>2018</year>, <volume>9</volume>, <fpage>1275</fpage><pub-id pub-id-type="doi">10.3389/fphar.2018.01275</pub-id>.<pub-id pub-id-type="pmid">30524275</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="journal" id="cit12"><name><surname>Repasky</surname><given-names>M. P.</given-names></name>; <name><surname>Shelley</surname><given-names>M.</given-names></name>; <name><surname>Friesner</surname><given-names>R. A.</given-names></name><article-title>Flexible Ligand
Docking With Glide</article-title>. <source>Curr. Protoc. Bioinf.</source><year>2007</year>, <volume>18</volume>, <fpage>8</fpage>–<lpage>12</lpage>. <pub-id pub-id-type="doi">10.1002/0471250953.bi0812s18</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="journal" id="cit13"><name><surname>Forli</surname><given-names>S.</given-names></name>; <name><surname>Huey</surname><given-names>R.</given-names></name>; <name><surname>Pique</surname><given-names>M. E.</given-names></name>; <name><surname>Sanner</surname><given-names>M. F.</given-names></name>; <name><surname>Goodsell</surname><given-names>D. S.</given-names></name>; <name><surname>Olson</surname><given-names>A. J.</given-names></name><article-title>Computational Protein-Ligand
Docking and Virtual Drug
Screening With the AutoDock Suite</article-title>. <source>Nat. Protoc.</source><year>2016</year>, <volume>11</volume>, <fpage>905</fpage>–<lpage>919</lpage>. <pub-id pub-id-type="doi">10.1038/nprot.2016.051</pub-id>.<pub-id pub-id-type="pmid">27077332</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="conf-proc" id="cit14"><person-group person-group-type="allauthors"><name><surname>Liu</surname><given-names>N.</given-names></name>; <name><surname>Xu</surname><given-names>Z.</given-names></name></person-group><article-title>Using LeDock as
a Docking Tool
for Computational Drug Design</article-title>. <source>IOP Conference
Series: Earth and Environmental Science</source>, <year>2019</year>; p <fpage>012143</fpage>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="journal" id="cit15"><name><surname>Le
Guilloux</surname><given-names>V.</given-names></name>; <name><surname>Schmidtke</surname><given-names>P.</given-names></name>; <name><surname>Tuffery</surname><given-names>P.</given-names></name><article-title>Fpocket: An Open Source
Platform for Ligand Pocket Detection</article-title>. <source>BMC Bioinf.</source><year>2009</year>, <volume>10</volume>, <fpage>168</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="journal" id="cit16"><name><surname>Krivák</surname><given-names>R.</given-names></name>; <name><surname>Hoksza</surname><given-names>D.</given-names></name><article-title>P2Rank: Machine Learning Based Tool
for Rapid and Accurate
Prediction of Ligand Binding Sites From Protein Structure</article-title>. <source>J. Cheminf.</source><year>2018</year>, <volume>10</volume>, <fpage>39</fpage><pub-id pub-id-type="doi">10.1186/s13321-018-0285-8</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>de
la Rosa-Trevín</surname><given-names>J.</given-names></name>; <name><surname>Quintana</surname><given-names>A.</given-names></name>; <name><surname>del Cano</surname><given-names>L.</given-names></name>; <name><surname>Zaldívar</surname><given-names>A.</given-names></name>; <name><surname>Foche</surname><given-names>I.</given-names></name>; <name><surname>Gutiérrez</surname><given-names>J.</given-names></name>; <name><surname>Gómez-Blanco</surname><given-names>J.</given-names></name>; <name><surname>Burguet-Castell</surname><given-names>J.</given-names></name>; <name><surname>Cuenca-Alba</surname><given-names>J.</given-names></name>; <name><surname>Abrishami</surname><given-names>V.</given-names></name>; et al. <article-title>Scipion: A Software Framework Toward Integration, Reproducibility
and Validation in 3D Electron Microscopy</article-title>. <source>J.
Struct. Biol.</source><year>2016</year>, <volume>195</volume>, <fpage>93</fpage>–<lpage>99</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2016.04.010</pub-id>.<pub-id pub-id-type="pmid">27108186</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>de la
Morena</surname><given-names>J. J.</given-names></name>; <name><surname>Sharov</surname><given-names>G.</given-names></name>; <name><surname>de la Rosa-Trevín</surname><given-names>J. M.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Mena</surname><given-names>A. G.</given-names></name>; <name><surname>de Francisco</surname><given-names>B. R.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name><article-title>Scipion3: A Workflow Engine for Cryo-Electron
Microscopy Image Processing and Structural Biology</article-title>. <source>Biol. Imaging</source><year>2023</year>, <volume>3</volume>, <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1017/S2633903X23000132</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Krieger</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name><article-title>Scipion-EM-ProDy:
A Graphical Interface
for the ProDy Python Package within the Scipion Workflow Engine Enabling
Integration of Databases, Simulations and Cryo-Electron Microscopy
Image Processing</article-title>. <source>Int. J. Mol. Sci.</source><year>2023</year>, <volume>24</volume>, <fpage>14245</fpage><pub-id pub-id-type="doi">10.3390/ijms241814245</pub-id>.<pub-id pub-id-type="pmid">37762547</pub-id></mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>O’Boyle</surname><given-names>N. M.</given-names></name>; <name><surname>Banck</surname><given-names>M.</given-names></name>; <name><surname>James</surname><given-names>C. A.</given-names></name>; <name><surname>Morley</surname><given-names>C.</given-names></name>; <name><surname>Vandermeersch</surname><given-names>T.</given-names></name>; <name><surname>Hutchison</surname><given-names>G. R.</given-names></name><article-title>Open Babel: An Open Chemical Toolbox</article-title>. <source>J. Cheminf.</source><year>2011</year>, <volume>3</volume>, <fpage>33</fpage><pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>Landrum</surname><given-names>G.</given-names></name><article-title>RDKit: A Software
Suite for Cheminformatics, Computational Chemistry, and Predictive
Modeling</article-title>. <source>Greg Landrum</source><year>2013</year>, <volume>8</volume>, <fpage>31</fpage><pub-id pub-id-type="doi">10.5281/zenodo.7541264</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Cock</surname><given-names>P. J. A.</given-names></name>; <name><surname>Antao</surname><given-names>T.</given-names></name>; <name><surname>Chang</surname><given-names>J. T.</given-names></name>; <name><surname>Chapman</surname><given-names>B. A.</given-names></name>; <name><surname>Cox</surname><given-names>C. J.</given-names></name>; <name><surname>Dalke</surname><given-names>A.</given-names></name>; <name><surname>Friedberg</surname><given-names>I.</given-names></name>; <name><surname>Hamelryck</surname><given-names>T.</given-names></name>; <name><surname>Kauff</surname><given-names>F.</given-names></name>; <name><surname>Wilczynski</surname><given-names>B.</given-names></name>; et al. <article-title>Biopython: Freely Available
Python Tools for Computational Molecular Biology and Bioinformatics</article-title>. <source>Bioinformatics</source><year>2009</year>, <volume>25</volume>, <fpage>1422</fpage>–<lpage>1423</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Rew</surname><given-names>Y.</given-names></name>; <name><surname>Sun</surname><given-names>D.</given-names></name>; <name><surname>Gonzalez-Lopez De Turiso</surname><given-names>F.</given-names></name>; <name><surname>Bartberger</surname><given-names>M. D.</given-names></name>; <name><surname>Beck</surname><given-names>H. P.</given-names></name>; <name><surname>Canon</surname><given-names>J.</given-names></name>; <name><surname>Chen</surname><given-names>A.</given-names></name>; <name><surname>Chow</surname><given-names>D.</given-names></name>; <name><surname>Deignan</surname><given-names>J.</given-names></name>; <name><surname>Fox</surname><given-names>B. M.</given-names></name>; et al. <article-title>Structure-Based Design
of Novel Inhibitors of the MDM2-p53 Interaction</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>4936</fpage>–<lpage>4954</lpage>. <pub-id pub-id-type="doi">10.1021/jm300354j</pub-id>.<pub-id pub-id-type="pmid">22524527</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="journal" id="cit21"><name><surname>Berman</surname><given-names>H. M.</given-names></name><article-title>The Protein
Data Bank</article-title>. <source>Nucleic Acids Res.</source><year>2000</year>, <volume>28</volume>, <fpage>235</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>.<pub-id pub-id-type="pmid">10592235</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <mixed-citation publication-type="journal" id="cit22"><name><surname>Jumper</surname><given-names>J.</given-names></name>; <name><surname>Evans</surname><given-names>R.</given-names></name>; <name><surname>Pritzel</surname><given-names>A.</given-names></name>; <name><surname>Green</surname><given-names>T.</given-names></name>; <name><surname>Figurnov</surname><given-names>M.</given-names></name>; <name><surname>Ronneberger</surname><given-names>O.</given-names></name>; <name><surname>Tunyasuvunakool</surname><given-names>K.</given-names></name>; <name><surname>Bates</surname><given-names>R.</given-names></name>; <name><surname>Žídek</surname><given-names>A.</given-names></name>; <name><surname>Potapenko</surname><given-names>A.</given-names></name>; et al. <article-title>Highly Accurate Protein Structure Prediction
With AlphaFold</article-title>. <source>Nature</source><year>2021</year>, <volume>596</volume>, <fpage>583</fpage>–<lpage>589</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>.<pub-id pub-id-type="pmid">34265844</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="journal" id="cit23"><name><surname>Martínez</surname><given-names>M.</given-names></name>; <name><surname>Jiménez-Moreno</surname><given-names>A.</given-names></name>; <name><surname>Maluenda</surname><given-names>D.</given-names></name>; <name><surname>Ramírez-Aportela</surname><given-names>E.</given-names></name>; <name><surname>Melero</surname><given-names>R.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>del Caño</surname><given-names>L.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>Sánchez-García</surname><given-names>R.</given-names></name>; et al. <article-title>Integration of Cryo-EM Model Building Software in Scipion</article-title>. <source>J. Chem. Inf. Model.</source><year>2020</year>, <volume>60</volume>, <fpage>2533</fpage>–<lpage>2540</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jcim.9b01032</pub-id>.<pub-id pub-id-type="pmid">31994878</pub-id></mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="journal" id="cit24"><name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>ZINC—A Free Database of Commercially Available
Compounds for Virtual Screening</article-title>. <source>J. Chem. Inf.
Model.</source><year>2005</year>, <volume>45</volume>, <fpage>177</fpage>–<lpage>182</lpage>. <pub-id pub-id-type="doi">10.1021/ci049714+</pub-id>.<pub-id pub-id-type="pmid">15667143</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="journal" id="cit25"><name><surname>Meiners</surname><given-names>T.</given-names></name>; <name><surname>Stechmann</surname><given-names>B.</given-names></name>; <name><surname>Frank</surname><given-names>R.</given-names></name><article-title>EU-OPENSCREEN—Chemical Tools
for the Study of Plant Biology and Resistance Mechanisms</article-title>. <source>J. Chem. Biol.</source><year>2014</year>, <volume>7</volume>, <fpage>113</fpage>–<lpage>118</lpage>. <pub-id pub-id-type="doi">10.1007/s12154-014-0118-9</pub-id>.<pub-id pub-id-type="pmid">25320643</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <mixed-citation publication-type="journal" id="cit26"><name><surname>Kim</surname><given-names>S.</given-names></name>; <name><surname>Thiessen</surname><given-names>P. A.</given-names></name>; <name><surname>Bolton</surname><given-names>E. E.</given-names></name>; <name><surname>Chen</surname><given-names>J.</given-names></name>; <name><surname>Fu</surname><given-names>G.</given-names></name>; <name><surname>Gindulyte</surname><given-names>A.</given-names></name>; <name><surname>Han</surname><given-names>L.</given-names></name>; <name><surname>He</surname><given-names>J.</given-names></name>; <name><surname>He</surname><given-names>S.</given-names></name>; <name><surname>Shoemaker</surname><given-names>B. A.</given-names></name>; <name><surname>Wang</surname><given-names>J.</given-names></name>; <name><surname>Yu</surname><given-names>B.</given-names></name>; <name><surname>Zhang</surname><given-names>J.</given-names></name>; <name><surname>Bryant</surname><given-names>S. H.</given-names></name><article-title>PubChem
Substance and Compound Databases</article-title>. <source>Nucleic Acids
Res.</source><year>2016</year>, <volume>44</volume>, <fpage>D1202</fpage>–<lpage>D1213</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv951</pub-id>.<pub-id pub-id-type="pmid">26400175</pub-id></mixed-citation>
    </ref>
    <ref id="ref27">
      <mixed-citation publication-type="journal" id="cit27"><name><surname>Gaulton</surname><given-names>A.</given-names></name>; <name><surname>Hersey</surname><given-names>A.</given-names></name>; <name><surname>Nowotka</surname><given-names>M.</given-names></name>; <name><surname>Bento</surname><given-names>A. P.</given-names></name>; <name><surname>Chambers</surname><given-names>J.</given-names></name>; <name><surname>Mendez</surname><given-names>D.</given-names></name>; <name><surname>Mutowo</surname><given-names>P.</given-names></name>; <name><surname>Atkinson</surname><given-names>F.</given-names></name>; <name><surname>Bellis</surname><given-names>L. J.</given-names></name>; <name><surname>Cibrián-Uhalte</surname><given-names>E.</given-names></name>; et al. <article-title>The ChEMBL Database
in 2017</article-title>. <source>Nucleic Acids Res.</source><year>2016</year>, <volume>45</volume>, <fpage>D945</fpage>–<lpage>D954</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkw1074</pub-id>.<pub-id pub-id-type="pmid">27899562</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <mixed-citation publication-type="journal" id="cit28"><name><surname>Liu</surname><given-names>T.</given-names></name>; <name><surname>Lin</surname><given-names>Y.</given-names></name>; <name><surname>Wen</surname><given-names>X.</given-names></name>; <name><surname>Jorissen</surname><given-names>R. N.</given-names></name>; <name><surname>Gilson</surname><given-names>M. K.</given-names></name><article-title>BindingDB: A Web-Accessible
Database of Experimentally Determined Protein-Ligand Binding Affinities</article-title>. <source>Nucleic Acids Res.</source><year>2007</year>, <volume>35</volume>, <fpage>D198</fpage>–<lpage>D201</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkl999</pub-id>.<pub-id pub-id-type="pmid">17145705</pub-id></mixed-citation>
    </ref>
    <ref id="ref29">
      <mixed-citation publication-type="journal" id="cit29"><name><surname>Krause</surname><given-names>S.</given-names></name>; <name><surname>Willighagen</surname><given-names>E.</given-names></name>; <name><surname>Steinbeck</surname><given-names>C.</given-names></name><article-title>JChemPaint - Using the Collaborative
Forces of the Internet to Develop a Free Editor for 2D Chemical Structures</article-title>. <source>Molecules</source><year>2000</year>, <volume>5</volume>, <fpage>93</fpage>–<lpage>98</lpage>. <pub-id pub-id-type="doi">10.3390/50100093</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref30">
      <mixed-citation publication-type="journal" id="cit30"><name><surname>Taminau</surname><given-names>J.</given-names></name>; <name><surname>Thijs</surname><given-names>G.</given-names></name>; <name><surname>De Winter</surname><given-names>H.</given-names></name><article-title>Pharao: Pharmacophore
Alignment and
Optimization</article-title>. <source>J. Mol. Graphics Modell.</source><year>2008</year>, <volume>27</volume>, <fpage>161</fpage>–<lpage>169</lpage>. <pub-id pub-id-type="doi">10.1016/j.jmgm.2008.04.003</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref31">
      <mixed-citation publication-type="journal" id="cit31"><name><surname>He</surname><given-names>K.</given-names></name><article-title>Pharmacological
Affinity Fingerprints Derived From Bioactivity Data for the Identification
of Designer Drugs</article-title>. <source>J. Cheminf.</source><year>2022</year>, <volume>14</volume>, <fpage>35</fpage><pub-id pub-id-type="doi">10.1186/s13321-022-00607-6</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref32">
      <mixed-citation publication-type="book" id="cit32"><person-group person-group-type="allauthors"><name><surname>Horvath</surname><given-names>D.</given-names></name></person-group><source>Chemoinformatics and
Computational Chemical Biology</source>; <person-group person-group-type="editor"><name><surname>Bajorath</surname><given-names>J.</given-names></name></person-group>, Ed.; <publisher-name>Humana
Press</publisher-name>: <publisher-loc>Totowa, NJ</publisher-loc>, <year>2011</year>; pp <fpage>261</fpage>–<lpage>298</lpage>.</mixed-citation>
    </ref>
    <ref id="ref33">
      <mixed-citation publication-type="journal" id="cit33"><name><surname>Salentin</surname><given-names>S.</given-names></name>; <name><surname>Schreiber</surname><given-names>S.</given-names></name>; <name><surname>Haupt</surname><given-names>V. J.</given-names></name>; <name><surname>Adasme</surname><given-names>M. F.</given-names></name>; <name><surname>Schroeder</surname><given-names>M.</given-names></name><article-title>PLIP: Fully
Automated Protein–Ligand Interaction Profiler</article-title>. <source>Nucleic Acids Res.</source><year>2015</year>, <volume>43</volume>, <fpage>W443</fpage>–<lpage>W447</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv315</pub-id>.<pub-id pub-id-type="pmid">25873628</pub-id></mixed-citation>
    </ref>
    <ref id="ref34">
      <mixed-citation publication-type="journal" id="cit34"><name><surname>Van
Der Spoel</surname><given-names>D.</given-names></name>; <name><surname>Lindahl</surname><given-names>E.</given-names></name>; <name><surname>Hess</surname><given-names>B.</given-names></name>; <name><surname>Groenhof</surname><given-names>G.</given-names></name>; <name><surname>Mark</surname><given-names>A. E.</given-names></name>; <name><surname>Berendsen</surname><given-names>H. J.</given-names></name><article-title>GROMACS: Fast, Flexible, and Free</article-title>. <source>J. Comput. Chem.</source><year>2005</year>, <volume>26</volume>, <fpage>1701</fpage>–<lpage>1718</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.20291</pub-id>.<pub-id pub-id-type="pmid">16211538</pub-id></mixed-citation>
    </ref>
    <ref id="ref35">
      <mixed-citation publication-type="journal" id="cit35"><name><surname>Salomon-Ferrer</surname><given-names>R.</given-names></name>; <name><surname>Case</surname><given-names>D. A.</given-names></name>; <name><surname>Walker</surname><given-names>R. C.</given-names></name><article-title>An Overview of the Amber Biomolecular
Simulation Package</article-title>. <source>Wiley Interdiscip. Rev.:
Comput. Mol. Sci.</source><year>2013</year>, <volume>3</volume>, <fpage>198</fpage>–<lpage>210</lpage>. <pub-id pub-id-type="doi">10.1002/wcms.1121</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref36">
      <mixed-citation publication-type="journal" id="cit36"><name><surname>Eastman</surname><given-names>P.</given-names></name>; <name><surname>Swails</surname><given-names>J.</given-names></name>; <name><surname>Chodera</surname><given-names>J. D.</given-names></name>; <name><surname>McGibbon</surname><given-names>R. T.</given-names></name>; <name><surname>Zhao</surname><given-names>Y.</given-names></name>; <name><surname>Beauchamp</surname><given-names>K. A.</given-names></name>; <name><surname>Wang</surname><given-names>L.-P.</given-names></name>; <name><surname>Simmonett</surname><given-names>A. C.</given-names></name>; <name><surname>Harrigan</surname><given-names>M. P.</given-names></name>; <name><surname>Stern</surname><given-names>C. D.</given-names></name>; et al. <article-title>OpenMM 7: Rapid Development
of High Performance Algorithms for Molecular Dynamics</article-title>. <source>PLoS Comput. Biol.</source><year>2017</year>, <volume>13</volume>, <elocation-id>e1005659</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005659</pub-id>.<pub-id pub-id-type="pmid">28746339</pub-id></mixed-citation>
    </ref>
    <ref id="ref37">
      <mixed-citation publication-type="journal" id="cit37"><name><surname>Mysinger</surname><given-names>M. M.</given-names></name>; <name><surname>Carchia</surname><given-names>M.</given-names></name>; <name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>Directory of Useful
Decoys, Enhanced (DUD-E): Better Ligands and Decoys for Better Benchmarking</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>6582</fpage>–<lpage>6594</lpage>. <pub-id pub-id-type="doi">10.1021/jm300687e</pub-id>.<pub-id pub-id-type="pmid">22716043</pub-id></mixed-citation>
      <note>
        <p>Accessed: 2023-09-24</p>
      </note>
    </ref>
    <ref id="ref38">
      <mixed-citation publication-type="report" id="cit38"><person-group person-group-type="allauthors"><name><surname>Jacobson</surname><given-names>B. L.</given-names></name></person-group><source>Crystal
Structure
of Human Adipocyte Fatty Acid Binding Protein in Complex with ((2′-(5-ethyl-3,
4-diphenyl-1H-pyrazol-1-yl)-3-biphenylyl)oxy)acetic Acid</source>, <year>2007</year>. <pub-id pub-id-type="doi">10.2210/pdb2nnq/pdb</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="publisher-id">ci</journal-id>
    <journal-id journal-id-type="coden">jcisd8</journal-id>
    <journal-title-group>
      <journal-title>Journal of Chemical Information and Modeling</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1549-9596</issn>
    <issn pub-type="epub">1549-960X</issn>
    <publisher>
      <publisher-name>American Chemical Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10751785</article-id>
    <article-id pub-id-type="pmid">38052452</article-id>
    <article-id pub-id-type="doi">10.1021/acs.jcim.3c01085</article-id>
    <article-categories>
      <subj-group>
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scipion-Chem: An
Open Platform for Virtual Drug Screening</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="ath1">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0005-3321-1810</contrib-id>
        <name>
          <surname>Del Hoyo</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <name>
          <surname>Salinas</surname>
          <given-names>Martin</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath3">
        <name>
          <surname>Lomas</surname>
          <given-names>Alba</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath4">
        <name>
          <surname>Ulzurrun</surname>
          <given-names>Eugenia</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <contrib contrib-type="author" id="ath5">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9948-2665</contrib-id>
        <name>
          <surname>Campillo</surname>
          <given-names>Nuria E.</given-names>
        </name>
        <xref rid="aff2" ref-type="aff">‡</xref>
        <xref rid="aff3" ref-type="aff">§</xref>
      </contrib>
      <contrib contrib-type="author" id="ath6">
        <name>
          <surname>Sorzano</surname>
          <given-names>Carlos Oscar</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <aff id="aff1"><label>†</label><institution>National
Center of Biotechnology (CNB-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
      <aff id="aff2"><label>‡</label><institution>Center
for Biological Research (CIB-CSIC)</institution>, Madrid 28040, <country>Spain</country></aff>
      <aff id="aff3"><label>§</label><institution>Institute
of Mathematical Sciences (ICMAT-CSIC)</institution>, Madrid 28049, <country>Spain</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>Email: <email>ddelhoyo@cnb.csic.es</email>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>05</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>25</day>
      <month>12</month>
      <year>2023</year>
    </pub-date>
    <volume>63</volume>
    <issue>24</issue>
    <fpage>7873</fpage>
    <lpage>7885</lpage>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>07</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>07</day>
        <month>11</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2023 The Authors. Published by American Chemical Society</copyright-statement>
      <copyright-year>2023</copyright-year>
      <copyright-holder>The Authors</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbyncndlicense">https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref>
        <license-p>Permits non-commercial access and re-use, provided that author attribution and integrity are maintained; but does not permit creation of adaptations or other derivative works (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc-nd/4.0/">https://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0015" id="ab-tgr1"/>
      </p>
      <p>Virtual drug screening (VDS) tackles the problem of drug
discovery
by computationally reducing the number of potential pharmacological
molecules that need to be tested experimentally to find a new drug.
To do so, several approaches have been developed through the years,
typically focusing on either the physicochemical characteristics of
the receptor structure (structure-based virtual screening) or those
of the potential ligands (ligand-based virtual screening). Scipion
is a workflow engine well suited for structural studies of biological
macromolecules. Here, we present Scipion-chem, a new branch oriented
to VDS. A total of 11 plugins have already been integrated from the
most common programs used in the field. They can be used through the
Scipion graphical user interface to execute and analyze typical VDS
tasks. In addition, we have developed several consensus protocols
that combine results from the different integrated programs to generate
more robust predictions. Backstage, Scipion also facilitates the interoperability
of those different software packages while tracking all of the intermediate
files, parameters, and user decisions. In summary, in this article,
we present Scipion-chem. This accessible, interoperable, and traceable
platform provides the user with all of the tools to carry out a successful
VDS workflow. Scipion-chem is openly available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri>.</p>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>European Commission</institution>
            <institution-id institution-id-type="doi">10.13039/501100000780</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>NA</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>FormaciÃ³n al Profesorado Universitario</institution>
            <institution-id institution-id-type="doi">NA</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>FPU21/00938</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ci3c01085</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <label>1</label>
    <title>Introduction</title>
    <p>Drug discovery and development
is a challenging and multistage
process that involves compound identification, in vitro evaluation,
hit optimization, in vivo and preclinical studies, and clinical phases,
demanding substantial time and resources. Even after a promising compound
is selected, several years are needed to pass the different clinical
stages, and most of them are actually discarded in this process. Due
to the difficulties of this process, the cost of developing a new
drug is estimated to be around 2.6 billion dollars.<sup><xref ref-type="bibr" rid="ref1">1</xref></sup> Apart from being a lengthy, costly, and complex process,
it is crucial to acknowledge the vastness of the chemical space involved
in drug development. This chemical space of drug-like compounds, which
is estimated to consist of approximately 10<sup>63</sup> molecules,
remains considerably beyond our reach. Therefore, computer-aided drug
discovery tools have been developed to speed up this process by filtering
out nonpromising molecules based on either the molecule’s characteristics
or the unlikeliness of its interaction with the target of interest.
Now, exploring this gigantic chemical space is still very challenging
even using this computational method, but researchers keep developing
new approaches and methods to improve the accuracy and speed of drug
discovery tasks.</p>
    <p>This in silico process of molecule filtering
is typically referred
to as virtual drug screening (VDS). It comprises different approaches,
which can usually be classified as structure based (SB) or ligand
based (LB) depending on the focus of the methods: either the receptor
structure characteristics in SB, which is typically a protein, or
the small molecules characteristics in LB.<sup><xref ref-type="bibr" rid="ref2">2</xref>−<xref ref-type="bibr" rid="ref4">4</xref></sup> Inside these two fields, we can find different commonly used approaches,
such as molecular docking and de novo design in SB; or quantitative
structure–activity relationship and pharmacophore modeling
in LB, among many others.<sup><xref ref-type="bibr" rid="ref8">8</xref>−<xref ref-type="bibr" rid="ref11">11</xref></sup></p>
    <p>Throughout these last years, researchers and
developers worldwide
have been adding new tools and methods to approach these different
tasks. Some of these programs can cover more than one step in a typical
VDS workflow but usually not all of them. Among this software, we
could cite Schrödinger,<sup><xref ref-type="bibr" rid="ref12">12</xref></sup> AutoDock,<sup><xref ref-type="bibr" rid="ref13">13</xref></sup> LePhar,<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> Fpocket,<sup><xref ref-type="bibr" rid="ref15">15</xref></sup> and P2Rank.<sup><xref ref-type="bibr" rid="ref16">16</xref></sup> Even
though this continuous improvement helps the community to gradually
solve the problem of drug discovery, for a researcher to use several
different and independent programs usually involves a series of difficulties
that hamper the development of complete VDS workflows, including<list id="list1" list-type="simple"><list-item><label>1.</label><p>Installation: Researchers may encounter
difficulties trying to install software due to the requirements or
incompatibilities each of them has.</p></list-item><list-item><label>2.</label><p>File formats: Although several common
formats have been established for protein and small molecule structures,
some programs require a specific format, which may not coincide with
the one provided by the previous step. The conversion between these
formats is possible, but sometimes, it is tricky and imperfect and
requires external software.</p></list-item><list-item><label>3.</label><p>Command line: Many programs rely on
extensive command line use. Even though this can offer high flexibility,
it also implies a strong entry barrier for many users who need to
learn and remember different commands for each program.</p></list-item><list-item><label>4.</label><p>Traceability: VDS workflows can be
composed of a considerable number of steps. When these steps are run
separately, it might be difficult to keep track of all the decisions,
parameters, or intermediate files, especially if these intermediate
files sometimes need conversions or modifications.</p></list-item><list-item><label>5.</label><p>Comparison: Even though having several
software options is mostly helpful, it also adds the problem of deciding
which results should be trusted or how to compare them.</p></list-item></list></p>
    <p>Scipion-chem is an extension of the Scipion workflow
engine<sup><xref ref-type="bibr" rid="ref5">5</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup> that has been designed to get rid of these complications
by (1)
automatically installing the software of interest and building any
necessary environment to avoid conflicts; (2) automatically converting
the intermediate files using OBabel,<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> RDKit,<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> or Biopython<sup><xref ref-type="bibr" rid="ref19">19</xref></sup> when
necessary; (3) offering a graphic user interface (GUI) to design and
manage the workflows and running the programs; (4) saving and organizing
all the parameters, workflows, and files in a straightforward folder
structure; and (5) providing intuitive viewers and consensus protocols
to compare and extract the most relevant information out of results
from different software in equivalent steps.</p>
  </sec>
  <sec id="sec2">
    <label>2</label>
    <title>VDS Workflow</title>
    <p>In this section, we follow
the typical VDS pipeline steps to characterize
promising ligands for a protein target, explaining each step and the
available programs and tools in Scipion-chem. The PDB structure <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>(<xref ref-type="bibr" rid="ref20">20</xref>) will be used as target throughout the workflow to give
examples and figures of the outputs of each step. In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, we show the software integrated
by Scipion-chem and the steps in which they are used. Moreover, the
viewers included along the pipeline are also shown along with some
extra functionalities that can be used from the platform.</p>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Scipion-chem
currently integrated software, organized by the step
of the typical VDS workflow in which they are involved in. Those programs
that can only perform one of the tasks in the row are marked with
red circles (only for target operations) and blue triangles (only
for ligand operations). The viewers and other utilities available
from Scipion-chem are also shown.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0001" id="gr1" position="float"/>
    </fig>
    <sec id="sec2.1">
      <label>2.1</label>
      <title>Molecule Import</title>
      <p>This step, previous
to those presented in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, involves adding either a new target or ligand structures
into a Scipion project. The import protocols allow the user to intuitively
choose the origin of the structures and download the corresponding
files if necessary.</p>
      <sec id="sec2.1.1">
        <label>2.1.1</label>
        <title>Target Import</title>
        <p>The targets for VDS
are mainly proteins whose structure can be characterized by diverse
methods such as X-ray crystallography or cryo-electron microscopy.
These methods ultimately generate the files that contain the information
on the structure. The most well-known structure file types are pdb
and cif, usually downloaded from the PDB database.<sup><xref ref-type="bibr" rid="ref21">21</xref></sup> From Scipion, the user can choose whether to download an
existing structure from the PDB using its unique identifier or import
the structure from a local file on his/her computer. In addition,
Scipion includes protocols for similarly importing sequences and using
modeling programs such as AlphaFold<sup><xref ref-type="bibr" rid="ref22">22</xref>,<xref ref-type="bibr" rid="ref23">23</xref></sup> in order to
get their corresponding structures.</p>
      </sec>
      <sec id="sec2.1.2">
        <label>2.1.2</label>
        <title>Ligand Import</title>
        <p>The hypothetical
ligands are usually small molecules that can interact, fit on the
protein surface, and change the target’s functionality. The
ligands can be imported using different formats depending on the type
of ligand representation, 2D or 3D, such as sdf, mol2, or pdb, and
others simply contain atomic information on the molecule, without
specifying any coordinates, such as smi. Many of these formats are
supported by Scipion-chem using OpenBabel and RDKit. The user can
choose to import the ligand structures from<list id="list2" list-type="simple"><list-item><label>1.</label><p>Local file(s): Import the ligand(s)
structures from local file(s).</p></list-item><list-item><label>2.</label><p>Predefined libraries: Throughout the
years, the drug screening community has defined several libraries
of ligands based on specific criteria. Scipion-chem allows downloading
some of these default libraries (e.g., ZINC<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> and ECBL<sup><xref ref-type="bibr" rid="ref25">25</xref></sup>).</p></list-item><list-item><label>3.</label><p>Database IDs: Import ligand(s) by their
ID in several databases such as PubChem,<sup><xref ref-type="bibr" rid="ref26">26</xref></sup> ChEMBL,<sup><xref ref-type="bibr" rid="ref27">27</xref></sup> BindingDB,<sup><xref ref-type="bibr" rid="ref28">28</xref></sup> or ZINC.<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> Some of these databases
group ligands based on some criteria. The IDs of these groups can
also be used to download the components of the group.</p></list-item><list-item><label>4.</label><p>Atomic structures: Some atomic structure
files from PDB include small molecules that can be extracted.</p></list-item><list-item><label>5.</label><p>Draw molecules: Scipion-chem
includes
a protocol calling JChemPaint,<sup><xref ref-type="bibr" rid="ref29">29</xref></sup> a Java
program that allows users to draw small molecules manually.</p></list-item></list></p>
      </sec>
    </sec>
    <sec id="sec2.2">
      <label>2.2</label>
      <title>Molecule Preparation</title>
      <p>Usually, both
the protein target and the small molecules used as hypothetical ligands
must be prepared to have some characteristics needed by the posterior
software in the pipeline. <xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref> contains a graphical example of target and ligand
preparations.</p>
      <fig id="fig2" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Example of Scipion-chem preparations for a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) and a ligand (ZINC480).
The target is cleaned from water molecules and preexisting ligands,
hydrogens are added, and only one of the three chains is generated.
Hydrogens are added to the ligand, and three different conformers
are generated.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0002" id="gr2" position="float"/>
      </fig>
      <sec id="sec2.2.1">
        <label>2.2.1</label>
        <title>Target Preparation</title>
        <p>Depending on
the method and procedure for resolving the protein target structure,
the resulting structure file might have slightly different characteristics
that we want to modify. The main modifications include adding missing
hydrogens, removing water molecules or other heteroatoms, and removing
irrelevant chains. Some of the included programs can also perform
more advanced preparations such as assigning new partial charges to
the atoms, performing energy minimization, or adding missing atoms
in the structure. Moreover, Scipion also includes programs specifically
oriented to modeling and modifying the atomic structures which can
also be used to accomplish this step.<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the
different options for target preparation are shown. These protocols
generate an output of type AtomStruct, containing the prepared atomic
structure.</p>
      </sec>
      <sec id="sec2.2.2">
        <label>2.2.2</label>
        <title>Ligand Preparation</title>
        <p>As for the target
structure, some modifications may need to be performed over the ligand
structures to make them compatible with the following steps. Similarly,
ligands can be treated to add hydrogens or assign charges, among other
options. Another preparation specific to ligands is the optional generation
of conformers, alternative energetically favorable conformations that
the molecule can acquire. Depending on the downstream pipeline programs
to use, the generation of conformers might or might not be necessary.
In <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, the different
options for the ligand preparation are shown. These protocols generate
an output of type SetOfSmallMolecules, containing the prepared ligand
structures.</p>
      </sec>
    </sec>
    <sec id="sec2.3">
      <label>2.3</label>
      <title>Molecule Filtering</title>
      <p>The steps described
in this section reduce the computations the posterior docking step
needs. It includes the definition of regions of interest (ROIs) on
the target structure, on one hand, to reduce the docking space to
explore and, on the other hand, to reduce the number of ligands to
dock by discarding poor, unpromising ligands based only on their own
characteristics.</p>
      <sec id="sec2.3.1">
        <label>2.3.1</label>
        <title>ROI Definition</title>
        <p>In Scipion-chem,
we define the structural ROIs as groups of atoms in the target that
are of concern for some reason. Depending on their origin, they can
be represented as points over target atoms, over the surface of the
target, or near it (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>). From a molecular docking perspective, structural ROIs reduce
the total space to explore from the complete target to a few promising
or interesting sites. However, they are ultimately groups of atoms
that can be of interest for any other topic inside the platform. There
are a number of intuitive protocols to define the structural ROIs
in Scipion-chem.<list id="list3" list-type="simple"><list-item><label>1.</label><p>Manually: The user might want to manually
define the structural ROIs directly from coordinates, specific residues,
existing ligands, interchain protein–protein interfaces, or
patterns of near residues in the target.</p></list-item><list-item><label>2.</label><p>Based on target characteristics: By
examining certain structural properties of the target and its corresponding
atoms and residues, the structural ROIs can be identified based on
predetermined thresholds. In Scipion-chem, we can, for example, define
the structural ROIs for sites with a high SASA (solvent-accessible
surface area), which can be visualized in the same protocol (<xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref>).</p></list-item><list-item><label>3.</label><p>Predicted pockets: There are programs
specifically designed to predict those sites of the target that are
more likely to interact with a ligand. The exact procedure for determining
these regions differs depending on the program. Still, they are usually
concave regions or pockets where the ligands find themselves more
surrounded by the target atoms, and therefore, the interaction can
be energetically more favorable. In Scipion-chem, we have incorporated
FPocket, P2Rank, AutoSite, and SiteMap programs, and their results
are all parsed as the structural ROIs.</p></list-item><list-item><label>4.</label><p>Sequence ROIs: Parallel to the structural
ROIs, we defined sequence ROIs, which are defined as a group of consecutive
residues on a protein sequence. There are also several ways to define
sequence ROIs, such as manually, based on conservation, or existing
natural variants or mutations. These sequence ROIs can be mapped to
the structural ROIs based on the alignment of their sequence and the
sequence of a protein structure.</p></list-item></list></p>
        <fig id="fig3" position="float">
          <label>Figure 3</label>
          <caption>
            <p>Example of Scipion-chem per-residue SASA calculation over a target
(PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A).
Histogram with the number of residues vs the SASA values is shown
in the left panel. On the right panel, the structure of the complex
is visualized in ChimeraX, and each residue is colored by its SASA
value.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0003" id="gr10" position="float"/>
        </fig>
        <p>At this point of the pipeline, Scipion-chem offers
a consensus
tool to compare the structural ROIs obtained from different sources
and extract those shared among them. It works by clustering the structural
ROIs based on the residue overlap. A set of contact residues and atoms
ultimately defines each structural ROI. These clusters define whether
a pair of structural ROIs approximately defines the same region. Once
the clusters are built, only those containing a determined number
of ROIs are kept, which might be useful in different situations. For
example, we might want to keep the most promising protein pockets
by running the consensus over several sets of pockets obtained from
different tools. This way, only the most druggable pockets according
to both programs will remain. Another more trivial but still useful
example is to run the consensus protocol over a set of predicted pockets
and a structural ROI defined by hand on a residue of interest, for
example, a residue involved in the enzyme reaction of the protein.
Using this procedure, we will extract only the pocket(s) where the
residue of interest is found (<xref rid="fig4" ref-type="fig">Figure <xref rid="fig4" ref-type="fig">4</xref></xref>).</p>
        <fig id="fig4" position="float">
          <label>Figure 4</label>
          <caption>
            <p>Example of Scipion-chem
ROIs over a target (PDB: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the top left
panel, two manually generated sequence ROIs are represented in AliView.
On the left bottom panel, the two corresponding structural ROIs from
mapping those sequence ROIs to the structure are represented as points
over the surface in PyMol. Finally, on the right panel, the FPocket
predicted pockets are represented as alpha spheres in VMD for the
same structure.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0004" id="gr3" position="float"/>
        </fig>
      </sec>
      <sec id="sec2.3.2">
        <label>2.3.2</label>
        <title>Ligand-Based Filtering</title>
        <p>We can filter
the ligands before the docking step using an LB step. Scipion-chem
includes several filters based on only the characteristics of the
ligand. To do so, we use the RDKit package to include the following
filters based on<list id="list4" list-type="simple"><list-item><label>1.</label><p>Chemical features: We include two protocols
based on the molecule features. The first one uses the ADME (absorption,
distribution, metabolism, and excretion) filter to evaluate which
molecules have desirable pharmacokinetic properties. The second one
applies the PAINS (pan-assay interference compounds) filter to remove
the ligands containing molecular patterns that would lead to highly
unspecific interactions.</p></list-item><list-item><label>2.</label><p>Molecule shape: This protocol applies
a filter that takes out those molecules whose shape is not similar
enough to the shape of another molecule. For example, this filter
is used when we know the structure of a reference ligand, and we would
like to find more ligands with a similar shape, but that might have
different chemical compositions. We support shape comparison with
RDKit or Shape-it, using Tanimoto, Protrude, or rmsd distances.<sup><xref ref-type="bibr" rid="ref30">30</xref></sup></p></list-item><list-item><label>3.</label><p>Molecule fingerprints: Molecular fingerprints
are encoded representations of molecules. They typically represent
the absence or presence of specific molecular patterns in the molecule.
As with the previous filter, this one will remove those molecules
whose fingerprints are not similar enough to that of another molecule.
The user can choose among the Morgan or MACCS fingerprints<sup><xref ref-type="bibr" rid="ref31">31</xref></sup> and whether to use Tanimoto or Dice similarity
coefficients.</p></list-item><list-item><label>4.</label><p>Pharmacophore:
Pharmacophores are a
type of molecular representation.<sup><xref ref-type="bibr" rid="ref32">32</xref></sup> They
extract molecular features of one or more molecules and represent
them in 3D space, usually as spheres (see <xref rid="fig5" ref-type="fig">Figure <xref rid="fig5" ref-type="fig">5</xref></xref>). For another molecule to pass a pharmacophore
filter, it must be possible to align and match its own features to
those in the pharmacophore, with some degree of error. Scipion-chem
includes protocols to (1) generate pharmacophores out of a group of
small molecules, (2) define and manually modify RDKit pharmacophores,
and (3) run the filter over a set of small molecules. Pharmacophores
can be powerful tools for determining the most relevant features a
ligand must have to interact with a receptor site. The user might,
for example, want to build a pharmacophore out of the best results
of a structural-based docking to perform a pharmacophore-based docking
later. Scipion-chem currently supports pharmacophore generation and
filter protocols through RDKit.</p></list-item></list></p>
        <fig id="fig5" position="float">
          <label>Figure 5</label>
          <caption>
            <p>Example of Scipion-chem pharmacophore over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). On the left
panel, actual ligand OR3 is used to generate a pharmacophore. In an
intermediate step, the pharmacophore is slightly modified to make
the hydrogen acceptor feature (red sphere) larger and to remove the
aromatic feature (purple sphere). Then, on the right panel, molecule
ZINC1099, which passed this pharmacophore filter, is plotted aligned
to the pharmacophore.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0005" id="gr11" position="float"/>
        </fig>
      </sec>
    </sec>
    <sec id="sec2.4">
      <label>2.4</label>
      <title>Docking</title>
      <p>Molecular docking is usually
the main process in an SB VDS workflow. It calculates the pose of
the desired small molecules over the surface of the target, trying
to find the position with the most favorable energy, which, hopefully,
will coincide with the actual position of the ligand in the case this
interaction really occurs. Usually, every docking method relies on
a scoring function that ranks the positions provided by a search method
and the different tested ligands. The scoring function and the search
method are variable among the numerous methods the scientific community
has developed. In Scipion-chem, we have integrated six docking protocols:
AutoDock4, Vina, AutoDock-GPU (all from Autodock), LeDock (from LePhar),
DARC (from Rosetta), and Glide (from Schrödinger). The user
can choose among these methods whether to dock a set of small molecules
over the whole protein or a set of structural ROIs and choose the
different parameters that the software allows. The results can be
visualized grouped by ROIs or small molecule and either in ChimeraX
or in PyMol (see <xref rid="fig6" ref-type="fig">Figure <xref rid="fig6" ref-type="fig">6</xref></xref>).</p>
      <fig id="fig6" position="float">
        <label>Figure 6</label>
        <caption>
          <p>Example of Scipion-chem docking results in ChimeraX. Different
small molecules appear to be docked onto the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A protein. Each
of these molecules stores the different metadata that the docking
program provides, including the docking score or energy.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0006" id="gr4" position="float"/>
      </fig>
      <p>To ensure the comparability of docking results
obtained from each
of these methods, the molecules that have been docked onto the target
can be rescored using a consistent scoring function. In Scipion-chem,
we have integrated two protocols for docking rescoring: the first
uses the AutoDock4 scoring function and the second uses the ODDT package.
This package rescores the docking positions using a number of scoring
functions, and the user can choose a list of these that will be stored
in each molecule metadata. Therefore, once the docking poses are rescored
using the same function, we developed a consensus protocol to extract
the most relevant poses from a set of different docking results. To
do so, the docking positions are clustered based on their rmsd, and
only clusters containing a determined number of poses are considered
part of the consensus. Then, the molecule with the best chosen score
or energy is used to represent the cluster. This consensus does not
need the previous rescoring since the clustering process would proceed
similarly. Still, thanks to it, we can compare the different poses
in the cluster and choose the most favorable.</p>
      <p>Finally, another
tool is integrated to analyze the docking poses
in detail: PLIP (protein–ligand interaction profiler)<sup><xref ref-type="bibr" rid="ref33">33</xref></sup> (<xref rid="fig7" ref-type="fig">Figure <xref rid="fig7" ref-type="fig">7</xref></xref>). This tool plots in PyMol the docking pose and the different
noncovalent interactions that the target and the ligand would have
based on the distance and the atom types.</p>
      <fig id="fig7" position="float">
        <label>Figure 7</label>
        <caption>
          <p>Example of Scipion-chem
docking over a target (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A) with its actual
ligand (OR3). The left side shows the target in cartoon representation
with one of the nine positions found for the molecule in PyMol using
Vina. On the right side, the same docked molecule is visualized in
PyMol using PLIP, plotting and listing all the noncovalent interactions
between the ligand and the target, only representing the interacting
residues.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0007" id="gr5" position="float"/>
      </fig>
    </sec>
    <sec id="sec2.5">
      <label>2.5</label>
      <title>Molecular Dynamics</title>
      <p>Molecular dynamics
(MD) is a broad and complex field of science that tries to simulate
at the atom level the interactions and dynamics of molecules, trying
to represent them in a closer way to reality, compared to usual docking
methods. Therefore, MD calculations are usually computationally expensive,
and it may not be worth using them for VDS studies compromising many
hypothetical ligands. However, under some circumstances, simulating
the interactions of a limited number of specific target–ligand
pairs might be interesting. For example, in our case, if our filters
during the VDS pipeline are strict enough, we could extract the best
few docked poses and then simulate these pairs. This way, we would
further check how strong their interactions are and whether the ligand
would actually stay in the receptor pocket enough time to act as a
drug. Moreover, MD might be useful for many other purposes involving
simulation of the receptor or the ligand separately to study their
behaviors freely. In Scipion-chem, we provide several packages for
preparing and running full MD simulations. These include Gromacs,<sup><xref ref-type="bibr" rid="ref34">34</xref></sup> AmberTools,<sup><xref ref-type="bibr" rid="ref35">35</xref></sup> OpenMM,<sup><xref ref-type="bibr" rid="ref36">36</xref></sup> and Desmond (from Schrödinger). For the
case of Desmond, in addition to the standard viewers, the Maestro
viewer is also available. These plugins contain protocols for<list id="list5" list-type="simple"><list-item><label>1.</label><p>System preparation: The protocol takes
the structure of either a receptor or a docked ligand to prepare a
solvated system (<xref rid="fig8" ref-type="fig">Figure <xref rid="fig8" ref-type="fig">8</xref></xref>). The different parameters accepted to tune these systems by each
software are provided in the protocol GUI, including the force fields
to use, size and form of the water box, whether to add ions and in
which quantities or concentrations, etc. The resulting solvated systems
can be visualized using PyMol from the Scipion project.</p></list-item><list-item><label>2.</label><p>Simulation: The user can define a list
of steps to be performed consecutively, choosing the parameters for
each of them and whether to store or not the trajectory out of each
step simulation. The steps included can perform energy minimization,
equilibration, or just production simulations. The list of steps is
modified in the protocol GUI using wizards to ensure the correctness
of the defined steps. The results of these protocols are the molecular
systems after the simulation and, if stored, the trajectories followed
by these system atoms through the simulation. Both can be visualized
using PyMol and VMD, and several trajectory analyses are included
to explore the simulation results further (see <xref rid="fig9" ref-type="fig">Figure <xref rid="fig9" ref-type="fig">9</xref></xref>).</p></list-item><list-item><label>3.</label><p>Trajectory modifications: A protocol
to perform trajectory or system modifications is included to allow
for standard operations such as removing water from a trajectory or
subsampling it.</p></list-item></list></p>
      <fig id="fig8" position="float">
        <label>Figure 8</label>
        <caption>
          <p>Example of the Scipion-chem solvated MD system (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>-A). The left panel
shows the protein in a cubic water box and a number of ions (green
spheres) counter the charges of the protein using PyMol. A snapshot
of the same system is visualized on the right panel by using VMD,
showing only the closest water to the protein.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0008" id="gr12" position="float"/>
      </fig>
      <fig id="fig9" position="float">
        <label>Figure 9</label>
        <caption>
          <p>Example of Scipion-chem MD analysis that can be performed
on the
trajectory. On the top left and right panels, different analyses on
the mobility of the protein (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link>) throughout the trajectory are performed using Gromacs.
On the bottom panels, Schrödinger is used to analyze the trajectory
of <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4ERF">4ERF</ext-link> together
with the OR3 ligand, and the images show representations of the target–ligand
contacts.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0009" id="gr13" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec id="sec3">
    <label>3</label>
    <title>Show Case</title>
    <p>In this section, we executed
the main VDS workflow in Scipion-chem,
including the consensus docking protocol, in a bigger data set. This
example, with code FABP4, was extracted from the DUD-E database<sup><xref ref-type="bibr" rid="ref37">37</xref></sup> and contains 47 active molecules, each of them
with around 50 decoys, making a total of 2749 decoy molecules. Both
the active, decoy libraries and the receptor structure are imported
to the Scipion GUI from the files provided by DUD-E. Then, the main
VDS workflow is executed, including the use of an LB filter, a receptor
binding site prediction, and 3 different docking programs (AutoDock-GPU,
AutoDock Vina, and LeDock). Finally, their results are combined by
using ODDT rescoring and our consensus docking protocol. Thanks to
the Scipion workflow engine, all of these VDS screening steps can
be scheduled and run in parallel as a complete workflow, where the
user can specify how to manage the resources devoted to each of the
steps and software. Moreover, for each of these steps or protocols,
Scipion GUI forms are accessible to easily modify and explore the
different parameters involved in their execution (see <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p>
    <fig id="fig10" position="float">
      <label>Figure 10</label>
      <caption>
        <p>Scipion-chem RDKit ligand
preparation form. The figure shows the
Scipion forms corresponding to the RDKit ligand preparation described.
The form contains an upper section where technical (run) parameters
can be set (protocol name, number of threads, queue system, etc.)
and a second section (input) where the user can define the input set
of molecules and the different parameters RDKit must use for the preparation.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0010" id="gr6" position="float"/>
    </fig>
    <p>In the following lines, we will go through the
steps involved in
this VDS workflow. A more detailed description of these steps, together
with the corresponding forms, the actual workflows, and the data generated,
can be accessed in our GitHub docs page: <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>.<list id="list6" list-type="simple"><list-item><label>1.</label><p>Import: In this example, we imported
the structures directly from the pdb files (for the receptor, corresponding
to PDB <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="2NNQ">2NNQ</ext-link>)<sup><xref ref-type="bibr" rid="ref38">38</xref></sup> and sdf files (for the ligands) provided by
DUD-E. The forms provided by Scipion allow the user to choose the
origin of the structure and, in the case of the small molecules, the
molecule handler (RDKit or OpenBabel) to use and if a 3D reconstruction
is needed.</p></list-item><list-item><label>2.</label><p>Preparation:
Once the structures are
imported into the Scipion workflow, separate preparation steps are
performed for the receptor and ligand libraries. In this case, we
used the protein preparation protocol in the OpenMM plugin, which
uses PDBFixer for the receptor protein, and RDKit for the preparation
of the ligands. In each of the forms, the user is asked about the
preparation parameters desired, such as removing undesired atoms (water
and other nonprotein entities) or adding missing atoms in the receptor,
which force fields to use, and whether to generate conformers (5 for
our example) in the preparation of the ligands (shown in <xref rid="fig10" ref-type="fig">Figure <xref rid="fig10" ref-type="fig">10</xref></xref>).</p></list-item><list-item><label>3.</label><p>ROI definition: In this particular
example, P2Rank is used to predict the most promising pockets in our
receptor, which will become those ROIs where we will direct the docking
processes. Then, this P2Rank protocol is followed by a filter protocol
to extract only the 2 best pockets predicted, in order to speed up
the downstream workflow.</p></list-item><list-item><label>4.</label><p>LB filtering: On the ligand side, a
filtering step is used by passing the ADME LB filter protocol to our
active and decoy molecules. After this filter, we continue the processing
with 46 active and 2611 decoy molecules, discarding 1 and 138 molecules,
respectively.</p></list-item><list-item><label>5.</label><p>Docking:
This step involves the execution
of 3 independent docking programs (AutoDock-GPU, AutoDock Vina, and
LeDock) over the 2 defined ROIs and both the active and decoy prepared
libraries. In practice, this is the slowest step of the workflow and
therefore becomes the usual bottleneck in its execution, so it is
important to choose appropriate resources for them. In our case, the
forms allow us to define the number of threads and GPUs (only for
AutoDock-GPU) to allocate for each of the executions. Moreover, as
the previous cases, the forms also include the parameters that the
user can tweak to define the docking processes, such as the number
of docking poses to generate for each of the molecule conformers.
In our case, we chose five, resulting on 96226, 109139, and 76830
docking poses for each of the cited docking programs.</p></list-item><list-item><label>6.</label><p>Rescoring: In order to combine and
compare the docking poses generated by each of the software, we need
to first evaluate those poses using the same scoring function. In
this case, we use the ODDT score protocol to rescore all the docking
poses with its Vina score function.</p></list-item><list-item><label>7.</label><p>Filter and consensus: Finally, the
rescored poses can be combined and ranked, and the consensus protocol
can be applied to cluster and extract the most promising docking positions.
In our example, different ranking filters and consensus parameters
were used to evaluate the results. Nine filtered subsets of our docked
molecules containing the 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, and 100%
of the highest-scored poses were generated. Then, two consensus protocols
were executed for each of these subsets with a difference in a vital
parameter. First, both consensus runs will produce the same pose clusters;
however, one of the consensus executions will only consider sufficient
those clusters containing at least one pose from each of the three
docking software (N3), while the other, more permissive one, will
consider sufficient those that contain at least poses from 2 docking
software (N2). This way, we intend to generate sets enriched in active
molecules and smaller than the original set of 2796 molecules. The
results of this experiment comparing the filtering vs N2 consensus
are shown in <xref rid="fig11" ref-type="fig">Figure <xref rid="fig11" ref-type="fig">11</xref></xref>, where we can observe the enrichment of actives vs decoys of the
output subsets and the total number of molecules kept for each of
them. Subsets labeled % <italic>x</italic> show the enrichment for
the sets generated only passing the score filter, while those labeled
% <italic>x</italic>_N2 represents the corresponding set generated
after passing the score filter plus the consensus protocol. A similar
image with the results for the N3 consensus can be found in our GitHub
documentation page.</p></list-item></list></p>
    <fig id="fig11" position="float">
      <label>Figure 11</label>
      <caption>
        <p>Scipion-chem consensus protocol enrichment. The graph shows the
percentage of actives (blue bars) and the total number of molecules
(red dots) for each of the subsets generated in the workflow. The
subset “Original” represents the original set imported
from DUD-E; “% 100” represents the subset of molecules
remaining after the described LB filtering (which slightly improves
the enrichment), and then each of the consensus subsets generated
by applying a best ODDT score ranking filter for the top % <italic>x</italic> and consensus docking with parameter N2.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0011" id="gr14" position="float"/>
    </fig>
    <p>As we can infer from the graphs, both strategies
lead to a considerable
enrichment of the original data set as the percentage of actives (the
blue bars) is generally enhanced, while the number of total molecules
in the subset (the red line) is reduced. For our FABP4 example, from
the original 2796 (47 actives to 2749 decoys) molecules (1.68% of
actives), we obtained considerable enrichment in both the filtered
and filter plus consensus subsets. For instance, we obtained a subset
of 64 molecules where 11 actives were kept (17.19%) for the 0.1% filtered
subset, or once this same subset is passed through the N2 consensus,
we further enriched it to keep 7 actives out of just 24 molecules
(29.17%).</p>
    <p>Therefore, we were able to reduce the total number
of molecules
in the original set while significantly enhancing the proportion of
actives. However, the user must be careful not to reduce too much
the number of docking poses with the score filter since we can observe
that subsets below 0.05% lose all or most of the active molecules.</p>
    <p>Additionally, in <xref rid="fig12" ref-type="fig">Figure <xref rid="fig12" ref-type="fig">12</xref></xref>, the experimental values for the interaction of the active
molecules and the receptor are represented and plotted based on their
experimental <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) values and their best pose ODDTScore. Those points with a
yellow star correspond to the active molecules present in the best
resulting consensus data set (% 0.1_N2). As we can observe, the ODDTScore
seems to correlate relatively well, and most of the highest ODDTScores
represent the best experimental affinities, which are captured in
the consensus.</p>
    <fig id="fig12" position="float">
      <label>Figure 12</label>
      <caption>
        <p>Experimental interaction values (nM) of actives in <italic>K</italic><sub>i</sub> (blue) or IC<sub>50</sub> (red) against the
corresponding
values in the ODDTScore Vina. The yellow stars specify actives found
in the best consensus set.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0012" id="gr7" position="float"/>
    </fig>
    <p>In summary, a complete VDS workflow was executed
from the Scipion
GUI on the FABP4 data set, which allowed to run all the different
software involved from the same program, while maintaining the flexibility
of those program executions since the user can easily modify both
the functional and resource management parameters. In addition, the
Scipion API allowed for the automation and parallelization of all
of the tasks involved in the workflow. Finally, the use of new Scipion-chem
own tools, such as the consensus docking protocol, provides the user
with further resources and, together with the viewers and filter protocols,
can be helpful for the VDS process. In future works, we will keep
developing and integrating new tools. Specifically, we focus on improving
our consensus protocols in order to generate robust and reliable results
from the combination of several outputs.</p>
  </sec>
  <sec id="sec4">
    <label>4</label>
    <title>Implementation</title>
    <p>Scipion-chem is a Python-based
workflow package designed to work
as a plugin for Scipion, which is therefore necessary for its installation.
Then, Scipion-chem works as the core plugin for the rest of the chem
plugins. Today, 11 different plugins plus the core are available in
the Scipion-chem website (see <xref rid="fig13" ref-type="fig">Figure <xref rid="fig13" ref-type="fig">13</xref></xref>), with around 80 different protocols to be executed.
Still, we expect to continue to incorporate more plugins and protocols
in the future.</p>
    <fig id="fig13" position="float">
      <label>Figure 13</label>
      <caption>
        <p>Scipion-chem plugin schema. The red circle represents
the Scipion
workflow engine, which is made of three parts. The Scipion-chem core
plugin is a blue circle containing the main functionalities and tools
needed by the rest of the plugins, in green, which depend on it.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0013" id="gr8" position="float"/>
    </fig>
    <p>These plugins integrate the previously described
programs into
the workflow, which are currently mainly related to VDS and MD. Inside
Scipion, the user can visualize the workflows as a set of connected
boxes, each representing a protocol like the one we previously described.
These protocols can be found in various lists on the left-hand side
of the screen or by using a search operation. In <xref rid="fig14" ref-type="fig">Figure <xref rid="fig14" ref-type="fig">14</xref></xref>, an example of a VDS workflow
is shown following the schema in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. Inside each of these protocol boxes, the
different parameters governing the execution of the program can be
modified in the protocol form.</p>
    <fig id="fig14" position="float">
      <label>Figure 14</label>
      <caption>
        <p>Scipion-chem VDS workflow example following
the color convention
in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. The results
of this workflow are small molecules that have passed the ligand filters
and docked to the predicted pockets (structural ROIs) from the receptor.
The most promising pockets and docked poses are extracted using the
consensus protocols described above.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci3c01085_0014" id="gr9" position="float"/>
    </fig>
  </sec>
  <sec id="sec5">
    <label>5</label>
    <title>Conclusions</title>
    <p>The number of tools related
to VDS keeps growing each year, with
new or updated scripts and algorithms that try to solve specific parts
of the drug discovery process accurately. While this increasing number
of software offers high flexibility and possibilities, it also poses
a high difficulty barrier to users who must learn how to use each
of these programs, usually in combination. Hereby, we have presented
Scipion-chem, an open and interactive platform for VDS that eases
access to this software and provides interoperability among them.
Scipion-chem is built over the workflow engine Scipion, which provides
complete traceability and automation of the workflows and software
installation. Advanced users may work with a python API that enhances
the automatic and programmatic access to Scipion-chem tools. Finally,
the user can use different consensus tools that compare the results
from different software to extract the most relevant pieces of common
information.</p>
    <p>Even though Scipion-chem was born focused on VDS,
its name suggests
that it can be projected to a range of chemoinformatic fields. From
the Scipion team, we are already involved in expanding Scipion-chem
to MD (with already useable tools) and quantum mechanics, and we hope
to release new plugins related to these soon. We will keep working
on maintaining and offering new VDS-related tools such as ligand retrosynthetic
analysis or fragment-based screening.</p>
  </sec>
</body>
<back>
  <notes notes-type="COI-statement" id="notes1">
    <p>The authors
declare no competing financial interest.</p>
  </notes>
  <notes notes-type="" id="notes2">
    <title>Notes</title>
    <p>All discussed
Scipion-chem plugins can be found
openly available in <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/scipion-chem">https://github.com/scipion-chem</uri> as GitHub repositories. We encourage users to use them, check the
code, look for bugs, and actively provide us any feedback or suggestions
via GitHub or mail. Also, all the data discussed so far in this paper
are documented and can be found in the corresponding GitHub page <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scipion-chem.github.io/docs/publications/scipion-chem_vds">https://scipion-chem.github.io/docs/publications/scipion-chem_vds</uri>, which contains the importable workflows, the input data from DUD-E,
and all the results generated. Finally, a list of the software installed
by the referenced Scipion-chem plugins is detailed in this same documentation,
together with their versions and sources.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>This research work was funded by the European Commission—NextGenerationEU
(Regulation 2020/2094), through CSIĆs Global Health Platform
(PTI Salud Global) and an FPU (Formación de Profesorado Universitario)
grant from the Spanish Ministry of Education. In addition, we would
like to express our gratitude to Pedro Febrer, Aida Pinacho and Carlos
Roca for their contributions to the molecular dynamics section of
this project that provided a starting point for our work.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Leelananda</surname><given-names>S. P.</given-names></name>; <name><surname>Lindert</surname><given-names>S.</given-names></name><article-title>Computational Methods in Drug Discovery</article-title>. <source>Beilstein J. Org. Chem.</source><year>2016</year>, <volume>12</volume>, <fpage>2694</fpage>–<lpage>2718</lpage>. <pub-id pub-id-type="doi">10.3762/bjoc.12.267</pub-id>.<pub-id pub-id-type="pmid">28144341</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Lin</surname><given-names>X.</given-names></name>; <name><surname>Li</surname><given-names>X.</given-names></name>; <name><surname>Lin</surname><given-names>X.</given-names></name><article-title>A Review on
Applications of Computational Methods in
Drug Screening and Design</article-title>. <source>Molecules</source><year>2020</year>, <volume>25</volume>, <fpage>1375</fpage><pub-id pub-id-type="doi">10.3390/molecules25061375</pub-id>.<pub-id pub-id-type="pmid">32197324</pub-id></mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="journal" id="cit3"><name><surname>McInnes</surname><given-names>C.</given-names></name><article-title>Virtual Screening
Strategies in Drug Discovery</article-title>. <source>Curr. Opin. Chem.
Biol.</source><year>2007</year>, <volume>11</volume>, <fpage>494</fpage>–<lpage>502</lpage>. <pub-id pub-id-type="doi">10.1016/j.cbpa.2007.08.033</pub-id>.<pub-id pub-id-type="pmid">17936059</pub-id></mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Varela-Rial</surname><given-names>A.</given-names></name>; <name><surname>Majewski</surname><given-names>M.</given-names></name>; <name><surname>De Fabritiis</surname><given-names>G.</given-names></name><article-title>Structure
Based Virtual Screening:
Fast and Slow</article-title>. <source>Wiley Interdiscip. Rev.: Comput.
Mol. Sci.</source><year>2021</year>, <volume>12</volume>, <elocation-id>e1544</elocation-id><pub-id pub-id-type="doi">10.1002/wcms.1544</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="journal" id="cit8"><name><surname>Park</surname><given-names>H.</given-names></name>; <name><surname>Jeon</surname><given-names>J.</given-names></name>; <name><surname>Kim</surname><given-names>K.</given-names></name>; <name><surname>Choi</surname><given-names>S.</given-names></name>; <name><surname>Hong</surname><given-names>S.</given-names></name><article-title>Structure-Based
Virtual Screening and De Novo Design of PIM1 Inhibitors With Anticancer
Activity From Natural Products</article-title>. <source>Pharmaceuticals</source><year>2021</year>, <volume>14</volume>, <fpage>275</fpage><pub-id pub-id-type="doi">10.3390/ph14030275</pub-id>.<pub-id pub-id-type="pmid">33803840</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="journal" id="cit9"><name><surname>Klenner</surname><given-names>A.</given-names></name>; <name><surname>Hartenfeller</surname><given-names>M.</given-names></name>; <name><surname>Schneider</surname><given-names>P.</given-names></name>; <name><surname>Schneider</surname><given-names>G.</given-names></name><article-title>“Fuzziness”
in Pharmacophore-Based Virtual Screening and De Novo Design</article-title>. <source>Drug Discovery Today: Technol.</source><year>2010</year>, <volume>7</volume>, <fpage>e237</fpage>–<lpage>e244</lpage>. <pub-id pub-id-type="doi">10.1016/j.ddtec.2010.10.004</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="journal" id="cit10"><name><surname>Lill</surname><given-names>M. A.</given-names></name><article-title>Multi-Dimensional
QSAR in Drug Discovery</article-title>. <source>Drug Discovery Today</source><year>2007</year>, <volume>12</volume>, <fpage>1013</fpage>–<lpage>1017</lpage>. <pub-id pub-id-type="doi">10.1016/j.drudis.2007.08.004</pub-id>.<pub-id pub-id-type="pmid">18061879</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="journal" id="cit11"><name><surname>Neves</surname><given-names>B. J.</given-names></name>; <name><surname>Braga</surname><given-names>R. C.</given-names></name>; <name><surname>Melo-Filho</surname><given-names>C. C.</given-names></name>; <name><surname>Moreira-Filho</surname><given-names>J. T.</given-names></name>; <name><surname>Muratov</surname><given-names>E. N.</given-names></name>; <name><surname>Andrade</surname><given-names>C. H.</given-names></name><article-title>QSAR-Based Virtual
Screening: Advances
and Applications in Drug Discovery</article-title>. <source>Front. Pharmacol.</source><year>2018</year>, <volume>9</volume>, <fpage>1275</fpage><pub-id pub-id-type="doi">10.3389/fphar.2018.01275</pub-id>.<pub-id pub-id-type="pmid">30524275</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="journal" id="cit12"><name><surname>Repasky</surname><given-names>M. P.</given-names></name>; <name><surname>Shelley</surname><given-names>M.</given-names></name>; <name><surname>Friesner</surname><given-names>R. A.</given-names></name><article-title>Flexible Ligand
Docking With Glide</article-title>. <source>Curr. Protoc. Bioinf.</source><year>2007</year>, <volume>18</volume>, <fpage>8</fpage>–<lpage>12</lpage>. <pub-id pub-id-type="doi">10.1002/0471250953.bi0812s18</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="journal" id="cit13"><name><surname>Forli</surname><given-names>S.</given-names></name>; <name><surname>Huey</surname><given-names>R.</given-names></name>; <name><surname>Pique</surname><given-names>M. E.</given-names></name>; <name><surname>Sanner</surname><given-names>M. F.</given-names></name>; <name><surname>Goodsell</surname><given-names>D. S.</given-names></name>; <name><surname>Olson</surname><given-names>A. J.</given-names></name><article-title>Computational Protein-Ligand
Docking and Virtual Drug
Screening With the AutoDock Suite</article-title>. <source>Nat. Protoc.</source><year>2016</year>, <volume>11</volume>, <fpage>905</fpage>–<lpage>919</lpage>. <pub-id pub-id-type="doi">10.1038/nprot.2016.051</pub-id>.<pub-id pub-id-type="pmid">27077332</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="conf-proc" id="cit14"><person-group person-group-type="allauthors"><name><surname>Liu</surname><given-names>N.</given-names></name>; <name><surname>Xu</surname><given-names>Z.</given-names></name></person-group><article-title>Using LeDock as
a Docking Tool
for Computational Drug Design</article-title>. <source>IOP Conference
Series: Earth and Environmental Science</source>, <year>2019</year>; p <fpage>012143</fpage>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="journal" id="cit15"><name><surname>Le
Guilloux</surname><given-names>V.</given-names></name>; <name><surname>Schmidtke</surname><given-names>P.</given-names></name>; <name><surname>Tuffery</surname><given-names>P.</given-names></name><article-title>Fpocket: An Open Source
Platform for Ligand Pocket Detection</article-title>. <source>BMC Bioinf.</source><year>2009</year>, <volume>10</volume>, <fpage>168</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-10-168</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="journal" id="cit16"><name><surname>Krivák</surname><given-names>R.</given-names></name>; <name><surname>Hoksza</surname><given-names>D.</given-names></name><article-title>P2Rank: Machine Learning Based Tool
for Rapid and Accurate
Prediction of Ligand Binding Sites From Protein Structure</article-title>. <source>J. Cheminf.</source><year>2018</year>, <volume>10</volume>, <fpage>39</fpage><pub-id pub-id-type="doi">10.1186/s13321-018-0285-8</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>de
la Rosa-Trevín</surname><given-names>J.</given-names></name>; <name><surname>Quintana</surname><given-names>A.</given-names></name>; <name><surname>del Cano</surname><given-names>L.</given-names></name>; <name><surname>Zaldívar</surname><given-names>A.</given-names></name>; <name><surname>Foche</surname><given-names>I.</given-names></name>; <name><surname>Gutiérrez</surname><given-names>J.</given-names></name>; <name><surname>Gómez-Blanco</surname><given-names>J.</given-names></name>; <name><surname>Burguet-Castell</surname><given-names>J.</given-names></name>; <name><surname>Cuenca-Alba</surname><given-names>J.</given-names></name>; <name><surname>Abrishami</surname><given-names>V.</given-names></name>; et al. <article-title>Scipion: A Software Framework Toward Integration, Reproducibility
and Validation in 3D Electron Microscopy</article-title>. <source>J.
Struct. Biol.</source><year>2016</year>, <volume>195</volume>, <fpage>93</fpage>–<lpage>99</lpage>. <pub-id pub-id-type="doi">10.1016/j.jsb.2016.04.010</pub-id>.<pub-id pub-id-type="pmid">27108186</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>de la
Morena</surname><given-names>J. J.</given-names></name>; <name><surname>Sharov</surname><given-names>G.</given-names></name>; <name><surname>de la Rosa-Trevín</surname><given-names>J. M.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Mena</surname><given-names>A. G.</given-names></name>; <name><surname>de Francisco</surname><given-names>B. R.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name><article-title>Scipion3: A Workflow Engine for Cryo-Electron
Microscopy Image Processing and Structural Biology</article-title>. <source>Biol. Imaging</source><year>2023</year>, <volume>3</volume>, <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1017/S2633903X23000132</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Krieger</surname><given-names>J. M.</given-names></name>; <name><surname>Sorzano</surname><given-names>C. O. S.</given-names></name>; <name><surname>Carazo</surname><given-names>J. M.</given-names></name><article-title>Scipion-EM-ProDy:
A Graphical Interface
for the ProDy Python Package within the Scipion Workflow Engine Enabling
Integration of Databases, Simulations and Cryo-Electron Microscopy
Image Processing</article-title>. <source>Int. J. Mol. Sci.</source><year>2023</year>, <volume>24</volume>, <fpage>14245</fpage><pub-id pub-id-type="doi">10.3390/ijms241814245</pub-id>.<pub-id pub-id-type="pmid">37762547</pub-id></mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>O’Boyle</surname><given-names>N. M.</given-names></name>; <name><surname>Banck</surname><given-names>M.</given-names></name>; <name><surname>James</surname><given-names>C. A.</given-names></name>; <name><surname>Morley</surname><given-names>C.</given-names></name>; <name><surname>Vandermeersch</surname><given-names>T.</given-names></name>; <name><surname>Hutchison</surname><given-names>G. R.</given-names></name><article-title>Open Babel: An Open Chemical Toolbox</article-title>. <source>J. Cheminf.</source><year>2011</year>, <volume>3</volume>, <fpage>33</fpage><pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>Landrum</surname><given-names>G.</given-names></name><article-title>RDKit: A Software
Suite for Cheminformatics, Computational Chemistry, and Predictive
Modeling</article-title>. <source>Greg Landrum</source><year>2013</year>, <volume>8</volume>, <fpage>31</fpage><pub-id pub-id-type="doi">10.5281/zenodo.7541264</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Cock</surname><given-names>P. J. A.</given-names></name>; <name><surname>Antao</surname><given-names>T.</given-names></name>; <name><surname>Chang</surname><given-names>J. T.</given-names></name>; <name><surname>Chapman</surname><given-names>B. A.</given-names></name>; <name><surname>Cox</surname><given-names>C. J.</given-names></name>; <name><surname>Dalke</surname><given-names>A.</given-names></name>; <name><surname>Friedberg</surname><given-names>I.</given-names></name>; <name><surname>Hamelryck</surname><given-names>T.</given-names></name>; <name><surname>Kauff</surname><given-names>F.</given-names></name>; <name><surname>Wilczynski</surname><given-names>B.</given-names></name>; et al. <article-title>Biopython: Freely Available
Python Tools for Computational Molecular Biology and Bioinformatics</article-title>. <source>Bioinformatics</source><year>2009</year>, <volume>25</volume>, <fpage>1422</fpage>–<lpage>1423</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp163</pub-id>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Rew</surname><given-names>Y.</given-names></name>; <name><surname>Sun</surname><given-names>D.</given-names></name>; <name><surname>Gonzalez-Lopez De Turiso</surname><given-names>F.</given-names></name>; <name><surname>Bartberger</surname><given-names>M. D.</given-names></name>; <name><surname>Beck</surname><given-names>H. P.</given-names></name>; <name><surname>Canon</surname><given-names>J.</given-names></name>; <name><surname>Chen</surname><given-names>A.</given-names></name>; <name><surname>Chow</surname><given-names>D.</given-names></name>; <name><surname>Deignan</surname><given-names>J.</given-names></name>; <name><surname>Fox</surname><given-names>B. M.</given-names></name>; et al. <article-title>Structure-Based Design
of Novel Inhibitors of the MDM2-p53 Interaction</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>4936</fpage>–<lpage>4954</lpage>. <pub-id pub-id-type="doi">10.1021/jm300354j</pub-id>.<pub-id pub-id-type="pmid">22524527</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="journal" id="cit21"><name><surname>Berman</surname><given-names>H. M.</given-names></name><article-title>The Protein
Data Bank</article-title>. <source>Nucleic Acids Res.</source><year>2000</year>, <volume>28</volume>, <fpage>235</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>.<pub-id pub-id-type="pmid">10592235</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <mixed-citation publication-type="journal" id="cit22"><name><surname>Jumper</surname><given-names>J.</given-names></name>; <name><surname>Evans</surname><given-names>R.</given-names></name>; <name><surname>Pritzel</surname><given-names>A.</given-names></name>; <name><surname>Green</surname><given-names>T.</given-names></name>; <name><surname>Figurnov</surname><given-names>M.</given-names></name>; <name><surname>Ronneberger</surname><given-names>O.</given-names></name>; <name><surname>Tunyasuvunakool</surname><given-names>K.</given-names></name>; <name><surname>Bates</surname><given-names>R.</given-names></name>; <name><surname>Žídek</surname><given-names>A.</given-names></name>; <name><surname>Potapenko</surname><given-names>A.</given-names></name>; et al. <article-title>Highly Accurate Protein Structure Prediction
With AlphaFold</article-title>. <source>Nature</source><year>2021</year>, <volume>596</volume>, <fpage>583</fpage>–<lpage>589</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-021-03819-2</pub-id>.<pub-id pub-id-type="pmid">34265844</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="journal" id="cit23"><name><surname>Martínez</surname><given-names>M.</given-names></name>; <name><surname>Jiménez-Moreno</surname><given-names>A.</given-names></name>; <name><surname>Maluenda</surname><given-names>D.</given-names></name>; <name><surname>Ramírez-Aportela</surname><given-names>E.</given-names></name>; <name><surname>Melero</surname><given-names>R.</given-names></name>; <name><surname>Cuervo</surname><given-names>A.</given-names></name>; <name><surname>Conesa</surname><given-names>P.</given-names></name>; <name><surname>del Caño</surname><given-names>L.</given-names></name>; <name><surname>Fonseca</surname><given-names>Y. C.</given-names></name>; <name><surname>Sánchez-García</surname><given-names>R.</given-names></name>; et al. <article-title>Integration of Cryo-EM Model Building Software in Scipion</article-title>. <source>J. Chem. Inf. Model.</source><year>2020</year>, <volume>60</volume>, <fpage>2533</fpage>–<lpage>2540</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jcim.9b01032</pub-id>.<pub-id pub-id-type="pmid">31994878</pub-id></mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="journal" id="cit24"><name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>ZINC—A Free Database of Commercially Available
Compounds for Virtual Screening</article-title>. <source>J. Chem. Inf.
Model.</source><year>2005</year>, <volume>45</volume>, <fpage>177</fpage>–<lpage>182</lpage>. <pub-id pub-id-type="doi">10.1021/ci049714+</pub-id>.<pub-id pub-id-type="pmid">15667143</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="journal" id="cit25"><name><surname>Meiners</surname><given-names>T.</given-names></name>; <name><surname>Stechmann</surname><given-names>B.</given-names></name>; <name><surname>Frank</surname><given-names>R.</given-names></name><article-title>EU-OPENSCREEN—Chemical Tools
for the Study of Plant Biology and Resistance Mechanisms</article-title>. <source>J. Chem. Biol.</source><year>2014</year>, <volume>7</volume>, <fpage>113</fpage>–<lpage>118</lpage>. <pub-id pub-id-type="doi">10.1007/s12154-014-0118-9</pub-id>.<pub-id pub-id-type="pmid">25320643</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <mixed-citation publication-type="journal" id="cit26"><name><surname>Kim</surname><given-names>S.</given-names></name>; <name><surname>Thiessen</surname><given-names>P. A.</given-names></name>; <name><surname>Bolton</surname><given-names>E. E.</given-names></name>; <name><surname>Chen</surname><given-names>J.</given-names></name>; <name><surname>Fu</surname><given-names>G.</given-names></name>; <name><surname>Gindulyte</surname><given-names>A.</given-names></name>; <name><surname>Han</surname><given-names>L.</given-names></name>; <name><surname>He</surname><given-names>J.</given-names></name>; <name><surname>He</surname><given-names>S.</given-names></name>; <name><surname>Shoemaker</surname><given-names>B. A.</given-names></name>; <name><surname>Wang</surname><given-names>J.</given-names></name>; <name><surname>Yu</surname><given-names>B.</given-names></name>; <name><surname>Zhang</surname><given-names>J.</given-names></name>; <name><surname>Bryant</surname><given-names>S. H.</given-names></name><article-title>PubChem
Substance and Compound Databases</article-title>. <source>Nucleic Acids
Res.</source><year>2016</year>, <volume>44</volume>, <fpage>D1202</fpage>–<lpage>D1213</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv951</pub-id>.<pub-id pub-id-type="pmid">26400175</pub-id></mixed-citation>
    </ref>
    <ref id="ref27">
      <mixed-citation publication-type="journal" id="cit27"><name><surname>Gaulton</surname><given-names>A.</given-names></name>; <name><surname>Hersey</surname><given-names>A.</given-names></name>; <name><surname>Nowotka</surname><given-names>M.</given-names></name>; <name><surname>Bento</surname><given-names>A. P.</given-names></name>; <name><surname>Chambers</surname><given-names>J.</given-names></name>; <name><surname>Mendez</surname><given-names>D.</given-names></name>; <name><surname>Mutowo</surname><given-names>P.</given-names></name>; <name><surname>Atkinson</surname><given-names>F.</given-names></name>; <name><surname>Bellis</surname><given-names>L. J.</given-names></name>; <name><surname>Cibrián-Uhalte</surname><given-names>E.</given-names></name>; et al. <article-title>The ChEMBL Database
in 2017</article-title>. <source>Nucleic Acids Res.</source><year>2016</year>, <volume>45</volume>, <fpage>D945</fpage>–<lpage>D954</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkw1074</pub-id>.<pub-id pub-id-type="pmid">27899562</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <mixed-citation publication-type="journal" id="cit28"><name><surname>Liu</surname><given-names>T.</given-names></name>; <name><surname>Lin</surname><given-names>Y.</given-names></name>; <name><surname>Wen</surname><given-names>X.</given-names></name>; <name><surname>Jorissen</surname><given-names>R. N.</given-names></name>; <name><surname>Gilson</surname><given-names>M. K.</given-names></name><article-title>BindingDB: A Web-Accessible
Database of Experimentally Determined Protein-Ligand Binding Affinities</article-title>. <source>Nucleic Acids Res.</source><year>2007</year>, <volume>35</volume>, <fpage>D198</fpage>–<lpage>D201</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkl999</pub-id>.<pub-id pub-id-type="pmid">17145705</pub-id></mixed-citation>
    </ref>
    <ref id="ref29">
      <mixed-citation publication-type="journal" id="cit29"><name><surname>Krause</surname><given-names>S.</given-names></name>; <name><surname>Willighagen</surname><given-names>E.</given-names></name>; <name><surname>Steinbeck</surname><given-names>C.</given-names></name><article-title>JChemPaint - Using the Collaborative
Forces of the Internet to Develop a Free Editor for 2D Chemical Structures</article-title>. <source>Molecules</source><year>2000</year>, <volume>5</volume>, <fpage>93</fpage>–<lpage>98</lpage>. <pub-id pub-id-type="doi">10.3390/50100093</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref30">
      <mixed-citation publication-type="journal" id="cit30"><name><surname>Taminau</surname><given-names>J.</given-names></name>; <name><surname>Thijs</surname><given-names>G.</given-names></name>; <name><surname>De Winter</surname><given-names>H.</given-names></name><article-title>Pharao: Pharmacophore
Alignment and
Optimization</article-title>. <source>J. Mol. Graphics Modell.</source><year>2008</year>, <volume>27</volume>, <fpage>161</fpage>–<lpage>169</lpage>. <pub-id pub-id-type="doi">10.1016/j.jmgm.2008.04.003</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref31">
      <mixed-citation publication-type="journal" id="cit31"><name><surname>He</surname><given-names>K.</given-names></name><article-title>Pharmacological
Affinity Fingerprints Derived From Bioactivity Data for the Identification
of Designer Drugs</article-title>. <source>J. Cheminf.</source><year>2022</year>, <volume>14</volume>, <fpage>35</fpage><pub-id pub-id-type="doi">10.1186/s13321-022-00607-6</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref32">
      <mixed-citation publication-type="book" id="cit32"><person-group person-group-type="allauthors"><name><surname>Horvath</surname><given-names>D.</given-names></name></person-group><source>Chemoinformatics and
Computational Chemical Biology</source>; <person-group person-group-type="editor"><name><surname>Bajorath</surname><given-names>J.</given-names></name></person-group>, Ed.; <publisher-name>Humana
Press</publisher-name>: <publisher-loc>Totowa, NJ</publisher-loc>, <year>2011</year>; pp <fpage>261</fpage>–<lpage>298</lpage>.</mixed-citation>
    </ref>
    <ref id="ref33">
      <mixed-citation publication-type="journal" id="cit33"><name><surname>Salentin</surname><given-names>S.</given-names></name>; <name><surname>Schreiber</surname><given-names>S.</given-names></name>; <name><surname>Haupt</surname><given-names>V. J.</given-names></name>; <name><surname>Adasme</surname><given-names>M. F.</given-names></name>; <name><surname>Schroeder</surname><given-names>M.</given-names></name><article-title>PLIP: Fully
Automated Protein–Ligand Interaction Profiler</article-title>. <source>Nucleic Acids Res.</source><year>2015</year>, <volume>43</volume>, <fpage>W443</fpage>–<lpage>W447</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv315</pub-id>.<pub-id pub-id-type="pmid">25873628</pub-id></mixed-citation>
    </ref>
    <ref id="ref34">
      <mixed-citation publication-type="journal" id="cit34"><name><surname>Van
Der Spoel</surname><given-names>D.</given-names></name>; <name><surname>Lindahl</surname><given-names>E.</given-names></name>; <name><surname>Hess</surname><given-names>B.</given-names></name>; <name><surname>Groenhof</surname><given-names>G.</given-names></name>; <name><surname>Mark</surname><given-names>A. E.</given-names></name>; <name><surname>Berendsen</surname><given-names>H. J.</given-names></name><article-title>GROMACS: Fast, Flexible, and Free</article-title>. <source>J. Comput. Chem.</source><year>2005</year>, <volume>26</volume>, <fpage>1701</fpage>–<lpage>1718</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.20291</pub-id>.<pub-id pub-id-type="pmid">16211538</pub-id></mixed-citation>
    </ref>
    <ref id="ref35">
      <mixed-citation publication-type="journal" id="cit35"><name><surname>Salomon-Ferrer</surname><given-names>R.</given-names></name>; <name><surname>Case</surname><given-names>D. A.</given-names></name>; <name><surname>Walker</surname><given-names>R. C.</given-names></name><article-title>An Overview of the Amber Biomolecular
Simulation Package</article-title>. <source>Wiley Interdiscip. Rev.:
Comput. Mol. Sci.</source><year>2013</year>, <volume>3</volume>, <fpage>198</fpage>–<lpage>210</lpage>. <pub-id pub-id-type="doi">10.1002/wcms.1121</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref36">
      <mixed-citation publication-type="journal" id="cit36"><name><surname>Eastman</surname><given-names>P.</given-names></name>; <name><surname>Swails</surname><given-names>J.</given-names></name>; <name><surname>Chodera</surname><given-names>J. D.</given-names></name>; <name><surname>McGibbon</surname><given-names>R. T.</given-names></name>; <name><surname>Zhao</surname><given-names>Y.</given-names></name>; <name><surname>Beauchamp</surname><given-names>K. A.</given-names></name>; <name><surname>Wang</surname><given-names>L.-P.</given-names></name>; <name><surname>Simmonett</surname><given-names>A. C.</given-names></name>; <name><surname>Harrigan</surname><given-names>M. P.</given-names></name>; <name><surname>Stern</surname><given-names>C. D.</given-names></name>; et al. <article-title>OpenMM 7: Rapid Development
of High Performance Algorithms for Molecular Dynamics</article-title>. <source>PLoS Comput. Biol.</source><year>2017</year>, <volume>13</volume>, <elocation-id>e1005659</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005659</pub-id>.<pub-id pub-id-type="pmid">28746339</pub-id></mixed-citation>
    </ref>
    <ref id="ref37">
      <mixed-citation publication-type="journal" id="cit37"><name><surname>Mysinger</surname><given-names>M. M.</given-names></name>; <name><surname>Carchia</surname><given-names>M.</given-names></name>; <name><surname>Irwin</surname><given-names>J. J.</given-names></name>; <name><surname>Shoichet</surname><given-names>B. K.</given-names></name><article-title>Directory of Useful
Decoys, Enhanced (DUD-E): Better Ligands and Decoys for Better Benchmarking</article-title>. <source>J. Med. Chem.</source><year>2012</year>, <volume>55</volume>, <fpage>6582</fpage>–<lpage>6594</lpage>. <pub-id pub-id-type="doi">10.1021/jm300687e</pub-id>.<pub-id pub-id-type="pmid">22716043</pub-id></mixed-citation>
      <note>
        <p>Accessed: 2023-09-24</p>
      </note>
    </ref>
    <ref id="ref38">
      <mixed-citation publication-type="report" id="cit38"><person-group person-group-type="allauthors"><name><surname>Jacobson</surname><given-names>B. L.</given-names></name></person-group><source>Crystal
Structure
of Human Adipocyte Fatty Acid Binding Protein in Complex with ((2′-(5-ethyl-3,
4-diphenyl-1H-pyrazol-1-yl)-3-biphenylyl)oxy)acetic Acid</source>, <year>2007</year>. <pub-id pub-id-type="doi">10.2210/pdb2nnq/pdb</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>

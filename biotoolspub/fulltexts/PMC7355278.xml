<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7355278</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa465</article-id>
    <article-id pub-id-type="publisher-id">btaa465</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Population Genomics and Molecular Evolution</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Inference of population admixture network from local gene genealogies: a coalescent-based maximum likelihood approach</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-4988-3521</contrib-id>
        <name>
          <surname>Wu</surname>
          <given-names>Yufeng</given-names>
        </name>
        <xref ref-type="aff" rid="btaa465-aff1"/>
        <xref ref-type="corresp" rid="btaa465-cor1"/>
        <!--<email>yufeng.wu@uconn.edu</email>-->
      </contrib>
    </contrib-group>
    <aff id="btaa465-aff1"><institution>Department of Computer Science and Engineering, University of Connecticut</institution>, Storrs, CT 06269, <country country="US">USA</country></aff>
    <author-notes>
      <corresp id="btaa465-cor1">E-mail: <email>yufeng.wu@uconn.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-07-13">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>13</day>
      <month>7</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>Suppl 1</issue>
    <issue-title>ISMB 2020 Proceedings</issue-title>
    <fpage>i326</fpage>
    <lpage>i334</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa465.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Population admixture is an important subject in population genetics. Inferring population demographic history with admixture under the so-called admixture network model from population genetic data is an established problem in genetics. Existing admixture network inference approaches work with single genetic polymorphisms. While these methods are usually very fast, they do not fully utilize the information [e.g. linkage disequilibrium (LD)] contained in population genetic data.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>In this article, we develop a new admixture network inference method called GTmix. Different from existing methods, GTmix works with local gene genealogies that can be inferred from population haplotypes. Local gene genealogies represent the evolutionary history of sampled haplotypes and contain the LD information. GTmix performs coalescent-based maximum likelihood inference of admixture networks with inferred local genealogies based on the well-known multispecies coalescent (MSC) model. GTmix utilizes various techniques to speed up the likelihood computation on the MSC model and the optimal network search. Our simulations show that GTmix can infer more accurate admixture networks with much smaller data than existing methods, even when these existing methods are given much larger data. GTmix is reasonably efficient and can analyze population genetic datasets of current interests.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>The program GTmix is available for download at: <ext-link ext-link-type="uri" xlink:href="https://github.com/yufengwudcs/GTmix">https://github.com/yufengwudcs/GTmix</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>CCF-1718093</award-id>
        <award-id>IIS-1909425</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Population demographic history is a complex interplay of various processes, such as population divergence and isolation, population size changes, migration and admixture. The simplest population demographic history model is the population tree model (similar to phylogenetic tree for species evolution on the high level), which only models population divergence. In practice, however, the population tree model is often too simplistic for most population genetic study. One key missing aspect of the population tree model is gene flow. In this article, we focus on population admixture, which is one of the most important types of gene flow. Population admixture is often so widespread that admixture has to be addressed in most demographic history studies. Human populations for example are known to be strongly influenced by admixture throughout the human history (<xref rid="btaa465-B14" ref-type="bibr">Patterson <italic>et al.</italic>, 2012</xref>; <xref rid="btaa465-B17" ref-type="bibr">Price <italic>et al.</italic>, 2007</xref>). When admixture is considered, population history becomes a network (called admixture network). In addition to modeling population divergence, admixture network has admixture nodes that model admixture events. See <xref ref-type="fig" rid="btaa465-F1">Figure 1a</xref> for an illustration of admixture network.
</p>
    <fig id="btaa465-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Illustration of admixture network. (<bold>a</bold>) An admixture network. Four populations. <italic>C</italic> is admixed. (<bold>b</bold>) and (<bold>c</bold>) Two population trees in this network. (<bold>d</bold>) and (<bold>e</bold>) Two gene genealogies, each from a different loci. Leaves of gene genealogies: population haplotypes. Two sampled haplotypes per population: haplotypes <italic>a</italic><sub>1</sub> and <italic>a</italic><sub>2</sub> are from the population <italic>A</italic>, haplotypes <italic>b</italic><sub>1</sub> and <italic>b</italic><sub>2</sub> are from the population <italic>B</italic> and so on. Darkened dots: mutations (following infinite sites model). (<bold>f</bold>) Haplotypes for the two genealogies</p>
      </caption>
      <graphic xlink:href="btaa465f1"/>
    </fig>
    <p>As demographic history is not directly observable, it is highly desirable to infer population history with admixture (i.e. admixture network) from extant population genetic data (<xref rid="btaa465-B9" ref-type="bibr">Lipson <italic>et al.</italic>, 2013</xref>; <xref rid="btaa465-B16" ref-type="bibr">Pickrell and Pritchard, 2012</xref>). Inferring admixture networks from population genetic data is challenging computationally. First, the space of admixture networks can be very large even for moderate number (say ten) of populations and small number (say two) of admixture events. There are over 34 million rooted binary trees with ten taxa. With admixture, the number of possible networks is very large (see, e.g. <xref rid="btaa465-B2" ref-type="bibr">Cardona and Zhang, 2020</xref>). Moreover, the effect of admixture on population genetic data is subtle and is not easily detectable. Meiotic recombination further complicates the situation by breaking the linkage between genetic polymorphisms.</p>
    <p>A natural population genetic model for admixture network inference is the coalescent model (<xref rid="btaa465-B8" ref-type="bibr">Kingman, 1982</xref>). Coalescent process determines stochastically how sampled alleles coalesce in a population. As there are multiple populations in an admixture network, the underlying coalescent is the multispecies coalescent (MSC). MSC is the fundamental genetic model for the study of multiple closely related populations (species) (<xref rid="btaa465-B19" ref-type="bibr">Rosenberg, 2002</xref>). MSC can be extended to allow gene flow (see, e.g. <xref rid="btaa465-B28" ref-type="bibr">Yu <italic>et al.</italic>, 2012</xref>). Under the MSC model, one can (at least in principle) perform likelihood-based inference of admixture networks. However, inference based on MSC is computationally intensive (<xref rid="btaa465-B19" ref-type="bibr">Rosenberg, 2002</xref>). Therefore, existing methods for inferring admixture networks usually perform inference with allele frequencies at individual polymorphic sites on somewhat simplified genetic models. For example, the TreeMix approach (<xref rid="btaa465-B16" ref-type="bibr">Pickrell and Pritchard, 2012</xref>) infers admixture networks from allele frequency data based on a Gaussian approximation of genetic drift. MixMapper (<xref rid="btaa465-B9" ref-type="bibr">Lipson <italic>et al.</italic>, 2013</xref>), another method for network inference, has similar high-level approach as TreeMix. Both TreeMix and MixMapper are fast to handle large genetic data and can be useful for admixture network inference. However, there are several downsides of these existing methods. First, only working with allele frequencies at individual polymorphisms may potentially lose information, especially the linkage disequilibrium (LD) among nearby sites. Moreover, these approaches are based on approximations of the underlying genealogical process, which may not very accurately model the MSC process. Our experience indicates that TreeMix and MixMapper, while useful, do not provide very accurate inference results in some of our simulations.</p>
    <p>In this article, we present a new method for inferring admixture networks from population genetic data. Our new method is named GTmix (which stands for <underline>G</underline>ene <underline>T</underline>ree-based ad<underline>mix</underline>ture network inference). The following summarizes the main features of GTmix.
</p>
    <list list-type="order">
      <list-item>
        <p>GTmix works with haplotypes, rather than individual polymorphisms. This allows GTmix to exploit the LD information in genetic data, which is not considered by TreeMix and MixMapper. GTmix does not directly perform inference from haplotypes. Instead, GTmix takes input in the form of gene genealogies <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> that are <italic>inferred</italic> from the given haplotypes. Here, <italic>T<sub>i</sub></italic> is the inferred gene genealogy at a site <italic>s<sub>i</sub></italic>, which represents the evolutionary history of haplotypes at <italic>s<sub>i</sub></italic>. Due to recombination, genealogies at different loci may be different. Gene genealogy is arguably more informative than individual genetic polymorphisms. Even though a genealogy <italic>T<sub>i</sub></italic> is only for a specific site <italic>s<sub>i</sub></italic>, genealogies at nearby sites tend to be similar and thus implicitly contain the LD information. A traditional view in population genetics is that while gene genealogy is informative, there is little power in inferring gene genealogies from genetic data largely due to recombination (see, e.g. <xref rid="btaa465-B23" ref-type="bibr">Wilson and McVean, 2006</xref>). Recently, however, local genealogy inference is being actively studied and applied in population genetics. There are several existing tools for inferring gene genealogies from population haplotypes (<xref rid="btaa465-B7" ref-type="bibr">Kelleher <italic>et al.</italic>, 2019</xref>; <xref rid="btaa465-B11" ref-type="bibr">Mirzaei and Wu, 2017</xref>; <xref rid="btaa465-B18" ref-type="bibr">Rasmussen <italic>et al.</italic>, 2014</xref>; <xref rid="btaa465-B20" ref-type="bibr">Speidel <italic>et al.</italic>, 2019</xref>). Among these tools, RENT+ (<xref rid="btaa465-B11" ref-type="bibr">Mirzaei and Wu, 2017</xref>; <xref rid="btaa465-B24" ref-type="bibr">Wu, 2011</xref>) is efficient and easy to use. So we use RENT+ for local genealogy inference in this article.</p>
      </list-item>
      <list-item>
        <p>GTmix is a maximum likelihood approach: it aims at finding an admixture network <inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is maximized. Here, <inline-formula id="IE4"><mml:math id="IM4"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:munderover><mml:mi mathvariant="normal">P</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (based on the assumption the independence of each <italic>T<sub>i</sub></italic>). <inline-formula id="IE5"><mml:math id="IM5"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the probability of observing the genealogy <italic>T<sub>i</sub></italic> for the admixture network <inline-formula id="IE6"><mml:math id="IM6"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> under the MSC with admixture (MSCA) model. In general, computing <inline-formula id="IE7"><mml:math id="IM7"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> under the MSCA model is computationally challenging. Building on the recent algorithmic progress in efficient probability computation on the MSC model (<xref rid="btaa465-B15" ref-type="bibr">Pei and Wu, 2017</xref>; <xref rid="btaa465-B25" ref-type="bibr">Wu, 2012</xref>, <xref rid="btaa465-B27" ref-type="bibr">2016</xref>), GTmix implements several approaches to speed-up the likelihood computation on the MSCA model. By working on the MSCA model, GTmix performs admixture network inference on an arguably more rigorous model than existing methods (such as TreeMix).</p>
      </list-item>
      <list-item>
        <p>GTmix can be configured to infer admixture networks with arbitrary number of admixture events, although the running time will be longer with larger number of admixture events. It can infer recent admixture (i.e. that forms an extant population) and also ancient admixture (i.e. that forms an ancestral population). GTmix is reasonably efficient computationally. In phylogenetics, there exists methods [most notably the program Phylonet (<xref rid="btaa465-B22" ref-type="bibr">Wen <italic>et al.</italic>, 2018</xref>)] for inferring phylogenetic networks (somewhat related to admixture networks) based on the MSCA model. Our experience indicates that GTmix can perform likelihood-based inference on data with significantly larger number of taxa and haplotypes than what are allowed by existing approaches such as Phylonet.</p>
      </list-item>
    </list>
    <p>Through simulation, we show that while GTmix is not as fast as existing methods such as TreeMix, GTmix is more accurate than existing methods in most simulations we performed. In particular, GTmix can infer more accurate admixture networks under most settings using much smaller data than existing methods, even when those existing methods use much larger data than GTmix. Our results suggest that inferred genealogies can indeed be informative for population demographic history inference. Also coalescent-based probabilistic inference with local genealogies can potentially be more accurate than existing methods using single polymorphisms.</p>
  </sec>
  <sec>
    <title>2 Background</title>
    <sec>
      <title>2.1 Admixture network</title>
      <p>Admixture network is conceptually similar to phylogenetic network as studied in the Phylogenetics literature (<xref rid="btaa465-B6" ref-type="bibr">Huson <italic>et al.</italic>, 2010</xref>; <xref rid="btaa465-B12" ref-type="bibr">Morrison, 2011</xref>). Admixture network is a natural extension to the population tree model (see, e.g. <xref rid="btaa465-B26" ref-type="bibr">Wu, 2015</xref>). Admixture network (or simply network) is a directed acyclic graph <inline-formula id="IE8"><mml:math id="IM8"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, and is leaf-labeled by a set of populations. Moreover,
</p>
      <list list-type="order">
        <list-item>
          <p>Admixture nodes are nodes in <inline-formula id="IE9"><mml:math id="IM9"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> with two incoming edges. The two ancestral nodes of an admixture node are called the source populations.</p>
        </list-item>
        <list-item>
          <p>For a network <inline-formula id="IE10"><mml:math id="IM10"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, when only <italic>one</italic> of the incoming edges of each admixture node is kept and the other is deleted, we always obtain a tree <italic>T</italic>. This tree is called the population tree. There can be multiple populations trees contained in a network.</p>
        </list-item>
      </list>
      <p>Note that in admixture network, a node refers to a population. An admixed node has two incoming edges, which originate from two source populations of the admixed population. Thus, for an admixture node <italic>v</italic> in a network, there are two ancestral nodes: the left parent [denoted as <italic>Left</italic>(<italic>v</italic>)] and the right parent [denoted as <italic>Right</italic>(<italic>v</italic>)]. Throughout this article, we assume each admixture is two-way (i.e. formed by two ancestral populations). More general admixture (involving three or more ancestral populations) can in principle be modeled as a chain of two-way admixture events.</p>
      <p><italic>Population tree</italic>. Recall that a population tree <italic>T</italic> is contained in a network <inline-formula id="IE11"><mml:math id="IM11"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> when we remove one of the two incoming edges at each admixture node. Suppose there are <italic>n</italic><sub>a</sub> admixture nodes in <inline-formula id="IE12"><mml:math id="IM12"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. There are <inline-formula id="IE13"><mml:math id="IM13"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> population trees contained in <inline-formula id="IE14"><mml:math id="IM14"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. For example, in <xref ref-type="fig" rid="btaa465-F1">Figure 1</xref>, there are two population trees contained in the network, as shown in <xref ref-type="fig" rid="btaa465-F1">Figure 1d and e</xref>. Note that population trees do not capture all the possible demographic histories in <inline-formula id="IE15"><mml:math id="IM15"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. This is because population tree assumes that all lineages from an admixed population follow either the left or right admixture branches when coalescing at a locus. But this is not necessarily the case at an admixture event. Despite this shortcoming, GTmix relies on population trees for likelihood computation because it is computationally more efficient to work with population trees than with a network.</p>
      <p><italic>Branch length</italic>. Branches in a network have lengths in the standard coalescent units. In this article, we assume population sizes remain constant within a single branch of <inline-formula id="IE16"><mml:math id="IM16"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. Note that different branches may have different population sizes. The admixture network model accommodates this using the standard coalescent unit (which converts the absolute time to the number of generations based on the effective population size) for branch lengths in the network, rather than the absolute time.</p>
      <p><italic>Admixture proportions</italic>. At each admixture node <italic>v</italic>, there is an admixture proportion <inline-formula id="IE17"><mml:math id="IM17"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE18"><mml:math id="IM18"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE19"><mml:math id="IM19"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> refers to the proportion of alleles of population <italic>v</italic> originating from the left parent <italic>Left</italic>(<italic>v</italic>). <inline-formula id="IE20"><mml:math id="IM20"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1.0</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the proportion of alleles of <italic>v</italic> from the right parent.</p>
      <p><italic>Genealogy and multispecies coalescent</italic>. Gene genealogy and MSC are central to GTmix. Due to the lack of the space, relevant background information is given in <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref>.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Materials and methods</title>
    <sec>
      <title>3.1 The high-level approach of GTmix</title>
      <p>We assume haplotypes <inline-formula id="IE21"><mml:math id="IM21"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula> from <italic>n</italic><sub>p</sub> populations are given. We further assume the number of admixture events <italic>n</italic><sub>a</sub> is known. Note that, this is a standard assumption in existing admixture network inference literature. Our goal is inferring the maximum likelihood admixture network <inline-formula id="IE22"><mml:math id="IM22"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> with <italic>n</italic><sub>a</sub> admixture nodes for these populations from <inline-formula id="IE23"><mml:math id="IM23"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula>. One natural approach is finding <inline-formula id="IE24"><mml:math id="IM24"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> that maximizes the likelihood <inline-formula id="IE25"><mml:math id="IM25"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">H</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of <inline-formula id="IE26"><mml:math id="IM26"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula>. However, computing <inline-formula id="IE27"><mml:math id="IM27"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">H</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is challenging. GTmix uses the following techniques to develop a practical coalescent-based maximum likelihood inference approach.
</p>
      <list list-type="order">
        <list-item>
          <p>GTmix works with local genealogies <inline-formula id="IE28"><mml:math id="IM28"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> (which are inferred from <inline-formula id="IE29"><mml:math id="IM29"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula>), instead of with <inline-formula id="IE30"><mml:math id="IM30"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula> directly. Before using GTmix, we first use a local genealogy inference tool [e.g. RENT+ (<xref rid="btaa465-B11" ref-type="bibr">Mirzaei and Wu, 2017</xref>)] to infer local gene genealogies <inline-formula id="IE31"><mml:math id="IM31"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> from <inline-formula id="IE32"><mml:math id="IM32"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula>. The main benefit of working with inferred genealogies is that computing the likelihood of <inline-formula id="IE33"><mml:math id="IM33"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> is easier than directly computing the likelihood of <inline-formula id="IE34"><mml:math id="IM34"><mml:mi mathvariant="script">H</mml:mi></mml:math></inline-formula> for <inline-formula id="IE35"><mml:math id="IM35"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. Also local genealogies <inline-formula id="IE36"><mml:math id="IM36"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>, while noisy, capture the important LD information. The number of local genealogies can be very large in practice. GTmix uses a filtering scheme to choose possibly more reliable gene genealogies for inference.</p>
        </list-item>
        <list-item>
          <p>GTmix infers <inline-formula id="IE37"><mml:math id="IM37"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> that maximizes <inline-formula id="IE38"><mml:math id="IM38"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE39"><mml:math id="IM39"><mml:mrow><mml:mtext>Pr</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is computed approximately. That is for each <inline-formula id="IE40"><mml:math id="IM40"><mml:mrow><mml:mi>T</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:mrow></mml:math></inline-formula>, Pr(<italic>T</italic>) is computed by summing up the (weighted) probability of <italic>T</italic> for each population tree in <inline-formula id="IE41"><mml:math id="IM41"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. The probability of <italic>T</italic> for a population tree is computed using the fast algorithm in <xref rid="btaa465-B15" ref-type="bibr">Pei and Wu (2017)</xref> that computes gene tree probability approximately. GTmix implements effective methods to perform network search, including a new method for constructing initial networks from gene genealogies.</p>
        </list-item>
      </list>
    </sec>
    <sec>
      <title>3.2 Inferring local gene genealogies</title>
      <p>For local genealogy inference from haplotypes, GTmix is tested with genealogies inferred by the program RENT+ (<xref rid="btaa465-B11" ref-type="bibr">Mirzaei and Wu, 2017</xref>), although other tools (e.g. <xref rid="btaa465-B7" ref-type="bibr">Kelleher <italic>et al.</italic>, 2019</xref>; <xref rid="btaa465-B20" ref-type="bibr">Speidel <italic>et al.</italic>, 2019</xref>) can be used as well. RENT+ infers a (rooted binary) genealogy for each binary polymorphic site within a locus. The total number of local genealogies can be very large because there can be a different genealogy at each site. This makes it infeasible to perform likelihood-based inference with all genealogies as computing the probability of a genealogy is not trivial. To develop a practical method, GTmix samples a subset of genealogies (trees) using a two-stage approach: (i) it first chooses a subset of (likely more reliable) trees from inferred trees at each locus and (ii) it then chooses a smaller subset of trees from the list of trees from all loci. Note that, we assume haplotypes are divided into (independent) regions (loci), where each locus can contain many polymorphic sites.</p>
      <sec>
        <title>3.2.1 Choosing genealogies from each locus</title>
        <p>GTmix uses the following simple method called TreePicker for picking a subset of gene genealogies from potentially a large number of local genealogies inferred by RENT+. TreePicker works with haplotypes <inline-formula id="IE42"><mml:math id="IM42"><mml:mrow><mml:msub><mml:mi mathvariant="script">H</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from the <italic>i</italic>th locus and a list of genealogical trees <inline-formula id="IE43"><mml:math id="IM43"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> inferred by RENT+ from <inline-formula id="IE44"><mml:math id="IM44"><mml:mrow><mml:msub><mml:mi mathvariant="script">H</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. TreePicker chooses a fixed number <italic>n</italic><sub>T</sub> trees from <inline-formula id="IE45"><mml:math id="IM45"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as follows.
</p>
        <list list-type="order">
          <list-item>
            <p>TreePicker first divides the polymorphic sites within the <italic>i</italic>th locus into <italic>n</italic><sub>T</sub> equal-sized segments.</p>
          </list-item>
          <list-item>
            <p>For each segment, TreePicker chooses one genealogy <inline-formula id="IE46"><mml:math id="IM46"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> which ‘matches’ the largest number of polymorphisms within this segment.</p>
          </list-item>
        </list>
        <p>Recall that a (binary) polymorphic site implies a split (bipartition) of sampled haplotypes under the infinite sites model. We say a tree <italic>T</italic> matches a polymorphic site if there is a clade of <italic>T</italic> whose leaves are exactly those on one side of the split implied by this site. While local genealogies inferred by RENT+ do have useful information, these trees also have significant noise. Intuitively, an inferred genealogy <italic>T</italic> tends to be more reliable if it matches more polymorphic sites. This is because polymorphic sites are given as input and presumably correspond to clades in gene genealogies. A local genealogy is likely more reliable if it matches more polymorphisms.</p>
      </sec>
      <sec>
        <title>3.2.2 Choosing a subset of trees to use for inference</title>
        <p>GTmix takes a list of trees chosen by TreePicker as input. The number of input trees can still be large, and these genealogies can still be noisy. Before GTmix starts the inference, it first chooses a subset of up to <italic>K</italic> trees (by default, <italic>K </italic>=<italic> </italic>500) from the input trees. The basic idea is removing input trees that are significantly different from the rest of trees. This is because such trees are more likely to contain errors. GTmix takes the following simple approach for choosing trees for inference. It first analyzes input trees and calculates the frequencies of the clades in the trees. Then, it scores a tree by clade frequencies: a tree <italic>T</italic> is assigned a score <inline-formula id="IE47"><mml:math id="IM47"><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mtext>Clades</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mi mathvariant="normal">f</mml:mi><mml:mtext>req</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Here, Clades(<italic>T</italic>) is the set of all clades of the tree <italic>T</italic> and freq(<italic>C</italic>) is the estimated frequency of the clade <italic>C</italic> in all trees. GTmix chooses up to <italic>K</italic> trees with the highest scores. The main rationale behind this tree-picking step is that the number of true genealogical trees within a region is likely to be relatively small. This is because the number of recombinations (and other population demographic events such as admixture and incomplete lineage sorting) within a small region is likely small. Thus, a local genealogy is likely to be more reliable if it shares more topological features with other genealogies.</p>
      </sec>
    </sec>
    <sec>
      <title>3.3 Gene tree probability computation for admixture network</title>
      <p>GTmix takes a list of inferred genealogies <inline-formula id="IE48"><mml:math id="IM48"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> as input. The most important aspect for inferring admixture network <inline-formula id="IE49"><mml:math id="IM49"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> is computing <inline-formula id="IE50"><mml:math id="IM50"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> under the multispecies coalescent with admixture (MSCA) model. Assuming the independence of genealogies, <inline-formula id="IE51"><mml:math id="IM51"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Computing <inline-formula id="IE52"><mml:math id="IM52"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for a network <inline-formula id="IE53"><mml:math id="IM53"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> is not trivial (see, e.g. <xref rid="btaa465-B28" ref-type="bibr">Yu <italic>et al.</italic>, 2012</xref>). The main difficulty for computing <inline-formula id="IE54"><mml:math id="IM54"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is that the number of feasible coalescent histories can be very large under the MSCA model. To develop a practical method that can work with relatively large data, GTmix takes an approximation here: instead of computing the probability of <italic>T<sub>i</sub></italic> for <inline-formula id="IE55"><mml:math id="IM55"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, GTmix computes the probability of each population tree <italic>T<sub>i</sub></italic> in <inline-formula id="IE56"><mml:math id="IM56"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> and then use a weighted sum of these probability as an approximation of <inline-formula id="IE57"><mml:math id="IM57"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. While this is only an approximation, our experience indicates this allows reasonably accurate and efficient inference of admixture network.</p>
      <p>To be specific, we consider all possible population trees in <inline-formula id="IE58"><mml:math id="IM58"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. Each population tree is obtained by picking one of the left and right admixture edges at admixture node <italic>v</italic> with probabilities <italic>m<sub>v</sub></italic> and <inline-formula id="IE59"><mml:math id="IM59"><mml:mrow><mml:mn>1.0</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, respectively. Let the embedded population trees within <inline-formula id="IE60"><mml:math id="IM60"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> be <inline-formula id="IE61"><mml:math id="IM61"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Let <italic>n</italic><sub>a</sub> be the number of admixture nodes in <inline-formula id="IE62"><mml:math id="IM62"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. A population tree <inline-formula id="IE63"><mml:math id="IM63"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is associated with a binary vector <italic>D<sub>j</sub></italic> of length <italic>n</italic><sub>a</sub>. <inline-formula id="IE64"><mml:math id="IM64"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>a</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> (<inline-formula id="IE65"><mml:math id="IM65"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>a</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, respectively) if the left (right, respectively) incoming edge is chosen to obtain <inline-formula id="IE66"><mml:math id="IM66"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Here, each <inline-formula id="IE67"><mml:math id="IM67"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> has a probability of being the population tree: <inline-formula id="IE68"><mml:math id="IM68"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Here, <italic>v<sub>i</sub></italic> is the <italic>i</italic>th admixture node. Recall that branches in <inline-formula id="IE69"><mml:math id="IM69"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> have lengths. Trees in <inline-formula id="IE70"><mml:math id="IM70"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are derived from <inline-formula id="IE71"><mml:math id="IM71"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> and so have branch lengths too. In contrast, we assume genealogical trees in <inline-formula id="IE72"><mml:math id="IM72"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> are topologies only [as assumed in <xref rid="btaa465-B19" ref-type="bibr">Rosenberg (2002)</xref> and <xref rid="btaa465-B3" ref-type="bibr">Degnan and Salter (2005)</xref>]. Thus,
<disp-formula id="E1"><label>(1)</label><mml:math id="M1"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:munderover><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula><inline-formula id="IE73"><mml:math id="IM73"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is exactly the gene tree probability of a gene tree topology for a fixed population tree with branch lengths (<xref rid="btaa465-B3" ref-type="bibr">Degnan and Salter, 2005</xref>; <xref rid="btaa465-B19" ref-type="bibr">Rosenberg, 2002</xref>). GTmix uses the approximate gene tree probability algorithm in <xref rid="btaa465-B15" ref-type="bibr">Pei and Wu (2017)</xref>. This is because this algorithm is much more scalable than exact gene tree probability algorithms in <xref rid="btaa465-B3" ref-type="bibr">Degnan and Salter (2005)</xref> and <xref rid="btaa465-B25" ref-type="bibr">Wu (2012</xref>, <xref rid="btaa465-B27" ref-type="bibr">2016</xref>). Note that even we had computed the exact <inline-formula id="IE74"><mml:math id="IM74"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, <xref ref-type="disp-formula" rid="E1">Equation 1</xref> is still only an approximation. This is because <xref ref-type="disp-formula" rid="E1">Equation 1</xref> implicitly assumes all lineages at an admixture node are inherited from a single parent. This may not be the case with admixture. To see this, we again look at the network in <xref ref-type="fig" rid="btaa465-F1">Figure 1a</xref> and the gene tree in <xref ref-type="fig" rid="btaa465-F1">Figure 1d</xref>. Suppose at the time of admixture, lineages <italic>c</italic><sub>1</sub> and <italic>c</italic><sub>2</sub> remain un-coalesced. Then, <xref ref-type="disp-formula" rid="E1">Equation 1</xref> ignores the situation where for example <italic>c</italic><sub>1</sub> is from the left and <italic>c</italic><sub>2</sub> is from the right. We adopt this approximation because: (i) computing gene tree probability for a population tree is much faster than computing gene tree probability for a network and (ii) empirical tests suggest that this approximation appears to provide reasonably accurate inference.</p>
    </sec>
    <sec>
      <title>3.4 Finding the maximum likelihood admixture network</title>
      <p>GTmix finds the maximum likelihood admixture network with <italic>n</italic><sub>a</sub> admixture events (where <italic>n</italic><sub>a</sub> is assumed to be known) using a simple iterative procedure:
</p>
      <list list-type="order">
        <list-item>
          <p>Construct an initial network <inline-formula id="IE75"><mml:math id="IM75"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with <italic>n</italic><sub>a</sub> admixture nodes from the inferred gene genealogies <inline-formula id="IE76"><mml:math id="IM76"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>. Let <inline-formula id="IE77"><mml:math id="IM77"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
        </list-item>
        <list-item>
          <p>Find the set of admixture networks <inline-formula id="IE78"><mml:math id="IM78"><mml:mi mathvariant="script">S</mml:mi></mml:math></inline-formula> that are similar topologically to <inline-formula id="IE79"><mml:math id="IM79"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and have <italic>n</italic><sub>a</sub> admixture nodes.</p>
        </list-item>
        <list-item>
          <p>Let <inline-formula id="IE80"><mml:math id="IM80"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> that maximizes the likelihood <inline-formula id="IE81"><mml:math id="IM81"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. If <inline-formula id="IE82"><mml:math id="IM82"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, set <inline-formula id="IE83"><mml:math id="IM83"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>opt</mml:mtext></mml:mrow></mml:msub><mml:mo>←</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:mrow></mml:math></inline-formula>, and go to step 2. Otherwise, stop.</p>
        </list-item>
      </list>
      <sec>
        <title>3.4.1 Constructing the initial network</title>
        <p>GTmix constructs an initial network <inline-formula id="IE84"><mml:math id="IM84"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula id="IE85"><mml:math id="IM85"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> as follows. It first constructs a network <inline-formula id="IE86"><mml:math id="IM86"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> without admixture nodes (i.e. a population tree) by neighbor joining (NJ). The detailed procedure is given in Supplementary Algorithm S1 (in <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref>). To run the NJ algorithm, GTmix first estimates the pairwise distance between each pair of populations <italic>p<sub>i</sub></italic> and <italic>p<sub>j</sub></italic> based on <inline-formula id="IE87"><mml:math id="IM87"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>. Intuitively, if haplotypes from two populations are closely related in a genealogy, this offers a hint that these two populations may be closely related in the admixture network. More specifically, the pairwise population distance between <italic>p<sub>i</sub></italic> and <italic>p<sub>j</sub></italic> is estimated based on the average distance between one haplotype from <italic>p<sub>i</sub></italic> and one from <italic>p<sub>j</sub></italic> (in terms of the number of edges separating these two haplotypes on an inferred genealogy). Note that, a haplotype corresponds to a leaf in <inline-formula id="IE88"><mml:math id="IM88"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>.</p>
        <p>GTmix then adds <italic>n</italic><sub>a</sub> admixture nodes to <inline-formula id="IE89"><mml:math id="IM89"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> by choosing proper leaf nodes in <inline-formula id="IE90"><mml:math id="IM90"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and turning them into admixture nodes. That is the initial admixed populations are extant populations in <inline-formula id="IE91"><mml:math id="IM91"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Note that ancestral admixture events (i.e. admixture at ancestral populations) are accommodated during the network search stage. GTmix relies on the so-called minimum deep coalescent (MDC) (<xref rid="btaa465-B10" ref-type="bibr">Maddison, 1997</xref>; <xref rid="btaa465-B13" ref-type="bibr">Page and Charleston, 1997</xref>) to identify likely admixed extant populations. Briefly, MDC is a statistic that measures the topological deviation of the given gene trees from a consensus tree based on the MSC model. Refer to the studies by <xref rid="btaa465-B13" ref-type="bibr">Page and Charleston (1997)</xref> and <xref rid="btaa465-B10" ref-type="bibr">Maddison (1997)</xref> for more details on MDC. While MDC is known to have issues in phylogenetics (see, e.g. <xref rid="btaa465-B4" ref-type="bibr">Felsenstein, 2004</xref>), we use MDC due to its simplicity and efficiency.</p>
        <p>The key idea of GTmix for identifying the likely admixed extant populations from <inline-formula id="IE92"><mml:math id="IM92"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> is that admixed extant populations tend to make gene genealogies <italic>deviate</italic> significantly from the standard MSC process. Intuitively, an admixed population tends to lead to gene genealogies that are quite different from those arising from the standard MSC process. Suppose we discard all haplotypes from the admixed population in the gene genealogies. The (reduced) gene genealogies tend to have a better fit to the standard MSC process. GTmix uses the MDC statistic to measure how well gene genealogies fit the standard MSC process. More specifically, suppose a population <italic>p</italic> is a candidate for admixed extant population. We first compute the MDC score (denoted as <italic>MDC</italic>) of the original <inline-formula id="IE93"><mml:math id="IM93"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>. Then we discard all gene lineages from the population <italic>p</italic> in all trees of <inline-formula id="IE94"><mml:math id="IM94"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>. We call the reduced genealogies <inline-formula id="IE95"><mml:math id="IM95"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. We then compute the MDC score (denoted as MDC<sub>p</sub>) on <inline-formula id="IE96"><mml:math id="IM96"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. As each tree in <inline-formula id="IE97"><mml:math id="IM97"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> is a subtree of the corresponding tree in <inline-formula id="IE98"><mml:math id="IM98"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mtext>MDC</mml:mtext></mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mtext>MDC</mml:mtext></mml:mrow></mml:math></inline-formula>. We expect <inline-formula id="IE99"><mml:math id="IM99"><mml:mrow><mml:mtext>MDC</mml:mtext><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mtext>MDC</mml:mtext></mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for admixed population <italic>p</italic> to be significantly larger than <inline-formula id="IE100"><mml:math id="IM100"><mml:mrow><mml:mtext>MDC</mml:mtext><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mtext>MDC</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="normal">p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for an un-admixed population <italic>p</italic><sub>0</sub>. This leads to Algorithm 1 for finding likely admixed extant populations.<boxed-text id="btaa465-BOX1" position="float" orientation="portrait"><sec><title><bold>Algorithm 1</bold> Identifying likely admixed extant populations from genealogies <inline-formula id="IE101"><mml:math id="IM101"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula></title><p>1: Let <inline-formula id="IE102"><mml:math id="IM102"><mml:mi mathvariant="script">P</mml:mi></mml:math></inline-formula> be the set of all populations.</p><p>2: <bold>for</bold><inline-formula id="IE103"><mml:math id="IM103"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>…</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula><bold>do</bold></p><p>3:  Compute the MDC score (denoted as <italic>MDC</italic>) for <inline-formula id="IE104"><mml:math id="IM104"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula>.</p><p>4:   <bold>for</bold> each <inline-formula id="IE105"><mml:math id="IM105"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">P</mml:mi></mml:mrow></mml:math></inline-formula><bold>do</bold></p><p>5:   Construct reduced genealogies <inline-formula id="IE106"><mml:math id="IM106"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> by discarding lineages from <italic>p</italic> (and cleaning up the trees so that trees remain to be binary).</p><p>6:   Compute the MDC score (denoted as <italic>MDC<sub>p</sub></italic>) on <inline-formula id="IE107"><mml:math id="IM107"><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p><p>7:  <bold>end for</bold></p><p>8: Let <inline-formula id="IE108"><mml:math id="IM108"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>←</mml:mo><mml:mi mathvariant="italic">argma</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">MDC</mml:mi><mml:mo>−</mml:mo><mml:mi>M</mml:mi><mml:mi>D</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE109"><mml:math id="IM109"><mml:mrow><mml:mi mathvariant="script">P</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">P</mml:mi><mml:mo>−</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE110"><mml:math id="IM110"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>←</mml:mo><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Add <italic>p<sub>a</sub></italic> to <inline-formula id="IE111"><mml:math id="IM111"><mml:mrow><mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (the list of likely admixed extant populations).</p><p>9: <bold>end for</bold></p></sec></boxed-text><italic>Constructing initial network</italic> <inline-formula id="IE112"><mml:math id="IM112"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula><italic>by adding admixture nodes</italic>. For each likely admixed extant population <inline-formula id="IE113"><mml:math id="IM113"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, GTmix modifies <inline-formula id="IE114"><mml:math id="IM114"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> by adding one admixture branch into <italic>p</italic><sub>a</sub> to make <italic>p</italic><sub>a</sub> an admixture node. GTmix considers all possible admixture source populations that can be ancestral to <italic>p</italic><sub>a</sub> according to the current network. Each choice leads to a network <inline-formula id="IE115"><mml:math id="IM115"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:msub><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Then it chooses one source population that gives the maximum probability <inline-formula id="IE116"><mml:math id="IM116"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:msub><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. After this step, we obtain the initial network <inline-formula id="IE117"><mml:math id="IM117"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mtext>init</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
      </sec>
      <sec>
        <title>3.4.2 Search over the space of networks</title>
        <p>GTmix searches for the set of topologically similar networks <inline-formula id="IE118"><mml:math id="IM118"><mml:mi mathvariant="script">S</mml:mi></mml:math></inline-formula> from the current network <inline-formula id="IE119"><mml:math id="IM119"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>. Networks in <inline-formula id="IE120"><mml:math id="IM120"><mml:mi mathvariant="script">S</mml:mi></mml:math></inline-formula> are obtained by applying one nearest neighbor interchange (NNI) to the current network. More specifically, consider each branch <inline-formula id="IE121"><mml:math id="IM121"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi mathvariant="normal">c</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in <inline-formula id="IE122"><mml:math id="IM122"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, where node <italic>v</italic><sub>p</sub> is the parent of node <italic>v</italic><sub>c</sub>. Let <italic>v</italic><sub>s</sub> be the sibling of <italic>v</italic><sub>c</sub>, and <italic>v</italic><sub>sp</sub> be the sibling of <italic>v</italic><sub>p</sub>. Then after applying one NNI on <italic>b</italic>, we obtain a new network with <italic>v</italic><sub>sp</sub> being the sibling of <italic>v</italic><sub>c</sub> and <italic>v</italic><sub>s</sub> being the sibling of <italic>v</italic><sub>p</sub>. That is, the NNI swaps <italic>v</italic><sub>s</sub> with <italic>v</italic><sub>sp</sub> which leads to a new network <inline-formula id="IE123"><mml:math id="IM123"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. We perform NNI on all branches in <inline-formula id="IE124"><mml:math id="IM124"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> to obtain <inline-formula id="IE125"><mml:math id="IM125"><mml:mi mathvariant="script">S</mml:mi></mml:math></inline-formula>.</p>
      </sec>
    </sec>
    <sec>
      <title>3.5 Simulation</title>
      <p>To test the performance of GTmix, we first generate random admixture networks. Then we simulate haplotypes on these admixture networks. There are a number of parameters in the simulation, which are shown in <xref rid="btaa465-T1" ref-type="table">Table 1</xref>. Each parameter has a default value.
</p>
      <table-wrap id="btaa465-T1" orientation="portrait" position="float">
        <label>Table 1.</label>
        <caption>
          <p>A list of parameters and their default values used in the simulation</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Description</th>
              <th rowspan="1" colspan="1">Symbol</th>
              <th rowspan="1" colspan="1">Default</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Number of populations (excluding the outgroup)</td>
              <td rowspan="1" colspan="1">
                <italic>n</italic>
                <sub>p</sub>
              </td>
              <td rowspan="1" colspan="1">6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Number of admixture nodes in a network</td>
              <td rowspan="1" colspan="1">
                <italic>n</italic>
                <sub>a</sub>
              </td>
              <td rowspan="1" colspan="1">1</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Time interval between events (in coalescent units)</td>
              <td rowspan="1" colspan="1">
                <italic>t</italic>
                <sub>s</sub>
              </td>
              <td rowspan="1" colspan="1">0.02</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Admixture proportion at admixture node <italic>v</italic></td>
              <td rowspan="1" colspan="1">
                <italic>m<sub>v</sub></italic>
              </td>
              <td rowspan="1" colspan="1">0.5</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Number of haplotypes per population</td>
              <td rowspan="1" colspan="1">
                <italic>n</italic>
                <sub>c</sub>
              </td>
              <td rowspan="1" colspan="1">4/100</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Number of loci</td>
              <td rowspan="1" colspan="1">
                <italic>n</italic>
                <sub>L</sub>
              </td>
              <td rowspan="1" colspan="1">500</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Mutation parameter</td>
              <td rowspan="1" colspan="1">
                <italic>θ</italic>
              </td>
              <td rowspan="1" colspan="1">50</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Recombination parameter</td>
              <td rowspan="1" colspan="1">
                <italic>ρ</italic>
              </td>
              <td rowspan="1" colspan="1">50</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Length of locus (in bp)</td>
              <td rowspan="1" colspan="1">
                <italic>L</italic>
              </td>
              <td rowspan="1" colspan="1">500 000</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic>Note</italic>: Small data with four haplotypes per populations. Large data with 100 haplotypes per population (only for TreeMix/MixMapper).</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <sec>
        <title>3.5.1 Admixture network simulation</title>
        <p>We first generate random admixture networks with <italic>n</italic><sub>p</sub> populations. Here, <inline-formula id="IE126"><mml:math id="IM126"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn></mml:mrow></mml:math></inline-formula> and 10. For each <italic>n</italic><sub>p</sub>, we simulate 10 randomly generated networks. We add one additional population as the outgroup (our experience shows that without outgroup, TreeMix appears to perform poorly especially in network rooting.). That is, the total number of populations is <inline-formula id="IE127"><mml:math id="IM127"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. A network has <italic>n</italic><sub>a</sub> admixture nodes, where <italic>n</italic><sub>a</sub> = 1 (default) or 2. We focus on networks with more recent admixture in the simulation. In most of our simulations, we choose extant populations (leaves of a network <inline-formula id="IE128"><mml:math id="IM128"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>) as admixed populations. This is because in many genetics study, admixture is relatively recent. See Section 4.1.6 for results on networks with more ancient admixture. We arbitrarily order internal nodes in the simulated network <inline-formula id="IE129"><mml:math id="IM129"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, subject to the topological constraints imposed by the network. Then, each internal node <italic>v<sub>i</sub></italic> (i.e. the <italic>i</italic>th node in the order) is assigned a time <inline-formula id="IE130"><mml:math id="IM130"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>i</mml:mi><mml:mo>×</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi mathvariant="normal">s</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> where <italic>t</italic><sub>s</sub> is the time interval between events. All leaf nodes have zero time. The outgroup is assigned a relatively large time <italic>t</italic><sub>o</sub>, which by default is 0.3. The default value of <italic>t</italic><sub>s</sub> is 0.02 in the standard coalescent unit. Each admixture node <italic>v</italic> is associated with an admixture proportion <italic>m<sub>v</sub></italic>. By default, <inline-formula id="IE131"><mml:math id="IM131"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math></inline-formula>. See <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref> for the list of simulated networks with four and six populations.</p>
      </sec>
      <sec>
        <title>3.5.2 Haplotype simulation</title>
        <p>For each simulated admixture network <inline-formula id="IE132"><mml:math id="IM132"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula>, we simulate a set of haplotypes using the program ms (<xref rid="btaa465-B5" ref-type="bibr">Hudson, 2002</xref>). For each population, we simulate <italic>n</italic><sub>c</sub> haplotypes. By default, <italic>n</italic><sub>c</sub> = 4. We simulate <italic>n</italic><sub>L</sub> loci for each setting. By default, <italic>n</italic><sub>L</sub> = 500. For each locus, we set the mutation parameter <italic>θ</italic> (by default, <italic>θ</italic> = 50), and the recombination parameter <italic>ρ</italic> (by default, <italic>ρ</italic> = 50) with region length being 500 000 base pairs. The island model with population admixture implemented in ms is used to simulate the haplotypes on a specific admixture network.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <p>Due to the lack of space, some results are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref>.</p>
    <sec>
      <title>4.1 Results on simulated data</title>
      <p>At present, GTmix cannot run on data with large number of populations and/or large number of haplotypes per population. Thus, we run GTmix with relatively small number of haplotypes per population (by default, four haplotypes per population). TreeMix and MixMapper are designed to work with data with relatively large number of haplotypes. For comparison, we run TreeMix and MixMapper on two settings: (i) the ‘small’ data: the same data as given to GTmix and (ii) the ‘large’ data: simulated data with much larger number of haplotypes per population (by default, 100 haplotypes per population, i.e. 25 times of the small data). Note that, the number of combinations of different parameters is very large. Therefore, when we evaluate the effect of a particular parameter, we keep all other parameters to be the default values. GTmix is run with 500 local trees by default. For smaller data, sometimes GTmix is run with 2000 local trees.</p>
      <sec>
        <title>4.1.1 Metrics for benchmarking admixture network inference</title>
        <p>In this article, we use the following two metrics for comparing the topology of the inferred network <inline-formula id="IE133"><mml:math id="IM133"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> and that of the true network <inline-formula id="IE134"><mml:math id="IM134"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>.
</p>
        <list list-type="order">
          <list-item>
            <p>Best-match population tree inference error. Recall that a network <inline-formula id="IE135"><mml:math id="IM135"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> with <italic>n</italic><sub>a</sub> admixture nodes contains <inline-formula id="IE136"><mml:math id="IM136"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> population trees. Assuming <inline-formula id="IE137"><mml:math id="IM137"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> and <inline-formula id="IE138"><mml:math id="IM138"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> have the same number of admixture nodes, we compare the <inline-formula id="IE139"><mml:math id="IM139"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> population trees <inline-formula id="IE140"><mml:math id="IM140"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> in <inline-formula id="IE141"><mml:math id="IM141"><mml:mi mathvariant="script">N</mml:mi></mml:math></inline-formula> with the <inline-formula id="IE142"><mml:math id="IM142"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> population trees <inline-formula id="IE143"><mml:math id="IM143"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula> in <inline-formula id="IE144"><mml:math id="IM144"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. Here, we need to match each tree <inline-formula id="IE145"><mml:math id="IM145"><mml:mrow><mml:mi>T</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:mrow></mml:math></inline-formula> with a tree <inline-formula id="IE146"><mml:math id="IM146"><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. There are <inline-formula id="IE147"><mml:math id="IM147"><mml:mrow><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">a</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>!</mml:mo></mml:mrow></mml:math></inline-formula> ways of matching <inline-formula id="IE148"><mml:math id="IM148"><mml:mi mathvariant="script">T</mml:mi></mml:math></inline-formula> with <inline-formula id="IE149"><mml:math id="IM149"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. For example when <italic>n</italic><sub>a</sub> = 1, there are two ways of matching; when <italic>n</italic><sub>a</sub> = 2, there are 24 ways of matching. The so-called Robinson–Foulds (RF) distance is used to compare a pair of matched trees <italic>T</italic> and <inline-formula id="IE150"><mml:math id="IM150"><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. The RF distance is equal to the number of clades (subtrees) that are in <italic>T</italic> but not in <inline-formula id="IE151"><mml:math id="IM151"><mml:mrow><mml:mi>T</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. The RF distance is normalized to be between 0 and 1. For each matching, we take the average RF distance of all matched pairs of trees as the inference error. We take the smallest average RF distance over all matchings as the best-match inference error.</p>
          </list-item>
          <list-item>
            <p>Percentage of correctly inferred admixed populations. It can be biologically important to identify which populations are admixed. This is measured by the average percentage of correctly inferred admixed populations.</p>
          </list-item>
        </list>
      </sec>
      <sec>
        <title>4.1.2 Network inference accuracy</title>
        <p><italic>4.1.2.1 Varying number of populations.</italic> We run GTmix, TreeMix and MixMapper on data with varying number of populations (from 4 to 10). We sample four haplotypes for each population. We also run TreeMix and MixMapper with large data (100 haplotypes per population). We sample 2000 local genealogies for 4, 6 and 8 populations, and 500 genealogies for 10 populations. Sampling more trees can somewhat increase inference accuracy, but running time is longer (see Section 4.1.5). <xref ref-type="fig" rid="btaa465-F2">Figure 2</xref> shows the results. GTmix is significantly better than TreeMix and MixMapper on small data in terms of topology inference. As expected, TreeMix and MixMapper perform better on large data than on small data. Still, GTmix with small data is still more accurate in topology inference than TreeMix and MixMapper with large data in most cases. Moreover, GTmix is significantly more accurate in admixed population inference than TreeMix and MixMapper.
</p>
        <fig id="btaa465-F2" orientation="portrait" position="float">
          <label>Fig. 2.</label>
          <caption>
            <p>Admixture network inference with varying number of populations. GTmix: four haplotypes per population (sample 2000 trees for <inline-formula id="IE152"><mml:math id="IM152"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula> and 8, and 500 trees for <italic>n</italic><sub>p</sub> = 10). TreeMix and MixMapper: small data (four haplotypes per population, denoted as ‘S’) and large data (100 haplotypes per population, denoted as ‘L’). (<bold>a</bold>) Average best-match RF distance between inferred networks and true networks. (<bold>b</bold>) Average admixture population inference accuracy. <italic>X</italic>-axis: number of populations</p>
          </caption>
          <graphic xlink:href="btaa465f2"/>
        </fig>
        <p><italic>4.1.2.2 Varying number of haplotypes per population.</italic> We evaluate the performance of GTmix when the number of haplotypes per population varies. Six populations are simulated. Due to the computational difficulty, GTmix only runs on data with up to 8 haplotypes per population. For comparison, TreeMix and MixMapper are run on data with up to 100 haplotypes per population. <xref ref-type="fig" rid="btaa465-F3">Figure 3a</xref> shows the results. As expected, when the number of haplotypes increases, all methods tend to be more accurate. On the same data, GTmix is consistently better than TreeMix and MixMapper. GTmix can be more accurate with smaller data than TreeMix and MixMapper even the latter are run with much larger data. For example, the topology inference error of GTmix with 8 haplotypes per population is about 0.077, whereas the errors are about 0.11 and 0.17, respectively, for TreeMix and MixMapper with 100 haplotypes per population.
</p>
        <fig id="btaa465-F3" orientation="portrait" position="float">
          <label>Fig. 3.</label>
          <caption>
            <p>Inference with varying number of haplotypes and number of admixture events. (<bold>a</bold>) Varying number of haplotypes per population. GTmix: 2–8 haplotypes per population. That is, GTmix is <bold>not</bold> run for 10, 50 and 100 haplotypes. TreeMix and MixMapper: 2–100 haplotypes per population. <italic>X</italic>-axis: number of haplotypes (alleles) per populations. (<bold>b</bold>) With two admixture events; topological error and admixture population inference accuracy. Six populations. TreeMix is run with both small (S) and large (L) data</p>
          </caption>
          <graphic xlink:href="btaa465f3"/>
        </fig>
        <p><italic>4.1.2.3 Two admixture events.</italic> By default, a single admixture event is simulated. To evaluate more complex demographic scenarios, we simulate two admixture events for six populations (plus one outgroup). We compare GTmix (with small data) with TreeMix (with small and large data). The results are shown in <xref ref-type="fig" rid="btaa465-F3">Figure 3b</xref>. We can see that GTmix outperforms TreeMix in both topological inference and admixture population inference significantly even when the latter is run with large data.</p>
      </sec>
      <sec>
        <title>4.1.3 Phasing</title>
        <p>So far we use the true simulated haplotypes. In practice, haplotypes are usually inferred from unphased genotypes. We now evaluate the performance of GTmix on inferred haplotypes. Note that, phasing accuracy can be affected by recombination rate. We simulate data with varying recombination rates (with the default mutation parameter of 50). We randomly pair up two simulated haplotypes to form a genotype. Then we use the program Beagle (<xref rid="btaa465-B1" ref-type="bibr">Browning and Browning, 2007</xref>) to phase the genotypes to obtain phased haplotypes. We compare the topological inference error of networks inferred with both the true haplotypes and the phased haplotypes. The results are shown in <xref ref-type="fig" rid="btaa465-F4">Figure 4</xref>. When recombination rate is low, phasing error appears to have marginal effects on the inference accuracy. When recombination rate is high (say 250), there is a significant reduction in inference accuracy.
</p>
        <fig id="btaa465-F4" orientation="portrait" position="float">
          <label>Fig. 4.</label>
          <caption>
            <p>Topological inference error on phased and true haplotypes. <italic>X</italic>-axis: recombination rate used in data simulation</p>
          </caption>
          <graphic xlink:href="btaa465f4"/>
        </fig>
      </sec>
      <sec>
        <title>4.1.4 Network inference efficiency</title>
        <p>We show the running time of GTmix under various settings in <xref ref-type="fig" rid="btaa465-F5">Figure 5</xref>. The running time of TreeMix and MixMapper is not shown here as these single polymorphism-based methods are much faster than GTmix. The purpose here is investigating the scalability of GTmix. The running time of GTmix apparently grows exponentially with regard to both the number of populations and the number of haplotypes per population. In contrast, GTmix scales well with regard to the number of loci. Overall, although GTmix is still computationally intensive on relatively large data, it can be applied on many data of current interests.
</p>
        <fig id="btaa465-F5" orientation="portrait" position="float">
          <label>Fig. 5.</label>
          <caption>
            <p>Running time (in seconds) of GTmix with varying number of populations, number of haplotypes per population and number of loci</p>
          </caption>
          <graphic xlink:href="btaa465f5"/>
        </fig>
      </sec>
      <sec>
        <title>4.1.5 Varying the number of genealogies for inference</title>
        <p>The running time in <xref ref-type="fig" rid="btaa465-F5">Figure 5c</xref> does not grow linearly with regard to the number of loci. The main reason is that GTmix use a fixed number (<italic>K</italic>) of trees from the given set of trees in inference. Here, the default value of <italic>K</italic> is 500. The choice of <italic>K</italic> can affect both the running time and also the accuracy of GTmix. To investigate the effect of the value of <italic>K</italic>, we test GTmix with varying <italic>K</italic> values (from 100 to 5000) with six populations and four alleles per population. <xref ref-type="fig" rid="btaa465-F6">Figure 6</xref> shows the results. There is a clear trade-off between inference accuracy and efficiency with regard to the number of sampled trees. Overall, larger <italic>K</italic> values tend to produce more accurate inference results, although the running time will be longer. In practice, therefore, it may be beneficial to use larger <italic>K</italic> as long as the running time remains acceptable.
</p>
        <fig id="btaa465-F6" orientation="portrait" position="float">
          <label>Fig. 6.</label>
          <caption>
            <p>Effect of the number (<italic>K</italic>) of sampled trees for inference on accuracy and running time. (<bold>a</bold>) Network topology inference error (best-match RF distance) and admixture population inference accuracy (% of correctly inferred admixed populations) with varying values of <italic>K</italic>. (<bold>b</bold>) Running time (in seconds) with varying values of <italic>K</italic></p>
          </caption>
          <graphic xlink:href="btaa465f6"/>
        </fig>
      </sec>
      <sec>
        <title>4.1.6 Inference of ancestral admixture</title>
        <p>We now evaluate the performance of GTmix on admixture inference of ancestral admixture events. Here, we simulate admixture networks with a single admixture event where the admixture event is ancestral to two or more extant populations. The numbers of simulated networks are three for <italic>n</italic><sub>p</sub> = 4, and five for <italic>n</italic><sub>p</sub> = 6. These networks are shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Materials</xref>. For each network, we simulate ten sets of haplotypes as replicates. We sample four haplotypes for each populations. For comparison, we run TreeMix with the same (small) data as GTmix and also with large data (with 100 sampled haplotypes). The topological accuracy results are shown in <xref rid="btaa465-T2" ref-type="table">Table 2</xref>. In comparison with <xref ref-type="fig" rid="btaa465-F2">Figure 2a</xref>, both methods tend to perform less accurately for inferring ancestral admixture events than more recent admixture events. Nonetheless, our results show that GTmix outperforms TreeMix on the inference of ancestral admixture events. It appears that the accuracy of TreeMix for inferring ancestral admixture events does not show significant improvements as the data amount increases.
</p>
        <table-wrap id="btaa465-T2" orientation="portrait" position="float">
          <label>Table 2.</label>
          <caption>
            <p>Topological inference error for networks (for 4 and 6 populations) with <italic>ancestral</italic> admixture events for GTmix and TreeMix (with 10 replicates)</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th colspan="3" align="center" rowspan="1"><italic>n</italic><sub>p</sub> = 4<hr/></th>
                <th colspan="3" align="center" rowspan="1"><italic>n</italic><sub>p</sub> = 6<hr/></th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1">G</th>
                <th align="center" rowspan="1" colspan="1">T(S)</th>
                <th align="center" rowspan="1" colspan="1">T(L)</th>
                <th align="center" rowspan="1" colspan="1">G</th>
                <th align="center" rowspan="1" colspan="1">T(S)</th>
                <th align="center" rowspan="1" colspan="1">T(L)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Topology inf. error</td>
                <td rowspan="1" colspan="1">0.20</td>
                <td rowspan="1" colspan="1">0.37</td>
                <td rowspan="1" colspan="1">0.29</td>
                <td rowspan="1" colspan="1">0.30</td>
                <td rowspan="1" colspan="1">0.34</td>
                <td rowspan="1" colspan="1">0.35</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn2">
              <p><italic>Note</italic>: G: GTmix. T(S): TreeMix with the same data as GTmix (4 haplotypes per population). T(L): TreeMix with large data (100 haplotypes per population).</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
    </sec>
    <sec>
      <title>4.2 Results on the 1000 Genomes Project data</title>
      <p>The 1000 Genomes Project (<xref rid="btaa465-B21" ref-type="bibr">The 1000 Genomes Project Consortium, 2015</xref>) has released haplotypes of 1092 individuals from 26 populations in Phase 3 integrated variant set release. The 1000 Genomes Project defines five super populations: African, East Asian, European, South Asian and Admixed American. We pick two populations from each of these super populations. Namely, we pick the following ten populations: Americans of African Ancestry in SW USA (ASW), Yoruba in Ibadan, Nigeria (YRI), Han Chinese in Beijing, China (CHB), Japanese in Tokyo, Japan (JPT), Utah Residents with Northern and Western European Ancestry (CEU), Iberian Population in Spain (IBS), Gujarati Indian from Houston, Texas (GIH), Indian Telugu from the UK (ITU), Mexican Ancestry from Los Angeles USA (MXL) and Puerto Ricans from Puerto Rico (PUR). We create two test datasets, one small and one large. (i) The small data contain haplotypes from two randomly chosen diploid individuals (i.e. four haplotypes) from each population. We sample up to 50 loci from chromosomes 1 to 10 as follows: for each chromosome, randomly sample up to 50 regions of 100 kbp each, which are evenly located as 3 Mbp apart. (ii) The large dataset contains haplotypes from twenty diploid individuals (i.e. ten times as many as the small data) from the <italic>whole</italic> genome (i.e. all single nucleotide polymorphisms or SNPs are used). To reduce noise, any polymorphic sites with non-binary alleles are discarded.</p>
      <p>We run GTmix to infer an admixture network with two admixture events on the small dataset only. Here, GTmix is run without specifying any outgroup. It takes about 34 h for GTmix to find the optimal network in a computer cluster (with 2.1 GHz CPU). The network is shown in <xref ref-type="fig" rid="btaa465-F7">Figure 7a</xref>. For comparison, we run TreeMix with the whole genome data on all 22 autosomes. Recall that GTmix is run with data from a fraction of chromosomes 1 to 10. We perform preprocessing to discard rare variants: only polymorphisms with minor allele frequencies of 5% or larger are kept (If rare alleles are kept, our simulation results show that the constructed network by TreeMix appears to be less accurate.). This leaves total 7.63 million SNPs in the data. Note that this is about 50 times more data than what is used by GTmix. Our results show that if TreeMix is run without specifying proper outgroup, the inferred network appears to be rooted in an obviously wrong position (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S5</xref>). The resulting network by TreeMix is shown in <xref ref-type="fig" rid="btaa465-F7">Figure 7b</xref>, where we use YRI as the outgroup. We note that the networks inferred by GTmix and TreeMix share many key topological properties. For example, both networks have MXL and PUR as admixed. Also populations from the same super population tend to be close in the network. On the other hand, the two networks also differ in some aspects. The network by GTmix, as expected, has IBS to be closely related to the source populations involved in both inferred admixture, while the other ancestral populations involved are closely related to CHB/JPT. While the true admixture network for these populations is not known, at least some aspects of the TreeMix’s network do not agree with the commonly accepted human demographic history. For example, the TreeMix network shows MXL and PUR are both descendants from an ancestral admixture between some ancestral European and some ancestral African population; then MXL is involved in admixture with an ancestral Asian population. While MXL and PUR may have different admixture history, such ancestral admixture may not be very likely. To summarize, our results show that GTmix can provide informative inference of admixture networks on real data.
</p>
      <fig id="btaa465-F7" orientation="portrait" position="float">
        <label>Fig. 7.</label>
        <caption>
          <p>Inferred admixture network for ten populations from the 1000 Genomes Project by GTmix and TreeMix. GTmix is run with small data with two diploid individuals per population at randomly chosen regions of the first ten chromosomes, while TreeMix is run with the whole genome data with twenty diploid individuals per population (more than 50 times more data than that used by GTmix). Square box: admixture nodes (with inferred admixture proportions; the displayed admixture proportion is for the left source population). Each branch in the GTmix result has the estimated branch length (in the standard coalescent unit)</p>
        </caption>
        <graphic xlink:href="btaa465f7"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion and discussion</title>
    <p>In this article, we develop a new approach called GTmix for inferring population admixture networks with local gene genealogies inferred from haplotypes. The following summarizes our findings.
</p>
    <list list-type="order">
      <list-item>
        <p>Results of GTmix show that maximum likelihood inference of admixture networks can be practical for data that was previously believed to be not feasible (<xref rid="btaa465-B16" ref-type="bibr">Pickrell and Pritchard, 2012</xref>). While GTmix may only find local maxima, empirical results show that GTmix can still provide reasonably accurate inference.</p>
      </list-item>
      <list-item>
        <p>While likelihood-based inference such as GTmix is inherently more computationally demanding than existing single polymorphism-based methods, GTmix can produce more accurate inference results using only a small percentage of data than existing single polymorphism-based methods. While human populations in the 1000 Genomes Project have relatively large sample sizes, population sample sizes can be much smaller in other population genetics studies. GTmix can be useful for such datasets. Another advantage of GTmix is that its rooting of networks is usually more accurate than that of TreeMix.</p>
      </list-item>
    </list>
    <p>GTmix builds on several published approaches (<xref rid="btaa465-B11" ref-type="bibr">Mirzaei and Wu, 2017</xref>; <xref rid="btaa465-B15" ref-type="bibr">Pei and Wu, 2017</xref>; <xref rid="btaa465-B25" ref-type="bibr">Wu, 2012</xref>). The main contribution of GTmix to network inference methodology is that GTmix introduces several practical techniques that significantly speed up the computationally intensive likelihood-based network inference, and achieves reasonably good empirical performance. One common problem for GTmix and all existing admixture network inference methods is that the number of admixture events is assumed to be known. In principle, it would be useful if a method can also infer the optimal number of admixture events. Inferring the number of admixture events is a model selection problem in statistics, which is likely to be an important problem for future network inference research.</p>
    <p>The main computational bottleneck for likelihood-based methods is still the computation of the likelihood under the coalescent process. Scaling up likelihood-based inference will need further improvement in algorithmic efficiency of coalescent likelihood computation.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was partly supported by U.S. National Science Foundation grants CCF-1718093 and IIS-1909425.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btaa465_Supplementary_Data</label>
      <media xlink:href="btaa465_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa465-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Browning</surname><given-names>S.R.</given-names></name>, <name name-style="western"><surname>Browning</surname><given-names>B.L.</given-names></name></person-group> (<year>2007</year>) 
<article-title>Rapid and accurate haplotype phasing and missing data inference for whole genome association studies by use of localized haplotype clustering</article-title>. <source>Am. J. Hum. Genet</source>., <volume>81</volume>, <fpage>1084</fpage>–<lpage>1097</lpage>.<pub-id pub-id-type="pmid">17924348</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B2">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Cardona</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>L.</given-names></name></person-group> (<year>2020</year>) Counting tree-child networks and their subclasses. <italic>arXiv</italic>:1908.01917.</mixed-citation>
    </ref>
    <ref id="btaa465-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Degnan</surname><given-names>J.H.</given-names></name>, <name name-style="western"><surname>Salter</surname><given-names>L.A.</given-names></name></person-group> (<year>2005</year>) 
<article-title>Gene tree distributions under the coalescent process</article-title>. <source>Evolution</source>, <volume>59</volume>, <fpage>24</fpage>–<lpage>37</lpage>.<pub-id pub-id-type="pmid">15792224</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B4">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Felsenstein</surname><given-names>J.</given-names></name></person-group> (<year>2004</year>) <source>Inferring Phylogenies</source>. 
<publisher-name>Sinauer</publisher-name>, 
<publisher-loc>Sunderland, MA</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btaa465-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hudson</surname><given-names>R.</given-names></name></person-group> (<year>2002</year>) 
<article-title>Generating samples under the Wright-Fisher neutral model of genetic variation</article-title>. <source>Bioinformatics</source>, <volume>18</volume>, <fpage>337</fpage>–<lpage>338</lpage>.<pub-id pub-id-type="pmid">11847089</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Huson</surname><given-names>D.H.</given-names></name></person-group><etal>et al</etal> (<year>2010</year>) <source>Phylogenetic Networks: Concepts, Algorithms and Applications</source>. 
<publisher-name>Cambridge University Press</publisher-name>, 
<publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btaa465-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Inferring whole-genome histories in large population datasets</article-title>. <source>Nat. Genet</source>., <volume>51</volume>, <fpage>1330</fpage>–<lpage>1338</lpage>.<pub-id pub-id-type="pmid">31477934</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kingman</surname><given-names>J.F.C.</given-names></name></person-group> (<year>1982</year>) 
<article-title>The coalescent</article-title>. <source>Stochast. Process. Appl</source>., <volume>13</volume>, <fpage>235</fpage>–<lpage>248</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa465-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lipson</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>Efficient moment-based inference of admixture parameters and sources of gene flow</article-title>. <source>Mol. Biol. Evol</source>., <volume>30</volume>, <fpage>1788</fpage>–<lpage>1802</lpage>.<pub-id pub-id-type="pmid">23709261</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Maddison</surname><given-names>W.</given-names></name></person-group> (<year>1997</year>) 
<article-title>Gene trees in species trees</article-title>. <source>Syst. Biol</source>., <volume>46</volume>, <fpage>523</fpage>–<lpage>536</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa465-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mirzaei</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2017</year>) 
<article-title>RENT+: an improved method for inferring local genealogical trees from haplotypes with recombination</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>1021</fpage>–<lpage>1030</lpage>.<pub-id pub-id-type="pmid">28065901</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B12">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Morrison</surname><given-names>D.A.</given-names></name></person-group> (<year>2011</year>) <source>Introduction to Phylogenetic Networks</source>. 
<publisher-name>RJR Productions</publisher-name>, 
<publisher-loc>Uppsala, Sweden</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btaa465-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Page</surname><given-names>R.D.M.</given-names></name>, <name name-style="western"><surname>Charleston</surname><given-names>M.A.</given-names></name></person-group> (<year>1997</year>) 
<article-title>From gene to organismal phylogeny: reconciled trees and the gene tree/species tree problem</article-title>. <source>Mol. Phylogenet. Evol</source>., <volume>7</volume>, <fpage>231</fpage>–<lpage>240</lpage>.<pub-id pub-id-type="pmid">9126565</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Patterson</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Ancient admixture in human history</article-title>. <source>Genetics</source>, <volume>192</volume>, <fpage>1065</fpage>–<lpage>1093</lpage>.<pub-id pub-id-type="pmid">22960212</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pei</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2017</year>) 
<article-title>STELLS2: fast and accurate coalescent-based maximum likelihood inference of species trees from gene tree topologies</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>1789</fpage>–<lpage>1797</lpage>.<pub-id pub-id-type="pmid">28186220</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pickrell</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Pritchard</surname><given-names>J.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Inference of population splits and mixtures from genome-wide allele frequency data</article-title>. <source>PLoS Genet</source>., <volume>8</volume>, <fpage>e1002967</fpage>.<pub-id pub-id-type="pmid">23166502</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Price</surname><given-names>A.L.</given-names></name></person-group><etal>et al</etal> (<year>2007</year>) 
<article-title>A genomewide admixture map for Latino populations</article-title>. <source>Am. J. Hum. Genet</source>., 80, 1024-1036.</mixed-citation>
    </ref>
    <ref id="btaa465-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rasmussen</surname><given-names>M.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Genome-wide inference of ancestral recombination graphs</article-title>. <source>PLoS Genet</source>., <volume>10</volume>, <fpage>e1004342</fpage>.<pub-id pub-id-type="pmid">24831947</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rosenberg</surname><given-names>N.A.</given-names></name></person-group> (<year>2002</year>) 
<article-title>The probability of topological concordance of gene trees and species trees</article-title>. <source>Theor. Popul. Biol</source>., <volume>61</volume>, <fpage>225</fpage>–<lpage>247</lpage>.<pub-id pub-id-type="pmid">11969392</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Speidel</surname><given-names>L.</given-names></name></person-group><etal>et al</etal> (<year>2019</year>) A method for genome-wide genealogy estimation for thousands of samples. <italic>Nat. Genet.</italic>, <volume>51</volume>, 1321–1329<italic>.</italic></mixed-citation>
    </ref>
    <ref id="btaa465-B21">
      <mixed-citation publication-type="journal">The 1000 Genomes Project Consortium. (<year>2015</year>) 
<article-title>A global reference for human genetic variation</article-title>. <source>Nature</source>, <volume>526</volume>, <fpage>64</fpage>–<lpage>74</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa465-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wen</surname><given-names>D.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>Inferring phylogenetic networks using PhyloNet</article-title>. <source>Syst. Biol</source>., <volume>67</volume>, <fpage>735</fpage>–<lpage>740</lpage>.<pub-id pub-id-type="pmid">29514307</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wilson</surname><given-names>D.J.</given-names></name>, <name name-style="western"><surname>McVean</surname><given-names>G.</given-names></name></person-group> (<year>2006</year>) 
<article-title>Estimating diversifying selection and functional constraint in the presence of recombination</article-title>. <source>Genetics</source>, <volume>172</volume>, <fpage>1411</fpage>–<lpage>1425</lpage>.<pub-id pub-id-type="pmid">16387887</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2011</year>) 
<article-title>New methods for inference of local tree topologies with recombinant SNP sequences in populations</article-title>. <source>IEEE/ACM Trans. Comput. Biol. Bioinf</source>., <volume>8</volume>, <fpage>182</fpage>–<lpage>193</lpage>.</mixed-citation>
    </ref>
    <ref id="btaa465-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Coalescent-based species tree inference from gene tree topologies under incomplete lineage sorting by maximum likelihood</article-title>. <source>Evolution</source>, <volume>66</volume>, <fpage>763</fpage>–<lpage>775</lpage>.<pub-id pub-id-type="pmid">22380439</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2015</year>) 
<article-title>A coalescent-based method for population tree inference with haplotypes</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>691</fpage>–<lpage>698</lpage>.<pub-id pub-id-type="pmid">25344500</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>Y.</given-names></name></person-group> (<year>2016</year>) 
<article-title>An algorithm for computing the gene tree probability under the multispecies coalescent and its application in the inference of population tree</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>i225</fpage>–<lpage>i233</lpage>.<pub-id pub-id-type="pmid">27307621</pub-id></mixed-citation>
    </ref>
    <ref id="btaa465-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yu</surname><given-names>Y.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>The probability of a gene tree topology within a phylogenetic network with applications to hybridization detection</article-title>. <source>PLoS Genet</source>., <volume>8</volume>, <fpage>e1002660</fpage>.<pub-id pub-id-type="pmid">22536161</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Gigascience</journal-id>
    <journal-id journal-id-type="iso-abbrev">Gigascience</journal-id>
    <journal-id journal-id-type="publisher-id">gigascience</journal-id>
    <journal-title-group>
      <journal-title>GigaScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2047-217X</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6275460</article-id>
    <article-id pub-id-type="doi">10.1093/gigascience/giy110</article-id>
    <article-id pub-id-type="publisher-id">giy110</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Sequana coverage: detection and characterization of genomic variations using running median and mixture models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Desvillechabrol</surname>
          <given-names>Dimitri</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
        <xref ref-type="author-notes" rid="afn1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bouchier</surname>
          <given-names>Christiane</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kennedy</surname>
          <given-names>Sean</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-6286-1138</contrib-id>
        <name>
          <surname>Cokelaer</surname>
          <given-names>Thomas</given-names>
        </name>
        <!--<email>thomas.cokelaer@pasteur.fr</email>-->
        <xref ref-type="aff" rid="aff1">1</xref>
        <xref ref-type="aff" rid="aff2">2</xref>
        <xref ref-type="corresp" rid="cor1"/>
        <xref ref-type="author-notes" rid="afn1"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><label>1</label>Institut Pasteur – Pole Biomics – 25-28 Rue du Docteur Roux, 75015 Paris, France</aff>
    <aff id="aff2"><label>2</label>Institut Pasteur – Bioinformatics and Biostatistics Hub – C3BI, USR 3756 IP CNRS – Paris, France</aff>
    <author-notes>
      <corresp id="cor1"><bold>Correspondence address</bold>. Thomas Cokelaer, 25-28 Rue du Docteur Roux, 75015 Paris, France; E-mail: <email>thomas.cokelaer@pasteur.fr</email></corresp>
      <fn id="afn1">
        <p>Equal contributions</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <month>12</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2018-09-06">
      <day>06</day>
      <month>9</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>06</day>
      <month>9</month>
      <year>2018</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>7</volume>
    <issue>12</issue>
    <elocation-id>giy110</elocation-id>
    <history>
      <date date-type="received">
        <day>21</day>
        <month>9</month>
        <year>2017</year>
      </date>
      <date date-type="rev-recd">
        <day>09</day>
        <month>3</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>8</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2018. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2018</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="giy110.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="abs1">
        <title>Background</title>
        <p>In addition to mapping quality information, the <italic>Genome coverage</italic> contains valuable biological information such as the presence of repetitive regions, deleted genes, or copy number variations (CNVs). It is essential to take into consideration atypical regions, trends (e.g., origin of replication), or known and unknown biases that influence coverage. It is also important that reported events have robust statistics (e.g. <italic>z</italic>-score) associated with their detections as well as precise location.</p>
      </sec>
      <sec id="abs2">
        <title>Results</title>
        <p>We provide a stand-alone application, sequana_coverage, that reports genomic regions of interest (ROIs) that are significantly over- or underrepresented in high-throughput sequencing data. Significance is associated with the events as well as characteristics such as length of the regions. The algorithm first detrends the data using an efficient running median algorithm. It then estimates the distribution of the normalized genome coverage with a Gaussian mixture model. Finally, a <italic>z</italic>-score statistic is assigned to each base position and used to separate the central distribution from the ROIs (i.e., under- and overcovered regions). A double thresholds mechanism is used to cluster the genomic ROIs. HTML reports provide a summary with interactive visual representations of the genomic ROIs with standard plots and metrics. Genomic variations such as single-nucleotide variants or CNVs can be effectively identified at the same time.</p>
      </sec>
    </abstract>
    <kwd-group kwd-group-type="keywords">
      <kwd>genome coverage</kwd>
      <kwd>sequencing depth</kwd>
      <kwd>running median</kwd>
      <kwd>Sequana</kwd>
      <kwd>NGS</kwd>
      <kwd>Python</kwd>
      <kwd>Snakemake</kwd>
      <kwd>CNV</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">France Génomique Consortium</named-content>
          <named-content content-type="funder-identifier">10.13039/501100001665</named-content>
        </funding-source>
        <award-id>ANR 10-INBS-09-08</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="13"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Background</title>
    <p>Sequencing technologies allow researchers to investigate a wide range of genomic questions [<xref rid="bib1" ref-type="bibr">1</xref>], covering research fields such as the expression of genes (transcriptomics) [<xref rid="bib2" ref-type="bibr">2</xref>], the discovery of somatic mutations, or the sequencing of complete genomes of cancer samples, to name a few [<xref rid="bib3" ref-type="bibr">3</xref>, <xref rid="bib4" ref-type="bibr">4</xref>]. The emergence of second-generation sequencing, which is also known as next-generation sequencing, or NGS hereafter, has dramatically reduced the sequencing cost. This breakthrough multiplied the number of genomic analyses undertaken by research laboratories but also yielded vast amounts of data. Consequently, NGS analysis pipelines require efficient algorithms and scalable visualization tools to process this data and to interpret the results.</p>
    <p>Raw data generated by NGS experiments are usually stored in the form of sequencing reads (hereafter simply called reads). A read stores the information about a DNA fragment and also an error probability vector for each base. Read lengths vary from 35 to 300 bases for current short-read approaches [<xref rid="bib1" ref-type="bibr">1</xref>] to several tens of thousands of bases possible with long-read technologies such as Pacific Biosciences [<xref rid="bib5" ref-type="bibr">5</xref>, <xref rid="bib6" ref-type="bibr">6</xref>] or Oxford Nanopore [<xref rid="bib7" ref-type="bibr">7</xref>].</p>
    <p>After trimming steps (quality, adapter removal), most high-throughput sequencing (HTS) experiments will require mapping the reads onto a genome of reference [<xref rid="bib8" ref-type="bibr">8</xref>]. If no reference is available, a <italic>de novo</italic> genome assembly can be performed [<xref rid="bib9" ref-type="bibr">9</xref>]. In both cases, reads can be mapped back on the reference taking into account their quality. We define the <italic>genome coverage</italic> as the number of reads mapped to a specific position within the reference genome. The theoretical distribution of the genome coverage has been thoroughly studied following the seminal work of the Lander-Waterman model [<xref rid="bib10" ref-type="bibr">10</xref>, <xref rid="bib11" ref-type="bibr">11</xref>]. A common metric used to characterize the genome coverage is the sequencing depth [<xref rid="bib41" ref-type="bibr">12</xref>], which is the empirical average of the genome coverage. It may also be called depth of coverage (DOC), fold coverage, read depth, or confusingly, depth or coverage. The sequencing depth unit is denoted X. An example of genome coverage with a sequencing depth of about 450X is shown in Fig. <xref ref-type="fig" rid="fig1">1</xref>. Another useful metric is the breadth of coverage (BOC), which is the proportion of the intended genome reference covered by at least one read.</p>
    <fig id="fig1" orientation="portrait" position="float">
      <label>Figure 1:</label>
      <caption>
        <p>Example of a genome coverage series (in black in both panels). The genome coverage corresponds to the bacteria test case (see text). It contains a deleted region (around 2.2 Mbp) and various under- and overcovered regions (from 100 bp to several Kbp). Although the sequencing depth is about 500X, there is a nonlinear trend from 500X on both ends to 400X in the middle of the genome. The top panel shows the sequencing depth (blue horizontal line) and two arbitrary fixed thresholds (dashed red lines) at 400X and 500. Due to the nonlinear trend, the fixed thresholds lead to an increase of type I and type II errors. On the contrary, in the bottom figure, the trend is estimated using a RM (red line), and adaptive lower and upper thresholds (dashed red lines) can be derived.</p>
      </caption>
      <graphic xlink:href="giy110fig1"/>
    </fig>
    <p>The required sequencing depth depends on the experimental application. For instance, to detect human genome mutations, single-nucleotide polymorphisms (SNPs), and rearrangements, a 30 to 50X depth is recommended [<xref rid="bib1" ref-type="bibr">1</xref>, <xref rid="bib12" ref-type="bibr">13</xref>] in order to distinguish between sequencing errors and true SNPs. In contrast, the detection of rarely expressed genes in transcriptomics experiments often requires greater sequencing depth. However, greater sequencing depth is not always desirable. Indeed, in addition to a higher cost, ultradeep sequencing (large sequencing depth in excess of 1,000X) may be an issue for a <italic>de novo</italic> genome assembly [<xref rid="bib13" ref-type="bibr">14</xref>].</p>
    <p>The Lander-Waterman model provides a good theoretical estimate of the required sequencing depth to guarantee that all nucleotides are covered at least <italic>N</italic> times. This is, however, a theoretical estimate that does not take into account technical and biological limitations; some regions being difficult to efficiently map (e.g., repetitive DNA) or containing compositional biases (e.g., GC bias [<xref rid="bib14" ref-type="bibr">15</xref>]). Furthermore, the genome coverage itself may contain a nonconstant trend along the genome due to the impact of the origin of replication. Finally, some regions may be deleted or duplicated. The genome coverage example shown in Fig. <xref ref-type="fig" rid="fig1">1</xref> shows these different features.</p>
    <p>While the sequencing depth and other metrics (e.g., BOC) provide a quick understanding about the quality of sequencing and mapping, the genome coverage can also be analyzed to identify genomic variations such as single-nucleotide variations (SNVs) or copy number variations (CNVs) [<xref rid="bib15" ref-type="bibr">16–17</xref>].</p>
    <p>In order to detect genomic regions of interest (ROIs) based on genome coverage, a simple and fast approach might be to set two arbitrary thresholds bounding the sequencing depth. However, there are two major drawbacks with this approach. First, as shown in Fig. <xref ref-type="fig" rid="fig1">1</xref> (top panel) and Notebook 4 in [<xref rid="bib45" ref-type="bibr">18</xref>], with a fixed threshold, one may detect numerous false signals (type I errors) or fail to detect real events (type II errors). An adaptive threshold that follows the trend of the genome coverage is thus required. Furthermore, a fixed threshold is arbitrary, and so the detected events lack a robust means of assigning significance. A more robust alternative is to estimate the genome coverage profile histogram [<xref rid="bib18" ref-type="bibr">19</xref>] from which a <italic>z</italic>-score statistic can be used to identify outliers more precisely. Due to a number of known and unknown biases, one should still normalize the data [<xref rid="bib15" ref-type="bibr">16</xref>]. There are a number of different methods for detecting the ROIs. For example, for CNV detection, numerous techniques are used [<xref rid="bib17" ref-type="bibr">17</xref>], such as the mean-shift technique [<xref rid="bib16" ref-type="bibr">20</xref>] or bias correction followed by application of a complex statistical model [<xref rid="bib15" ref-type="bibr">16</xref>].</p>
    <p>Here, we describe a novel approach that can be used to efficiently detect various types of genomic ROIs. The algorithm does not target any specific type of genomic variations but instead systematically reports all positions (with a <italic>z</italic>-score) that have depth departing from the overall distribution. The algorithm normalizes the genome coverage using a running median (RM) and then calculates a robust statistic (<italic>z</italic>-score) for each base position based on the parameter estimation of the underlying distribution. This allows us to obtain robust and nonconstant thresholds at each genome position. Various types of clustering or filtering can then be implemented to focus on specific categories of variations.</p>
    <p>In the Data Description section, we describe the datasets used throughout as test-case examples. In the Methods section, we describe the RM used to detrend the genome coverage, the statistical methods used to characterize the central distribution from which outliers can be identified, and a double thresholds method proposed to cluster the ROIs. Finally, in the Applications section, we describe the standalone application, sequana_coverage, and potential applications for HTS-dependent research projects, including CNV detection.</p>
  </sec>
  <sec id="sec2">
    <title>Data Description</title>
    <p>Three test cases of genome coverage are presented here, covering representative organisms and sequencing depths. The genome coverage datasets are in BED (Browser Extensible Data) format, a tabulated file containing the coverage, reference (e.g., chromosome number, contig), and position on the reference. BED files can be created from binary alignment (BAM) files (mapped reads) using <monospace>bedtools</monospace> [<xref rid="bib19" ref-type="bibr">21</xref>], in particular, the <monospace>genomecov</monospace> tool.</p>
    <p>We first considered bacteria from a study of methicillin-resistant <italic>Staphylococcus aureus</italic> [<xref rid="bib20" ref-type="bibr">22</xref>]. One circular chromosome of 3 <italic>Mbp</italic> is present. The sequencing depth is 450X and the genome coverage exhibits a nonconstant trend along the genome (see Fig. <xref ref-type="fig" rid="fig1">1</xref>). This pattern, often observed in rapidly growing bacteria, is the result of an unsynchronized population where genome replication occurs bidirectionally from a single origin of replication [<xref rid="bib21" ref-type="bibr">23</xref>, <xref rid="bib22" ref-type="bibr">24</xref>]. The proportion of outliers (see Table <xref rid="tbl1" ref-type="table">1</xref>) is about 2.5% of the total bases. The original datasets (Illumina sequencing reads, paired-end, 100 bp) are available at the European Nucleotide Archive (ENA) [<xref rid="bib23" ref-type="bibr">25</xref>] under study accession number PRJEB2076 (ERR036019). The accession number of the reference is FN433596.</p>
    <p>The second organism is a virus with a sequencing depth of 1000X [<xref rid="bib24" ref-type="bibr">26</xref>]. A circular plasmid containing the virus chromosome is 19,795 bp long. About 13% of the genome coverage contains large or low coverage regions (outliers). It also contains two large undercovered regions (one partially undercovered and one region that is not covered at all), as shown in the Notebook 1 of [<xref rid="bib45" ref-type="bibr">18</xref>]). The accession number of the reference is JB409847.</p>
    <p>The third test case is a fungus (<italic>Schizosaccharomyces pombe</italic>) [<xref rid="bib25" ref-type="bibr">27</xref>]. The genome coverage has a sequencing depth of 105 X. It has three noncircular chromosomes of 5.5 Mbp, 4.5 Mbp, and 2.5 Mbp. The references from ENA are CU329670.1, CU329671.1, and CU329672.1. Although we will look at the first chromosome only (1.5% of outliers), the tools presented hereafter handle circular chromosomes and multiple chromosomes. See examples in Notebook 3 of [<xref rid="bib45" ref-type="bibr">18</xref>].</p>
    <p>We provide the three genome coverage data files in BED format on Synapse [<xref rid="bib26" ref-type="bibr">28</xref>, <xref rid="bib27" ref-type="bibr">29</xref>]. See Availability of supporting data and materials, at the end of the article, for more details.</p>
    <p>In addition to these three cases, we also use a population composed of six <italic>S. aureus</italic> isolates from [<xref rid="bib15" ref-type="bibr">16</xref>] (Supplementary Data), which is used to measure the efficiency of our algorithm against two dedicated CNVs detection tools: CNOGpro [<xref rid="bib15" ref-type="bibr">16</xref>] and CNVnator [<xref rid="bib16" ref-type="bibr">20</xref>].</p>
  </sec>
  <sec sec-type="methods" id="sec3">
    <title>Methods</title>
    <sec id="sec3-1">
      <title>Detrending the genome coverage</title>
      <p>The genome coverage function is denoted <italic>C</italic>(<italic>b</italic>) where <italic>b</italic> is the base (nucleotide) position on the genome of reference. The genome coverage and reference lengths are denoted <italic>N</italic>. For simplicity, we drop the parentheses and refer to the genome coverage as <italic>C<sub>b</sub></italic>. The empirical sequencing depth (average of genome coverage) is denoted <inline-formula><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\delta = \overline{C}_b$\end{document}</tex-math></inline-formula>. Ideally, <italic>C<sub>b</sub></italic> is made of a continuous homogeneous central region. In practice, however, this may be interrupted by a succession of under- and overcovered regions; these are the genomic ROIs that we want to detect.</p>
      <p>A naive classifier consists of setting two fixed thresholds, δ<sup>−</sup> and δ<sup>+</sup>, whereby low and high ROIs are defined as <inline-formula><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$C^-_b=C_b\le \delta ^-$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$C^+_b=C_b\ge \delta ^+$\end{document}</tex-math></inline-formula>, respectively. If <inline-formula><tex-math id="M4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$C^0_b$\end{document}</tex-math></inline-formula> denotes the remaining data such that <inline-formula><tex-math id="M5">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\delta ^- \lt C_b^0 \lt \delta ^+$\end{document}</tex-math></inline-formula>, then the genome coverage can be written as <inline-formula><tex-math id="M6">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$C_b = \lbrace C^0_b, C^+_b, C^-_b\rbrace$\end{document}</tex-math></inline-formula>.</p>
      <p>The advantage of the fixed-thresholds method is that it is conceptually simple and computationally inexpensive. However, there are two major drawbacks. First, as shown in Fig. <xref ref-type="fig" rid="fig1">1A</xref>, false negatives and false positives will increase as soon as there is a nonconstant trend present in the data. It may be a low-frequency trend as shown here, but high-frequency trends are also present (see, e.g., Fig. <xref ref-type="fig" rid="fig2">2</xref>). Also of importance is that an arbitrary choice of threshold(s) is unsatisfactory from a statistical point of view since we cannot associate any level of significance to a genomic region.</p>
      <fig id="fig2" orientation="portrait" position="float">
        <label>Figure 2:</label>
        <caption>
          <p>Moving average (top panel) and RM (bottom panel) behaviors in the presence of outliers (here, a deleted region in the center followed by a depleted region). In both cases, the window parameter is set to 40,000 bases. The presence of the deleted and depleted regions shows how the moving average (blue line, top panel) can be shifted compared to the RM (blue line, bottom panel). In the top panel, the thresholds (red lines) are also shifted and consequently the depleted region (position 1,620,000) is not detected. In addition, the rate of false detection increases (red dots). On the contrary, the RM has a better behavior with fewer false detections and the ability to detect the depleted region.</p>
        </caption>
        <graphic xlink:href="giy110fig2"/>
      </fig>
      <p>In order to account for a possible trend in the genome coverage series (and remove it), a standard method consists of dividing the series by a representative alternative such as its moving average (MA) or RM.</p>
      <p>The MA is computed at each position, <italic>b</italic>, as the average of <italic>W</italic> data points around that position and defined as follows:
<disp-formula id="equ1"><label>(1)</label><tex-math id="M7">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\rm {MA}_W(b) = \frac{1}{W}\sum _{i=-V}^{V} C(b+i),
\end{equation*}
\end{document}</tex-math></disp-formula>where <italic>W</italic> is the length of the moving window (odd number) and <italic>V</italic> = (<italic>W</italic> − 1)/2. Note that the first and last <italic>V</italic> values are undefined. However, in the case of circular DNA (e.g., viral or bacterial genomes), the first and last <italic>V</italic> points are defined since <italic>C<sub>b</sub></italic> is now a circular series.</p>
      <p>Similarly, the RM is computed at each position, <italic>b</italic>, as the median of <italic>W</italic> data points around that position:
<disp-formula id="equ2"><label>(2)</label><tex-math id="M8">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\rm {RM}_W(b) = median(\lbrace C(b-V), .., C(b+V)\rbrace ),
\end{equation*}
\end{document}</tex-math></disp-formula>where <italic>W</italic> and <italic>V</italic> are defined as before and the median function is defined as the middle point of the sample set (half of the data are below the median and half are above). A mathematical expression of the median and running median are given in the Appendix (Eq. <xref ref-type="disp-formula" rid="equ8">8</xref>).</p>
      <p>The mean estimator is commonly used to estimate the central tendency of a sample; nevertheless, it should be avoided in the presence of extraneous outliers, which are common in NGS genome coverage series (see, e.g., Fig. <xref ref-type="fig" rid="fig1">1</xref>). Figure <xref ref-type="fig" rid="fig2">2</xref> shows the impact of outliers when using an MA or a running mean. We will use the running median (RM) only and define the normalized genome coverage as follows:
<disp-formula id="equ3"><label>(3)</label><tex-math id="M9">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\widetilde{C}_b = \frac{C_b}{RM_W(b)}.
\end{equation*}
\end{document}</tex-math></disp-formula>We will use the tilde symbol for all metrics associated with the normalized genome coverage, <inline-formula><tex-math id="M10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula>. For instance, <inline-formula><tex-math id="M11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b=\lbrace \widetilde{C}^0_b, \widetilde{C}^+_b, \widetilde{C}^-_b\rbrace$\end{document}</tex-math></inline-formula>.</p>
      <p>The RM is used in various research fields, in particular, in spectral analysis [<xref rid="bib28" ref-type="bibr">30</xref>] to estimate the noise floor while ignoring biases due to narrow frequency bands (e.g., [<xref rid="bib29" ref-type="bibr">31</xref>]). Here, the goal is to avoid narrow peaks but also to be insensitive to long deleted regions. This can be a major issue in NGS as the RM estimator complexity is a function of the window length. Indeed, the RM algorithm involves the sorting of a sample of length <italic>W</italic> at each position of the genome. So, the RM estimator must be efficient and scalable. This is not an issue in spectral analysis and most fields where RMs are used but is a bottleneck for NGS analysis where <italic>W</italic> is large. As explained in the Appendix, the complexity of the sorting part is in <italic>O</italic>(<italic>n</italic><sup>2</sup>) in the worst case but, as with the MA, one can take advantage of the rolling window and the fact that the previous block is already sorted. We opted for the very efficient Pandas [<xref rid="bib30" ref-type="bibr">32</xref>] implementation (see Appendix for details). In our implementation, both the MA and RM have the ability to account for circular DNA data, which are essential for handling a circular series.</p>
      <p>If we normalize the genome coverage from the bacteria example (Fig. <xref ref-type="fig" rid="fig1">1</xref>), we obtain the results shown in Fig. <xref ref-type="fig" rid="fig3">3</xref>. Finally, note that with the genome coverage being discrete, the RM is also discrete as well as the normalized genome coverage. The discreteness will become more pronounced as sequencing depth decreases.</p>
      <fig id="fig3" orientation="portrait" position="float">
        <label>Figure 3:</label>
        <caption>
          <p>Normalized genome coverage <inline-formula><tex-math id="M12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula> (bacteria test case). The outliers present in the original genome coverage <italic>C<sub>b</sub></italic> (see Fig. <xref ref-type="fig" rid="fig1">1</xref>) are still present as well as the deleted regions. The distribution is now centered on unity (blue line). Since the distribution is normalized, constant thresholds can be used (dashed lines).</p>
        </caption>
        <graphic xlink:href="giy110fig3"/>
      </fig>
      <p>Hereafter, we will discuss the impact of the <italic>W</italic> parameter on the detection of genomic ROIs and how to set its value.</p>
    </sec>
    <sec id="sec3-2">
      <title>Parameter estimation of the central distribution and adaptive thresholds in the original space</title>
      <p>In the ideal case of randomly distributed reads across the genome, the number of reads covering each base follows a Poisson distribution [<xref rid="bib10" ref-type="bibr">10</xref>]. This distribution is discrete and has one parameter that corresponds to the sequencing depth (mean of the distribution). Yet, the Poisson distribution is often too narrow [<xref rid="bib18" ref-type="bibr">19</xref>], as can be observed in the three test cases considered. This is generally due to biological overdispersion. In order to account for overdispersion, the Poisson parameter can be distributed according to a second distribution. For instance, when the Poisson parameter is distributed according to a Gamma distribution, we obtain a negative binomial, which has two shape parameters [<xref rid="bib18" ref-type="bibr">19</xref>].</p>
      <p>A Poisson distribution with a large mean parameter approximates a normal distribution, even though, technically speaking, it is not (discrete vs continuous and one parameter vs two). Yet, for δ ≫ 1, we can assume that the <italic>C<sub>b</sub></italic> distribution exhibits a Gaussian distribution denoted <inline-formula><tex-math id="M13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {N}(\mu , \sigma ^2)$\end{document}</tex-math></inline-formula> hereafter where μ is the average of the genome coverage (δ in an ideal case) and σ is its standard deviation. What about the normalized genome coverage <inline-formula><tex-math id="M14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula>? It is a ratio distribution where the numerator follows <inline-formula><tex-math id="M15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {N}(\mu , \sigma ^2)$\end{document}</tex-math></inline-formula> distribution while the denominator’s distribution is that of the RM. We can see empirically that for large δ and small <italic>W</italic> parameter, the distribution of the RM follows a Gaussian distribution, while for large <italic>W</italic> or small δ, the RM tends to be discrete and the distribution may depart from a Gaussian distribution (see Notebook 7 of [<xref rid="bib45" ref-type="bibr">18</xref>]). Even if we knew the RM distribution, the ratio distribution is only known for two Gaussian distributions <italic>X</italic> and <italic>Y</italic> (Cauchy distribution) and when (i) the two distributions are centered on zero, which is not the case, and (ii) when they are independent, which is also not the case. Furthermore, the scenario we considered (ideal distribution, δ ≫ 1) is too restrictive since we are interested in identifying outliers in real data and may encounter cases where δ is small (for which <italic>C<sub>b</sub></italic> follows a negative binomial, not a Gaussian distribution). So, we envisage a solution based on a mixture model as described hereafter.</p>
      <p>Genome coverage is a mix of distributions. Consider, for instance, the presence of many CNVs, each with a different copy number (CN; either depletion or duplication). The overall distribution here would be very difficult to model analytically. Therefore, the assumption and our goal are to fit a known distribution on the central distribution so as to establish <italic>z</italic>-scores on the remaining data.</p>
      <p>Our first hypothesis is that <inline-formula><tex-math id="M16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula> can be decomposed into a central distribution, <inline-formula><tex-math id="M17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}^0_b$\end{document}</tex-math></inline-formula>, and a set of outliers, <inline-formula><tex-math id="M18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}^1_b = \lbrace \widetilde{C}^+_b, \widetilde{C}^-_b\rbrace$\end{document}</tex-math></inline-formula> where the central distribution is predominant: <inline-formula><tex-math id="M19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\left|\widetilde{C}^0_b\right| \gt \left|\widetilde{C}^1_b\right|$\end{document}</tex-math></inline-formula> (vertical bars indicate the cardinality of the sets).</p>
      <p>Our second hypothesis is that the mixture model that represents <inline-formula><tex-math id="M20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula> is a Gaussian mixture model of <italic>k</italic> = 2 models only: <inline-formula><tex-math id="M21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}^0_b \sim \mathcal {N}(\widetilde{\mu }_0, \widetilde{\sigma }_0^2)$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M22">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}^1_b \sim \mathcal {N}(\widetilde{\mu }_1, \widetilde{\sigma }_1^2)$\end{document}</tex-math></inline-formula>. The central distribution <inline-formula><tex-math id="M23">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}^0_b$\end{document}</tex-math></inline-formula> exhibits a clear Gaussian distribution both on simulated data (see Notebook 7 in [<xref rid="bib45" ref-type="bibr">18</xref>]) and on real data (see the three examples in Fig. <xref ref-type="fig" rid="fig4">4</xref>). The second model is used to identify outliers (below or above the central distribution). The parameters of the second model are not used in defining the central distribution and so have little impact on detection.</p>
      <fig id="fig4" orientation="portrait" position="float">
        <label>Figure 4:</label>
        <caption>
          <p>Probability density functions (PDFs) of the normalized genome coverage function concerning the three test cases. The distributions were fitted with Gaussian mixture models with <italic>k</italic> = 2 models. The first model (black line) fits the central distribution’s PDF, and the second model (red line close to <italic>y</italic> = 0) fits the outliers’ PDF. The dashed line (close to the black lines) indicates the mixture distribution. In each panel, we report the parameters of the two Gaussian distributions, the proportions π<sub>0</sub>, π<sub>1</sub>, and the Θ parameter introduced in the text that gives the centralness of the data for each test case.</p>
        </caption>
        <graphic xlink:href="giy110fig4"/>
      </fig>
      <p>Similar to the method deployed in [<xref rid="bib18" ref-type="bibr">19</xref>] to identify a mixture model of negative binomials (on raw genome coverage), we will use an expectation maximization (EM) [<xref rid="bib31" ref-type="bibr">33</xref>] method to estimate the parameters <inline-formula><tex-math id="M24">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\mu }_{0,1}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M25">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\sigma }_{0,1}$\end{document}</tex-math></inline-formula> (on the normalized genome coverage).</p>
      <p>The EM algorithm is an iterative method that alternates between two steps: an expectation step that creates a function for the expectation of the log-likelihood using the current estimate of the parameters and a minimization step that computes parameters maximizing the expected log-likelihood found in the first step. The likelihood function and the maximum likelihood estimate can be derived analytically in the context of Gaussian distributions. Note that in addition to the means and standard deviations, the mixture parameters also need to be estimated. These are denoted <inline-formula><tex-math id="M26">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\pi }_0$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M27">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\pi }_1$\end{document}</tex-math></inline-formula>. The EM algorithm is standard and can be found in various scientific libraries. Note, however, that the normalized genome coverage may contain zeros in the presence of deleted regions, and the estimation of the mixture model should ignore them.</p>
      <p>We have applied the EM algorithm on the normalized genome coverage vector on various real NGS datasets, including the three test cases in Fig. <xref ref-type="fig" rid="fig4">4</xref>. The EM retrieves the parameters of the central distribution (in particular, <inline-formula><tex-math id="M28">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\tilde{\mu }_0=1$\end{document}</tex-math></inline-formula>) and the outliers. Note that the choice of the RM parameter, <italic>W</italic>, does not significantly affect the parameter estimation. In each case, the mean of the central distribution is very close to unity. The standard deviation varies significantly and is a function of the sequencing depth only (since the outliers are now incorporated in <inline-formula><tex-math id="M29">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$C_b^1$\end{document}</tex-math></inline-formula>). Finally, we can confirm that the proportion of outliers is small compared to the central distributions by inspection of parameters π<sub>0</sub> and π<sub>1</sub>: <inline-formula><tex-math id="M30">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\pi }_0 \gt \gt \widetilde{\pi }_1$\end{document}</tex-math></inline-formula>.</p>
      <p>Once we have identified the parameters of the central distribution <inline-formula><tex-math id="M31">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_0$\end{document}</tex-math></inline-formula>, we can assign statistics for <inline-formula><tex-math id="M32">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula> in terms of <italic>z</italic>-score:
<disp-formula id="equ4"><label>(4)</label><tex-math id="M33">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
z(b) = \frac{\widetilde{C}(b)-\widetilde{\mu }_0}{\widetilde{\sigma }_0}.
\end{equation*}
\end{document}</tex-math></disp-formula>Since the <italic>z</italic>-score corresponds to a normal distribution, we can now set a threshold in terms of tolerance interval within which a specified proportion of the genome coverage falls. For instance, with a threshold of 3, we know from the normal distribution that 99.97% of the sample lies in the range –3 and +3. The exact mathematical value is given by the complementary error function, erfc(<italic>x</italic>), where <inline-formula><tex-math id="M34">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$x=n/\sqrt{2}$\end{document}</tex-math></inline-formula>. Note that for <italic>n</italic> = 3, 4, and 5, the tolerance interval is 99.73%, 99.993%, and 99.999942%, respectively. Thus, for a genome of 1 Mbp, by pure chance, we should obtain about 2,700, 70, and 1 outlier(s), respectively.</p>
      <p>If we now replace <inline-formula><tex-math id="M35">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b$\end{document}</tex-math></inline-formula> in Eq. <xref ref-type="disp-formula" rid="equ4">4</xref> using its expression from Eq. <xref ref-type="disp-formula" rid="equ3">3</xref>, we can express the original genome coverage as a function of the RM, the <italic>z</italic>-score, and the parameters of the central distribution:
<disp-formula id="equ5"><label>(5)</label><tex-math id="M36">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
C(b) = \left( \widetilde{\mu }_0 + z(b) \widetilde{\sigma }_0 \right)RM_W(b).
\end{equation*}
\end{document}</tex-math></disp-formula>We can now set a fixed threshold <italic>z</italic>(<italic>b</italic>) = ±<italic>n</italic> in the normalized space. This is much easier to manipulate. Moreover, we can derive a variable threshold in the original space that is function of the genome position:
<disp-formula id="equ6"><label>(6)</label><tex-math id="M37">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\tilde{\delta }^\pm (b) = \left( \widetilde{\mu }_0 \pm n^\pm \times \widetilde{\sigma }_0 \right)RM_W(b).
\end{equation*}
\end{document}</tex-math></disp-formula>Examples of variable upper and lower threshold functions are shown in Figs. <xref ref-type="fig" rid="fig1">1</xref> and <xref ref-type="fig" rid="fig2">2</xref> (red dashed lines). This manipulation results in a robust statistical estimate of the presence of outliers in the genome coverage. The <italic>z</italic>-score, computed earlier, provides a precise level of confidence.</p>
      <p>Using the normalization presented above, we can define the <italic>centralness</italic> as one minus the proportion of outliers contained in the genome coverage:
<disp-formula id="equ7"><label>(7)</label><tex-math id="M38">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\Theta _n = 1 - \frac{\left| \widetilde{C}^1_b \right|}{\left|\widetilde{C}_b\right|} = 1-\frac{\left| \widetilde{C}^1_b \right|}{G},
\end{equation*}
\end{document}</tex-math></disp-formula>where <italic>G</italic> is the length of the genome and vertical bars indicate the cardinality. This necessarily depends on how the threshold <italic>n</italic> is set in the normalized space. In the case of an ideal Gaussian distribution and <italic>n</italic> = 3, the centralness should equal the tolerance interval of a normal distribution <inline-formula><tex-math id="M39">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {N}(0,1)$\end{document}</tex-math></inline-formula> that is the error function, <inline-formula><tex-math id="M40">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\textrm{erf}(n/\sqrt{2})$\end{document}</tex-math></inline-formula>. The centralness equals unity when there are no outliers, i.e., <italic>n</italic> → ∞. Finally, note that the centralness is meaningless for values below 0.5 (meaning that the central distribution is not central!). As shown in Table <xref rid="tbl1" ref-type="table">1</xref>, Θ<sub>3</sub> equals 0.974, 0.99, and 0.86 in the three cases considered (bacteria, fungus, and virus). So the proportion of outliers in the virus case is higher than in the two other test cases, which is not obvious at first glance given the very different lengths of the genome considered.</p>
      <table-wrap id="tbl1" orientation="portrait" position="float">
        <label>Table 1:</label>
        <caption>
          <p>Metrics derived from the genome coverage of the three test cases considered—bacteria, fungus, and virus).</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Metric</th>
              <th rowspan="1" colspan="1">Bacteria</th>
              <th rowspan="1" colspan="1">Fungus</th>
              <th rowspan="1" colspan="1">Virus</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Genome length</td>
              <td rowspan="1" colspan="1">3 Mbp</td>
              <td rowspan="1" colspan="1">5.5 Mbp</td>
              <td rowspan="1" colspan="1">19,795 bp</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">BOC</td>
              <td rowspan="1" colspan="1">0.985</td>
              <td rowspan="1" colspan="1">1.0</td>
              <td rowspan="1" colspan="1">0.966</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Mean δ</td>
              <td rowspan="1" colspan="1">447.8</td>
              <td rowspan="1" colspan="1">105.49</td>
              <td rowspan="1" colspan="1">931.3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Median δ</td>
              <td rowspan="1" colspan="1">453</td>
              <td rowspan="1" colspan="1">105</td>
              <td rowspan="1" colspan="1">988</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">σ</td>
              <td rowspan="1" colspan="1">84.1</td>
              <td rowspan="1" colspan="1">19.9</td>
              <td rowspan="1" colspan="1">237.2</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">CV</td>
              <td rowspan="1" colspan="1">0.19</td>
              <td rowspan="1" colspan="1">0.19</td>
              <td rowspan="1" colspan="1">0.25</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <italic>W</italic>
              </td>
              <td rowspan="1" colspan="1">5,001/(20,001)</td>
              <td rowspan="1" colspan="1">5,001/(20,001)</td>
              <td rowspan="1" colspan="1">5,001</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <inline-formula>
                  <tex-math id="M41">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\mu }_0$\end{document}</tex-math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">1.000/(1.001)</td>
              <td rowspan="1" colspan="1">1.002/(1.002)</td>
              <td rowspan="1" colspan="1">1.011</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <inline-formula>
                  <tex-math id="M42">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\sigma }_0$\end{document}</tex-math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">0.073/(0.073)</td>
              <td rowspan="1" colspan="1">0.162/(0.158)</td>
              <td rowspan="1" colspan="1">0.069</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Θ<sub>4</sub></td>
              <td rowspan="1" colspan="1">0.957/(0.960)</td>
              <td rowspan="1" colspan="1">0.986/(0.985)</td>
              <td rowspan="1" colspan="1">0.868</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="req-153657180276982050">
            <p>The top part of the table contains metrics derived from the genome coverage only, while the bottom part contains metrics derived from the normalized genome coverage. All metrics are defined in the text; BOC stands for breadth of coverage, δ for sequencing depth, and CV for coefficient of variation. The standard deviation is denoted σ. In the bacteria and fungus cases, the running window W is set to 5,001 or 20,001, while for the virus we used 5,001 only. The parameters of the central distribution,<inline-formula><tex-math id="M43">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\mu }_0$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M44">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{\sigma }_0$\end{document}</tex-math></inline-formula> , and the centralness, Θ4, are reported. Proportion of outliers (1 – Θ4) are about 4.5%, 1.5%, and 13% for the bacteria, fungus, and virus, respectively.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Finally, it is important to note that the <italic>z</italic>-scores assigned to each position on the genome coverage are stable with respect to the <italic>W</italic> parameter. Indeed, as shown in Notebook 7 of [<xref rid="bib45" ref-type="bibr">18</xref>], the mean and standard deviation of the distribution of the normalized genome coverage <inline-formula><tex-math id="M45">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}$\end{document}</tex-math></inline-formula> are not affected by the parameter <italic>W</italic>.</p>
    </sec>
    <sec id="sec3-3">
      <title>Genomic ROIs</title>
      <p>Starting from the normalized genome coverage, <inline-formula><tex-math id="M46">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}$\end{document}</tex-math></inline-formula>, we estimate the parameters of the central distribution. This allows us to set a <italic>z</italic>-score on each genome position. All values above the threshold <italic>n</italic><sup>+</sup> are stored into a subset of events denoted <inline-formula><tex-math id="M47">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b^+$\end{document}</tex-math></inline-formula>, and all values below the threshold <italic>n</italic><sup>−</sup> are stored into <inline-formula><tex-math id="M48">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\widetilde{C}_b^-$\end{document}</tex-math></inline-formula>. The selected data can be made of continuous or noncontinuous regions. The number of events can be quite large for low thresholds (e.g., for <italic>n</italic><sup>+</sup> = 2.5, the bacteria has 35  Kbp such events). However, many positions belong to the same event (i.e., same cluster). Consider the short genomic region in Fig. <xref ref-type="fig" rid="fig5">5</xref>, which is made of 2,000 base positions. It contains five different regions that cross the threshold <italic>n</italic><sup>+</sup>. Ideally, the five events should be clustered together. To do so, we proceed with a double-threshold approach [<xref rid="bib29" ref-type="bibr">31</xref>] where a second fixed threshold <italic>m</italic><sup>+</sup> is defined as <italic>m</italic><sup>+</sup> = α<sup>+</sup><italic>n</italic><sup>+</sup> where α<sup>+</sup> ≤1 and usually set to 1/2.</p>
      <fig id="fig5" orientation="portrait" position="float">
        <label>Figure 5:</label>
        <caption>
          <p>Example of a genomic ROI clustered using a double-threshold method. The genome coverage (black line) and its RM (red) on a short genome location of 2 Kbp. The first threshold (top dashed gray line) alone identifies many short ROIs (dark blue areas). Using a second threshold (bottom dashed gray line), the short ROIs are clustered and identified as a single ROI (colored areas). Yellow vertical lines indicate the beginning and end of the cluster.</p>
        </caption>
        <graphic xlink:href="giy110fig5"/>
      </fig>
      <p>In the normalized space, the double-threshold method works as follows. We scan the entire genome coverage vector starting from the first position <italic>b</italic> = 0. As soon as a per-base coverage value crosses the threshold <italic>m</italic><sup>+</sup>, a new cluster starts. We then accumulate the following bases until the per-base coverage crosses <italic>m</italic> + again (going down). If the maximum of the cluster is above the first threshold, <italic>n</italic><sup>+</sup>, then the cluster is classified as an ROI . The process carries on until the end of the vector is reached. We repeat this classification for the lower case (with <italic>m</italic><sup>−</sup> = α<sup>−</sup><italic>n</italic><sup>−</sup>). This method dramatically reduces the number of short ROIs. Finally, we can characterize each region with various metrics such as the length of the region, maximum coverage, or mean coverage. If consecutive data points were independent, we could also report a <italic>z</italic>-score for large events (probability that an event of length N crosses a predefined threshold). Instead, for simplicity, we report the mean and max <italic>z</italic>-score of the event only.</p>
    </sec>
    <sec id="sec3-4">
      <title>Impact of the RM window parameter</title>
      <p>In order to estimate correctly the general trend of the genome coverage, the RM should cancel out the impact of long deleted, duplicated, or depleted regions. Because the median takes the middle point of a segment as its estimate, the parameter <italic>W</italic> should be set to 2<italic>N</italic> where <italic>N</italic> is the longest atypical genomic region present in the data. For instance, an expected CNV region with a length of 50,000 would imply setting <italic>W</italic> = 100,000 so that the genome coverage trend remains appropriate (see Notebook 6 in [<xref rid="bib45" ref-type="bibr">18</xref>] for a counter example). Since such regions are not known in advance, <italic>W</italic> should be as large as possible so as to avoid the presence of any long regions that depart from the central distribution. Yet, over-increasing <italic>W</italic> may have undesired effects. For instance, in the extreme case where <italic>W</italic> is set to the full genome length, one would obtain the same value all along the genome (the sequencing depth itself). This could lead to an increase of false detections or missed detections. By default, we recommend setting <italic>W</italic> to 20,000. Indeed, below this value, it seems that there is a slight increase in marginal false detections, while for values in the range <italic>W</italic> = 20,000 to 500,000, the list of ROIs is similar (see Notebook 6 in [<xref rid="bib45" ref-type="bibr">18</xref>]). As mentioned above, the impact of the <italic>W</italic> parameter on the <italic>z</italic>-scores is marginal, so one can safely change it from 20,000 to 100,000. A strategy could be to run two analysis: one with <italic>W</italic> = 20,000 to list the short events and one with very large <italic>W</italic> for longer events.</p>
    </sec>
  </sec>
  <sec id="sec4">
    <title>Applications</title>
    <sec id="sec4-1">
      <title>Stand-alone and computational time</title>
      <p>Although the algorithm described here is quite simple <italic>per se</italic>, each of the three steps requires optimization in order to handle HTS datasets. We provide an implementation within the <monospace>Sequana</monospace> project [<xref rid="bib32" ref-type="bibr">34</xref>], which is a Python library that also provides HTS pipelines based on the workflow management system called Snakemake [<xref rid="bib33" ref-type="bibr">35</xref>] (Makefile-like with a Python syntax). Stand-alone applications are provided, including sequana_coverage. In addition to the algorithm described above, the stand-alone application has several additional features as explained hereafter. The input file can be either a BAM or a BED file [<xref rid="bib19" ref-type="bibr">21</xref>] encoded as a three-column tab-delimited file (chromosome, position, coverage). Consider this command:</p>
      <p>
        <monospace>sequana_coverage --input virus.bed -w 4001 -o</monospace>
      </p>
      <p>The -<italic>o</italic> option indicates that the input is a circular DNA molecule. The RM window can be tuned using the -<italic>w</italic> option. Several chromosomes may be present (e.g., fungus case). By default, all chromosomes are analyzed, but users can select a specific one using the -<italic>c</italic> option. Other useful options are the ability to change the thresholds on the <italic>z</italic>-score, cluster close ROIs, and analyze the data by chunks (useful for large eukaryote genomes). An additional feature is the ability to download a reference genome (given its ENA [<xref rid="bib23" ref-type="bibr">25</xref>] accession number). This is achieved internally using BioServices [<xref rid="bib34" ref-type="bibr">36</xref>], which can switch between the ENA and National Center for Biotechnology Information web services to download the data automatically. Regions of lower genome coverage are sometimes related to repeated content or unusual GC content [<xref rid="bib36" ref-type="bibr">37</xref>]. Using the reference, we provide a GC content vs coverage plot in the report as shown in Fig. <xref ref-type="fig" rid="fig6">6</xref>. GenBank annotations can also be downloaded to annotate ROIs.</p>
      <fig id="fig6" orientation="portrait" position="float">
        <label>Figure 6:</label>
        <caption>
          <p>Two-dimensional histogram of the GC content vs coverage available in the HTML reports. The data used correspond to the bacteria test case. We can quickly see that the mean coverage is around 450, the mean GC is around 30%, there is part of the genome coverage with zero coverage (left hand side blue line), and there are low and high ROIs with coverage up to 1,500X that would possibly require more investigations. Be aware of the logarithmic scale; most of the data are indeed centered in the blue area. The brown outliers represent less than a few percentages of the data.</p>
        </caption>
        <graphic xlink:href="giy110fig6"/>
      </fig>
      <p>The output is a directory that contains (for each contig/chromosome): an HTML report, a summary file (JSON format), and a comma-separated values (CSV) file with detected ROIs. In addition, we provide a multiQC report [<xref rid="bib35" ref-type="bibr">38</xref>] via a plugin available in the <monospace>Sequana</monospace> library. The multiQC report contains a summary of the mapping metrics, including the DOC and BOC metrics, the number of ROIs, and the centralness (defined in this manuscript). The CSV file is structured with one ROI per row, including information such as the location, length, mean <italic>z</italic>-score, max <italic>z</italic>-score, and mean coverage. In the individual HTML reports, <monospace>JavaScript</monospace> plots are provided together with the ROIs for quick inspection (not available for genomes &gt;5 Mbp).</p>
      <p>Finally, the stand-alone application is designed to be scalable. The virus genome is analyzed in a few seconds, while the 5-Mbp bacteria genome is analyzed in about 1 minute on a standard computer including analysis and HTML reports (Python implementation). Although the stand-alone was initially designed for bacterial genomes (genome could fit in memory), we extended the functionality so that larger genomes could also be analyzed. In particular, we looked at human genome used in [<xref rid="bib16" ref-type="bibr">20</xref>]. Although the algorithm is not designed for this lower DOC (around 5X), as the central distribution does not follow a Gaussian distribution, the genome coverage can still be analyzed. Thresholds were increased (from 4 to 6) to avoid an abundance of false detections. The 3.5-Gb genome could be analyzed in a couple of hours (see the conclusion section for details) on a single core. This required adding an option called <italic>binning</italic> that merges data before analysis. Similar to the CNVnator implementation, this reduces the breakpoint accuracy and prevents the tool from identifying short events.</p>
    </sec>
    <sec id="sec4-2">
      <title>Example: viral genome characterization</title>
      <p>In this section we illustrate the usage of sequana_coverage on the viral test case (described in the Data Description section). This 18-kb-long genome contains three SNVs (coverage of zero) of length 3, 1, and 1 base with two of them separated by only two bases; two deleted events (700 and 800 bases long); and three short depleted regions with a low signal-to-noise ratio (see Fig. <xref ref-type="fig" rid="fig7">7</xref> for a visual representation). When running sequana_coverage, the default window parameter is set to 20,000 bases for genomes longer than 100,000 bases. Otherwise, the default value of <italic>W</italic> is set to a fifth of the genome length. Here, it means <italic>W</italic> ∼ 4,000. Taking into account the circularity of the genome, we obtain the results shown in Fig. <xref ref-type="fig" rid="fig7">7</xref> and Table <xref rid="tbl2" ref-type="table">2</xref>, where nine ROIs are found distributed into eight depleted regions and one enriched region. We emphasize the <italic>z</italic>-score using the following color code: red, orange, and yellow for large, intermediate, and small values, respectively. Table <xref rid="tbl2" ref-type="table">2</xref> lists the lengths of the ROIs as well as their starting positions. The second ROI (enriched region) can be considered as a false positive, but the eight depleted regions can be considered as true positives. The false positive is due to the presence of two depleted regions that bias the RM estimation and can be avoided by increasing the <italic>W</italic> parameter. For instance, with <italic>W</italic> = 5,000, the enriched region is not detected while keeping the eight depleted regions.</p>
      <fig id="fig7" orientation="portrait" position="float">
        <label>Figure 7:</label>
        <caption>
          <p>ROIs detected with sequana_coverage. The <italic>W</italic> window parameter was set to 4,000 bases, and circularity was taken into account. We identify nine events: eight depleted regions and one enriched region. The enriched region could be considered as a false positive that appears like a detection due to the presence of two flanking deleted regions. The color code is as follows: red for max <italic>z</italic>-score above 12, orange for max <italic>z</italic>-score between 8 and 12, and yellow for max <italic>z</italic>-score between 4 and 8; gray is for the false-positive event. Using a larger window (e.g., 5,000), the RM would be smoother between the two long deleted events (on the right-hand side); therefore, the false positive would no longer be detected while keeping the eight depleted regions in the list of ROIs.</p>
        </caption>
        <graphic xlink:href="giy110fig7"/>
      </fig>
      <table-wrap id="tbl2" orientation="portrait" position="float">
        <label>Table 2:</label>
        <caption>
          <p>List of ROIs detected by sequana_coverage, CNVnator, and CNOGpro tools</p>
        </caption>
        <table frame="hsides" rules="groups">
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <inline-graphic xlink:href="giy110ufig1.jpg"/>
              </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="req-153657189598182050">
            <p>The sequana columns include three analyses with a window parameter W set to 2, 4, and 5 kb. The 4-kb column corresponds to the results shown in Fig. <xref ref-type="fig" rid="fig7">7</xref>. The CNVnator columns include two analyses with a bin parameter set to 10 and 20. The CNOGpro columns include two analyses with a bin parameter set to 10 and 100. The color code is the same as in Fig. <xref ref-type="fig" rid="fig7">7</xref>: red, orange, and yellow for significant, intermediate, and small z-scores. Note that CNVnator and CNOGpro tools have no false-positive results (ROI 2 is not detected). However, none of the ROIs 4 to 9 (short ones) are detected. For each event, we also indicate the starting position (s) and length (L) of the events reported by sequana_coverage.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>For comparison, we used CNVnator and CNOGpro tools. Although they are dedicated to the search for CNVs, we were expecting to detect at least the long deleted events (ROIs 1 and 3). As summarized in Table <xref rid="tbl2" ref-type="table">2</xref>, with a bin parameter of 10 or 20, CNVnator detects the two CNV-like events with lengths similar to what is reported by sequana_coverage. No other events were detected (none of the short ones). We obtained similar results with a bin set to 5 (optimal, as explained hereafter), but there are also two short false positives. CNOGpro tool detects the ROI 1, but the ROI 3 is either missed or only partially detected (see Notebook 10 [<xref rid="bib38" ref-type="bibr">45</xref>]for details). So, despite a marginal false positive, sequana_coverage is able to detect the eight depleted ROIs with sensible length estimation. The results are also robust with respect to the window parameter <italic>W</italic>.</p>
    </sec>
    <sec id="sec4-3">
      <title>CNV detection</title>
      <p>In extending the functionality of sequana_coverage to include larger genomes, we also explored its ability to detect CNVs.</p>
      <p>CNV detection methods can be categorized into five different strategies depending on the input data: paired-end mapping, split-read, read depth (i.e., genome coverage), <italic>de novo</italic> assembly, and combinations of these approaches. Among the numerous tools based on the genome coverage reported in [<xref rid="bib17" ref-type="bibr">17</xref>], we choose CNVnator [<xref rid="bib16" ref-type="bibr">20</xref>], which is able to detect CNVs in various sizes ranging from a few hundred bases to mega-bases. CNVnator can also handle whole genome datasets and exhibits a good precision at detecting breakpoints. We also considered a more recent tool, CNOGpro [<xref rid="bib15" ref-type="bibr">16</xref>], which is dedicated to prokaryotic whole genome sequencing data. As stated in [<xref rid="bib17" ref-type="bibr">17</xref>], none of the various tools have been able to detect the full spectrum of all types of CNVs with high sensitivity and specificity. To increase the performance in detecting CNVs and reduce false positives, a combinatorial approach could take advantage of the different methods.</p>
      <p>We first examined the false-positive rate of sequana_coverage on simulated data. Technical details can be found in the Notebook 5 [<xref rid="bib45" ref-type="bibr">18</xref>]. Simulated paired-end data were used to create 100 genome coverage data for <italic>S. aureus</italic>, each one having a depth of 100X. The number of ROIs detected with sequana_coverage is 17.5 on average (standard deviation of 6). The 1,750 ROIs are plotted in Fig. <xref ref-type="fig" rid="fig8">8</xref>, showing their mean <italic>z</italic>-scores vs lengths. We observed that no <italic>z</italic>-score are above 5 (in absolute value). However, the sizes of the ROIs vary widely, up to 80 bases. Such events are not caused by genuine features in the genome (e.g., high GC, repeats). Indeed, across the 100 independent lists of ROIs, the longest events do not appear at the same location on the reference. They are therefore real false positives. Consequently, in the context of CNVs detection, one should ignore events with mean <italic>z</italic>-score below 5 and length below 100 bases.</p>
      <fig id="fig8" orientation="portrait" position="float">
        <label>Figure 8:</label>
        <caption>
          <p>Distribution of ROIs found by analyzing 100 simulated genome coverage data from <italic>Staphylococcus aureus</italic> at a depth of 100X. No features such as CNVs were injected. We plot the mean <italic>z</italic>-score of each ROIs vs its length (in bases). No events have <italic>z</italic>-score above 5 or below -5. All ROI lengths are below 100 bases. For each simulation, an average of 17 ROIs are found.</p>
        </caption>
        <graphic xlink:href="giy110fig8"/>
      </fig>
      <p>We then studied the sensitivity of sequana_coverage by injecting three types of CNVs into the simulated data. First, we deleted 30 nonoverlapping regions (length between 1,000 and 8,000). We achieved a 100% sensitivity. Indeed, all deleted regions were reported with starting and ending position accuracies below 5 bases. Second, we duplicated 80 nonoverlapping regions (same length as above), with a CN = 2. Again, we have a 100% sensitivity with accuracies below 5 bases. The sequana_coverage stores a value called <italic>log2_ratio</italic> for each ROI. This value corresponds to the ratio of the mean coverage and mean RM for that ROI and is equivalent to the CN. The average CN reported for the 80 injected CNVs is 1.96 ± 0.04. Third, we injected a mix of 80 depleted and duplicated events (same length as above) at a coverage of 150X (CN = 1.5) or 50X (CN = 0.5). The 80 events are found with a slightly reduced accuracy (still below 20 bases). The CN reported for duplicated and deleted events is 1.49 ± 0.023 and 0.5 ± 0.026, respectively. The simulated data indicate that the algorithm can detect short CNVs (from 1,000 to 8,000) with high sensitivity and accurate estimate of CN and location. If we set the threshold to a mean <italic>z</italic>-score of 5 and discard events with length below 100 bases, there are no false-positive detections.</p>
      <p>For a comparison with published tools using real data, we examined the <italic>S. aureus</italic> case used in [<xref rid="bib16" ref-type="bibr">20</xref>]. We ran sequana_coverage and CNVnator on the 3-Mbp genome. CNVnator has a parameter called <italic>bin</italic>, which is essentially used to define the breakpoint resolution accuracy. We used bin parameters of 1, 6, and 100 (default) where 6 was chosen as the optimal bin size for the sequencing depth considered (500X). Here, we refer to the instructions found in [<xref rid="bib16" ref-type="bibr">20</xref>] that led to an empirical equation bin = 2,500/DOC (see also Notebook 8 [<xref rid="bib45" ref-type="bibr">18</xref>]). All results can be found in Notebook 9 in [<xref rid="bib45" ref-type="bibr">18</xref>]. The number of events reported by CNVnator are 207, 72, and 13 for bin = 1, 6, and 100, respectively. With sequana_coverage, <italic>W</italic> was set to 40,000 bases. The number of reported events is about 600 events (quite stable with respect to the<italic>W</italic> parameter). Only 211 events have a size larger than 10 bases and a mean <italic>z</italic>-score above 5 (47 events have a size larger than 100 bases and a mean <italic>z</italic>-score above 5). All events reported by CNVnator with a bin = 6 or 100 are also detected by sequana_coverage with the same breakpoint resolution. The additional CNVnator events, obtained with bin = 1, are mostly false positives (see Notebook 9 [<xref rid="bib45" ref-type="bibr">18</xref>] for examples). Visual inspection of events reported by sequana_coverage, but not found by CNVnator, show that they are close to the threshold and appear to be real events (see example in Fig. <xref ref-type="fig" rid="fig9">9</xref>). In terms of computational time, sequana_coverage takes 1 minute to process this 3-Mbp genome, irrespective of <italic>W</italic>, while CNVnator takes about 25 minutes, 5 minutes, and 40 seconds for bin = 1, 6, and 100, respectively.</p>
      <fig id="fig9" orientation="portrait" position="float">
        <label>Figure 9:</label>
        <caption>
          <p>Detection of a depleted region (CN 0.5). CNVnator (thick yellow segments) and sequana_coverage (thin green segments and dots) identifies the 6,300 long event with the correct location and similar CN (based on the mean of the data). The sequana_coverage identifies the other depleted region of about 500 bases at position 392,000. CNVnator's ability to detect that event depends on the bin parameter: missed for a value of 1 or 100, found for a value of 6. All short events (few bases long) are missed by CNVnator. Conversely, CNVnator is able to identify very long CNV regions up to mega-bases.</p>
        </caption>
        <graphic xlink:href="giy110fig9"/>
      </fig>
      <p>Then, we looked at a population of six isolates of <italic>S. aureus</italic> used in [<xref rid="bib15" ref-type="bibr">16</xref>]. The six datasets have a wide range of sequencing depth: 165, 61, 36, 94, 1,100, and 34, for the isolate ERR043367, ERR043371, ERR073375, ERR043379, ERR14216, and ERR316404, respectively. We compared the results provided in the supplementary data of [<xref rid="bib15" ref-type="bibr">16</xref>] with those obtained by running sequana_coverage and CNVnator. In CNOGpro’s supplementary, the authors report 43 CNVs with various CNs. After visual inspection, we believe that seven are false positives and the remaining are confirmed by sequana_coverage. It is important to note that, unlike CNVnator and sequana_coverage, which rely on the data to find the breakpoint of the ROIs, CNOGpro breakpoints are based on annotation and individual genes (or intergenic segments) assuming that duplications and deletions work at the gene level. In Fig. <xref ref-type="fig" rid="fig10">10</xref>, we show an example of a 2-kb-long event present in the six isolates. CNOGpro found this event (same gene position) in the six isolates, similar to CNVnator and sequana_coverage. However, the location of the event reported by CNOGpro is not as precise as the two other tools because it is influenced by the <italic>a priori</italic> knowledge of the gene starting and ending positions. For the same reason, several narrow events found in the same intergenic segment will be averaged together, whereas sequana_coverage reports the events individually, as demonstrated in Fig. <xref ref-type="fig" rid="fig11">11</xref>.</p>
      <fig id="fig10" orientation="portrait" position="float">
        <label>Figure 10:</label>
        <caption>
          <p>Detection and segmentation of complex events in a population sample. We focus on the region between positions 86,500 and 90,000. We analyze the data (black lines) with sequana_coverage (horizontal red lines) and CNVnator (green areas). We also report the results of CNOGpro (red areas in the top panel only). CNOGpro detects the complex event as a single event with poor breakpoint resolution (end location is offset by 300 bases); see text for an explanation. CNVnator detects one event in three isolates, two events in two isolates) and four events in one isolate (fifth row); the gap in the middle of the genomic region considered is missed in 50% of the cases; breakpoint resolution is high. sequana_coverage reports four to six events; the breakpoint resolution is high; the event in the middle is systematically ignored, as it should be, given its length is about 100 bases.</p>
        </caption>
        <graphic xlink:href="giy110fig10"/>
      </fig>
      <fig id="fig11" orientation="portrait" position="float">
        <label>Figure 11:</label>
        <caption>
          <p>Narrow event made of a strong central peak (CN = 10) and two secondary weak peaks (CN = 2.5). The three peaks can be identified visually in the six isolates. In this plot, we only show the isolate ERR316404. The algorithm designed in sequana_coverage detects the main peak (with CN = 5) and the secondary peaks with CN = 2.5 (red segments). Note that in the six isolates the main peak is always detected, while the secondary peaks are detected in 66% of the cases (8 peaks out of 12). CNVnator does not detect those events in any of the six isolates, probably because the length of those events (irrespective of their strength) are too short. CNOGpro detects one event, shown here as the green area with a CN = 2 for the overall event.</p>
        </caption>
        <graphic xlink:href="giy110fig11"/>
      </fig>
      <p>We also ran CNVnator, with its bin parameter set to the optimal value (see above). The detected events found by CNVnator and sequana_coverage (<italic>W</italic> = 40 000) are generally consistent in location and CN. Both tools have a very good breakpoint accuracy, as shown in Fig. <xref ref-type="fig" rid="fig10">10</xref>, with the main difference being that sequana_coverage splits events with a gap in between. Again, CNVnator is optimized to detect long CNV events and may miss narrower events, even if those events have large variations, as shown in Fig. <xref ref-type="fig" rid="fig11">11</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec5">
    <title>Conclusions</title>
    <p>The method presented here provides a robust statistical framework to detect under- and overcovered genomic regions that are then further annotated (e.g., length, mean coverage, maximum <italic>z</italic>-score). Although robust, the method is straightforward and can be summarized in three main steps: (1) detrending of genome coverage series using an RM, (2) parameter estimation of the central distribution of the normalized genome coverage series using an EM approach (for a Gaussian mixture model), and (3) clustering and characterization of the outliers as genomic ROI using a double-threshold clustering method.</p>
    <p>We underlined the value of the RM algorithm as compared to an MA while emphasizing the practical impact of the RM algorithm complexity. We used an efficient RM algorithm (see Supplementary Materials), which is of paramount importance in the context of HTS analysis. In our implementation, we can take into account the circularity of the molecules as well as multichromosome organisms.</p>
    <p>We implemented the method described here within the stand-alone application sequana_coverage, which also provides HTML reports with a summary of the genomic ROIs detected. The HTML reports provide easy visual inspection of genome coverage, a list of genomic ROIs, and statistics such as the centralness, a metric that encompasses the preponderance of the central distribution with respect to the outliers.</p>
    <p>We presented test cases with relatively large sequencing depth (30X to 1,000X), although we believe that the algorithm can be used for sequencing depths as low as 10X. A natural extension to this work is to consider sequencing depths below 10X by using a mixture of binomial models instead of Gaussian models.</p>
    <p>One obvious application of the algorithm presented is the systematic identification of SNVs or CNVs in a single sample or population of samples. We have shown that sequana_coverage is competitive with dedicated tools such as CNOGpro and CNVnator. We believe that sequana_coverage could be used in a combinatorial approach with existing tools to complement and complete the toolkit of CNV detection.</p>
    <p>sequana_coverage is also relatively fast. Viral and bacterial genomes can be analyzed in less than 1 minute. For larger Eukaryotic genomes (human), once the individual BED files are created for each chromosome, the analysis of the 24 human chromosome files should take less than 2 hours (1.5 hours on an HPC cluster using only one core and 1 hour on a DELL Latitude with an SSD hard disk using only one core). The longest chromosome (chr1), with 250 Mb, is analyzed in about 5-6 minutes. A Snakemake [<xref rid="bib33" ref-type="bibr">35</xref>] pipeline was also recently implemented within <monospace>Sequana</monospace> [<xref rid="bib32" ref-type="bibr">34</xref>] (named Coverage), allowing each chromosome to be analyzed independently. Using 24 cores, we could analyze the 24 chromosomes in about 7 to 8 minutes, which is basically the time needed to analyze the longest chromosome. A graphical interface using Sequanix [<xref rid="bib40" ref-type="bibr">39</xref>] (a Snakemake graphical user interface) is also available, making the configuration of the parameters and execution of the analysis on a cluster accessible.</p>
    <p>With additional features such as the ability to annotate the ROIs with GenBank files and the identification of repeated regions, we believe that the stand-alone application sequana_coverage will help researchers in deciphering the information contained in the genome coverage.</p>
  </sec>
  <sec id="sec6">
    <title>Availability of source code</title>
    <p>
      <list list-type="bullet">
        <list-item>
          <p>Project name: Sequana (sequana_coverage standalone), version 0.7.0</p>
        </list-item>
        <list-item>
          <p>Project home page: <ext-link ext-link-type="uri" xlink:href="http://sequana.readthedocs.org">http://sequana.readthedocs.org</ext-link></p>
        </list-item>
        <list-item>
          <p>Operating system(s): Platform independent</p>
        </list-item>
        <list-item>
          <p>Programming language: Python 3</p>
        </list-item>
        <list-item>
          <p>Containers: Sequana is available on Bioconda channel [<xref rid="bib42" ref-type="bibr">40</xref>, <xref rid="bib43" ref-type="bibr">41</xref>], and we also provide a Singularity container [<xref rid="bib44" ref-type="bibr">42</xref>] (version 0.7.0). See <ext-link ext-link-type="uri" xlink:href="http://sequana.readthedocs.org">http://sequana.readthedocs.org</ext-link> for details.</p>
        </list-item>
        <list-item>
          <p>License: BSD 3-clause Revised License</p>
        </list-item>
      </list>
    </p>
  </sec>
  <sec id="sec7">
    <title>Availability of supporting data</title>
    <p>The datasets supporting the results as well as additional files used to created them are available within a Synapse project [<xref rid="bib27" ref-type="bibr">29</xref>]. More specifically, the BED files mentioned in the Data Description section corresponding to the virus, bacteria, and fungus are available under: doi:10.7303/syn10638370.1 (JB409847.filtered.bed), doi:10.7303/syn10638494.1 (JB409847.filtered.bed), and doi:10.7303/syn10638487.1 (S_pombe.filtered.bed), respectively. In addition, we provide the genome reference used in Fig. <xref ref-type="fig" rid="fig6">6</xref> (doi:10.7303/syn10638477.1). The datasets are also available on a GitHub repository [<xref rid="bib45" ref-type="bibr">18</xref>] together with a notebook that reproduces the figures. Finally, note that the BED files can be recreated using the original FastQ files available on doi:10.7303/syn10638358. We also provide recipes to create the BED files from the FastQ files as notebooks in [<xref rid="bib45" ref-type="bibr">18</xref>]. All notebooks mentioned are available in [<xref rid="bib45" ref-type="bibr">18</xref>]. Snapshots of the code are also available in the <italic>GigaScience</italic> GigaDB database [<xref rid="bib46" ref-type="bibr">43</xref>].</p>
  </sec>
  <sec id="sec8">
    <title>Abbreviations</title>
    <p>BAM: binary alignment map; BED: Browser Extensible Data; BOC: breadth of coverage; CN: copy number; CNV: copy number variation; DOC: depth of coverage; EM: expectation maximization; ENA: European Nucleotide Archive; HTS: high-throughput sequencing; MA: moving average; NGS: next-generation sequencing; RM: running median; ROI: regions of interest; SNP: single-nucleotide polymorphism; SNV: single-nucleotide variation.</p>
  </sec>
  <sec id="sec9">
    <title>Competing interests</title>
    <p>The authors declare that have no competing interests.</p>
  </sec>
  <sec id="sec10">
    <title>Funding</title>
    <p>This work has been supported by the France Génomique Consortium (ANR 10-INBS-09-08).</p>
  </sec>
  <sec id="sec11">
    <title>Author contributions</title>
    <p>D.D. and T.C. conceived the study. D.D and T.C. implemented the software. C.B. provided the data. T.C. did the CNV studies. D.D. and T.C. contributed to the initial writing. D.D., T.C., C.B., and S.K. contributed to the final manuscript. All authors contributed to writing and revision and approved the submission.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>GIGA-D-17-00238_(Original_Submission).pdf</label>
      <media xlink:href="giy110_giga-d-17-00238_(original_submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup2">
      <label>GIGA-D-17-00238_Revision_1.pdf</label>
      <media xlink:href="giy110_giga-d-17-00238_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup3">
      <label>GIGA-D-17-00238_Revision_2.pdf</label>
      <media xlink:href="giy110_giga-d-17-00238_revision_2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup4">
      <label>GIGA-D-17-00238_Revision_3.pdf</label>
      <media xlink:href="giy110_giga-d-17-00238_revision_3.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup5">
      <label>Response_to_Reviewer_Comments_Original_Submission.pdf</label>
      <media xlink:href="giy110_response_to_reviewer_comments_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup6">
      <label>Response_to_Reviewer_Comments_Revision_1.pdf</label>
      <media xlink:href="giy110_response_to_reviewer_comments_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup7">
      <label>Response_to_Reviewer_Comments_Revision_2.pdf</label>
      <media xlink:href="giy110_response_to_reviewer_comments_revision_2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup8">
      <label>Reviewer_1_Report_(Original_Submission) -- Wibowo Arindrarto, M.Sc.</label>
      <caption>
        <p>10/16/2018 Reviewed</p>
      </caption>
      <media xlink:href="giy110_reviewer_1_report_(original_submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup9">
      <label>Reviewer_2_Report_(Original_Submission) -- Rob Patro</label>
      <caption>
        <p>10/18/2018 Reviewed</p>
      </caption>
      <media xlink:href="giy110_reviewer_2_report_(original_submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup10">
      <label>Reviewer_3_Report_(Original_Submission) -- Ian Sudbery</label>
      <caption>
        <p>10/25/2017 Reviewed</p>
      </caption>
      <media xlink:href="giy110_reviewer_3_report_(original_submission).pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="sup11">
      <label>Reviewer_3_Report_Revision_1 -- Ian Sudbery</label>
      <caption>
        <p>3/27/2018 Reviewed</p>
      </caption>
      <media xlink:href="giy110_reviewer_3_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We are grateful to Nicolas Escriou (Institut Pasteur) for providing the FastQ and reference of the virus test case. We are also grateful to Benoit Arcangioli (Institut Pasteur) and Serge Gangloff (Institut Pasteur) for providing the FastQ files and reference of the <italic>S. pombe</italic> test case. We thank Juliana Pipoli da Fonseca for her various comments on the manuscript. We are also grateful to the reviewers who suggested the CNV studies.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Goodwin</surname><given-names>S</given-names></name>, <name name-style="western"><surname>McPherson</surname><given-names>JD</given-names></name>, <name name-style="western"><surname>McCombie</surname><given-names>WR</given-names></name></person-group><article-title>Coming of age: ten years of next-generation sequencing technologies</article-title>. <source>Nat Rev Genet</source>. <year>2016</year>;<volume>17</volume>(<issue>6</issue>):<fpage>333</fpage>–<lpage>351</lpage>.<pub-id pub-id-type="pmid">27184599</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Gerstein</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Snyder</surname><given-names>M</given-names></name></person-group><article-title>RNA-Seq: a revolutionary tool for transcriptomics</article-title>. <source>Nat Rev Genet</source>. <year>2009</year>;<volume>10</volume>(<issue>1</issue>):<fpage>57</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">19015660</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Meyerson</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Gabriel</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Getz</surname><given-names>G.</given-names></name></person-group><article-title>Advances in understanding cancer genomes through second-generation sequencing</article-title>. <source>Nat Rev Genet</source>. <year>2010</year>;<volume>11</volume>(<issue>10</issue>):<fpage>685</fpage>–<lpage>696</lpage>.<pub-id pub-id-type="pmid">20847746</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Iorio</surname><given-names>F</given-names></name>, <name name-style="western"><surname>Knijnenburg</surname><given-names>TA</given-names></name>, <name name-style="western"><surname>Vis</surname><given-names>DJ</given-names></name>, <etal/></person-group><article-title>A landscape of pharmacogenomic interactions in cancer</article-title>. <source>Cell</source>. <year>2016</year>;<volume>166</volume>(<issue>3</issue>):<fpage>740</fpage>–<lpage>754</lpage>.<pub-id pub-id-type="pmid">27397505</pub-id></mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eid</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Fehr</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Gray</surname><given-names>J</given-names></name><etal/></person-group><article-title>Real-time DNA sequencing from single polymerase molecules</article-title>. <source>Science</source>. <year>2009</year>;<volume>323</volume>(<issue>5910</issue>):<fpage>133</fpage>–<lpage>138</lpage>.<pub-id pub-id-type="pmid">19023044</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Gurtowski</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Yoo</surname><given-names>S</given-names></name>, <etal/></person-group><article-title>Error correction and assembly complexity of single molecule sequencing reads</article-title>. <source>BioRxiv</source>. <year>2004</year>; <fpage>006395</fpage>.</mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eisenstein</surname><given-names>M</given-names></name></person-group><article-title>Oxford Nanopore announcement sets sequencing sector abuzz</article-title>. <source>Nat Biotechnology</source>. <year>2012</year>;<volume>30</volume>(<issue>4</issue>):<fpage>295</fpage>–<lpage>296</lpage>.</mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H</given-names></name></person-group><article-title>Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM</article-title>. <year>2013</year>; <comment>arXiv preprint arXiv:1303.3997</comment>.</mixed-citation>
    </ref>
    <ref id="bib9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bankevich</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Nurk</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Antipov</surname><given-names>D</given-names></name><etal/></person-group><article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>J Comput Biol</source>. <year>2012</year>;<volume>19</volume>(<issue>5</issue>):<fpage>455</fpage>–<lpage>477</lpage>.<pub-id pub-id-type="pmid">22506599</pub-id></mixed-citation>
    </ref>
    <ref id="bib10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lander</surname><given-names>ES</given-names></name>, <name name-style="western"><surname>Waterman</surname><given-names>MS</given-names></name></person-group><article-title>Genomic mapping by fingerprinting random clones: a mathematical analysis</article-title>. <source>Genomics</source>. <year>1988</year>;<volume>2</volume>(<issue>3</issue>):<fpage>231</fpage>–<lpage>239</lpage>.<pub-id pub-id-type="pmid">3294162</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wendl</surname><given-names>MC</given-names></name>, <name name-style="western"><surname>Barbazuk</surname><given-names>WB</given-names></name></person-group><article-title>Extension of Lander-Waterman theory for sequencing filtered DNA libraries</article-title>. <source>BMC Bioinformatics</source>. <year>2005</year>;<volume>6</volume>(<issue>1</issue>):<fpage>245</fpage>.<pub-id pub-id-type="pmid">16216129</pub-id></mixed-citation>
    </ref>
    <ref id="bib41">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sims</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Sudbery</surname><given-names>I</given-names></name>, <name name-style="western"><surname>Ilott</surname><given-names>NE</given-names></name>, <etal/></person-group><article-title>Sequencing depth and coverage: key considerations in genomic analyses</article-title>. <source>Nat Rev Genet</source>. <year>2014</year>;<volume>15</volume>(<issue>2</issue>):<fpage>121</fpage>–<lpage>132</lpage>.<pub-id pub-id-type="pmid">24434847</pub-id></mixed-citation>
    </ref>
    <ref id="bib12">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ajay</surname><given-names>SS</given-names></name>, <name name-style="western"><surname>Parker</surname><given-names>SC</given-names></name>, <name name-style="western"><surname>Abaan</surname><given-names>HO</given-names></name><etal/></person-group><article-title>Accurate and comprehensive sequencing of personal genomes</article-title>. <source>Genome Res</source>. <year>2011</year>;<volume>21</volume>(<issue>9</issue>):<fpage>1498</fpage>–<lpage>505</lpage>.<pub-id pub-id-type="pmid">21771779</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mirebrahim</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Close</surname><given-names>TJ</given-names></name>, <name name-style="western"><surname>Lonardi</surname><given-names>S.</given-names></name></person-group><article-title>De novo meta-assembly of ultra-deep sequencing data</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>(<issue>12</issue>):<fpage>i9</fpage>–<lpage>i16</lpage>.<pub-id pub-id-type="pmid">26072514</pub-id></mixed-citation>
    </ref>
    <ref id="bib14">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yoon</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Xuan</surname><given-names>Z</given-names></name>, <name name-style="western"><surname>Makarov</surname><given-names>V</given-names></name><etal/></person-group><article-title>Sensitive and accurate detection of copy number variants using read depth of coverage</article-title>. <source>Genome Res</source>. <year>2009</year>;<volume>19</volume>, <fpage>1586</fpage>–<lpage>1592</lpage>.<pub-id pub-id-type="pmid">19657104</pub-id></mixed-citation>
    </ref>
    <ref id="bib15">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Brynildsrud</surname><given-names>O</given-names></name>, <name name-style="western"><surname>Snipen</surname><given-names>LG</given-names></name>, <name name-style="western"><surname>Bohlin</surname><given-names>J</given-names></name></person-group><article-title>CNOGpro: detection and quantification of CNVs in prokaryotic whole-genome sequencing data</article-title>. <source>Bioinformatics</source>. <year>2015</year>;<volume>31</volume>(<issue>11</issue>):<fpage>1708</fpage>–<lpage>1715</lpage>.<pub-id pub-id-type="pmid">25644268</pub-id></mixed-citation>
    </ref>
    <ref id="bib17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhao</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Q</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Q</given-names></name>, <etal/></person-group><article-title>Computational tools for copy number variation (CNV) detection using next-generation sequencing data: features and perspectives</article-title>. <source>BMC Bioinformatics</source>. <year>2013</year>; <volume>14</volume>(<issue>Suppl 11</issue>):<fpage>S1</fpage>.</mixed-citation>
    </ref>
    <ref id="bib45">
      <label>18.</label>
      <mixed-citation publication-type="journal"><article-title>The Sequana resources GitHub repository</article-title>. <ext-link ext-link-type="uri" xlink:href="https://github.com/sequana/resources/coverage">https://github.com/sequana/resources/coverage</ext-link>. <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="bib18">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lindner</surname><given-names>MS</given-names></name>, <name name-style="western"><surname>Kollock</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Zickmann</surname><given-names>F</given-names></name>, <etal/></person-group><article-title>Analyzing genome coverage profiles with applications to quality control in metagenomics</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>10</issue>):<fpage>1260</fpage>–<lpage>1267</lpage>.<pub-id pub-id-type="pmid">23589648</pub-id></mixed-citation>
    </ref>
    <ref id="bib16">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abyzov</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Urban</surname><given-names>AE</given-names></name>, <name name-style="western"><surname>Snyder</surname><given-names>M</given-names></name><etal/></person-group><article-title>CNVnator: an approach to discover, genotype, and characterize typical and atypical CNVs from family and population genome sequencing</article-title>. <source>Genome Res</source>. <year>2011</year>;<volume>21</volume>, <fpage>974</fpage>–<lpage>984</lpage>.<pub-id pub-id-type="pmid">21324876</pub-id></mixed-citation>
    </ref>
    <ref id="bib19">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Quinlan</surname><given-names>AR</given-names></name>, <name name-style="western"><surname>Hall</surname><given-names>IM</given-names></name></person-group><article-title>BEDTools: a flexible suite of utilities for comparing genomic features</article-title>. <source>Bioinformatics</source>. <year>2010</year>;<volume>26</volume>, <issue>6</issue>, pp. <fpage>841</fpage>–<lpage>842</lpage>.. <ext-link ext-link-type="uri" xlink:href="http://bedtools.readthedocs.io">http://bedtools.readthedocs.io</ext-link><pub-id pub-id-type="pmid">20110278</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tong</surname><given-names>SY</given-names></name>, <name name-style="western"><surname>Holden</surname><given-names>MTG</given-names></name>, <name name-style="western"><surname>Nickerson</surname><given-names>EK</given-names></name><etal/></person-group><article-title>Genome sequencing defines phylogeny and spread of methicillin-resistant <italic>Staphylococcus aureus</italic> in a high transmission setting</article-title>. <source>Genome Res</source>. <year>2015</year>;<volume>25</volume>(<issue>1</issue>):<fpage>111</fpage>–<lpage>118</lpage>.<pub-id pub-id-type="pmid">25491771</pub-id></mixed-citation>
    </ref>
    <ref id="bib21">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bremer</surname><given-names>H</given-names></name>, <name name-style="western"><surname>Churchward</surname><given-names>G</given-names></name></person-group><article-title>An examination of the Cooper-Helmstetter theory of DNA replication in bacteria and its underlying assumptions</article-title>. <source>J Theoretical Biol</source>. <year>1977</year>;<volume>69</volume>(<issue>4</issue>):<fpage>645</fpage>–<lpage>654</lpage>.</mixed-citation>
    </ref>
    <ref id="bib22">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Prescott</surname><given-names>DM</given-names></name>, <name name-style="western"><surname>Kuempel</surname><given-names>PL</given-names></name></person-group><article-title>Bidirectional replication of the chromosome in <italic>Escherichia coli</italic></article-title>. <source>Proc Nat Acad Sci</source>. <year>1972</year>;<volume>69</volume>(<issue>10</issue>):<fpage>2842</fpage>–<lpage>2845</lpage>.<pub-id pub-id-type="pmid">4562743</pub-id></mixed-citation>
    </ref>
    <ref id="bib23">
      <label>25.</label>
      <mixed-citation publication-type="journal"><collab>European Nucleotide Archive(ENA)</collab>. <ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/ENA">http://www.ebi.ac.uk/ENA</ext-link>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="bib24">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Combredet</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Labrousse</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Mollet</surname><given-names>L</given-names></name><etal/></person-group><article-title>A molecularly cloned Schwarz strain of measles virus vaccine induces strong immune responses in macaques and transgenic mice</article-title>. <source>J Virol</source>. <year>2003</year>;<volume>77</volume>(<issue>21</issue>):<fpage>11546</fpage>–<lpage>11554</lpage>.<pub-id pub-id-type="pmid">14557640</pub-id></mixed-citation>
    </ref>
    <ref id="bib25">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wood</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Gwilliam</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Rajandream</surname><given-names>MA</given-names></name><etal/></person-group><article-title>The genome sequence of Schizosaccharomyces pombe</article-title>. <source>Nature</source>. <year>2002</year>;<volume>415</volume>(<issue>6874</issue>):<fpage>871</fpage>–<lpage>880</lpage>.<pub-id pub-id-type="pmid">11859360</pub-id></mixed-citation>
    </ref>
    <ref id="bib26">
      <label>28.</label>
      <mixed-citation publication-type="book"><source>Sages’s Synapse platform</source>. <ext-link ext-link-type="uri" xlink:href="https://www.synapse.org">https://www.synapse.org</ext-link>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="bib27">
      <label>29.</label>
      <mixed-citation publication-type="journal"><article-title>Supporting materials on Synapse project page (BEDs, FastQs, Genome references and genbanks)</article-title>. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/doi:10.7303/syn10638358">http://dx.doi.org/doi:10.7303/syn10638358</ext-link>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="bib28">
      <label>30.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Percival</surname><given-names>DB</given-names></name>, <name name-style="western"><surname>Walden</surname><given-names>AT</given-names></name></person-group><source>Spectral Analysis for Physical Applications</source>. <publisher-name>Cambridge University Press</publisher-name><year>1993</year>.</mixed-citation>
    </ref>
    <ref id="bib29">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Balasubramanian</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Babak</surname><given-names>S</given-names></name>, <name name-style="western"><surname>Churches</surname><given-names>D</given-names></name><etal/></person-group><article-title>GEO 600 online detector characterization system</article-title>. <source>Classical Quant Grav</source>. <year>2005</year>;<volume>22</volume>(<issue>23</issue>):<fpage>4973</fpage>–<lpage>4986</lpage>.</mixed-citation>
    </ref>
    <ref id="bib30">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>McKinney</surname><given-names>W</given-names></name></person-group><article-title>Data structures for statistical computing in Python</article-title>. <source>Proc 9th Python in Science Conference</source>. <year>2010</year>; <fpage>51</fpage>–<lpage>56</lpage>.</mixed-citation>
    </ref>
    <ref id="bib31">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dempster</surname><given-names>AP</given-names></name>, <name name-style="western"><surname>Laird</surname><given-names>NM</given-names></name>, <name name-style="western"><surname>Rubin</surname><given-names>DB</given-names></name></person-group><article-title>Maximum likelihood from incomplete data via the EM algorithm</article-title>. <source>J Royal Stat Soc Series B (methodological)</source>. <year>1977</year>;<volume>39</volume>(<issue>1</issue>):<fpage>1</fpage>–<lpage>38</lpage>.</mixed-citation>
    </ref>
    <ref id="bib32">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cokelaer</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Desvillechabrol</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Legendre</surname><given-names>R</given-names></name>, <etal/></person-group><article-title>Sequana: a set of Snakemake NGS pipelines</article-title>. <source>Journal of Open Source Software</source>. <year>2017</year>;<volume>2</volume>, <fpage>16</fpage><pub-id pub-id-type="doi">10.21105/joss.00352</pub-id>.</mixed-citation>
    </ref>
    <ref id="bib33">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Köster</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Rahmann</surname><given-names>S</given-names></name></person-group><article-title>Snakemake- a scalable bioinformatics workflow engine</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>(<issue>19</issue>):<fpage>2520</fpage>–<lpage>2522</lpage>.<pub-id pub-id-type="pmid">22908215</pub-id></mixed-citation>
    </ref>
    <ref id="bib34">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cokelaer</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Pultz</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Harder</surname><given-names>LM</given-names></name><etal/></person-group><article-title>BioServices: a common Python package to access biological web services programmatically</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>24</issue>):<fpage>3241</fpage>–<lpage>3242</lpage>.<pub-id pub-id-type="pmid">24064416</pub-id></mixed-citation>
    </ref>
    <ref id="bib36">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dohm</surname><given-names>JC</given-names></name>, <name name-style="western"><surname>Lottaz</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Borodina</surname><given-names>T</given-names></name>, <etal/></person-group><article-title>Substantial biases in ultra-short read data sets from high-throughput DNA sequencing</article-title>. <source>Nucleic Acids Res</source>. <year>2008</year>;<volume>36</volume>(<issue>16</issue>):<fpage>e105</fpage><pub-id pub-id-type="pmid">18660515</pub-id></mixed-citation>
    </ref>
    <ref id="bib35">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ewels</surname><given-names>P</given-names></name>, <name name-style="western"><surname>Magnusson</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Lundin</surname><given-names>S</given-names></name><etal/></person-group><article-title>MultiQC: summarize analysis results for multiple tools and samples in a single report</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>19</issue>):<fpage>3047</fpage>–<lpage>3048</lpage>.<pub-id pub-id-type="pmid">27312411</pub-id></mixed-citation>
    </ref>
    <ref id="bib40">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Desvillechabrol</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Legendre</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Rioualen</surname><given-names>C</given-names></name><etal/></person-group><article-title>Sequanix: a dynamic graphical interface for Snakemake workflows</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <issue>11</issue>, <fpage>1934</fpage>–<lpage>1936</lpage>. <year>2017</year>; <comment>10.1093/bioinformatics/bty034</comment>.</mixed-citation>
    </ref>
    <ref id="bib42">
      <label>40.</label>
      <mixed-citation publication-type="journal"><article-title>Conda: Package, dependency and environment management for any language</article-title>. <ext-link ext-link-type="uri" xlink:href="https://conda.io/docs">https://conda.io/docs</ext-link>. <year>2017</year>.</mixed-citation>
    </ref>
    <ref id="bib43">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grüning</surname><given-names>B</given-names></name>, <name name-style="western"><surname>Dale</surname><given-names>R</given-names></name>, <name name-style="western"><surname>Sjödin</surname><given-names>A</given-names></name><etal/></person-group><article-title>Bioconda: sustainable and comprehensive software distribution for the life sciences</article-title>. <source>Nat Methods</source>. <year>2018</year>;<volume>15</volume>, <fpage>475</fpage>–<lpage>476</lpage>.<pub-id pub-id-type="pmid">29967506</pub-id></mixed-citation>
    </ref>
    <ref id="bib44">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kurtzer</surname><given-names>GM</given-names></name>, <name name-style="western"><surname>Sochat</surname><given-names>V</given-names></name>, <name name-style="western"><surname>Bauer</surname><given-names>MW</given-names></name></person-group><article-title>Singularity: scientific containers for mobility of compute</article-title>. <source>PLoS One</source>. <year>2017</year>;<volume>12</volume>(<issue>5</issue>).</mixed-citation>
    </ref>
    <ref id="bib46">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Desvillechabrol</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Bouchier</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Kennedy</surname><given-names>S</given-names></name><etal/></person-group><article-title>Supporting data for ”Sequana coverage: detection and characterization of genomic variations using running median and mixture models.”</article-title>. <source>GigaScience Database</source>. <year>2018</year>; <pub-id pub-id-type="doi">10.5524/100493</pub-id></mixed-citation>
    </ref>
    <ref id="bib37">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mohanty</surname><given-names>SD</given-names></name></person-group><article-title>Median based line tracker (MBLT): model independent and transient preserving line removal from interferometric data</article-title>. <source>Class Quantum Grav</source>. <year>2002</year>;<volume>19</volume>(<issue>7</issue>):<fpage>1513</fpage>–<lpage>1519</lpage>.</mixed-citation>
    </ref>
    <ref id="bib38">
      <label>45.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Jones</surname><given-names>E</given-names></name>, <name name-style="western"><surname>Oliphant</surname><given-names>T</given-names></name>, <name name-style="western"><surname>Peterson</surname><given-names>P</given-names></name><etal/></person-group><source>SciPy: Open Source Scientific Tools for Python</source>. <year>2001</year>, <publisher-loc>https://www.scipy.org</publisher-loc>.</mixed-citation>
    </ref>
  </ref-list>
  <app-group>
    <app id="app1">
      <title>Appendix: Running median implementation</title>
      <p>The mean is a measure of the central tendency of a population. It is not a robust estimator in the presence of large extraneous outliers in the population. In such a situation, it is preferable to consider a truncated mean or a <italic>median</italic> estimator. The median is the middle point of a sample set in which half the numbers are above the median and half are below. More formally, let us consider a sample <italic>s</italic>[<italic>i</italic>], <italic>i</italic> = 1, .., <italic>n</italic> and <italic>S</italic>[<italic>i</italic>], the sequence obtained by sorting <italic>s</italic>[<italic>i</italic>] in ascending order (ordering of equal elements is not important here). Then, the median is defined as
<disp-formula id="equ8"><label>(8)</label><tex-math id="M49">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}
\begin{equation*}
\nu = \rm {median}(\left\lbrace s[1], s[2],..,s[n]\right\rbrace ) = \left\lbrace \begin{array}{rcc}S\left[\frac{n+1}{2}\right] &amp;n\,\,\rm {odd}, \\
\frac{S\left[n/2\right] + S\left[n/2+1\right]}{2} &amp;n\,\,\rm {even}. \end{array}\right.
\end{equation*}
\end{document}</tex-math></disp-formula></p>
      <p>Let us now consider a series <italic>X</italic>(<italic>k</italic>) where <italic>k</italic> = 1, .., <italic>N</italic>. Then, the <italic>running median</italic> (RM) of <italic>X</italic>(<italic>k</italic>) is defined as the sequence <inline-formula><tex-math id="M50">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\nu (k)=\rm {median}(\lbrace X(k), X(k+1), .., X(k+W)\rbrace )$\end{document}</tex-math></inline-formula>, <italic>k</italic> = <italic>W</italic>/2, .., <italic>N</italic> − <italic>W</italic>/2 where <italic>W</italic> is a window size defined by the user and the application. The first <italic>W</italic>/2 and last <italic>W</italic>/2 values are undefined, so we should have <italic>W</italic> ≪ <italic>N</italic>.</p>
      <p>Since we perform a sorting of an array of <italic>W</italic> elements at <italic>N</italic> positions, the complexity of the RM is <italic>N</italic> times the complexity of the sorting algorithm. If <italic>W</italic> and <italic>N</italic> are small (e.g., removal of narrow lines in power spectral density in addition to the overall smoothing of time or frequency series [<xref rid="bib29" ref-type="bibr">31</xref>]), a naive quick-sort algorithm (<inline-formula><tex-math id="M51">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(W^2)$\end{document}</tex-math></inline-formula> in the worst case scenario) may be used. However, better algorithms do exist and can be decreased to <inline-formula><tex-math id="M52">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(\sqrt{W})$\end{document}</tex-math></inline-formula> in the worst case, as implemented in [<xref rid="bib37" ref-type="bibr">44</xref>]. Yet, in NGS applications, <italic>N</italic> could easily reach several million, and <italic>W</italic> may need to be set to large values up to 50,000 (e.g., to identify long deleted regions).</p>
      <p>Instead of computing the median at each position, <italic>k</italic>, a more efficient solution consists of re-using the sorted block at <italic>k</italic> − 1 and maintaining the block as sorted as new elements are added. Indeed, one only needs to insert the next sample into the sorted block and delete the earliest sample from the sorted block. A standard Python module named <italic>bisect</italic> provides an efficient insertion in sorted data (keeping the data sorted). The complexity of this sorting algorithm is <inline-formula><tex-math id="M53">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(\log W)$\end{document}</tex-math></inline-formula>.</p>
      <p>So far, we have neglected the cost of the insertion and deletion steps, which is not negligible. For instance, in Python language, one of the most common data structures is the <italic>list</italic>. It is a dynamically sized array (i.e., insertion and deletion of an item from the beginning or middle of the list requires moving most of the list in memory), and the look-up, insertion, and deletion have a <inline-formula><tex-math id="M54">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(n)$\end{document}</tex-math></inline-formula> complexity. So, the RM is actually dominated by the slow <italic>O</italic>(<italic>n</italic>) insertion and deletion steps. A better data structure is available thanks to the <italic>blist</italic> package; it is based on a so-called B-tree, which is a self-balancing tree data structure that keeps data sorted. The blist allows searches, sequential access, insertions, and deletions in <inline-formula><tex-math id="M55">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(\log n)$\end{document}</tex-math></inline-formula> (see <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/blist/">https://pypi.python.org/pypi/blist/</ext-link> for details).</p>
      <p>Based on materials from <ext-link ext-link-type="uri" xlink:href="http://code.activestate.com/recipes/576930/">http://code.activestate.com/recipes/576930/</ext-link>, we have implemented these two variants of RM functions in Python available in the Sequana [<xref rid="bib32" ref-type="bibr">34</xref>] library. We also considered established numerical analysis tools from the <monospace>SciPy</monospace> [<xref rid="bib38" ref-type="bibr">45</xref>] and Pandas [<xref rid="bib30" ref-type="bibr">32</xref>] libraries. We finally compare the four implementations in terms of computation time and complexity, as shown in Fig. <xref ref-type="fig" rid="fig12">12</xref>. It appears that the Pandas implementation is the fastest. For <italic>W</italic> &gt;20,000 up to 200,000, our implementation is 2 to 3 order of magnitude faster than the <monospace>SciPy</monospace> version but 4 to 5 times slower than Pandas. We should emphasize the fact that the <monospace>SciPy</monospace> function has additional features since it is available for N-dimensional datasets, whereas we restrict ourselves to 1-D datasets. In <monospace>Sequana</monospace>, the two variants only differ in the data structure being used to hold the data (list vs <monospace>blist</monospace>). Figure <xref ref-type="fig" rid="fig12">12</xref> shows the difference between the list and blist data structures that is marginal for low <italic>W</italic> values, while for large values asymptotic behaviors are reached, showing the interest of the blist over the list choice. We also see that our implementation with blist has a lower complexity than the Pandas implementation. However, for the range considered, Pandas is always the fastest choice.</p>
      <fig id="fig12" orientation="portrait" position="anchor">
        <label>Figure 12:</label>
        <caption>
          <p>Computational cost of RM algorithms as a function of the window size parameter <italic>W</italic> (for <italic>N</italic> = 1<italic>e</italic>6). Four variants are considered: <monospace>SciPy</monospace> [<xref rid="bib38" ref-type="bibr">45</xref>] implementation (function medfilt v0.17), Pandas [<xref rid="bib30" ref-type="bibr">32</xref>], and two Python variants available in <monospace>Sequana</monospace> based on a <monospace>list</monospace> or <monospace>blist</monospace> data containers (see text for details). The <monospace>SciPy</monospace> variant has a <inline-formula><tex-math id="M56">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(W)$\end{document}</tex-math></inline-formula> complexity irrespective of the <italic>W</italic> value. For low <italic>W</italic> values (<italic>W</italic> &lt;20,000), the two Python variants have <inline-formula><tex-math id="M57">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(log(W))$\end{document}</tex-math></inline-formula> complexity. For larger <italic>W</italic> values, the blist keeps its <inline-formula><tex-math id="M58">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(log(W))$\end{document}</tex-math></inline-formula> complexity while the list container follows a <inline-formula><tex-math id="M59">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(W)$\end{document}</tex-math></inline-formula> complexity. Pandas complexity is less clear with a O(W) for <italic>W</italic> &lt;20,000 and <inline-formula><tex-math id="M60">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathcal {O}(log(W))$\end{document}</tex-math></inline-formula> otherwise. The fastest implementation is clearly the Pandas one, even for large <italic>W</italic> values.</p>
        </caption>
        <graphic xlink:href="giy110fig12"/>
      </fig>
    </app>
  </app-group>
</back>

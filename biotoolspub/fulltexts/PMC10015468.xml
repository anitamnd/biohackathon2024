<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="publisher-id">ci</journal-id>
    <journal-id journal-id-type="coden">jcisd8</journal-id>
    <journal-title-group>
      <journal-title>Journal of Chemical Information and Modeling</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1549-9596</issn>
    <issn pub-type="epub">1549-960X</issn>
    <publisher>
      <publisher-name>American Chemical Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10015468</article-id>
    <article-id pub-id-type="pmid">36811959</article-id>
    <article-id pub-id-type="doi">10.1021/acs.jcim.2c01620</article-id>
    <article-categories>
      <subj-group>
        <subject>Application Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MiMiCPy: An Efficient
Toolkit for MiMiC-Based QM/MM
Simulations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="ath1">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-0186-2625</contrib-id>
        <name>
          <surname>Raghavan</surname>
          <given-names>Bharath</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-6028-3717</contrib-id>
        <name>
          <surname>Schackert</surname>
          <given-names>Florian K.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <contrib contrib-type="author" id="ath3">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-1255-859X</contrib-id>
        <name>
          <surname>Levy</surname>
          <given-names>Andrea</given-names>
        </name>
        <xref rid="aff3" ref-type="aff">¶</xref>
      </contrib>
      <contrib contrib-type="author" id="ath4">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-4207-4350</contrib-id>
        <name>
          <surname>Johnson</surname>
          <given-names>Sophia K.</given-names>
        </name>
        <xref rid="aff3" ref-type="aff">¶</xref>
      </contrib>
      <contrib contrib-type="author" id="ath5">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-5513-8056</contrib-id>
        <name>
          <surname>Ippoliti</surname>
          <given-names>Emiliano</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="ath6">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-6869-9511</contrib-id>
        <name>
          <surname>Mandelli</surname>
          <given-names>Davide</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
        <xref rid="aff1" ref-type="aff">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath7">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-7487-944X</contrib-id>
        <name>
          <surname>Olsen</surname>
          <given-names>Jógvan Magnus
Haugaard</given-names>
        </name>
        <xref rid="aff4" ref-type="aff">§</xref>
      </contrib>
      <contrib contrib-type="author" id="ath8">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-1704-8591</contrib-id>
        <name>
          <surname>Rothlisberger</surname>
          <given-names>Ursula</given-names>
        </name>
        <xref rid="aff3" ref-type="aff">¶</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="ath9">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9010-0149</contrib-id>
        <name>
          <surname>Carloni</surname>
          <given-names>Paolo</given-names>
        </name>
        <xref rid="cor2" ref-type="other">*</xref>
        <xref rid="aff1" ref-type="aff">†</xref>
        <xref rid="aff2" ref-type="aff">‡</xref>
      </contrib>
      <aff id="aff1"><label>†</label><institution>Computational
Biomedicine, Institute of Advanced Simulations IAS-5/Institute for
Neuroscience and Medicine INM-9, Forschungszentrum Jülich GmbH</institution>, Jülich 52428, <country>Germany</country></aff>
      <aff id="aff2"><label>‡</label>Department
of Physics, <institution>RWTH Aachen University</institution>, Aachen 52074, <country>Germany</country></aff>
      <aff id="aff3"><label>¶</label>Laboratory
of Computational Chemistry and Biochemistry, <institution>Institute of Chemical Sciences and Engineering, École Polytechnique
Fédérale de Lausanne (EPFL)</institution>, CH-1015 Lausanne, <country>Switzerland</country></aff>
      <aff id="aff4"><label>§</label>DTU
Chemistry, <institution>Technical University of Denmark</institution>, DK-2800 Kongens
Lyngby, <country>Denmark</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>E-mail: <email>d.mandelli@fz-juelich.de</email>.</corresp>
      <corresp id="cor2"><label>*</label>E-mail: <email>p.carloni@fz-juelich.de</email>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>02</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>13</day>
      <month>03</month>
      <year>2023</year>
    </pub-date>
    <volume>63</volume>
    <issue>5</issue>
    <fpage>1406</fpage>
    <lpage>1412</lpage>
    <history>
      <date date-type="received">
        <day>22</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2023 The Authors. Published by American Chemical Society</copyright-statement>
      <copyright-year>2023</copyright-year>
      <copyright-holder>The Authors</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>Permits the broadest form of re-use including for commercial purposes, provided that author attribution and integrity are maintained (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0003" id="ab-tgr1"/>
      </p>
      <p>MiMiC is a highly flexible, extremely scalable multiscale
modeling
framework. It couples the CPMD (quantum mechanics, QM) and GROMACS
(molecular mechanics, MM) codes. The code requires preparing separate
input files for the two programs with a selection of the QM region.
This can be a tedious procedure prone to human error, especially when
dealing with large QM regions. Here, we present MiMiCPy, a user-friendly
tool that automatizes the preparation of MiMiC input files. It is
written in Python 3 with an object-oriented approach. The main subcommand
PrepQM can be used to generate MiMiC inputs directly from the command
line or through a PyMOL/VMD plugin for visually selecting the QM region.
Many other subcommands are also provided for debugging and fixing
MiMiC input files. MiMiCPy is designed with a modular structure that
allows seamless extensions to new program formats depending on the
requirements of MiMiC.</p>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>Villum Fonden</institution>
            <institution-id institution-id-type="doi">10.13039/100008398</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>29478</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>Helmholtz Association</institution>
            <institution-id institution-id-type="doi">10.13039/501100009318</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>NA</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution>Schweizerischer Nationalfonds zur FÃ¶rderung der Wissenschaftlichen Forschung</institution>
            <institution-id institution-id-type="doi">10.13039/501100001711</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>200020-185092</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ci2c01620</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ci2c01620</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p>Biochemical processes span a wide range
of time and length scales
and often require explicit modeling of electronic degrees of freedom.<sup><xref ref-type="bibr" rid="ref1">1</xref></sup> These include enzymatic reactions, photobiological
processes, and transition-metal ion binding to biomolecules.<sup><xref ref-type="bibr" rid="ref2">2</xref>−<xref ref-type="bibr" rid="ref4">4</xref></sup> Currently, the most accurate and computationally expedient way to
describe these processes is provided by hybrid quantum mechanics/molecular
mechanics (QM/MM) multiscale approaches.<sup><xref ref-type="bibr" rid="ref5">5</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup> Here, the system is split
into a relatively small QM subsystem and a larger MM subsystem, which
are treated at different levels of theory either by different programs
(loose-coupling scheme) or within the same program (tight-coupling
scheme).<sup><xref ref-type="bibr" rid="ref8">8</xref></sup> These methods offer an excellent
trade-off between accuracy and computational cost. However, the accessible
time scales in QM/MM molecular dynamics (MD) simulation are currently
limited, especially when applying first-principles methods like density
functional theory,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> which in turn affect
the sampling accuracy of QM/MM MD.<sup><xref ref-type="bibr" rid="ref10">10</xref></sup></p>
    <p>To alleviate this problem, the MiMiC<sup><xref ref-type="bibr" rid="ref11">11</xref></sup> framework for multiscale modeling in computational chemistry has
been developed. MiMiC is based on a loose-coupling scheme without
compromising computational efficiency. This flexibility allows for
a relatively straightforward incorporation of any QM and MM code.
The current release of MiMiC<sup><xref ref-type="bibr" rid="ref12">12</xref>,<xref ref-type="bibr" rid="ref13">13</xref></sup> connects CPMD<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> with GROMACS<sup><xref ref-type="bibr" rid="ref15">15</xref>,<xref ref-type="bibr" rid="ref16">16</xref></sup> enabling massively
parallel QM/MM MD simulations.<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> In addition,
support for CFOUR will be available soon, allowing for high-level
wave function-based QM/MM simulations.<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> MiMiC has displayed excellent scalability over more than thousands
of cores, paving the way toward routine subnanosecond QM/MM MD of
large biological systems.<sup><xref ref-type="bibr" rid="ref19">19</xref>,<xref ref-type="bibr" rid="ref20">20</xref></sup></p>
    <p>MiMiC QM/MM requires
one input file for GROMACS and one for CPMD.
The definition of the QM region must be added to both. To automatize
this lengthy and error-prone task, we have developed MiMiCPy, a suite
of tools for the smooth preparation of input files. MiMiCPy is based
on Python 3<sup><xref ref-type="bibr" rid="ref21">21</xref></sup> and uses NumPy<sup><xref ref-type="bibr" rid="ref22">22</xref></sup> and Pandas<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> for
efficient data manipulation. It selects complex QM regions through
an intuitive language, automatically tracking the atom index conversion
between GROMACS and CPMD. MiMiCPy is designed with a modular approach,
allowing it to be extended to handle the topology, coordinates, and
input script formats of new MM and QM programs supported by MiMiC
in the future.</p>
    <p>This article is organized as follows. First,
we present the procedure
to prepare MiMiC input files. Next, we detail the usage of MiMiCPy.
Finally, we provide practical examples for (bio)chemical systems.</p>
  </sec>
  <sec id="sec2">
    <title>Implementation</title>
    <p>Input files can be prepared in three
different ways:<list id="list1" list-type="simple"><list-item><label>1.</label><p>A set of command-line subcommands,
including PrepQM and others that will be detailed below; this is the
most convenient way to use MiMiCPy.</p></list-item><list-item><label>2.</label><p>The PrepQM plugins for the VMD<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> and PyMOL<sup><xref ref-type="bibr" rid="ref25">25</xref></sup> packages;
this is ideal for selecting complex QM regions where the default selection
language of MiMiCPy may not be so convenient or where visual inspection
is required.</p></list-item><list-item><label>3.</label><p>The Python
library, which can be imported
directly in a Python script, exposing all the features of MiMiCPy;
this approach is powerful when developing automated workflows.</p></list-item></list></p>
  </sec>
  <sec id="sec2.1">
    <title>Command Line and Plugins</title>
    <p>PrepQM is the chief subcommand
used to generate both the GROMACS
portable binary run (tpr) input file and the CPMD input file for a
MiMiC QM/MM run. A workflow diagram depicting the general scheme of
how input files are generated with MiMiCPy is shown in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>.</p>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Flowchart of the generation
of the CPMD and GROMACS input files
for a MiMiC-based QM/MM simulation.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0001" id="gr1" position="float"/>
    </fig>
    <p>The minimal set of arguments to be passed to the
PrepQM subcommand
are the topology and coordinate files. Currently, MiMiCPy supports
GROMACS topology (<monospace>.top</monospace>), GROMACS gro (<monospace>.gro</monospace>), pdb (<monospace>.pdb</monospace>), xyz (<monospace>.xyz</monospace>), and the CPMD GEOMETRY format. Launching the <monospace>mimicpy prepqm</monospace> command starts an interactive session,
where the atoms to be included in the QM region can be selected. This
is done by using a custom selection language provided by MiMiCPy,
which is designed to be human readable similar to the ones offered
by CHARMM,<sup><xref ref-type="bibr" rid="ref26">26</xref></sup> VMD,<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> and PyMOL.<sup><xref ref-type="bibr" rid="ref25">25</xref></sup> It includes selections by
atom/residue properties grouped by Boolean operators. The syntax for
the selection query involves the following general structure:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0006" id="dgr1" position="float"/>where atom selection can include <monospace>resname</monospace> for the residue name, <monospace>resid</monospace> for residue ID, <monospace>name</monospace> for the atom name, <monospace>type</monospace> for
the atom type, <monospace>id</monospace> for the atom ID, and <monospace>mol</monospace> for the molecule/chain. All the IDs and names are
as per conventions of the MM engine, i.e., the GROMACS topology. Logical
operators can be <monospace>is</monospace>, <monospace>not</monospace>, <monospace>&gt;</monospace>, <monospace>&lt;</monospace>, <monospace>≥</monospace>, or <monospace>≤</monospace>. Many selection
queries can be strung together using the <monospace>and</monospace> or <monospace>or</monospace> operators and grouped with brackets.
In the interactive session, atoms can be added and/or deleted to the
QM region. Examples of this are discussed in the <xref rid="sec4" ref-type="other">Applications</xref> section.</p>
    <p>PrepQM generates a CPMD input
file with a minimum box size and
the total charge. The <monospace>&amp;MIMIC</monospace> and <monospace>&amp;ATOMS</monospace> sections are also filled up. Other CPMD instructions
can also be added.</p>
    <p>A GROMACS index file, containing the GROMACS
indices of the QM
atoms, is also written by PrepQM. This file, with the topology, the
coordinate file, and the molecular dynamics parameters (mdp) file,
can be passed to the GROMACS preprocessor (<monospace>gmx grompp</monospace>) to generate the GROMACS tpr file. The same coordinate and topology
files passed to PrepQM must be passed to <monospace>gmx grompp</monospace>. Conveniently, if a GROMACS mdp file is initially passed to PrepQM,
it will call <monospace>gmx grompp</monospace> and generate the tpr
file automatically. The generated CPMD input and the GROMACS tpr files
are used to run the MiMiC-based QM/MM simulation by passing them to <monospace>cpmd.x</monospace> and <monospace>gmx mdrun</monospace>, respectively.</p>
    <p>Selecting QM atoms through the command line may be inconvenient,
especially for large QM regions. MiMiCPy provides PrepQM plugins for
the VMD and PyMOL packages to select the QM region visually. Furthermore,
the MiMiCPy console application provides other tools to fix and debug
input files:<list list-type="bullet"><list-item><p><monospace>CPMD2Coords</monospace> writes the QM atoms
selected in a MiMiC-compliant CPMD input file to a gro or pdb file.</p></list-item><list-item><p><monospace>FixTop</monospace> fixes missing
information
in GROMACS topology files that are required by CPMD in a MiMiC run.</p></list-item><list-item><p><monospace>CPMDid</monospace> provides the
indices that
CPMD assigns to each atom; this is especially useful for the MM atoms
because in general such indices are reshuffled in a nonobvious way
with respect to the GROMACS ordering.</p></list-item><list-item><p><monospace>Geom2Coords</monospace> converts a CPMD GEOMETRY
file to a gro or pdb file for easy visualization.</p></list-item></list></p>
  </sec>
  <sec id="sec2.2">
    <title>MiMiCPy as a Python
Library</title>
    <p>MiMiCPy can also be used as a Python library (<xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref>).</p>
    <fig id="fig2" position="float">
      <label>Figure 2</label>
      <caption>
        <p>Organization of the main
classes in MiMiCPy.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0002" id="gr2" position="float"/>
    </fig>
    <p>Coordinate and topology data can be loaded into
MiMiCPy by using
the dedicated <monospace>CoordsIO</monospace> and <monospace>Mpt</monospace> or MiMiCPy topology classes. These handle different coordinate and
topology formats by passing the information to dedicated parser classes.
Each coordinate file format has its own dedicated class which is inherited
from <monospace>BaseCoords</monospace>. This is an abstract base class,
providing the skeleton of a coordinate parser. Currently, MiMiCPy
includes <monospace>Gro</monospace>, <monospace>Pdb</monospace>, <monospace>CPMDGeo</monospace>, and <monospace>Xyz</monospace> classes to handle
the respective formats. The <monospace>CoordsIO</monospace> class
acts as an adapter that aggregates and wraps these different classes
and exposes only the coordinate information (as a Pandas <monospace>DataFrame</monospace>) and the box size to the user. This is the
only information required by the rest of the package. The <monospace>Mpt</monospace> class functions in a similar way, as an adapter interfacing
multiple topology parser classes. The <monospace>Mpt</monospace> class
provides a common framework to deal with disparate topology formats.
Mainly, it exposes methods for selecting specific atoms from the topology.
Currently, only the GROMACS topology format (<monospace>.top</monospace>) is supported. Other formats may easily be supported by adding new
classes that interface with the <monospace>Mpt</monospace> class.</p>
    <p>The coordinate and topology information should be passed to a <monospace>“Selector”</monospace>-type class. This type of class
combines coordinate and topology information, handling the selection
of the atoms. To use the MiMiCPy selection language, an object of
the <monospace>DefaultSelector</monospace> class can be instantiated.
To use the selection languages of VMD and/or PyMOL, instances of the <monospace>VmdSelector</monospace> or <monospace>PyMOLSelector</monospace> classes
can be created instead. These latter classes provide a simplified
façade to the VMD and PyMOL software packages in order to work
with the <monospace>Preparation</monospace> class (described below).
Moreover, these classes are inherited from the abstract <monospace>VisPackage</monospace> class (which in turn is inherited from <monospace>DefaultSelector</monospace>), which provides a common set of rules
for all these façade classes. A new façade class can
be easily added to allow MiMiCPy to interface with other molecular
visualization packages.</p>
    <p>An instance of the desired selector-type
class is to be passed
to the <monospace>Preparation</monospace> class, which is the “central”
class that keeps track of all the selected QM atoms and creates the
input files. The <monospace>Preparation</monospace> class can be essentially
thought of as a decorator for the selector classes, aggregating them
and attaching the new behavior of input file generation. Calling the <monospace>get_mimic_input()</monospace> method of a <monospace>Preparation</monospace> instance returns instances of type <monospace>CpmdScript</monospace> and <monospace>Ndx</monospace>. These are children of the abstract <monospace>Script</monospace> class, allowing for “pythonic” interactions
with these script instances, i.e., using the dot operator for setting
and getting of script properties. Similarly, <monospace>get_mimic_input()</monospace> would result in a template <monospace>Mdp</monospace> object (GROMACS <monospace>.mdp</monospace> handler), which also is inherited from the <monospace>Script</monospace> class. All <monospace>Script</monospace> instances
can be converted to and from text files.</p>
    <p>MiMiCPy is fully object-oriented
and built with a modular architecture
in mind. It can be seamlessly extended to support new coordinate and
topology formats. This allows it to quickly keep up with and support
new developments in the MiMiC framework.</p>
  </sec>
  <sec id="sec3">
    <title>Usage</title>
    <p>The simplest way to create input files uses PrepQM:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0007" id="dgr2" position="float"/>This command passes the GROMACS topology file <monospace>topol.top</monospace> and the initial coordinate file <monospace>coords.gro</monospace> to the PrepQM subprogram. The command starts
an interactive session, where instructions can be given to add and/or
delete atoms to select the QM region. An example of such an instruction
is<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0008" id="GRAPHIC-d14e496-autogenerated" position="float"/>The keyword after add corresponds to the query that identifies
the atoms to be added to the QM region. In this case, atoms in the
residue with name <monospace>ACT</monospace> are selected. After selecting
the desired atoms, typing <monospace>q</monospace> will exit the interactive
session. MiMiCPy generates the CPMD input file <monospace>cpmd.inp</monospace> and the GROMACS index file <monospace>index.ndx</monospace>. The latter is used to generate the GROMACS
tpr file. If the GROMACS mdp file is passed to PrepQM, this is done
automatically:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0009" id="dgr4" position="float"/>Other options are available in the PrepQM subcommand to
tailor the input files to the user’s needs (see <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://mimic-project.org/">https://mimic-project.org/</uri>).</p>
    <p>The species of the QM atoms need to be passed from GROMACS
to CPMD.
For standard atom types (e.g., atoms in the natural amino acids),
the information is in the GROMACS force field. For nonstandard atom
types (e.g., a ligand), this information is usually not found. MiMiCPy
automatically guesses the atomic species based on a combination of
atomic mass, name, and type. This guess can be toggled on or off using
the <monospace>-guess</monospace> option. If set to <monospace>False</monospace> and nonstandard atoms are present, MiMiCPy will exit with an error
message. If one is not satisfied with the guessed elements, a file
containing the list of all nonstandard atom types with the correct
atomic elements can be specified with the <monospace>-nsa</monospace> option.</p>
    <p>The PrepQM plugins for PyMOL and VMD have a very similar
syntax
and functionality as the command-line version. In the case of the
VMD plugin:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0010" id="dgr5" position="float"/>Here, the QM atoms are selected visually and/or using the
VMD selection commands and entered into a named selection object called <monospace>$sel</monospace>. No coordinates need to be passed since they have
already been loaded into VMD.</p>
    <p>MiMiCPy can also be used as a
Python library:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0011" id="dgr6" position="float"/>To load the topology and coordinate files into MiMiCPy,
pass the file names to the <monospace>DefaultSelector</monospace> instance
(or the <monospace>VmdSelector</monospace> or <monospace>PyMOLSelector</monospace> instances if desired):<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0012" id="dgr7" position="float"/>The selector instance is then used to instantiate the <monospace>Preparation</monospace> class to actually prepare the input files:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0013" id="dgr8" position="float"/></p>
    <p>Atoms can be added and deleted to the QM region using
the <monospace>add()</monospace> and <monospace>delete()</monospace> methods, respectively.
Finally, the <monospace>get_mimic_input()</monospace> method can be
called to generate the GROMACS index and the CPMD input instances:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0014" id="dgr9" position="float"/>Parameters to change the way the CPMD file is written (e.g., <monospace>box_padding</monospace> to specify a minimal distance in nanometers
between the QM atoms and the QM box boundaries) can be passed to <monospace>get_mimic_input()</monospace>. The resulting <monospace>Script</monospace>-type instances <monospace>ndx</monospace> and <monospace>cpmd</monospace> can be used to explore the properties in a “pythonic”
way. For example, to print the total net charge of the QM region,
reported as the <monospace>CHARGE</monospace> parameter in the <monospace>&amp;SYSTEM</monospace> section of the CPMD input file, one can type:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0015" id="dgr10" position="float"/></p>
    <p>Further usage examples covering all MiMiCPy features
in more detail
can be found at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://mimic-project.org/">https://mimic-project.org/</uri>.</p>
  </sec>
  <sec id="sec4">
    <title>Applications</title>
    <p>Here, we describe using the MiMiCPy command-line
tools for a small
molecule in water with the solute as the QM part and a protein in
solution with covalent bonds that cross the QM-MM boundary.</p>
    <sec id="sec4.1">
      <title>Case 1: Acetone in Water</title>
      <p>Here, we setup a QM/MM simulation
of an acetone molecule (QM subsystem) surrounded by water molecules
(MM subsystem). The full system is equilibrated at the MM and QM/MM
levels. Usually, the first step consists of an annealing simulation,
where the temperature of the QM/MM system is smoothly decreased by
removing the excess kinetic energy (released due to the relaxation
from the MM to the optimal QM geometry) from the system. The input
files for the annealing of this system are prepared using the MiMiCPy
PrepQM tool. The following files have to be passed to PrepQM (see
the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://pubs.acs.org/doi/suppl/10.1021/acs.jcim.2c01620/suppl_file/ci2c01620_si_001.pdf">Supporting Information</ext-link> for more details):<list id="list3" list-type="simple"><list-item><label>1.</label><p>The GROMACS topology file <monospace>topol.top</monospace> and the MM equilibrated coordinate file <monospace>coords.gro</monospace>.</p></list-item><list-item><label>2.</label><p>A “template” CPMD input
file <monospace>template.inp</monospace> with only the <monospace>&amp;CPMD</monospace> and <monospace>&amp;DFT</monospace> sections
filled to instruct CPMD to perform annealing.</p></list-item><list-item><label>3.</label><p>A text file <monospace>pp_info.dat</monospace>, reporting pseudopotential details (like pseudopotential filenames, <monospace>LMAX</monospace>, <monospace>LOC</monospace>, etc.) for each element
in the system.</p></list-item><list-item><label>4.</label><p>A GROMACS
simulation parameter file <monospace>mimic.mdp</monospace> with generic
instructions to perform a MD run.</p></list-item></list>These four files are passed to MiMiCPy PrepQM with the command:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0016" id="dgr11" position="float"/></p>
      <p>The acetone molecule is a nonstandard molecule; consequently,
its atom definitions in the topology do not contain information about
the species. The atomic elements are correctly guessed by PrepQM.
The user is then asked to select, in an interactive environment, the
atoms to be included in the QM region. The following commands can
be entered to select the acetone molecule:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0017" id="dgr12" position="float"/></p>
      <p>A new file <monospace>cpmd.inp</monospace> is created
with the <monospace>&amp;ATOMS</monospace> and the <monospace>&amp;MIMIC</monospace> sections
filled up from <monospace>template.inp</monospace>. The path to the
GROMACS tpr file is also included when it is passed through the <monospace>-path</monospace> option of PrepQM. The pseudopotential information
(specified with the <monospace>-pp</monospace> option) is included
as specified in <monospace>pp_info.dat</monospace>. The QM system
charge and size are calculated, and a value of 0.35 nm (as specified
in the <monospace>-pad</monospace> option) is added to the QM box
in all directions to comply with the requirement of the Poisson solver
(Martyna and Tuckerman method) for isolated systems of CPMD. In practice,
a larger value would have to be passed, depending on the system under
consideration. The GROMACS index and tpr files are also generated.</p>
    </sec>
    <sec id="sec4.2">
      <title>Case 2: The IDH1 Enzyme</title>
      <p>The isocitrate dehydrogenase
1 enzyme (IDH1) from <italic>Escherichia coli</italic> in complex with the isocitrate ligand (ICT) and the cofactor NADP<sup>+</sup> (PDB ID: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="PDB" xlink:href="4AJ3">4AJ3</ext-link>)<sup><xref ref-type="bibr" rid="ref27">27</xref></sup> is first equilibrated at the MM level.
Then, to run QM/MM, ICT and two residues (Arg 100 and Arg 109) involved
in ligand binding are included in the QM region. This leaves NADP<sup>+</sup> in the MM region, a nonstandard molecule with no atom species
information in the topology file. This cannot be fixed by PrepQM,
since it can only fix missing information for atoms in the QM region.
CPMD does not have the species information on NADP<sup>+</sup>, possibly
leading to segmentation fault errors. This can be avoided before launching
PrepQM by running:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0018" id="dgr13" position="float"/></p>
      <p><monospace>FixTop</monospace> guesses missing atomic
species information in the topology file (this includes atoms in the
MM region, which PrepQM will not fix) and prints a consolidated <monospace>[ atomtypes ]</monospace> section into a GROMACS <monospace>.itp</monospace> file. The easiest way to incorporate this information into an existing
GROMACS force field is to write it to the <monospace>ffnonbonded.itp</monospace> file containing the <monospace>[ atomtypes ]</monospace> definition
of the whole system for all default GROMACS force fields. A copy of
the AMBER force field directory is created locally under <monospace>amberff/</monospace>. <monospace>FixTop</monospace> replaces the
<monospace>[ atomtypes ]</monospace> section in <monospace>amberff</monospace>/<monospace>ffnonbonded.itp</monospace> with the updated one containing
all species information and clears other <monospace>[ atomtypes ]</monospace> sections from the topology (as <monospace>-cls</monospace> was specified).
This can now be passed to PrepQM:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0019" id="dgr14" position="float"/>and typing in the interactive session:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0020" id="dgr15" position="float"/><monospace>ICT</monospace> and the (side chains of) two
amino acid residues (with residue IDs 100 and 109) are included in
the QM region without the backbone atoms.</p>
      <p>The syntax used in
the PrepQM command in this case is similar to
the previous example, apart from an extra <monospace>-bound</monospace> option. The two amino acid residues included in the QM region are
part of the protein, and hence, the QM-MM boundary cuts through covalent
bonds with a QM and an MM atom on either side. These QM atoms need
to be treated in a special way in order to saturate all the open valences
in the QM region. One approach is to use the boundary-pseudoatom scheme
where open-valence QM atoms are described through a special monovalent
pseudopotential.<sup><xref ref-type="bibr" rid="ref28">28</xref></sup> When the <monospace>-bound</monospace> option is turned on, PrepQM will automatically
detect the QM atoms with open valence and modify the CPMD input file
accordingly.</p>
      <p>The CPMD input file obtained in the output of the
PrepQM subcommand
can be edited further. We would like to constrain the distance between
the atom H1 of ICT and the atom C4N of NADP<sup>+</sup> to its current
value. The following block has to be added to the <monospace>&amp;ATOMS</monospace> section:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0021" id="dgr16" position="float"/>where in place of the placeholders <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0024.jpg"/> and <inline-graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0025.jpg"/>, we should insert the CPMD indices of
the two atoms involved in the constraint. Since ICT is in the QM region,
we can look into the <monospace>&amp;MIMIC</monospace> section of
the CPMD input file to obtain the CPMD index of the <monospace>H1</monospace> atom. However, as NADP<sup>+</sup> is instead in the MM region,
it is very difficult to obtain the CPMD index of the <monospace>C4N</monospace> atom by inspection of the input files alone. The MM atoms are grouped
by species in a nonobvious way when transferring the data from GROMACS
to CPMD. The CPMDid subcommand of MiMiCPy is provided to help in this
context. It can be used to retrieve the CPMD indices corresponding
to any atom in the topology file. For example, in our case, we launch
the command:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0022" id="dgr17" position="float"/>to enter in an interactive session where we provide the
selection of the atoms we are interested in by using the usual selection
language:<graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_0023" id="dgr18" position="float"/>This will output the CPMD indices of the two atoms, which
we can insert in the <monospace>CONSTRAINTS</monospace> block of the
CPMD input. The indices can be printed in a <monospace>table</monospace> format (for debugging), <monospace>list</monospace> format (for
quickly copying into the input), or as a <monospace>range</monospace> (for certain tasks like multiple thermostats). The printing format
can be set with the <monospace>-print</monospace> option.</p>
    </sec>
  </sec>
  <sec id="sec5">
    <title>Conclusions</title>
    <p>We have presented MiMiCPy, a companion
tool of MiMiC. The code
simplifies the preparation and debugging of input files via a user-friendly
interface. It provides an extensive list of command-line tools. PrepQM
allows the generation of CPMD input files and GROMACS tpr files from
the GROMACS topology and coordinate files. An easy-to-use selection language allows the selection
and design of QM regions. The correct guess of atomic species from
the MM topology is checked. Further tools to facilitate the interconvertibility
between MM and QM engines are provided.</p>
    <p>A plugin version of
PrepQM for PyMOL and VMD allows the selection
of visually complex QM regions. MiMiCPy can also be used as a Python
library, allowing one to develop complex workflows to set up MiMiC-based
QM/MM simulations. The package has been designed with a modular and
object-oriented approach. This allows one (i) to easily support new
topology and coordinate file formats from different programs, when
they become available in MiMiC; (ii) to develop new tools as MiMiC
expands its functionalities.</p>
    <p>Applications to acetone and the
IDH1 enzyme in water illustrate
how users can expedite the setup, reducing human error by automating
the procedure.</p>
  </sec>
  <sec sec-type="data-availability" id="sec6">
    <title>Data Availability Statement</title>
    <p>Releases of MiMiCPy are
made available in the PyPI repository (<uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://pypi.org/project/mimicpy/">https://pypi.org/project/mimicpy/</uri>). The source is available on GitLab at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://gitlab.com/MiMiC-projects/mimicpy">https://gitlab.com/MiMiC-projects/mimicpy</uri>, published under the GNU Lesser General Public License version 3
or later (LGPLv3+). Installation guides, tutorials, and other documentation
are available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://mimic-project.org/">https://mimic-project.org/</uri>. Additional information about online documentation and software
needed for running MiMiC-based QM/MM simulations is provided in the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://pubs.acs.org/doi/suppl/10.1021/acs.jcim.2c01620/suppl_file/ci2c01620_si_001.pdf">Supporting Information</ext-link>.</p>
  </sec>
</body>
<back>
  <notes id="notes1" notes-type="si">
    <title>Supporting Information Available</title>
    <p>The Supporting Information is
available free of charge at <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://pubs.acs.org/doi/10.1021/acs.jcim.2c01620?goto=supporting-info">https://pubs.acs.org/doi/10.1021/acs.jcim.2c01620</ext-link>.<list id="silist" list-type="simple"><list-item><p>Further details on the topology and other input files
mentioned in the <xref rid="sec4" ref-type="other">Applications</xref> section, information
about available online documentation, and a brief introduction to
the MiMiC framework for QM/MM simulations (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://pubs.acs.org/doi/suppl/10.1021/acs.jcim.2c01620/suppl_file/ci2c01620_si_001.pdf">PDF</ext-link>)</p></list-item></list></p>
  </notes>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sifile1">
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci2c01620_si_001.pdf">
        <caption>
          <p>ci2c01620_si_001.pdf</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <notes notes-type="COI-statement" id="NOTES-d14e783-autogenerated">
    <p>The
authors declare no
competing financial interest.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>We thank CECAM for providing an opportunity to present
the code at the flagship school in July 2022. We thank Viacheslav
Bolnykh and Mathilde Goullieux for valuable suggestions. B.R., D.M.,
and P.C. thank the Helmholtz European Partnering program (“Innovative
high-performance computing approaches for molecular neuromedicine”)
for funding. J.M.H.O. thanks VILLUM FONDEN for funding (grant no.
29478), and U.R. acknowledges funding from the Swiss National Science
Foundation Grant No. 200020-185092.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Merz</surname><given-names>K. M.</given-names></name><article-title>Using quantum
mechanical approaches to study biological systems</article-title>. <source>Acc. Chem. Res.</source><year>2014</year>, <volume>47</volume>, <fpage>2804</fpage>–<lpage>2811</lpage>. <pub-id pub-id-type="doi">10.1021/ar5001023</pub-id>.<pub-id pub-id-type="pmid">25099338</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Brookes</surname><given-names>J. C.</given-names></name><article-title>Quantum
effects in biology: golden rule in enzymes, olfaction, photosynthesis
and magnetodetection</article-title>. <source>Proceedings of the Royal
Society A: Mathematical, Physical and Engineering Sciences</source><year>2017</year>, <volume>473</volume>, <fpage>20160822</fpage><pub-id pub-id-type="doi">10.1098/rspa.2016.0822</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="journal" id="cit3"><name><surname>Cole</surname><given-names>D. J.</given-names></name>; <name><surname>Hine</surname><given-names>N. D.</given-names></name><article-title>Applications of
large-scale density functional theory
in biology</article-title>. <source>J. Phys.: Condens. Matter</source><year>2016</year>, <volume>28</volume>, <fpage>393001</fpage><pub-id pub-id-type="doi">10.1088/0953-8984/28/39/393001</pub-id>.<pub-id pub-id-type="pmid">27494095</pub-id></mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Van
Der Kamp</surname><given-names>M. W.</given-names></name>; <name><surname>Mulholland</surname><given-names>A. J.</given-names></name><article-title>Combined quantum mechanics/molecular
mechanics (QM/MM) methods in computational enzymology</article-title>. <source>Biochemistry</source><year>2013</year>, <volume>52</volume>, <fpage>2708</fpage>–<lpage>2728</lpage>. <pub-id pub-id-type="doi">10.1021/bi400215w</pub-id>.<pub-id pub-id-type="pmid">23557014</pub-id></mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>Liu</surname><given-names>M.</given-names></name>; <name><surname>Wang</surname><given-names>Y.</given-names></name>; <name><surname>Chen</surname><given-names>Y.</given-names></name>; <name><surname>Field</surname><given-names>M. J.</given-names></name>; <name><surname>Gao</surname><given-names>J.</given-names></name><article-title>QM/MM through
the 1990s: The First Twenty Years of Method Development and Applications</article-title>. <source>Isr. J. Chem.</source><year>2014</year>, <volume>54</volume>, <fpage>1250</fpage>–<lpage>1263</lpage>. <pub-id pub-id-type="doi">10.1002/ijch.201400036</pub-id>.<pub-id pub-id-type="pmid">29386687</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Senn</surname><given-names>H. M.</given-names></name>; <name><surname>Thiel</surname><given-names>W.</given-names></name><article-title>QM/MM methods for biomolecular systems</article-title>. <source>Angewandte
Chemie (International ed. in English)</source><year>2009</year>, <volume>48</volume>, <fpage>1198</fpage>–<lpage>1229</lpage>. <pub-id pub-id-type="doi">10.1002/anie.200802019</pub-id>.<pub-id pub-id-type="pmid">19173328</pub-id></mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Brunk</surname><given-names>E.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name><article-title>Mixed Quantum
Mechanical/Molecular Mechanical Molecular
Dynamics Simulations of Biological Systems in Ground and Electronically
Excited States</article-title>. <source>Chem. Rev.</source><year>2015</year>, <volume>115</volume>, <fpage>6217</fpage>–<lpage>6263</lpage>. <pub-id pub-id-type="doi">10.1021/cr500628b</pub-id>.<pub-id pub-id-type="pmid">25880693</pub-id></mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="journal" id="cit8"><name><surname>Magalhães</surname><given-names>R. P.</given-names></name>; <name><surname>Fernandes</surname><given-names>H. S.</given-names></name>; <name><surname>Sousa</surname><given-names>S. F.</given-names></name><article-title>Modelling Enzymatic Mechanisms with
QM/MM Approaches: Current Status and Future Challenges</article-title>. <source>Isr. J. Chem.</source><year>2020</year>, <volume>60</volume>, <fpage>655</fpage><pub-id pub-id-type="doi">10.1002/ijch.202000014</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="journal" id="cit9"><name><surname>Vennelakanti</surname><given-names>V.</given-names></name>; <name><surname>Nazemi</surname><given-names>A.</given-names></name>; <name><surname>Mehmood</surname><given-names>R.</given-names></name>; <name><surname>Steeves</surname><given-names>A. H.</given-names></name>; <name><surname>Kulik</surname><given-names>H. J.</given-names></name><article-title>Harder,
better, faster, stronger: Large-scale QM and QM/MM for predictive
modeling in enzymes and proteins</article-title>. <source>Current Opinion
in Structural Biology</source><year>2022</year>, <volume>72</volume>, <fpage>9</fpage><pub-id pub-id-type="doi">10.1016/j.sbi.2021.07.004</pub-id>.<pub-id pub-id-type="pmid">34388673</pub-id></mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="journal" id="cit10"><name><surname>Cui</surname><given-names>Q.</given-names></name>; <name><surname>Pal</surname><given-names>T.</given-names></name>; <name><surname>Xie</surname><given-names>L.</given-names></name><article-title>Biomolecular QM/MM Simulations: What Are Some of the
”burning Issues”?</article-title>. <source>J. Phys. Chem.
B</source><year>2021</year>, <volume>125</volume>, <fpage>689</fpage><pub-id pub-id-type="doi">10.1021/acs.jpcb.0c09898</pub-id>.<pub-id pub-id-type="pmid">33401903</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="journal" id="cit11"><name><surname>Olsen</surname><given-names>J. M. H.</given-names></name>; <name><surname>Bolnykh</surname><given-names>V.</given-names></name>; <name><surname>Meloni</surname><given-names>S.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Bircher</surname><given-names>M. P.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name><article-title>MiMiC: A Novel
Framework for Multiscale
Modeling in Computational Chemistry</article-title>. <source>J. Chem.
Theory Comput.</source><year>2019</year>, <volume>15</volume>, <fpage>3810</fpage>–<lpage>3823</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jctc.9b00093</pub-id>.<pub-id pub-id-type="pmid">30998344</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="computer-program" id="cit12"><person-group><name><surname>Olsen</surname><given-names>J. M. H.</given-names></name>; <name><surname>Bolnykh</surname><given-names>V.</given-names></name>; <name><surname>Meloni</surname><given-names>S.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name></person-group><article-title>MiMiC: A Framework
for Multiscale
Modeling in Computational Chemistry (v0.2.0)</article-title>; <source>GitLab</source><year>2022</year>; <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://gitlab.com/MiMiC-projects/MiMiC/-/releases/0.2.0">https://gitlab.com/MiMiC-projects/MiMiC/-/releases/0.2.0</uri>.</mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="weblink" id="cit13"><person-group person-group-type="allauthors"><name><surname>Bolnykh</surname><given-names>V.</given-names></name>; <name><surname>Olsen</surname><given-names>J.
M. H.</given-names></name>; <name><surname>Meloni</surname><given-names>S.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name></person-group><article-title>MiMiC Communication
Library (v2.0.1)</article-title>; <source>GitLab</source><year>2022</year>; <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://gitlab.com/MiMiC-projects/CommLib/-/releases/2.0.2">https://gitlab.com/MiMiC-projects/CommLib/-/releases/2.0.2</uri>.</mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="weblink" id="cit14"><person-group person-group-type="allauthors"><name><surname>Hutter</surname><given-names>J.</given-names></name>; <name><surname>Alavi</surname><given-names>A.</given-names></name>; <name><surname>Deutsch</surname><given-names>T.</given-names></name>; <name><surname>Bernasconi</surname><given-names>M.</given-names></name>; <name><surname>Goedecker</surname><given-names>S.</given-names></name>; <name><surname>Marx</surname><given-names>D.</given-names></name>; <name><surname>Tuckerman</surname><given-names>M.</given-names></name>; <name><surname>Parrinello</surname><given-names>M.</given-names></name></person-group><source>CPMD</source>; IBM Corp 1990–2022,
Copyright MPI für Festkörperforschung Stuttgart 1997–2001; <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.cpmd.org/">http://www.cpmd.org/</uri>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="journal" id="cit15"><name><surname>Pronk</surname><given-names>S.</given-names></name>; <name><surname>Páll</surname><given-names>S.</given-names></name>; <name><surname>Schulz</surname><given-names>R.</given-names></name>; <name><surname>Larsson</surname><given-names>P.</given-names></name>; <name><surname>Bjelkmar</surname><given-names>P.</given-names></name>; <name><surname>Apostolov</surname><given-names>R.</given-names></name>; <name><surname>Shirts</surname><given-names>M. R.</given-names></name>; <name><surname>Smith</surname><given-names>J. C.</given-names></name>; <name><surname>Kasson</surname><given-names>P. M.</given-names></name>; <name><surname>Van Der Spoel</surname><given-names>D.</given-names></name>; <name><surname>Hess</surname><given-names>B.</given-names></name>; <name><surname>Lindahl</surname><given-names>E.</given-names></name><article-title>GROMACS 4.5: A high-throughput
and highly parallel open source molecular simulation toolkit</article-title>. <source>Bioinformatics</source><year>2013</year>, <volume>29</volume>, <fpage>845</fpage>–<lpage>854</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btt055</pub-id>.<pub-id pub-id-type="pmid">23407358</pub-id></mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="journal" id="cit16"><name><surname>Abraham</surname><given-names>M. J.</given-names></name>; <name><surname>Murtola</surname><given-names>T.</given-names></name>; <name><surname>Schulz</surname><given-names>R.</given-names></name>; <name><surname>Páll</surname><given-names>S.</given-names></name>; <name><surname>Smith</surname><given-names>J. C.</given-names></name>; <name><surname>Hess</surname><given-names>B.</given-names></name>; <name><surname>Lindah</surname><given-names>E.</given-names></name><article-title>GROMACS: High performance
molecular simulations through multi-level parallelism from laptops
to supercomputers</article-title>. <source>SoftwareX</source><year>2015</year>, <volume>1–2</volume>, <fpage>19</fpage>–<lpage>25</lpage>. <pub-id pub-id-type="doi">10.1016/j.softx.2015.06.001</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>Bolnykh</surname><given-names>V.</given-names></name>; <name><surname>Olsen</surname><given-names>J. M. H.</given-names></name>; <name><surname>Meloni</surname><given-names>S.</given-names></name>; <name><surname>Bircher</surname><given-names>M. P.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name><article-title>Extreme Scalability
of DFT-Based
QM/MM MD Simulations Using MiMiC</article-title>. <source>J. Chem. Theory
Comput.</source><year>2019</year>, <volume>15</volume>, <fpage>5601</fpage>–<lpage>5613</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jctc.9b00424</pub-id>.<pub-id pub-id-type="pmid">31498615</pub-id></mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>Kirsch</surname><given-names>T.</given-names></name>; <name><surname>Olsen</surname><given-names>J. M. H.</given-names></name>; <name><surname>Bolnykh</surname><given-names>V.</given-names></name>; <name><surname>Meloni</surname><given-names>S.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name>; <name><surname>Cascella</surname><given-names>M.</given-names></name>; <name><surname>Gauss</surname><given-names>J.</given-names></name><article-title>Wavefunction-Based
Electrostatic-Embedding QM/MM Using CFOUR through MiMiC</article-title>. <source>J. Chem. Theory Comput.</source><year>2022</year>, <volume>18</volume>, <fpage>13</fpage>–<lpage>24</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jctc.1c00878</pub-id>.<pub-id pub-id-type="pmid">34905353</pub-id></mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Schackert</surname><given-names>F. K.</given-names></name>; <name><surname>Biedermann</surname><given-names>J.</given-names></name>; <name><surname>Abdolvand</surname><given-names>S.</given-names></name>; <name><surname>Minniberger</surname><given-names>S.</given-names></name>; <name><surname>Song</surname><given-names>C.</given-names></name>; <name><surname>Plested</surname><given-names>A. J. R.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name>; <name><surname>Sun</surname><given-names>H.</given-names></name><article-title>Mechanism
of Calcium Permeation in a Glutamate Receptor Ion Channel</article-title>. <source>J. Chem. Inf. Model.</source><year>2023</year>, <pub-id pub-id-type="doi">10.1021/acs.jcim.2c01494</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Chiariello</surname><given-names>M. G.</given-names></name>; <name><surname>Alfonso-Prieto</surname><given-names>M.</given-names></name>; <name><surname>Ippoliti</surname><given-names>E.</given-names></name>; <name><surname>Fahlke</surname><given-names>C.</given-names></name>; <name><surname>Carloni</surname><given-names>P.</given-names></name><article-title>Mechanisms
Underlying Proton Release in CLC-type F-/H+Antiporters</article-title>. <source>J. Phys. Chem. Lett.</source><year>2021</year>, <volume>12</volume>, <fpage>4415</fpage>–<lpage>4420</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jpclett.1c00361</pub-id>.<pub-id pub-id-type="pmid">33950673</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="book" id="cit21"><person-group person-group-type="allauthors"><name><surname>Van Rossum</surname><given-names>G.</given-names></name>; <name><surname>Drake</surname><given-names>F. L.</given-names></name></person-group><source>Python 3 Reference
Manual</source>; <publisher-name>CreateSpace</publisher-name>: <publisher-loc>Scotts Valley, CA</publisher-loc>, <year>2009</year>.</mixed-citation>
    </ref>
    <ref id="ref22">
      <mixed-citation publication-type="journal" id="cit22"><name><surname>Harris</surname><given-names>C. R.</given-names></name>; et al. <article-title>Array programming with NumPy</article-title>. <source>Nature 2020 585:7825</source><year>2020</year>, <volume>585</volume>, <fpage>357</fpage>–<lpage>362</lpage>. <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="weblink" id="cit23"><collab>The pandas development team</collab>. <source>pandas-dev/pandas:
Pandas</source>; <year>2020</year>; <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://doi.org/10.5281/zenodo.3509134">https://doi.org/10.5281/zenodo.3509134</uri>.</mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="journal" id="cit24"><name><surname>Humphrey</surname><given-names>W.</given-names></name>; <name><surname>Dalke</surname><given-names>A.</given-names></name>; <name><surname>Schulten</surname><given-names>K.</given-names></name><article-title>VMD –
Visual Molecular Dynamics</article-title>. <source>J. Mol. Graphics</source><year>1996</year>, <volume>14</volume>, <fpage>33</fpage>–<lpage>38</lpage>. <pub-id pub-id-type="doi">10.1016/0263-7855(96)00018-5</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="computer-program" id="cit25"><person-group person-group-type="allauthors"><collab>Schrödinger,
L.L.C.</collab></person-group><source>The PyMOL Molecular Graphics
System</source>, Version 2.3.4, <year>2015</year>.</mixed-citation>
    </ref>
    <ref id="ref26">
      <mixed-citation publication-type="journal" id="cit26"><name><surname>Brooks</surname><given-names>B. R.</given-names></name>; et al. <article-title>CHARMM: The biomolecular simulation program</article-title>. <source>J. Comput. Chem.</source><year>2009</year>, <volume>30</volume>, <fpage>1545</fpage>–<lpage>1614</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.21287</pub-id>.<pub-id pub-id-type="pmid">19444816</pub-id></mixed-citation>
    </ref>
    <ref id="ref27">
      <mixed-citation publication-type="journal" id="cit27"><name><surname>Gonçalves</surname><given-names>S.</given-names></name>; <name><surname>Miller</surname><given-names>S. P.</given-names></name>; <name><surname>Carrondo</surname><given-names>M. A.</given-names></name>; <name><surname>Dean</surname><given-names>A. M.</given-names></name>; <name><surname>Matias</surname><given-names>P. M.</given-names></name><article-title>Induced
fit and the catalytic mechanism of isocitrate dehydrogenase</article-title>. <source>Biochemistry</source><year>2012</year>, <volume>51</volume>, <fpage>7098</fpage>–<lpage>7115</lpage>. <pub-id pub-id-type="doi">10.1021/bi300483w</pub-id>.<pub-id pub-id-type="pmid">22891681</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <mixed-citation publication-type="journal" id="cit28"><name><surname>Von
Lilienfeld</surname><given-names>O. A.</given-names></name>; <name><surname>Tavernelli</surname><given-names>I.</given-names></name>; <name><surname>Rothlisberger</surname><given-names>U.</given-names></name>; <name><surname>Sebastiani</surname><given-names>D.</given-names></name><article-title>Variational optimization of effective atom centered
potentials for molecular properties</article-title>. <source>J. Chem.
Phys.</source><year>2005</year>, <volume>122</volume>, <fpage>014113</fpage><pub-id pub-id-type="doi">10.1063/1.1829051</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>

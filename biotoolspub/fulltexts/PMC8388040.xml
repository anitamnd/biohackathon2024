<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8388040</article-id>
    <article-id pub-id-type="pmid">33532821</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btab077</article-id>
    <article-id pub-id-type="publisher-id">btab077</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Detecting high-scoring local alignments in pangenome graphs</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0744-7078</contrib-id>
        <name>
          <surname>Schulz</surname>
          <given-names>Tizian</given-names>
        </name>
        <aff><institution>Faculty of Technology and Center for Biotechnology (CeBiTec), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
        <aff><institution>Bielefeld Institute for Bioinformatics Infrastructure (BIBI), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
        <aff><institution>Graduate School ‘Digital Infrastructure for the Life Sciences’ (DILS), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2249-9880</contrib-id>
        <name>
          <surname>Wittler</surname>
          <given-names>Roland</given-names>
        </name>
        <aff><institution>Faculty of Technology and Center for Biotechnology (CeBiTec), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
        <aff><institution>Bielefeld Institute for Bioinformatics Infrastructure (BIBI), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8536-6065</contrib-id>
        <name>
          <surname>Rahmann</surname>
          <given-names>Sven</given-names>
        </name>
        <aff><institution>Genome Informatics, Institute of Human Genetics, University Hospital Essen, University of Duisburg-Essen</institution>, Essen 45122, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1143-0172</contrib-id>
        <name>
          <surname>Hach</surname>
          <given-names>Faraz</given-names>
        </name>
        <aff><institution>Vancouver Prostate Centre</institution>, Vancouver, BC V6H 3Z6, <country country="CA">Canada</country></aff>
        <aff><institution>Department of Urologic Sciences, University of British Columbia</institution>, Vancouver, BC V6T 1Z4, <country country="CA">Canada</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4656-7155</contrib-id>
        <name>
          <surname>Stoye</surname>
          <given-names>Jens</given-names>
        </name>
        <xref rid="btab077-cor1" ref-type="corresp"/>
        <aff><institution>Faculty of Technology and Center for Biotechnology (CeBiTec), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
        <aff><institution>Bielefeld Institute for Bioinformatics Infrastructure (BIBI), Bielefeld University</institution>, Bielefeld 33615, <country country="DE">Germany</country></aff>
        <!--jens.stoye@uni-bielefeld.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btab077-cor1">To whom correspondence should be addressed. <email>jens.stoye@uni-bielefeld.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>8</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-02-03">
      <day>03</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>03</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <volume>37</volume>
    <issue>16</issue>
    <fpage>2266</fpage>
    <lpage>2274</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>8</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>02</day>
        <month>12</month>
        <year>2020</year>
      </date>
      <date date-type="editorial-decision">
        <day>25</day>
        <month>1</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>1</month>
        <year>2021</year>
      </date>
      <date date-type="corrected-typeset">
        <day>03</day>
        <month>8</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits 
unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btab077.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Increasing amounts of individual genomes sequenced per species motivate the usage of pangenomic approaches. Pangenomes may be represented as graphical structures, e.g. compacted colored de Bruijn graphs, which offer a low memory usage and facilitate reference-free sequence comparisons. While sequence-to-graph mapping to graphical pangenomes has been studied for some time, no local alignment search tool in the vein of BLAST has been proposed yet.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We present a new heuristic method to find maximum scoring local alignments of a DNA query sequence to a pangenome represented as a compacted colored de Bruijn graph. Our approach additionally allows a comparison of similarity among sequences within the pangenome. We show that local alignment scores follow an exponential-tail distribution similar to BLAST scores, and we discuss how to estimate its parameters to separate local alignments representing sequence homology from spurious findings. An implementation of our method is presented, and its performance and usability are shown. Our approach scales sublinearly in running time and memory usage with respect to the number of genomes under consideration. This is an advantage over classical methods that do not make use of sequence similarity within the pangenome.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Source code and test data are available from <ext-link xlink:href="https://gitlab.ub.uni-bielefeld.de/gi/plast" ext-link-type="uri">https://gitlab.ub.uni-bielefeld.de/gi/plast</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p>Supplementary data are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>German Network for Bioinformatics Infrastructure</institution>
            <institution-id institution-id-type="DOI">10.13039/501100018929</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>031A537B</award-id>
        <award-id>031A533A</award-id>
        <award-id>031A538A</award-id>
        <award-id>031A533B</award-id>
        <award-id>031A535A</award-id>
        <award-id>031A537C</award-id>
        <award-id>031A534A</award-id>
        <award-id>031A532B</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>European Union’s Horizon 2020 research and innovation program</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Marie Skłodowska-Curie</institution>
          </institution-wrap>
        </funding-source>
        <award-id>872539</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>DFG</institution>
            <institution-id institution-id-type="DOI">10.13039/100004807</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>GRK 1906</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science and Engineering Council of Canada</institution>
          </institution-wrap>
        </funding-source>
        <award-id>RGPIN-05952</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Michael Smith Foundation for Health Research</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000245</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>SCH-2020-0370</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <sec>
      <title>1.1 Motivation</title>
      <p>Substantial technological advances in DNA sequencing made genomic data become one of the largest types of information kept by humankind (<xref rid="btab077-B40" ref-type="bibr">Stephens <italic toggle="yes">et al.</italic>, 2015</xref>). Thus, finding efficient ways of storing and analyzing these data is of high importance. The discipline of <italic toggle="yes">computational pangenomics</italic> tries to cope with this challenge (<xref rid="btab077-B29" ref-type="bibr">Marschall <italic toggle="yes">et al.</italic>, 2016</xref>). A <italic toggle="yes">pangenome</italic> is defined as a set of genomic sequences that may be stored and analyzed collectively while being represented as a single entity. Sequences within these sets are usually strongly related and thus highly similar. Commonly, a pangenome comprises all genomic sequences of a species, but this definition may be widened or tightened to any other taxonomic unit or kind of distinction. The pangenomic approach allows a high memory saving potential as sequence parts shared by multiple genomes have to be stored only once. In addition, it enables the simultaneous comparison of a large number of individual genomes while avoiding classical reference-based analyses that turned out to have shortcomings in various cases (<xref rid="btab077-B7" ref-type="bibr">Brandt <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btab077-B10" ref-type="bibr">Degner <italic toggle="yes">et al.</italic>, 2009</xref>).</p>
      <p>Pangenomes can be represented in many forms, ranging from pure collections of raw sequences (<xref rid="btab077-B44" ref-type="bibr">Vernikos <italic toggle="yes">et al.</italic>, 2015</xref>) over alignment-based approaches using multiple sequence alignments (<xref rid="btab077-B14" ref-type="bibr">Edgar and Batzoglou, 2006</xref>; <xref rid="btab077-B34" ref-type="bibr">Notredame, 2007</xref>) to graphical structures (e.g. <xref rid="btab077-B11" ref-type="bibr">Dilthey <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btab077-B16" ref-type="bibr">Garrison <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btab077-B19" ref-type="bibr">Iqbal <italic toggle="yes">et al.</italic>, 2012</xref>). In this work, we focus on graphical structures. In particular, we represent pangenomes as compacted colored de Bruijn graphs (<xref rid="btab077-B28" ref-type="bibr">Marcus <italic toggle="yes">et al.</italic>, 2014</xref>; <xref rid="btab077-B30" ref-type="bibr">Minkin <italic toggle="yes">et al.</italic>, 2017</xref>). Advantages of this representation over others include low memory and storage footprints, versatility in accepting different input types (raw sequences or assemblies) and fast and alignment-free construction.</p>
    </sec>
    <sec>
      <title>1.2 Background</title>
      <p>Basic kinds of comparisons on a pangenome are different variants of sequence searches. Detecting exact or approximate matches can serve to answer questions like presence or absence queries. More complex analyses often involve alignment-based methods.</p>
      <p>Algorithms for sequence-to-graph alignment have already been studied for some time. Early works date back to 1989 where a graph was used for approximate regular expression mapping (<xref rid="btab077-B32" ref-type="bibr">Myers and Miller, 1989</xref>). In 2000, an algorithm to align sequences to arbitrary graphs was proposed in the context of hypertext search (<xref rid="btab077-B33" ref-type="bibr">Navarro, 2000</xref>). <xref rid="btab077-B25" ref-type="bibr">Lee <italic toggle="yes">et al.</italic> (2002)</xref> introduced <italic toggle="yes">partial order alignment</italic> (POA) on directed acyclic graphs in 2002. Works by <xref rid="btab077-B11" ref-type="bibr">Dilthey <italic toggle="yes">et al.</italic> (2015</xref>, <xref rid="btab077-B12" ref-type="bibr">2016</xref>) are restricted to acyclic graphs as well. The tool ‘vg’ uses POA on general graphs (<xref rid="btab077-B16" ref-type="bibr">Garrison <italic toggle="yes">et al.</italic>, 2018</xref>) by <italic toggle="yes">unrolling</italic> cyclic parts. Read mapping on de Bruijn graphs can be done by a heuristic proposed by <xref rid="btab077-B26" ref-type="bibr">Limasset <italic toggle="yes">et al.</italic> (2016)</xref>. Recently, a method was published allowing exact read mapping on general graphs (<xref rid="btab077-B36" ref-type="bibr">Rautiainen <italic toggle="yes">et al.</italic>, 2019</xref>). However, covering a distance based scenario only, a generalization to local alignment is non-trivial and makes this approach limited to semi-global alignment. Other solutions have been presented by <xref rid="btab077-B6" ref-type="bibr">Antipov <italic toggle="yes">et al.</italic> (2016)</xref> and <xref rid="btab077-B22" ref-type="bibr">Kavya <italic toggle="yes">et al.</italic> (2019)</xref>.</p>
      <p>These solutions address a sequence mapping scenario where query sequences are aligned either globally or locally to the graph region that best matches the query. This approach is usually designed for rapidly mapping a huge number of queries gaining speed by the underlying assumption that a query either maps to exactly one position in the graph or to none.</p>
      <p>In this work, we study the problem of finding high-scoring local alignments between a query sequence and a graph that are likely to represent sequence homology. The exact notion of ‘high-scoring’ is based on statistical considerations. Hence, we are within the regime of the popular Basic Local Alignment Search Tool (BLAST; <xref rid="btab077-B4" ref-type="bibr">Altschul <italic toggle="yes">et al.</italic>, 1990</xref>). Even though BLAST is still widely used, many other solutions have been presented for heuristic sequence alignment searches (e.g. <xref rid="btab077-B23" ref-type="bibr">Kent, 2002</xref>). Some exploit new algorithmic techniques or data structures to improve sensitivity, run time or both (e.g. <xref rid="btab077-B13" ref-type="bibr">Edgar, 2010</xref>; <xref rid="btab077-B15" ref-type="bibr">Frith and Shrestha, 2018</xref>; <xref rid="btab077-B39" ref-type="bibr">Steinegger and Söding, 2017</xref>). Others exclusively focus on protein alignment (<xref rid="btab077-B8" ref-type="bibr">Buchfink <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btab077-B41" ref-type="bibr">Suzuki <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btab077-B43" ref-type="bibr">Vaser <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab077-B47" ref-type="bibr">Zhao <italic toggle="yes">et al.</italic>, 2012</xref>). Recently, the tool BlastFrost (<xref rid="btab077-B27" ref-type="bibr">Luhmann <italic toggle="yes">et al.</italic>, 2021</xref>) appeared, which enables sequence queries on a pangenome graph. However, it does not calculate alignments.</p>
    </sec>
    <sec>
      <title>1.3 Contribution</title>
      <p>In comparison to the abovementioned alignment tools that work on collections of individual sequences, our approach stores genomic sequences in a graph to analyze them jointly. Moreover, by querying the graph, we are able to compare these sequences not only to the query but also among each other. This has an advantage over other approaches where an all-against-all post-processing of results would add a quadratic number of comparisons to their running time. To this end, we introduce the notion of a <italic toggle="yes">quorum</italic> and a <italic toggle="yes">search color set</italic> to allow for customized searches in specific parts of the pangenome. A quorum here is meant as the number of individual sequences of the pangenome that have to share a graph sequence to consider it during search. A search color set enables the search to be focused on graph sequences that appear in individual sequences from the set. For instance, a user might be interested only in alignments shared by the majority of genomes showing a certain phenotype. Finally, we present first results of alignment statistics considering that all sequences in a pangenome are related and highly similar. This is in contrast to the general initial, underlying independence assumptions. To our knowledge, our approach is unique and has never been studied before.</p>
      <p>The remainder of this manuscript is organized as follows. In Section 2, we define our model, formally state the problem and describe the algorithmic procedure. Section 3 contains use cases of our algorithm and comparisons of its performance. In Section 4, we discuss our results. The source code of our implementation, instructions on how to generate samples for our statistical parameter estimation and test data used in this article are available from <ext-link xlink:href="https://gitlab.ub.uni-bielefeld.de/gi/plast" ext-link-type="uri">https://gitlab.ub.uni-bielefeld.de/gi/plast</ext-link>.</p>
    </sec>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Basic definitions</title>
      <p>A <italic toggle="yes">string</italic> is a sequence of characters drawn from a finite, non-empty set, called <italic toggle="yes">alphabet</italic>. For a given string <italic toggle="yes">s</italic>, we denote its length by <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>s</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>, the character at position <italic toggle="yes">i</italic> by <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> and the substring starting at position <italic toggle="yes">i</italic> and ending at position <italic toggle="yes">j</italic> by <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mn>..</mml:mn><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. A string of length <italic toggle="yes">k</italic> is called a <italic toggle="yes">k-mer</italic>. For any decomposition <italic toggle="yes">s</italic> = <italic toggle="yes">xy</italic>, the (potentially empty) substrings <italic toggle="yes">x</italic> and <italic toggle="yes">y</italic> are called <italic toggle="yes">prefix</italic> and <italic toggle="yes">suffix</italic> of <italic toggle="yes">s</italic>, respectively.</p>
      <p>In this work, we assume that all strings are over the DNA nucleotide alphabet <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Σ</mml:mo></mml:mrow><mml:mrow><mml:mtext>DNA</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">T</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. Then, a <italic toggle="yes">query</italic> is a finite string <italic toggle="yes">q</italic> over <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Σ</mml:mo></mml:mrow><mml:mrow><mml:mtext>DNA</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. A <italic toggle="yes">genome</italic> is a set of strings over <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Σ</mml:mo></mml:mrow><mml:mrow><mml:mtext>DNA</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> that can be many millions of short sequences representing raw data produced by a sequencing machine, or a few long sequences representing chromosomes or contigs of a complete or draft assembly. Each genome is identified with a unique color of the <italic toggle="yes">universal color set U</italic>, and the color is assigned to all strings of the genome to distinguish between sequences from different genomes.</p>
    </sec>
    <sec>
      <title>2.2 Compacted colored de Bruijn graphs</title>
      <p>Let <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>≥</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>. A <italic toggle="yes">compacted colored de Bruijn graph</italic> of dimension <italic toggle="yes">k</italic> over an alphabet Σ and a color set <italic toggle="yes">U</italic> is a vertex-labeled directed graph <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mo>λ</mml:mo><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where each vertex <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> is labeled with a sequence <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of length at least <italic toggle="yes">k</italic>, each <italic toggle="yes">k</italic>-mer <italic toggle="yes">r</italic> appears in the label of at most one vertex of the graph, there exists an edge <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math></inline-formula> from vertex <italic toggle="yes">v</italic> to vertex <italic toggle="yes">w</italic> if and only if the (<italic toggle="yes">k</italic>−1)-length suffix of <inline-formula id="IE13"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> equals the (<italic toggle="yes">k</italic>−1)-length prefix of <inline-formula id="IE15"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, and <italic toggle="yes">C</italic> assigns a color set <inline-formula id="IE16"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mi>U</mml:mi></mml:mrow></mml:math></inline-formula> to each <italic toggle="yes">k</italic>-mer <italic toggle="yes">r</italic> that appears in any vertex label. For convenience, we write <inline-formula id="IE17"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> instead of <inline-formula id="IE18"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula> for the length of the label of <italic toggle="yes">v</italic>. In addition, <inline-formula id="IE19"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>′</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denotes the label of <italic toggle="yes">v</italic> except its last <italic toggle="yes">k</italic> −1 characters, i.e. <inline-formula id="IE20"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>′</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1..</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
    </sec>
    <sec>
      <title>2.3 Locations and truncated paths</title>
      <p>We represent a <italic toggle="yes">location</italic> in a compacted colored de Bruijn graph <inline-formula id="IE21"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mo>λ</mml:mo><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> by a pair (<italic toggle="yes">v</italic>, <italic toggle="yes">i</italic>) with <inline-formula id="IE22"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE23"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>. We say that a <italic toggle="yes">k</italic>-mer <italic toggle="yes">r overlaps</italic> a location <inline-formula id="IE24"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> if and only if <italic toggle="yes">r</italic> is a substring of <inline-formula id="IE25"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> starting at position <italic toggle="yes">o</italic> such that <inline-formula id="IE26"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mi>max</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>o</mml:mi><mml:mo>≤</mml:mo><mml:mi>min</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. For an interval <inline-formula id="IE27"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>b</mml:mi><mml:mn>..</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> of positions within <italic toggle="yes">v</italic>, <inline-formula id="IE28"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>b</mml:mi><mml:mo>≤</mml:mo><mml:mi>e</mml:mi><mml:mo>≤</mml:mo><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:math></inline-formula>, we define the <italic toggle="yes">interval location</italic> as <inline-formula id="IE29"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. The interval location <inline-formula id="IE30"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>v</mml:mi><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of a complete vertex <italic toggle="yes">v</italic> is denoted by <italic toggle="yes">L</italic>(<italic toggle="yes">v</italic>).</p>
      <p>We say that <inline-formula id="IE31"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a <italic toggle="yes">path</italic> in <italic toggle="yes">G</italic> if <inline-formula id="IE32"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE33"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">i</italic> with <inline-formula id="IE34"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula>. A triple <inline-formula id="IE35"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is called a <italic toggle="yes">truncated path</italic> in <italic toggle="yes">G</italic> from location <inline-formula id="IE36"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> to location <inline-formula id="IE37"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> passing vertices <inline-formula id="IE38"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> if and only if (i) <italic toggle="yes">p = (v<sub>0</sub>, v<sub>1</sub>, …, v<sub>z</sub>)</italic> is a path in <italic toggle="yes">G</italic>; (ii) <inline-formula id="IE39"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>; (iii) <inline-formula id="IE40"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>; and (iv) if <italic toggle="yes">z </italic>=<italic toggle="yes"> </italic>0 then <inline-formula id="IE41"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi>b</mml:mi><mml:mo>≤</mml:mo><mml:mi>e</mml:mi></mml:mrow></mml:math></inline-formula> (see <xref rid="btab077-F1" ref-type="fig">Fig. 1</xref> for an example). A truncated path <inline-formula id="IE42"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> has a sequence 
<disp-formula id="E1"><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>b</mml:mi><mml:mn>..</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>b</mml:mi><mml:mn>..</mml:mn><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>λ</mml:mo><mml:mo>′</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow/></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo> </mml:mo><mml:mo>λ</mml:mo><mml:mo>′</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1..</mml:mn><mml:mi>e</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
      <fig position="float" id="btab077-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>Used data structures. <bold>Top:</bold> Example of a compacted de Bruijn graph <italic toggle="yes">G</italic>. The truncated path <inline-formula id="IE43"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is marked in bold. <bold>Bottom:</bold> Visualization of an index search using arrays <inline-formula id="IE44"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:mtext>PROF</mml:mtext></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE45"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext></mml:mrow></mml:math></inline-formula>. Occurrences of the 2-mer AG in <italic toggle="yes">G</italic> are accessed by looking up AG’s position in <inline-formula id="IE46"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mtext>PROF</mml:mtext></mml:mrow></mml:math></inline-formula> that provides the offset in <inline-formula id="IE47"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE48"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi>\#</mml:mi><mml:mtext>occ</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">AG</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> locations corresponding to occurrences of AG in <italic toggle="yes">G</italic> are stored consecutively. Array and sequence indices start with 0</p>
        </caption>
        <graphic xlink:href="btab077f1" position="float"/>
      </fig>
      <p>The <italic toggle="yes">path location</italic> of a truncated path <inline-formula id="IE49"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is defined as
<disp-formula id="E2"><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>∪</mml:mo><mml:munder><mml:mo>∪</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:munder><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow/></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo> </mml:mo><mml:mo>∪</mml:mo><mml:mo> </mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>e</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow><mml:mo> </mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p>The color set of a path location <italic toggle="yes">L</italic> is then defined as <inline-formula id="IE50"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∪</mml:mo><mml:mrow><mml:mi>r</mml:mi><mml:mo> </mml:mo><mml:mtext>overlaps</mml:mtext><mml:mo> </mml:mo><mml:mtext>any</mml:mtext><mml:mo> </mml:mo><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Given a quorum value <inline-formula id="IE51"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, we say a truncated path <italic toggle="yes">t</italic> is <italic toggle="yes">quorum fulfilling</italic> if and only if <inline-formula id="IE52"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mo>≥</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula> for every location <inline-formula id="IE53"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mi>l</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
    </sec>
    <sec>
      <title>2.4 Formal problem statement</title>
      <p>Our algorithm finds high-scoring local alignments between a given query sequence <italic toggle="yes">q</italic> and a pangenome represented as a compacted colored de Bruijn graph <inline-formula id="IE54"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mo>λ</mml:mo><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> over the DNA alphabet and a color set <italic toggle="yes">U</italic>. Apart from <italic toggle="yes">q</italic> and <italic toggle="yes">G</italic>, it takes as input a non-empty color set <inline-formula id="IE55"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mtext>search</mml:mtext></mml:mrow></mml:msub><mml:mo>⊆</mml:mo><mml:mi>U</mml:mi></mml:mrow></mml:math></inline-formula> called <italic toggle="yes">search color set</italic> and a quorum <inline-formula id="IE56"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mtext>search</mml:mtext></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>. It outputs a set <inline-formula id="IE57"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mi mathvariant="script">A</mml:mi></mml:math></inline-formula>, where each <inline-formula id="IE58"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mi>A</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:math></inline-formula> is a pair <inline-formula id="IE59"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>α</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> consisting of an alignment <italic toggle="yes">α</italic> between a substring of <italic toggle="yes">q</italic> and the sequence <inline-formula id="IE60"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of a quorum fulfilling truncated path <italic toggle="yes">t</italic>, and a list of checkpoints <inline-formula id="IE61"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:math></inline-formula> partitioning <italic toggle="yes">t</italic> into maximal subpaths with the same color set, each containing a subset of <inline-formula id="IE62"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mtext>search</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> of cardinality at least <italic toggle="yes">m</italic>. Our algorithm allows to find local alignments for both <italic toggle="yes">q</italic> and its reverse complement. For the sake of simplicity, we forgo to mention the reverse complement in the following descriptions. Procedures may be assumed to work similarly for the reverse complementary sequence.</p>
    </sec>
    <sec>
      <title>2.5 Algorithm</title>
      <p>The algorithm consists of three basic algorithmic steps. In the <italic toggle="yes">seed detection step</italic>, maximal exact matches of a minimal length <inline-formula id="IE63"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> are searched between <italic toggle="yes">q</italic> and all sequences of <italic toggle="yes">G</italic>. Found seeds are extended without gaps in the <italic toggle="yes">seed extension step</italic>. Statistical considerations are used to extract biologically meaningful alignments. These are then recalculated in the <italic toggle="yes">gapped recalculation step</italic> to obtain the finally reported results.</p>
      <sec>
        <title>2.5.1 Preprocessing: Graph construction and index generation</title>
        <p>While the query sequence <italic toggle="yes">q</italic> has to be specified as an input parameter, the graph <italic toggle="yes">G</italic> may be given or initially constructed from a set of genomes in a preprocessing step. Once <italic toggle="yes">G</italic> has been created for a specific value of <italic toggle="yes">k</italic>, an additional index is built according to a minimal seed length <inline-formula id="IE64"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>.</p>
        <p>The index consists of two arrays that allow a fast location of exact matches between <italic toggle="yes">q</italic> and sequences stored in <italic toggle="yes">G</italic>. Array <inline-formula id="IE65"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:mtext>PROF</mml:mtext></mml:mrow></mml:math></inline-formula> is a <italic toggle="yes">w</italic>-mer profile that contains, in form of a cumulative sum, for any <italic toggle="yes">w</italic>-mer <italic toggle="yes">ω</italic> the number of occurrences of <italic toggle="yes">ω</italic> in <italic toggle="yes">G</italic>, denoted <inline-formula id="IE66"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mo>#</mml:mo><mml:mi>\#</mml:mi><mml:mtext>occ</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>ω</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. In other words, PROF<inline-formula id="IE67"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mo>#</mml:mo><mml:mi>\#</mml:mi><mml:mtext>occ</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mo>ω</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and 
<disp-formula id="E3"><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:mtext>PROF</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>\#</mml:mi><mml:mtext>occ</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mo>ω</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mtext>PROF</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo> </mml:mo><mml:mtext>for</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>all</mml:mtext><mml:mo> </mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <italic toggle="yes">ω<sub>i</sub></italic> is the <italic toggle="yes">i</italic>-th <italic toggle="yes">w</italic>-mer over <inline-formula id="IE68"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>Σ</mml:mo></mml:mrow><mml:mrow><mml:mtext>DNA</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in lexicographic order. The second array, <inline-formula id="IE69"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext></mml:mrow></mml:math></inline-formula>, harbors the occurrences of all <italic toggle="yes">w</italic>-mers in the graph. An occurrence of a <italic toggle="yes">w</italic>-mer <italic toggle="yes">ω</italic> in <italic toggle="yes">G</italic> is defined as a pair <inline-formula id="IE70"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mtext>occ</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>ω</mml:mo><mml:mo stretchy="false">) </mml:mo><mml:mo>: </mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where <inline-formula id="IE71"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">o</italic> represents the offset in <inline-formula id="IE73"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> at which <italic toggle="yes">ω</italic> starts. In <inline-formula id="IE74"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext></mml:mrow></mml:math></inline-formula>, all occurrences of a <italic toggle="yes">w</italic>-mer are stored consecutively in some arbitrary order such that <inline-formula id="IE75"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mtext>PROF</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> contains the first occurrence of <italic toggle="yes">ω<sub>i</sub></italic> and <inline-formula id="IE76"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:mtext>OCC</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mtext>PROF</mml:mtext><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> the last. It may be accessed by using a ranking function to get position <italic toggle="yes">i</italic> in <inline-formula id="IE77"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mtext>PROF</mml:mtext></mml:mrow></mml:math></inline-formula>. In case a <italic toggle="yes">w</italic>-mer falls into the <inline-formula id="IE78"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>-length label overlap of two consecutive vertices <inline-formula id="IE79"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mi>u</mml:mi><mml:mo>→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math></inline-formula>, it is counted only once and only its occurrence in <italic toggle="yes">v</italic> is stored. An example of the index and its use can be found in <xref rid="btab077-F1" ref-type="fig">Figure 1</xref>.</p>
      </sec>
      <sec>
        <title>2.5.2 Seed detection step</title>
        <p>The index is used to look up all <italic toggle="yes">w</italic>-mers occurring in <italic toggle="yes">q</italic>. All matches are checked whether they fulfill the quorum requirement. Consecutive matches may be merged into a single interval location. A match is stored in a list directly linked to the vertex whose sequence it was found in. This allows a quick access to the match if needed during seed extension. Inside the list, matches are ordered by increasing starting offset in the vertex label. Match order is used to terminate a list iteration as soon as it is clear that a demanded match cannot be part of a list anymore, which leads to an additional speed gain.</p>
      </sec>
      <sec>
        <title>2.5.3 Seed extension step</title>
        <p>Each match represents an interval location used as seed for an ungapped extension. The extension is performed according to an <italic toggle="yes">X</italic>-drop algorithm as used in BLAST along <italic toggle="yes">q</italic> and all truncated paths of <italic toggle="yes">G</italic> starting at an initial interval location (<italic toggle="yes">v</italic>, <italic toggle="yes">b</italic>, <italic toggle="yes">e</italic>). The paths are generated by a depth-first search traversal through <italic toggle="yes">G</italic> outgoing from vertex <italic toggle="yes">v</italic>. The exploration of a path stops as soon as either the current extension’s score drops below <italic toggle="yes">X</italic> or the quorum requirement is no longer fulfilled. Our experience shows that the exhaustive processing of all existing truncated paths starting from <italic toggle="yes">v</italic> through <italic toggle="yes">G</italic> is possible without a notable slowdown of the algorithm most of the time even though the number of paths may be very large. However, an iteration over all truncated paths can become infeasible if <italic toggle="yes">G</italic> has some dense regions consisting of vertices with short labels and high degrees, producing truncated paths with highly similar sequences. If these sequences are similar to the query <italic toggle="yes">q</italic>, the <italic toggle="yes">X</italic>-drop criterion does not suffice to terminate path explorations leading to suboptimal alignments within an acceptable time frame. Therefore, we introduced a threshold that limits the number of vertices that can be visited during the extension of a seed.</p>
      </sec>
      <sec>
        <title>2.5.4 Gapped recalculation step</title>
        <p>The result of the ungapped extension is a set of path locations consisting of a few biologically meaningful and many more spurious hits. Statistical significance criteria, described in Section 2.6, are used to rank the hits and separate both kinds. The most significant alignments are recalculated using standard gapped alignment with banded dynamic programming. The bandwidth is chosen according to the quality of the alignment. The final alignments are reported, together with statistics for gapped alignments.</p>
      </sec>
    </sec>
    <sec>
      <title>2.6 Alignment statistics on a pangenome graph</title>
      <p>In classical pairwise (linear) sequence comparison, an extensive statistical theory exists, sometimes referred to as Karlin–Altschul theory (<xref rid="btab077-B4" ref-type="bibr">Karlin and Altschul, 1990</xref>), but subsequently extended, refined and made practical by many others (e.g. <xref rid="btab077-B35" ref-type="bibr">Pearson, 1998</xref>; <xref rid="btab077-B45" ref-type="bibr">Waterman and Vingron, 1994</xref>). No statistical theory currently exists for sequence queries against (graphical) pangenomes, so we provide a baseline here.</p>
      <p>A key question is as follows: Given a score value <italic toggle="yes">s</italic>, how many hits <italic toggle="yes">H<sub>s</sub></italic> of a random query sequence of length <italic toggle="yes">n</italic> against the given reference (genome or pangenome) of size <italic toggle="yes">m</italic> are observed whose score reach or exceed <italic toggle="yes">s</italic>? The expected value <inline-formula id="IE80"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is called the <italic toggle="yes">E-value</italic> of an observed score <italic toggle="yes">s</italic>. Let <italic toggle="yes">S</italic> be the score of the best hit. Then we may observe the event <inline-formula id="IE81"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:mi>S</mml:mi><mml:mo>≥</mml:mo><mml:mi>s</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> that is equivalent to <inline-formula id="IE82"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> (as one implies the other), and the probability <inline-formula id="IE83"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">P</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:mo>≥</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">P</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> of the event that there exists at least one hit with score reaching <italic toggle="yes">s</italic> is called the <italic toggle="yes">p-value</italic> of an observed score <italic toggle="yes">s</italic>. If <italic toggle="yes">E<sub>s</sub></italic> is small (say <inline-formula id="IE84"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mo>≤</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>) by Poisson approximation and first-order approximation of the exponential function, then we have 
<disp-formula id="E4"><mml:math id="M4" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="double-struck">P</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mrow><mml:mi>H</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">]</mml:mo><mml:mo>≈</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mtext>exp</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>and we need not distinguish in practice between E-value and p-value. We summarize an approximate version of the classical Karlin–Altschul statistics for pairwise sequence alignment and then discuss our proposal about how to generalize the theory for query-to-pangenome alignment.</p>
      <sec>
        <title>2.6.1 Summary of approximate Karlin–Altschul statistics</title>
        <p>Comparing the expected numbers of hits <inline-formula id="IE85"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:math></inline-formula> with increasing scores <inline-formula id="IE86"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo>…</mml:mo></mml:mrow></mml:math></inline-formula>, when already <italic toggle="yes">E<sub>s</sub></italic> is small, one observes that <inline-formula id="IE87"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>≈</mml:mo><mml:msup><mml:mrow><mml:mo>μ</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for some factor <inline-formula id="IE88"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mrow><mml:mn>0</mml:mn><mml:mo>&lt;</mml:mo><mml:mo>μ</mml:mo><mml:mo>&lt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, mostly independent of <italic toggle="yes">s</italic>, as long as <italic toggle="yes">s</italic> is large enough. Factor <italic toggle="yes">μ</italic> is typically written as <inline-formula id="IE89"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mo>λ</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> with some <inline-formula id="IE90"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. This holds if the average score when comparing two single nucleotides is negative; otherwise, there exist arbitrarily long high-scoring matches. If we increase the length <italic toggle="yes">n</italic> of the query or length <italic toggle="yes">m</italic> of the reference, we provide more possibilities for a hit, and the expected number of such hits increases linearly with both <italic toggle="yes">n</italic> and <italic toggle="yes">m</italic>. This leads to 
<disp-formula id="E5"><label>(1)</label><mml:math id="M5" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:mi mathvariant="italic">Kmn</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">e</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mo>λ</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <italic toggle="yes">K </italic>&gt;<italic toggle="yes"> </italic>0 and <inline-formula id="IE91"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> are constants, <italic toggle="yes">n</italic> is the query length and <italic toggle="yes">m</italic> is the reference genome length. Note that this approximation is only valid for the extreme tail of the distribution (large <italic toggle="yes">s</italic>, small <inline-formula id="IE92"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>). The functional form of (1) has been empirically shown to be very robust, valid for ungapped and gapped alignments and even when considering compositional bias (difference in GC content) between query and reference, or when considering a fixed query against a random reference (<xref rid="btab077-B46" ref-type="bibr">Wolfsheimer <italic toggle="yes">et al.</italic>, 2011</xref>). Constants <italic toggle="yes">K</italic> and <italic toggle="yes">λ</italic> depend on the scoring scheme, including the gap costs for gapped alignment. In practice, <italic toggle="yes">λ</italic> must be determined by sampling and simulation (<xref rid="btab077-B5" ref-type="bibr">Altschul <italic toggle="yes">et al.</italic>, 2001</xref>; <xref rid="btab077-B46" ref-type="bibr">Wolfsheimer <italic toggle="yes">et al.</italic>, 2011</xref>).</p>
      </sec>
      <sec>
        <title>2.6.2 Statistics for pangenome alignment</title>
        <p>We hypothesize that a relation as in <xref rid="E5" ref-type="disp-formula">Equation (1)</xref> can be observed when considering the top score of a random query aligned against a pangenome, if <italic toggle="yes">s</italic> is sufficiently large such that hits reaching score <italic toggle="yes">s</italic> are rare. We further hypothesize that such a relation holds for both ungapped high-scoring pairs after seed extension and for final gapped alignments, albeit with different values of <inline-formula id="IE93"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">K </italic>&gt;<italic toggle="yes"> </italic>0. However, the dependency of <italic toggle="yes">λ</italic> and <italic toggle="yes">K</italic> on sequence relatedness and diversity within a pangenome may be complex, and it is out of scope of this work to investigate the details. Instead, we investigate whether indeed there holds an affine–linear relationship <inline-formula id="IE94"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:mi>C</mml:mi><mml:mo>−</mml:mo><mml:mo>λ</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> with <inline-formula id="IE95"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mtext>log</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">Kmn</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></inline-formula> for fixed query length <italic toggle="yes">n</italic> and a pangenome graph of size <italic toggle="yes">m</italic>.</p>
      </sec>
      <sec>
        <title>2.6.3 Parameter estimation by importance sampling</title>
        <p>To obtain a good estimate of <inline-formula id="IE96"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE97"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></inline-formula>, we need good estimates of small probabilities <italic toggle="yes">p<sub>s</sub></italic> for large <italic toggle="yes">s</italic>. Using random sequences, large <italic toggle="yes">s</italic> with small <inline-formula id="IE98"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> are by definition rare, so too many samples would be needed for accurate estimates. Hence, we only use this ‘naive’ random sampling strategy to obtain an initial estimate of <italic toggle="yes">C</italic> and <italic toggle="yes">λ</italic> and then resort to importance sampling, using a Metropolis–Hastings Markov Chain Monte Carlo strategy similar to the one described by <xref rid="btab077-B46" ref-type="bibr">Wolfsheimer <italic toggle="yes">et al.</italic> (2011)</xref>.</p>
        <p>In brief, let <inline-formula id="IE99"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>π</mml:mo></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="double-struck">P</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> be the unknown score distribution on integers <italic toggle="yes">s</italic>. We construct a Markov chain in such a way that the probability to sample a random sequence with score <italic toggle="yes">s</italic> is exponentially biased toward higher scores, <inline-formula id="IE100"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>π</mml:mo></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mo> </mml:mo><mml:mtext>exp</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>·</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mi>Z</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE101"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>&lt;</mml:mo><mml:mo>λ</mml:mo></mml:mrow></mml:math></inline-formula> should slightly underestimate the true <italic toggle="yes">λ</italic> and can be derived from the initial naive sampling step, and <italic toggle="yes">Z</italic> is the appropriate (unknown) normalization constant such that <inline-formula id="IE102"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mi>s</mml:mi></mml:munder><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. To avoid computing <italic toggle="yes">Z</italic> explicitly, we use the Metropolis–Hastings method: Given a current DNA sequence <italic toggle="yes">x</italic>, a new candidate sequence <italic toggle="yes">y</italic> is proposed from a neighborhood of <italic toggle="yes">x</italic> (see <xref rid="btab077-B46" ref-type="bibr">Wolfsheimer <italic toggle="yes">et al.</italic>, 2011</xref> for the precise definition of the neighborhood). Roughly, a single nucleotide can be inserted, deleted or substituted at any position, deleting or inserting a nucleotide at the left or right end to keep the sequence length <italic toggle="yes">n</italic> constant. Thus, the edit distance between <italic toggle="yes">x</italic> and the new proposal <italic toggle="yes">y</italic> is at most 2. This creates a Markov chain where, in equilibrium, each sequence is equally probable, similarly to the naive simulation, where each nucleotide is drawn independently from a uniform distribution. Now, to bias the samples toward higher scores, the scores <italic toggle="yes">s<sub>x</sub></italic> and <italic toggle="yes">s<sub>y</sub></italic> of <italic toggle="yes">x</italic> and proposal <italic toggle="yes">y</italic>, respectively, are compared. We accept <italic toggle="yes">y</italic> with probability <inline-formula id="IE103"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mo>π</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>y</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mo>π</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo><mml:mo>=</mml:mo><mml:mi>min</mml:mi><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>exp</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>y</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>x</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, i.e. a score increase is always accepted, and a decrease only with a certain probability. When a proposal is rejected, <italic toggle="yes">x</italic> stays the current sequence and another proposal is generated. A score sample is drawn after a large number of accepts that allows the query sequence to change considerably in comparison to the previous sample. Typically, <inline-formula id="IE104"><mml:math id="IM101" display="inline" overflow="scroll"><mml:mrow><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> accepts suffice for a query of length <italic toggle="yes">n</italic>. The first few samples are discarded to allow the Markov chain to reach equilibrium. Since the defined chain is rapidly mixing (there exist short paths from every sequence to every other sequence), we found it sufficient to discard the first five samples.</p>
        <p>The procedure yields uncorrelated score samples, which stem from the biased distribution <inline-formula id="IE105"><mml:math id="IM102" display="inline" overflow="scroll"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Let <italic toggle="yes">R<sub>s</sub></italic> be the absolute number of times that score <italic toggle="yes">s</italic> was sampled, and let <inline-formula id="IE106"><mml:math id="IM103" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo>≥</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mo> </mml:mo><mml:mtext>exp</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>·</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Then <italic toggle="yes">λ</italic> can be estimated by fitting a line to points <inline-formula id="IE107"><mml:math id="IM104" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in an interval of <italic toggle="yes">s</italic> where the counts <italic toggle="yes">R<sub>s</sub></italic> are consistently high, say <inline-formula id="IE108"><mml:math id="IM105" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math></inline-formula>. Then, <italic toggle="yes">C</italic> is estimated from the 10% of highest scores in the initial naive sampling step.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>We implemented the algorithm described in Section 2.5 in C++ using Bifrost (<xref rid="btab077-B17" ref-type="bibr">Holley and Melsted, 2020</xref>) as the underlying realization of a compacted colored de Bruijn graph. Among several other implementations (e.g. <xref rid="btab077-B3" ref-type="bibr">Almodaresi <italic toggle="yes">et al.</italic>, 2017</xref>; <xref rid="btab077-B9" ref-type="bibr">Chikhi <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab077-B18" ref-type="bibr">Holley <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab077-B19" ref-type="bibr">Iqbal <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btab077-B31" ref-type="bibr">Muggli <italic toggle="yes">et al.</italic>, 2017</xref>), we chose Bifrost since it is an efficient, easy-to-use implementation, allows the usage of assembled and raw sequencing data and provides the possibility to assign any kind of data to vertices of the graph. Our implementation called PLAST<xref rid="btab077-FN1" ref-type="fn"><sup>1</sup></xref> (‘Pangenome Local Alignment Search Tool’) is available from <ext-link xlink:href="https://gitlab.ub.uni-bielefeld.de/gi/plast" ext-link-type="uri">https://gitlab.ub.uni-bielefeld.de/gi/plast</ext-link>. We present results of our statistical parameter estimation, followed by a performance analysis of our method. In particular, we show the advantage in runtime, memory usage and result aggregation when searching local alignments inside a pangenome with our method compared to a conventional search and analysis using other BLAST-like software tools. Afterwards, we present a more advanced use case and show that our method scales even to human data. Unless stated differently, all graphs have been built for a <italic toggle="yes">k</italic>-mer length of 31 (Bifrost default), and searches were performed using default parameters. To obtain statistical parameters, we used a combination of initial naive sampling followed by importance sampling, as described in Section 2.6.</p>
    <sec>
      <title>3.1 Statistical parameter estimation</title>
      <p>We tested the hypothesis from Section 2.6 that <inline-formula id="IE109"><mml:math id="IM106" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:mi>C</mml:mi><mml:mo>−</mml:mo><mml:mo>λ</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> for constants <inline-formula id="IE110"><mml:math id="IM107" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE111"><mml:math id="IM108" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> for both ungapped and gapped alignments. After initial confirming results on simulated pangenomes (not shown), we considered a real pangenome of 220 <italic toggle="yes">Salmonella enterica</italic> genomes of the same lineage (Para C) taken from <xref rid="btab077-B48" ref-type="bibr">Zhou <italic toggle="yes">et al.</italic> (2018)</xref>. Naive simulation was performed with one million random DNA sequences of length <italic toggle="yes">n </italic>=<italic toggle="yes"> </italic>200, yielding the empirical complementary cumulative distribution function (ccdf) of the best hit’s score for each query for both the gapped and ungapped case. A least-squares fit of affine linear functions in the distribution’s tail, considering logarithmic cumulative relative frequencies between <inline-formula id="IE112"><mml:math id="IM109" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE113"><mml:math id="IM110" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, yielded initial estimates of <italic toggle="yes">C </italic>=<italic toggle="yes"> </italic>17.45 and <inline-formula id="IE114"><mml:math id="IM111" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>=</mml:mo><mml:mn>1.085</mml:mn></mml:mrow></mml:math></inline-formula> for ungapped alignments and <italic toggle="yes">C </italic>=<italic toggle="yes"> </italic>14.81 and <inline-formula id="IE115"><mml:math id="IM112" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>=</mml:mo><mml:mn>0.852</mml:mn></mml:mrow></mml:math></inline-formula> for the final gapped alignments (see <xref rid="btab077-F2" ref-type="fig">Fig. 2</xref>). As expected, <inline-formula id="IE116"><mml:math id="IM113" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mrow><mml:mtext>gapped</mml:mtext></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mrow><mml:mtext>ungapped</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, as gaps provide more freedom to achieve a higher score with the same query length. The affine relationship cannot hold for much higher p-values because our approximation assumes small <inline-formula id="IE117"><mml:math id="IM114" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, and we also cannot make a statement for much lower p-values with ‘only’ 10<sup>6</sup> simulations.</p>
      <fig position="float" id="btab077-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>Results of naive and importance sampling. <bold>Top:</bold> Logarithmic plot of p-values (complementary cumulative distribution function) of highest ungapped and gapped alignment scores for random queries (without color or quorum constraints) against a pangenome of 220 <italic toggle="yes">Salmonella enterica</italic> genomes. Naive simulation with 10<sup>6</sup> samples yields accurate estimates for p-values in the range between <inline-formula id="IE118"><mml:math id="IM115" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE119"><mml:math id="IM116" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Importance sampling enables a better view of the rare-event tail. For p-values <inline-formula id="IE120"><mml:math id="IM117" display="inline" overflow="scroll"><mml:mrow><mml:mo>≤</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, the hypothesis of an affine dependency holds with values <inline-formula id="IE121"><mml:math id="IM118" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>≈</mml:mo><mml:mn>20.78</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE122"><mml:math id="IM119" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>≈</mml:mo><mml:mn>1.136</mml:mn></mml:mrow></mml:math></inline-formula> for ungapped alignments and <inline-formula id="IE123"><mml:math id="IM120" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>≈</mml:mo><mml:mn>16.11</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE124"><mml:math id="IM121" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>≈</mml:mo><mml:mn>0.898</mml:mn></mml:mrow></mml:math></inline-formula> for gapped alignments, estimated from importance sampling. <bold>Bottom:</bold> Histograms of (normalized) sample counts per score value for ungapped and gapped alignments, using naive sampling and importance sampling. Importance sampling gives access to a broader interval of scores in the rare-event tails</p>
        </caption>
        <graphic xlink:href="btab077f2" position="float"/>
      </fig>
      <p>To gain access to the rare-event tail, we performed importance sampling as described above. Per sampled sequence and score, we need to evaluate <inline-formula id="IE125"><mml:math id="IM122" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo>α</mml:mo></mml:mrow></mml:math></inline-formula> sequences, where <italic toggle="yes">α</italic> is the average acceptance rate, which we typically find to be around 0.46 to 0.75, which amounts to approximately <inline-formula id="IE126"><mml:math id="IM123" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mi>n</mml:mi><mml:mo>/</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> evaluated sequences per drawn sample. Thus, importance sampling introduces a 250-fold overhead over naive sampling for <italic toggle="yes">n </italic>=<italic toggle="yes"> </italic>200. However, it allows us to sample from high scores that are unobtainable by naive sampling, even if billions of samples were used, yielding much higher efficiency by several orders of magnitude (cf. importance sampling tails in <xref rid="btab077-F2" ref-type="fig">Fig. 2</xref>). We obtain further refined estimates of <italic toggle="yes">λ</italic> and <italic toggle="yes">C</italic> for both ungapped and gapped alignments. As expected, using weight factors of <inline-formula id="IE127"><mml:math id="IM124" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1.05</mml:mn></mml:mrow></mml:math></inline-formula> for ungapped and <inline-formula id="IE128"><mml:math id="IM125" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>λ</mml:mo></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.852</mml:mn></mml:mrow></mml:math></inline-formula> for gapped that are slightly smaller than the ‘true’ <inline-formula id="IE129"><mml:math id="IM126" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>=</mml:mo><mml:mn>1.136</mml:mn></mml:mrow></mml:math></inline-formula> for ungapped and <inline-formula id="IE130"><mml:math id="IM127" display="inline" overflow="scroll"><mml:mrow><mml:mo>λ</mml:mo><mml:mo>=</mml:mo><mml:mn>0.898</mml:mn></mml:mrow></mml:math></inline-formula> for gapped, we observe an almost flat and slowly decreasing histogram of score counts (<xref rid="btab077-F2" ref-type="fig">Fig. 2</xref>) and thus sample from a broad interval of scores.</p>
    </sec>
    <sec>
      <title>3.2 Comparison to other tools</title>
      <p>We evaluated our approach by comparing our implementation against MMseqs2 (as of January 8, 2020), blastn (2.6.0+), BLAT (36×4) and UBLAST (11.0.667). The tools DIAMOND, SWORD and GHOSTZ do not support DNA to DNA alignment. RAPSearch2 was not possible to install due to a reported, but unresolved issue. LAST is known to run very slow on highly redundant datasets—index building was terminated after 10 days. BLAT was designed to search genomes (represented as target databases) for query sequences. It was only possible to run the tool for 750 genomes at once. Runs for larger pangenome sizes had to be split into separate program calls. Results and runtimes were aggregated. Similarly, UBLAST’s freely available 32-bit version has an upper database size limit such that pangenomes consisting of more than 100 genomes had to be distributed on multiple databases.</p>
      <p>For the comparison, we downloaded 5 000 randomly selected <italic toggle="yes">Salmonella Typhimurium</italic> assemblies from a total of 19 237 that were annotated as serovar ‘Typhimurium’ from EnteroBase (<xref rid="btab077-B2" ref-type="bibr">Alikhan <italic toggle="yes">et al.</italic>, 2018</xref>). As queries we chose 100 random substrings of length 1 000 from the <italic toggle="yes">Salmonella</italic> reference genome assembly (RefSeq assembly accession GCF_000195995.1). We obtained queries with an average percentual identity of about 86.9% (SD 31.1) per query and genome where 55 953 query genome combinations without any alignment were considered with an identity of zero.</p>
      <p>If possible, tools were run with the same scores for match, mismatch, gaps and the same <italic toggle="yes">X</italic>-drop value. Additionally, we set the maximum number of reported results high enough to get all existing results. This was necessary, because all other tools do not compare their results internally and would otherwise report only the best result for each genome separately, hiding all further findings. For all remaining parameters, default values were used. Concrete program calls are documented at <ext-link xlink:href="https://gitlab.ub.uni-bielefeld.de/gi/plast" ext-link-type="uri">https://gitlab.ub.uni-bielefeld.de/gi/plast</ext-link>. Calculations were performed single threaded on a virtual machine with 28 cores and 256 GB of RAM.</p>
      <p>To compare the results, we scanned the output of each tool and identified corresponding alignments of PLAST and BLAST. In case of PLAST, this identification was possible using the color sets that are part of the program’s output for each alignment as explained in Section 2.4. Two results are considered <italic toggle="yes">matching</italic> if they overlap by at least 90% of the shorter alignment with respect to the query sequence. We call an alignment <italic toggle="yes">unique</italic> if it does not match any alignment of another tool. The comparison is shown in <xref rid="btab077-T1" ref-type="table">Table 1</xref>. We see that PLAST reports the lowest total number of results. This is due to the fact that one alignment of PLAST may correspond to several genomes of the pangenome. All other tools report such alignments separately, and an additional post-processing step would be required to merge them. UBLAST reports by far the highest number of alignments. Thus, it seems to be most sensitive in our experiment. Apart from UBLAST, the number of results that could be found by some tool but not PLAST is below 0.03% (columns ‘Tool\PLAST’ and ‘BLAST\Tool’, first row). The percentage of results unique to PLAST varies between ∼4% and ∼6% among the tools. However, only 178 PLAST alignments (2.4%) were unique with respect to <italic toggle="yes">all</italic> other tools. Their score was low (mean 18.5 and maximum 25) and they were short (mean length 28 bp and maximum length 112 bp). They are a result of the different statistical parameters used by PLAST in comparison to other tools. As explained in Section 1, these tools do not consider a pangenomic use case where all sequences in the database are highly similar. Thus, they overestimate the chance for a random hit. Using the same statistical parameters as BLAST, all 178 results are filtered out by PLAST due to the E-value threshold. We observed 306 PLAST alignments (4.0%) that were unique with respect to at least one other tool but at the same time found by at least one other. 56 of them had a score higher than 25 (maximum 678) or were longer than 112 bp (maximum 999 bp). Generally, we found that PLAST was able to find alignments with even very low sequence identity values of up to 58%, which is comparable to BLAST (63%) in this setting.</p>
      <table-wrap position="float" id="btab077-T1">
        <label>Table 1.</label>
        <caption>
          <p>Comparison of PLAST to other alignment tools</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="right" span="1"/>
            <col valign="top" align="right" span="1"/>
            <col valign="top" align="right" span="1"/>
            <col valign="top" align="right" span="1"/>
            <col valign="top" align="right" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Tool</th>
              <th rowspan="1" colspan="1">Results</th>
              <th rowspan="1" colspan="1">Tool\ PLAST</th>
              <th rowspan="1" colspan="1">PLAST\ Tool</th>
              <th rowspan="1" colspan="1">Tool\ BLAST</th>
              <th rowspan="1" colspan="1">BLAST\ Tool</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">PLAST</td>
              <td rowspan="1" colspan="1">7 565</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">357</td>
              <td rowspan="1" colspan="1">290</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">4.72 %</td>
              <td rowspan="1" colspan="1">0.02 %</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">BLAST</td>
              <td rowspan="1" colspan="1">1 246  221</td>
              <td rowspan="1" colspan="1">290</td>
              <td rowspan="1" colspan="1">357</td>
              <td rowspan="1" colspan="1">–</td>
              <td rowspan="1" colspan="1">–</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">0.02 %</td>
              <td rowspan="1" colspan="1">4.72 %</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">BLAT</td>
              <td rowspan="1" colspan="1">457 089</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">456</td>
              <td rowspan="1" colspan="1">508</td>
              <td rowspan="1" colspan="1">49 798</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">0.00 %</td>
              <td rowspan="1" colspan="1">6.03 %</td>
              <td rowspan="1" colspan="1">0.11 %</td>
              <td rowspan="1" colspan="1">4.00 %</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">MMseqs2</td>
              <td rowspan="1" colspan="1">695 792</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">322</td>
              <td rowspan="1" colspan="1">800</td>
              <td rowspan="1" colspan="1">21 022</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">0.00 %</td>
              <td rowspan="1" colspan="1">4.26 %</td>
              <td rowspan="1" colspan="1">0.12 %</td>
              <td rowspan="1" colspan="1">1.69 %</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">UBLAST</td>
              <td rowspan="1" colspan="1">4 881 509</td>
              <td rowspan="1" colspan="1">111 386</td>
              <td rowspan="1" colspan="1">272</td>
              <td rowspan="1" colspan="1">220 577</td>
              <td rowspan="1" colspan="1">5 459</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">2.28 %</td>
              <td rowspan="1" colspan="1">3.59 %</td>
              <td rowspan="1" colspan="1">4.52 %</td>
              <td rowspan="1" colspan="1">0.44 %</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic toggle="yes">Note:</italic> 100 random substrings of length 1 000 from the <italic toggle="yes">Salmonella</italic> reference genome assembly have been aligned to the ‘Typhimurium’ dataset. The columns list the tool names, absolute number of alignments and a comparison to PLAST and BLAST, where <italic toggle="yes">X</italic>\<italic toggle="yes">Y</italic> denotes the number of results of <italic toggle="yes">X</italic> that did not match any result of <italic toggle="yes">Y</italic>.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Next, we randomly selected subsamples from the 5 000 <italic toggle="yes">Salmonella</italic> genome assemblies to generate pangenomes of different sizes and compared the tools’ performance. Runtime and memory usage are shown in <xref rid="btab077-F3" ref-type="fig">Figure 3</xref>. Generally, we can see that most tools quickly lose speed with a growing pangenome size. Only MMseqs2 is able to keep a speed comparable to PLAST even for a pangenome of 5 000 individual genomes. However, its speed comes along with a memory requirement between ∼9 GB and 176 GB, which is far beyond that of all remaining tools.</p>
      <fig position="float" id="btab077-F3">
        <label>Fig. 3.</label>
        <caption>
          <p>Run time and memory usage comparison of all tools. The areas marked by a dashed rectangle in the plots on the right are shown in separate plots on the left. Values on less than 1 000 genomes have been averaged over five random subsamples each. The same legend applies to all plots</p>
        </caption>
        <graphic xlink:href="btab077f3" position="float"/>
      </fig>
      <p>All tools spend a large amount of memory for loading the highly redundant datasets and additional index data structures for fast alignment searches. Our graphical representation, in turn, allows a maximal exploitation of sequence similarity. Most parts of the graph represent sequences shared by many individual genomes that have to be stored only once. An alignment calculated for these parts is valid for all sharing genomes and does not have to be calculated multiple times. Thus, we observe a strongly reduced growth in run time and memory consumption for PLAST. Considering a pangenomic use case with constantly growing numbers of individual genomes, our approach will always be superior compared to conventional methods not making use of sequence similarity.</p>
      <p>When comparing PLAST’s run time for different quorum values and pangenome sizes, we can generally observe two driving forces (data not shown). On the one hand, the usage of a quorum has a beneficial influence on PLAST’s run time, because it allows to disregard parts of the graph harboring rarely appearing variations that may prune it considerably, especially if the overall diversity within the pangenome is high. At the same time, a quorum check is comparatively cheap if the graph has only a moderate total number of colors in it. On the other hand, for larger pangenomes, the usage of a high quorum becomes an increasing burden as color coverages have to be checked on every vertex using Bifrost’s API. The high degree of color compression generates a noticeable loss in speed in this case, which outstrips any gain by pruning from a certain pangenome size. In our experiments, it doubled computation time compared to a run without quorum for the largest pangenome size.</p>
      <p>To prevent this loss in speed, a first filter was implemented that, instead of only checking color presence, also considers the number of missing colors on a vertex and rejects it as soon as this number becomes too high during iteration. Other heuristics to speed up a quorum check are currently under development and discussed in Section 4.</p>
    </sec>
    <sec>
      <title>3.3 Pathogenicity islands in <italic toggle="yes">Vibrio cholerae</italic></title>
      <p>Pandemic strains in <italic toggle="yes">V. cholerae</italic> are known to contain the <italic toggle="yes">Vibrio Pathogenicity Island-1</italic> (VPI-1) that consists of a whole set of genes whose sequence and order inside the island can be diverse among different strains (<xref rid="btab077-B20" ref-type="bibr">Karaolis <italic toggle="yes">et al.</italic>, 2001</xref>).</p>
      <p>We examined a recent collection of 21 <italic toggle="yes">V. cholerae</italic> genomes, 7 of which have been obtained from clinical samples and are labelled ‘pandemic genomes’ (PG), and the remaining 14 have been obtained from non-clinical samples and are labelled ‘environmental genomes’ (EG) (<xref rid="btab077-B37" ref-type="bibr">Shapiro <italic toggle="yes">et al.</italic>, 2017</xref>, primary dataset). Some of the samples were available as assemblies, whereas others could be found only as raw read datasets. Nevertheless, one graph was built from all 21 samples, using the functionality of the underlying Bifrost library to construct a de Bruijn graph from both types of data: read data, which are automatically filtered for low coverage <italic toggle="yes">k</italic>-mers, as well as assembly data that are not filtered.</p>
      <p>As a proof of concept, we used PLAST to search VPI-1 inside the <italic toggle="yes">V. cholerae</italic> pangenome—once restricting the search to alignments with PG genomes to verify the existence of VPI-1 in PG, and once restricting the search to alignments with EG genomes to verify the absence of VPI-1 in EG. For the search, we set an E-value cutoff of 0.01, the maximum number of alignments to maximum, and used standard or automatically determined parameters otherwise.</p>
      <p>The order of VPI genes within PG genomes may be rearranged, and EG genomes might contain only small fragments of the island. Even so, we used the complete island sequence (accession no. AF325734 [<xref rid="btab077-B20" ref-type="bibr">Karaolis <italic toggle="yes">et al.</italic>, 2001</xref>]) of length 41 272 bp as query. PLAST’s ability to compute <italic toggle="yes">local</italic> alignments and to report many suboptimal findings, nevertheless, allowed an easy detection of each VPI gene separately. Furthermore, conserved gene orders could be detected by local alignments spanning larger fragments of the island. We observed 64 alignments in the PG search that were longer than 2 814 bp, i.e. three times the median length of coding sequences in VPI-1.</p>
      <p>For each coding sequence in VPI-1, we determined the maximum overlap by any local alignment. As can be seen in <xref rid="btab077-F4" ref-type="fig">Figure 4</xref>, when restricting the alignment to PG, all coding sequences are covered by alignments almost completely (row ‘PG’). In contrast, when restricting the alignment to EG, only very few (three of twenty-nine) coding sequences are covered by any alignment by 50% or more (row ‘EG’). We want to highlight here that the detection of such outstanding sequences that are contained in any of a whole group of genomes is possible by a single PLAST search. For further investigations, it would be possible to analyze the PLAST alignments for individual genomes, as exemplified in the remaining rows in <xref rid="btab077-F4" ref-type="fig">Figure 4</xref>, where the maximum overlap is determined among those parts of the alignments that are supported by the corresponding individual genomes.</p>
      <fig position="float" id="btab077-F4">
        <label>Fig. 4.</label>
        <caption>
          <p>PLAST search results for VPI-1 (<xref rid="btab077-B20" ref-type="bibr">Karaolis <italic toggle="yes">et al.</italic>, 2001</xref>) inside the <italic toggle="yes">Vibrio cholerae</italic> dataset (<xref rid="btab077-B37" ref-type="bibr">Shapiro <italic toggle="yes">et al.</italic>, 2017</xref>) with search color sets PG (left) and EG (right). Columns correspond to coding sequences in VPI-1 ordered as appearing in the query sequence. Rows ‘PG’ and ‘EG’ show the maximum overlap of any alignment with a coding sequence inside the pangenome using PG or EG as search color set, respectively. Rows ‘Bgd1’ to ‘O395’ and ‘12129’ to ‘GBE0658’ show the maximum coverage of a sample in any alignment overlapping a coding sequence using PG or EG as search color set, respectively</p>
        </caption>
        <graphic xlink:href="btab077f4" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.4 Beyond bacterial pangenomes</title>
      <p>To test PLAST’s applicability beyond bacterial pangenomes, we built a human pangenome using data from the 1000 Genomes (1KG) Project phase 3 (<xref rid="btab077-B1" ref-type="bibr">1000 Genomes Project Consortium <italic toggle="yes">et al.</italic>, 2015</xref>). We used bcftools consensus (<ext-link xlink:href="https://github.com/samtools/bcftools" ext-link-type="uri">https://github.com/samtools/bcftools</ext-link>) to generate chromosome-wise genomic sequences for chromosomes 2 and 15 of all 2 504 human individuals by inserting all reported variations into the GRCh37 reference sequence and built one graph (<italic toggle="yes">k </italic>=<italic toggle="yes"> </italic>63) for each of the two chromosomes. Instead of building a single graph from all human chromosomes at once, we had to perform this chromosome-wise approach as our system could not store all 2 504 human genome sequences including indexing structures at once for a comparative call of MMseqs2 (see below). Our method alone also scales to a whole human pangenome of this size.</p>
      <p>We exemplarily investigated a known polymorphism within the human pangenome. The single nucleotide polymorphism <italic toggle="yes">rs1426654</italic> is reported to influence skin pigmentation. Its reference allele indicates a light skin color that is common to a West Eurasian ancestry (<xref rid="btab077-B24" ref-type="bibr">Lamason <italic toggle="yes">et al.</italic>, 2005</xref>; <xref rid="btab077-B38" ref-type="bibr">Soejima and Koda, 2006</xref>). It is located on exon 3 of gene <italic toggle="yes">SLC24A5</italic> on chromosome 15. Searching the exon sequence from reference genome GRCh37 within the pangenome of chromosome 15 resulted in two full size alignments: a perfect match representing the reference allele, and one having a single mismatch representing the variant allele. Restricting our search to the European core genome (search set of all European samples and a quorum of 99%), we exclusively found the reference allele, confirming the results of the earlier studies.</p>
      <p>To evaluate PLAST’s performance on the human pangenome, we used the graph of chromosome 2 (<inline-formula id="IE138"><mml:math id="IM128" display="inline" overflow="scroll"><mml:mrow><mml:mo>≈</mml:mo><mml:mn>8</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the complete human genome) and searched 100 queries of length 1 000 randomly drawn from the human reference genome. For a comparison, we also ran MMseqs2, next to PLAST the fastest tool according to Section 3.2, on the same queries. PLAST took 317 s per query on average for the complete dataset using a maximum of 24 GB of memory and running on a single thread. Using only a subset of 1 000 chromosomes, MMseqs2 took 339 s per query on average using a maximum of 259 GB of memory and running on all available 28 cores. Furthermore, its input files (sequences and index structures) required 2.2 TB of disk space. PLAST’s input files occupied only 9.2 GB on disk in total. Both tools were run with default parameters.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>We presented a new BLAST-like method to find highest scoring local alignments between a query sequence and a pangenome represented as a colored de Bruijn graph. Unlike read mapping tools developed to find the best or possibly a few suboptimal mapping positions for potentially many query sequences in a short time, our aim is to find all such alignments with statistically significant score. Using a minimal seed length much smaller than <italic toggle="yes">k</italic> increases our detection sensitivity that goes far beyond the scope of a <italic toggle="yes">k</italic>-mer-based seeding approach, while alignment statistics enable us to filter the results for biologically meaningful ones.</p>
    <p>By working on a graph, our method is able to exploit the high degrees of sequence similarity within a pangenome. On the one hand, this allows to draw conclusions not only about the similarity toward a query sequence but also to compare the diversity of genomic sequences in the graph with regard to the query. On the other hand, it avoids the storage and processing of highly redundant information and lets the run time and memory usage of our algorithm scale sublinearly with respect to the number of genomes inside the pangenome. Both advantages make our approach superior in comparison to conventional local alignment search tools working on a database of multiple individual genomes, scaling linearly in the number of sequences and enabling us to handle even large eukaryotic pangenomes. We showed this in a comparison to other state-of-the-art BLAST-like alignment search tools and by using human data from the 1KG Project.</p>
    <p>Moreover, we introduced the usage of a quorum and a search color set that allow to limit searches on customized regions of the pangenome. This is extremely useful for answering specific research questions. Additionally, it avoids repeated construction of the graph for different database sequence sets, which is especially important if pangenomes are large and graph construction becomes prohibitively expensive. As a practical application of our algorithm, we demonstrated its usability on a classical pangenomic use case in Section 3.3.</p>
    <p>Although our implementation PLAST performs well in practice, it has to be seen as a proof of concept implementation so far. For example, no affine gap cost model has been incorporated yet and is subject to ongoing work. Also, many heuristics are strongly oriented on common techniques for plain sequences. We are convinced that further efforts on the development of heuristics exploiting the special conditions prevailing in a graphical pangenome may lead to even more efficient algorithms.</p>
    <p>Yet, quorum checks may become a time-determining factor if large pangenomes are considered and quorums are high. The reason is that Bifrost compresses color information within binary matrices for each vertex, and accessing this information requires a time consuming iteration over the matrix. Currently, we are working on ways to aggregate this information as a preprocessing step next to index building to avoid matrix iterations during the search. Aggregated quorum information could be stored for each vertex, e.g. by using five integers encoding the minimum quorum fulfilled on the vertex, the potentially higher quorum being fulfilled at its beginning and at the end and the sequence offsets at which this higher quorum breaks. A different idea would be to store the number of colors covering a <italic toggle="yes">k</italic>-mer separately for each <italic toggle="yes">k</italic>-mer using a single byte. The memory footprint for both ideas would be small especially in pangenomes of very closely related individual genomes.</p>
    <p>We established that, similarly to the statistical behavior of pairwise alignment, sequence-to-graph alignment p-values exhibit exponential tails, <inline-formula id="IE139"><mml:math id="IM129" display="inline" overflow="scroll"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>≈</mml:mo><mml:mi>C</mml:mi><mml:mo>−</mml:mo><mml:mo>λ</mml:mo><mml:mo>·</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> for constants <inline-formula id="IE140"><mml:math id="IM130" display="inline" overflow="scroll"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi><mml:mo>,</mml:mo><mml:mo>λ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. Still, many interesting open questions remain about these statistics. The calculation of precise statistical parameters for each pangenome graph is based on compute-intensive simulations so far. To benefit from existing simulations on similar graphs, instead of starting a new simulation for every pangenome graph, we would like to better understand how the statistical parameters change with graph properties and scores. While the dependency on gap scores has been explored in the past, nothing is known about how (and which) graph properties influence the parameters, and preliminary experiments show complex patterns, which we intend to investigate in future work.</p>
    <p>Furthermore, we would like to further explore the computational limits using our implementation. The here presented datasets were the largest we considered so far in terms of individual samples (Section 3.2) and the number of <italic toggle="yes">k</italic>-mers (Section 3.4).</p>
    <p>We also plan to further extend the concept of quorum and search color set. In particular, we would like to give more freedom to the user by allowing not only to focus on certain parts of the graph but also to explicitly exclude regions from analysis.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work is supported by the BMBF-funded de.NBI Cloud within the German Network for Bioinformatics Infrastructure (de.NBI) [031A537B, 031A533A, 031A538A, 031A533B, 031A535A, 031A537C, 031A534A and 031A532B]. It was funded in part by the European Union’s Horizon 2020 research and innovation program under the Marie Skłodowska-Curie agreement [872539] and the International DFG Research Training Group GRK 1906 to T.S.; and National Science and Engineering Council of Canada (NSERC) Discovery Grants (RGPIN-05952) and Michael Smith Foundation for Health Research (MSFHR) Scholar Award (SCH-2020-0370) to F.H. </p>
    <p><italic toggle="yes">Conflict of Interest:</italic> none declared.</p>
  </sec>
</body>
<back>
  <fn-group>
    <title>Footnotes</title>
    <fn id="btab077-FN1">
      <label>1</label>
      <p>Not to be confused with a software of the same name introduced in (<xref rid="btab077-B42" ref-type="bibr">Van Nguyen and Lavenier, 2009</xref>) parallelizing the conventional BLAST algorithm.</p>
    </fn>
  </fn-group>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btab077-B1">
      <mixed-citation publication-type="journal">1000 Genomes Project Consortium. (<year>2015</year>) <article-title>A global reference for human genetic variation</article-title>. <source>Nature</source>, <volume>526</volume>, <fpage>68</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">26432245</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alikhan</surname><given-names>N.-F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>A genomic overview of the population structure of <italic toggle="yes">Salmonella</italic></article-title>. <source>PLOS Genet</source>., <volume>14</volume>, <fpage>e1007261</fpage>.<pub-id pub-id-type="pmid">29621240</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B3">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Almodaresi</surname><given-names>F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <part-title>Rainbowfish: a succinct colored de Bruijn graph representation</part-title>. In <source>17th International Workshop on Algorithms in Bioinformatics (WABI 2017)</source>. <publisher-name>Schloss Dagstuhl-Leibniz-Zentrum für Informatik</publisher-name>, Article No. 18.</mixed-citation>
    </ref>
    <ref id="btab077-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Altschul</surname><given-names>S.F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>1990</year>) <article-title>Basic local alignment search tool</article-title>. <source>J. Mol. Biol</source>., <volume>215</volume>, <fpage>403</fpage>–<lpage>410</lpage>.<pub-id pub-id-type="pmid">2231712</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Altschul</surname><given-names>S.F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2001</year>) <article-title>The estimation of statistical parameters for local alignment score distributions</article-title>. <source>Nucleic Acids Res</source>., <volume>29</volume>, <fpage>351</fpage>–<lpage>361</lpage>.<pub-id pub-id-type="pmid">11139604</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Antipov</surname><given-names>D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>hybridSPAdes: an algorithm for hybrid assembly of short and long reads</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>1009</fpage>–<lpage>1015</lpage>.<pub-id pub-id-type="pmid">26589280</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Brandt</surname><given-names>D.Y.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Mapping bias overestimates reference allele frequencies at the HLA genes in the 1000 Genomes Project Phase I data</article-title>. <source>G3: Genes, Genomes, Genetics</source>, <volume>5</volume>, <fpage>931</fpage>–<lpage>941</lpage>.<pub-id pub-id-type="pmid">25787242</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Buchfink</surname><given-names>B.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Fast and sensitive protein alignment using DIAMOND</article-title>. <source>Nat. Methods</source>, <volume>12</volume>, <fpage>59</fpage>–<lpage>60</lpage>.<pub-id pub-id-type="pmid">25402007</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chikhi</surname><given-names>R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Compacting de Bruijn graphs from sequencing data quickly and in low memory</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>i201</fpage>–<lpage>i208</lpage>.<pub-id pub-id-type="pmid">27307618</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Degner</surname><given-names>J.F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) <article-title>Effect of read-mapping biases on detecting allele-specific expression from RNA-sequencing data</article-title>. <source>Bioinformatics</source>, <volume>25</volume>, <fpage>3207</fpage>–<lpage>3212</lpage>.<pub-id pub-id-type="pmid">19808877</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dilthey</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Improved genome inference in the MHC using a population reference graph</article-title>. <source>Nat. Genet</source>., <volume>47</volume>, <fpage>682</fpage>–<lpage>688</lpage>.<pub-id pub-id-type="pmid">25915597</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dilthey</surname><given-names>A.T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>High-accuracy HLA type inference from whole-genome sequencing data using population reference graphs</article-title>. <source>PLoS Comput. Biol</source>., <volume>12</volume>, <fpage>e1005151</fpage>.<pub-id pub-id-type="pmid">27792722</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edgar</surname><given-names>R.C.</given-names></string-name></person-group> (<year>2010</year>) <article-title>Search and clustering orders of magnitude faster than BLAST</article-title>. <source>Bioinformatics</source>, <volume>26</volume>, <fpage>2460</fpage>–<lpage>2461</lpage>.<pub-id pub-id-type="pmid">20709691</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edgar</surname><given-names>R.C.</given-names></string-name>, <string-name><surname>Batzoglou</surname><given-names>S.</given-names></string-name></person-group> (<year>2006</year>) <article-title>Multiple sequence alignment</article-title>. <source>Curr. Opin. Struct. Biol</source>., <volume>16</volume>, <fpage>368</fpage>–<lpage>373</lpage>.<pub-id pub-id-type="pmid">16679011</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frith</surname><given-names>M.C.</given-names></string-name>, <string-name><surname>Shrestha</surname><given-names>A.M.</given-names></string-name></person-group> (<year>2018</year>) <article-title>A simplified description of child tables for sequence similarity search</article-title>. <source>IEEE/ACM Trans. Comput. Biol. Bioinform</source>., <volume>15</volume>, <fpage>2067</fpage>–<lpage>2073</lpage>.<pub-id pub-id-type="pmid">29994365</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Garrison</surname><given-names>E.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>Variation graph toolkit improves read mapping by representing genetic variation in the reference</article-title>. <source>Nat. Biotechnol</source>., <volume>36</volume>, <fpage>875</fpage>–<lpage>879</lpage>.<pub-id pub-id-type="pmid">30125266</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Holley</surname><given-names>G.</given-names></string-name>, <string-name><surname>Melsted</surname><given-names>P.</given-names></string-name></person-group> (<year>2020</year>) <article-title>Bifrost: highly parallel construction and indexing of colored and compacted de Bruijn graphs</article-title>. <source>Genome Biol</source>., <volume>21</volume>, <fpage>1</fpage>–<lpage>20</lpage>.</mixed-citation>
    </ref>
    <ref id="btab077-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Holley</surname><given-names>G.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Bloom Filter Trie: an alignment-free and reference-free data structure for pan-genome storage</article-title>. <source>Algorithms Mol. Biol</source>., <volume>11</volume>, <fpage>3</fpage>.<pub-id pub-id-type="pmid">27087830</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Iqbal</surname><given-names>Z.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) <article-title>De novo assembly and genotyping of variants using colored de Bruijn graphs</article-title>. <source>Nat. Genet</source>., <volume>44</volume>, <fpage>226</fpage>–<lpage>232</lpage>.<pub-id pub-id-type="pmid">22231483</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Karaolis</surname><given-names>D.K.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2001</year>) <article-title>Comparison of <italic toggle="yes">Vibrio cholerae</italic> pathogenicity islands in sixth and seventh pandemic strains</article-title>. <source>Infect. Immun</source>., <volume>69</volume>, <fpage>1947</fpage>–<lpage>1952</lpage>.<pub-id pub-id-type="pmid">11179381</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Karlin</surname><given-names>S.</given-names></string-name>, <string-name><surname>Altschul</surname><given-names>S.F.</given-names></string-name></person-group> (<year>1990</year>) <article-title>Methods for assessing the statistical significance of molecular sequence features by using general scoring schemes</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>87</volume>, <fpage>2264</fpage>–<lpage>2268</lpage>.<pub-id pub-id-type="pmid">2315319</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kavya</surname><given-names>V.N.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>Sequence alignment on directed graphs</article-title>. <source>J. Comput. Biol</source>., <volume>26</volume>, <fpage>53</fpage>–<lpage>67</lpage>.<pub-id pub-id-type="pmid">30204489</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kent</surname><given-names>W.J.</given-names></string-name></person-group> (<year>2002</year>) <article-title>BLAT—the BLAST-like alignment tool</article-title>. <source>Genome Res</source>., <volume>12</volume>, <fpage>656</fpage>–<lpage>664</lpage>.<pub-id pub-id-type="pmid">11932250</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lamason</surname><given-names>R.L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2005</year>) <article-title>SLC24A5, a putative cation exchanger, affects pigmentation in zebrafish and humans</article-title>. <source>Science</source>, <volume>310</volume>, <fpage>1782</fpage>–<lpage>1786</lpage>.<pub-id pub-id-type="pmid">16357253</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2002</year>) <article-title>Multiple sequence alignment using partial order graphs</article-title>. <source>Bioinformatics</source>, <volume>18</volume>, <fpage>452</fpage>–<lpage>464</lpage>.<pub-id pub-id-type="pmid">11934745</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Limasset</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Read mapping on de Bruijn graphs</article-title>. <source>BMC Bioinformatics</source>, <volume>17</volume>, <fpage>237</fpage>.<pub-id pub-id-type="pmid">27306641</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luhmann</surname><given-names>N.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2021</year>). BlastFrost: fast querying of 100,000s of bacterial genomes in Bifrost graphs. <source>Genome Biol</source>., <volume>22</volume>, <fpage>30</fpage><pub-id pub-id-type="pmid">33430919</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marcus</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) <article-title>SplitMEM: a graphical algorithm for pan-genome analysis with suffix skips</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>3476</fpage>–<lpage>3483</lpage>.<pub-id pub-id-type="pmid">25398610</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Marschall</surname><given-names>T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Computational pan-genomics: status, promises and challenges</article-title>. <source>Brief. Bioinform</source>., <volume>19</volume>, <fpage>118</fpage>–<lpage>135</lpage>.</mixed-citation>
    </ref>
    <ref id="btab077-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Minkin</surname><given-names>I.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <article-title>TwoPaCo: an efficient algorithm to build the compacted de Bruijn graph from many complete genomes</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>4024</fpage>–<lpage>4032</lpage>.<pub-id pub-id-type="pmid">27659452</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Muggli</surname><given-names>M.D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <article-title>Succinct colored de Bruijn graphs</article-title>. <source>Bioinformatics</source>, <volume>33</volume>, <fpage>3181</fpage>–<lpage>3187</lpage>.<pub-id pub-id-type="pmid">28200001</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Myers</surname><given-names>E.W.</given-names></string-name>, <string-name><surname>Miller</surname><given-names>W.</given-names></string-name></person-group> (<year>1989</year>) <article-title>Approximate matching of regular expressions</article-title>. <source>Bull. Math. Biol</source>. <volume>51</volume>, <fpage>5</fpage>–<lpage>37</lpage>.<pub-id pub-id-type="pmid">2706401</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Navarro</surname><given-names>G.</given-names></string-name></person-group> (<year>2000</year>) <article-title>Improved approximate pattern matching on hypertext</article-title>. <source>Theor. Comput. Sci</source>., <volume>237</volume>, <fpage>455</fpage>–<lpage>463</lpage>.</mixed-citation>
    </ref>
    <ref id="btab077-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Notredame</surname><given-names>C.</given-names></string-name></person-group> (<year>2007</year>) <article-title>Recent evolutions of multiple sequence alignment algorithms</article-title>. <source>PLoS Comput. Biol</source>., <volume>3</volume>, <fpage>e123</fpage>.<pub-id pub-id-type="pmid">17784778</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pearson</surname><given-names>W.R.</given-names></string-name></person-group> (<year>1998</year>) <article-title>Empirical statistical estimates for sequence similarity searches</article-title>. <source>J. Mol. Biol</source>., <volume>276</volume>, <fpage>71</fpage>–<lpage>84</lpage>.<pub-id pub-id-type="pmid">9514730</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rautiainen</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>Bit-parallel sequence-to-graph alignment</article-title>. <source>Bioinformatics</source>, <volume>35</volume>, <fpage>3599</fpage>–<lpage>3607</lpage>.<pub-id pub-id-type="pmid">30851095</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shapiro</surname><given-names>B.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <article-title>Origins of pandemic <italic toggle="yes">Vibrio cholerae</italic> from environmental gene pools</article-title>. <source>Nat. Microbiol</source>., <volume>2</volume>, <fpage>16240</fpage>.</mixed-citation>
    </ref>
    <ref id="btab077-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Soejima</surname><given-names>M.</given-names></string-name>, <string-name><surname>Koda</surname><given-names>Y.</given-names></string-name></person-group> (<year>2006</year>) <article-title>Population differences of two coding SNPs in pigmentation-related genes SLC24A5 and SLC45A2</article-title>. <source>Int. J. Legal Med</source>., <volume>121</volume>, <fpage>36</fpage>–<lpage>39</lpage>.<pub-id pub-id-type="pmid">16847698</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steinegger</surname><given-names>M.</given-names></string-name>, <string-name><surname>Söding</surname><given-names>J.</given-names></string-name></person-group> (<year>2017</year>) <article-title>MMseqs2 enables sensitive protein sequence searching for the analysis of massive datasets</article-title>. <source>Nat. Biotechnol</source>., <volume>35</volume>, <fpage>1026</fpage>–<lpage>1028</lpage>.<pub-id pub-id-type="pmid">29035372</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stephens</surname><given-names>Z.D.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Big data: astronomical or genomical?</article-title>  <source>PLoS Biol</source>., <volume>13</volume>, <fpage>e1002195</fpage>.<pub-id pub-id-type="pmid">26151137</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Suzuki</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Faster sequence homology searches by clustering subsequences</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>1183</fpage>–<lpage>1190</lpage>.<pub-id pub-id-type="pmid">25432166</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B42">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Van Nguyen</surname><given-names>H.</given-names></string-name>, <string-name><surname>Lavenier</surname><given-names>D.</given-names></string-name></person-group> (<year>2009</year>) <article-title>Plast: parallel local alignment search tool for database comparison</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <fpage>329</fpage>.<pub-id pub-id-type="pmid">19821978</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B43">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vaser</surname><given-names>R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>SWORD—a highly efficient protein database search</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>i680</fpage>–<lpage>i684</lpage>.<pub-id pub-id-type="pmid">27587689</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vernikos</surname><given-names>G.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Ten years of pan-genome analyses</article-title>. <source>Curr. Opin. Microbiol</source>., <volume>23</volume>, <fpage>148</fpage>–<lpage>154</lpage>.<pub-id pub-id-type="pmid">25483351</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B45">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Waterman</surname><given-names>M.S.</given-names></string-name>, <string-name><surname>Vingron</surname><given-names>M.</given-names></string-name></person-group> (<year>1994</year>) <article-title>Rapid and accurate estimates of statistical significance for sequence data base searches</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>91</volume>, <fpage>4625</fpage>–<lpage>4628</lpage>.<pub-id pub-id-type="pmid">8197109</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wolfsheimer</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) <article-title>Accurate statistics for local sequence alignment with position-dependent scoring by rare-event sampling</article-title>. <source>BMC Bioinformatics</source>, <volume>12</volume>, <fpage>47</fpage>.<pub-id pub-id-type="pmid">21291566</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhao</surname><given-names>Y.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) <article-title>RAPSearch2: a fast and memory-efficient protein similarity search tool for next-generation sequencing data</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>125</fpage>–<lpage>126</lpage>.<pub-id pub-id-type="pmid">22039206</pub-id></mixed-citation>
    </ref>
    <ref id="btab077-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname><given-names>Z.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>GrapeTree: visualization of core genomic relationships among 100,000 bacterial pathogens</article-title>. <source>Genome Res</source>., <volume>28</volume>, <fpage>1395</fpage>–<lpage>1404</lpage>.<pub-id pub-id-type="pmid">30049790</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

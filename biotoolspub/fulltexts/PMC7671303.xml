<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">NAR Genom Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">NAR Genom Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">nargab</journal-id>
    <journal-title-group>
      <journal-title>NAR Genomics and Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2631-9268</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7671303</article-id>
    <article-id pub-id-type="doi">10.1093/nargab/lqaa063</article-id>
    <article-id pub-id-type="publisher-id">lqaa063</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00030</subject>
        <subject>AcademicSubjects/SCI00980</subject>
        <subject>AcademicSubjects/SCI01060</subject>
        <subject>AcademicSubjects/SCI01140</subject>
        <subject>AcademicSubjects/SCI01180</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Standard Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CasCollect: targeted assembly of CRISPR-associated operons from high-throughput sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-5938-2478</contrib-id>
        <name>
          <surname>Podlevsky</surname>
          <given-names>Joshua D</given-names>
        </name>
        <!--<email>jpodle@sandia.gov</email>-->
        <aff><institution>Molecular and Microbiology, Sandia National Laboratories</institution>, Albuquerque, NM 87185, <country country="US">USA</country></aff>
        <xref ref-type="corresp" rid="COR1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hudson</surname>
          <given-names>Corey M</given-names>
        </name>
        <aff><institution>Computational Biology and Biophysics, Sandia National Laboratories</institution>, Albuquerque, NM 87185, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Timlin</surname>
          <given-names>Jerilyn A</given-names>
        </name>
        <aff><institution>Computational Biology and Biophysics, Sandia National Laboratories</institution>, Albuquerque, NM 87185, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-2606-9562</contrib-id>
        <name>
          <surname>Williams</surname>
          <given-names>Kelly P</given-names>
        </name>
        <!--<email>kpwilli@sandia.gov</email>-->
        <aff><institution>Systems Biology, Sandia National Laboratories</institution>, Livermore, CA 94550, <country country="US">USA</country></aff>
        <xref ref-type="corresp" rid="COR2"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. Tel: +1 505 844 5174; Fax: +1 505 284 1323; Email: <email>jpodle@sandia.gov</email></corresp>
      <corresp id="COR2">Correspondence may also be addressed to Kelly P. Williams. Email: <email>kpwilli@sandia.gov</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-09-03">
      <day>03</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>03</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>2</volume>
    <issue>3</issue>
    <elocation-id>lqaa063</elocation-id>
    <history>
      <date date-type="received">
        <day>11</day>
        <month>3</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>20</day>
        <month>7</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>01</day>
        <month>9</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press on behalf of NAR Genomics and Bioinformatics.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="lqaa063.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>CRISPR arrays and CRISPR-associated (Cas) proteins comprise a widespread adaptive immune system in bacteria and archaea. These systems function as a defense against exogenous parasitic mobile genetic elements that include bacteriophages, plasmids and foreign nucleic acids. With the continuous spread of antibiotic resistance, knowledge of pathogen susceptibility to bacteriophage therapy is becoming more critical. Additionally, gene-editing applications would benefit from the discovery of new <italic>cas</italic> genes with favorable properties. While next-generation sequencing has produced staggering quantities of data, transitioning from raw sequencing reads to the identification of CRISPR/Cas systems has remained challenging. This is especially true for metagenomic data, which has the highest potential for identifying novel <italic>cas</italic> genes. We report a comprehensive computational pipeline, CasCollect, for the targeted assembly and annotation of <italic>cas</italic> genes and CRISPR arrays—even isolated arrays—from raw sequencing reads. Benchmarking our targeted assembly pipeline demonstrates significantly improved timing by almost two orders of magnitude compared with conventional assembly and annotation, while retaining the ability to detect CRISPR arrays and <italic>cas</italic> genes. CasCollect is a highly versatile pipeline and can be used for targeted assembly of any specialty gene set, reconfigurable for user provided Hidden Markov Models and/or reference nucleotide sequences.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Laboratory Directed Research and Development</institution>
            <institution-id institution-id-type="DOI">10.13039/100007000</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Honeywell International, Inc.</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>U.S. Department of Energy</institution>
            <institution-id institution-id-type="DOI">10.13039/100000015</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>DE-NA-0003525</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>Clustered regularly interspaced short palindromic repeats (CRISPR) arrays and the CRISPR associated (Cas) proteins constitute adaptive immune systems that bacteria and archaea use to defend against invading plasmids, bacteriophage viruses and other foreign DNAs or RNAs (<xref rid="B1" ref-type="bibr">1</xref>,<xref rid="B2" ref-type="bibr">2</xref>). The effector of a CRISPR/Cas immune system is a ribonucleoprotein (RNP) complex, composed of one or more catalytic Cas proteins and a CRISPR RNA that targets foreign nucleic acids for endonucleolytic cleavage. CRISPR/Cas systems are present in many bacteria and archaea and have been classified into two classes, six types and 22 subtypes based on the composition of <italic>cas</italic> genes within each system (<xref rid="B3" ref-type="bibr">3</xref>).</p>
    <p>The first CRISPR/Cas effector developed for biotechnology, remaining the focus for gene-editing applications, was the simple Class 2 type II CRISPR/Cas system. This system requires the CRISPR RNA, the <italic>trans</italic>-activating RNA, and the nucleolytic Cas9 protein for targeted DNA cleavage (<xref rid="B4" ref-type="bibr">4</xref>). The CRISPR and <italic>trans</italic>-activating RNA were further simplified into an engineered single guide RNA. However, this Cas9 system was developed from human pathogens and has been reported to invoke an immune response (<xref rid="B5" ref-type="bibr">5</xref>). Although Cas9 remains the most popular system for biotechnology applications, there is ongoing work to develop Class 2 type V CRISPR/Cas systems—that include Cas12 (Cpf1)—as well as searches for other new systems. Additionally, Class 2 type VI CRISPR/Cas systems that target RNA, Cas13 (C2c2), are of interest for transcriptional modification in-place-of gene-editing applications. The need for discovering CRISPR arrays and Cas proteins is furthered by multi-drug-resistant infections and the potential of bacteriophage therapeutics (<xref rid="B6" ref-type="bibr">6</xref>). Tools that improve the efficacy and speed of CRISPR/Cas discovery will be useful for evaluating whether a bacterial pathogen is susceptible to bacteriophage therapy.</p>
    <p>The discovery of novel CRISPR/Cas systems from non-pathogenic organisms is essential for identifying systems for therapeutic gene-editing, while rapid detection of these systems from pathogenic organisms is critical for applying the most appropriate and effective phage therapy. There have been progressive improvements in the identification and annotation of CRISPR/Cas system components from individual genomes and from previously assembled metagenomes (<xref rid="B7" ref-type="bibr">7–12</xref>) with an array of tools available (<xref rid="B13" ref-type="bibr">13–16</xref>). More recent identification of <italic>cas</italic> genes have employed Hidden Markov Models (HMM) and Position Specific Scoring Matrices (PSSM) that enable deep homology searches for novel members of known <italic>cas</italic> gene families (<xref rid="B8" ref-type="bibr">8–10</xref>). HMMs and PSSMs have been applied toward annotating well-defined and assembled bacterial and archaeal genomes. The rate of discovering CRISPR/Cas system components could be improved significantly by avoiding the complete assembly of the raw sequencing read datasets, instead identifying reads that match <italic>cas</italic> genes and/or CRISPR arrays and using these ‘seed’ reads to prime the targeted assembly of only the regions of the genome corresponding to CRISPR/Cas systems.</p>
    <p>Herein we report a software pipeline, CasCollect, for the targeted assembly and annotation of <italic>cas</italic> genes and CRISPR arrays from raw sequencing datasets. We demonstrate the utility of CasCollect with unassembled high-throughput sequencing reads from bacterial isolate genomes, simulated metagenome and available actual metagenome datasets. Evaluating CasCollect with a simulated metagenomic dataset, we successfully identified all known <italic>cas</italic> genes, accurately assembling and annotating the <italic>cas</italic> operons. Our CasCollect pipeline reduced the timing for <italic>cas</italic> genes identification and annotation from unassembled metagenomic sequencing data by almost two orders of magnitude compared with the complete assembly. As a case study of CasCollect for determining phage therapy potential, we successfully identified the CRISPR arrays and <italic>cas</italic> operons from publicly available patient data for 66 antibiotic resistant <italic>Pseudomonas aeruginosa</italic> clinical isolates—nearly all had only unassembled sequencing read data available. CasCollect is a versatile software tool for the identification and annotation of CRISPR arrays and <italic>cas</italic> operons from unassembled high-throughput sequencing datasets. The pipeline software is flexible, capable of the targeted assembly of other specialty gene sets when supplied with relevant HMM collections and/or reference DNA sequences.</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <sec id="SEC2-1">
      <title>Data sources</title>
      <p>The genomic and metagenomic datasets used in this study were downloaded from the NCBI downloaded from the Sequence Read Archive (SRA) at (<ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/sra">http://www.ncbi.nlm.nih.gov/sra</ext-link>). Isolate genome datasets were <italic>Escherichia coli</italic> KLY isolate (SRR1424625), <italic>P. aeruginosa</italic> VA-134 isolate (SRR2939129) and <italic>Streptococcus pyogenes</italic> M39 isolate (SRR5280756). For simulating a metagenomic dataset, these three isolates were combined with mouse sequencing data (SRR1752459) to increase sample complexity. For the metagenomic study, we used the following datasets for ground water, deep water biosphere (SRR10598175); Lake Redon in Central Pyrenees, Spain (ERR472738); Artic permafrost (SRR11195315); and peatland wetlands (SRR5823773). Unassembled read datasets of phage therapy candidates were for 66 antibiotic resistant <italic>P. aeruginosa</italic> isolates that are distributed by the CDC &amp; FDA Antibiotic Resistance Isolate Bank. All sequencing data were from Illumina sequencing platforms and downloaded as SRA files with Fastq files extracted by executing the SRA toolkit command fastq-dump with paired-end files split (<xref rid="B17" ref-type="bibr">17</xref>).</p>
    </sec>
    <sec id="SEC2-2">
      <title>CasCollect development and targeted gene assembly</title>
      <p>CasCollect was developed in Python and Perl languages with the pipeline publicly available for download under the terms of the GNU General Public License version 3 at <ext-link ext-link-type="uri" xlink:href="https://github.com/sandialabs/CasCollect">https://github.com/sandialabs/CasCollect</ext-link>. Installation requirements and documentation are provided in the download. A check script for dependencies will download and extract missing software. All tests reported for this work were performed on a system setup with 100 Intel Xeon CPUs at 2.40GHz and 2 Tb RAM. CasCollect was designed for a POSIX-compliant operating system that include Unix and Linux distributions. CasCollect dependencies are BBTools 38.84 (<ext-link ext-link-type="uri" xlink:href="https://jgi.doe.gov/data-and-tools/bbtools/">https://jgi.doe.gov/data-and-tools/bbtools/</ext-link>), Seqtk (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/seqtk">https://github.com/lh3/seqtk</ext-link>), FragGeneScanPlus (FGS+, <ext-link ext-link-type="uri" xlink:href="https://github.com/hallamlab/FragGeneScanPlus">https://github.com/hallamlab/FragGeneScanPlus</ext-link>), HMMER v3.3 (<ext-link ext-link-type="uri" xlink:href="http://hmmer.org/">http://hmmer.org/</ext-link>), VSEARCH (<ext-link ext-link-type="uri" xlink:href="https://github.com/torognes/vsearch">https://github.com/torognes/vsearch</ext-link>), SPAdes 3.14.1 (<ext-link ext-link-type="uri" xlink:href="http://cab.spbu.ru/software/spades/">http://cab.spbu.ru/software/spades/</ext-link>) and CRISPRCasFinder (<ext-link ext-link-type="uri" xlink:href="https://crisprcas.i2bc.paris-saclay.fr/">https://crisprcas.i2bc.paris-saclay.fr/</ext-link>). CRISPRCasFinder was parallelized through a Perl script for the number of CPUs defined by the user input and skips contigs below a size cutoff to generate a GFF3 output file. The CasCollect pipeline includes read filtering, seed generation, subset read expansion, assembly, and annotation for <italic>cas</italic> genes and CRISPR arrays.</p>
    </sec>
    <sec id="SEC2-3">
      <title>CasCollect parameters</title>
      <p>The CasCollect pipeline has several parameters that can be altered for user specific workflows, described in detail with the -h command. The short DNA sequencing read reads input can accommodate single- or paired-end sequencing data with -single [file.fastq] or -fwd [file.fastq] and -rev [file.fastq], respectively (Figure <xref ref-type="fig" rid="F1">1A</xref>). The filtering option is set to false by default and the sequencing reads will be run for the seed generation and downstream workflow (Figure <xref ref-type="fig" rid="F1">1B</xref>). Setting the flag --trim will perform adapter trimming and read merging for paired-end data. The flag --clean performs the trim function with the addition of removing sequencing reads that match a user-defined set of undesired nucleic acid sequence(s) set with -ref [file.fasta]. For seed generation, protein mode searching for <italic>cas</italic> genes by default using a set of 120 HMM profiles (<xref rid="B13" ref-type="bibr">13</xref>) included with the program (Figure <xref ref-type="fig" rid="F1">1C</xref>). The Cas protein profile HMMs can be substituted with -hmm [file.hmm] and protein mode disabled with the flag --noprot. DNA and user-defined modes are disabled by default and can be activated by the flags --nucl and --seed; the search sequences are set with -query [file.fasta] and -define [file.fasta], respectively. The number of rounds of seed expansion is defaulted to 5 and can be changed with -cycle [number], while the match is set for 95% and can be changed with -match [number] (Figure <xref ref-type="fig" rid="F1">1D</xref>). Read sequence assembly and annotation are default and can be disabled by the flags --noassembly (Figure <xref ref-type="fig" rid="F1">1E</xref>) and --noannotate (Figure <xref ref-type="fig" rid="F1">1F</xref>), respectively. The flag --meta runs metaSPAdes in-place-of the SPAdes assembly.</p>
      <fig id="F1" orientation="portrait" position="float">
        <label>Figure 1.</label>
        <caption>
          <p>Workflow for the CasCollect pipeline. CasCollect processes an initial high-throughput sequencing read dataset (<bold>A</bold>) by read filtering (<bold>B</bold>), seed generation (<bold>C</bold>), read subset expansion (<bold>D</bold>), assembly (<bold>E</bold>) and annotation (<bold>F</bold>). (A) The sequencing read dataset requires quality scores for assess the confidence for each base call for the subsequent filtering step. (B) Read filtering can be ignored, for trimming of adapter sequences and low-quality regions, or cleaning that performs trimming and removes reads matching a reference of undesired sequence(s) that can be supplied by the user. For paired-end reads, both trimming and cleaning will merge reads with over lapping regions. (C) Seed reads can be generated by Protein mode, DNA mode and/or a user-defined read subset (dark gray boxes). Protein mode translates the reads for searching with either the built-in protein profile HMMs or a user-defined set. DNA mode searches for matches to user-defined reference sequence(s). User-defined mode allows for any subset of reads or sequences be used for seed expansion. The seed generation modes can be invoked independently or concurrently within a single run of the program. (D) The number of cycles of read subset expansion can be varied to generate larger or smaller expanded read sets. The (E) targeted assembly using this subset of reads and (F) annotation of the assembled contigs are optional for identifying <italic>cas</italic> genes and CRISPR arrays.</p>
        </caption>
        <graphic xlink:href="lqaa063fig1"/>
      </fig>
    </sec>
    <sec id="SEC2-4">
      <title>Unassembled genomic DNA comparative analysis</title>
      <p>For the <italic>E. coli</italic> KLY, <italic>P. aeruginosa</italic> VA-134 and <italic>S. pyogenes</italic> M39 bacteria isolates, CasCollect was run with the default parameters for a protein homology read search with the Cas HMM profiles and following parameters: --trim -cycle 2 -cpu 100 -mem 2000. The pooled simulated and metagenomic dataset was run with the following parameters: --trim --meta -cpu 100 -mem 2000. Datasets from the CDC &amp; FDA Antibiotic Resistance Isolate Bank panel of <italic>P. aeruginosa</italic> isolates were run with similar parameters as the bacteria isolates: --trim -cycle 2 -cpu 100 -mem 2000 appended with --nucl -query Pseudomonas_aeruginosa_DK2.fas for DNA mode to search for isolated CRISPR arrays. The complete assembly used the CasCollect filtered and trimmed run through SPAdes with the same number of CPUs and amount of RAM as CasCollect. For the metagenomic and simulated metagenomic datasets, metaSPAdes was run in-place-of the SPAdes assembly (<xref rid="B18" ref-type="bibr">18</xref>).</p>
    </sec>
    <sec id="SEC2-5">
      <title>Progressive read collection analysis</title>
      <p>The metagenomic dataset was run with the CasCollect pipeline with zero to five cycles of read subset expansion. Each of these read sets and the whole sequencing dataset were mapped onto the largest <italic>cas</italic> operon for each metagenome with bowtie2 with default parameters (<xref rid="B19" ref-type="bibr">19</xref>). The read coverage was extracted with SAMtools (<xref rid="B20" ref-type="bibr">20</xref>) using the depth command and -a parameter to output coverage for the full-length contig.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS AND DISCUSSION</title>
    <p>To overcome the requirement of assembling the entire set of short DNA sequencing reads prior to searching for gene(s) of interest, we developed CasCollect. CasCollect identifies short DNA sequencing reads that match HMM profiles for <italic>cas</italic> protein genes and collects these reads for targeted assembly. To identify CRISPR arrays isolated from <italic>cas</italic> genes, CasCollect can collect reads that match to CRISPR repeats. However, this approach may not necessarily identify all reads from a genomic CRISPR/Cas locus and the possibility of discontinuous coverage of reads would prevent complete assembly of the locus. To infill the potentially missing regions between profile matching reads, the seed reads are expanded to include neighboring adjacent reads. This seed expansion is performed with stringent sequence similarity matches to reduce non-specific read matching. This expanded CRISPR/Cas read set typically constitutes a very small fraction of the total sequencing reads and bypasses the computational overhead associated with whole genome reconstruction by assembling only the targeted region(s) of interest. CasCollect can perform targeted assembly of specialty gene sets other than <italic>cas</italic> and CRISPR genes by specifying other HMM collections and/or reference DNA sequence files.</p>
    <sec id="SEC3-1">
      <title>CasCollect pipeline</title>
      <p>CasCollect was written as a python wrapper for various selectable modules that encompass additional programs pipelined together for use on UNIX and Linux architecture operating systems (Figure <xref ref-type="fig" rid="F1">1</xref>). The CasCollect pipeline was created from five distinct and optional steps: (i) read filtering, (ii) seed generation, (iii) read subset expansion, (iv) assembly and (v) annotation. This pipeline relies on several third-party programs that include: HMMER (<xref rid="B21" ref-type="bibr">21</xref>), VSEARCH (<xref rid="B22" ref-type="bibr">22</xref>), SPAdes (<xref rid="B23" ref-type="bibr">23</xref>) and CRISPRCasFinder (<xref rid="B13" ref-type="bibr">13</xref>) for the targeted assembly of gene(s) of interest from either single or paired end data.</p>
      <p>The option of sequencing read filtering is performed either as a ‘trimming’ or ‘cleaning’ step by executing the two BBTools programs (<ext-link ext-link-type="uri" xlink:href="https://jgi.doe.gov/data-and-tools/bbtools/">https://jgi.doe.gov/data-and-tools/bbtools/</ext-link>) bbduk and bbmerge. The trimming and cleaning options are implemented by bbduk on the short DNA sequencing reads (Figure <xref ref-type="fig" rid="F1">1A</xref>). Trimming removes adapters from reads, while the cleaning option removes adapters and includes the removal of defined ‘contaminating’ sequences that match a user-defined Fasta file of sequences (Figure <xref ref-type="fig" rid="F1">1B</xref>). The most common use for the cleaning option is to remove off-target sequencing of undesired additional biological materials, such as human DNA in microbiome samples. For paired-end data, bbmerge is then used to identify and merge overlapping sequencing reads (<xref rid="B24" ref-type="bibr">24</xref>). This step is ignored for single-end sequencing data or when neither ‘trimming’ or ‘cleaning’ steps are performed.</p>
      <p>The initial seed collection comprises three main modes: ‘Protein mode’, ‘DNA mode’ and ‘User-defined mode’ (Figure <xref ref-type="fig" rid="F1">1C</xref>). For seed collection, the sequencing reads are converted to Fasta format with quality scores stripped using Seqtk (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/seqtk">https://github.com/lh3/seqtk</ext-link>). Protein mode employs FragGeneScanPlus (<xref rid="B25" ref-type="bibr">25</xref>) to translate the most likely of the six open reading frames for each read for homology searching by HMMER (<xref rid="B21" ref-type="bibr">21</xref>) with a default set of 120 Cas protein family profile HMMs (<xref rid="B13" ref-type="bibr">13</xref>) as query. DNA mode implements VSEARCH (<xref rid="B22" ref-type="bibr">22</xref>) for identity matching to a user-defined set of CRISPR array repeats for the identification of CRISPR arrays that may be found isolated from the <italic>cas</italic> genes. We have included 105 CRISPR repeat sequences (<xref rid="B13" ref-type="bibr">13</xref>) as individual Fasta files with CasCollect to aid in CRISPR array detection. The user-defined mode uses a specified set of reads as the seed set (Figure <xref ref-type="fig" rid="F1">1C</xref>). The protein, DNA, and user-defined modes can be invoked independently or concurrently within a single run of the program pipeline to search for <italic>cas</italic> genes, isolated CRISPR arrays, or other sequences. Thus, any combination of these three seed generation modes can be applied in a single run of CasCollect. CasCollect is flexible and capable of assembling other specialty protein or DNA gene sets by using any set of protein profile HMMs (-hmm), reference DNA sequences (--nucl and -query), or read seed sets provided the user (--seed and -define).</p>
      <p>Read subset expansion, in both directions from each seed read, is performed by reiterative implementations of VSEARCH usearch global search function (Figure <xref ref-type="fig" rid="F1">1D</xref>). The default identity match has been set to a moderately high value of 95%, however, this can be adjusted with the -match command. The initial read subset expansion is performed with the seed reads from the DNA, protein, and/or user-defined mode(s) as the query against the entire sequencing read set as the database. The matching reads are separated from the remaining reads from the dataset and then used as the query for the subsequent VSEARCH search with the unmatched reads then used as the database for this next query. This process eliminates redundant searches by removing reads from the database set that have been matched in the previous cycle instead of the entire sequencing read set. The default number of these read subset expansion cycles is set at five and can be adjusted with the -cycle command. After the final cycle of read subset expansion, all matching reads are pooled and the sequencing quality scores are added back, generating Fastq files for assembly and contig building with quality scores.</p>
      <p>The assembly function employs the SPAdes assembler (<xref rid="B23" ref-type="bibr">23</xref>) using the subset of reads from the seed and expansion steps (Figure <xref ref-type="fig" rid="F1">1E</xref>). For metagenomes, metaSPAdes is used in-place-of SPAdes. This targeted assembly is specific to the queries from the protein, DNA, and user-defined modes, by default <italic>cas</italic> genes and CRISPR arrays; yet any sequence can be targeted for assembly with the corresponding protein profile HMMs, reference DNA sequences, or read seed sets. By merely using a small subset of reads for targeted assembly, we avoid the time intensive process of attempting to assemble the complete genome using all the sequencing reads. This targeted assembly reduces computational resources and time, bypassing difficult assembly regions outside the regions of interest.</p>
      <p>The final step in the pipeline is the identification and annotation of <italic>cas</italic> genes and CRISPR arrays from the assembled contig sequences (Figure <xref ref-type="fig" rid="F1">1F</xref>). The targeted assembly contigs are searched with the CRISPRCasFinder program (<xref rid="B13" ref-type="bibr">13</xref>). The annotation of a smaller targeted assembly further reduces computational resources and time, bypassing searching most of the genome. Identification and annotation are parallelized with a Perl script, which additionally collates results into a GFF3 file for describing the CRISPR/Cas systems, genes, and arrays present in the in the assembled contig sequences.</p>
    </sec>
    <sec id="SEC3-2">
      <title>Bacterial isolates</title>
      <p>We initially benchmarked the timing and quality of our CasCollect pipeline with sequencing read datasets corresponding to well-annotated bacterial isolate genome assemblies. The complete and annotated genomes allowed for definitive checks to validate targeted assembly qualities and automated annotation. The CasCollect pipeline was compared against conventional full genome assembly using SPAdes for the entire sequencing read set, herein referred to as ‘complete assembly’ (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1</xref>). For this comparison, we tested publicly available short paired-end genomic DNA sequencing reads from isolates of <italic>E. coli</italic> strain KLY, <italic>P. aeruginosa</italic> strain VA-134 and <italic>S. pyogenes</italic> strain M39 that had read lengths of 90, 100 and 226 bp, respectively. For our comparative analysis, we ran the CasCollect pipeline and a complete assembly pipeline as the baseline. The complete assembly pipeline is highly similar to CasCollect with identical read filtering and annotation steps (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1A</xref>). The difference between the pipelines was the omission of the seed generation and expansion steps that influence the reads used for the assembly by SPAdes. The complete assembly pipeline used all the filtered reads for the SPAdes assembly step, while CasCollect generated instead of a much smaller read subset. This pipeline comparison maintained identical conditions for the sequencing read filtering and the annotation of the assembled sequences between CasCollect and the complete assembly. Both CasCollect and complete assembly pipelines were able to identify all known previously identified <italic>cas</italic> genes within each of the three bacterial isolate genomes.</p>
      <p>The timing for the <italic>E. coli</italic> strain KLY, <italic>P. aeruginosa</italic> strain VA-134 and <italic>S. pyogenes</italic> strain M39 bacterial isolates demonstrated relatively similar timings for the CasCollect and complete assembly pipelines, with timings of 23.3/17.4, 51.2/33.3 and 21.6/31.5 min (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1B</xref>). The most time intensive step for CasCollect was the seed generation and expansion, while the assembly and annotation were relatively fast (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1C</xref>). In contrast, the assembly step for the complete assembly pipeline was the overwhelming contributor for the program runtime. For the <italic>E. coli</italic> strain KLY dataset, the complete assembly required more time for annotation, which was likely due to the number of contigs generated—146 contigs for the complete assembly compared with 19 from CasCollect (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1D</xref>). In addition to more contigs, the length of the contigs was far greater with 28 exceeding 50 Kb (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1E</xref>). For <italic>P. aeruginosa</italic> strain VA-134 the number of assembled contigs and the overall timings were similar for CasCollect and the complete assembly pipelines at 111 and 162, respectively (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1D</xref>). Interestingly, CasCollect generated more contigs for <italic>S. pyogenes</italic> strain M39 than the complete assembly at 89 and 44, respectively. This is explained by the complete assembly generating fewer, yet larger contigs (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1E</xref>).</p>
      <p>An alternative software pipeline for CasCollect was built using PRICE (<xref rid="B26" ref-type="bibr">26</xref>) to replace the read subset expansion and assembly (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1A</xref>). The PRICE pipeline is highly similar to CasCollect with identical read filtering, seed generation and annotation steps. The difference between the pipelines was the read subset expansion and assembly. The PRICE pipeline used the seed generation reads for iterative extension to build the contigs (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1A</xref>). The pipeline comparison maintained identical conditions for the sequencing read filtering and the annotation of the assembled sequences between CasCollect and PRICE. Both CasCollect and PRICE pipelines were able to identify all known previously identified <italic>cas</italic> genes within each of the three bacterial isolate genomes. The timings for the PRICE pipeline for <italic>P. aeruginosa</italic> strain VA-134 and <italic>S. pyogenes</italic> strain M39 datasets were highly similar to CasCollect at 51.2/50.1 and 21.6/22.6 min, respectively (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S1B</xref>). For the <italic>E. coli</italic> strain KLY, the PRICE pipeline had difficulties with generating the contig spanning the <italic>cas</italic> operon. While the <italic>P. aeruginosa</italic> strain VA-134 and <italic>S. pyogenes</italic> strain M39 datasets were successful with contig generation with five cycles, the <italic>E. coli</italic> strain KLY dataset required 100 cycles. This is reflected in the massive timing increase at over 2 h and 123.5 min. The more than 5-fold time increase was likely due to the read length, with the <italic>E. coli</italic> strain KLY dataset having the shortest DNA sequencing reads. Using short sequencing reads as seed contigs for PRICE is far from the intended function of PRICE.</p>
    </sec>
    <sec id="SEC3-3">
      <title>Simulated metagenome</title>
      <p>To estimate the CasCollect pipeline performance with a metagenomic DNA sequencing dataset, we benchmarked the three pipelines with a simulated metagenomic dataset (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2</xref>). For the simulated metagenomic data, we pooled together the <italic>E. coli</italic> KLY, <italic>P. aeruginosa</italic> VA-134 and <italic>S. pyogenes</italic> M39 bacterial isolate genome sequencing reads. Mouse sequencing reads were spiked in to increase the read complexity. This created a curated metagenomic dataset, with known CRISPR/Cas systems for evaluating the quality of the metagenomic assembly for <italic>cas</italic> gene operons within a complex of several genomes. The simulated metagenome read dataset did not affect the quality of the assembly or annotation for CRISPR/Cas systems for either CasCollect or the complete assembly pipelines. However, the PRICE pipeline was unable to assemble contigs spanning the complete <italic>cas</italic> operon for <italic>E. coli</italic> KLY or <italic>S. pyogenes</italic> M39. Increasing the cycle number to 200 built a contig to span the complete <italic>cas</italic> operon for <italic>E. coli</italic> KLY. Yet even increasing the cycle number to 500, PRICE was unable to build a contig to span the <italic>S. pyogenes</italic> M39 <italic>cas</italic> operon. Increasing the cycle number to 500 dramatically increased the timing for the PRICE pipeline to almost 90 h (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2A and B</xref>).</p>
      <p>CasCollect reduced the run time modestly by 36% relative to the complete assembly (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2B</xref>). The CasCollect runtime was 1.6 h compared with the complete runtime of 2.5 h. Compared with PRICE that failed to assemble all <italic>cas</italic> operons, CasCollect and the complete assembly pipelines were almost 57- and 37-fold faster and completed building all <italic>cas</italic> operons. As was previously seen with the isolate genomes, the vast majority of the run time for CasCollect was used on the seed generation and expansion steps. With fewer reads, CasCollect required less time for contig assembly compared with the complete assembly pipeline and this was reflected as a smaller percentage of the overall run time (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2C</xref>). Annotation was faster with CasCollect with merely 723 contigs compared with the 10 467 contigs for the complete assembly (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2D</xref>). PRICE generated merely 56 contigs. Analysis of the contig size populations found CasCollect generated no contigs larger than 50 Kb (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S2E</xref>). In sharp contrast, the complete assembly pipeline generated 69 contigs larger than 50 Kb. For PRICE, 26 of the 56 contigs were larger than 50 Kb. Our simulated metagenomic data analysis demonstrated that CasCollect targeted assembly is more efficient for the assembly of genes of interest and avoided excessive assembly by an order of magnitude for our simulated metagenome.</p>
    </sec>
    <sec id="SEC3-4">
      <title>Metagenome</title>
      <p>The analysis of the simulated data indicated that our CasCollect pipeline accurately assembled and annotated <italic>cas</italic> gene operons, while improving speed compared with the complete assembly pipeline. We next investigated how CasCollect would perform with actual, instead of simulated, metagenomic datasets. For this, we analyzed four metagenomic dataset from a variety of sources (Figure <xref ref-type="fig" rid="F2">2</xref>). We performed a similar comparative analysis as previously with CasCollect and complete assembly pipeline as the baseline (Figure <xref ref-type="fig" rid="F2">2A</xref>). The complete assembly pipeline used the entire filtered read dataset as input for assembly, while CasCollect used a subset of these reads. Otherwise the two pipelines were identical for the initial read processing and downstream annotation. Our CasCollect pipeline had a dramatic improvement for the overall run time compared with the complete assembly pipeline (Figure <xref ref-type="fig" rid="F2">2B</xref>). On average for the tested metagenomes, CasCollect required merely 3% of the time required for the complete assembly; almost two orders of magnitude improvement at 1.7 ± 0.3 h and 50.6 ± 3.0 h, respectively. CasCollect reduced the over two days of runtime for the complete assembly to &lt;2 h. This massive improvement for the timings of the actual metagenomic data was likely due to the greater complexity of numerous genomes, while our simulated metagenomic data comprised four genomes. As previously observed for the isolate genomes and pooled simulated metagenomic datasets, the vast majority of the timing for CasCollect was for the seed generation and expansion at an average of 73.7 ± 3.4% the total run time (Figure <xref ref-type="fig" rid="F2">2C</xref>). For the compete assembly, the average time for the read assembly alone was 5.5 ± 0.3 h; 3-fold the total time for the entire CasCollect pipeline. The longer timing for the complete assembly pipeline was exacerbated by the timing for the annotation that was on average 45.1 ± 2.9 h and comprised 88.7 ± 0.9% of the total run time for the complete pipeline. We also attempted to perform analysis of these four metagenomes with our PRICE pipeline (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S3</xref>). Running the PRICE pipeline for 50 cycles had an average runtime of 5.5 ± 0.6 h. This was more 3-fold the timing for CasCollect, yet, failed to generate any contigs that spanned the entire <italic>cas</italic> operon for any of the four metagenomes. Thus, PRICE does not appear to function well for our targeted assembly, likely due to the short DNA sequencing read lengths used as seeds for building the contigs.</p>
      <fig id="F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>Comparative analysis of the CasCollect and complete assembly pipelines for metagenomic datasets. (<bold>A</bold>) Schematic of the four steps for the CasCollect and complete assembly pipelines: files (blue) for trimming and stripping qualities; seed (orange) for the seed generation, expansion and reassigning qualities; assembly (gray) for contig building; and annotate (yellow) for detecting <italic>cas</italic> genes and CRISPR arrays to generate a GFF3 output file. (<bold>B</bold>) Timings for each pipeline for each metagenome and steps. (<bold>C</bold>) Percentage breakdown for time required for each step. (<bold>D</bold>) Number of contigs generated by each pipeline with (<bold>E</bold>) the length distribution for CasCollect and complete assembly. Colors for each step in (A) are used for the charts in (B) and (C).</p>
        </caption>
        <graphic xlink:href="lqaa063fig2"/>
      </fig>
      <p>To investigate the cause of the large run time discrepancy for the two pipelines, we characterized the contig number and length distributions (Figure <xref ref-type="fig" rid="F2">2D</xref> and <xref ref-type="fig" rid="F2">E</xref>). CasCollect generated on average two orders of magnitude fewer contigs than the complete assembly at 2.1 ± 0.5K and 269.9 ± 4.7K, respectively (Figure <xref ref-type="fig" rid="F2">2D</xref>). Analysis of the contig size distribution revealed that none of the CasCollect runs for the metagenomes generated a contig larger than 50 Kb and only one contig larger than 10 Kb (Figure <xref ref-type="fig" rid="F2">2E</xref>). The contigs for the complete assembly were far greater in size with an average of 33 contigs greater than 50 Kb. The &gt;100-fold additional contigs and longer lengths for the complete assembly are likely the cause for the far greater annotation analysis run time. Our Perl script for automating the annotation had set a size cutoff of 500 bp, which reduced the total number of contigs analyzed for the complete assembly to an average of 161K contigs. CasCollect generated an average of 1.1K contigs greater than 500 bp, still &gt;100-fold additional contigs for the complete assembly pipeline to analyze. This demonstrates that the almost two orders of magnitude improved timing for the CasCollect was due to the targeted assembly reducing the time for the assembly and the reduced number of contigs for analysis.</p>
      <p>Read coverage across the <italic>cas</italic> genes and the intervening sequences is critical for the assembly of <italic>cas</italic> gene operons. Low sequencing read coverage and gapped regions lacking sequencing read coverage due to the incomplete collection of reads from the metagenomic datasets would result in the premature termination of contig building, resulting in fragmented <italic>cas</italic> genes and operons. To determine the completeness of the read collection for CasCollect, we analyzed read coverage for each cycle of read subset expansion for the largest <italic>cas</italic> operon from each of the four metagenomes (Figure <xref ref-type="fig" rid="F3">3</xref>). The reads were extracted for the seeds and each cycle of seed subset expansion. These reads as well as the total reads were then mapped onto the <italic>cas</italic> operons. For the ground water <italic>cas</italic> operon, the initial seed generation did well for continuous coverage with a few short regions lacking any reads (Figure <xref ref-type="fig" rid="F3">3A</xref>). The average coverage was 33.2% of the total mappable reads. After a single cycle of subset read expansion, this increased to 96.1% and read coverage had no gaps across the <italic>cas</italic> operon. After the second cycle, the average read coverage was 99.5% and remained unchanged for the following three cycles. In contrast, the initial seed generation for the lake <italic>cas</italic> operon had a gap in read coverage of 1.7 Kb between <italic>cas2-cas3</italic> and <italic>csy1</italic> (Figure <xref ref-type="fig" rid="F3">3B</xref>). The average coverage was higher at 74.4% of the total mappable reads. Two cycles of subset read expansion were necessary to infill the gap between <italic>cas2-cas3</italic> and <italic>csy1</italic> with contiguous read coverage, increasing the average read coverage to 92.4%. With each cycle the average read coverage increased, plateauing at 99.0% with the fifth cycle. The permafrost and wetlands <italic>cas</italic> operons were similar to the lake metagenome with an initial seed generation average read coverage of 75.7 and 88.7%, respectively (Figure <xref ref-type="fig" rid="F3">3C</xref> and <xref ref-type="fig" rid="F3">D</xref>). After a single cycle of subset read expansion, the average read coverage was 100.0% of the mappable reads for each <italic>cas</italic> operon. While two cycles of subset read expansion had &gt;90% of the mappable reads and infilled a gap of almost 2 Kb between <italic>cas</italic> genes, we set the default parameter for CasCollect to five cycles of subset read expansion to compensate for larger gaps that might exist between <italic>cas</italic> genes in an operon. These additional cycles still permit CasCollect to have massively improved timings compared with the complete assembly.</p>
      <fig id="F3" orientation="portrait" position="float">
        <label>Figure 3.</label>
        <caption>
          <p>Analysis for the completeness of read collection by CasCollect. Read coverage analysis per each reiterative cycle of read subset expansion for the largest <italic>cas</italic> operons found in each metagenome dataset (<bold>A</bold>–<bold>D</bold>). (Top) A schematic for the <italic>cas</italic> genes within each operon drawn to scale above the overlay of all mappable reads and reads collected at each cycle of subset read expansion. All reads (red) denotes all mappable reads from each metagenome sequencing dataset. Seeds (blue) is the initial seed set expanded by cycles of read subset expansion (Cycle #, blue). (Right) is the number of reads from each step in CasCollect and for Seeds and Cycle # the percent of all mappable reads.</p>
        </caption>
        <graphic xlink:href="lqaa063fig3"/>
      </fig>
    </sec>
    <sec id="SEC3-5">
      <title>Identifying isolated CRISPR arrays</title>
      <p>Complete identification of the CRISPR spacers of a target organism is critical for the renewing field of phage therapy. Elucidating CRISPR spacers is necessary for improving the success rate of phage therapy by avoiding the use of phages that the bacterial have immunity by prior CRISPR/Cas system acquisition of complimentary sequences. Many CRISPR arrays are located sufficiently near <italic>cas</italic> genes that these would be revealed by the above method based on Cas protein profiles. However, CRISPR arrays unlinked to <italic>cas</italic> genes are often seen and these arrays would be missed by assembly targeted exclusively to <italic>cas</italic> genes.</p>
      <p>To identify these isolated CRISPR arrays, our software includes a DNA mode, primed by CRISPR repeat sequences for the species of interest. CasCollect includes 105 CRISPR repeat sequences (<xref rid="B13" ref-type="bibr">13</xref>) as individual Fasta files for CRISPR array detection (<xref ref-type="supplementary-material" rid="sup1">Supplemental Table S1</xref>). We demonstrate the utility of the DNA mode with a set of genomic sequence data from 66 antibiotic resistant <italic>P. aeruginosa</italic> isolates available from CDC &amp; FDA Antibiotic Resistance Isolate Bank panels (Table <xref rid="tbl1" ref-type="table">1</xref> and <xref ref-type="supplementary-material" rid="sup1">Supplemental Table S2</xref>). The data set is especially applicable for being only available in an unassembled raw read format. We used the <italic>P. aeruginosa</italic> CRISPR repeat as input to the CasCollect DNA mode for analyzing each of the CDC isolate datasets to identify seed reads matching <italic>P. aeruginosa</italic> CRISPR arrays. Approximately half the of the strains, 31 of 65, have a <italic>cas</italic> operon with three or more <italic>cas</italic> genes (Table <xref rid="tbl1" ref-type="table">1</xref>). The vast majority of these <italic>cas</italic> operons have an associated CRISPR array, with merely two exceptions. For comparison, the complete assembly pipeline was applied to the same dataset. The two pipelines disagreed for strain AR110 (Table <xref rid="tbl1" ref-type="table">1</xref>, asterisk) for a single CRISPR array with CasCollect yielding 26 spacers and the complete assembly yielding 29 (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S4A</xref>). Interestingly, the three additional CRISPR arrays in the complete assembly appear to be artifacts, perfect copies of one spacer/repeat unit (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S4B</xref>). This was further supported by the lower sequencing coverage specifically for the duplicate CRISPR array region (<xref ref-type="supplementary-material" rid="sup1">Supplemental Figure S4C</xref>).</p>
      <table-wrap id="tbl1" orientation="portrait" position="float">
        <label>Table 1.</label>
        <caption>
          <p>Identification of <italic>P. aeruginosa cas</italic> operons and CRISPR arrays with CasCollect</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" align="center" rowspan="1">CRISPR arrays</th>
              <th colspan="2" align="center" rowspan="1">CRISPR spacers</th>
              <th rowspan="1" colspan="1"/>
              <th align="center" rowspan="1" colspan="1">Cas genes</th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">Strain</th>
              <th rowspan="1" colspan="1">SRA</th>
              <th rowspan="1" colspan="1">Reads</th>
              <th rowspan="1" colspan="1">Type</th>
              <th rowspan="1" colspan="1">Total</th>
              <th rowspan="1" colspan="1">Isolated</th>
              <th rowspan="1" colspan="1">Total</th>
              <th rowspan="1" colspan="1">Isolated</th>
              <th rowspan="1" colspan="1">#</th>
              <th align="center" rowspan="1" colspan="1">Operon</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">AR054</td>
              <td rowspan="1" colspan="1">SRR3112316</td>
              <td rowspan="1" colspan="1">18 70 045</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">60</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR064</td>
              <td rowspan="1" colspan="1">SRR3290649</td>
              <td rowspan="1" colspan="1">12 27 158</td>
              <td rowspan="1" colspan="1">TypeIC</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">38</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas4, Cas7c, Cas8c, Cas5c, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR095</td>
              <td rowspan="1" colspan="1">SRR3242025</td>
              <td rowspan="1" colspan="1">9 02 598</td>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">48</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">Cas3, Cse1, Cse2, Cas7, Cas5, Cas6, Cas1, Cas2</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR103</td>
              <td rowspan="1" colspan="1">SRR3112341</td>
              <td rowspan="1" colspan="1">24 75 405</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">61</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR108</td>
              <td rowspan="1" colspan="1">SRR3112343</td>
              <td rowspan="1" colspan="1">20 06 256</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">67</td>
              <td rowspan="1" colspan="1">14</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR110</td>
              <td rowspan="1" colspan="1">SRR3112345</td>
              <td rowspan="1" colspan="1">17 22 889</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">64*</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR111</td>
              <td rowspan="1" colspan="1">SRR3112346</td>
              <td rowspan="1" colspan="1">28 66 888</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">66</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeU</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">Csf4, Csf1, Csf2, Csf3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR229</td>
              <td rowspan="1" colspan="1">SRR4417530</td>
              <td rowspan="1" colspan="1">4 87 104</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">37</td>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR230</td>
              <td rowspan="1" colspan="1">SRR4417531</td>
              <td rowspan="1" colspan="1">4 74 301</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">64</td>
              <td rowspan="1" colspan="1">14</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR235</td>
              <td rowspan="1" colspan="1">SRR4417560</td>
              <td rowspan="1" colspan="1">6 80 848</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">29</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR238</td>
              <td rowspan="1" colspan="1">SRR4417563</td>
              <td rowspan="1" colspan="1">9 84 680</td>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">18</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR241</td>
              <td rowspan="1" colspan="1">SRR5122324</td>
              <td rowspan="1" colspan="1">16 63 553</td>
              <td rowspan="1" colspan="1">TypeU</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">n/a</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">n/a</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">Csf3, Csf2, Csf1, Csf4</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR242</td>
              <td rowspan="1" colspan="1">SRR5122326</td>
              <td rowspan="1" colspan="1">8 59 269</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">65</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR243</td>
              <td rowspan="1" colspan="1">SRR5122330</td>
              <td rowspan="1" colspan="1">7 20 605</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">65</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR245</td>
              <td rowspan="1" colspan="1">SRR5122327</td>
              <td rowspan="1" colspan="1">11 67 898</td>
              <td rowspan="1" colspan="1">TypeU</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">n/a</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">n/a</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">Csf4, Csf1, Csf2, Csf3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR246</td>
              <td rowspan="1" colspan="1">SRR5122329</td>
              <td rowspan="1" colspan="1">16 34 253</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">36</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR248</td>
              <td rowspan="1" colspan="1">SRR5122328</td>
              <td rowspan="1" colspan="1">7 98 142</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">65</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR249</td>
              <td rowspan="1" colspan="1">SRR5122332</td>
              <td rowspan="1" colspan="1">22 75 841</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">61</td>
              <td rowspan="1" colspan="1">16</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR250</td>
              <td rowspan="1" colspan="1">SRR5122323</td>
              <td rowspan="1" colspan="1">19 80 810</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">36</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR254</td>
              <td rowspan="1" colspan="1">SRR4417537</td>
              <td rowspan="1" colspan="1">10 00 255</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">64</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR255</td>
              <td rowspan="1" colspan="1">SRR4417538</td>
              <td rowspan="1" colspan="1">8 35 729</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">64</td>
              <td rowspan="1" colspan="1">15</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR256</td>
              <td rowspan="1" colspan="1">SRR4417539</td>
              <td rowspan="1" colspan="1">9 79 368</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">12</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR261</td>
              <td rowspan="1" colspan="1">SRR4417545</td>
              <td rowspan="1" colspan="1">9 14 206</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">31</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR262</td>
              <td rowspan="1" colspan="1">SRR4417546</td>
              <td rowspan="1" colspan="1">10 25 205</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">66</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">Cas2, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR267</td>
              <td rowspan="1" colspan="1">SRR4417551</td>
              <td rowspan="1" colspan="1">8 30 201</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">12</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR268</td>
              <td rowspan="1" colspan="1">SRR4417552</td>
              <td rowspan="1" colspan="1">9 25 471</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">65</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">Cas2, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR351</td>
              <td rowspan="1" colspan="1">SRR6799223</td>
              <td rowspan="1" colspan="1">44 31 783</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">21</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR355</td>
              <td rowspan="1" colspan="1">SRR6799377</td>
              <td rowspan="1" colspan="1">42 89 796</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">40</td>
              <td rowspan="1" colspan="1">5</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR356</td>
              <td rowspan="1" colspan="1">SRR6799380</td>
              <td rowspan="1" colspan="1">53 82 136</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">26</td>
              <td rowspan="1" colspan="1">14</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">Csf2, Cas6, Cas1**</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR358</td>
              <td rowspan="1" colspan="1">SRR6799384</td>
              <td rowspan="1" colspan="1">32 11 585</td>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">31</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">8</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas6, Cas5, Cas7, Cse2, Cse1, Cas3</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">TypeIE</td>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas2, Cas1, Cas6, Cas5, Cas7, Cse2</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">AR360</td>
              <td rowspan="1" colspan="1">SRR6799389</td>
              <td rowspan="1" colspan="1">33 30 069</td>
              <td rowspan="1" colspan="1">TypeIF</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">45</td>
              <td rowspan="1" colspan="1">10</td>
              <td rowspan="1" colspan="1">6</td>
              <td rowspan="1" colspan="1">Cas1, Cas3-Cas2, Csy1, Csy2, Csy3, Cas6</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>For <italic>cas</italic> operon detection there was a single difference between CasCollect and the complete assembly pipeline. CasCollect identified in strain AR356 a <italic>cas</italic> operon comprising <italic>csf2</italic>, <italic>cas6</italic> and <italic>cas1</italic> (Table <xref rid="tbl1" ref-type="table">1</xref>, double asterisk). This appears to be due to the complete assembly prematurely truncating the end of the contig. Overall, there was very high agreement between CasCollect and the complete assembly for the detection of <italic>cas</italic> operons and CRISPR arrays from unassembled sequencing data of antibiotic resistant patient data. CasCollect improves the performance for detecting <italic>cas</italic> genes and CRISPR arrays and simplifies this process with a single pipeline for inputting raw sequencing data and outputting CRISPR arrays and <italic>cas</italic> genes.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="SEC4">
    <title>CONCLUSION</title>
    <p>We have developed a software pipeline, CasCollect, for the targeted assembly of CRISPR arrays and <italic>cas</italic> operons. In comparison to the complete assembly, our targeted assembly significantly decreases the time necessary for the identification and annotation of CRISPR/Cas genes from unassembled high-throughput sequencing data by almost two order of magnitude. CasCollect was designed as a flexible platform for read seed collection and read subset expansion prior to assembly; our pipeline includes a set of 120 Cas protein HMMs, yet, can also function with a user-defined set(s) of HMMs for any protein(s) set; also included are 105 CRISPR repeats as reference DNA sequence(s); and a user-defined mode allows for any generated read seed set(s) be used for targeted assembly and CRISPR/Cas annotation. The protein, DNA, or user-defined modes can function as singular searches or can be combined in any combination within a single run. This pipeline was designed for allowing rapid analysis of the multitude of unassembled high-throughput sequencing data that is publicly available and ever increasing. We used a CDC &amp; FDA Antibiotic Resistance Isolate Bank panel of <italic>P. aeruginosa</italic> isolates as a case study for the utility of detecting CRISPR/Cas genes from unassembled sequencing data. While intended for the identification and annotation of CRISPR arrays and <italic>cas</italic> operons, CasCollect can be applied for the targeted assembly of any protein or DNA query.</p>
  </sec>
  <sec sec-type="data-availability" id="SEC5">
    <title>DATA AVAILABILITY</title>
    <p>CasCollect is publicly available for download under the terms of the GNU General Public License version 3 at in the GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/sandialabs/CasCollect">https://github.com/sandialabs/CasCollect</ext-link>).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>lqaa063_Supplemental_File</label>
      <media xlink:href="lqaa063_supplemental_file.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="SEC6">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link ext-link-type="uri" xlink:href="https://academic.oup.com/nargab/article-lookup/doi/10.1093/nargab/lqaa063#supplementary-data">Supplementary Data</ext-link> are available at NARGAB Online.</p>
  </sec>
  <sec id="SEC7">
    <title>FUNDING</title>
    <p>This work was supported by the Laboratory Directed Research and Development program at Sandia National Laboratories. Sandia National Laboratories is a multi-program laboratory managed and operated by National Technology and Engineering Solutions of Sandia, LLC., a wholly owned subsidiary of Honeywell International, Inc., for the U.S. Department of Energy's National Nuclear Security Administration under contract [DE-NA-0003525].</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <notes id="NT1">
    <title>Notes</title>
    <p><bold>Disclaimer:</bold> This paper describes objective technical results and analysis. Any subjective views or opinions that might be expressed in the paper do not necessarily represent the views of the U.S. Department of Energy or the United States Government.</p>
  </notes>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Barrangou</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Fremaux</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Deveau</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Richards</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Boyaval</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Moineau</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Romero</surname><given-names>D.A.</given-names></name>, <name name-style="western"><surname>Horvath</surname><given-names>P.</given-names></name></person-group><article-title>CRISPR provides acquired resistance against viruses in prokaryotes</article-title>. <source>Science</source>. <year>2007</year>; <volume>315</volume>:<fpage>1709</fpage>–<lpage>1712</lpage>.<pub-id pub-id-type="pmid">17379808</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Datsenko</surname><given-names>K.A.</given-names></name>, <name name-style="western"><surname>Pougach</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Tikhonov</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Wanner</surname><given-names>B.L.</given-names></name>, <name name-style="western"><surname>Severinov</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Semenova</surname><given-names>E.</given-names></name></person-group><article-title>Molecular memory of prior infections activates the CRISPR/Cas adaptive bacterial immunity system</article-title>. <source>Nat. Commun.</source><year>2012</year>; <volume>3</volume>:<fpage>945</fpage>.<pub-id pub-id-type="pmid">22781758</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Wolf</surname><given-names>Y.I.</given-names></name>, <name name-style="western"><surname>Koonin</surname><given-names>E.V.</given-names></name></person-group><article-title>Classification and nomenclature of CRISPR-Cas Systems: where from here</article-title>. <source>CRISPR J.</source><year>2018</year>; <volume>1</volume>:<fpage>325</fpage>–<lpage>336</lpage>.<pub-id pub-id-type="pmid">31021272</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jinek</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Chylinski</surname><given-names>K.</given-names></name>, <name name-style="western"><surname>Fonfara</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Hauer</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Doudna</surname><given-names>J.A.</given-names></name>, <name name-style="western"><surname>Charpentier</surname><given-names>E.</given-names></name></person-group><article-title>A programmable dual-RNA-guided DNA endonuclease in adaptive bacterial immunity</article-title>. <source>Science</source>. <year>2012</year>; <volume>337</volume>:<fpage>816</fpage>–<lpage>821</lpage>.<pub-id pub-id-type="pmid">22745249</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wagner</surname><given-names>D.L.</given-names></name>, <name name-style="western"><surname>Amini</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Wendering</surname><given-names>D.J.</given-names></name>, <name name-style="western"><surname>Burkhardt</surname><given-names>L.M.</given-names></name>, <name name-style="western"><surname>Akyüz</surname><given-names>L.</given-names></name>, <name name-style="western"><surname>Reinke</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Volk</surname><given-names>H.D.</given-names></name>, <name name-style="western"><surname>Schmueck-Henneresse</surname><given-names>M.</given-names></name></person-group><article-title>High prevalence of Streptococcus pyogenes Cas9-reactive T cells within the adult human population</article-title>. <source>Nat. Med.</source><year>2019</year>; <volume>25</volume>:<fpage>242</fpage>–<lpage>248</lpage>.<pub-id pub-id-type="pmid">30374197</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Krylov</surname><given-names>V.N.</given-names></name>, <name name-style="western"><surname>Bourkaltseva</surname><given-names>M.V.</given-names></name>, <name name-style="western"><surname>Pleteneva</surname><given-names>E.A.</given-names></name></person-group><article-title>Bacteriophage's Dualism in Therapy</article-title>. <source>Trends Microbiol.</source><year>2019</year>; <volume>27</volume>:<fpage>566</fpage>–<lpage>567</lpage>.<pub-id pub-id-type="pmid">31126841</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>Q.</given-names></name>, <name name-style="western"><surname>Doak</surname><given-names>T.G.</given-names></name>, <name name-style="western"><surname>Ye</surname><given-names>Y.</given-names></name></person-group><article-title>Expanding the catalog of cas genes with metagenomes</article-title>. <source>Nucleic Acids Res.</source><year>2014</year>; <volume>42</volume>:<fpage>2448</fpage>–<lpage>2459</lpage>.<pub-id pub-id-type="pmid">24319142</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Koonin</surname><given-names>E.V.</given-names></name>, <name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>F.</given-names></name></person-group><article-title>Diversity, classification and evolution of CRISPR-Cas systems</article-title>. <source>Curr. Opin. Microbiol.</source><year>2017</year>; <volume>37</volume>:<fpage>67</fpage>–<lpage>78</lpage>.<pub-id pub-id-type="pmid">28605718</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Haft</surname><given-names>D.H.</given-names></name>, <name name-style="western"><surname>Barrangou</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Brouns</surname><given-names>S.J.</given-names></name>, <name name-style="western"><surname>Charpentier</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Horvath</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Moineau</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Mojica</surname><given-names>F.J.</given-names></name>, <name name-style="western"><surname>Wolf</surname><given-names>Y.I.</given-names></name>, <name name-style="western"><surname>Yakunin</surname><given-names>A.F.</given-names></name><etal>et al</etal>.</person-group><article-title>Evolution and classification of the CRISPR-Cas systems</article-title>. <source>Nat. Rev. Microbiol.</source><year>2011</year>; <volume>9</volume>:<fpage>467</fpage>–<lpage>477</lpage>.<pub-id pub-id-type="pmid">21552286</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Wolf</surname><given-names>Y.I.</given-names></name>, <name name-style="western"><surname>Alkhnbashi</surname><given-names>O.S.</given-names></name>, <name name-style="western"><surname>Costa</surname><given-names>F.</given-names></name>, <name name-style="western"><surname>Shah</surname><given-names>S.A.</given-names></name>, <name name-style="western"><surname>Saunders</surname><given-names>S.J.</given-names></name>, <name name-style="western"><surname>Barrangou</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Brouns</surname><given-names>S.J.</given-names></name>, <name name-style="western"><surname>Charpentier</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Haft</surname><given-names>D.H.</given-names></name><etal>et al</etal>.</person-group><article-title>An updated evolutionary classification of CRISPR-Cas systems</article-title>. <source>Nat. Rev. Microbiol.</source><year>2015</year>; <volume>13</volume>:<fpage>722</fpage>–<lpage>736</lpage>.<pub-id pub-id-type="pmid">26411297</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shmakov</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Smargon</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Scott</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Cox</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Pyzocha</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Yan</surname><given-names>W.</given-names></name>, <name name-style="western"><surname>Abudayyeh</surname><given-names>O.O.</given-names></name>, <name name-style="western"><surname>Gootenberg</surname><given-names>J.S.</given-names></name>, <name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Wolf</surname><given-names>Y.I.</given-names></name><etal>et al</etal>.</person-group><article-title>Diversity and evolution of class 2 CRISPR-Cas systems</article-title>. <source>Nat. Rev. Microbiol.</source><year>2017</year>; <volume>15</volume>:<fpage>169</fpage>–<lpage>182</lpage>.<pub-id pub-id-type="pmid">28111461</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Makarova</surname><given-names>K.S.</given-names></name>, <name name-style="western"><surname>Wolf</surname><given-names>Y.I.</given-names></name>, <name name-style="western"><surname>Iranzo</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Shmakov</surname><given-names>S.A.</given-names></name>, <name name-style="western"><surname>Alkhnbashi</surname><given-names>O.S.</given-names></name>, <name name-style="western"><surname>Brouns</surname><given-names>S.J.J.</given-names></name>, <name name-style="western"><surname>Charpentier</surname><given-names>E.</given-names></name>, <name name-style="western"><surname>Cheng</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Haft</surname><given-names>D.H.</given-names></name>, <name name-style="western"><surname>Horvath</surname><given-names>P.</given-names></name><etal>et al</etal>.</person-group><article-title>Evolutionary classification of CRISPR–Cas systems: a burst of class 2 and derived variants</article-title>. <source>Nat. Rev. Microbiol.</source><year>2020</year>; <volume>18</volume>:<fpage>67</fpage>–<lpage>83</lpage>.<pub-id pub-id-type="pmid">31857715</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Couvin</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Bernheim</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Toffano-Nioche</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Touchon</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Michalik</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Néron</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Rocha</surname><given-names>E.P.C.</given-names></name>, <name name-style="western"><surname>Vergnaud</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Gautheret</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Pourcel</surname><given-names>C.</given-names></name></person-group><article-title>CRISPRCasFinder, an update of CRISRFinder, includes a portable version, enhanced performance and integrates search for Cas proteins</article-title>. <source>Nucleic Acids Res.</source><year>2018</year>; <volume>46</volume>:<fpage>W246</fpage>–<lpage>W251</lpage>.<pub-id pub-id-type="pmid">29790974</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grissa</surname><given-names>I.</given-names></name>, <name name-style="western"><surname>Vergnaud</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Pourcel</surname><given-names>C.</given-names></name></person-group><article-title>CRISPRFinder: a web tool to identify clustered regularly interspaced short palindromic repeats</article-title>. <source>Nucleic Acids Res.</source><year>2007</year>; <volume>35</volume>:<fpage>W52</fpage>–<lpage>W57</lpage>.<pub-id pub-id-type="pmid">17537822</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Biswas</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Staals</surname><given-names>R.H.J.</given-names></name>, <name name-style="western"><surname>Morales</surname><given-names>S.E.</given-names></name>, <name name-style="western"><surname>Fineran</surname><given-names>P.C.</given-names></name>, <name name-style="western"><surname>Brown</surname><given-names>CM.</given-names></name></person-group><article-title>CRISPRDetect: a flexible algorithm to define CRISPR arrays</article-title>. <source>BMC Genomics</source>. <year>2016</year>; <volume>17</volume>:<fpage>356</fpage>.<pub-id pub-id-type="pmid">27184979</pub-id></mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abby</surname><given-names>S.S.</given-names></name>, <name name-style="western"><surname>Néron</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Ménager</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Touchon</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Rocha</surname><given-names>E.P.</given-names></name></person-group><article-title>MacSyFinder: a program to mine genomes for molecular systems with an application to CRISPR-Cas systems</article-title>. <source>PLoS One</source>. <year>2014</year>; <volume>9</volume>:<fpage>e110726</fpage>.<pub-id pub-id-type="pmid">25330359</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Leinonen</surname><given-names>R.</given-names></name>, <name name-style="western"><surname>Sugawara</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Shumway</surname><given-names>M.</given-names></name><collab>International Nucleotide Sequence Database Collaboration</collab></person-group><article-title>The sequence read archive</article-title>. <source>Nucleic Acids Res.</source><year>2011</year>; <volume>39</volume>:<fpage>D19</fpage>–<lpage>D21</lpage>.<pub-id pub-id-type="pmid">21062823</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nurk</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Meleshko</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Korobeynikov</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Pevzner</surname><given-names>P.A.</given-names></name></person-group><article-title>metaSPAdes: a new versatile metagenomic assembler</article-title>. <source>Genome Res.</source><year>2017</year>; <volume>27</volume>:<fpage>824</fpage>–<lpage>834</lpage>.<pub-id pub-id-type="pmid">28298430</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Langmead</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group><article-title>Fast gapped-read alignment with Bowtie 2</article-title>. <source>Nat. Methods</source>. <year>2012</year>; <volume>9</volume>:<fpage>357</fpage>–<lpage>359</lpage>.<pub-id pub-id-type="pmid">22388286</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Handsaker</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Wysoker</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Fennell</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Ruan</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Homer</surname><given-names>N.</given-names></name>, <name name-style="western"><surname>Marth</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Abecasis</surname><given-names>G.</given-names></name>, <name name-style="western"><surname>Durbin</surname><given-names>R.</given-names></name><collab>1000 Genome Project Data Processing Subgroup</collab></person-group><article-title>The Sequence Alignment/Map format and SAMtools</article-title>. <source>Bioinformatics</source>. <year>2009</year>; <volume>25</volume>:<fpage>2078</fpage>–<lpage>2079</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eddy</surname><given-names>S.R.</given-names></name></person-group><article-title>Accelerated Profile HMM Searches</article-title>. <source>PLoS Comput. Biol.</source><year>2011</year>; <volume>7</volume>:<fpage>e1002195</fpage>.<pub-id pub-id-type="pmid">22039361</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rognes</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Flouri</surname><given-names>T.</given-names></name>, <name name-style="western"><surname>Nichols</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Quince</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Mahé</surname><given-names>F.</given-names></name></person-group><article-title>VSEARCH: a versatile open source tool for metagenomics</article-title>. <source>Peer J.</source><year>2016</year>; <volume>4</volume>:<fpage>e2584</fpage>.<pub-id pub-id-type="pmid">27781170</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bankevich</surname><given-names>A.</given-names></name>, <name name-style="western"><surname>Nurk</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Antipov</surname><given-names>D.</given-names></name>, <name name-style="western"><surname>Gurevich</surname><given-names>A.A.</given-names></name>, <name name-style="western"><surname>Dvorkin</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Kulikov</surname><given-names>A.S.</given-names></name>, <name name-style="western"><surname>Lesin</surname><given-names>V.M.</given-names></name>, <name name-style="western"><surname>Nikolenko</surname><given-names>S.I.</given-names></name>, <name name-style="western"><surname>Pham</surname><given-names>S.</given-names></name>, <name name-style="western"><surname>Prjibelski</surname><given-names>AD.</given-names></name><etal>et al</etal>.</person-group><article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>. <source>J. Comput. Biol.</source><year>2012</year>; <volume>19</volume>:<fpage>455</fpage>–<lpage>477</lpage>.<pub-id pub-id-type="pmid">22506599</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bushnell</surname><given-names>B.</given-names></name>, <name name-style="western"><surname>Rood</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Singer</surname><given-names>E.</given-names></name></person-group><article-title>BBMerge - Accurate paired shotgun read merging via overlap</article-title>. <source>PLoS One</source>. <year>2017</year>; <volume>12</volume>:<fpage>e0185056</fpage>.<pub-id pub-id-type="pmid">29073143</pub-id></mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rho</surname><given-names>M.</given-names></name>, <name name-style="western"><surname>Tang</surname><given-names>H.</given-names></name>, <name name-style="western"><surname>Ye</surname><given-names>Y.</given-names></name></person-group><article-title>FragGeneScan: predicting genes in short and error-prone reads</article-title>. <source>Nucleic Acids Res.</source><year>2010</year>; <volume>38</volume>:<fpage>e191</fpage>.<pub-id pub-id-type="pmid">20805240</pub-id></mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ruby</surname><given-names>J.G.</given-names></name>, <name name-style="western"><surname>Bellare</surname><given-names>P.</given-names></name>, <name name-style="western"><surname>Derisi</surname><given-names>J.L.</given-names></name></person-group><article-title>PRICE: software for the targeted assembly of components of (Meta) genomic sequence data</article-title>. <source>G3 (Bethesda, Md.)</source>. <year>2013</year>; <volume>3</volume>:<fpage>865</fpage>–<lpage>880</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">peerj</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10798154</article-id>
    <article-id pub-id-type="publisher-id">16726</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.16726</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Biology</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>neo4jsbml: import systems biology markup language data into the graph database Neo4j</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" corresp="yes">
        <name>
          <surname>Gricourt</surname>
          <given-names>Guillaume</given-names>
        </name>
        <email>guillaume.gricourt@inrae.fr</email>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-2" contrib-type="author">
        <name>
          <surname>Duigou</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-3" contrib-type="author">
        <name>
          <surname>Dérozier</surname>
          <given-names>Sandra</given-names>
        </name>
        <xref rid="aff-2" ref-type="aff">2</xref>
      </contrib>
      <contrib id="author-4" contrib-type="author">
        <name>
          <surname>Faulon</surname>
          <given-names>Jean-Loup</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <aff id="aff-1"><label>1</label><institution>Université Paris-Saclay, INRAE, AgroParisTech, Micalis Institute</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
      <aff id="aff-2"><label>2</label><institution>Université Paris-Saclay, INRAE, MaIAGE</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kant</surname>
          <given-names>Ravi</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>1</month>
      <year iso-8601-date="2024">2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>e16726</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2023-06-22">
        <day>22</day>
        <month>6</month>
        <year iso-8601-date="2023">2023</year>
      </date>
      <date date-type="accepted" iso-8601-date="2023-12-05">
        <day>5</day>
        <month>12</month>
        <year iso-8601-date="2023">2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©2024 Gricourt et al.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <copyright-holder>Gricourt et al.</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/16726"/>
    <abstract>
      <p>Systems Biology Markup Language (SBML) has emerged as a standard for representing biological models, facilitating model sharing and interoperability. It stores many types of data and complex relationships, complicating data management and analysis. Traditional database management systems struggle to effectively capture these complex networks of interactions within biological systems. Graph-oriented databases perform well in managing interactions between different entities. We present neo4jsbml, a new solution that bridges the gap between the Systems Biology Markup Language data and the Neo4j database, for storing, querying and analyzing data. The Systems Biology Markup Language organizes biological entities in a hierarchical structure, reflecting their interdependencies. The inherent graphical structure represents these hierarchical relationships, offering a natural and efficient means of navigating and exploring the model’s components. Neo4j is an excellent solution for handling this type of data. By representing entities as nodes and their relationships as edges, Cypher, Neo4j’s query language, efficiently traverses this type of graph representing complex biological networks. We have developed neo4jsbml, a Python library for importing Systems Biology Markup Language data into a Neo4j database using a user-defined schema. By leveraging Neo4j’s graphical database technology, exploration of complex biological networks becomes intuitive and information retrieval efficient. Neo4jsbml is a tool designed to import Systems Biology Markup Language data into a Neo4j database. Only the desired data is loaded into the Neo4j database. neo4jsbml is user-friendly and can become a useful new companion for visualizing and analyzing metabolic models through the Neo4j graphical database. neo4jsbml is open source software and available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>SBML</kwd>
      <kwd>Neo4j</kwd>
      <kwd>Database</kwd>
      <kwd>Neo4jsbml</kwd>
      <kwd>Genome-scale metabolic model</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>A French government grant managed by the Agence Nationale de la Recherche under the France 2030 program</funding-source>
        <award-id> ANR-22-PEBB-0008</award-id>
      </award-group>
      <funding-statement>This work was supported by a French government grant managed by the Agence Nationale de la Recherche under the France 2030 program, reference ANR-22-PEBB-0008. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Genome-Scale Metabolic Models (GEMs) of biological systems are commonly represented using the Systems Biology Markup Language (SBML) format. This format is actively maintained and updated, especially, by adding new features to meet new needs. Using a standard format facilitates interoperability repeatability, and reproducibility. Several standards have emerged in systems biology (<xref rid="ref-25" ref-type="bibr">Shin et al., 2023</xref>). The CellML standard stores computer-based mathematical models (<xref rid="ref-5" ref-type="bibr">Clerx et al., 2020</xref>) and the Simulation Experiment Description Markup Language (SED-ML) (<xref rid="ref-28" ref-type="bibr">Waltemath et al., 2011</xref>) enables the reproduction of simulation experiments. The use of a standard format to represent data enables the creation of a rich software environment such as COPASI (<xref rid="ref-11" ref-type="bibr">Hoops et al., 2006</xref>), Tellurium (<xref rid="ref-4" ref-type="bibr">Choi et al., 2018</xref>) and MASSpy (<xref rid="ref-9" ref-type="bibr">Haiman et al., 2021</xref>) for the construction, simulation, and visualization of dynamic metabolic models. A wide range of issues can be addressed in this way, including the construction of metabolic pathways (<xref rid="ref-24" ref-type="bibr">Shen et al., 2020</xref>), study of secondary metabolism in bacteria (<xref rid="ref-22" ref-type="bibr">Qiu, Yang &amp; Zeng, 2023</xref>) and representation of cell behavior and interactions in cancer (<xref rid="ref-14" ref-type="bibr">Kazerouni et al., 2020</xref>). To represent these types of biological processes, the SBML format encodes several nested components and their interactions in an XML-based document. The standard represents complex systems by organizing the data as components. To illustrate, biological systems can contain thousands of metabolites and reactions, leading to a high level of complexity in their interactions (<xref rid="ref-12" ref-type="bibr">Hucka et al., 2019</xref>). The SBML Level 3 standard is well-suited for describing reaction-based models. To represent different types of models, such as constraint-based, logical network, and rule-based models, the SBML standard has been enhanced using different packages. As described in their specifications, these packages add components or properties to the model.</p>
    <p>Neo4j is a powerful graph database that enables the storage, querying, and analysis of large amounts of data. Unlike relational databases, Neo4j leverages the power of graph theory, representing data as nodes or relationships which embed properties to store additional information. The graph-based structure is well-suited to tackle intricate relationships and decipher complex problems, such as social networks and network analysis. The graph query language, named Cypher, allows querying the graph to retrieve connected data and perform create, read, update, or delete operations on the database. Neo4j ensures data integrity and consistency by respecting the ACID principle (<xref rid="ref-18" ref-type="bibr">Meier &amp; Kaufmann, 2019</xref>). Specific capabilities can be added to the Neo4j database through a software extension, a plugin, enabling users to customize and enhance its features for dedicated applications. The Neo4j database comes with a broad ecosystem which includes tools like Arrows for designing the database structure, numerous drivers for communicating with the database, building queries intuitively with Cypher and Bloom for visualizing data.</p>
    <p>With Neo4j, metabolic models can be represented as a network of nodes and relationships, where each node represents a biological or supporting object within a component, such as a metabolite, reaction, or unit definition. Each relationship serves as a connection between two metabolic reactions, enabling easy exploration of different pathways and interactions between human metabolic data (<xref rid="ref-1" ref-type="bibr">Balaur et al., 2016</xref>). Using Neo4j with metabolic models can provide valuable insights into complex interactions, as it allows for the integration of heterogeneous data, such as chemical species, reactions, enzymes, and taxonomic data. This integration can aid in identifying key players across a wide range of biological application domains (<xref rid="ref-26" ref-type="bibr">Swainston et al., 2017</xref>).</p>
    <p>More recently, based on the graph database MaSyMoS, which stores SBML and CellML models to represent biological systems in terms of functional, behavioral, and structural aspects (<xref rid="ref-10" ref-type="bibr">Henkel, Wolkenhauer &amp; Waltemath, 2015</xref>), a protocol was developed to compare biochemical reaction networks (<xref rid="ref-17" ref-type="bibr">Lambusch et al., 2018</xref>). Nonetheless, analyzing its own SBML data using Neo4j remains a challenge. Biochem4j provides a web interface that does not allow users to analyze their data in their database. Recon2Neo4j and MaSyMoS created Java software using the JSBML library (<xref rid="ref-23" ref-type="bibr">Rodriguez et al., 2015</xref>) to import the data into their database. However, data loading is performed according to a predefined schema that retain several SBML components or properties that are targeted by their applications.</p>
    <p>We are presenting neo4jsbml, a user-friendly Python package to import SBML files into a Neo4j database. Neo4jsbml utilizes tools developed by Neo4j to define the database schema, load data, query entities and relationships, and visualize the created graph. This package offers flexibility, extensibility, and ease of use in combining graph databases with SBML files. Flexibility is provided by leaving the choice of entities to be analyzed by the researcher. Extensibility is based on the intrinsic operation of neo4jsbml <italic toggle="yes">via</italic> introspection. Finally, neo4jsbml can be used through the command line and requires no programming skill. The graph can be enriched with heterogeneous data, allowing researchers to build, manipulate, annotate, and store their data with greater efficiency.</p>
  </sec>
  <sec>
    <title>Material and Methods</title>
    <sec>
      <title>Implementation</title>
      <p>SBML data are structured according to the specifications defined by <xref rid="ref-12" ref-type="bibr">Hucka et al. (2019)</xref>. This file format has a skeleton of main components, but optional data can be added through the use of packages. The SBML specification Level 3 Version 2 describes eleven components: function definitions, unit definitions, compartments, species, parameters, initial assignments, rules, constraints, reactions, events and the model. Each component has a specific role and stores specific and generic information. The model component is special, it serves as a container for the other components but also supports some information, such as the identifier of the model, which can be exploited.</p>
      <p>Sometimes, not all components are suitable for analysis. To retain the desirable data from SBML documents, neo4jsbml utilizes the concept of introspection. Introspection allows a program to examine an object’s characteristics, such as its name, properties, and methods, making the program more efficient and robust. It is a powerful feature of object-oriented languages that exposes details about objects at runtime, and Python ships with a few built-in functions for this purpose. When importing SBML data into Neo4j, introspection is used to automate the extraction of properties and associated structured values of items mentioned in a definition schema. In this way, the user filters the main components and attributes to be loaded into the database.</p>
    </sec>
    <sec>
      <title>Running method</title>
      <p>The usage of the tool is described in <xref rid="fig-1" ref-type="fig">Fig. 1</xref>.</p>
      <fig position="float" id="fig-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-1</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Workflow for utilizing neo4jsbml.</title>
          <p>First, a schema is created with <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>. Next, aided by the schema, the SBML data is loaded into the Neo4j database using neo4jsbml. Softwares are green, files are gray, the database is blue.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g001" position="float"/>
      </fig>
      <p>It takes place in two stages. First of all, the user creates a schema defining which entities will be selected from the SBML model (<xref rid="fig-2" ref-type="fig">Fig. 2</xref>). Building a schema requires certain rules, such as mapping the names of different items found in the schema to their corresponding names as defined in the SBML specifications. To illustrate this principle, node labels and node properties indicated in the schema need to match the name of the SBML component and the properties belonging to the component, respectively. Given this information, neo4jsbml identifies the objects and attributes to extract from the SBML, thanks to the library libsbml. Thus, only the entities required for analysis were loaded into Neo4j. SBML specifications indicate which components are linked to each other by storing an identifier corresponding to another component as an attribute. Therefore, neo4jsbml checks whether the two components are linked by following the strategies shown in <xref rid="fig-3" ref-type="fig">Fig. 3</xref>. However, the Neo4j database operates on a directed graph; therefore, neo4jsbml infers directionality as indicated by the schema. Once the data are imported into Neo4j, the entities and relationships from the SBML model can be queried by Cypher through Neo4j.</p>
      <fig position="float" id="fig-2">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Schemas created from <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>.</title>
          <p>The entities and their relationships are represented by a circle and an arrow, respectively. Node label matches the name of a SBML component. Each node embeds the targeted properties. Types associated to each property are optional. (A) This schema represents various entities found in genome-scale models. (B) This schema is focused on the extraction of a metabolic network.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g002" position="float"/>
      </fig>
      <fig position="float" id="fig-3">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-3</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Examples of schemas illustrating how neo4jsbml uses introspection to associate one entity with another.</title>
          <p>(A) The object <italic toggle="yes">libsbml.Species</italic> has a method named <italic toggle="yes">getCompartment()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.Compartment</italic> object. The mapping between these entities is established by calling a method based on the name of one entity. (B) The object <italic toggle="yes">libsbml.LocalParameter</italic> has a method named <italic toggle="yes">getUnits()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.UnitDefinition</italic> object. The linkage between these entities is possible thanks to the name of the relationship. (C) The objects in the libsbml library have a method named <italic toggle="yes">getListOfAllElements()</italic> that leads to list some nested components. The <italic toggle="yes">libsbml.Reaction</italic> object can host several objects, including a <italic toggle="yes">libsbml.LocalParameter</italic> object. The relationship is created according to the name of the entities.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g003" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>Use cases</title>
      <p>To illustrate the power of neo4jsbml, three use cases were performed involving three <italic toggle="yes">Escherichia coli</italic> GEMs. The first one, called iAF1260, was published in 2007 (<xref rid="ref-7" ref-type="bibr">Feist et al., 2007</xref>). The second one, named iML1515, was established in 2017 (<xref rid="ref-19" ref-type="bibr">Monk et al., 2017</xref>). The last one, a small-scale model baptized e_coli_core was derived from an <italic toggle="yes">E. coli</italic> model. All models were downloaded from the BiGG Models knowledgebase (<xref rid="ref-16" ref-type="bibr">King et al., 2016</xref>) and the MetaNetX database (<xref rid="ref-20" ref-type="bibr">Moretti et al., 2021</xref>).</p>
      <p>A Neo4j plugin, named neo4jefmtool, based on efmtool (<xref rid="ref-27" ref-type="bibr">Terzer &amp; Stelling, 2008</xref>) was created to enumerate the metabolic pathways, available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
      <p>The schema described in <xref rid="fig-2" ref-type="fig">Fig. 2A</xref> was used to import data into Neo4j for the first two use cases, whereas the schema corresponding to <xref rid="fig-2" ref-type="fig">Fig. 2B</xref> was used for the last case. Both schemas were created using Arrows, available at <ext-link xlink:href="https://arrows.app/" ext-link-type="uri">https://arrows.app/</ext-link>. To provide a general overview of the use of neo4jsbml, some examples of models embedded in the SBML specifications are shown in <xref rid="supp-1" ref-type="supplementary-material">Figs. S1</xref>, <xref rid="supp-2" ref-type="supplementary-material">S2</xref>, and <xref rid="supp-3" ref-type="supplementary-material">S3</xref>.</p>
      <p>Neo4j version 5.12 and neo4jsbml version 0.12.0 (<ext-link xlink:href="http://dx.doi.org/10.5281/zenodo.8419209" ext-link-type="uri">10.5281/zenodo.8419209</ext-link>) were used for this study.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>We developed neo4jsbml as a modular Python package that can be used as a standalone program or incorporated as a library in other programs. It is available through the Conda package management system (<xref rid="ref-6" ref-type="bibr">conda-forge community, 2015</xref>) and runs on all platforms without requiring extra privileges. SBML files are loaded by neo4jsbml, using the libsbml library (<xref rid="ref-2" ref-type="bibr">Bornstein et al., 2008</xref>), and the selected data will be loaded into the Neo4j database using the Python Neo4j driver, based on a database schema. Twelve packages are part or will be part of the SBML standard, but only eight have been fully implemented by the library libsbml. Neo4jsbml can consider four plugins: Flux Balance Constraints (<xref rid="ref-21" ref-type="bibr">Olivier &amp; Bergmann, 2018</xref>), Groups (<xref rid="ref-13" ref-type="bibr">Hucka &amp; Smith, 2016</xref>), Layout (<xref rid="ref-8" ref-type="bibr">Gauges et al., 2015</xref>) and Qualitative Models (<xref rid="ref-3" ref-type="bibr">Chaouiya et al., 2015</xref>) (<xref rid="supp-4" ref-type="supplementary-material">Table S1</xref>). Importing data into Neo4j is done through pure Cypher queries, with no additional Neo4j plugins necessary.</p>
    <p>To demonstrate the usefulness of neo4jsbml, we conducted a proof of concept study with three use cases.</p>
    <sec>
      <title>Comparing two models</title>
      <p>We compared two versions of the <italic toggle="yes">E. coli</italic> genome-scale metabolic model to highlight improvements between an older and a newer version from two repositories: BiGG and MetaNetX. Firstly, we compared the number of nodes and relationships in both models (<xref rid="table-1" ref-type="table">Table 1</xref>). More than four thousand entities and twenty thousand relationships were loaded into Neo4j from the <italic toggle="yes">E. coli</italic> genome-scale models, iML1515 and iAF1260. Given one version of <italic toggle="yes">E. coli</italic>, the number of chemical species and reactions differed between the BiGG and MetaNetX databases. In addition, the iML1515 genome-scale metabolic model contained more nodes and relationships compared to the iAF1260 genome-scale metabolic model.</p>
      <table-wrap position="float" id="table-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/table-1</object-id>
        <label>Table 1</label>
        <caption>
          <title>Number of entities and relationships loaded in Neo4j for the iAF1260 and iML1515 GEMs provided by the BiGG and MetaNetX databases.</title>
          <p>Nodes are in lowercase, relationships are in uppercase.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-12-16726-g007" position="float"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th align="center" colspan="2" rowspan="1">BiGG</th>
                <th align="center" colspan="2" rowspan="1">MetaNetX</th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Node/Relationship</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Compartment</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Species</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Parameter</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Reaction</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Model</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">UnitDefinition</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">GeneProduct</td>
                <td rowspan="1" colspan="1">1261</td>
                <td rowspan="1" colspan="1">1516</td>
                <td rowspan="1" colspan="1">1262</td>
                <td rowspan="1" colspan="1">1517</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IN_COMPARTMENT</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PRODUCT</td>
                <td rowspan="1" colspan="1">4714</td>
                <td rowspan="1" colspan="1">5328</td>
                <td rowspan="1" colspan="1">4920</td>
                <td rowspan="1" colspan="1">5529</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_LOWERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UPPERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PARAMETER</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UNIT</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_IMPLIED</td>
                <td rowspan="1" colspan="1">3747</td>
                <td rowspan="1" colspan="1">4624</td>
                <td rowspan="1" colspan="1">3750</td>
                <td rowspan="1" colspan="1">4627</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_REACTANT</td>
                <td rowspan="1" colspan="1">4517</td>
                <td rowspan="1" colspan="1">5247</td>
                <td rowspan="1" colspan="1">4553</td>
                <td rowspan="1" colspan="1">5242</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <p>Next, we analyzed the reactions associated with the fumarate metabolite (<xref rid="fig-4" ref-type="fig">Fig. 4</xref>). The Cypher query is described in Eq. (1).</p>
      <fig position="float" id="fig-4">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-4</object-id>
        <label>Figure 4</label>
        <caption>
          <title>Visualization of the fumarate metabolite (blue) and its nearest neighbors: reactions (orange) and compartment (purple) in two models (iAF1260 on the left and iML1515 on the right) sequentially imported into Neo4j by neo4jsbml.</title>
          <p>The reaction, <italic toggle="yes">Fumarate dependent DHORD</italic>, was only shown in the iML1515 model.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g004" position="float"/>
      </fig>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i001.jpg" content-type="symbol"/>
      </p>
      <p>One additional reaction was linked to the fumarate metabolite in the iML1515 model compared to the iAF1260 model.</p>
    </sec>
    <sec>
      <title>Viewing a metabolic pathway</title>
      <p>A common application with a metabolic network is to visualize biological pathways derived from genome-scale models. In this case, the phosphoenolpyruvate metabolite was targeted to identify the chemical species in the extracellular compartment that produce it through exactly two reactions in the core model of <italic toggle="yes">E. coli</italic>. Firstly, the entire genome-scale model was imported into Neo4j.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i002.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i003.jpg" content-type="symbol"/>
      </p>
      <p>Then, the reactions, metabolites, and compartments involved in the metabolic pathway were extracted using two consecutive Cypher queries: dense nodes were flagged Eq. (2) and the paths were selected Eq. (3). With the constraints defined above, the Pyruvate metabolite was identified as a key player (<xref rid="fig-5" ref-type="fig">Fig. 5</xref>).</p>
    </sec>
    <sec>
      <title>Enumerate metabolic pathways</title>
      <p>The enumeration of metabolic pathways identifies and lists all the possible routes of biochemical reactions within a metabolic network. From the core model of <italic toggle="yes">E. coli</italic>, pathways involving the Formate and the Acetaldehyde metabolites were searched. <italic toggle="yes">Species</italic>, <italic toggle="yes">SpeciesReference</italic> and <italic toggle="yes">Reaction</italic> entities were loaded into Neo4j from the genome-scale model.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i004.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i005.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i006.jpg" content-type="symbol"/>
      </p>
      <p>Then, graph reconstruction was performed by merging the <italic toggle="yes">Species</italic> and <italic toggle="yes">SpeciesReference</italic> nodes Eq. (4) and removing <italic toggle="yes">Species</italic> that were linked to fewer than four reactions Eq. (5) . Next, the neo4jefmtool plugin was used to enumerate the pathways involving the Fumarate and the Acetaldehyde metabolites Eq. (6). The two pathways identified are shown in the <xref rid="fig-6" ref-type="fig">Fig. 6</xref>.</p>
      <fig position="float" id="fig-5">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-5</object-id>
        <label>Figure 5</label>
        <caption>
          <title>Thanks to Neo4j and neo4jsbml, the phosphoenolpyruvate metabolite and its precursors implicated in exactly two reactions in the <italic toggle="yes">Escherichia coli</italic> core model (e_coli_core) were visualized.</title>
          <p>The Pyruvate metabolite was directly involved in the production of Phosphoenolpyruvate without any circular dependency.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g005" position="float"/>
      </fig>
      <fig position="float" id="fig-6">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-6</object-id>
        <label>Figure 6</label>
        <caption>
          <title>Two pathways were identified in the <italic toggle="yes">E. coli</italic> core model.</title>
          <p>(A) A first pathway linking the Formate to the Acetaldehyde metabolites was extracted. (B) A second pathway linking the Formate to the Ethanol metabolites was identified.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g006" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Discussions</title>
    <p>Comparing genome-scale models, viewing metabolic networks and enumerating pathways are common applications in systems biology. On the one hand, biological processes are stored in the SBML format. On the other hand, Neo4j is a powerful graph database suited to link related entities, using the Cypher language. Neo4jsbml aims to conciliate both. The first use case showed the capability to perform quantitative and qualitative analysis on genome-scale models. Neo4j has a comprehensive set of features, as described by <xref rid="ref-15" ref-type="bibr">King et al. (2015)</xref> which include the ability to navigate and search through visualizations, design and customize pathway maps, and represent diverse data types. The second example highlights the ability of Neo4j to serve as an alternative viewer for visualizing metabolic pathways. The last illustration emphasizes the capacity of neo4jsbml to retain the required data and the strength of Neo4j to conduct specialized analyses.</p>
    <p>Neo4jsbml employs a novel approach based on the creation of schema entities to identify entities that are useful for a dedicated application. Introspection is a programmatic principle that maps the schema of certain entities to a model to extract desired data. Therefore, neo4jsbml can deal with Level 2 Version 5 of the SBML standard (<xref rid="supp-3" ref-type="supplementary-material">Fig. S3</xref>) and partially with SBML packages (<xref rid="supp-2" ref-type="supplementary-material">Fig. S2</xref>). Our aim was to develop a tool that is as simple as possible, requiring only command-line skills.</p>
    <p>However, as we observed for the use cases, the more complex the application, the more intricate the Cypher queries to perform graph refactoring or to extract the data. Additionally, programming skills may be required to develop extensions to perform dedicated analyses. In rare circumstances, data imported into Neo4j can produce unexpected results. The first scenario is shown in <xref rid="supp-3" ref-type="supplementary-material">Fig. S3J</xref>. The model has two <italic toggle="yes">Event</italic> entities, each with one <italic toggle="yes">Event Assignment</italic> entity that supports the <italic toggle="yes">variable</italic> property. Without setting an <italic toggle="yes">id</italic> property for each <italic toggle="yes">Event Assignment</italic>, in the model, it would be difficult to infer the wishes of the user. The second scenario concerns the model presented in <xref rid="supp-2" ref-type="supplementary-material">Fig. S2C</xref>. The <italic toggle="yes">Layout</italic> entity is linked to its <italic toggle="yes">Dimensions</italic> entity as well as to all other <italic toggle="yes">Dimensions</italic> entities found in the model. In these cases, a prior modification of the model or graph refactoring in Neo4j is required to meet expectations. In addition, if several models are loaded sequentially into the database, some entities can be the same, and the relationships between the models are mixed. Neo4jsbml alleviates this difficulty by adding an additional identifier to all imported entities.</p>
    <p>The SBML standard represents mathematical expressions using MathML and annotations using the Resource Description Framework by adding XML elements to the model. Neo4jsbml extracts mathematical expressions as strings whereas annotations are loaded with XML tags.</p>
    <p>However, neo4jsbml is highly dependent on the web application Arrows to create the schema of entities. To ensure a long-term future, neo4jsbml will need to support at least one other tool to provide the schema of entities. In addition, neo4jsbml uses simple Cypher queries to import data into Neo4j. It would be valuable to load data into another graph database using Cypher.</p>
    <p>More broadly, introspection-based programming patterns can be used to extract information from other standards and import the required data into sql, no-sql or graph-oriented databases.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>Neo4jsbml is a user-friendly Python package and it takes advantage of existing software to define the database schema, parse SBML files, and import the data into the Neo4j database. The three use cases demonstrated the benefits of visualizing SBML data as a graph. The biological processes, specified thanks to SBML standard, contain intricate interactions between biological entities, and Neo4j’s graph represents these relationships with nodes and edges, making it easier to analyze and visualize complex biological networks. Using Cypher, exploring data through statistics or creating subgraphs was intuitive. With the help of the schema database and introspection concept, only relevant information is loaded into the database. We foresee neo4jsbml as an essential tool for bridging the gap between SBML data and Neo4j. It will enable researchers to visualize and analyze relationships between different entities and fully leverage the capabilities of Neo4j.</p>
  </sec>
  <sec sec-type="supplementary-material" id="supplemental-information">
    <title>Supplemental Information</title>
    <supplementary-material id="supp-1" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-1</object-id>
      <label>Supplemental Information 1</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications, Level 3 Version 2, then they were loaded into Neo4j</title>
        <p>The Arrows schema used and all nodes and relationships extracted from Neo4j were shown for each example. (A) A simple example application of SBML. (B) A simple example using the conversionFactor attribute. (C) An alternative formulation of the conversionFactor example. (D) Example of a discrete version of a simple dimerization reaction. (E) Example involving assignment rules. (F) Example involving algebraic rules. (G) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (H) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (I) Example involving function definitions. (J) Example involving delay functions. (K) Example involving events (L) Example involving two-dimensional compartments. (M) Example of a reaction located at a membrane. (N) Example using an event with a non-persistent trigger and a delay.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-2" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-2</object-id>
      <label>Supplemental Information 2</label>
      <caption>
        <title>SBML models were extracted from the SBML specifications, then they were loaded into Neo4j</title>
        <p>The Arrows schema used, and all nodes and relationships extracted from Neo4j, were shown for each example. (A) Model extracted from Chapter 4, Example 1 of the Flux Balance Constraints specification package. (B) Model extracted from Chapter 5, Example 2 of the Groups specification package. (C) Model extracted from Chapter 4, Example 5 of the Layout specification package. (D) Model extracted from Chapter 4, Example 2 of the Qualitative Models specification package.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-3" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-3</object-id>
      <label>Supplemental Information 3</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications Level 2 Version 5, then they were loaded into Neo4j</title>
        <p>The Arrows schema used then all the nodes and relationships were shown for each example. (A) A simple example application of SBML. (B) Example involving units. (C) Example of a discrete version of a simple dimerization reaction. (D) Example involving assignment rules. (E) Example involving algebraic rules. (F) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (G) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (H) Example involving function definitions. (I) Example involving delay functions. (J) Example involving events. (K) Example involving two-dimensional compartments.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-4" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-4</object-id>
      <label>Supplemental Information 4</label>
      <caption>
        <title>Current status of SBML packages according to the SBML webpage</title>
        <p>Status indicated as available are in green, in progress or in development are in orange, and those which are not available are in red.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank the CATI SysMics workgroup from INRAE. We thank the editor, Ron Henkel, and the anonymous reviewers for their valuable insights.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn id="conflict-1" fn-type="COI-statement">
        <p>The authors declare there are no competing interests.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn id="contribution-1" fn-type="con">
        <p><xref rid="author-1" ref-type="contrib">Guillaume Gricourt</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-2" fn-type="con">
        <p><xref rid="author-2" ref-type="contrib">Thomas Duigou</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-3" fn-type="con">
        <p><xref rid="author-3" ref-type="contrib">Sandra Dérozier</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-4" fn-type="con">
        <p><xref rid="author-4" ref-type="contrib">Jean-Loup Faulon</xref> conceived and designed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>The software is available at GitHub, Zenodo, and Anaconda:</p>
        <p>- <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>
</p>
        <p>- Gricourt, G. (2023). neo4jsbml dataset [Data set]. Zenodo. <ext-link xlink:href="https://doi.org/10.5281/zenodo.10245426" ext-link-type="uri">https://doi.org/10.5281/zenodo.10245426</ext-link>
</p>
        <p>- <ext-link xlink:href="https://anaconda.org/conda-forge/neo4jsbml" ext-link-type="uri">https://anaconda.org/conda-forge/neo4jsbml</ext-link>.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Balaur et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Balaur</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mazein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saqi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lysenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rawlings</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Auffray</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>Recon2Neo4j: applying graph database technologies for managing comprehensive genome-scale networks</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1096</fpage>
        <lpage>1098</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw731</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Bornstein et al. (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bornstein</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Jouraku</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>LibSBML: an API Library for SBML</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>6</issue>
        <fpage>880</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn051</pub-id>
        <pub-id pub-id-type="pmid">18252737</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Chaouiya et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Berenguier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Naldi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thieffry</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Iersel</surname>
            <given-names>MPV</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Helikar</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>SBML level 3 package: qualitative models, version 1, release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>691</fpage>
        <lpage>730</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-270</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Choi et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Choi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Medley</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stocking</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Gu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Tellurium: an extensible python-based modeling environment for systems and synthetic biology</article-title>
        <source>Biosystems</source>
        <volume>171</volume>
        <fpage>74</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2018.07.006</pub-id>
        <pub-id pub-id-type="pmid">30053414</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Clerx et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clerx</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cooling</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Garny</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moyle</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>PMF</given-names>
          </name>
          <name>
            <surname>Sorby</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>CellML 2.0</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>17</volume>
        <issue>2–3</issue>
        <fpage>20200021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2020-0021</pub-id>
        <pub-id pub-id-type="pmid">32759406</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>conda-forge community (2015)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <collab>conda-forge community</collab>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The conda-forge project: community-based software distribution built on the conda package format and ecosystem</article-title>
        <source>Zenodo</source>
        <pub-id pub-id-type="doi">10.5281/ZENODO.4774216</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Feist et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Henry</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Reed</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Krummenacker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Joyce</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Broadbelt</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Hatzimanikatis</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2007">2007</year>
        <article-title>A genome-scale metabolic reconstruction for <italic toggle="yes">Escherichia coli</italic> K-12 MG1655 that accounts for 1260 ORFs and thermodynamic information</article-title>
        <source>Molecular Systems Biology</source>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>121</fpage>
        <pub-id pub-id-type="doi">10.1038/msb4100155</pub-id>
        <pub-id pub-id-type="pmid">17593909</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Gauges et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rost</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wengler</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The systems biology markup language (SBML) level 3 package: layout, version 1 core</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>550</fpage>
        <lpage>602</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-267</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Haiman et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haiman</surname>
            <given-names>ZB</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Koike</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yurkovich</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MASSpy: building, simulating, and visualizing dynamic biological models in Python using mass action kinetics</article-title>
        <source>PLOS Computational Biology</source>
        <volume>17</volume>
        <issue>1</issue>
        <elocation-id>e1008208</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1008208</pub-id>
        <pub-id pub-id-type="pmid">33507922</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Henkel, Wolkenhauer &amp; Waltemath (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Combining computational models, semantic annotations and simulation experiments in a graph database</article-title>
        <source>Database</source>
        <volume>2015</volume>
        <fpage>bau130</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bau130</pub-id>
        <pub-id pub-id-type="pmid">25754863</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Hoops et al. (2006)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simus</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Singhal</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kummer</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2006">2006</year>
        <article-title>COPASI—a COmplex PAthway SImulator</article-title>
        <source>Bioinformatics</source>
        <volume>22</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>3074</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Hucka et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Novère</surname>
            <given-names>NL</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schaff</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Sheriff</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wilkinson</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>The systems biology markup language (SBML): language specification for level 3 version 2 core release 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>16</volume>
        <issue>2</issue>
        <fpage>20190021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2019-0021</pub-id>
        <pub-id pub-id-type="pmid">31219795</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Hucka &amp; Smith (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>SBML level 3 package: groups, version 1 release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>13</volume>
        <issue>3</issue>
        <fpage>8</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2016-290</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Kazerouni et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kazerouni</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Gadde</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hormuth</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Jarrett</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Lima</surname>
            <given-names>EAF</given-names>
          </name>
          <name>
            <surname>Lorenzo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Phillips</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Brock</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Yankeelov</surname>
            <given-names>TE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>Integrating quantitative assays with biologically based mathematical modeling for predictive oncology</article-title>
        <source>IScience</source>
        <volume>23</volume>
        <issue>12</issue>
        <elocation-id>101807</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.isci.2020.101807</pub-id>
        <pub-id pub-id-type="pmid">33299976</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>King et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Drager</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sonnenschein</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Escher: a web application for building, sharing, and embedding data rich visualizations of biological pathways</article-title>
        <source>PLOS Computational Biology</source>
        <volume>11</volume>
        <issue>8</issue>
        <elocation-id>e1004321</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004321</pub-id>
        <pub-id pub-id-type="pmid">26313928</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>King et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Federowicz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lerman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D515</fpage>
        <lpage>D522</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>
        <pub-id pub-id-type="pmid">26476456</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Lambusch et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lambusch</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Sandkuhl</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Rosenke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Identifying frequent patterns in biochemical reaction networks: a workflow</article-title>
        <source>Database</source>
        <volume>2018</volume>
        <fpage>bay051</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bay051</pub-id>
        <pub-id pub-id-type="pmid">29992320</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Meier &amp; Kaufmann (2019)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Meier</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kaufmann</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>Ensuring data consistency</article-title>
        <source>SQL &amp; NoSQL databases</source>
        <publisher-name>Springer Fachmedien Wiesbaden</publisher-name>
        <publisher-loc>Wiesbaden</publisher-loc>
        <fpage>123</fpage>
        <lpage>142</lpage>
        <pub-id pub-id-type="doi">10.1007/978-3-658-24549-8_4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Monk et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Monk</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Lloyd</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Brunk</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Mih</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sastry</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Takeuchi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nomura</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Mori</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>iML1515, a knowledgebase that computes Escherichia coli traits</article-title>
        <source>Nature Biotechnology</source>
        <volume>35</volume>
        <issue>10</issue>
        <fpage>904</fpage>
        <lpage>908</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3956</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Moretti et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moretti</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tran</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Mehl</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Ibberson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pagni</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MetaNetX/MNXref: unified namespace for metabolites and biochemical reactions in the context of metabolic models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>49</volume>
        <issue>D1</issue>
        <fpage>D570</fpage>
        <lpage>D574</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkaa992</pub-id>
        <pub-id pub-id-type="pmid">33156326</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Olivier &amp; Bergmann (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>SBML level 3 package: flux balance constraints version 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>20170081</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>
        <pub-id pub-id-type="pmid">29522418</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Qiu, Yang &amp; Zeng (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qiu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Flux balance analysis-based metabolic modeling of microbial secondary metabolism: current status and outlook</article-title>
        <source>PLOS Computational Biology</source>
        <volume>19</volume>
        <issue>8</issue>
        <elocation-id>e1011391</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1011391</pub-id>
        <pub-id pub-id-type="pmid">37619239</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Rodriguez et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Watanabe</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Vazirabad</surname>
            <given-names>IY</given-names>
          </name>
          <name>
            <surname>Kofia</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gómez</surname>
            <given-names>HF</given-names>
          </name>
          <name>
            <surname>Mittag</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Matthes</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rudolph</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Netz</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Diamantikos</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Eichner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keller</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Fröhlich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>JSBML 1.0: providing a smorgasbord of options to encode systems biology models</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <issue>20</issue>
        <fpage>3383</fpage>
        <lpage>3386</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv341</pub-id>
        <pub-id pub-id-type="pmid">26079347</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Shen et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kohlhaas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Enoki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Meier</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Schönenberger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wohlgemuth</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Kourist</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Niekerk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bräsen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Siebers</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>A combined experimental and modelling approach for the Weimberg pathway optimisation</article-title>
        <source>Nature Communications</source>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1098</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-14830-y</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-25">
      <label>Shin et al. (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Carothers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Standards, dissemination, and best practices in systems biology</article-title>
        <source>Current Opinion in Biotechnology</source>
        <volume>81</volume>
        <elocation-id>102922</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.copbio.2023.102922</pub-id>
        <pub-id pub-id-type="pmid">37004298</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-26">
      <label>Swainston et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Swainston</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Batista-Navarro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Carbonell</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Dobson</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Dunstan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jervis</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Vinaixa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Ananiadou</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Faulon</surname>
            <given-names>J-L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kell</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Scrutton</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Breitling</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>biochem4j: integrated and extensible biochemical knowledge through graph databases</article-title>
        <source>PLOS ONE</source>
        <volume>12</volume>
        <issue>7</issue>
        <elocation-id>e0179130</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0179130</pub-id>
        <pub-id pub-id-type="pmid">28708831</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-27">
      <label>Terzer &amp; Stelling (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Terzer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stelling</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>Large-scale computation of elementary flux modes with bit pattern trees</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>19</issue>
        <fpage>2229</fpage>
        <lpage>2235</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn401</pub-id>
        <pub-id pub-id-type="pmid">18676417</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-28">
      <label>Waltemath et al. (2011)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolpakov</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Moraru</surname>
            <given-names>II</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2011">2011</year>
        <article-title>Reproducible computational biology experiments with SED-ML—the simulation experiment description markup language</article-title>
        <source>BMC Systems Biology</source>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>198</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-5-198</pub-id>
        <pub-id pub-id-type="pmid">22172142</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">peerj</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10798154</article-id>
    <article-id pub-id-type="publisher-id">16726</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.16726</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Biology</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>neo4jsbml: import systems biology markup language data into the graph database Neo4j</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" corresp="yes">
        <name>
          <surname>Gricourt</surname>
          <given-names>Guillaume</given-names>
        </name>
        <email>guillaume.gricourt@inrae.fr</email>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-2" contrib-type="author">
        <name>
          <surname>Duigou</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-3" contrib-type="author">
        <name>
          <surname>Dérozier</surname>
          <given-names>Sandra</given-names>
        </name>
        <xref rid="aff-2" ref-type="aff">2</xref>
      </contrib>
      <contrib id="author-4" contrib-type="author">
        <name>
          <surname>Faulon</surname>
          <given-names>Jean-Loup</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <aff id="aff-1"><label>1</label><institution>Université Paris-Saclay, INRAE, AgroParisTech, Micalis Institute</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
      <aff id="aff-2"><label>2</label><institution>Université Paris-Saclay, INRAE, MaIAGE</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kant</surname>
          <given-names>Ravi</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>1</month>
      <year iso-8601-date="2024">2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>e16726</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2023-06-22">
        <day>22</day>
        <month>6</month>
        <year iso-8601-date="2023">2023</year>
      </date>
      <date date-type="accepted" iso-8601-date="2023-12-05">
        <day>5</day>
        <month>12</month>
        <year iso-8601-date="2023">2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©2024 Gricourt et al.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <copyright-holder>Gricourt et al.</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/16726"/>
    <abstract>
      <p>Systems Biology Markup Language (SBML) has emerged as a standard for representing biological models, facilitating model sharing and interoperability. It stores many types of data and complex relationships, complicating data management and analysis. Traditional database management systems struggle to effectively capture these complex networks of interactions within biological systems. Graph-oriented databases perform well in managing interactions between different entities. We present neo4jsbml, a new solution that bridges the gap between the Systems Biology Markup Language data and the Neo4j database, for storing, querying and analyzing data. The Systems Biology Markup Language organizes biological entities in a hierarchical structure, reflecting their interdependencies. The inherent graphical structure represents these hierarchical relationships, offering a natural and efficient means of navigating and exploring the model’s components. Neo4j is an excellent solution for handling this type of data. By representing entities as nodes and their relationships as edges, Cypher, Neo4j’s query language, efficiently traverses this type of graph representing complex biological networks. We have developed neo4jsbml, a Python library for importing Systems Biology Markup Language data into a Neo4j database using a user-defined schema. By leveraging Neo4j’s graphical database technology, exploration of complex biological networks becomes intuitive and information retrieval efficient. Neo4jsbml is a tool designed to import Systems Biology Markup Language data into a Neo4j database. Only the desired data is loaded into the Neo4j database. neo4jsbml is user-friendly and can become a useful new companion for visualizing and analyzing metabolic models through the Neo4j graphical database. neo4jsbml is open source software and available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>SBML</kwd>
      <kwd>Neo4j</kwd>
      <kwd>Database</kwd>
      <kwd>Neo4jsbml</kwd>
      <kwd>Genome-scale metabolic model</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>A French government grant managed by the Agence Nationale de la Recherche under the France 2030 program</funding-source>
        <award-id> ANR-22-PEBB-0008</award-id>
      </award-group>
      <funding-statement>This work was supported by a French government grant managed by the Agence Nationale de la Recherche under the France 2030 program, reference ANR-22-PEBB-0008. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Genome-Scale Metabolic Models (GEMs) of biological systems are commonly represented using the Systems Biology Markup Language (SBML) format. This format is actively maintained and updated, especially, by adding new features to meet new needs. Using a standard format facilitates interoperability repeatability, and reproducibility. Several standards have emerged in systems biology (<xref rid="ref-25" ref-type="bibr">Shin et al., 2023</xref>). The CellML standard stores computer-based mathematical models (<xref rid="ref-5" ref-type="bibr">Clerx et al., 2020</xref>) and the Simulation Experiment Description Markup Language (SED-ML) (<xref rid="ref-28" ref-type="bibr">Waltemath et al., 2011</xref>) enables the reproduction of simulation experiments. The use of a standard format to represent data enables the creation of a rich software environment such as COPASI (<xref rid="ref-11" ref-type="bibr">Hoops et al., 2006</xref>), Tellurium (<xref rid="ref-4" ref-type="bibr">Choi et al., 2018</xref>) and MASSpy (<xref rid="ref-9" ref-type="bibr">Haiman et al., 2021</xref>) for the construction, simulation, and visualization of dynamic metabolic models. A wide range of issues can be addressed in this way, including the construction of metabolic pathways (<xref rid="ref-24" ref-type="bibr">Shen et al., 2020</xref>), study of secondary metabolism in bacteria (<xref rid="ref-22" ref-type="bibr">Qiu, Yang &amp; Zeng, 2023</xref>) and representation of cell behavior and interactions in cancer (<xref rid="ref-14" ref-type="bibr">Kazerouni et al., 2020</xref>). To represent these types of biological processes, the SBML format encodes several nested components and their interactions in an XML-based document. The standard represents complex systems by organizing the data as components. To illustrate, biological systems can contain thousands of metabolites and reactions, leading to a high level of complexity in their interactions (<xref rid="ref-12" ref-type="bibr">Hucka et al., 2019</xref>). The SBML Level 3 standard is well-suited for describing reaction-based models. To represent different types of models, such as constraint-based, logical network, and rule-based models, the SBML standard has been enhanced using different packages. As described in their specifications, these packages add components or properties to the model.</p>
    <p>Neo4j is a powerful graph database that enables the storage, querying, and analysis of large amounts of data. Unlike relational databases, Neo4j leverages the power of graph theory, representing data as nodes or relationships which embed properties to store additional information. The graph-based structure is well-suited to tackle intricate relationships and decipher complex problems, such as social networks and network analysis. The graph query language, named Cypher, allows querying the graph to retrieve connected data and perform create, read, update, or delete operations on the database. Neo4j ensures data integrity and consistency by respecting the ACID principle (<xref rid="ref-18" ref-type="bibr">Meier &amp; Kaufmann, 2019</xref>). Specific capabilities can be added to the Neo4j database through a software extension, a plugin, enabling users to customize and enhance its features for dedicated applications. The Neo4j database comes with a broad ecosystem which includes tools like Arrows for designing the database structure, numerous drivers for communicating with the database, building queries intuitively with Cypher and Bloom for visualizing data.</p>
    <p>With Neo4j, metabolic models can be represented as a network of nodes and relationships, where each node represents a biological or supporting object within a component, such as a metabolite, reaction, or unit definition. Each relationship serves as a connection between two metabolic reactions, enabling easy exploration of different pathways and interactions between human metabolic data (<xref rid="ref-1" ref-type="bibr">Balaur et al., 2016</xref>). Using Neo4j with metabolic models can provide valuable insights into complex interactions, as it allows for the integration of heterogeneous data, such as chemical species, reactions, enzymes, and taxonomic data. This integration can aid in identifying key players across a wide range of biological application domains (<xref rid="ref-26" ref-type="bibr">Swainston et al., 2017</xref>).</p>
    <p>More recently, based on the graph database MaSyMoS, which stores SBML and CellML models to represent biological systems in terms of functional, behavioral, and structural aspects (<xref rid="ref-10" ref-type="bibr">Henkel, Wolkenhauer &amp; Waltemath, 2015</xref>), a protocol was developed to compare biochemical reaction networks (<xref rid="ref-17" ref-type="bibr">Lambusch et al., 2018</xref>). Nonetheless, analyzing its own SBML data using Neo4j remains a challenge. Biochem4j provides a web interface that does not allow users to analyze their data in their database. Recon2Neo4j and MaSyMoS created Java software using the JSBML library (<xref rid="ref-23" ref-type="bibr">Rodriguez et al., 2015</xref>) to import the data into their database. However, data loading is performed according to a predefined schema that retain several SBML components or properties that are targeted by their applications.</p>
    <p>We are presenting neo4jsbml, a user-friendly Python package to import SBML files into a Neo4j database. Neo4jsbml utilizes tools developed by Neo4j to define the database schema, load data, query entities and relationships, and visualize the created graph. This package offers flexibility, extensibility, and ease of use in combining graph databases with SBML files. Flexibility is provided by leaving the choice of entities to be analyzed by the researcher. Extensibility is based on the intrinsic operation of neo4jsbml <italic toggle="yes">via</italic> introspection. Finally, neo4jsbml can be used through the command line and requires no programming skill. The graph can be enriched with heterogeneous data, allowing researchers to build, manipulate, annotate, and store their data with greater efficiency.</p>
  </sec>
  <sec>
    <title>Material and Methods</title>
    <sec>
      <title>Implementation</title>
      <p>SBML data are structured according to the specifications defined by <xref rid="ref-12" ref-type="bibr">Hucka et al. (2019)</xref>. This file format has a skeleton of main components, but optional data can be added through the use of packages. The SBML specification Level 3 Version 2 describes eleven components: function definitions, unit definitions, compartments, species, parameters, initial assignments, rules, constraints, reactions, events and the model. Each component has a specific role and stores specific and generic information. The model component is special, it serves as a container for the other components but also supports some information, such as the identifier of the model, which can be exploited.</p>
      <p>Sometimes, not all components are suitable for analysis. To retain the desirable data from SBML documents, neo4jsbml utilizes the concept of introspection. Introspection allows a program to examine an object’s characteristics, such as its name, properties, and methods, making the program more efficient and robust. It is a powerful feature of object-oriented languages that exposes details about objects at runtime, and Python ships with a few built-in functions for this purpose. When importing SBML data into Neo4j, introspection is used to automate the extraction of properties and associated structured values of items mentioned in a definition schema. In this way, the user filters the main components and attributes to be loaded into the database.</p>
    </sec>
    <sec>
      <title>Running method</title>
      <p>The usage of the tool is described in <xref rid="fig-1" ref-type="fig">Fig. 1</xref>.</p>
      <fig position="float" id="fig-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-1</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Workflow for utilizing neo4jsbml.</title>
          <p>First, a schema is created with <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>. Next, aided by the schema, the SBML data is loaded into the Neo4j database using neo4jsbml. Softwares are green, files are gray, the database is blue.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g001" position="float"/>
      </fig>
      <p>It takes place in two stages. First of all, the user creates a schema defining which entities will be selected from the SBML model (<xref rid="fig-2" ref-type="fig">Fig. 2</xref>). Building a schema requires certain rules, such as mapping the names of different items found in the schema to their corresponding names as defined in the SBML specifications. To illustrate this principle, node labels and node properties indicated in the schema need to match the name of the SBML component and the properties belonging to the component, respectively. Given this information, neo4jsbml identifies the objects and attributes to extract from the SBML, thanks to the library libsbml. Thus, only the entities required for analysis were loaded into Neo4j. SBML specifications indicate which components are linked to each other by storing an identifier corresponding to another component as an attribute. Therefore, neo4jsbml checks whether the two components are linked by following the strategies shown in <xref rid="fig-3" ref-type="fig">Fig. 3</xref>. However, the Neo4j database operates on a directed graph; therefore, neo4jsbml infers directionality as indicated by the schema. Once the data are imported into Neo4j, the entities and relationships from the SBML model can be queried by Cypher through Neo4j.</p>
      <fig position="float" id="fig-2">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Schemas created from <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>.</title>
          <p>The entities and their relationships are represented by a circle and an arrow, respectively. Node label matches the name of a SBML component. Each node embeds the targeted properties. Types associated to each property are optional. (A) This schema represents various entities found in genome-scale models. (B) This schema is focused on the extraction of a metabolic network.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g002" position="float"/>
      </fig>
      <fig position="float" id="fig-3">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-3</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Examples of schemas illustrating how neo4jsbml uses introspection to associate one entity with another.</title>
          <p>(A) The object <italic toggle="yes">libsbml.Species</italic> has a method named <italic toggle="yes">getCompartment()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.Compartment</italic> object. The mapping between these entities is established by calling a method based on the name of one entity. (B) The object <italic toggle="yes">libsbml.LocalParameter</italic> has a method named <italic toggle="yes">getUnits()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.UnitDefinition</italic> object. The linkage between these entities is possible thanks to the name of the relationship. (C) The objects in the libsbml library have a method named <italic toggle="yes">getListOfAllElements()</italic> that leads to list some nested components. The <italic toggle="yes">libsbml.Reaction</italic> object can host several objects, including a <italic toggle="yes">libsbml.LocalParameter</italic> object. The relationship is created according to the name of the entities.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g003" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>Use cases</title>
      <p>To illustrate the power of neo4jsbml, three use cases were performed involving three <italic toggle="yes">Escherichia coli</italic> GEMs. The first one, called iAF1260, was published in 2007 (<xref rid="ref-7" ref-type="bibr">Feist et al., 2007</xref>). The second one, named iML1515, was established in 2017 (<xref rid="ref-19" ref-type="bibr">Monk et al., 2017</xref>). The last one, a small-scale model baptized e_coli_core was derived from an <italic toggle="yes">E. coli</italic> model. All models were downloaded from the BiGG Models knowledgebase (<xref rid="ref-16" ref-type="bibr">King et al., 2016</xref>) and the MetaNetX database (<xref rid="ref-20" ref-type="bibr">Moretti et al., 2021</xref>).</p>
      <p>A Neo4j plugin, named neo4jefmtool, based on efmtool (<xref rid="ref-27" ref-type="bibr">Terzer &amp; Stelling, 2008</xref>) was created to enumerate the metabolic pathways, available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
      <p>The schema described in <xref rid="fig-2" ref-type="fig">Fig. 2A</xref> was used to import data into Neo4j for the first two use cases, whereas the schema corresponding to <xref rid="fig-2" ref-type="fig">Fig. 2B</xref> was used for the last case. Both schemas were created using Arrows, available at <ext-link xlink:href="https://arrows.app/" ext-link-type="uri">https://arrows.app/</ext-link>. To provide a general overview of the use of neo4jsbml, some examples of models embedded in the SBML specifications are shown in <xref rid="supp-1" ref-type="supplementary-material">Figs. S1</xref>, <xref rid="supp-2" ref-type="supplementary-material">S2</xref>, and <xref rid="supp-3" ref-type="supplementary-material">S3</xref>.</p>
      <p>Neo4j version 5.12 and neo4jsbml version 0.12.0 (<ext-link xlink:href="http://dx.doi.org/10.5281/zenodo.8419209" ext-link-type="uri">10.5281/zenodo.8419209</ext-link>) were used for this study.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>We developed neo4jsbml as a modular Python package that can be used as a standalone program or incorporated as a library in other programs. It is available through the Conda package management system (<xref rid="ref-6" ref-type="bibr">conda-forge community, 2015</xref>) and runs on all platforms without requiring extra privileges. SBML files are loaded by neo4jsbml, using the libsbml library (<xref rid="ref-2" ref-type="bibr">Bornstein et al., 2008</xref>), and the selected data will be loaded into the Neo4j database using the Python Neo4j driver, based on a database schema. Twelve packages are part or will be part of the SBML standard, but only eight have been fully implemented by the library libsbml. Neo4jsbml can consider four plugins: Flux Balance Constraints (<xref rid="ref-21" ref-type="bibr">Olivier &amp; Bergmann, 2018</xref>), Groups (<xref rid="ref-13" ref-type="bibr">Hucka &amp; Smith, 2016</xref>), Layout (<xref rid="ref-8" ref-type="bibr">Gauges et al., 2015</xref>) and Qualitative Models (<xref rid="ref-3" ref-type="bibr">Chaouiya et al., 2015</xref>) (<xref rid="supp-4" ref-type="supplementary-material">Table S1</xref>). Importing data into Neo4j is done through pure Cypher queries, with no additional Neo4j plugins necessary.</p>
    <p>To demonstrate the usefulness of neo4jsbml, we conducted a proof of concept study with three use cases.</p>
    <sec>
      <title>Comparing two models</title>
      <p>We compared two versions of the <italic toggle="yes">E. coli</italic> genome-scale metabolic model to highlight improvements between an older and a newer version from two repositories: BiGG and MetaNetX. Firstly, we compared the number of nodes and relationships in both models (<xref rid="table-1" ref-type="table">Table 1</xref>). More than four thousand entities and twenty thousand relationships were loaded into Neo4j from the <italic toggle="yes">E. coli</italic> genome-scale models, iML1515 and iAF1260. Given one version of <italic toggle="yes">E. coli</italic>, the number of chemical species and reactions differed between the BiGG and MetaNetX databases. In addition, the iML1515 genome-scale metabolic model contained more nodes and relationships compared to the iAF1260 genome-scale metabolic model.</p>
      <table-wrap position="float" id="table-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/table-1</object-id>
        <label>Table 1</label>
        <caption>
          <title>Number of entities and relationships loaded in Neo4j for the iAF1260 and iML1515 GEMs provided by the BiGG and MetaNetX databases.</title>
          <p>Nodes are in lowercase, relationships are in uppercase.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-12-16726-g007" position="float"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th align="center" colspan="2" rowspan="1">BiGG</th>
                <th align="center" colspan="2" rowspan="1">MetaNetX</th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Node/Relationship</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Compartment</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Species</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Parameter</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Reaction</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Model</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">UnitDefinition</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">GeneProduct</td>
                <td rowspan="1" colspan="1">1261</td>
                <td rowspan="1" colspan="1">1516</td>
                <td rowspan="1" colspan="1">1262</td>
                <td rowspan="1" colspan="1">1517</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IN_COMPARTMENT</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PRODUCT</td>
                <td rowspan="1" colspan="1">4714</td>
                <td rowspan="1" colspan="1">5328</td>
                <td rowspan="1" colspan="1">4920</td>
                <td rowspan="1" colspan="1">5529</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_LOWERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UPPERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PARAMETER</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UNIT</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_IMPLIED</td>
                <td rowspan="1" colspan="1">3747</td>
                <td rowspan="1" colspan="1">4624</td>
                <td rowspan="1" colspan="1">3750</td>
                <td rowspan="1" colspan="1">4627</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_REACTANT</td>
                <td rowspan="1" colspan="1">4517</td>
                <td rowspan="1" colspan="1">5247</td>
                <td rowspan="1" colspan="1">4553</td>
                <td rowspan="1" colspan="1">5242</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <p>Next, we analyzed the reactions associated with the fumarate metabolite (<xref rid="fig-4" ref-type="fig">Fig. 4</xref>). The Cypher query is described in Eq. (1).</p>
      <fig position="float" id="fig-4">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-4</object-id>
        <label>Figure 4</label>
        <caption>
          <title>Visualization of the fumarate metabolite (blue) and its nearest neighbors: reactions (orange) and compartment (purple) in two models (iAF1260 on the left and iML1515 on the right) sequentially imported into Neo4j by neo4jsbml.</title>
          <p>The reaction, <italic toggle="yes">Fumarate dependent DHORD</italic>, was only shown in the iML1515 model.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g004" position="float"/>
      </fig>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i001.jpg" content-type="symbol"/>
      </p>
      <p>One additional reaction was linked to the fumarate metabolite in the iML1515 model compared to the iAF1260 model.</p>
    </sec>
    <sec>
      <title>Viewing a metabolic pathway</title>
      <p>A common application with a metabolic network is to visualize biological pathways derived from genome-scale models. In this case, the phosphoenolpyruvate metabolite was targeted to identify the chemical species in the extracellular compartment that produce it through exactly two reactions in the core model of <italic toggle="yes">E. coli</italic>. Firstly, the entire genome-scale model was imported into Neo4j.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i002.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i003.jpg" content-type="symbol"/>
      </p>
      <p>Then, the reactions, metabolites, and compartments involved in the metabolic pathway were extracted using two consecutive Cypher queries: dense nodes were flagged Eq. (2) and the paths were selected Eq. (3). With the constraints defined above, the Pyruvate metabolite was identified as a key player (<xref rid="fig-5" ref-type="fig">Fig. 5</xref>).</p>
    </sec>
    <sec>
      <title>Enumerate metabolic pathways</title>
      <p>The enumeration of metabolic pathways identifies and lists all the possible routes of biochemical reactions within a metabolic network. From the core model of <italic toggle="yes">E. coli</italic>, pathways involving the Formate and the Acetaldehyde metabolites were searched. <italic toggle="yes">Species</italic>, <italic toggle="yes">SpeciesReference</italic> and <italic toggle="yes">Reaction</italic> entities were loaded into Neo4j from the genome-scale model.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i004.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i005.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i006.jpg" content-type="symbol"/>
      </p>
      <p>Then, graph reconstruction was performed by merging the <italic toggle="yes">Species</italic> and <italic toggle="yes">SpeciesReference</italic> nodes Eq. (4) and removing <italic toggle="yes">Species</italic> that were linked to fewer than four reactions Eq. (5) . Next, the neo4jefmtool plugin was used to enumerate the pathways involving the Fumarate and the Acetaldehyde metabolites Eq. (6). The two pathways identified are shown in the <xref rid="fig-6" ref-type="fig">Fig. 6</xref>.</p>
      <fig position="float" id="fig-5">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-5</object-id>
        <label>Figure 5</label>
        <caption>
          <title>Thanks to Neo4j and neo4jsbml, the phosphoenolpyruvate metabolite and its precursors implicated in exactly two reactions in the <italic toggle="yes">Escherichia coli</italic> core model (e_coli_core) were visualized.</title>
          <p>The Pyruvate metabolite was directly involved in the production of Phosphoenolpyruvate without any circular dependency.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g005" position="float"/>
      </fig>
      <fig position="float" id="fig-6">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-6</object-id>
        <label>Figure 6</label>
        <caption>
          <title>Two pathways were identified in the <italic toggle="yes">E. coli</italic> core model.</title>
          <p>(A) A first pathway linking the Formate to the Acetaldehyde metabolites was extracted. (B) A second pathway linking the Formate to the Ethanol metabolites was identified.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g006" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Discussions</title>
    <p>Comparing genome-scale models, viewing metabolic networks and enumerating pathways are common applications in systems biology. On the one hand, biological processes are stored in the SBML format. On the other hand, Neo4j is a powerful graph database suited to link related entities, using the Cypher language. Neo4jsbml aims to conciliate both. The first use case showed the capability to perform quantitative and qualitative analysis on genome-scale models. Neo4j has a comprehensive set of features, as described by <xref rid="ref-15" ref-type="bibr">King et al. (2015)</xref> which include the ability to navigate and search through visualizations, design and customize pathway maps, and represent diverse data types. The second example highlights the ability of Neo4j to serve as an alternative viewer for visualizing metabolic pathways. The last illustration emphasizes the capacity of neo4jsbml to retain the required data and the strength of Neo4j to conduct specialized analyses.</p>
    <p>Neo4jsbml employs a novel approach based on the creation of schema entities to identify entities that are useful for a dedicated application. Introspection is a programmatic principle that maps the schema of certain entities to a model to extract desired data. Therefore, neo4jsbml can deal with Level 2 Version 5 of the SBML standard (<xref rid="supp-3" ref-type="supplementary-material">Fig. S3</xref>) and partially with SBML packages (<xref rid="supp-2" ref-type="supplementary-material">Fig. S2</xref>). Our aim was to develop a tool that is as simple as possible, requiring only command-line skills.</p>
    <p>However, as we observed for the use cases, the more complex the application, the more intricate the Cypher queries to perform graph refactoring or to extract the data. Additionally, programming skills may be required to develop extensions to perform dedicated analyses. In rare circumstances, data imported into Neo4j can produce unexpected results. The first scenario is shown in <xref rid="supp-3" ref-type="supplementary-material">Fig. S3J</xref>. The model has two <italic toggle="yes">Event</italic> entities, each with one <italic toggle="yes">Event Assignment</italic> entity that supports the <italic toggle="yes">variable</italic> property. Without setting an <italic toggle="yes">id</italic> property for each <italic toggle="yes">Event Assignment</italic>, in the model, it would be difficult to infer the wishes of the user. The second scenario concerns the model presented in <xref rid="supp-2" ref-type="supplementary-material">Fig. S2C</xref>. The <italic toggle="yes">Layout</italic> entity is linked to its <italic toggle="yes">Dimensions</italic> entity as well as to all other <italic toggle="yes">Dimensions</italic> entities found in the model. In these cases, a prior modification of the model or graph refactoring in Neo4j is required to meet expectations. In addition, if several models are loaded sequentially into the database, some entities can be the same, and the relationships between the models are mixed. Neo4jsbml alleviates this difficulty by adding an additional identifier to all imported entities.</p>
    <p>The SBML standard represents mathematical expressions using MathML and annotations using the Resource Description Framework by adding XML elements to the model. Neo4jsbml extracts mathematical expressions as strings whereas annotations are loaded with XML tags.</p>
    <p>However, neo4jsbml is highly dependent on the web application Arrows to create the schema of entities. To ensure a long-term future, neo4jsbml will need to support at least one other tool to provide the schema of entities. In addition, neo4jsbml uses simple Cypher queries to import data into Neo4j. It would be valuable to load data into another graph database using Cypher.</p>
    <p>More broadly, introspection-based programming patterns can be used to extract information from other standards and import the required data into sql, no-sql or graph-oriented databases.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>Neo4jsbml is a user-friendly Python package and it takes advantage of existing software to define the database schema, parse SBML files, and import the data into the Neo4j database. The three use cases demonstrated the benefits of visualizing SBML data as a graph. The biological processes, specified thanks to SBML standard, contain intricate interactions between biological entities, and Neo4j’s graph represents these relationships with nodes and edges, making it easier to analyze and visualize complex biological networks. Using Cypher, exploring data through statistics or creating subgraphs was intuitive. With the help of the schema database and introspection concept, only relevant information is loaded into the database. We foresee neo4jsbml as an essential tool for bridging the gap between SBML data and Neo4j. It will enable researchers to visualize and analyze relationships between different entities and fully leverage the capabilities of Neo4j.</p>
  </sec>
  <sec sec-type="supplementary-material" id="supplemental-information">
    <title>Supplemental Information</title>
    <supplementary-material id="supp-1" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-1</object-id>
      <label>Supplemental Information 1</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications, Level 3 Version 2, then they were loaded into Neo4j</title>
        <p>The Arrows schema used and all nodes and relationships extracted from Neo4j were shown for each example. (A) A simple example application of SBML. (B) A simple example using the conversionFactor attribute. (C) An alternative formulation of the conversionFactor example. (D) Example of a discrete version of a simple dimerization reaction. (E) Example involving assignment rules. (F) Example involving algebraic rules. (G) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (H) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (I) Example involving function definitions. (J) Example involving delay functions. (K) Example involving events (L) Example involving two-dimensional compartments. (M) Example of a reaction located at a membrane. (N) Example using an event with a non-persistent trigger and a delay.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-2" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-2</object-id>
      <label>Supplemental Information 2</label>
      <caption>
        <title>SBML models were extracted from the SBML specifications, then they were loaded into Neo4j</title>
        <p>The Arrows schema used, and all nodes and relationships extracted from Neo4j, were shown for each example. (A) Model extracted from Chapter 4, Example 1 of the Flux Balance Constraints specification package. (B) Model extracted from Chapter 5, Example 2 of the Groups specification package. (C) Model extracted from Chapter 4, Example 5 of the Layout specification package. (D) Model extracted from Chapter 4, Example 2 of the Qualitative Models specification package.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-3" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-3</object-id>
      <label>Supplemental Information 3</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications Level 2 Version 5, then they were loaded into Neo4j</title>
        <p>The Arrows schema used then all the nodes and relationships were shown for each example. (A) A simple example application of SBML. (B) Example involving units. (C) Example of a discrete version of a simple dimerization reaction. (D) Example involving assignment rules. (E) Example involving algebraic rules. (F) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (G) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (H) Example involving function definitions. (I) Example involving delay functions. (J) Example involving events. (K) Example involving two-dimensional compartments.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-4" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-4</object-id>
      <label>Supplemental Information 4</label>
      <caption>
        <title>Current status of SBML packages according to the SBML webpage</title>
        <p>Status indicated as available are in green, in progress or in development are in orange, and those which are not available are in red.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank the CATI SysMics workgroup from INRAE. We thank the editor, Ron Henkel, and the anonymous reviewers for their valuable insights.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn id="conflict-1" fn-type="COI-statement">
        <p>The authors declare there are no competing interests.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn id="contribution-1" fn-type="con">
        <p><xref rid="author-1" ref-type="contrib">Guillaume Gricourt</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-2" fn-type="con">
        <p><xref rid="author-2" ref-type="contrib">Thomas Duigou</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-3" fn-type="con">
        <p><xref rid="author-3" ref-type="contrib">Sandra Dérozier</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-4" fn-type="con">
        <p><xref rid="author-4" ref-type="contrib">Jean-Loup Faulon</xref> conceived and designed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>The software is available at GitHub, Zenodo, and Anaconda:</p>
        <p>- <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>
</p>
        <p>- Gricourt, G. (2023). neo4jsbml dataset [Data set]. Zenodo. <ext-link xlink:href="https://doi.org/10.5281/zenodo.10245426" ext-link-type="uri">https://doi.org/10.5281/zenodo.10245426</ext-link>
</p>
        <p>- <ext-link xlink:href="https://anaconda.org/conda-forge/neo4jsbml" ext-link-type="uri">https://anaconda.org/conda-forge/neo4jsbml</ext-link>.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Balaur et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Balaur</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mazein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saqi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lysenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rawlings</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Auffray</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>Recon2Neo4j: applying graph database technologies for managing comprehensive genome-scale networks</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1096</fpage>
        <lpage>1098</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw731</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Bornstein et al. (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bornstein</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Jouraku</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>LibSBML: an API Library for SBML</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>6</issue>
        <fpage>880</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn051</pub-id>
        <pub-id pub-id-type="pmid">18252737</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Chaouiya et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Berenguier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Naldi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thieffry</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Iersel</surname>
            <given-names>MPV</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Helikar</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>SBML level 3 package: qualitative models, version 1, release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>691</fpage>
        <lpage>730</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-270</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Choi et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Choi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Medley</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stocking</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Gu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Tellurium: an extensible python-based modeling environment for systems and synthetic biology</article-title>
        <source>Biosystems</source>
        <volume>171</volume>
        <fpage>74</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2018.07.006</pub-id>
        <pub-id pub-id-type="pmid">30053414</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Clerx et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clerx</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cooling</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Garny</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moyle</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>PMF</given-names>
          </name>
          <name>
            <surname>Sorby</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>CellML 2.0</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>17</volume>
        <issue>2–3</issue>
        <fpage>20200021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2020-0021</pub-id>
        <pub-id pub-id-type="pmid">32759406</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>conda-forge community (2015)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <collab>conda-forge community</collab>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The conda-forge project: community-based software distribution built on the conda package format and ecosystem</article-title>
        <source>Zenodo</source>
        <pub-id pub-id-type="doi">10.5281/ZENODO.4774216</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Feist et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Henry</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Reed</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Krummenacker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Joyce</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Broadbelt</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Hatzimanikatis</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2007">2007</year>
        <article-title>A genome-scale metabolic reconstruction for <italic toggle="yes">Escherichia coli</italic> K-12 MG1655 that accounts for 1260 ORFs and thermodynamic information</article-title>
        <source>Molecular Systems Biology</source>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>121</fpage>
        <pub-id pub-id-type="doi">10.1038/msb4100155</pub-id>
        <pub-id pub-id-type="pmid">17593909</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Gauges et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rost</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wengler</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The systems biology markup language (SBML) level 3 package: layout, version 1 core</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>550</fpage>
        <lpage>602</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-267</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Haiman et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haiman</surname>
            <given-names>ZB</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Koike</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yurkovich</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MASSpy: building, simulating, and visualizing dynamic biological models in Python using mass action kinetics</article-title>
        <source>PLOS Computational Biology</source>
        <volume>17</volume>
        <issue>1</issue>
        <elocation-id>e1008208</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1008208</pub-id>
        <pub-id pub-id-type="pmid">33507922</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Henkel, Wolkenhauer &amp; Waltemath (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Combining computational models, semantic annotations and simulation experiments in a graph database</article-title>
        <source>Database</source>
        <volume>2015</volume>
        <fpage>bau130</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bau130</pub-id>
        <pub-id pub-id-type="pmid">25754863</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Hoops et al. (2006)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simus</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Singhal</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kummer</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2006">2006</year>
        <article-title>COPASI—a COmplex PAthway SImulator</article-title>
        <source>Bioinformatics</source>
        <volume>22</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>3074</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Hucka et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Novère</surname>
            <given-names>NL</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schaff</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Sheriff</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wilkinson</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>The systems biology markup language (SBML): language specification for level 3 version 2 core release 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>16</volume>
        <issue>2</issue>
        <fpage>20190021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2019-0021</pub-id>
        <pub-id pub-id-type="pmid">31219795</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Hucka &amp; Smith (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>SBML level 3 package: groups, version 1 release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>13</volume>
        <issue>3</issue>
        <fpage>8</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2016-290</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Kazerouni et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kazerouni</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Gadde</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hormuth</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Jarrett</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Lima</surname>
            <given-names>EAF</given-names>
          </name>
          <name>
            <surname>Lorenzo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Phillips</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Brock</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Yankeelov</surname>
            <given-names>TE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>Integrating quantitative assays with biologically based mathematical modeling for predictive oncology</article-title>
        <source>IScience</source>
        <volume>23</volume>
        <issue>12</issue>
        <elocation-id>101807</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.isci.2020.101807</pub-id>
        <pub-id pub-id-type="pmid">33299976</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>King et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Drager</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sonnenschein</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Escher: a web application for building, sharing, and embedding data rich visualizations of biological pathways</article-title>
        <source>PLOS Computational Biology</source>
        <volume>11</volume>
        <issue>8</issue>
        <elocation-id>e1004321</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004321</pub-id>
        <pub-id pub-id-type="pmid">26313928</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>King et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Federowicz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lerman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D515</fpage>
        <lpage>D522</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>
        <pub-id pub-id-type="pmid">26476456</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Lambusch et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lambusch</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Sandkuhl</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Rosenke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Identifying frequent patterns in biochemical reaction networks: a workflow</article-title>
        <source>Database</source>
        <volume>2018</volume>
        <fpage>bay051</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bay051</pub-id>
        <pub-id pub-id-type="pmid">29992320</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Meier &amp; Kaufmann (2019)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Meier</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kaufmann</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>Ensuring data consistency</article-title>
        <source>SQL &amp; NoSQL databases</source>
        <publisher-name>Springer Fachmedien Wiesbaden</publisher-name>
        <publisher-loc>Wiesbaden</publisher-loc>
        <fpage>123</fpage>
        <lpage>142</lpage>
        <pub-id pub-id-type="doi">10.1007/978-3-658-24549-8_4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Monk et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Monk</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Lloyd</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Brunk</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Mih</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sastry</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Takeuchi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nomura</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Mori</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>iML1515, a knowledgebase that computes Escherichia coli traits</article-title>
        <source>Nature Biotechnology</source>
        <volume>35</volume>
        <issue>10</issue>
        <fpage>904</fpage>
        <lpage>908</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3956</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Moretti et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moretti</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tran</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Mehl</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Ibberson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pagni</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MetaNetX/MNXref: unified namespace for metabolites and biochemical reactions in the context of metabolic models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>49</volume>
        <issue>D1</issue>
        <fpage>D570</fpage>
        <lpage>D574</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkaa992</pub-id>
        <pub-id pub-id-type="pmid">33156326</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Olivier &amp; Bergmann (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>SBML level 3 package: flux balance constraints version 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>20170081</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>
        <pub-id pub-id-type="pmid">29522418</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Qiu, Yang &amp; Zeng (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qiu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Flux balance analysis-based metabolic modeling of microbial secondary metabolism: current status and outlook</article-title>
        <source>PLOS Computational Biology</source>
        <volume>19</volume>
        <issue>8</issue>
        <elocation-id>e1011391</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1011391</pub-id>
        <pub-id pub-id-type="pmid">37619239</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Rodriguez et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Watanabe</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Vazirabad</surname>
            <given-names>IY</given-names>
          </name>
          <name>
            <surname>Kofia</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gómez</surname>
            <given-names>HF</given-names>
          </name>
          <name>
            <surname>Mittag</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Matthes</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rudolph</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Netz</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Diamantikos</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Eichner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keller</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Fröhlich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>JSBML 1.0: providing a smorgasbord of options to encode systems biology models</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <issue>20</issue>
        <fpage>3383</fpage>
        <lpage>3386</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv341</pub-id>
        <pub-id pub-id-type="pmid">26079347</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Shen et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kohlhaas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Enoki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Meier</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Schönenberger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wohlgemuth</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Kourist</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Niekerk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bräsen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Siebers</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>A combined experimental and modelling approach for the Weimberg pathway optimisation</article-title>
        <source>Nature Communications</source>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1098</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-14830-y</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-25">
      <label>Shin et al. (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Carothers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Standards, dissemination, and best practices in systems biology</article-title>
        <source>Current Opinion in Biotechnology</source>
        <volume>81</volume>
        <elocation-id>102922</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.copbio.2023.102922</pub-id>
        <pub-id pub-id-type="pmid">37004298</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-26">
      <label>Swainston et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Swainston</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Batista-Navarro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Carbonell</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Dobson</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Dunstan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jervis</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Vinaixa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Ananiadou</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Faulon</surname>
            <given-names>J-L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kell</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Scrutton</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Breitling</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>biochem4j: integrated and extensible biochemical knowledge through graph databases</article-title>
        <source>PLOS ONE</source>
        <volume>12</volume>
        <issue>7</issue>
        <elocation-id>e0179130</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0179130</pub-id>
        <pub-id pub-id-type="pmid">28708831</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-27">
      <label>Terzer &amp; Stelling (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Terzer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stelling</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>Large-scale computation of elementary flux modes with bit pattern trees</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>19</issue>
        <fpage>2229</fpage>
        <lpage>2235</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn401</pub-id>
        <pub-id pub-id-type="pmid">18676417</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-28">
      <label>Waltemath et al. (2011)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolpakov</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Moraru</surname>
            <given-names>II</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2011">2011</year>
        <article-title>Reproducible computational biology experiments with SED-ML—the simulation experiment description markup language</article-title>
        <source>BMC Systems Biology</source>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>198</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-5-198</pub-id>
        <pub-id pub-id-type="pmid">22172142</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ</journal-id>
    <journal-id journal-id-type="publisher-id">peerj</journal-id>
    <journal-title-group>
      <journal-title>PeerJ</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2167-8359</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10798154</article-id>
    <article-id pub-id-type="publisher-id">16726</article-id>
    <article-id pub-id-type="doi">10.7717/peerj.16726</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Bioinformatics</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Biology</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Computational Science</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>neo4jsbml: import systems biology markup language data into the graph database Neo4j</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" corresp="yes">
        <name>
          <surname>Gricourt</surname>
          <given-names>Guillaume</given-names>
        </name>
        <email>guillaume.gricourt@inrae.fr</email>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-2" contrib-type="author">
        <name>
          <surname>Duigou</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <contrib id="author-3" contrib-type="author">
        <name>
          <surname>Dérozier</surname>
          <given-names>Sandra</given-names>
        </name>
        <xref rid="aff-2" ref-type="aff">2</xref>
      </contrib>
      <contrib id="author-4" contrib-type="author">
        <name>
          <surname>Faulon</surname>
          <given-names>Jean-Loup</given-names>
        </name>
        <xref rid="aff-1" ref-type="aff">1</xref>
      </contrib>
      <aff id="aff-1"><label>1</label><institution>Université Paris-Saclay, INRAE, AgroParisTech, Micalis Institute</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
      <aff id="aff-2"><label>2</label><institution>Université Paris-Saclay, INRAE, MaIAGE</institution>, <city>Jouy-en-Josas</city>, <country>France</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kant</surname>
          <given-names>Ravi</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>1</month>
      <year iso-8601-date="2024">2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>e16726</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2023-06-22">
        <day>22</day>
        <month>6</month>
        <year iso-8601-date="2023">2023</year>
      </date>
      <date date-type="accepted" iso-8601-date="2023-12-05">
        <day>5</day>
        <month>12</month>
        <year iso-8601-date="2023">2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©2024 Gricourt et al.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <copyright-holder>Gricourt et al.</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/16726"/>
    <abstract>
      <p>Systems Biology Markup Language (SBML) has emerged as a standard for representing biological models, facilitating model sharing and interoperability. It stores many types of data and complex relationships, complicating data management and analysis. Traditional database management systems struggle to effectively capture these complex networks of interactions within biological systems. Graph-oriented databases perform well in managing interactions between different entities. We present neo4jsbml, a new solution that bridges the gap between the Systems Biology Markup Language data and the Neo4j database, for storing, querying and analyzing data. The Systems Biology Markup Language organizes biological entities in a hierarchical structure, reflecting their interdependencies. The inherent graphical structure represents these hierarchical relationships, offering a natural and efficient means of navigating and exploring the model’s components. Neo4j is an excellent solution for handling this type of data. By representing entities as nodes and their relationships as edges, Cypher, Neo4j’s query language, efficiently traverses this type of graph representing complex biological networks. We have developed neo4jsbml, a Python library for importing Systems Biology Markup Language data into a Neo4j database using a user-defined schema. By leveraging Neo4j’s graphical database technology, exploration of complex biological networks becomes intuitive and information retrieval efficient. Neo4jsbml is a tool designed to import Systems Biology Markup Language data into a Neo4j database. Only the desired data is loaded into the Neo4j database. neo4jsbml is user-friendly and can become a useful new companion for visualizing and analyzing metabolic models through the Neo4j graphical database. neo4jsbml is open source software and available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>SBML</kwd>
      <kwd>Neo4j</kwd>
      <kwd>Database</kwd>
      <kwd>Neo4jsbml</kwd>
      <kwd>Genome-scale metabolic model</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>A French government grant managed by the Agence Nationale de la Recherche under the France 2030 program</funding-source>
        <award-id> ANR-22-PEBB-0008</award-id>
      </award-group>
      <funding-statement>This work was supported by a French government grant managed by the Agence Nationale de la Recherche under the France 2030 program, reference ANR-22-PEBB-0008. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Genome-Scale Metabolic Models (GEMs) of biological systems are commonly represented using the Systems Biology Markup Language (SBML) format. This format is actively maintained and updated, especially, by adding new features to meet new needs. Using a standard format facilitates interoperability repeatability, and reproducibility. Several standards have emerged in systems biology (<xref rid="ref-25" ref-type="bibr">Shin et al., 2023</xref>). The CellML standard stores computer-based mathematical models (<xref rid="ref-5" ref-type="bibr">Clerx et al., 2020</xref>) and the Simulation Experiment Description Markup Language (SED-ML) (<xref rid="ref-28" ref-type="bibr">Waltemath et al., 2011</xref>) enables the reproduction of simulation experiments. The use of a standard format to represent data enables the creation of a rich software environment such as COPASI (<xref rid="ref-11" ref-type="bibr">Hoops et al., 2006</xref>), Tellurium (<xref rid="ref-4" ref-type="bibr">Choi et al., 2018</xref>) and MASSpy (<xref rid="ref-9" ref-type="bibr">Haiman et al., 2021</xref>) for the construction, simulation, and visualization of dynamic metabolic models. A wide range of issues can be addressed in this way, including the construction of metabolic pathways (<xref rid="ref-24" ref-type="bibr">Shen et al., 2020</xref>), study of secondary metabolism in bacteria (<xref rid="ref-22" ref-type="bibr">Qiu, Yang &amp; Zeng, 2023</xref>) and representation of cell behavior and interactions in cancer (<xref rid="ref-14" ref-type="bibr">Kazerouni et al., 2020</xref>). To represent these types of biological processes, the SBML format encodes several nested components and their interactions in an XML-based document. The standard represents complex systems by organizing the data as components. To illustrate, biological systems can contain thousands of metabolites and reactions, leading to a high level of complexity in their interactions (<xref rid="ref-12" ref-type="bibr">Hucka et al., 2019</xref>). The SBML Level 3 standard is well-suited for describing reaction-based models. To represent different types of models, such as constraint-based, logical network, and rule-based models, the SBML standard has been enhanced using different packages. As described in their specifications, these packages add components or properties to the model.</p>
    <p>Neo4j is a powerful graph database that enables the storage, querying, and analysis of large amounts of data. Unlike relational databases, Neo4j leverages the power of graph theory, representing data as nodes or relationships which embed properties to store additional information. The graph-based structure is well-suited to tackle intricate relationships and decipher complex problems, such as social networks and network analysis. The graph query language, named Cypher, allows querying the graph to retrieve connected data and perform create, read, update, or delete operations on the database. Neo4j ensures data integrity and consistency by respecting the ACID principle (<xref rid="ref-18" ref-type="bibr">Meier &amp; Kaufmann, 2019</xref>). Specific capabilities can be added to the Neo4j database through a software extension, a plugin, enabling users to customize and enhance its features for dedicated applications. The Neo4j database comes with a broad ecosystem which includes tools like Arrows for designing the database structure, numerous drivers for communicating with the database, building queries intuitively with Cypher and Bloom for visualizing data.</p>
    <p>With Neo4j, metabolic models can be represented as a network of nodes and relationships, where each node represents a biological or supporting object within a component, such as a metabolite, reaction, or unit definition. Each relationship serves as a connection between two metabolic reactions, enabling easy exploration of different pathways and interactions between human metabolic data (<xref rid="ref-1" ref-type="bibr">Balaur et al., 2016</xref>). Using Neo4j with metabolic models can provide valuable insights into complex interactions, as it allows for the integration of heterogeneous data, such as chemical species, reactions, enzymes, and taxonomic data. This integration can aid in identifying key players across a wide range of biological application domains (<xref rid="ref-26" ref-type="bibr">Swainston et al., 2017</xref>).</p>
    <p>More recently, based on the graph database MaSyMoS, which stores SBML and CellML models to represent biological systems in terms of functional, behavioral, and structural aspects (<xref rid="ref-10" ref-type="bibr">Henkel, Wolkenhauer &amp; Waltemath, 2015</xref>), a protocol was developed to compare biochemical reaction networks (<xref rid="ref-17" ref-type="bibr">Lambusch et al., 2018</xref>). Nonetheless, analyzing its own SBML data using Neo4j remains a challenge. Biochem4j provides a web interface that does not allow users to analyze their data in their database. Recon2Neo4j and MaSyMoS created Java software using the JSBML library (<xref rid="ref-23" ref-type="bibr">Rodriguez et al., 2015</xref>) to import the data into their database. However, data loading is performed according to a predefined schema that retain several SBML components or properties that are targeted by their applications.</p>
    <p>We are presenting neo4jsbml, a user-friendly Python package to import SBML files into a Neo4j database. Neo4jsbml utilizes tools developed by Neo4j to define the database schema, load data, query entities and relationships, and visualize the created graph. This package offers flexibility, extensibility, and ease of use in combining graph databases with SBML files. Flexibility is provided by leaving the choice of entities to be analyzed by the researcher. Extensibility is based on the intrinsic operation of neo4jsbml <italic toggle="yes">via</italic> introspection. Finally, neo4jsbml can be used through the command line and requires no programming skill. The graph can be enriched with heterogeneous data, allowing researchers to build, manipulate, annotate, and store their data with greater efficiency.</p>
  </sec>
  <sec>
    <title>Material and Methods</title>
    <sec>
      <title>Implementation</title>
      <p>SBML data are structured according to the specifications defined by <xref rid="ref-12" ref-type="bibr">Hucka et al. (2019)</xref>. This file format has a skeleton of main components, but optional data can be added through the use of packages. The SBML specification Level 3 Version 2 describes eleven components: function definitions, unit definitions, compartments, species, parameters, initial assignments, rules, constraints, reactions, events and the model. Each component has a specific role and stores specific and generic information. The model component is special, it serves as a container for the other components but also supports some information, such as the identifier of the model, which can be exploited.</p>
      <p>Sometimes, not all components are suitable for analysis. To retain the desirable data from SBML documents, neo4jsbml utilizes the concept of introspection. Introspection allows a program to examine an object’s characteristics, such as its name, properties, and methods, making the program more efficient and robust. It is a powerful feature of object-oriented languages that exposes details about objects at runtime, and Python ships with a few built-in functions for this purpose. When importing SBML data into Neo4j, introspection is used to automate the extraction of properties and associated structured values of items mentioned in a definition schema. In this way, the user filters the main components and attributes to be loaded into the database.</p>
    </sec>
    <sec>
      <title>Running method</title>
      <p>The usage of the tool is described in <xref rid="fig-1" ref-type="fig">Fig. 1</xref>.</p>
      <fig position="float" id="fig-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-1</object-id>
        <label>Figure 1</label>
        <caption>
          <title>Workflow for utilizing neo4jsbml.</title>
          <p>First, a schema is created with <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>. Next, aided by the schema, the SBML data is loaded into the Neo4j database using neo4jsbml. Softwares are green, files are gray, the database is blue.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g001" position="float"/>
      </fig>
      <p>It takes place in two stages. First of all, the user creates a schema defining which entities will be selected from the SBML model (<xref rid="fig-2" ref-type="fig">Fig. 2</xref>). Building a schema requires certain rules, such as mapping the names of different items found in the schema to their corresponding names as defined in the SBML specifications. To illustrate this principle, node labels and node properties indicated in the schema need to match the name of the SBML component and the properties belonging to the component, respectively. Given this information, neo4jsbml identifies the objects and attributes to extract from the SBML, thanks to the library libsbml. Thus, only the entities required for analysis were loaded into Neo4j. SBML specifications indicate which components are linked to each other by storing an identifier corresponding to another component as an attribute. Therefore, neo4jsbml checks whether the two components are linked by following the strategies shown in <xref rid="fig-3" ref-type="fig">Fig. 3</xref>. However, the Neo4j database operates on a directed graph; therefore, neo4jsbml infers directionality as indicated by the schema. Once the data are imported into Neo4j, the entities and relationships from the SBML model can be queried by Cypher through Neo4j.</p>
      <fig position="float" id="fig-2">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <title>Schemas created from <ext-link xlink:href="https://arrows.app" ext-link-type="uri">https://arrows.app</ext-link>.</title>
          <p>The entities and their relationships are represented by a circle and an arrow, respectively. Node label matches the name of a SBML component. Each node embeds the targeted properties. Types associated to each property are optional. (A) This schema represents various entities found in genome-scale models. (B) This schema is focused on the extraction of a metabolic network.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g002" position="float"/>
      </fig>
      <fig position="float" id="fig-3">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-3</object-id>
        <label>Figure 3</label>
        <caption>
          <title>Examples of schemas illustrating how neo4jsbml uses introspection to associate one entity with another.</title>
          <p>(A) The object <italic toggle="yes">libsbml.Species</italic> has a method named <italic toggle="yes">getCompartment()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.Compartment</italic> object. The mapping between these entities is established by calling a method based on the name of one entity. (B) The object <italic toggle="yes">libsbml.LocalParameter</italic> has a method named <italic toggle="yes">getUnits()</italic> that retrieves the identifier of the <italic toggle="yes">libsbml.UnitDefinition</italic> object. The linkage between these entities is possible thanks to the name of the relationship. (C) The objects in the libsbml library have a method named <italic toggle="yes">getListOfAllElements()</italic> that leads to list some nested components. The <italic toggle="yes">libsbml.Reaction</italic> object can host several objects, including a <italic toggle="yes">libsbml.LocalParameter</italic> object. The relationship is created according to the name of the entities.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g003" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>Use cases</title>
      <p>To illustrate the power of neo4jsbml, three use cases were performed involving three <italic toggle="yes">Escherichia coli</italic> GEMs. The first one, called iAF1260, was published in 2007 (<xref rid="ref-7" ref-type="bibr">Feist et al., 2007</xref>). The second one, named iML1515, was established in 2017 (<xref rid="ref-19" ref-type="bibr">Monk et al., 2017</xref>). The last one, a small-scale model baptized e_coli_core was derived from an <italic toggle="yes">E. coli</italic> model. All models were downloaded from the BiGG Models knowledgebase (<xref rid="ref-16" ref-type="bibr">King et al., 2016</xref>) and the MetaNetX database (<xref rid="ref-20" ref-type="bibr">Moretti et al., 2021</xref>).</p>
      <p>A Neo4j plugin, named neo4jefmtool, based on efmtool (<xref rid="ref-27" ref-type="bibr">Terzer &amp; Stelling, 2008</xref>) was created to enumerate the metabolic pathways, available at <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>.</p>
      <p>The schema described in <xref rid="fig-2" ref-type="fig">Fig. 2A</xref> was used to import data into Neo4j for the first two use cases, whereas the schema corresponding to <xref rid="fig-2" ref-type="fig">Fig. 2B</xref> was used for the last case. Both schemas were created using Arrows, available at <ext-link xlink:href="https://arrows.app/" ext-link-type="uri">https://arrows.app/</ext-link>. To provide a general overview of the use of neo4jsbml, some examples of models embedded in the SBML specifications are shown in <xref rid="supp-1" ref-type="supplementary-material">Figs. S1</xref>, <xref rid="supp-2" ref-type="supplementary-material">S2</xref>, and <xref rid="supp-3" ref-type="supplementary-material">S3</xref>.</p>
      <p>Neo4j version 5.12 and neo4jsbml version 0.12.0 (<ext-link xlink:href="http://dx.doi.org/10.5281/zenodo.8419209" ext-link-type="uri">10.5281/zenodo.8419209</ext-link>) were used for this study.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>We developed neo4jsbml as a modular Python package that can be used as a standalone program or incorporated as a library in other programs. It is available through the Conda package management system (<xref rid="ref-6" ref-type="bibr">conda-forge community, 2015</xref>) and runs on all platforms without requiring extra privileges. SBML files are loaded by neo4jsbml, using the libsbml library (<xref rid="ref-2" ref-type="bibr">Bornstein et al., 2008</xref>), and the selected data will be loaded into the Neo4j database using the Python Neo4j driver, based on a database schema. Twelve packages are part or will be part of the SBML standard, but only eight have been fully implemented by the library libsbml. Neo4jsbml can consider four plugins: Flux Balance Constraints (<xref rid="ref-21" ref-type="bibr">Olivier &amp; Bergmann, 2018</xref>), Groups (<xref rid="ref-13" ref-type="bibr">Hucka &amp; Smith, 2016</xref>), Layout (<xref rid="ref-8" ref-type="bibr">Gauges et al., 2015</xref>) and Qualitative Models (<xref rid="ref-3" ref-type="bibr">Chaouiya et al., 2015</xref>) (<xref rid="supp-4" ref-type="supplementary-material">Table S1</xref>). Importing data into Neo4j is done through pure Cypher queries, with no additional Neo4j plugins necessary.</p>
    <p>To demonstrate the usefulness of neo4jsbml, we conducted a proof of concept study with three use cases.</p>
    <sec>
      <title>Comparing two models</title>
      <p>We compared two versions of the <italic toggle="yes">E. coli</italic> genome-scale metabolic model to highlight improvements between an older and a newer version from two repositories: BiGG and MetaNetX. Firstly, we compared the number of nodes and relationships in both models (<xref rid="table-1" ref-type="table">Table 1</xref>). More than four thousand entities and twenty thousand relationships were loaded into Neo4j from the <italic toggle="yes">E. coli</italic> genome-scale models, iML1515 and iAF1260. Given one version of <italic toggle="yes">E. coli</italic>, the number of chemical species and reactions differed between the BiGG and MetaNetX databases. In addition, the iML1515 genome-scale metabolic model contained more nodes and relationships compared to the iAF1260 genome-scale metabolic model.</p>
      <table-wrap position="float" id="table-1">
        <object-id pub-id-type="doi">10.7717/peerj.16726/table-1</object-id>
        <label>Table 1</label>
        <caption>
          <title>Number of entities and relationships loaded in Neo4j for the iAF1260 and iML1515 GEMs provided by the BiGG and MetaNetX databases.</title>
          <p>Nodes are in lowercase, relationships are in uppercase.</p>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-12-16726-g007" position="float"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th align="center" colspan="2" rowspan="1">BiGG</th>
                <th align="center" colspan="2" rowspan="1">MetaNetX</th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Node/Relationship</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
                <th rowspan="1" colspan="1">iAF1260</th>
                <th rowspan="1" colspan="1">iML1515</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Compartment</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">3</td>
                <td rowspan="1" colspan="1">4</td>
                <td rowspan="1" colspan="1">4</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Species</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Parameter</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Reaction</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Model</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">UnitDefinition</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">GeneProduct</td>
                <td rowspan="1" colspan="1">1261</td>
                <td rowspan="1" colspan="1">1516</td>
                <td rowspan="1" colspan="1">1262</td>
                <td rowspan="1" colspan="1">1517</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IN_COMPARTMENT</td>
                <td rowspan="1" colspan="1">1668</td>
                <td rowspan="1" colspan="1">1877</td>
                <td rowspan="1" colspan="1">1976</td>
                <td rowspan="1" colspan="1">2217</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PRODUCT</td>
                <td rowspan="1" colspan="1">4714</td>
                <td rowspan="1" colspan="1">5328</td>
                <td rowspan="1" colspan="1">4920</td>
                <td rowspan="1" colspan="1">5529</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_LOWERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UPPERFLUXBOUND</td>
                <td rowspan="1" colspan="1">2382</td>
                <td rowspan="1" colspan="1">2712</td>
                <td rowspan="1" colspan="1">2374</td>
                <td rowspan="1" colspan="1">2704</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_PARAMETER</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">HAS_UNIT</td>
                <td rowspan="1" colspan="1">8</td>
                <td rowspan="1" colspan="1">5</td>
                <td rowspan="1" colspan="1">7</td>
                <td rowspan="1" colspan="1">5</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_IMPLIED</td>
                <td rowspan="1" colspan="1">3747</td>
                <td rowspan="1" colspan="1">4624</td>
                <td rowspan="1" colspan="1">3750</td>
                <td rowspan="1" colspan="1">4627</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">IS_REACTANT</td>
                <td rowspan="1" colspan="1">4517</td>
                <td rowspan="1" colspan="1">5247</td>
                <td rowspan="1" colspan="1">4553</td>
                <td rowspan="1" colspan="1">5242</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <p>Next, we analyzed the reactions associated with the fumarate metabolite (<xref rid="fig-4" ref-type="fig">Fig. 4</xref>). The Cypher query is described in Eq. (1).</p>
      <fig position="float" id="fig-4">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-4</object-id>
        <label>Figure 4</label>
        <caption>
          <title>Visualization of the fumarate metabolite (blue) and its nearest neighbors: reactions (orange) and compartment (purple) in two models (iAF1260 on the left and iML1515 on the right) sequentially imported into Neo4j by neo4jsbml.</title>
          <p>The reaction, <italic toggle="yes">Fumarate dependent DHORD</italic>, was only shown in the iML1515 model.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g004" position="float"/>
      </fig>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i001.jpg" content-type="symbol"/>
      </p>
      <p>One additional reaction was linked to the fumarate metabolite in the iML1515 model compared to the iAF1260 model.</p>
    </sec>
    <sec>
      <title>Viewing a metabolic pathway</title>
      <p>A common application with a metabolic network is to visualize biological pathways derived from genome-scale models. In this case, the phosphoenolpyruvate metabolite was targeted to identify the chemical species in the extracellular compartment that produce it through exactly two reactions in the core model of <italic toggle="yes">E. coli</italic>. Firstly, the entire genome-scale model was imported into Neo4j.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i002.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i003.jpg" content-type="symbol"/>
      </p>
      <p>Then, the reactions, metabolites, and compartments involved in the metabolic pathway were extracted using two consecutive Cypher queries: dense nodes were flagged Eq. (2) and the paths were selected Eq. (3). With the constraints defined above, the Pyruvate metabolite was identified as a key player (<xref rid="fig-5" ref-type="fig">Fig. 5</xref>).</p>
    </sec>
    <sec>
      <title>Enumerate metabolic pathways</title>
      <p>The enumeration of metabolic pathways identifies and lists all the possible routes of biochemical reactions within a metabolic network. From the core model of <italic toggle="yes">E. coli</italic>, pathways involving the Formate and the Acetaldehyde metabolites were searched. <italic toggle="yes">Species</italic>, <italic toggle="yes">SpeciesReference</italic> and <italic toggle="yes">Reaction</italic> entities were loaded into Neo4j from the genome-scale model.</p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i004.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i005.jpg" content-type="symbol"/>
      </p>
      <p>
        <inline-graphic xlink:href="peerj-12-16726-i006.jpg" content-type="symbol"/>
      </p>
      <p>Then, graph reconstruction was performed by merging the <italic toggle="yes">Species</italic> and <italic toggle="yes">SpeciesReference</italic> nodes Eq. (4) and removing <italic toggle="yes">Species</italic> that were linked to fewer than four reactions Eq. (5) . Next, the neo4jefmtool plugin was used to enumerate the pathways involving the Fumarate and the Acetaldehyde metabolites Eq. (6). The two pathways identified are shown in the <xref rid="fig-6" ref-type="fig">Fig. 6</xref>.</p>
      <fig position="float" id="fig-5">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-5</object-id>
        <label>Figure 5</label>
        <caption>
          <title>Thanks to Neo4j and neo4jsbml, the phosphoenolpyruvate metabolite and its precursors implicated in exactly two reactions in the <italic toggle="yes">Escherichia coli</italic> core model (e_coli_core) were visualized.</title>
          <p>The Pyruvate metabolite was directly involved in the production of Phosphoenolpyruvate without any circular dependency.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g005" position="float"/>
      </fig>
      <fig position="float" id="fig-6">
        <object-id pub-id-type="doi">10.7717/peerj.16726/fig-6</object-id>
        <label>Figure 6</label>
        <caption>
          <title>Two pathways were identified in the <italic toggle="yes">E. coli</italic> core model.</title>
          <p>(A) A first pathway linking the Formate to the Acetaldehyde metabolites was extracted. (B) A second pathway linking the Formate to the Ethanol metabolites was identified.</p>
        </caption>
        <graphic xlink:href="peerj-12-16726-g006" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Discussions</title>
    <p>Comparing genome-scale models, viewing metabolic networks and enumerating pathways are common applications in systems biology. On the one hand, biological processes are stored in the SBML format. On the other hand, Neo4j is a powerful graph database suited to link related entities, using the Cypher language. Neo4jsbml aims to conciliate both. The first use case showed the capability to perform quantitative and qualitative analysis on genome-scale models. Neo4j has a comprehensive set of features, as described by <xref rid="ref-15" ref-type="bibr">King et al. (2015)</xref> which include the ability to navigate and search through visualizations, design and customize pathway maps, and represent diverse data types. The second example highlights the ability of Neo4j to serve as an alternative viewer for visualizing metabolic pathways. The last illustration emphasizes the capacity of neo4jsbml to retain the required data and the strength of Neo4j to conduct specialized analyses.</p>
    <p>Neo4jsbml employs a novel approach based on the creation of schema entities to identify entities that are useful for a dedicated application. Introspection is a programmatic principle that maps the schema of certain entities to a model to extract desired data. Therefore, neo4jsbml can deal with Level 2 Version 5 of the SBML standard (<xref rid="supp-3" ref-type="supplementary-material">Fig. S3</xref>) and partially with SBML packages (<xref rid="supp-2" ref-type="supplementary-material">Fig. S2</xref>). Our aim was to develop a tool that is as simple as possible, requiring only command-line skills.</p>
    <p>However, as we observed for the use cases, the more complex the application, the more intricate the Cypher queries to perform graph refactoring or to extract the data. Additionally, programming skills may be required to develop extensions to perform dedicated analyses. In rare circumstances, data imported into Neo4j can produce unexpected results. The first scenario is shown in <xref rid="supp-3" ref-type="supplementary-material">Fig. S3J</xref>. The model has two <italic toggle="yes">Event</italic> entities, each with one <italic toggle="yes">Event Assignment</italic> entity that supports the <italic toggle="yes">variable</italic> property. Without setting an <italic toggle="yes">id</italic> property for each <italic toggle="yes">Event Assignment</italic>, in the model, it would be difficult to infer the wishes of the user. The second scenario concerns the model presented in <xref rid="supp-2" ref-type="supplementary-material">Fig. S2C</xref>. The <italic toggle="yes">Layout</italic> entity is linked to its <italic toggle="yes">Dimensions</italic> entity as well as to all other <italic toggle="yes">Dimensions</italic> entities found in the model. In these cases, a prior modification of the model or graph refactoring in Neo4j is required to meet expectations. In addition, if several models are loaded sequentially into the database, some entities can be the same, and the relationships between the models are mixed. Neo4jsbml alleviates this difficulty by adding an additional identifier to all imported entities.</p>
    <p>The SBML standard represents mathematical expressions using MathML and annotations using the Resource Description Framework by adding XML elements to the model. Neo4jsbml extracts mathematical expressions as strings whereas annotations are loaded with XML tags.</p>
    <p>However, neo4jsbml is highly dependent on the web application Arrows to create the schema of entities. To ensure a long-term future, neo4jsbml will need to support at least one other tool to provide the schema of entities. In addition, neo4jsbml uses simple Cypher queries to import data into Neo4j. It would be valuable to load data into another graph database using Cypher.</p>
    <p>More broadly, introspection-based programming patterns can be used to extract information from other standards and import the required data into sql, no-sql or graph-oriented databases.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>Neo4jsbml is a user-friendly Python package and it takes advantage of existing software to define the database schema, parse SBML files, and import the data into the Neo4j database. The three use cases demonstrated the benefits of visualizing SBML data as a graph. The biological processes, specified thanks to SBML standard, contain intricate interactions between biological entities, and Neo4j’s graph represents these relationships with nodes and edges, making it easier to analyze and visualize complex biological networks. Using Cypher, exploring data through statistics or creating subgraphs was intuitive. With the help of the schema database and introspection concept, only relevant information is loaded into the database. We foresee neo4jsbml as an essential tool for bridging the gap between SBML data and Neo4j. It will enable researchers to visualize and analyze relationships between different entities and fully leverage the capabilities of Neo4j.</p>
  </sec>
  <sec sec-type="supplementary-material" id="supplemental-information">
    <title>Supplemental Information</title>
    <supplementary-material id="supp-1" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-1</object-id>
      <label>Supplemental Information 1</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications, Level 3 Version 2, then they were loaded into Neo4j</title>
        <p>The Arrows schema used and all nodes and relationships extracted from Neo4j were shown for each example. (A) A simple example application of SBML. (B) A simple example using the conversionFactor attribute. (C) An alternative formulation of the conversionFactor example. (D) Example of a discrete version of a simple dimerization reaction. (E) Example involving assignment rules. (F) Example involving algebraic rules. (G) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (H) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (I) Example involving function definitions. (J) Example involving delay functions. (K) Example involving events (L) Example involving two-dimensional compartments. (M) Example of a reaction located at a membrane. (N) Example using an event with a non-persistent trigger and a delay.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-2" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-2</object-id>
      <label>Supplemental Information 2</label>
      <caption>
        <title>SBML models were extracted from the SBML specifications, then they were loaded into Neo4j</title>
        <p>The Arrows schema used, and all nodes and relationships extracted from Neo4j, were shown for each example. (A) Model extracted from Chapter 4, Example 1 of the Flux Balance Constraints specification package. (B) Model extracted from Chapter 5, Example 2 of the Groups specification package. (C) Model extracted from Chapter 4, Example 5 of the Layout specification package. (D) Model extracted from Chapter 4, Example 2 of the Qualitative Models specification package.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s002.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-3" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-3</object-id>
      <label>Supplemental Information 3</label>
      <caption>
        <title>SBML models were extracted from Chapter 7 of the SBML specifications Level 2 Version 5, then they were loaded into Neo4j</title>
        <p>The Arrows schema used then all the nodes and relationships were shown for each example. (A) A simple example application of SBML. (B) Example involving units. (C) Example of a discrete version of a simple dimerization reaction. (D) Example involving assignment rules. (E) Example involving algebraic rules. (F) Example with combinations of boundaryCondition and constant values on Species with RateRule objects. (G) Example of translation from a multi-compartmental model to ODEs (Ordinary Differential Equations). (H) Example involving function definitions. (I) Example involving delay functions. (J) Example involving events. (K) Example involving two-dimensional compartments.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s003.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="supp-4" position="float" content-type="local-data">
      <object-id pub-id-type="doi">10.7717/peerj.16726/supp-4</object-id>
      <label>Supplemental Information 4</label>
      <caption>
        <title>Current status of SBML packages according to the SBML webpage</title>
        <p>Status indicated as available are in green, in progress or in development are in orange, and those which are not available are in red.</p>
      </caption>
      <media xlink:href="peerj-12-16726-s004.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank the CATI SysMics workgroup from INRAE. We thank the editor, Ron Henkel, and the anonymous reviewers for their valuable insights.</p>
  </ack>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn id="conflict-1" fn-type="COI-statement">
        <p>The authors declare there are no competing interests.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn id="contribution-1" fn-type="con">
        <p><xref rid="author-1" ref-type="contrib">Guillaume Gricourt</xref> conceived and designed the experiments, performed the experiments, analyzed the data, prepared figures and/or tables, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-2" fn-type="con">
        <p><xref rid="author-2" ref-type="contrib">Thomas Duigou</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-3" fn-type="con">
        <p><xref rid="author-3" ref-type="contrib">Sandra Dérozier</xref> conceived and designed the experiments, performed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
      <fn id="contribution-4" fn-type="con">
        <p><xref rid="author-4" ref-type="contrib">Jean-Loup Faulon</xref> conceived and designed the experiments, analyzed the data, authored or reviewed drafts of the article, and approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>The software is available at GitHub, Zenodo, and Anaconda:</p>
        <p>- <ext-link xlink:href="https://github.com/brsynth/neo4jsbml" ext-link-type="uri">https://github.com/brsynth/neo4jsbml</ext-link>
</p>
        <p>- Gricourt, G. (2023). neo4jsbml dataset [Data set]. Zenodo. <ext-link xlink:href="https://doi.org/10.5281/zenodo.10245426" ext-link-type="uri">https://doi.org/10.5281/zenodo.10245426</ext-link>
</p>
        <p>- <ext-link xlink:href="https://anaconda.org/conda-forge/neo4jsbml" ext-link-type="uri">https://anaconda.org/conda-forge/neo4jsbml</ext-link>.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Balaur et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Balaur</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mazein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saqi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lysenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rawlings</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Auffray</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>Recon2Neo4j: applying graph database technologies for managing comprehensive genome-scale networks</article-title>
        <source>Bioinformatics</source>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1096</fpage>
        <lpage>1098</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw731</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Bornstein et al. (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bornstein</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Jouraku</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>LibSBML: an API Library for SBML</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>6</issue>
        <fpage>880</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn051</pub-id>
        <pub-id pub-id-type="pmid">18252737</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Chaouiya et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Berenguier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Naldi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thieffry</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Iersel</surname>
            <given-names>MPV</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Helikar</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>SBML level 3 package: qualitative models, version 1, release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>691</fpage>
        <lpage>730</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-270</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Choi et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Choi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Medley</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stocking</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Gu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Tellurium: an extensible python-based modeling environment for systems and synthetic biology</article-title>
        <source>Biosystems</source>
        <volume>171</volume>
        <fpage>74</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2018.07.006</pub-id>
        <pub-id pub-id-type="pmid">30053414</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Clerx et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clerx</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cooling</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Garny</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Moyle</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>PMF</given-names>
          </name>
          <name>
            <surname>Sorby</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>CellML 2.0</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>17</volume>
        <issue>2–3</issue>
        <fpage>20200021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2020-0021</pub-id>
        <pub-id pub-id-type="pmid">32759406</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>conda-forge community (2015)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <collab>conda-forge community</collab>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The conda-forge project: community-based software distribution built on the conda package format and ecosystem</article-title>
        <source>Zenodo</source>
        <pub-id pub-id-type="doi">10.5281/ZENODO.4774216</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Feist et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Henry</surname>
            <given-names>CS</given-names>
          </name>
          <name>
            <surname>Reed</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Krummenacker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Joyce</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Broadbelt</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Hatzimanikatis</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2007">2007</year>
        <article-title>A genome-scale metabolic reconstruction for <italic toggle="yes">Escherichia coli</italic> K-12 MG1655 that accounts for 1260 ORFs and thermodynamic information</article-title>
        <source>Molecular Systems Biology</source>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>121</fpage>
        <pub-id pub-id-type="doi">10.1038/msb4100155</pub-id>
        <pub-id pub-id-type="pmid">17593909</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>Gauges et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rost</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wengler</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>The systems biology markup language (SBML) level 3 package: layout, version 1 core</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>550</fpage>
        <lpage>602</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2015-267</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Haiman et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Haiman</surname>
            <given-names>ZB</given-names>
          </name>
          <name>
            <surname>Zielinski</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Koike</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Yurkovich</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MASSpy: building, simulating, and visualizing dynamic biological models in Python using mass action kinetics</article-title>
        <source>PLOS Computational Biology</source>
        <volume>17</volume>
        <issue>1</issue>
        <elocation-id>e1008208</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1008208</pub-id>
        <pub-id pub-id-type="pmid">33507922</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Henkel, Wolkenhauer &amp; Waltemath (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Combining computational models, semantic annotations and simulation experiments in a graph database</article-title>
        <source>Database</source>
        <volume>2015</volume>
        <fpage>bau130</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bau130</pub-id>
        <pub-id pub-id-type="pmid">25754863</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Hoops et al. (2006)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gauges</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pahle</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Simus</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Singhal</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kummer</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2006">2006</year>
        <article-title>COPASI—a COmplex PAthway SImulator</article-title>
        <source>Bioinformatics</source>
        <volume>22</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>3074</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Hucka et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Chaouiya</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hoops</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Keating</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>König</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Novère</surname>
            <given-names>NL</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Schaff</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Sheriff</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wilkinson</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>The systems biology markup language (SBML): language specification for level 3 version 2 core release 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>16</volume>
        <issue>2</issue>
        <fpage>20190021</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2019-0021</pub-id>
        <pub-id pub-id-type="pmid">31219795</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Hucka &amp; Smith (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>LP</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>SBML level 3 package: groups, version 1 release 1</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>13</volume>
        <issue>3</issue>
        <fpage>8</fpage>
        <lpage>29</lpage>
        <pub-id pub-id-type="doi">10.1515/jib-2016-290</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Kazerouni et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kazerouni</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Gadde</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hormuth</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Jarrett</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Lima</surname>
            <given-names>EAF</given-names>
          </name>
          <name>
            <surname>Lorenzo</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Phillips</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Brock</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Yankeelov</surname>
            <given-names>TE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>Integrating quantitative assays with biologically based mathematical modeling for predictive oncology</article-title>
        <source>IScience</source>
        <volume>23</volume>
        <issue>12</issue>
        <elocation-id>101807</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.isci.2020.101807</pub-id>
        <pub-id pub-id-type="pmid">33299976</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>King et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Drager</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sonnenschein</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>Escher: a web application for building, sharing, and embedding data rich visualizations of biological pathways</article-title>
        <source>PLOS Computational Biology</source>
        <volume>11</volume>
        <issue>8</issue>
        <elocation-id>e1004321</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004321</pub-id>
        <pub-id pub-id-type="pmid">26313928</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>King et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>King</surname>
            <given-names>ZA</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Federowicz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lerman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Ebrahim</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2016">2016</year>
        <article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D515</fpage>
        <lpage>D522</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>
        <pub-id pub-id-type="pmid">26476456</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Lambusch et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lambusch</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wolkenhauer</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Sandkuhl</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Rosenke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>Identifying frequent patterns in biochemical reaction networks: a workflow</article-title>
        <source>Database</source>
        <volume>2018</volume>
        <fpage>bay051</fpage>
        <pub-id pub-id-type="doi">10.1093/database/bay051</pub-id>
        <pub-id pub-id-type="pmid">29992320</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Meier &amp; Kaufmann (2019)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Meier</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kaufmann</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2019">2019</year>
        <article-title>Ensuring data consistency</article-title>
        <source>SQL &amp; NoSQL databases</source>
        <publisher-name>Springer Fachmedien Wiesbaden</publisher-name>
        <publisher-loc>Wiesbaden</publisher-loc>
        <fpage>123</fpage>
        <lpage>142</lpage>
        <pub-id pub-id-type="doi">10.1007/978-3-658-24549-8_4</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Monk et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Monk</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Lloyd</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Brunk</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Mih</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sastry</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>King</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Takeuchi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nomura</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Mori</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Feist</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>iML1515, a knowledgebase that computes Escherichia coli traits</article-title>
        <source>Nature Biotechnology</source>
        <volume>35</volume>
        <issue>10</issue>
        <fpage>904</fpage>
        <lpage>908</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3956</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Moretti et al. (2021)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moretti</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tran</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Mehl</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Ibberson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pagni</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2021">2021</year>
        <article-title>MetaNetX/MNXref: unified namespace for metabolites and biochemical reactions in the context of metabolic models</article-title>
        <source>Nucleic Acids Research</source>
        <volume>49</volume>
        <issue>D1</issue>
        <fpage>D570</fpage>
        <lpage>D574</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkaa992</pub-id>
        <pub-id pub-id-type="pmid">33156326</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Olivier &amp; Bergmann (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Olivier</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2018">2018</year>
        <article-title>SBML level 3 package: flux balance constraints version 2</article-title>
        <source>Journal of Integrative Bioinformatics</source>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>20170081</fpage>
        <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>
        <pub-id pub-id-type="pmid">29522418</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Qiu, Yang &amp; Zeng (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qiu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Flux balance analysis-based metabolic modeling of microbial secondary metabolism: current status and outlook</article-title>
        <source>PLOS Computational Biology</source>
        <volume>19</volume>
        <issue>8</issue>
        <elocation-id>e1011391</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1011391</pub-id>
        <pub-id pub-id-type="pmid">37619239</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Rodriguez et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Watanabe</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Vazirabad</surname>
            <given-names>IY</given-names>
          </name>
          <name>
            <surname>Kofia</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gómez</surname>
            <given-names>HF</given-names>
          </name>
          <name>
            <surname>Mittag</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Matthes</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rudolph</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Netz</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Diamantikos</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Eichner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keller</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wrzodek</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Fröhlich</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>CJ</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Palsson</surname>
            <given-names>BO</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Dräger</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2015">2015</year>
        <article-title>JSBML 1.0: providing a smorgasbord of options to encode systems biology models</article-title>
        <source>Bioinformatics</source>
        <volume>31</volume>
        <issue>20</issue>
        <fpage>3383</fpage>
        <lpage>3386</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv341</pub-id>
        <pub-id pub-id-type="pmid">26079347</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Shen et al. (2020)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kohlhaas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Enoki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Meier</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Schönenberger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wohlgemuth</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Kourist</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>van Niekerk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bräsen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Niemeyer</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Siebers</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2020">2020</year>
        <article-title>A combined experimental and modelling approach for the Weimberg pathway optimisation</article-title>
        <source>Nature Communications</source>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>1098</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-14830-y</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-25">
      <label>Shin et al. (2023)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Porubsky</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Carothers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sauro</surname>
            <given-names>HM</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2023">2023</year>
        <article-title>Standards, dissemination, and best practices in systems biology</article-title>
        <source>Current Opinion in Biotechnology</source>
        <volume>81</volume>
        <elocation-id>102922</elocation-id>
        <pub-id pub-id-type="doi">10.1016/j.copbio.2023.102922</pub-id>
        <pub-id pub-id-type="pmid">37004298</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-26">
      <label>Swainston et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Swainston</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Batista-Navarro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Carbonell</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Dobson</surname>
            <given-names>PD</given-names>
          </name>
          <name>
            <surname>Dunstan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jervis</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Vinaixa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Ananiadou</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Faulon</surname>
            <given-names>J-L</given-names>
          </name>
          <name>
            <surname>Mendes</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kell</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Scrutton</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>Breitling</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2017">2017</year>
        <article-title>biochem4j: integrated and extensible biochemical knowledge through graph databases</article-title>
        <source>PLOS ONE</source>
        <volume>12</volume>
        <issue>7</issue>
        <elocation-id>e0179130</elocation-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0179130</pub-id>
        <pub-id pub-id-type="pmid">28708831</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-27">
      <label>Terzer &amp; Stelling (2008)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Terzer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stelling</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2008">2008</year>
        <article-title>Large-scale computation of elementary flux modes with bit pattern trees</article-title>
        <source>Bioinformatics</source>
        <volume>24</volume>
        <issue>19</issue>
        <fpage>2229</fpage>
        <lpage>2235</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn401</pub-id>
        <pub-id pub-id-type="pmid">18676417</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-28">
      <label>Waltemath et al. (2011)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Waltemath</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bergmann</surname>
            <given-names>FT</given-names>
          </name>
          <name>
            <surname>Hucka</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolpakov</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>AK</given-names>
          </name>
          <name>
            <surname>Moraru</surname>
            <given-names>II</given-names>
          </name>
          <name>
            <surname>Nickerson</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sahle</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Snoep</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Le Novère</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <year iso-8601-date="2011">2011</year>
        <article-title>Reproducible computational biology experiments with SED-ML—the simulation experiment description markup language</article-title>
        <source>BMC Systems Biology</source>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>198</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-5-198</pub-id>
        <pub-id pub-id-type="pmid">22172142</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

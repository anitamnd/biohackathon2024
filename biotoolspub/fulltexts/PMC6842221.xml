<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6842221</article-id>
    <article-id pub-id-type="publisher-id">3144</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-3144-3</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ProtRank: bypassing the imputation of missing values in differential expression analysis of proteomic data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Medo</surname>
          <given-names>Matúš</given-names>
        </name>
        <address>
          <email>matus.medo@unifr.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Aebersold</surname>
          <given-names>Daniel M.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Medová</surname>
          <given-names>Michaela</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0479 0855</institution-id><institution-id institution-id-type="GRID">grid.411656.1</institution-id><institution>Department of Radiation Oncology, Inselspital, Bern University Hospital and University of Bern, </institution></institution-wrap>Bern, 3010 Switzerland </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0479 0855</institution-id><institution-id institution-id-type="GRID">grid.411656.1</institution-id><institution>Department for BioMedical Research, Inselspital, Bern University Hospital and University of Bern, </institution></institution-wrap>Bern, Switzerland </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0369 4060</institution-id><institution-id institution-id-type="GRID">grid.54549.39</institution-id><institution>Institute of Fundamental and Frontier Sciences, University of Electronic Science and Technology of China, </institution></institution-wrap>Chengdu, 610054 PR China </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 0478 1713</institution-id><institution-id institution-id-type="GRID">grid.8534.a</institution-id><institution>Department of Physics, University of Fribourg, </institution></institution-wrap>Fribourg, 1700 Switzerland </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>9</day>
      <month>11</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>9</day>
      <month>11</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>563</elocation-id>
    <history>
      <date date-type="received">
        <day>6</day>
        <month>6</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>10</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Medo et al. 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Data from discovery proteomic and phosphoproteomic experiments typically include missing values that correspond to proteins that have not been identified in the analyzed sample. Replacing the missing values with random numbers, a process known as “imputation”, avoids apparent infinite fold-change values. However, the procedure comes at a cost: Imputing a large number of missing values has the potential to significantly impact the results of the subsequent differential expression analysis.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We propose a method that identifies differentially expressed proteins by ranking their observed changes with respect to the changes observed for other proteins. Missing values are taken into account by this method directly, without the need to impute them. We illustrate the performance of the new method on two distinct datasets and show that it is robust to missing values and, at the same time, provides results that are otherwise similar to those obtained with edgeR which is a state-of-art differential expression analysis method.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">The new method for the differential expression analysis of proteomic data is available as an easy to use Python package.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Proteomics</kwd>
      <kwd>Differential expression analysis</kwd>
      <kwd>Imputation</kwd>
      <kwd>Significance</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The recent availability of high-resolution omic measurements has called for the creation of statistical methods and tools to analyze the resulting data [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>]. Proteomics, a large-scale analysis of proteins in biomaterials such as cells or plasma, in particular, can help elucidate molecular mechanisms of disease, aging, and effects of the environment [<xref ref-type="bibr" rid="CR5">5</xref>]. Expression proteomics, quantitative study of protein expression between samples that differ by some variable, is used to identify novel proteins in signal transduction or disease-specific proteins [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>]. The application of proteomic technologies to clinical specimens has the potential to revolutionize the treatment of many diseases: From biomarker discovery and validation to personalized therapies, proteomic techniques allow a greater understanding of the dynamic processes involved in disease, increasing the power of prediction, diagnosis, and prognosis [<xref ref-type="bibr" rid="CR8">8</xref>–<xref ref-type="bibr" rid="CR11">11</xref>]. Detailed measurements of protein levels allow for characterizing protein modifications and identifying the targets of drugs [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
    <p>The analysis of proteomic data typically involves a comparison of protein expression of the entire proteome or its subproteomes between samples. However, data from proteomic and phosphoproteomic experiments are not error-free. Of various measurement errors, missing values are particularly severe. They arise when signals from some proteins are not detected by the instrument. Due to the technical setup of measurements, proteomic data often contain a considerable fraction of missing (zero) values. To avoid mathematical difficulties (such as infinite or very large logarithmic fold changes in pairwise comparisons involving a missing value), missing values are typically removed by a process which is referred to as <italic>imputation</italic>: All missing values are replaced by samples from a given distribution [<xref ref-type="bibr" rid="CR7">7</xref>]. Besides the need to choose the distribution’s parameters, the often-ignored drawback of value imputation is that it has the potential to distort the analysis results. We use two real datasets to show that imputation indeed significantly alters the analysis results. We propose a method for differential expression analysis of proteomic data where missing values can be taken into account naturally, without the need to replace them by random numbers.</p>
    <p>To demonstrate that the new method performs well, we use transcriptomic data where missing values do not pose a problem. Standard methods for differential expression analysis, such as the edgeR package [<xref ref-type="bibr" rid="CR2">2</xref>] which performs well in many cases [<xref ref-type="bibr" rid="CR13">13</xref>], can be therefore used to produce reliable results on transcriptomic data. We use the thus-obtained results as a benchmark with which we compare the results produced by the newly proposed method. Subsequently, we introduce artificial missing values in the analyzed data to demonstrate that the new method is significantly more robust to the presence of missing values than edgeR. We conclude by analyzing phosphoproteomic data where problematic missing values occur naturally. An implementation of the new method in Python is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/8medom/ProtRank">https://github.com/8medom/ProtRank</ext-link> (see “How to use the ProtRank package” section for a brief usage description).</p>
  </sec>
  <sec id="Sec2" sec-type="results">
    <title>Results</title>
    <sec id="Sec3">
      <title>Missing values in proteomic data and their impact</title>
      <p>The simplest way how to deal with missing values is to ignore them and analyze only the proteins that have no missing values at all. This is problematic for two reasons. First, proteomic data typically involve a large fraction of missing values and the proteins that have no missing values can be thus correspondingly scarce. In the case of the phosphoproteomic data analyzed later (see “Description of the phosphoproteomic data” section for details), for example, the overall fraction of missing values is 43.6% and only 37.9% of all proteins have no missing values. The data on the remaining 62.1% of proteins would be wasted in this case. Second, the missing values can contain important information: A protein can be absent in the results not due to a measurement error but because of actual biological processes—application of an inhibitive treatment, for example. For this reason, we need an approach that can analyze proteomic data where missing values are still present.</p>
      <p>A comparison between expression values in different samples is usually based on logarithmic fold change values. Denoting the counts of gene <italic>g</italic> in samples 1 and 2 as <italic>n</italic><sub><italic>g</italic>,1</sub> and <italic>n</italic><sub><italic>g</italic>,2</sub>, respectively, the logarithmic fold change of sample 2 compared to sample 1 is defined as <italic>x</italic><sub><italic>g</italic></sub>(1→2):= log2<italic>n</italic><sub><italic>g</italic>,2</sub>/<italic>n</italic><sub><italic>g</italic>,1</sub> (we use “gene count” as a generic term for data from a proteomic/phosphoproteomic/transcriptomic measurement). To avoid an undefined expression when either of the counts is zero, a small prior count <italic>n</italic><sub>0</sub> is usually added to both of them, so that the logarithmic fold change becomes
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  x_{g}(1\to2):=\log_{2}\frac{n_{g,2} + n_{0}}{n_{g,1} + n_{0}}.  $$ \end{document}</tex-math><mml:math id="M2"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>→</mml:mo><mml:mn>2</mml:mn><mml:mo>)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>log</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mi>.</mml:mi></mml:math><graphic xlink:href="12859_2019_3144_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We use <italic>n</italic><sub>0</sub>=1 through the paper. However, this approach is not effective in proteomic data where missing values appear also in comparisons where the other count is very large. The resulting logarithmic fold change, though not infinite, is then still large and has the potential to distort the statistical analysis of the data. The different patterns of missing values in various datasets are illustrated by Fig. <xref rid="Fig1" ref-type="fig">1</xref> which shows the distributions of positive values in pairwise comparisons involving zero and a positive count. The distributions are shown for two different datasets: A transcriptomic dataset analyzed in [<xref ref-type="bibr" rid="CR14">14</xref>] and a phosphoproteomic dataset analyzed in [Koch et al, manuscript in preparation] (see “<xref rid="Sec9" ref-type="sec">Description of the transcriptomic data</xref>” section and “Description of the phosphoproteomic data” section for the datasets’ descriptions). To allow for easy comparison, the counts are scaled by the dataset’s median in both cases. While in the transcriptomic data, zeros occur in comparisons with small counts (and hence bulk of the shown distribution is close to zero), the phosphoproteomic data are very different and contain a large number of proteins whose count changes from a large value (larger than, for example, the median count) to zero or vice versa. Missing values involved in such comparisons are referred to <italic>irregular zeros</italic> from now on. Another way of looking at irregular zeros is provided by the following probabilistic statement: For counts greater than the dataset’s median in the phosphoproteomic dataset, the probability that the other value in the comparison is zero is 0.11. The same probability is 4.6·10<sup>−5</sup> in the transcriptomic dataset.
<fig id="Fig1"><label>Fig. 1</label><caption><p>The distribution of positive counts in pairwise comparisons where the other count is zero. We compare here transcriptomic and phosphoproteomic data. To make the two datasets directly comparable, the positive counts are scaled by the datasets’ respective median counts</p></caption><graphic xlink:href="12859_2019_3144_Fig1_HTML" id="MO1"/></fig>
</p>
      <p>When irregular zeros are present in the data, <italic>n</italic><sub>0</sub> necessary to shrink the logarithmic fold change values computed with Eq. (<xref rid="Equ1" ref-type="">1</xref>) is prohibitively large (of the order of the median count): It would significantly shrink also the logarithmic fold change values in comparisons without irregular zeros, and the differential expression analysis would be thus still distorted towards comparisons involving irregular zeros. In summary, setting <italic>n</italic><sub>0</sub>&gt;0 is useful to shrink the logarithmic fold changes for low counts towards zero, but <italic>n</italic><sub>0</sub> itself cannot solve the problem of irregular zeros.</p>
      <p>Methods aiming specifically at the analysis of proteomic data acknowledge the problem of missing values and deal with it by various “imputation” techniques. For example, the authors of the Perseus computational platform for proteomic data [<xref ref-type="bibr" rid="CR7">7</xref>] suggest to replace the missing values with values drawn from the dataset’s empirical distribution which in addition is to be scaled and shifted. While scaling is said to prevent the imputed values from having high weight in the subsequent statistical evaluation, down-shifting is motivated by the fact that low-expression proteins are more likely to remain undetected and thus lead to zero measured counts.</p>
      <p>Since there are typically many missing values that need to be imputed, it is not surprising that their imputation has the potential to dramatically change results of the subsequent differential expression analysis. To demonstrate that, we apply imputation with various values of the scale and shift parameters (see “Imputation of missing values” section for details) to the transcriptomic data which, as shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, are free of irregular zeros and hence the results obtained with usual tools can be considered as reliable. In particular, we compare the significant genes identified by the edgeR package [<xref ref-type="bibr" rid="CR2">2</xref>] in the original transcriptomic dataset with the significant genes identified by edgeR after all missing values are imputed. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows that the impact of imputation is substantial: Around 80% of the originally identified significantly changing genes are lost by the recommended shift −1.8 and scale 0.5. While comparatively better results are obtained with scale 0 and shift either −2 or 0 (the bottom left and right corners, respectively), around 70% of the original significant genes are still lost. Of the two “favorable” settings, we thus use imputation with zero shift and scale one from now on (i.e., the missing values are replaced with the dataset’s mean). The other setting, shift −2 and 0, while comparatively well-performing in this evaluation, is sensitive to irregular zeros (results not shown).
<fig id="Fig2"><label>Fig. 2</label><caption><p>The impact of imputation on differential expression analysis. The fraction of the significant genes identified by edgeR in the original transcriptomic data that are lost when the data are analyzed by edgeR after imputing missing values with various shift and scale parameters. Significance was evaluated with edgeR using the false discovery rate (FDR) threshold of 0.20. Results are averaged over 30 imputation realizations</p></caption><graphic xlink:href="12859_2019_3144_Fig2_HTML" id="MO2"/></fig>
</p>
    </sec>
    <sec id="Sec4">
      <title>Robustness of differential expression analysis methods to irregular zeros</title>
      <p>Having seen that the often-used imputation of missing values does not provide a definitive answer to the problem of irregular zeros, our main contribution is to propose a ranking-based approach to find significantly changing genes. By contrast to R’s RankProd package [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR16">16</xref>], which is also based on ranking the genes by fold-change values, we rank comparisons that involve a missing value separately from those that do not involve a missing value (see “ProtRank description” section for a detailed description). The need for a double ranking is motivated by the fact that, as shown in “<xref rid="Sec3" ref-type="sec">Missing values in proteomic data and their impact</xref>” section, it is impossible to rely on logarithmic fold changes when irregular zeros are present. At the same time, the missing values are not necessarily a manifestation of an erroneous or noisy measurement and can contain useful information: If a gene goes from a positive value to zero consistently in multiple comparisons, this may be an indication that the gene is downregulated in the comparison. We propose a method that takes both cases into account: The logarithmic fold changes and their magnitude relatively to other genes’ fold changes are computed for comparisons without missing values, all comparisons where a zero count changes in a positive count are assigned the same relatively high virtual rank, and all comparisons where a positive count changes in a zero count are assigned the same relatively low rank. Since this method is rank-based and aims in particular at proteomic and phosphoproteomic data where the missing values problem is particularly common, we call the new method ProtRank.</p>
      <p>To demonstrate the new method’s robustness with respect to irregular zeros, we compare it with the behavior of edgeR which is probably the most popular tool for differential expression analysis [<xref ref-type="bibr" rid="CR2">2</xref>] that we use both with and without imputation of missing values. We apply the methods on the transcriptomic dataset used in the previous section which, as we have seen, is essentially free of irregular zeros. We introduce the irregular zeros in the dataset by choosing at random a given fraction of positive values in the original dataset and changing them in zeros; in this way, we obtain perturbed datasets. We aim to study how does the noise in the particular form of zeros introduced in the data at random influence each respective method: EdgeR without imputation, edgeR with imputation, and the newly introduced ProtRank.</p>
      <p>Since the original transcriptomic dataset is essentially free of irregular zeros, the significant genes identified by edgeR in the original dataset provide a natural benchmark against which results obtained with other methods can be compared; this set of original significant differentially expressed (DE) genes is denoted <inline-formula id="IEq1"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}$\end{document}</tex-math><mml:math id="M4"><mml:mi mathvariant="script">O</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq1.gif"/></alternatives></inline-formula>. We denote the set of significant DE genes identified by method <italic>m</italic> in perturbed data as <inline-formula id="IEq2"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {P}_{m}$\end{document}</tex-math><mml:math id="M6"><mml:msub><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq2.gif"/></alternatives></inline-formula> and compare it with the original set <inline-formula id="IEq3"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {O}$\end{document}</tex-math><mml:math id="M8"><mml:mi mathvariant="script">O</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq3.gif"/></alternatives></inline-formula>. For this comparison, we use <italic>precision</italic> and <italic>recall</italic> which are metrics commonly used in data mining literature [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]. Precision is defined as the fraction of the perturbed significant genes that are also original significant genes, <inline-formula id="IEq4"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left |{\mathcal {P}_{m}\cap \mathcal {O}}\right |/\left |{\mathcal {P}_{m}}\right |$\end{document}</tex-math><mml:math id="M10"><mml:mfenced close="|" open="|" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="script">O</mml:mi></mml:mrow></mml:mfenced><mml:mo>/</mml:mo><mml:mfenced close="|" open="|" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq4.gif"/></alternatives></inline-formula>. Recall is defined as the fraction of originally identified significant genes that are also among the perturbed DE genes, <inline-formula id="IEq5"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left |{\mathcal {P}_{m}\cap \mathcal {O}}\right |/\left |{\mathcal {O}}\right |$\end{document}</tex-math><mml:math id="M12"><mml:mfenced close="|" open="|" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">P</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∩</mml:mo><mml:mi mathvariant="script">O</mml:mi></mml:mrow></mml:mfenced><mml:mo>/</mml:mo><mml:mfenced close="|" open="|" separators=""><mml:mrow><mml:mi mathvariant="script">O</mml:mi></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq5.gif"/></alternatives></inline-formula>. Both metrics range from 0 (worst result) to 1 (best result). We use the described approach to evaluate the original edgeR package, edgeR with imputation, and the newly developed ProtRank method. In each case, we use the false discovery rate (FDR) threshold of 0.20 to decide whether a gene is significant or not. To make the impact of irregular zeros explicit, we also assess the fraction of zero counts corresponding to the identified significant DE genes.</p>
      <p>Figure <xref rid="Fig3" ref-type="fig">3</xref> summarizes the results of the robustness analysis. EdgeR without imputation naturally obtains the perfect result on unperturbed data (zero fraction of added zeros) as the benchmark DE genes are also obtained with edgeR on unperturbed data. However, its sensitivity to irregular zeros is high: When as few as 1% of positive counts are turned into zeros, recall drops under 20% (i.e., more than 80% of the originally identified significant genes are lost). The method’s precision decays slower but still much faster than is the case for the other methods. By contrast, edgeR with imputation is quite resistant to additional irregular zeros as its precision and recall decrease by roughly 40% when as much as 10% of zeros are added in data at random. Albeit stable, the results are quite bad with precision and recall decreasing from 0.31 to less than 0.20 (this is in agreement with Fig. <xref rid="Fig2" ref-type="fig">2</xref>). ProtRank is even more robust to irregular zeros: Its precision is stable and its recall decreases by roughly 40% similarly to edgeR with imputation. The most important observation is that precision and recall achieved by ProtRank are significantly better than that of edgeR with imputation in the whole range of perturbation fractions. ProtRank outperforms edgeR without imputation in terms of recall (which is the more important of the two metrics as it quantifies how many of the originally found DE genes do we still find in the perturbed data) for all perturbation fractions except for the two smallest ones.
<fig id="Fig3"><label>Fig. 3</label><caption><p>The impact of zeros added at random in the data. Precision (<bold>a</bold>) and recall (<bold>b</bold>) of various differential expression analysis methods computed with respect to the significant DE genes identified by edgeR in the original data. The fraction of zero counts among the identified DE genes (<bold>c</bold>) shows how much is each method influenced by the added zeros. The error bars show the standard deviation values computed from the analysis of 10 independent perturbed sets for each fraction of added zeros</p></caption><graphic xlink:href="12859_2019_3144_Fig3_HTML" id="MO3"/></fig>
</p>
      <p>The last panel shows that the significant genes chosen by ProtRank have the smallest fraction of zero counts of the three methods. EdgeR without imputation is expectedly sensitive to the introduced zeros and the chosen significant genes have more than 40% of zero counts when as few as 1% of positive counts are changed in zeros. This shows that the irregular zeros, that we introduce at random and without any relation to differential expression of genes, chiefly determine which genes are chosen by edgeR as significantly differentially expressed. While less sensitive to the fraction of added zeros itself, edgeR with imputation also chooses significant genes with many zero counts (that are in turn changed in positive values by imputation). This high starting value shows that the imputation process itself, albeit assumed to solve the problem of missing values, biases the selection of significantly DE genes towards the genes that have many missing values. By contrast, ProtRank chooses significant genes with few zero counts and the fraction of zero counts increases slowly with the fraction of added zeros.</p>
      <p>To better understand the difference between the results produced by the three considered methods, we evaluate the positions of the DE genes identified by edgeR in the other two rankings: The ranking produced by edgeR with imputation and the ranking produced by ProtRank (in the rankings, the genes are ranked by the significance of their differential expression from the most to the least significant). In Fig. <xref rid="Fig4" ref-type="fig">4</xref>, we visualize the comparison using the well-known receiver operating characteristic (ROC) curve [<xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>] and the precision-recall (PR) curve that has been advocated for use in biological data in [<xref ref-type="bibr" rid="CR21">21</xref>]. The ROC curve in Fig. <xref rid="Fig4" ref-type="fig">4</xref>a, especially, the inset focusing at the top of the rankings, show that the ProtRank’s ranking has the edgeR’s DE genes at higher positions than edgeR with imputation does.
<fig id="Fig4"><label>Fig. 4</label><caption><p>A comparison of the significant genes and rankings obtained with respective methods. <bold>a</bold> The receiver operating characteristic (ROC) curves based on comparing with the DE genes identified by edgeR; the bottom-left corner is magnified in the inset. <bold>b</bold> The precision-recall (PR) curves based on comparing with the DE genes identified by edgeR. <bold>c</bold> The receiver operating characteristic (ROC) curves based on comparing with the DE genes identified by ProtRank and edgeR with imputation, respectively, in the ranking of genes produced by edgeR on the original data</p></caption><graphic xlink:href="12859_2019_3144_Fig4_HTML" id="MO4"/></fig>
</p>
      <p>The reason why [<xref ref-type="bibr" rid="CR21">21</xref>] suggest to use the PR curve instead of the ROC curve is that the number of <italic>positive instances</italic> (in our case represented by the correctly identified differentially expressed genes) is much smaller than the number of <italic>negative instances</italic> (in our case represented by the genes that are correctly identified as not differentially expressed). The ROC curve involves <italic>true negatives</italic> in its computation which, due to their abundance, give rise to ROC curves that have a large area under them; this area is a common way to quantify a ROC curve. This is well visible in panel Fig. <xref rid="Fig4" ref-type="fig">4</xref>a where the areas under the two ROC curves are 0.98 and 0.87, respectively. The PR curves in Fig. <xref rid="Fig4" ref-type="fig">4</xref>b overcome this limitation and make a clear distinction between the two evaluated methods: The area under the ProtRank’s PR curve, 0.45, is four times as large as the area 0.11 produced by edgeR with imputation.</p>
      <p>We finally do a reverse check and examine the positions of the significant DE genes identified by edgeR with imputation and ProtRank, respectively, in the ranking of genes by the significance of their differential expression produced by edgeR. The result is shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref> where it is immediately visible that the significant genes chosen by ProtRank are all highly ranked in the original gene ranking produced by edgeR without imputation. In fact, all ProtRank’s significant genes (we use the FDR threshold of 0.20 again) are in the top 2.2% of the ranking of genes by edgeR in the unperturbed data. By contrast, a substantial fraction of genes chosen by edgeR with imputation are scattered through the lower parts of the original gene ranking. This shows that in the absence of irregular zeros, results obtained with ProtRank are similar to those obtained with edgeR without imputation of missing values.</p>
    </sec>
    <sec id="Sec5">
      <title>Results on the phosphoproteomic data</title>
      <p>We now return to the phoshoproteomic data that initially motivated the development of the statistical framework that we introduce in this paper (see “Description of the phosphoproteomic data” section for a detailed dataset description). Since the complete analysis of the data, supplemented by extensive biological experiments, will be part of a forthcoming manuscript [Koch et al, manuscript in preparation], we provide here only a general evaluation of the identified significantly differentially expressed phosphopeptides. Without the loss of generality, we use the data corresponding to four samples measured one hour after irradiation (SAMT_IR1h_1, SAMT_IR1h_2, SAYH_IR1h_1, SAYH_IR1h_2) and four corresponding controls (SAMT_C_1, SAMT_C_2, SAYH_C_1, SAYH_C_2). As explained in “Description of the phosphoproteomic data” section, SA, MT, and YH are three respective mutations that the sample cells can have; labels 1 and 2 mark two biological duplicates that were available for each mutation combination. In the measurement data, there are 6201 peptides that have at least one positive count in the eight aforementioned samples. The dataset contains 31<italic>%</italic> of zero counts, many of which are irregular zeros (i.e., they correspond to a pair of samples where the given phosphopeptide’s count in the other sample is larger than the median count).</p>
      <p>The numbers of DE phosphopeptides identified by respective approaches using the FDR threshold 0.20 are: 1278 for edgeR without imputation, 93 for edgeR with imputation, and 45 for ProtRank. The result obtained with edgeR without imputation is clearly excessive with more than 20% of all peptides being identified as significantly differentially expressed. This is due to the irregular zeros that distort the results; this is shown by 63% of the DE phosphopeptides’ counts being zeros, which is more than double of the overall fraction of zero counts in the data. EdgeR with imputation does not have a similar problem and yields a similar number of differentially expressed phosphopeptides as ProtRank.</p>
      <p>To gain further insights, we evaluate median counts (computed from the positive counts only) of the identified DE phosphopeptides, in particular in comparison with median counts of all phosphopeptides. Denoting the fraction of the identified DE phosphopeptides in the count bin <italic>b</italic> as <inline-formula id="IEq6"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{DE}_{b}$\end{document}</tex-math><mml:math id="M14"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">DE</mml:mtext></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq6.gif"/></alternatives></inline-formula> and the fraction of all phosphopeptides in the count bin <italic>b</italic> as <inline-formula id="IEq7"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{0}_{b}$\end{document}</tex-math><mml:math id="M16"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq7.gif"/></alternatives></inline-formula>, the ratio <inline-formula id="IEq8"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$f^{DE}_{b}/f^{0}_{b}$\end{document}</tex-math><mml:math id="M18"><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">DE</mml:mtext></mml:mrow></mml:msubsup><mml:mo>/</mml:mo><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq8.gif"/></alternatives></inline-formula> quantifies the relative representation of DE phosphopeptides from the given count bin <italic>b</italic>. When the relative representation is more than one, the given count bin <italic>b</italic> is <italic>over-represented</italic> among the identified DE phosphopeptides. When the relative representation is less than one, the given count bin <italic>b</italic> is <italic>under-represented</italic> among the identified DE phosphopeptides.</p>
      <p>The result is shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref> which shows that the three evaluated approaches greatly differ in how their representation changes with the median phosphopeptide count. While edgeR without imputation and ProtRank show little bias over the whole range of median counts, edgeR with imputation shows a strong bias against phosphopeptides whose counts are close to the overall average count. EdgeR’s behavior is a direct consequence of the imputation process that replaces missing values with mean count (in our case) and thus makes it possible that the phosphopeptides with low or high median count can have high apparent changes between their low/high actual counts and the average counts introduced by imputation. This is well visible in Fig. <xref rid="Fig5" ref-type="fig">5</xref> where bins close to the average count are strongly under-represented, and bins containing phosphopeptides with low/high counts are over-represented.
<fig id="Fig5"><label>Fig. 5</label><caption><p>The relative representation of DE phosphopeptides identified by various methods as a function of their log-transformed median count. The representation value of one indicates that phosphopeptides with the given median count are neither over-represented nor under-represented among the identified DE phosphopeptides</p></caption><graphic xlink:href="12859_2019_3144_Fig5_HTML" id="MO5"/></fig>
</p>
      <p>To summarize the results obtained on the phosphoproteomic data: ProtRank yields a plausible number of DE phosphopeptides which furthermore show no systemic biases. By contrast, edgeR without imputation produces an excess number of DE phosphopeptides and edgeR with imputation is strongly skewed toward phosphopeptides that have either low or high counts.</p>
      <p>The complex experimental setup of this dataset allows us to illustrate another ProtRank’s asset: The possibility to simultaneously address all possible differential expression patterns (see “ProtRank description” section for details). In the case of the given dataset, for example, it is possible that the two types of samples (SAMT and SAYH) react to irradiation in a different way: Some phosphopeptides can increase upon irradiation in SAMT samples and decrease upon irradiation in SAYH samples, for example. Besides the baseline comparison of all irradiated samples with their counterpart controls, ProtRank makes it possible to consider two separate groups—SAMT samples and SAYH samples, in this case. The rank score of each gene is then computed in such a way that the genes that consistently increase upon irradiation in both SAMT and SAYH samples, the genes that consistently decrease upon irradiation in both SAMT and SAYH samples, as well as the genes that increase upon irradiation in SAMT and decrease in SAYH samples (and vice versa), are assigned a high rank score. From the 45 genes identified by ProtRank as differentially expressed, 18 increase upon irradiation in both SAMT and SAYH, 18 decrease in both SAMT and SAYH, 6 increase in SAMT and decrease in SAYH, and 3 decrease in SAMT and increase in SAYH. The increase in SAMT and decrease in SAYH combination produces a particularly robust signal with two of the identified genes having FDR&lt;0.01.</p>
      <p>Similar multi-directional analyses are also possible using other tools—such as edgeR that we use here for comparison—but they need to be manually done separately for each combination of directions, and the obtained results have to be compiled whilst explicitly taking into account that they come from multiple comparisons. ProtRank allows the same analysis to be carried out in two lines (first defining the groups of comparisons to be made, second calling ProtRank’s main gene-ranking function).</p>
    </sec>
    <sec id="Sec6">
      <title>Comparison with Perseus and Proteus</title>
      <p>We have shown so far that ProtRank overcomes the problem of missing values without the need to impute them and, at the same time, produces results that are in the absence of irregular zeros to a large extent comparable with results produced by the state-of-art differential analysis tool edgeR [<xref ref-type="bibr" rid="CR2">2</xref>]. We now proceed by briefly comparing the ProtRank results with the results obtained by two other existing tools: (1) Perseus, a well-established computational platform for proteomic data [<xref ref-type="bibr" rid="CR7">7</xref>] which uses imputation to deal with missing values and (2) Proteus, a recent R package for the analysis of quantitative proteomics data [<xref ref-type="bibr" rid="CR22">22</xref>]. As we further argue in Discussion, a comprehensive comparison of the available tools should also include the use of synthetic datasets benchmarked against a number of different real datasets. We see this as an important task for future research.</p>
      <p>With Perseus, we used the transcriptomics dataset which, as we have seen, is essentially free of irregular zeros and EdgeR is therefore expected to produce a meaningful differential expression analysis result. We first log-transformed the counts and then imputed the missing values [<xref ref-type="bibr" rid="CR7">7</xref>]. While the software offers two different imputation approaches, the default imputation based on the mean and the standard deviation for each sample and the “global” imputation based on the mean and the standard deviation for all samples, the results are qualitatively similar for both of them. We used the function “multiple-sample test” to identify the genes that are differentially expressed between the primary and recurrent tumor samples. Despite trying various analysis settings, Perseus identifies a small number of genes as differentially expressed. We thus focus our comparison on the top 100 most differentially expressed genes, even when they are not marked as significant. Of them, less than 10% are among the 114 significantly DE genes identified by edgeR. The area under the precision-recall curve is 0.04 as opposed to 0.45 achieved by ProtRank. In other words, the ranking of genes produced by Perseus substantially differs from the ranking of genes produced by edgeR. This is in line with our previous observation that imputation has the potential to dramatically alter the differential expression analysis results. By changing a chosen fraction of counts to zeros, we can further probe the Perseus’s robustness with respect to artificially introduced zeros. When 0.02 of all counts are chosen at random and changed to zeros, 40% of the original top 100 genes remain in the top 100 on average. When the fraction of zeros introduced at random increases to 0.10, 25% of the original top 100 genes remain in the top 100 on average. These results are similar to those achieved by ProtRank.</p>
      <p>Proteus is designed to use an evidence file from MaxQuant as input and currently lacks the possibility to use a simple table of peptide intensities instead; to apply Proteus on the datasets studied here so far is therefore not possible. Instead, we use the peptide intensities produced by the example described in [<xref ref-type="bibr" rid="CR22">22</xref>] in “<xref rid="Sec3" ref-type="sec">Missing values in proteomic data and their impact</xref>” section. This dataset contains data on 34,733 peptides measured in two biological conditions, named A and B, and seven replicates each (14 samples in total). The dataset has the properties expected for a mass spectrometry proteomics measurement: 26% of all counts are zeros and 6.5% of all A vs. B comparisons involve irregular zeros. EdgeR is not expected to produce high quality results for such input data. Proteus and ProtRank yield similar numbers of significant DE peptides, 317 and 344, respectively, for the significance threshold of 0.05, for example. The overlap between these two sets of DE peptides is 120 with further 100 peptides in each set identified as DE by the other tool at the significance level of 0.20. Similar findings follow on the aggregated protein intensities data obtained with the Proteus’s function makeProteinTable (the resulting dataset contains 3525 proteins). Proteus and ProtRank then yield 42 and 76 significant DE proteins, respectively, at the significance threshold of 0.05, and the overlap of these two sets is 29. The conclusion is that the DE analysis results obtained with Proteus and ProtRank are similar.</p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="discussion">
    <title>Discussion</title>
    <p>We have shown that the presence of irregular zeros—missing values that in the differential expression (DE) analysis occur in comparisons with substantial measured values—in proteomics data importantly influences the resulting lists of DE genes produced by common statistical tools such as edgeR. We stress that for other kinds of input data, such as transcriptomics data, edgeR is a good statistical tool that produces high-quality results.</p>
    <p>There are two main directions that we see for the future development of ProtRank. Firstly, the computationally intensive bootstrap step (which is used to estimate the false detection rate, FDR) could be replaced by an approximate analytical procedure. The first motivation for such an approach is provided by Fig. <xref rid="Fig7" ref-type="fig">7</xref> where the aggregate bootstrap scores decay exponentially at the top positions of the gene ranking. Analytical estimates of the bootstrap score distribution could then be used as a replacement for the actual bootstrap procedure.
<fig id="Fig6"><label>Fig. 6</label><caption><p>Distribution of the logarithm of the positive counts in the phoshoproteomic data (solid line) and the normal distribution with <italic>μ</italic><sub>0</sub>=7.7 and <italic>σ</italic><sub>0</sub>=1.3 that fits the bulk of the distribution</p></caption><graphic xlink:href="12859_2019_3144_Fig6_HTML" id="MO6"/></fig>
<fig id="Fig7"><label>Fig. 7</label><caption><p>The rank plot of the gene rank score computed by ProtRank in the transcriptomic data (real and bootstrapped data). The shaded region indicates the standard deviation in bootstrap realizations. At the FDR threshold of 0.20, ProtRank finds 116 significant DE genes. In the bootstrap data, there are 23 genes that have a better average score than the 116th gene in the real data (23/116≈0.198)</p></caption><graphic xlink:href="12859_2019_3144_Fig7_HTML" id="MO7"/></fig>
</p>
    <p>Secondly, a different recent method, Proteus, addressing the problem of missing values in proteomics [<xref ref-type="bibr" rid="CR22">22</xref>] came to our attention in the final stages of this manuscript’s preparation. We have shown in “<xref rid="Sec6" ref-type="sec">Comparison with Perseus and Proteus</xref>” section that albeit similar, the results produced by ProtRank and Proteus differ in the evaluation of numerous peptides and proteins. A detailed comparison of these methods on various proteomic and phosphoproteomic datasets as done, for example, in [<xref ref-type="bibr" rid="CR13">13</xref>] for methods designed for transcriptomic data, is the natural first step. The natural limitation of such a comparison is that the ground truth (the “correct” list of differentially expressed peptides or phosphopeptides) is not known. This can be alleviated by evaluating the methods also on synthetic datasets. Upon careful calibration, synthetic datasets can share many of real datasets’ features which makes the subsequent evaluation of methods more credible [<xref ref-type="bibr" rid="CR23">23</xref>]. Combined benchmarking of methods on real and synthetic datasets could help establish a comprehensive robust statistical framework for the analysis of proteomic data.</p>
  </sec>
  <sec id="Sec8" sec-type="conclusion">
    <title>Conclusions</title>
    <p>We propose here a novel method for differential expression analysis of proteomic and phosphoproteomic data. The main advantage of this new method is that it is robust to the missing values that are common for proteomic and phosphoproteomic measurements. As a result, it does not require the imputation step which is commonly used to eliminate the missing values [<xref ref-type="bibr" rid="CR7">7</xref>], yet we show here that it at the same time importantly affects the obtained results. In data where missing values are absent, the new method—which we refer to as ProtRank because it is based on rankings—produces similar results as edgeR which is a widely-used method for differential expression analysis. When missing values are artificially introduced in the data, ProtRank’s results are more stable than the results produced by edgeR which is a demonstration of ProtRank’s robustness to missing values.</p>
    <p>ProtRank requires no parameters to be fine-tuned for the analysis. It also does not employ any normalization of counts in individual samples as this would not change the gene ranking that is taken into account by the method (only the numeric fold change values would change upon normalization). Importantly, ProtRank makes it possible to automatically address more complex differential expression patterns such as the case discussed in “<xref rid="Sec5" ref-type="sec">Results on the phosphoproteomic data</xref>” section where irradiation was applied on samples with various mutations and it was, in principle, possible that samples with one mutation react to irradiation differently than samples with other mutations. An implementation of ProtRank is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/8medom/ProtRank">https://github.com/8medom/ProtRank</ext-link> as an easy to use Python package.</p>
  </sec>
  <sec id="Sec9">
    <title>Methods</title>
    <p><bold>Description of the transcriptomic data</bold> The transcriptomic data from head and neck squamous cell carcinoma patient-derived cell lines have been originally analyzed in [<xref ref-type="bibr" rid="CR14">14</xref>] (the authors have used edgeR for the differential expression analysis). Out of the 15 cell lines used in that study, we keep eight of them for pairwise differential expression analysis: Cell lines UM-SCC-11A, -14A, -74A, and -81A from primary tumors, and cell lines UM-SCC-11B, -14B, -74B, and -81B from recurrent tumors. This corresponds to four pairwise comparisons (recurrent vs. primary) in total. Each sample has been measured once with RNA sequencing which produced integer counts of 18,369 distinct transcripts (see [<xref ref-type="bibr" rid="CR14">14</xref>] for details of the experimental setup). In the data, 11.9<italic>%</italic> of all counts are zero and the median of positive counts is 932. The fraction of pairwise comparisons where one count is greater than this median and the other count is zero, is less than 0.01% (3 comparisons out of 35,359); irregular zeros are thus essentially absent in this dataset.</p>
    <p><bold>Description of the phosphoproteomic data</bold> NIH3T3 mouse embryonic fibroblasts, kindly provided by Laura S. Schmidt (NIH NCI, Bethesda, MD), were transfected with the pBabe puro c-met WT plasmid [<xref ref-type="bibr" rid="CR24">24</xref>] (gift from Joan Brugge, Addgene plasmid #17493; <ext-link ext-link-type="uri" xlink:href="http://n2t.net/addgene:17493">http://n2t.net/addgene:17493</ext-link>) upon site-directed mutagenesis with either the wild-type or one of five mutated forms (M1268T, Y1248H, S1014A, M1268T/S1014A, Y1248H/S1014A) of the MET receptor tyrosine kinase and were irradiated with a single dose of 10 Gy (Gammacell GC40, MDS Nordion, Ontario, Canada). Samples from the six cell lines have been subjected to phosphoproteomic analysis via non-targeted mass spectrometry before irradiation, 1 h after irradiation, and 7 h after irradiation. Since two biological duplicates of each of the cell lines have been analyzed, the phosphoproteomic results are available for 6×3×2=36 samples in total. Integer peptide counts of 7572 unique peptides are available for each sample. In the data, 43.6<italic>%</italic> of all counts are zero and the median of positive counts is 1,294,600. The fraction of pairwise comparisons where one count is greater than this median, yet the other count is zero is 10.8<italic>%</italic>; irregular zeros are frequent in this dataset. An in-depth analysis of this dataset will be presented in [Koch et al, manuscript in preparation].</p>
    <p><bold>Phosphoproteomic data experimental setup</bold> Cell cultures were washed, scraped in phosphate-buffered saline and spun down for 5 min at 1000 rpm. Resulting pellets were resuspended in 8 M urea solution containing 0.1 M ammonium bicarbonate and disrupted by sonication. Supernatants were centrifuged at 12000 rpm for 10 min and protein concentration was determined by BCA Protein Assay (Pierce). Disulfide bonds were reduced with tris(2-carboxyethyl)phosphine at a final concentration of 5 mM at 37 <sup>∘</sup>C for 30 min and alkylation of free thiols was performed with 10 mM iodoacetamide at room temperature for 30 min in the dark. The solution was subsequently diluted with 0.1 M ammonium bicarbonate to a final concentration of 1.5 M urea and digestion was performed overnight at 37 <sup>∘</sup>C by sequencing-grade modified trypsin (Promega) at a protein-to-enzyme ratio of 50:1. Acidification was performed by adding formic acid to a final pH&lt;3 in order to stop protein digestion. Peptides were desalted on a C18 Sep-Pak cartridge (Waters) and one-tenth of the resulting eluate was processed individually for total proteome analysis. Phosphopeptides were enriched from 1 mg of initial peptide mass with TiO <sub>2</sub> as previously described [<xref ref-type="bibr" rid="CR25">25</xref>]. For mass spectrometry analysis, samples were resuspended in 20 <italic>μ</italic>l of 2% acetonitrile, 0.1% formic acid, and 1 <italic>μ</italic>l of each sample was used for injections. LC-MS/MS analysis was performed with an Easy nLC 1000 system (Thermo) connected to an Orbitrap Elite mass spectrometer (Thermo) equipped with a NanoFlex electrospray source. Peptides were separated on an Acclaim PepMap RSLC C18 column (150 mm ×75 <italic>μ</italic>m, 2 um particle size, Thermo) using a gradient of 5–30% buffer B (98% acetonitrile, 2% water, 0.15% formic acid) over 180 min at a flow rate of 300 nl/min. The Orbitrap Elite was operated in data-dependent acquisition mode, each cycle consisting of one MS scan followed by 15 MS/MS scans of the most abundant precursor ions. Collision-induced dissociation was performed with the following settings: Isolation width, 2 m/z; normalized collision energy, 35; activation time, 10 ms. Acquired MS data files were subsequently processed for identification and quantification using Maxquant version 1.5.2.8 [<xref ref-type="bibr" rid="CR26">26</xref>]. Settings were kept as default with the following specifications: ’First search peptide tolerance’ was set to 50 ppm and ’Main search peptide tolerance’ to 10 ppm. The considered modifications were oxidation (Met) and phosphorylation (Ser/Thr/Tyr). ’Label free quantification’ and ’Match between runs’ were enabled, with a match time window of two minutes. The search was performed against the mouse UniProt FASTA dataset UP000000589.</p>
    <p><bold>Imputation of missing values</bold> As can be seen in Fig. <xref rid="Fig6" ref-type="fig">6</xref>, the bulk of the distribution of the logarithm of positive gene counts can be well fitted with the normal distribution with mean <italic>μ</italic><sub>0</sub>=7.7 and standard deviation <italic>σ</italic><sub>0</sub>=1.3. In line with [<xref ref-type="bibr" rid="CR7">7</xref>], we thus replace the missing values with exp(<italic>V</italic>) where <italic>V</italic> is drawn from the normal distribution with mean 7.7+<italic>δ</italic><italic>σ</italic><sub>0</sub> and standard deviation <italic>λ</italic><italic>σ</italic><sub>0</sub>. The exponential transformation is needed here to go from the logarithmic counts used for display in Fig. <xref rid="Fig6" ref-type="fig">6</xref> back to the natural range and scale of gene counts. Parameters <italic>δ</italic> and <italic>λ</italic> are referred to as shift and scale, respectively. While [<xref ref-type="bibr" rid="CR7">7</xref>] recommends the choice <italic>δ</italic>=−1.8 and <italic>λ</italic>=0.5, the investigation of the parameter space in Fig. <xref rid="Fig2" ref-type="fig">2</xref> suggests <italic>δ</italic>=0, <italic>λ</italic>=0 to be a better choice when imputed data are used as input for the edgeR package and analyzed by applying its functions calcNormFactors (to normalize the data), EstimateDisp (to estimate the common and tagwise dispersion in the data), glmFit (to fit a generalized linear model), and glmLRT (to perform the likelihood ratio test and thus determine the results’ significance).
</p>
    <p><bold>ProtRank description</bold> Counts <italic>n</italic><sub><italic>g</italic>,<italic>i</italic></sub> of all genes (<italic>g</italic>=1,…,<italic>G</italic>; we use “gene” as a generic term here) in all samples (<italic>i</italic>=1,…,<italic>S</italic>) serve as input data for the analysis. The samples are organized in <italic>C</italic>=<italic>S</italic>/2 pairwise comparisons (<italic>c</italic>=1,…,<italic>C</italic>) that represent a change of conditions (before and after treatment, typically) for a given system (a cell line or a patient). The comparisons are further organized in groups of comparisons that are expected to go in the same direction. In the analysis described in “<xref rid="Sec5" ref-type="sec">Results on the phosphoproteomic data</xref>” section, one group of comparisons includes SAMT samples and the other group of comparisons includes SAYH samples. If the change is expected to be in the same direction in all samples (as would be the case when analyzing data from biological or technical duplicates of a system), there is only one group including all analyzed sample comparisons. The opposite extreme where each comparison forms a separate group is also possible, but groups involving more comparisons (including duplicates of the same conditions or comparisons of several samples that are expected to react uniformly) are likely to produce better results. Denoting the set of all comparisons as <inline-formula id="IEq9"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {C}$\end{document}</tex-math><mml:math id="M20"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq9.gif"/></alternatives></inline-formula>, we can write <inline-formula id="IEq10"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {C} = \{G_{1}, \dots, G_{N}\}$\end{document}</tex-math><mml:math id="M22"><mml:mi mathvariant="script">C</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq10.gif"/></alternatives></inline-formula> where <italic>N</italic> is the number of comparison groups. Then group <italic>G</italic><sub><italic>n</italic></sub> is composed of individual comparisons, <inline-formula id="IEq11"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$G_{n}=\{c_{n,1}, \dots, c_{n,M_{n}}\}$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq11.gif"/></alternatives></inline-formula> where <italic>M</italic><sub><italic>n</italic></sub> is the number of comparisons in group <italic>n</italic>. Finally, comparison <italic>c</italic><sub><italic>n</italic>,<italic>j</italic></sub> is composed of two samples, <inline-formula id="IEq12"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$c_{n,j}=\left \{s_{n,j}^{B}, s_{n,j}^{A}\right \}$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq12.gif"/></alternatives></inline-formula> which correspond to the sample before and after treatment, respectively.</p>
    <p>We first consider a single comparison of samples <inline-formula id="IEq13"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$s_{n,j}^{B}$\end{document}</tex-math><mml:math id="M28"><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq13.gif"/></alternatives></inline-formula> and <inline-formula id="IEq14"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$s_{n,j}^{A}$\end{document}</tex-math><mml:math id="M30"><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq14.gif"/></alternatives></inline-formula>. For all genes <italic>g</italic> that have been registered in both these samples, we denote their number as <inline-formula id="IEq15"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\Omega \left (s_{n,j}^{B}, s_{n,j}^{A}\right)$\end{document}</tex-math><mml:math id="M32"><mml:mi>Ω</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq15.gif"/></alternatives></inline-formula>, we compute their logarithmic fold change values
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ x_{g}\left(s_{n,j}^{B}\to s_{n,j}^{A}\right)=\log_{2}\frac{n_{g,s_{n,j}^{A}} + n_{0}}{n_{g,s_{n,j}^{B}} + n_{0}}  $$ \end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>log</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12859_2019_3144_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
    <p>and consequently compute their rank <inline-formula id="IEq16"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$r_{g}\left (s_{n,j}^{B}\to s_{n,j}^{A}\right)$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq16.gif"/></alternatives></inline-formula> by the logarithmic fold change from the highest (ranked 1) to the lowest <inline-formula id="IEq17"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left [\text {ranked}\ \Omega \left (s_{n,j}^{B}, s_{n,j}^{A}\right)\right ]$\end{document}</tex-math><mml:math id="M38"><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:mtext>ranked</mml:mtext><mml:mspace width="1em"/><mml:mi>Ω</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq17.gif"/></alternatives></inline-formula>. This rank is further rescaled to the rank score
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \sigma_{g}\left(s_{n,j}^{B}\to s_{n,j}^{A}\right) = \frac{r_{g}\left(s_{n,j}^{B}\to s_{n,j}^{A}\right) - 0.5}{\Omega\left(s_{n,j}^{B}, s_{n,j}^{A}\right)}  $$ \end{document}</tex-math><mml:math id="M40"><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>−</mml:mo><mml:mn>0.5</mml:mn></mml:mrow><mml:mrow><mml:mi>Ω</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="12859_2019_3144_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
    <p>which, thanks to the shift by 0.5, is symmetrically distributed in the range [0,1] (the lowest rank score is as far from zero as the highest is from one). The rank score <italic>σ</italic> is the basis of ProtRank’s gene ranking.</p>
    <p>Before proceeding, we have to assign a rank score to the genes that have zero counts in either (or both) of the compared samples. Since the change from a zero count to a positive count corresponds to a large positive logarithmic fold change, we assign those pairs uniform rank score <italic>σ</italic><sub>0</sub> which is the method’s parameter. We set <italic>σ</italic><sub>0</sub>=0.1 which corresponds to assigning the change from zero to a positive count the same score as assigned to a pair of two positive counts with the 10th percentile logarithmic fold change. In general, lower values of <italic>σ</italic><sub>0</sub> result in a higher fraction of zero counts among the identified differentially expressed genes. The precise choice of <italic>σ</italic><sub>0</sub> is made less important by Eq. (<xref rid="Equ4" ref-type="">4</xref>) which log-transforms the computed scores. Analogously, the change form a positive count to zero corresponds to a large negative logarithmic fold change. We assign those pairs with score 1−<italic>σ</italic><sub>0</sub> which is the same as the score assigned to a pair of two positive counts with the 90th percentile logarithmic fold change. Finally, pairs with two zero counts are ignored in the computation of the final score because they provide no useful information for the differential expression analysis.</p>
    <p>To rank the genes based on all comparisons, we now have to aggregate individual rank scores into a final rank score. Similarly to [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR16">16</xref>], this is done by multiplying the logarithm of individual rank scores from all comparison groups as
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \prod_{n=1}^{N}\prod_{j=1}^{M_{n}} \left[-\ln\sigma_{g}\left(s_{n,j}^{B}\to s_{n,j}^{A}\right)\right].  $$ \end{document}</tex-math><mml:math id="M42"><mml:munderover><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:mo>−</mml:mo><mml:mo>ln</mml:mo><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mi>.</mml:mi></mml:math><graphic xlink:href="12859_2019_3144_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
    <p>Terms corresponding to comparisons involving two zero counts are ignored from the aggregation process. To understand why the logarithmic transformation here is preferable to directly multiplying individual rank scores, consider the case where a gene has the largest positive logarithmic fold change of all in one comparison and the largest negative logarithmic fold change in another one. Assuming that there are, for example, <italic>N</italic>=5000 genes in total, the respective rank scores are 0.5/<italic>N</italic>=10<sup>−4</sup> and 1−0.5/<italic>N</italic>=1−10<sup>−4</sup>, respectively. Their direct multiplication then yields approximately 10<sup>−4</sup> which is the same value as a gene whose logarithmic fold change is 50th largest in both cases (both individual rank scores would then be approximately 10<sup>−2</sup>). This is obviously an undesired outcome as the two mentioned genes are far from being similarly differentially expressed. The problem is overcome by aggregating according to Eq. (<xref rid="Equ4" ref-type="">4</xref>): The first gene then scores 9.21×10<sup>−4</sup>≈10<sup>−3</sup> which is far less than the second gene whose score is 4.6×4.6≈21.2. In other words, Eq. (<xref rid="Equ4" ref-type="">4</xref>) favors the genes whose expression changes similarly in all comparisons at the cost of genes whose expression changes wildly in different directions.</p>
    <p>Given the final score obtained with Eq. (<xref rid="Equ4" ref-type="">4</xref>), genes with the highest final rank score are candidates for differentially expressed genes. However, this would seek only for genes with small rank score (that is, large positive logarithmic fold change) in all comparisons. To achieve our goal of allowing to search for genes with different direction of change in respective comparison groups, we introduce the set of group directions <inline-formula id="IEq18"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {D}=\{d_{1},\dots,d_{N}\}$\end{document}</tex-math><mml:math id="M44"><mml:mi mathvariant="script">D</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq18.gif"/></alternatives></inline-formula>, where <italic>d</italic><sub><italic>n</italic></sub>=−1 corresponds to searching for genes with large negative logarithmic fold change in group <italic>n</italic> (i.e., high rank score <italic>σ</italic>) and <italic>d</italic><sub><italic>n</italic></sub>=1 corresponds to searching for genes with large positive logarithmic fold change in group <italic>n</italic> (i.e., low rank rank score <italic>σ</italic>). The final rank score is then computed as the minimal rank achieved out of all possible group directions,
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \sigma_{g} = \min_{\mathcal{D}} \prod_{n=1}^{N}\prod_{j=1}^{M_{n}} \Big[-\ln\Big(\frac12 - \frac{d_{n}}2 + d_{n}\,\sigma_{g}(s_{n,j}^{B}\to s_{n,j}^{A})\Big)\Big],  $$ \end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>min</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="script">D</mml:mi></mml:mrow></mml:munder><mml:munderover><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:munderover><mml:munderover><mml:mrow><mml:mo>∏</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mstyle mathsize="1.61em"><mml:mfenced close="" open="[" separators=""><mml:mrow/></mml:mfenced></mml:mstyle><mml:mo>−</mml:mo><mml:mo>ln</mml:mo><mml:mstyle mathsize="1.61em"><mml:mfenced close="" open="(" separators=""><mml:mrow/></mml:mfenced></mml:mstyle><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>d</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.3em"/><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo><mml:mstyle mathsize="1.61em"><mml:mfenced close="" open=")" separators=""><mml:mrow/></mml:mfenced></mml:mstyle><mml:mstyle mathsize="1.61em"><mml:mfenced close="" open="]" separators=""><mml:mrow/></mml:mfenced></mml:mstyle><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12859_2019_3144_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
    <p>where the inner-most term simplifies to <inline-formula id="IEq19"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\sigma _{g}\left (s_{n,j}^{B}\to s_{n,j}^{A}\right)$\end{document}</tex-math><mml:math id="M48"><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq19.gif"/></alternatives></inline-formula> when <italic>d</italic><sub><italic>n</italic></sub>=1 (seeking for genes upregulated in group <italic>n</italic>) and to <inline-formula id="IEq20"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$1-\sigma _{g}\left (s_{n,j}^{B}\to s_{n,j}^{A}\right)$\end{document}</tex-math><mml:math id="M50"><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>→</mml:mo><mml:msubsup><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2019_3144_Article_IEq20.gif"/></alternatives></inline-formula> when <italic>d</italic><sub><italic>n</italic></sub>=−1 (seeking for genes downregulated in group <italic>n</italic>). Terms corresponding to comparisons involving two zero counts are again ignored from computing the aggregate score. Genes are then ranked by their final rank score from the highest to the lowest.</p>
    <p>To decide which genes are significantly differentially expressed in the data, we use nonparametric bootstrap [<xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]: We create simulated score tables by randomizing the gene rank scores for each individual comparison. The original final rank scores of the genes are then compared with their final rank scores in bootstrap realizations. This allows us to determine which rank scores in the original data are perhaps small but still likely to occur by chance, and which are so small that they correspond to differentially expressed genes (see Fig. <xref rid="Fig7" ref-type="fig">7</xref> for an illustration). Now take gene <italic>g</italic> that is ranked <italic>r</italic><sub><italic>g</italic></sub> by Eq. (<xref rid="Equ5" ref-type="">5</xref>); the most differentially expressed gene has rank 1. In each bootstrap realization, we compute the number of genes whose final rank score is better than the real final rank score of gene <italic>g</italic>, and compute their average number <italic>N</italic><sub><italic>g</italic></sub> over all realizations. The false discovery rate for gene <italic>g</italic> is then estimated as <italic>N</italic><sub><italic>g</italic></sub>/<italic>r</italic><sub><italic>g</italic></sub>. As one proceeds down the ranking, the quantity <italic>N</italic><sub><italic>g</italic></sub>/<italic>r</italic><sub><italic>g</italic></sub> can sometimes decrease. In such a case, we assign the gene with the false discovery rate estimated for the previous better-ranked gene. This forces the estimated false discovery rate to increase monotonously.</p>
    <p><bold>How to use the ProtRank package</bold> A Python implementation of the new method can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://github.com/8medom/ProtRank">https://github.com/8medom/ProtRank</ext-link>. The github repository contains the package file ProtRank.py as well as the synthetic dataset sample_dataset.dat and the Python script sample_dataset_analysis.py which provides a simple example of how to use the ProtRank package.</p>
    <p>The elementary package usage comprises two steps: loading the data for analysis using load_data function and carrying out the differential expression analysis using rank_proteins function. To analyze the aforementioned synthetic dataset, the minimal example is: <graphic position="anchor" xlink:href="12859_2019_3144_Figa_HTML" id="MO8"/></p>
    <p>Variable significant stores the list of the identified differentially expressed proteins (identified by the index of the corresponding rows).</p>
    <p>In addition, basic statistical properties of the dataset can be displayed using data_stats function, and the logarithmic fold changes computed for selected rows (typically those corresponding to the identified differentially expressed genes; we can use the list significant created by the code above, for example) can be visualized using plot_lfc function.</p>
  </sec>
  <sec id="Sec16">
    <title>Availability and requirements</title>
    <p>Project name: ProtRankProject home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/8medom/ProtRank">https://github.com/8medom/ProtRank</ext-link>Operating system: Platform independentProgramming language: PythonOther requirements: Python packages Numpy, Scipy, Pandas, MatplotlibLicense: GNU General Public License v3.0Any restrictions to use by non-academics: None</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>DE</term>
        <def>
          <p>differentially expressed (genes)</p>
        </def>
      </def-item>
      <def-item>
        <term>FDR</term>
        <def>
          <p>false discovery rate</p>
        </def>
      </def-item>
      <def-item>
        <term>PR</term>
        <def>
          <p>precision-recall (curve)</p>
        </def>
      </def-item>
      <def-item>
        <term>ROC</term>
        <def>
          <p>receiver operating characteristic (curve)</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Jonas Koch and Eleonora Orlando from the Radiation Oncology group at Inselspital/University of Bern and the Quantitative Mass Spectrometry group of Prof. Ruedi Aebersold at ETH Zürich for providing us the proteomic data. We thank Lluís Nisa for providing us the transcriptomic data.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>DMA and MiMe conceived the project. MaMe developed the methodology and analyzed the results. MaMe wrote the manuscript. DA provided administrative and technical support. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work has been supported by Stiftung für klinisch-experimentelle Tumorforschung (grant to MiMe). The funding body played no role in the design and execution of the study.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The datasets analyzed in this manuscript are available from the corresponding author on reasonable request.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p>Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p>Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Differential expression analysis for sequence count data</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>10</issue>
        <fpage>R106</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2010-11-10-r106</pub-id>
        <pub-id pub-id-type="pmid">20979621</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>McCarthy</surname>
            <given-names>DJ</given-names>
          </name>
          <collab>Smyth GK</collab>
        </person-group>
        <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>1</issue>
        <fpage>139</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp616</pub-id>
        <pub-id pub-id-type="pmid">19910308</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>Voom: precision weights unlock linear model analysis tools for RNA-seq read counts</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>2</issue>
        <fpage>R29</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-2-r29</pub-id>
        <pub-id pub-id-type="pmid">24485249</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pyl</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>HTSeq—a Python framework to work with high-throughput sequencing data</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>2</issue>
        <fpage>166</fpage>
        <lpage>169</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu638</pub-id>
        <pub-id pub-id-type="pmid">25260700</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vizcaíno</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Deutsch</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Csordas</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Reisinger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rios</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ProteomeXchange provides globally coordinated proteomics data submission and dissemination</article-title>
        <source>Nat Biotechnol</source>
        <year>2014</year>
        <volume>32</volume>
        <issue>3</issue>
        <fpage>223</fpage>
        <pub-id pub-id-type="doi">10.1038/nbt.2839</pub-id>
        <pub-id pub-id-type="pmid">24727771</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Larance</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lamond</surname>
            <given-names>AI</given-names>
          </name>
        </person-group>
        <article-title>Multidimensional proteomics for cell biology</article-title>
        <source>Nat Rev Mol Cell Biol</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>5</issue>
        <fpage>269</fpage>
        <pub-id pub-id-type="doi">10.1038/nrm3970</pub-id>
        <pub-id pub-id-type="pmid">25857810</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tyanova</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Temu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sinitcyn</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Carlson</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hein</surname>
            <given-names>MY</given-names>
          </name>
          <name>
            <surname>Geiger</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The Perseus computational platform for comprehensive analysis of (prote) omics data</article-title>
        <source>Nat Methods</source>
        <year>2016</year>
        <volume>13</volume>
        <issue>9</issue>
        <fpage>731</fpage>
        <lpage>40</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3901</pub-id>
        <pub-id pub-id-type="pmid">27348712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Latterich</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Abramovitz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Leyland-Jones</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Proteomics: new technologies and clinical applications</article-title>
        <source>Eur J Cancer</source>
        <year>2008</year>
        <volume>44</volume>
        <issue>18</issue>
        <fpage>2737</fpage>
        <lpage>41</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ejca.2008.09.007</pub-id>
        <pub-id pub-id-type="pmid">18977654</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <mixed-citation publication-type="other">Guest PC, Gottschalk MG, Bahn S. Proteomics: improving biomarker translation to modern medicine?. 2013; 5(2):17.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ebhardt</surname>
            <given-names>HA</given-names>
          </name>
          <name>
            <surname>Root</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sander</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Aebersold</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Applications of targeted proteomics in systems biology and translational medicine</article-title>
        <source>Proteomics</source>
        <year>2015</year>
        <volume>15</volume>
        <issue>18</issue>
        <fpage>3193</fpage>
        <lpage>208</lpage>
        <pub-id pub-id-type="doi">10.1002/pmic.201500004</pub-id>
        <pub-id pub-id-type="pmid">26097198</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frantzi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Latosinska</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kontostathi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mischak</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Clinical proteomics: Closing the gap from discovery to implementation</article-title>
        <source>Proteomics</source>
        <year>2018</year>
        <volume>18</volume>
        <issue>14</issue>
        <fpage>1700463</fpage>
        <pub-id pub-id-type="doi">10.1002/pmic.201700463</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Graves</surname>
            <given-names>PR</given-names>
          </name>
          <name>
            <surname>Haystead</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Molecular biologist’s guide to proteomics</article-title>
        <source>Microbiol Mol Biol Rev</source>
        <year>2002</year>
        <volume>66</volume>
        <issue>1</issue>
        <fpage>39</fpage>
        <lpage>63</lpage>
        <pub-id pub-id-type="doi">10.1128/MMBR.66.1.39-63.2002</pub-id>
        <pub-id pub-id-type="pmid">11875127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Soneson</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Delorenzi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>A comparison of methods for differential expression analysis of RNA-seq data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>91</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-91</pub-id>
        <pub-id pub-id-type="pmid">23497356</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nisa</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Barras</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Medová</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Aebersold</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Medo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Poliaková</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Comprehensive Genomic Profiling of Patient-matched Head and Neck Cancer Cells: A Preclinical Pipeline for Metastatic and Recurrent Disease</article-title>
        <source>Mol Cancer Res</source>
        <year>2018</year>
        <volume>16</volume>
        <issue>12</issue>
        <fpage>1912</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1158/1541-7786.MCR-18-0056</pub-id>
        <pub-id pub-id-type="pmid">30108165</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Breitling</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Armengaud</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Amtmann</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Herzyk</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Rank products: a simple, yet powerful, new method to detect differentially regulated genes in replicated microarray experiments</article-title>
        <source>FEBS Lett</source>
        <year>2004</year>
        <volume>573</volume>
        <fpage>83</fpage>
        <lpage>92</lpage>
        <pub-id pub-id-type="doi">10.1016/j.febslet.2004.07.055</pub-id>
        <pub-id pub-id-type="pmid">15327980</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <mixed-citation publication-type="other">Hong F, Breitling R, McEntee WC, Wittner BS, Nemhauser JL, Chory J. RankProd: a bioconductor package for detecting differentially expressed genes in meta-analysis. 2006; 22:2825–27.</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <mixed-citation publication-type="other">Manning C, Raghavan P, Schütze H. Introduction to information retrieval. Cambridge: Cambridge University Press: 2008.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lü</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Medo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yeung</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>YC</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>ZK</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Recommender systems</article-title>
        <source>Phys Rep</source>
        <year>2012</year>
        <volume>519</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>49</lpage>
        <pub-id pub-id-type="doi">10.1016/j.physrep.2012.02.006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fawcett</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>An introduction to ROC analysis</article-title>
        <source>Pattern Recog Lett</source>
        <year>2006</year>
        <volume>27</volume>
        <issue>8</issue>
        <fpage>861</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1016/j.patrec.2005.10.010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <mixed-citation publication-type="other">Davis J, Goadrich M. The relationship between Precision-Recall and ROC curves. In: Proceedings of the 23rd international conference on Machine learning–ICML ’06. ACM: 2006. p. 233–240. 10.1145/1143844.1143874.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chicco</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Ten quick tips for machine learning in computational biology</article-title>
        <source>BioData Min</source>
        <year>2017</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>35</fpage>
        <pub-id pub-id-type="doi">10.1186/s13040-017-0155-3</pub-id>
        <pub-id pub-id-type="pmid">29234465</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <mixed-citation publication-type="other">Gierlinski M, Gastaldello F, Cole C, Barton GJ. Proteus: an R package for downstream analysis of MaxQuant output. BioRxiv. 2018. 10.1101/416511.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Medo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cimini</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Model-based evaluation of scientific impact indicators</article-title>
        <source>Phys Rev E</source>
        <year>2016</year>
        <volume>94</volume>
        <issue>3</issue>
        <fpage>032312</fpage>
        <pub-id pub-id-type="doi">10.1103/PhysRevE.94.032312</pub-id>
        <pub-id pub-id-type="pmid">27739778</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wrobel</surname>
            <given-names>CN</given-names>
          </name>
          <name>
            <surname>Debnath</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Beausoleil</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Roussel</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Brugge</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>Autocrine CSF-1R activation promotes Src-dependent disruption of mammary epithelial architecture</article-title>
        <source>J Cell Biol</source>
        <year>2004</year>
        <volume>165</volume>
        <issue>2</issue>
        <fpage>263</fpage>
        <lpage>73</lpage>
        <pub-id pub-id-type="doi">10.1083/jcb.200309102</pub-id>
        <pub-id pub-id-type="pmid">15117969</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodenmiller</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Mueller</surname>
            <given-names>LN</given-names>
          </name>
          <name>
            <surname>Mueller</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Domon</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Aebersold R. Reproducible isolation of distinct, overlapping segments of the phosphoproteome</article-title>
        <source>Nat Methods</source>
        <year>2007</year>
        <volume>4</volume>
        <issue>3</issue>
        <fpage>231</fpage>
        <pub-id pub-id-type="doi">10.1038/nmeth1005</pub-id>
        <pub-id pub-id-type="pmid">17293869</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cox</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mann</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>MaxQuant enables high peptide identification rates, individualized ppb-range mass accuracies and proteome-wide protein quantification</article-title>
        <source>Nat Biotechnol</source>
        <year>2008</year>
        <volume>26</volume>
        <issue>12</issue>
        <fpage>1367</fpage>
        <lpage>72</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1511</pub-id>
        <pub-id pub-id-type="pmid">19029910</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shalizi</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>The bootstrap</article-title>
        <source>Am Sci</source>
        <year>2010</year>
        <volume>98</volume>
        <issue>3</issue>
        <fpage>186</fpage>
        <lpage>90</lpage>
        <pub-id pub-id-type="doi">10.1511/2010.84.186</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Shao</surname>
            <given-names>Jun</given-names>
          </name>
          <name>
            <surname>Tu</surname>
            <given-names>Dongsheng</given-names>
          </name>
        </person-group>
        <source>The Jackknife and Bootstrap</source>
        <year>1995</year>
        <publisher-loc>New York, NY</publisher-loc>
        <publisher-name>Springer New York</publisher-name>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Mol Biol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Mol Biol Evol</journal-id>
    <journal-id journal-id-type="publisher-id">molbev</journal-id>
    <journal-title-group>
      <journal-title>Molecular Biology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0737-4038</issn>
    <issn pub-type="epub">1537-1719</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7826169</article-id>
    <article-id pub-id-type="pmid">32886787</article-id>
    <article-id pub-id-type="doi">10.1093/molbev/msaa224</article-id>
    <article-id pub-id-type="publisher-id">msaa224</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Resources</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01130</subject>
        <subject>AcademicSubjects/SCI01180</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>CoreCruncher</italic>: Fast and Robust Construction of Core Genomes in Large Prokaryotic Data Sets</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Harris</surname>
          <given-names>Connor D</given-names>
        </name>
        <xref ref-type="aff" rid="msaa224-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Torrance</surname>
          <given-names>Ellis L</given-names>
        </name>
        <xref ref-type="aff" rid="msaa224-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Raymann</surname>
          <given-names>Kasie</given-names>
        </name>
        <xref ref-type="aff" rid="msaa224-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bobay</surname>
          <given-names>Louis-Marie</given-names>
        </name>
        <xref ref-type="corresp" rid="msaa224-cor1"/>
        <xref ref-type="aff" rid="msaa224-aff1"/>
        <!--<email>ljbobay@uncg.edu</email>-->
      </contrib>
    </contrib-group>
    <aff id="msaa224-aff1"><institution>Department of Biology, University of North Carolina Greensboro</institution>, Greensboro, NC</aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Ouangraoua</surname>
          <given-names>Aida</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="msaa224-cor1"><bold>Corresponding author:</bold> E-mail: <email>ljbobay@uncg.edu</email>.</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-09-04">
      <day>04</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>04</day>
      <month>9</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>38</volume>
    <issue>2</issue>
    <fpage>727</fpage>
    <lpage>734</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press on behalf of the Society for Molecular Biology and Evolution.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="msaa224.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>The core genome represents the set of genes shared by all, or nearly all, strains of a given population or species of prokaryotes. Inferring the core genome is integral to many genomic analyses, however, most methods rely on the comparison of all the pairs of genomes; a step that is becoming increasingly difficult given the massive accumulation of genomic data. Here, we present <italic>CoreCruncher</italic>; a program that robustly and rapidly constructs core genomes across hundreds or thousands of genomes. <italic>CoreCruncher</italic> does not compute all pairwise genome comparisons and uses a heuristic based on the distributions of identity scores to classify sequences as orthologs or paralogs/xenologs. Although it is much faster than current methods, our results indicate that our approach is more conservative than other tools and less sensitive to the presence of paralogs and xenologs. <italic>CoreCruncher</italic> is freely available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/lbobay/CoreCruncher">https://github.com/lbobay/CoreCruncher</ext-link>. <italic>CoreCruncher</italic> is written in Python 3.7 and can also run on Python 2.7 without modification. It requires the python library Numpy and either <italic>Usearch</italic> or <italic>Blast</italic>. Certain options require the programs <italic>muscle</italic> or <italic>mafft</italic>.</p>
    </abstract>
    <kwd-group>
      <kwd>core genome</kwd>
      <kwd>prokaryotes</kwd>
      <kwd>orthology</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>DEB-1831730</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institute of General Medical Sciences of the National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01GM132137</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>DEB-11930776</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Department of Energy Computational Science Graduate Fellowship</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>The core genome is defined as the set of genes that are ubiquitous—or nearly ubiquitous—to a set of genomes (<xref rid="msaa224-B20" ref-type="bibr">Medini et al. 2005</xref>; <xref rid="msaa224-B30" ref-type="bibr">Vernikos et al. 2015</xref>). Analysis of prokaryotic genomes often requires identifying the core genome of a species or a population to reconstruct strain phylogeny and to infer various metrics (<xref rid="msaa224-B5" ref-type="bibr">Bobay and Ochman 2018</xref>; <xref rid="msaa224-B19" ref-type="bibr">Maistrenko et al. 2020</xref>). Multiple tools have been built to generate core genomes and these approaches usually require the identification of orthologous genes by identifying best-bidirectional hits (BBH)through the comparison of each pair of genomes (<xref rid="msaa224-B18" ref-type="bibr">Li et al. 2003</xref>; <xref rid="msaa224-B15" ref-type="bibr">Kristensen et al. 2011</xref>; <xref rid="msaa224-B21" ref-type="bibr">Miele et al. 2011</xref>; <xref rid="msaa224-B7" ref-type="bibr">Contreras-Moreira and Vinuesa 2013</xref>; <xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>). Due to the massive accumulation of complete bacterial genomes, it has become computationally challenging—if even possible—to perform all pairwise comparisons when data sets include hundreds to thousands of genomes for a given species (<xref rid="msaa224-B15" ref-type="bibr">Kristensen et al. 2011</xref>). As a result, alternative approaches are needed to efficiently process large data sets (<xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>). Several heuristics have been developed to address these challenges; however, very few tools have been designed to construct core genomes specifically. Instead, these tools usually aim to define the entire pan-genome (i.e., the entire set of genes in a given set of genomes) (<xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>). Because they aim to build the entire set of homologs; these methods are typically much slower.</p>
    <p>One central challenge in defining the core genome is the correct inference of orthologous versus paralogous and xenologous genes (<xref rid="msaa224-B6" ref-type="bibr">Chen et al. 2007</xref>; <xref rid="msaa224-B1" ref-type="bibr">Altenhoff and Dessimoz 2009</xref>, <xref rid="msaa224-B2" ref-type="bibr">2012</xref>). Prokaryotes frequently undergo duplication, and more predominantly, horizontal gene transfer (HGT) events which may introduce paralogs and xenologs, respectively (<xref rid="msaa224-B28" ref-type="bibr">Treangen and Rocha 2011</xref>). Paralogous and xenologous sequences can subsequently be lost by deletions or due to assembly issues and, as a result, even single copy genes may not represent true orthologs. Accurate distinction between orthologs and paralogs/xenologs is needed to build core genomes composed solely of orthologous genes. Traditionally, two main categories of methods are used to identify orthologs: graph- and tree-based approaches (<xref rid="msaa224-B2" ref-type="bibr">Altenhoff and Dessimoz 2012</xref>; Sonnhammer et al. 2014). Core genomes are typically built for genomes of the same prokaryotic species—of which conspecific strains frequently engage in homologous recombination (<xref rid="msaa224-B4" ref-type="bibr">Bobay and Ochman 2017</xref>). Due to the frequency of recombination, tree-based approaches offer little power to distinguish orthologs and paralogs/xenologs making this method much better suited to define orthologs across different species or lineages (<xref rid="msaa224-B4" ref-type="bibr">Bobay and Ochman 2017</xref>). Alternatively, many graph-based methods exist, though most have been implemented for the general purpose of identifying orthologs in diverse contexts and often aim at identifying orthogroups that may include paralogs and xenologs (<xref rid="msaa224-B27" ref-type="bibr">Tatusov et al. 1997</xref>; <xref rid="msaa224-B24" ref-type="bibr">Remm et al. 2001</xref>; <xref rid="msaa224-B18" ref-type="bibr">Li et al. 2003</xref>; <xref rid="msaa224-B13" ref-type="bibr">Jothi et al. 2006</xref>; <xref rid="msaa224-B16" ref-type="bibr">Kriventseva et al. 2007</xref>; <xref rid="msaa224-B25" ref-type="bibr">Roth et al. 2008</xref>; <xref rid="msaa224-B12" ref-type="bibr">Huerta-Cepas et al. 2016</xref>; <xref rid="msaa224-B17" ref-type="bibr">Lafond et al. 2018</xref>; <xref rid="msaa224-B8" ref-type="bibr">Cosentino and Iwasaki 2019</xref>). The identification of broader orthogroups is often desirable for analyses aimed at reconstructing the evolution of a gene family or when building the pan-genome of a species. Because core genomes are typically used for phylogenomic analyses and for the inference of population parameters, core genes are typically defined as “true” orthologs (i.e., without paralogs and xenologs).</p>
    <p>Here we have developed <italic>CoreCruncher</italic>; a heuristic that quickly and robustly infers core genomes across large data sets of prokaryotic genomes. The key innovation of our algorithm relies on the implementation of a flexible test to distinguish paralogs and xenologs from orthologs by using the distributions of identity scores of homologous sequences to classify sequences as true orthologs or paralogs/xenologs. <italic>CoreCruncher</italic> is fast, has many customizable parameters, and can build the core genome of large data sets comprising thousands of genomes. In addition, the <italic>CoreCruncher</italic> algorithm may be used to identify sets of shared orthologs across divergent species; which expands its role beyond core genome assembly alone.</p>
    <sec>
      <title>New Approaches</title>
      <p>Due to the accumulation of sequencing data, it has become common place to analyze hundreds to thousands of complete genome sequences during the study of a single prokaryotic species (<xref rid="msaa224-B23" ref-type="bibr">Parks et al. 2018</xref>). Most algorithms implemented to define orthologous genes first rely on pairwise genome comparisons; a task that is becoming increasingly difficult to complete as data sets grow in size (<xref rid="msaa224-B15" ref-type="bibr">Kristensen et al. 2011</xref>). To circumvent this issue, we have developed an approach that does not conduct all pairwise genome comparisons and instead, robustly identifies core genomes based on our “double outliers” approach to distinguish true orthologs from paralogs and xenologs using the distributions of identity scores.</p>
      <p>In prokaryotes, the vast majority of new gene copies are gained by HGT (i.e., xenologs) (<xref rid="msaa224-B28" ref-type="bibr">Treangen and Rocha 2011</xref>) which leads to the introduction of sequences that are expected to present atypical features relative to true orthologs (i.e., typically more divergent sequences) and additionally, are often found at different genomic locations (<xref rid="msaa224-B11" ref-type="bibr">Gao and Miller 2020</xref>). Note that complex patterns of gene gains and loss can make paralogs and xenologs virtually indistinguishable. To robustly exclude paralogs and xenologs, our method first identifies homologous sequences by comparing each genome against a pivot genome. Putative orthologs are first built by assigning the best hit of each genome that matched the same gene of the pivot genome. This step yields putative orthologous gene families without within-paralogs/xenologs (i.e., paralogs or xenologs present in the same genome). When present, other hits are stored in memory and classified as within-paralogs/xenologs.</p>
      <p>The first step of our procedure consists of identifying partially hidden paralogs/xenologs (<xref ref-type="fig" rid="msaa224-F1">fig. 1<italic>C</italic></xref>). Partially hidden paralogs/xenologs occur when 1) one or more genomes lack the orthologous sequence of the gene but contain a paralog or a xenolog and 2) one or more genomes contain both copies of the orthologous sequence and the paralogous or xenologous sequence. Because at least one or more within-paralogs/xenologs are present in some of the genomes, our procedure uses the distribution of the identify scores of the within-paralogs/xenologs to identify partially hidden paralogs/xenologs present in other genomes (see Materials and Methods section).
</p>
      <fig id="msaa224-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Impact of paralogs and xenologs on the inference of gene orthology. Scenario (<italic>A</italic>): No paralogs/xenologs. The orthologous gene is present in all the genomes; no paralogs or xenologs are present. Scenario (<italic>B</italic>): Within-paralogs/xenologs. The orthologous gene is present in all the genomes; one or more within-paralog/xenolog sequences are present. Scenario (<italic>C</italic>): Partially hidden paralogs/xenologs. The orthologous gene is missing in some genomes; some genomes are missing the orthologous sequence but contain a paralogous or a xenologous sequence (hidden paralog/xenolog); other genomes contain both the orthologous sequence and the paralogous or xenologous sequence (within-paralog/xenolog). Scenario (<italic>D</italic>): Completely hidden paralogs/xenologs. Some genomes are missing the orthologous sequence but contain a paralogous or a xenologous sequence (hidden paralog/xenolog); no within-paralogs/xenologs are present in other genomes. Plain boxes represent orthologous sequences; striped boxes represent paralogous or xenologous sequences. Scenarios <italic>A</italic> and <italic>B</italic> are expected to yield straightforward core gene predictions by BBH-based methods and <italic>CoreCruncher</italic>. Scenarios <italic>C</italic> and <italic>D</italic> will likely lead to the inclusion of paralogous and xenologous sequences in the core genome constructed with BBH-based approaches.</p>
        </caption>
        <graphic xlink:href="msaa224f1"/>
      </fig>
      <p>The second step of our procedure consists of identifying completely hidden paralogs/xenologs (<xref ref-type="fig" rid="msaa224-F1">fig. 1<italic>D</italic></xref>). Completely hidden paralogs/xenologs occur when 1) one or more genomes lack the orthologous sequence of the gene but contain a paralog or a xenolog and 2) none of the genomes contain both copies of the orthologous and the paralogous/xenologous sequence. The presence of hidden paralogs/xenologs is detected with our “double outlier” procedure (<xref ref-type="fig" rid="msaa224-F2">fig. 2</xref>). Briefly, the distribution of identity scores (distribution 1) of each orthologous gene family is used to detect sequences that present significant outliers. These outliers likely represent paralogs or xenologs, and it is also possible that true orthologs present more divergent sequences because some strains are more divergent than others. To account for the differences in strain divergence across the data set, <italic>CoreCruncher</italic> also builds the distribution of identity scores for each putative ortholog for each genome relative to the pivot genome. This distribution (distribution 2) is used to estimate the overall divergence of each genome relative to the pivot genome. For each orthologous gene family, a sequence is identified as a completely hidden paralog/xenolog only if it is inferred as a double outlier based on distributions 1 and 2 (see Materials and Methods section). Paralogous and xenologous sequences identified by our approach are then excluded from each orthologous gene family, which is considered as core gene when found in high frequency across genomes (90% of the genomes by default). When run with the stringent option, the entire orthologous gene family is excluded from the core genome when a hidden paralog/xenolog is identified.
</p>
      <fig id="msaa224-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Identification of paralogs and xenologs with the double outlier test. <italic>CoreCruncher</italic> systematically tests for the presence of hidden paralogs/xenologs in each putative core gene. A sequence is inferred as paralogous/xenologous if it is identified as a vertical outlier and a horizontal outlier. Step 1. Vertical outliers: <italic>CoreCruncher</italic> builds distribution 1 for the putative core gene: the distribution of the identity scores of the best hit of each genome against the gene of the pivot genome. A sequence is considered as an outlier using Tukey’s fences: if its identity threshold is below Q1 − 1.5(Q3–Q1) or above Q3 + 1.5(Q3–Q1), with Q1 and Q3 the values of the first and third quartiles, respectively. Step 2. Horizontal outliers: sequences identified as outliers in step 1 are tested for the presence of horizontal outliers. <italic>CoreCruncher</italic> builds distribution 2 for the genome with a putative paralog/xenolog (i.e., an outlier was detected in step 1). The distribution is built by including all the putative orthologs of the genome with the putative paralog/xenolog against the pivot genome. The putative paralog/xenolog is considered a true paralog/xenolog if its identity score is also an outlier in distribution 2 using Tukey’s fences (see above). The paralog(s)/xenolog(s) inferred by the double outlier procedure is (are) then removed from the putative core gene. The putative core gene will be considered part of the core genome if present above the set frequency threshold used to define core genes (90% of genomes by default). When run with the stringent option, <italic>CoreCruncher</italic> will exclude any putative core gene with a paralog/xenolog identified with the double outlier test.</p>
        </caption>
        <graphic xlink:href="msaa224f2"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>Results</title>
    <p>We tested <italic>CoreCruncher</italic> on a data set of 484 genomes of <italic>Serratia marcescens</italic> downloaded from <italic>RefSeq</italic> on December 2019 (<xref ref-type="supplementary-material" rid="sup1">supplementary table S1</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online). Using protein sequences and <italic>Usearch</italic>, we built the core genome of the same data set using 12 different sets of parameters: the core genome was built with a sequence identity threshold of 70%, 90%, and 95%. For each sequence threshold, orthologous genes were considered part of the core genome if found in 90%, 95%, 99%, or 100% of the genomes. In parallel we built the core genome of the same data set with <italic>Roary</italic> v3.13.0 (<xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>) using the same set of parameters. <italic>Roary</italic> is a state-of-the-art program that simultaneously builds the pan-genome and core genome of prokaryotic species. We chose <italic>Roary</italic>, for comparison with <italic>CoreCruncher</italic>, as it can directly infer a core genome and it uses pairwise genome comparisons (BBH) to define orthologs; a methodology that is used by most programs to define orthologs (<xref rid="msaa224-B15" ref-type="bibr">Kristensen et al. 2011</xref>). <italic>Roary</italic>, however, conducts a preclustering step that allows it to be substantially faster than many other existing programs (<xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>).</p>
    <p>We found that <italic>CoreCruncher</italic> systematically inferred a slightly smaller core genome than <italic>Roary</italic> for the same set of parameters (<xref ref-type="fig" rid="msaa224-F3">fig. 3</xref>). This difference can be ascribed to the fact that <italic>CoreCruncher</italic> uses more stringent parameters to build the core genome: 1) two sequences must present similar (≥80%) length to be inferred as homologs and 2) <italic>CoreCruncher</italic> can distinguish paralogous and xenologous genes from orthologous genes using the “double outlier” test. Indeed, <italic>Roary</italic>, like other related methods, has not been designed to detect hidden paralogs/xenologs. On average, the genes inferred as core by <italic>Roary</italic> and <italic>CoreCruncher</italic> were highly consistent (93.2% overlap on average, nonstringent option, and 94.9% overlap on average, stringent option, <xref ref-type="fig" rid="msaa224-F3">fig. 3</xref>, <xref ref-type="supplementary-material" rid="sup1">supplementary table S2</xref> and <xref ref-type="supplementary-material" rid="sup1">fig. S1</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online).
</p>
    <fig id="msaa224-F3" orientation="portrait" position="float">
      <label>Fig. 3.</label>
      <caption>
        <p>Comparison of the core genomes built by <italic>CoreCruncher</italic> and <italic>Roary</italic> across parameters. (<italic>A</italic>) Number of core genes inferred by <italic>CoreCruncher</italic> and <italic>Roary</italic>, respectively. Core genomes were built using a minimum sequence identity threshold of 70% (top), 90% (middle), and 95% (bottom). In each case, an orthologous gene family was considered as part of the core genome when present in at least 90%, 95%, 99%, or 100% of the genomes (<italic>x</italic>-axis). <italic>CoreCruncher</italic> was run using the nonstringent option and other parameters were set as default. (<italic>B</italic>) Comparison of the core genomes built by <italic>CoreCruncher</italic> and <italic>Roary</italic> using a minimum sequence identity threshold of 95% and a minimum genome frequency of 90%. Numbers indicate the number of core genes shared by both programs and specific to each program. Data for other parameters are presented <xref ref-type="supplementary-material" rid="sup1">supplementary table S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online.</p>
      </caption>
      <graphic xlink:href="msaa224f3"/>
    </fig>
    <p>We used the data set presented in <xref ref-type="fig" rid="msaa224-F3">figure 3<italic>B</italic></xref> (95% sequence identity and 90% frequency) to analyze in more detail the orthologs that were inconsistently classified as either being part or not part of the core genome by the two programs. Overall, the majority of the core genes inferred by <italic>CoreCruncher</italic> that did not overlap with <italic>Roary</italic>’s core genome tended to correspond to two distinct orthologs defined by <italic>Roary</italic> (62.4% of the time). Interestingly, we found that the 270 core genes that were identified as core by <italic>CoreCruncher</italic>, and noncore by <italic>Roary</italic>, frequently contained paralogs or xenologs. By analyzing the <italic>Usearch</italic> output files, we found that 71% of these <italic>CoreCruncher</italic>-specific core genes contained at least one paralog/xenolog which is presumably why these gene families were not considered as core by <italic>Roary</italic>. However, <italic>CoreCruncher</italic> was able to sort out the orthologs from the paralogs/xenologs and still consider these genes as core (note that the paralogs/xenologs were not included in the core genome built by <italic>CoreCruncher</italic>). In contrast, only 44% of the genes inferred as core by both programs (shared core) presented one or more paralogs and/or xenologs (those were successfully excluded from the core by both programs). This suggests that the presence of paralogs and xenologs likely explains a large part of the discrepancies between the two programs. We further verified whether these <italic>CoreCruncher</italic>-specific core genes were true orthologs. We reasoned that if these core genes frequently included within-paralogs/xenologs or hidden paralogs/xenologs, many of them would present a wider distribution of identity scores. Therefore, we compared the core genes inferred by both programs to the 270 core genes inferred only by <italic>CoreCruncher</italic>. We aligned the sequences with <italic>muscle</italic> and computed the pairwise identify score for each core gene. We found no significant increase in the distribution of identity scores of the <italic>CoreCruncher</italic>-specific core genes relative to the core genes inferred by both programs; Wilcoxon tests on the distributions of 1) minimal values, 2) the standard variation, 3) the mean, and 4) the median values of identity scores (<xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online). We observed a slight but significant increase in the sequence length of the <italic>CoreCruncher</italic>-specific core genes (<italic>P </italic>&lt;<italic> </italic>0.001, Wilcoxon test, <xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online), although we do not expect this difference to substantially affect the inference of the two programs. Overall, this analysis indicates that BBH-based programs like <italic>Roary</italic> are more likely to be affected by the presence of paralogs and xenologs and that the core genes inferred by <italic>CoreCruncher</italic>, and not by <italic>Roary</italic>, do not show evidence for the presence of paralogous or xenologous sequences.</p>
    <p>The same data set was used to analyze the genes that were predicted as core by <italic>Roary</italic> and as noncore by <italic>CoreCruncher</italic> (901 genes, <xref ref-type="fig" rid="msaa224-F3">fig. 3</xref>). We found that a large portion of these genes (38%) were excluded from the core genome by <italic>CoreCruncher</italic> because they varied in length (by default, <italic>CoreCruncher</italic> imposes that sequences cannot differ by more than 20% in length). Very few of these genes (&lt;1%) were excluded because the sequence was missing in the pivot genome used by <italic>CoreCruncher</italic>. Finally, 8% of these genes were excluded from the core genome of <italic>CoreCruncher</italic> because they contained paralogs or xenologs based on the “double outlier” test.</p>
    <p>To further analyze the reasons for gene exclusion by <italic>CoreCruncher</italic> as compared with the same analysis done by <italic>Roary</italic>, genes were aligned with <italic>muscle</italic> and pairwise identity scores were computed for each of the 901 <italic>Roary</italic>-specific core genes. We found that most of these genes presented a much higher range of sequence identities relative to the 2,541 core genes inferred by both <italic>Roary</italic> and <italic>CoreCruncher</italic> (<xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online). Indeed, the minimal identity score, the average identity score, and the median identity score were significantly lower when compared with the core genes inferred by both tools (<italic>P </italic>&lt;<italic> </italic>0.0001, Wilcoxon test, <xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online)—whereas the standard deviation of these identity scores were significantly higher (<italic>P </italic>&lt;<italic> </italic>0.0001, Wilcoxon test, <xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online). Surprisingly, some of these <italic>Roary</italic>-specific core genes presented as low as 50% protein identity (<xref ref-type="supplementary-material" rid="sup1">supplementary fig. S2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online). <italic>Roary</italic>’s inference of highly divergent sequences as part of the same core gene—despite using a threshold of 95% sequence identity—can be ascribed to the BBH procedure. The BBH approach infers pairs of sequences as orthologs based on a sequence identity threshold (95% in this analysis); however, this step is followed by a clustering procedure which occasionally aggregates together sequences that are much more divergent than the set threshold. BBH-based approaches are more likely to aggregate highly divergent sequences into the same ortholog as the number of analyzed genomes increases since the clustering step can yield clusters of poorly connected sequences (note that this issue is even more problematic when fusions and fissions of genes occurred and when there is no imposed threshold on sequence length conservation). In contrast, our procedure imposes that every sequence of the orthologous family must be higher than the set threshold (95% identity in this case) relative to the sequence of the pivot genome. This results in a core genome with a narrower sequence identity (not lower than 90% in this case). In fact, we also compared the core genome built by <italic>Roary</italic> with a 95% sequence identity threshold to the core genome obtained by <italic>CoreCruncher</italic> using a 90% sequence identity threshold. This resulted in a larger core genome shared by both methods: 2,640 genes (previously 2,541 when the thresholds were set at 95% sequence identity for both tools). Overall, these results show that <italic>CoreCruncher</italic> is more conservative than BBH-based approaches and that lower sequence thresholds than those typically used for BBH-based methods can be applied.</p>
    <p>Finally, the performance of <italic>CoreCruncher</italic> was assessed by building the core genome of data sets with different sizes. The genomes (protein sequences) of <italic>Escherichia coli</italic> were downloaded from <italic>RefSeq</italic> and used to test the performance of <italic>CoreCruncher</italic> on groups of 10, 100, 1,000, and 10,000 randomly selected genomes using the same parameters, the same pivot genome, and the same desktop computer. We found that the computation time increased approximatively linearly with the size of the genomic data set (<xref ref-type="fig" rid="msaa224-F4">fig. 4<italic>A</italic></xref>). Importantly, <italic>CoreCruncher</italic> was able to build the core genome of 10,000 genomes in less than 29 h on a desk computer and yielded a core genome of 1,890 genes. As expected, the size of the core genome decreased with the number of genomes (<xref ref-type="fig" rid="msaa224-F4">fig. 4<italic>B</italic></xref>). These results show that <italic>CoreCruncher</italic> is particularly well-suited for the analysis of very large data sets.
</p>
    <fig id="msaa224-F4" orientation="portrait" position="float">
      <label>Fig. 4.</label>
      <caption>
        <p>Performance of <italic>CoreCruncher</italic> relative to the size of the data set. The core genomes of different sets of genomes of <italic>E. coli</italic> were built using identical parameters and the same pivot genome (minimum protein identity threshold of 95% and a minimum genome frequency of 90%, nonstringent option). The core genomes were built for four data sets composed of 10, 100, 1,000, and 10,000 genomes of <italic>E. coli</italic> randomly sampled using the same desk computer (Mac Pro) for each <italic>CoreCruncher</italic> run. (<italic>A</italic>) Runtime of the core genomes across the four data sets (note that the <italic>x</italic>-axis and the <italic>y</italic>-axis are both in log-scale). (<italic>B</italic>) Size of the core genome obtained for the four data sets.</p>
      </caption>
      <graphic xlink:href="msaa224f4"/>
    </fig>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p><italic>CoreCruncher</italic> is a computational tool that rapidly and robustly assembles core genomes in large genomic data sets and, because it does not conduct all pairwise genome comparisons, <italic>CoreCruncher</italic> is well adapted to current data sets that are becoming increasingly larger (e.g., over 10,000 genomes). Though <italic>CoreCruncher</italic> does not define orthologs by conducting all pairwise genome comparisons, it does not overpredict core genes. On the contrary, the “double outlier” test implemented in <italic>CoreCruncher</italic> yields a more stringent core genome than typical approaches based on BBH. Moreover, <italic>CoreCruncher</italic> can distinguish true orthologs from orthologs containing hidden paralogs or xenologs, a step that is not typically implemented in other tools. For these reasons, <italic>CoreCruncher</italic> constitutes an efficient tool particularly well-suited to analyze current prokaryotic genome data sets composed of hundreds or thousands of genomes.</p>
    <p>Importantly, <italic>CoreCruncher</italic> is very fast. Using a desktop computer, the core genome of 484 genomes of <italic>S. marcescens</italic> was built in 2 h 39 min on average, with the longest run being completed in 3 h 43 min. Conversely, over 24 h were needed to analyze each data set with <italic>Roary</italic> using the same computer. It must be noted, however, that these performances cannot be directly compared as <italic>Roary</italic> also builds the entire pan-genome, whereas <italic>CoreCruncher</italic> focuses specifically on building the core genome. Nevertheless, the most time-consuming step of <italic>Roary</italic> consists of conducting the pairwise comparisons (BBH) across genomes; a step that is used by most programs aiming to define orthologs. As <italic>CoreCruncher</italic> does not compute all pairwise comparisons, its running time scales approximately linearly with the size of the data set while, for most programs relying on pairwise comparisons; the running time scales approximately quadratically with the size of the data set (<xref rid="msaa224-B22" ref-type="bibr">Page et al. 2015</xref>). <italic>CoreCruncher</italic> was also tested on very large data sets of 10,000 complete genomes of <italic>E. coli</italic> (using protein sequences) and the program was found to complete core genome construction in under 29 h on a desk computer.</p>
    <p>It should be noted that <italic>CoreCruncher</italic> yields more conservative core genomes and our comparison with a BBH procedure showed that the core genes inferred by <italic>CoreCruncher</italic> present a much narrower range of sequence identity. Although this feature is desirable to avoid the inclusion of paralogs and xenologs in the core genome, it might tend to exclude some true core genes from the core genome when run with a strict identity threshold (e.g., 95%). For this reason, we recommend using <italic>CoreCruncher</italic> with more permissive sequence thresholds than those typically used for BBH-based inference (e.g., 90%). We showed that BBH-based methods can infer core genes with highly divergent sequences and these genes are unlikely true core genes. This issue is more prone to occur when building core genomes on large data sets with BBH-based methods due to the clustering step that follows the inference of pairs of orthologs. As a result, we believe that BBH-based methodologies are not best suited to build the core genome of large sets of genomes (i.e., hundreds of genomes or more).</p>
    <p>The use of a pivot genome reduces substantially the runtime of the program. It should be noted, however, that using a low-quality genome assembly as a pivot genome can negatively affect the quality of the inferred core genome. Therefore, we strongly encourage the use of a high-quality assembly as the pivot genome. We have also implemented a script (<italic>consensus.py</italic>) that allows users to generate a consensus core genome from two core genomes built with different pivot genomes (note that all other parameters must be strictly identical between the two runs). This procedure prevents the user from missing the detection of core genes that are absent in one of the two pivot genomes. The script also checks the core genomes and excludes potential core genes that were inconsistently inferred by the two runs. Running <italic>CoreCruncher</italic> twice using two pivot genomes and subsequently building the consensus core genome is particularly recommended for data sets containing poor-quality assemblies such as metagenome assembled genomes.</p>
  </sec>
  <sec>
    <title>Materials and Methods</title>
    <p><italic>CoreCruncher</italic> uses <italic>Usearch</italic> (<xref rid="msaa224-B10" ref-type="bibr">Edgar 2010</xref>) (default) or <italic>Blast</italic> (<xref rid="msaa224-B3" ref-type="bibr">Altschul et al. 1997</xref>) to identify homologs based on sequence identity and sequence length by comparing each genome of the data set against the pivot genome. The pivot genome is chosen randomly if not specified. Each gene sequence of the pivot genome is compared against each genome of the data set, and each best hit is considered as a putative ortholog whereas other hits are directly classified as paralogs/xenologs (i.e., within-paralogs/xenologs). For each gene of the pivot genome, all best hits found across the genomes of the data set constitute a putative ortholog and, as such, are associated together in an orthologous family with a single or zero copy per genome. The orthologous family is considered a putative core gene when found in all or nearly all genomes (90% of the genomes by default). This step ultimately results in a putative core genome where no within-paralogs/xenologs are present; however; paralogs and xenologs may still be included due to more complex patterns of gene gains and losses or incomplete genome assemblies—resulting in seeming orthologs (i.e., “hidden paralogs/xenologs”). These cases are expected to occur when the orthologous sequence is lost, but a paralog/xenolog remains present in the genome (<xref ref-type="fig" rid="msaa224-F1">fig. 1</xref>). Current methodologies based on BBH are unlikely to recognize these sequences as paralogs or xenologs and may include them in the core genome (<xref rid="msaa224-B15" ref-type="bibr">Kristensen et al. 2011</xref>).</p>
    <p>First, <italic>CoreCruncher</italic> identifies partially hidden paralogs/xenologs as illustrated in <xref ref-type="fig" rid="msaa224-F1">figure 1<italic>C</italic></xref>. Paralogous or xenologous genes can be hidden paralogs/xenologs in some genomes (in instances where the orthologous sequence is absent from the genome) and within-paralogs/xenologs in other genomes. These cases are relatively straightforward to identify: For each putative core gene, the distribution of identity scores of all sequences is built and compared with the identity scores of the within-paralogs/xenologs, that is, each sequence is considered to be an ortholog unless a within-paralog/xenologs with a higher identity score has been identified. In the case where an ortholog presents one or more sequences with a lower identity score than a within-paralog/xenolog, the low-identity sequences are excluded from the orthologous family—which will still be considered a putative core gene if it meets the frequency criterion (i.e., by default an orthologous family must be present in 90% of the genomes to be considered a putative core gene). When <italic>CoreCruncher</italic> is run with the <italic>stringent</italic> option, an orthologous family is automatically excluded from the core genome if a sequence with a lower identity score than a within-paralog/xenolog is detected. Note that this step is only conducted when within-paralogs/xenologs have been identified for a given orthologous gene family.</p>
    <p>Second, <italic>CoreCruncher</italic> identifies completely hidden paralogs/xenologs as represented in <xref ref-type="fig" rid="msaa224-F1">figure 1<italic>D</italic></xref>. Completely hidden paralogs/xenologs are hidden paralogs or xenologs in one or more genomes (orthologous sequence is absent from the genome(s)) without any within-paralogs/xenologs present in other genomes. To ensure that no hidden paralogs/xenologs are included in the core genome, our method identifies sequences that are significantly more divergent from the other sequences of the orthologous gene, while accounting for the overall divergence of each genome. A given gene sequence may present a higher divergence rate relative to other sequences of the orthologous gene, but this may simply be due to the fact that this gene sequence is present in a more divergent strain. To account for this, we exclude sequences, or an orthologous family, from the core genome if it is itself, or if it contains, a “double outlier,” which is defined in this study as a sequence that is substantially more divergent from 1) the other sequences of the orthologous gene family (<xref ref-type="fig" rid="msaa224-F2">fig. 2</xref>, distribution 1) and 2) more divergent than the other putative orthologs of the genome (<xref ref-type="fig" rid="msaa224-F2">fig. 2</xref>, distribution 2). The set of putative core gene sequences is used to draw the distributions of identity scores for each genome that is compared with the pivot genome (distribution 2). The median value of each distribution is used to estimate the overall divergence between each genome and the pivot genome. Then, for each sequence of each putative core gene, we test for the presence of “double outliers,” which, as defined above, is a sequence that is significantly divergent 1) <italic>vertically</italic>: from the other sequences of the orthologous gene (using distribution 1) and 2) <italic>horizontally</italic>: from the average identity score computed across all the putative orthologs relative to the pivot genome (using distribution 2). In both cases, a sequence is defined as an outlier with Tukey’s fences (<xref rid="msaa224-B29" ref-type="bibr">Tukey 1977</xref>): if its identity threshold is below Q1 − 1.5(Q3–Q1) or above Q3 + 1.5(Q3–Q1), with Q1 and Q3 the values of the first and third quartiles, respectively. When a given sequence is inferred as a double outlier, it is considered a hidden paralog/xenolog and this genome’s sequence is excluded from the putative core gene. Other sequences of the putative core gene will still be considered part of the final core genome if they meet the frequency criterion (i.e., by default an ortholog must be present in 90% of the genomes to be considered a core gene). When <italic>CoreCruncher</italic> is run with the <italic>stringent</italic> option, a putative core gene is automatically excluded from the core genome if it contains one or more sequences inferred as a “double outlier.” After filtering out paralogous sequences and/or putative core genes with the “double outlier” test, the final core genome is built.</p>
    <p><italic>CoreCruncher</italic> is implemented with Python 3.7 and is also compatible with Python 2.7 and can run on Mac and Linux operating systems. <italic>CoreCruncher</italic> requires the Python library Numpy and <italic>Usearch</italic> (default) or <italic>Blast</italic> to identify homologs. If specified, the core genes extracted by <italic>CoreCruncher</italic> can be aligned with <italic>muscle</italic> (<xref rid="msaa224-B9" ref-type="bibr">Edgar 2004</xref>) (default) or <italic>mafft</italic> (<xref rid="msaa224-B14" ref-type="bibr">Katoh and Standley 2013</xref>) and these aligned protein or nucleotide sequences will be concatenated into a single merged alignment. <italic>CoreCruncher</italic> is capable of processing either protein or nucleotide sequences and has been found to be robustly capable of building the core genome for large data sets composed of more than 10,000 genomes in less than 29 h on a desk computer (using protein sequences).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Molecular Biology and Evolution</italic> online.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>msaa224_Supplementary_Data</label>
      <media xlink:href="msaa224_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgments</title>
    <p>We thank Courtenay Martin for assistance with the analyses and Caroline M. Stott for designing the <italic>CoreCruncher</italic> logo. This work was supported by the National Science Foundation under Grant No. DEB-1831730 awarded to L.M.B., by the National Institute of General Medical Sciences of the National Institutes of Health under Award Number R01GM132137 awarded to L.M.B. and by National Science Foundation under Grant No. DEB-11930776 awarded to K.R. E.L.T. is supported by the Department of Energy Computational Science Graduate Fellowship (DOE CSGF).</p>
    <sec sec-type="data-availability">
      <title>Data Availability</title>
      <p>The data underlying this article are available from: <ext-link ext-link-type="uri" xlink:href="https://github.com/lbobay/CoreCruncher">https://github.com/lbobay/CoreCruncher</ext-link>. Genomes used in this study are listed in <xref ref-type="supplementary-material" rid="sup1">supplementary table S1</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref> online and are freely available on <italic>RefSeq</italic> at <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/genome/">https://www.ncbi.nlm.nih.gov/genome/</ext-link>.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="msaa224-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Altenhoff</surname><given-names>AM</given-names></string-name>, <string-name><surname>Dessimoz</surname><given-names>C.</given-names></string-name></person-group><year>2009</year>. 
<article-title>Phylogenetic and functional assessment of orthologs inference projects and methods</article-title>. <source>PLoS Comput Biol</source>. <volume>5</volume>(<issue>1</issue>):<fpage>e1000262</fpage>.<pub-id pub-id-type="pmid">19148271</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Altenhoff</surname><given-names>AM</given-names></string-name>, <string-name><surname>Dessimoz</surname><given-names>C.</given-names></string-name></person-group><year>2012</year>. 
<article-title>Inferring orthology and paralogy</article-title>. <source>Methods Mol Biol</source>. <volume>855</volume>:<fpage>259</fpage>–<lpage>279</lpage>.<pub-id pub-id-type="pmid">22407712</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Altschul</surname><given-names>SF</given-names></string-name>, <string-name><surname>Madden</surname><given-names>TL</given-names></string-name>, <string-name><surname>Schaffer</surname><given-names>AA</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>J</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>Z</given-names></string-name>, <string-name><surname>Miller</surname><given-names>W</given-names></string-name>, <string-name><surname>Lipman</surname><given-names>DJ.</given-names></string-name></person-group><year>1997</year>. 
<article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>. <source>Nucleic Acids Res</source>. <volume>25</volume>(<issue>17</issue>):<fpage>3389</fpage>–<lpage>3402</lpage>.<pub-id pub-id-type="pmid">9254694</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bobay</surname><given-names>LM</given-names></string-name>, <string-name><surname>Ochman</surname><given-names>H.</given-names></string-name></person-group><year>2017</year>. 
<article-title>Biological species are universal across Life's domains</article-title>. <source>Genome Biol Evol</source>. <volume>9</volume>(<issue>3</issue>):<fpage>491</fpage>–<lpage>501</lpage>.</mixed-citation>
    </ref>
    <ref id="msaa224-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bobay</surname><given-names>LM</given-names></string-name>, <string-name><surname>Ochman</surname><given-names>H.</given-names></string-name></person-group><year>2018</year>. 
<article-title>Factors driving effective population size and pan-genome evolution in bacteria</article-title>. <source>BMC Evol Biol</source>. <volume>18</volume>(<issue>1</issue>):<fpage>153</fpage>.<pub-id pub-id-type="pmid">30314447</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>F</given-names></string-name>, <string-name><surname>Mackey</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Vermunt</surname><given-names>JK</given-names></string-name>, <string-name><surname>Roos</surname><given-names>DS.</given-names></string-name></person-group><year>2007</year>. 
<article-title>Assessing performance of orthology detection strategies applied to eukaryotic genomes</article-title>. <source>PLoS One</source><volume>2</volume>(<issue>4</issue>):<fpage>e383</fpage>.<pub-id pub-id-type="pmid">17440619</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Contreras-Moreira</surname><given-names>B</given-names></string-name>, <string-name><surname>Vinuesa</surname><given-names>P.</given-names></string-name></person-group><year>2013</year>. 
<article-title>GET_HOMOLOGUES, a versatile software package for scalable and robust microbial pangenome analysis</article-title>. <source>Appl Environ Microbiol</source>. <volume>79</volume>(<issue>24</issue>):<fpage>7696</fpage>–<lpage>7701</lpage>.<pub-id pub-id-type="pmid">24096415</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cosentino</surname><given-names>S</given-names></string-name>, <string-name><surname>Iwasaki</surname><given-names>W.</given-names></string-name></person-group><year>2019</year>. 
<article-title>SonicParanoid: fast, accurate and easy orthology inference</article-title>. <source>Bioinformatics</source><volume>35</volume>(<issue>1</issue>):<fpage>149</fpage>–<lpage>151</lpage>.<pub-id pub-id-type="pmid">30032301</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edgar</surname><given-names>RC.</given-names></string-name></person-group><year>2004</year>. 
<article-title>MUSCLE: multiple sequence alignment with high accuracy and high throughput</article-title>. <source>Nucleic Acids Res</source>. <volume>32</volume>(<issue>5</issue>):<fpage>1792</fpage>–<lpage>1797</lpage>.<pub-id pub-id-type="pmid">15034147</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edgar</surname><given-names>RC.</given-names></string-name></person-group><year>2010</year>. 
<article-title>Search and clustering orders of magnitude faster than BLAST</article-title>. <source>Bioinformatics</source><volume>26</volume>(<issue>19</issue>):<fpage>2460</fpage>–<lpage>2461</lpage>.<pub-id pub-id-type="pmid">20709691</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gao</surname><given-names>K</given-names></string-name>, <string-name><surname>Miller</surname><given-names>J.</given-names></string-name></person-group><year>2020</year>. 
<article-title>Primary orthologs from local sequence context</article-title>. <source>BMC Bioinformatics</source><volume>21</volume>(<issue>1</issue>):<fpage>48</fpage>.<pub-id pub-id-type="pmid">32028880</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huerta-Cepas</surname><given-names>J</given-names></string-name>, <string-name><surname>Szklarczyk</surname><given-names>D</given-names></string-name>, <string-name><surname>Forslund</surname><given-names>K</given-names></string-name>, <string-name><surname>Cook</surname><given-names>H</given-names></string-name>, <string-name><surname>Heller</surname><given-names>D</given-names></string-name>, <string-name><surname>Walter</surname><given-names>MC</given-names></string-name>, <string-name><surname>Rattei</surname><given-names>T</given-names></string-name>, <string-name><surname>Mende</surname><given-names>DR</given-names></string-name>, <string-name><surname>Sunagawa</surname><given-names>S</given-names></string-name>, <string-name><surname>Kuhn</surname><given-names>M</given-names></string-name></person-group>, <etal>et al</etal><year>2016</year>. 
<article-title>eggNOG 4.5: a hierarchical orthology framework with improved functional annotations for eukaryotic, prokaryotic and viral sequences</article-title>. <source>Nucleic Acids Res</source>. <volume>44</volume>(<issue>D1</issue>):<fpage>D286</fpage>–<lpage>293</lpage>.<pub-id pub-id-type="pmid">26582926</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jothi</surname><given-names>R</given-names></string-name>, <string-name><surname>Zotenko</surname><given-names>E</given-names></string-name>, <string-name><surname>Tasneem</surname><given-names>A</given-names></string-name>, <string-name><surname>Przytycka</surname><given-names>TM.</given-names></string-name></person-group><year>2006</year>. 
<article-title>COCO-CL: hierarchical clustering of homology relations based on evolutionary correlations</article-title>. <source>Bioinformatics</source><volume>22</volume>(<issue>7</issue>):<fpage>779</fpage>–<lpage>788</lpage>.<pub-id pub-id-type="pmid">16434444</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Katoh</surname><given-names>K</given-names></string-name>, <string-name><surname>Standley</surname><given-names>DM.</given-names></string-name></person-group><year>2013</year>. 
<article-title>MAFFT multiple sequence alignment software version 7: improvements in performance and usability</article-title>. <source>Mol Biol Evol</source>. <volume>30</volume>(<issue>4</issue>):<fpage>772</fpage>–<lpage>780</lpage>.<pub-id pub-id-type="pmid">23329690</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kristensen</surname><given-names>DM</given-names></string-name>, <string-name><surname>Wolf</surname><given-names>YI</given-names></string-name>, <string-name><surname>Mushegian</surname><given-names>AR</given-names></string-name>, <string-name><surname>Koonin</surname><given-names>EV.</given-names></string-name></person-group><year>2011</year>. 
<article-title>Computational methods for Gene Orthology inference</article-title>. <source>Brief Bioinform</source>. <volume>12</volume>(<issue>5</issue>):<fpage>379</fpage>–<lpage>391</lpage>.<pub-id pub-id-type="pmid">21690100</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kriventseva</surname><given-names>EV</given-names></string-name>, <string-name><surname>Rahman</surname><given-names>N</given-names></string-name>, <string-name><surname>Espinosa</surname><given-names>O</given-names></string-name>, <string-name><surname>Zdobnov</surname><given-names>EM.</given-names></string-name></person-group><year>2007</year>. 
<article-title>OrthoDB: the hierarchical catalog of eukaryotic orthologs</article-title>. <source>Nucleic Acids Res</source>. <volume>36</volume>(<issue>Database</issue>):<fpage>D271</fpage>–<lpage>275</lpage>.<pub-id pub-id-type="pmid">17947323</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lafond</surname><given-names>M</given-names></string-name>, <string-name><surname>Meghdari Miardan</surname><given-names>M</given-names></string-name>, <string-name><surname>Sankoff</surname><given-names>D.</given-names></string-name></person-group><year>2018</year>. 
<article-title>Accurate prediction of orthologs in the presence of divergence after duplication</article-title>. <source>Bioinformatics</source><volume>34</volume>(<issue>13</issue>):<fpage>i366</fpage>–<lpage>375</lpage>.<pub-id pub-id-type="pmid">29950018</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>L</given-names></string-name>, <string-name><surname>Stoeckert</surname><given-names>CJ</given-names><suffix>Jr</suffix></string-name>, <string-name><surname>Roos</surname><given-names>DS.</given-names></string-name></person-group><year>2003</year>. 
<article-title>OrthoMCL: identification of ortholog groups for eukaryotic genomes</article-title>. <source>Genome Res</source>. <volume>13</volume>(<issue>9</issue>):<fpage>2178</fpage>–<lpage>2189</lpage>.<pub-id pub-id-type="pmid">12952885</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Maistrenko</surname><given-names>OM</given-names></string-name>, <string-name><surname>Mende</surname><given-names>DR</given-names></string-name>, <string-name><surname>Luetge</surname><given-names>M</given-names></string-name>, <string-name><surname>Hildebrand</surname><given-names>F</given-names></string-name>, <string-name><surname>Schmidt</surname><given-names>TSB</given-names></string-name>, <string-name><surname>Li</surname><given-names>SS</given-names></string-name>, <string-name><surname>Rodrigues</surname><given-names>JFM</given-names></string-name>, <string-name><surname>von Mering</surname><given-names>C</given-names></string-name>, <string-name><surname>Pedro Coelho</surname><given-names>L</given-names></string-name>, <string-name><surname>Huerta-Cepas</surname><given-names>J</given-names></string-name></person-group>, <etal>et al</etal><year>2020</year>. 
<article-title>Disentangling the impact of environmental and phylogenetic constraints on prokaryotic within-species diversity</article-title>. <source>ISME J</source>. <volume>14</volume>(<issue>5</issue>):<fpage>1247</fpage>–<lpage>1259</lpage>.<pub-id pub-id-type="pmid">32047279</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Medini</surname><given-names>D</given-names></string-name>, <string-name><surname>Donati</surname><given-names>C</given-names></string-name>, <string-name><surname>Tettelin</surname><given-names>H</given-names></string-name>, <string-name><surname>Masignani</surname><given-names>V</given-names></string-name>, <string-name><surname>Rappuoli</surname><given-names>R.</given-names></string-name></person-group><year>2005</year>. 
<article-title>The microbial pan-genome</article-title>. <source>Curr Opin Genet Dev</source>. <volume>15</volume>(<issue>6</issue>):<fpage>589</fpage>–<lpage>594</lpage>.<pub-id pub-id-type="pmid">16185861</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miele</surname><given-names>V</given-names></string-name>, <string-name><surname>Penel</surname><given-names>S</given-names></string-name>, <string-name><surname>Duret</surname><given-names>L.</given-names></string-name></person-group><year>2011</year>. 
<article-title>Ultra-fast sequence clustering from similarity networks with SiLiX</article-title>. <source>BMC Bioinformatics</source><volume>12</volume>(<issue>1</issue>):<fpage>116</fpage>.<pub-id pub-id-type="pmid">21513511</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Page</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Cummins</surname><given-names>CA</given-names></string-name>, <string-name><surname>Hunt</surname><given-names>M</given-names></string-name>, <string-name><surname>Wong</surname><given-names>VK</given-names></string-name>, <string-name><surname>Reuter</surname><given-names>S</given-names></string-name>, <string-name><surname>Holden</surname><given-names>MT</given-names></string-name>, <string-name><surname>Fookes</surname><given-names>M</given-names></string-name>, <string-name><surname>Falush</surname><given-names>D</given-names></string-name>, <string-name><surname>Keane</surname><given-names>JA</given-names></string-name>, <string-name><surname>Parkhill</surname><given-names>J.</given-names></string-name></person-group><year>2015</year>. 
<article-title>Roary: rapid large-scale prokaryote pan genome analysis</article-title>. <source>Bioinformatics</source><volume>31</volume>(<issue>22</issue>):<fpage>3691</fpage>–<lpage>3693</lpage>.<pub-id pub-id-type="pmid">26198102</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Parks</surname><given-names>DH</given-names></string-name>, <string-name><surname>Chuvochina</surname><given-names>M</given-names></string-name>, <string-name><surname>Waite</surname><given-names>DW</given-names></string-name>, <string-name><surname>Rinke</surname><given-names>C</given-names></string-name>, <string-name><surname>Skarshewski</surname><given-names>A</given-names></string-name>, <string-name><surname>Chaumeil</surname><given-names>PA</given-names></string-name>, <string-name><surname>Hugenholtz</surname><given-names>P.</given-names></string-name></person-group><year>2018</year>. 
<article-title>A standardized bacterial taxonomy based on genome phylogeny substantially revises the tree of life</article-title>. <source>Nat Biotechnol</source>. <volume>36</volume>(<issue>10</issue>):<fpage>996</fpage>–<lpage>1004</lpage>.<pub-id pub-id-type="pmid">30148503</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Remm</surname><given-names>M</given-names></string-name>, <string-name><surname>Storm</surname><given-names>CE</given-names></string-name>, <string-name><surname>Sonnhammer</surname><given-names>EL.</given-names></string-name></person-group><year>2001</year>. 
<article-title>Automatic clustering of orthologs and in-paralogs from pairwise species comparisons</article-title>. <source>J Mol Biol</source>. <volume>314</volume>(<issue>5</issue>):<fpage>1041</fpage>–<lpage>1052</lpage>.<pub-id pub-id-type="pmid">11743721</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roth</surname><given-names>AC</given-names></string-name>, <string-name><surname>Gonnet</surname><given-names>GH</given-names></string-name>, <string-name><surname>Dessimoz</surname><given-names>C.</given-names></string-name></person-group><year>2008</year>. 
<article-title>Algorithm of OMA for large-scale orthology inference</article-title>. <source>BMC Bioinformatics</source><volume>9</volume>(<issue>1</issue>):<fpage>518</fpage>.<pub-id pub-id-type="pmid">19055798</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sonnhammer</surname><given-names>EL</given-names></string-name>, <string-name><surname>Gabaldon</surname><given-names>T</given-names></string-name>, <string-name><surname>Sousa da Silva</surname><given-names>AW</given-names></string-name>, <string-name><surname>Martin</surname><given-names>M</given-names></string-name>, <string-name><surname>Robinson-Rechavi</surname><given-names>M</given-names></string-name>, <string-name><surname>Boeckmann</surname><given-names>B</given-names></string-name>, <string-name><surname>Thomas</surname><given-names>PD</given-names></string-name>, <string-name><surname>Dessimoz</surname><given-names>C</given-names></string-name></person-group>, Quest for Orthologs c. <year>2014</year>. 
<article-title>Big data and other challenges in the quest for orthologs</article-title>. <source>Bioinformatics</source><volume>30</volume>(<issue>21</issue>):<fpage>2993</fpage>–<lpage>2998</lpage>.<pub-id pub-id-type="pmid">25064571</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tatusov</surname><given-names>RL</given-names></string-name>, <string-name><surname>Koonin</surname><given-names>EV</given-names></string-name>, <string-name><surname>Lipman</surname><given-names>DJ.</given-names></string-name></person-group><year>1997</year>. 
<article-title>A genomic perspective on protein families</article-title>. <source>Science</source><volume>278</volume>(<issue>5338</issue>):<fpage>631</fpage>–<lpage>637</lpage>.<pub-id pub-id-type="pmid">9381173</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Treangen</surname><given-names>TJ</given-names></string-name>, <string-name><surname>Rocha</surname><given-names>EP.</given-names></string-name></person-group><year>2011</year>. 
<article-title>Horizontal transfer, not duplication, drives the expansion of protein families in prokaryotes</article-title>. <source>PLoS Genet</source>. <volume>7</volume>(<issue>1</issue>):<fpage>e1001284</fpage>.<pub-id pub-id-type="pmid">21298028</pub-id></mixed-citation>
    </ref>
    <ref id="msaa224-B29">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Tukey</surname><given-names>JW.</given-names></string-name></person-group><year>1977</year>. Exploratory data analysis. 
<publisher-loc>Reading (MA</publisher-loc>): 
<publisher-name>Addison-Wesley</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msaa224-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vernikos</surname><given-names>G</given-names></string-name>, <string-name><surname>Medini</surname><given-names>D</given-names></string-name>, <string-name><surname>Riley</surname><given-names>DR</given-names></string-name>, <string-name><surname>Tettelin</surname><given-names>H.</given-names></string-name></person-group><year>2015</year>. 
<article-title>Ten years of pan-genome analyses</article-title>. <source>Curr Opin Microbiol</source>. <volume>23</volume>:<fpage>148</fpage>–<lpage>154</lpage>.<pub-id pub-id-type="pmid">25483351</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

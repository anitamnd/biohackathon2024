<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2873544</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-11-233</article-id>
    <article-id pub-id-type="pmid">20459647</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-11-233</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Odefy -- From discrete to continuous models</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="A1">
        <name>
          <surname>Krumsiek</surname>
          <given-names>Jan</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>jan.krumsiek@helmholtz-muenchen.de</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Pölsterl</surname>
          <given-names>Sebastian</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>poelsterl@cip.ifi.lmu.de</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Wittmann</surname>
          <given-names>Dominik M</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>dominik.wittmann@helmholtz-muenchen.de</email>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="A4">
        <name>
          <surname>Theis</surname>
          <given-names>Fabian J</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>fabian.theis@helmholtz-muenchen.de</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Institute for Bioinformatics and Systems Biology, Helmholtz Zentrum München, Ingolstädter Landstrasse 1, 85764 Munich-Neuherberg, Germany</aff>
    <aff id="I2"><label>2</label>Department of Mathematics, Technische Universität München, Boltzmannstrasse 3, 85748 Garching, Germany</aff>
    <pub-date pub-type="collection">
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>7</day>
      <month>5</month>
      <year>2010</year>
    </pub-date>
    <volume>11</volume>
    <fpage>233</fpage>
    <lpage>233</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>11</month>
        <year>2009</year>
      </date>
      <date date-type="accepted">
        <day>7</day>
        <month>5</month>
        <year>2010</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright ©2010 Krumsiek et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2010</copyright-year>
      <copyright-holder>Krumsiek et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/11/233"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Phenomenological information about regulatory interactions is frequently available and can be readily converted to Boolean models. Fully quantitative models, on the other hand, provide detailed insights into the precise dynamics of the underlying system. In order to connect discrete and continuous modeling approaches, methods for the conversion of Boolean systems into systems of ordinary differential equations have been developed recently. As biological interaction networks have steadily grown in size and complexity, a fully automated framework for the conversion process is desirable.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We present <italic>Odefy</italic>, a MATLAB- and Octave-compatible toolbox for the automated transformation of Boolean models into systems of ordinary differential equations. Models can be created from sets of Boolean equations or graph representations of Boolean networks. Alternatively, the user can import Boolean models from the CellNetAnalyzer toolbox, GINSim and the PBN toolbox. The Boolean models are transformed to systems of ordinary differential equations by multivariate polynomial interpolation and optional application of sigmoidal Hill functions. Our toolbox contains basic simulation and visualization functionalities for both, the Boolean as well as the continuous models. For further analyses, models can be exported to SQUAD, GNA, MATLAB script files, the SB toolbox, SBML and R script files. Odefy contains a user-friendly graphical user interface for convenient access to the simulation and exporting functionalities. We illustrate the validity of our transformation approach as well as the usage and benefit of the Odefy toolbox for two biological systems: a mutual inhibitory switch known from stem cell differentiation and a regulatory network giving rise to a specific spatial expression pattern at the mid-hindbrain boundary.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>Odefy provides an easy-to-use toolbox for the automatic conversion of Boolean models to systems of ordinary differential equations. It can be efficiently connected to a variety of input and output formats for further analysis and investigations. The toolbox is open-source and can be downloaded at <ext-link ext-link-type="uri" xlink:href="http://cmb.helmholtz-muenchen.de/odefy">http://cmb.helmholtz-muenchen.de/odefy</ext-link>.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>The ultimate goal of the increasingly popular systems biology approach is the integration of many different molecular interactions into extensive computer models that closely reflect real-life behavior of their underlying biological systems. Mathematical implementations of various biological systems have been proposed recently, including cell cycle control in yeast [<xref ref-type="bibr" rid="B1">1</xref>] and <italic>Caulobacter crescentus </italic>[<xref ref-type="bibr" rid="B2">2</xref>], and circadian rhythms of <italic>Arabidopsis thaliana </italic>[<xref ref-type="bibr" rid="B3">3</xref>] to name but just a few. Such studies are primarily designed to match known measurable phenotypes of the respective systems and reveal insights into the precise quantitative evolution of biochemical species over time. With a reasonable <italic>in silico </italic>implementation of a biological system at hand, predictions of knockout and perturbation effects can be performed by the computer.</p>
    <p>For most biological systems, however, only qualitative information about regulatory interactions is available, which is not sufficient to implement precise kinetic rate laws for each biochemical reaction. A well-established workaround for this lack of information is the application of discretized modeling approaches. In Boolean methodology, for example, we abstract from actual molecule quantities and assign each player in the system the state <italic>on </italic>or <italic>off </italic>(e.g. active or inactive). Despite the simplicity of Boolean models we still assume them to provide information about the general dynamics and capabilities of the underlying system. Recently proposed Boolean models include developmental processes in <italic>D. melanogaster </italic>[<xref ref-type="bibr" rid="B4">4</xref>], the regulation of the mammalian cell cycle [<xref ref-type="bibr" rid="B5">5</xref>], the activation of T-cells [<xref ref-type="bibr" rid="B6">6</xref>] and EGFR signaling in human hepatocytes [<xref ref-type="bibr" rid="B7">7</xref>].</p>
    <p>In [<xref ref-type="bibr" rid="B8">8</xref>] we described a novel technique called <italic>HillCube </italic>for the automatic transformation of Boolean models into systems of autonomous first-order ordinary differential equations (ODEs). HillCubes are based on multivariate polynomial interpolation and incorporate Hill kinetics (see Implementation), which are known to provide a good generalized approximation of the synergistic dynamics of gene regulation [<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B10">10</xref>]. Important properties of the system like steady-state behavior are preserved during the transformation. Our methodology allows to enrich Boolean models built up from coarse information by features of quantitative models, such as intermediate expression levels, continuous transitions and different time-scales. Other approaches for the analysis of purely phenomenological regulatory networks have been developed recently (cf. e.g. [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B11">11</xref>]) but do not employ continuous, quantitative modeling.</p>
    <p>Here we present a user-friendly implementation of the HillCube technique suitable for large-scale networks in a MATLAB/Octave toolbox called <italic>Odefy</italic>. This software provides convenient access to different model sources, the conversion process itself and various analysis and export methods (Figure <xref ref-type="fig" rid="F1">1</xref>). Boolean models may be entered as sets of Boolean equations directly or created with the yEd graph editor [<xref ref-type="bibr" rid="B12">12</xref>]. The user may build conventional <italic>interaction graphs </italic>with activating and inhibiting edges or use an intuitive hypergraph representation of Boolean models [<xref ref-type="bibr" rid="B13">13</xref>]. In addition, models can be imported from the <italic>CellNetAnalyzer </italic>toolbox [<xref ref-type="bibr" rid="B6">6</xref>], GINsim [<xref ref-type="bibr" rid="B14">14</xref>] and the PBN toolbox [<xref ref-type="bibr" rid="B15">15</xref>]. After generating the ODEs, the user can easily adjust model parameters and perform time-course simulations using Odefy's graphical user interface. The ODE systems can be exported to MATLAB script files for further usage in MATLAB programs, to ODE script files for the R computing platform, to the SBML format, or to the well-established MATLAB Systems Biology Toolbox [<xref ref-type="bibr" rid="B16">16</xref>]. Due to the nice mathematical properties of the produced ODEs and the integration with state-of-the-art modeling tools, a variety of analysis methods can be immediately applied to the models generated by Odefy, including bifurcation analysis, parameter estimation, parameter sensitivity analysis and so on. For compatibility, we also integrated export options to the discrete model formats of the <italic>Genetic Network Analyzer </italic>[<xref ref-type="bibr" rid="B17">17</xref>] and <italic>SQUAD </italic>[<xref ref-type="bibr" rid="B18">18</xref>].</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>Odefy overview</bold>. Odefy generates models from sets of Boolean equations or Boolean hypergraphs created with yEd. Alternatively, Boolean models can be imported from the CellNetAnalyzer, GINsim or the PBN toolbox. Odefy contains a method for the automatic generation of multi-compartment models from a given single cell model. Boolean models can be exported to other discrete input formats (for the GNA and SQUAD toolboxes), used for Boolean simulations and analysis within Odefy, or they can be converted to systems of ordinary differential equation (ODE). These ODE systems can either be directly simulated and analyzed with Odefy or exported to well-established model formats, including MATLAB script files, SBML, SB Toolbox models and R script files.</p>
      </caption>
      <graphic xlink:href="1471-2105-11-233-1"/>
    </fig>
    <p>In this manuscript we first discuss the mathematical backgrounds and implementation details of the Odefy toolbox, including the different model import sources, analysis methods and export options. In the results section, two examples of quantitative modeling with our toolbox are given, namely a motif from stem cell differentiation and the regulatory network responsible for the establishment and stable maintenance of the mid-hindbrain boundary. We show the ease-of-use of the Odefy toolbox and demonstrate similar dynamical properties between a molecular model of the stem cell motif and the corresponding derived Odefy model. The mid-hindbrain example specifically emphasizes the importance of a fully automated conversion method from discrete to continuous models.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <sec>
      <title>Mathematical background</title>
      <p>This section outlines the mathematical formulation of our automatic Boolean model conversion technique. For a detailed description of this methodology along with motivations, comparisons to similar approaches and application to a T-cell signaling model, we refer the reader to [<xref ref-type="bibr" rid="B8">8</xref>]. A Boolean model consists of <italic>N </italic>species <italic>X</italic><sub>1</sub>, <italic>X</italic><sub>2</sub>, ..., <italic>X</italic><sub><italic>N </italic></sub>each taking a value <italic>x</italic><sub><italic>i </italic></sub>∈ {0, 1}. The value of <italic>X</italic><sub><italic>i </italic></sub>at time <italic>t </italic>+ 1 depends on the species <italic>X</italic><sub><italic>i</italic>1</sub>, <italic>X</italic><sub><italic>i</italic>2</sub>, ..., <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i1.gif"/></inline-formula> and is given by the Boolean update function <italic>B</italic><sub><italic>i </italic></sub>(<italic>x</italic><sub><italic>i</italic>1</sub>, <italic>x</italic><sub><italic>i</italic>2</sub>, ..., <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i1.gif"/></inline-formula>) ∈ {0, 1}. In a discrete simulation, time is discretized and the values of <italic>x</italic><sub>1</sub>, <italic>x</italic><sub>2</sub>, ..., <italic>x</italic><sub><italic>N </italic></sub>at time <italic>t </italic>+ 1 are determined by synchronously setting:<disp-formula><graphic xlink:href="1471-2105-11-233-i2.gif"/></disp-formula></p>
      <p>The main idea is to convert the above discrete model into a continuous ODE model, where species <italic>X</italic><sub><italic>i </italic></sub>is allowed to take values <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i3.gif"/></inline-formula> ∈ [0, 1], and its temporal development is described by the ordinary differential equation (ODE):<disp-formula><graphic xlink:href="1471-2105-11-233-i4.gif"/></disp-formula></p>
      <p>The right hand side of this equation consists of two parts, an activation function <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i5.gif"/></inline-formula> describing the production of species <italic>X</italic><sub><italic>i </italic></sub>and a first-order decay term. An additional parameter <italic>τ</italic><sub><italic>i </italic></sub>is introduced to the system, which can be understood as the life-time of species <italic>X</italic><sub><italic>i</italic></sub>. <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i5.gif"/></inline-formula> can be considered a continuous homologue of the Boolean update function. The key point is how it can be obtained from <italic>B</italic><sub><italic>i </italic></sub>in a computationally efficient manner.</p>
      <p>In Odefy, three different methods to transform <italic>B</italic><sub><italic>i </italic></sub>into <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i5.gif"/></inline-formula> are implemented. They are shortly described in the following. For simplicity of notation, we omit the subscript <italic>i</italic>.</p>
      <sec>
        <title>BooleCube</title>
        <p>The basis of all three transformation methods are the so-called <italic>BooleCubes</italic>:<disp-formula><graphic xlink:href="1471-2105-11-233-i6.gif"/></disp-formula></p>
        <p>which we obtain by multilinearly interpolating the Boolean function <italic>B</italic>, see Figure <xref ref-type="fig" rid="F2">2A</xref>.</p>
        <fig id="F2" position="float">
          <label>Figure 2</label>
          <caption>
            <p><bold>Continuous homologues of Boolean functions</bold>. Continuous homologues of Boolean functions. <bold>A </bold>Multilinear interpolation of a two-variable OR gate (Boole-Cube). <bold>B </bold>Hill functions with Hill coefficients <italic>n </italic>= 2, 4, 8, 16 and <italic>k </italic>= 0.5 as continuous relaxation of a Boolean step function. <bold>C </bold>Composition of BooleCube from (A) with Hill functions (HillCube). <bold>D </bold>normalized HillCube from (C).</p>
          </caption>
          <graphic xlink:href="1471-2105-11-233-2"/>
        </fig>
      </sec>
      <sec>
        <title>HillCube</title>
        <p>The functions <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i7.gif"/></inline-formula> are affine multilinear. Many molecular interactions, however, are known to show a switch-like behavior, which can be modeled using sigmoid shaped <italic>Hill functions </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-233-i8.gif"/></inline-formula>, see Figure <xref ref-type="fig" rid="F2">2B</xref>. The two parameters <italic>n </italic>and <italic>k </italic>have a clear biological meaning. The Hill coefficient <italic>n </italic>determines the slope of the curve and is a measure of the cooperativity of the interaction. The parameter <italic>k </italic>corresponds to the threshold in the Boolean model, above which one defines the state of a species as <italic>on</italic>. Mathematically speaking, it is the value at which the activation is half maximal, i.e. equal to 0.5. We now introduce a Hill function <italic>f</italic><sub><italic>i </italic></sub>with parameters (<italic>n</italic><sub><italic>i</italic></sub>, <italic>k</italic><sub><italic>i</italic></sub>) for every interaction and define a new continuous function:<disp-formula><graphic xlink:href="1471-2105-11-233-i9.gif"/></disp-formula></p>
        <p>which we call <italic>HillCubes</italic>, see Figure <xref ref-type="fig" rid="F2">2C</xref>. We can show that for sufficiently large Hill exponents <italic>n</italic>, there will be a steady-state of the continuous system in the neighborhood of each Boolean steady-state [<xref ref-type="bibr" rid="B8">8</xref>].</p>
      </sec>
      <sec>
        <title>Normalized HillCube</title>
        <p>Note that Hill functions never assume the value 1, but approach it asymptotically. Hence, the HillCubes are not perfect homologues of the Boolean update function <italic>B</italic>. If this is desired a simple solution is to normalize the Hill functions to the unit interval. This yields another continuous (perfect) homologue of the Boolean function <italic>B</italic>:<disp-formula><graphic xlink:href="1471-2105-11-233-i10.gif"/></disp-formula></p>
        <p>which we call <italic>normalized HillCube</italic>, see Figure <xref ref-type="fig" rid="F2">2D</xref>.</p>
      </sec>
    </sec>
    <sec>
      <title>Implementation in MATLAB/Octave</title>
      <p>The core functionality of Odefy is accessible through a set of functions for the MATLAB/Octave command line or via a Java-based graphical user interface. Figure <xref ref-type="fig" rid="F1">1</xref> shows an overview of the complete Odefy tool-box. The following section provides detailed descriptions of the model definition and import process, ODE generation, model simulation and exporting.</p>
      <sec>
        <title>Model definition &amp; representation</title>
        <p>An Odefy input model consists of a set of Boolean update rules for the underlying regulatory system. Our toolbox currently supports several possibilities to define such models:</p>
        <p>(i) The user may enter a set of symbolic Boolean equations in text-form, allowing for the quick and intuitive generation of model structures (Figure <xref ref-type="fig" rid="F3">3A</xref>). Boolean equations consist of model variables and the three Boolean operators AND, OR and NOT. For the Odefy import process, we represent these operators by the MATLAB language-specific operators &amp;&amp;, || and ~, respectively. Throughout this manuscript, we stick to the common mathematical notation of ˄ for AND, ∨ for OR and ¬ for NOT.</p>
        <fig id="F3" position="float">
          <label>Figure 3</label>
          <caption>
            <p><bold>Boolean model definition</bold>. <bold>A </bold>The easiest way to define a Boolean model in Odefy is to specify a set of Boolean equations in a text file. This example represents an asymmetric version of the mutual inhibitory switch shown in the results section. Note the use of the MATLAB language-specific operators &amp;&amp;, || and ~. <bold>B </bold>Regulatory interaction graph created with the yEd graph editor. Regular arrows represent activatory influences whereas diamond-head arrows stand for inhibition. Note that we need to specify a generic logic to combine multiple regulatory inputs for node <italic>E</italic>. The Odefy default <italic>at least one activator and no inhibitors </italic>logic would result in <italic>E </italic>= (<italic>A </italic>∨ <italic>C</italic>) ˄ ¬ (<italic>B </italic>∨ <italic>C</italic>). <bold>C </bold>Alternative representation of the Boolean model as a hypergraph. Using a specialized node '&amp;' we can precisely specify the Boolean logic for node <italic>E</italic>. All edges not incident to a '&amp;' node are treated with an OR logic. The resulting Boolean update rule reads <italic>E </italic>= (<italic>A </italic>˄ ¬ <italic>B</italic>) ∨ <italic>C </italic>∨ ¬ <italic>D</italic>. ˄ = logical AND, ∨ = logical OR, ¬ = logical NOT.</p>
          </caption>
          <graphic xlink:href="1471-2105-11-233-3"/>
        </fig>
        <p>(ii) Models can be derived from directed graphs created in the free yEd graph editing software [<xref ref-type="bibr" rid="B12">12</xref>]. The user builds an interaction graph of activating and inhibiting edges, which is then converted to an Odefy Boolean model (Figure <xref ref-type="fig" rid="F3">3B</xref>). Note that we need to specify how multiple regulatory inputs of a single factor are combined into a Boolean update rule. For this a generic logic of the form <italic>f</italic>(<italic>X</italic>) = (<italic>A</italic><sub>1 </sub>⊖ <italic>A</italic><sub>2 </sub>⊖ ... ⊖ <italic>A</italic><sub><italic>m</italic></sub>) ⊙ ¬(<italic>I</italic><sub>1 </sub>⊗ <italic>I</italic><sub>2 </sub>⊗ ... ⊗<italic>I</italic><sub><italic>n</italic></sub>) defined by three Boolean operators ⊖, ⊙, ⊗ ∈ {˄, ∨} is used, where <italic>A</italic><sub>1</sub>, ..., <italic>A</italic><sub><italic>m </italic></sub>is the set of activators and <italic>I</italic><sub>1</sub>, ..., <italic>I</italic><sub><italic>n </italic></sub>represent all the inhibitors of <italic>X</italic>. The Odefy default setting is to activate the output if at least one activator and no inhibitors are active. In order to create this behavior we choose ⊖ = ∨, ⊙ = ˄, ⊗ = ∨ resulting in<disp-formula><graphic xlink:href="1471-2105-11-233-i11.gif"/></disp-formula></p>
        <p>The assignment of Boolean operators can be changed during the import process into the Odefy toolbox. In addition to the possibility of inputing interaction graphs, we implemented an intuitive hypergraph-based representation of Boolean models in the <italic>sum of product </italic>form, which is capable of describing any Boolean update function [<xref ref-type="bibr" rid="B13">13</xref>] (Figure <xref ref-type="fig" rid="F3">3C</xref>).</p>
        <p>(iii) Odefy can be tightly integrated with the well-established CellNetAnalyzer (CNA) toolbox [<xref ref-type="bibr" rid="B6">6</xref>]. By a plugin-like menu interface the user can execute Odefy from within CNA and convert existing CNA models into systems of differential equations. Furthermore, parameter settings made in the CNA user interface are directly passed to Odefy and used for simulation and exporting.</p>
        <p>(iv) Finally, Boolean models can be directly imported from the GINsim XML format [<xref ref-type="bibr" rid="B14">14</xref>] and the Probabilistic Boolean Networks toolbox [<xref ref-type="bibr" rid="B15">15</xref>].</p>
        <p>The Odefy toolbox can efficiently handle large-scale models containing 50 players and more. One of the largest cellular Boolean model, a T-cell model with 94 nodes and a total of 123 regulatory interactions [<xref ref-type="bibr" rid="B19">19</xref>], can be transformed and simulated in less than one second on a standard workstation. Internally, Boolean models are stored as multidimensional arrays (i.e. hypercubes with edge length 2) for rapid element access and Boolean function evaluation. The time complexity of model generation lies in <inline-formula><inline-graphic xlink:href="1471-2105-11-233-i12.gif"/></inline-formula>(2<sup><italic>N</italic></sup>) with <italic>N </italic>being the highest degree of all nodes, yielding an exponential growth of computational runtime. The limiting size of Odefy models is thus not the number of nodes contained, but rather the highest number of incoming edges for any node in the model. For most regulated genes, however, we assume the number of modeled input regulatory factors to be equal to or less than 10, which can be handled on the order of one second per node by Odefy.</p>
        <p>To account for systems consisting of multiple cells or, more generally, compartments driven by identical regulatory networks, Odefy contains an automated multicompartment expansion procedure. Given a Boolean model and the assignment of an <italic>intercompartment </italic>flag for a given set of factors in the model, Odefy generates a larger model corresponding to a linear row of connected compartments. Factors flagged as intercompartmental exhibit their influence towards the two neighboring cells and are combined using an OR logic (see also: Mid-hindbrain example below).</p>
      </sec>
      <sec>
        <title>Simulation and analysis</title>
        <p>After model creation, the resulting ODE systems can be simulated directly by numerical integration algorithms or, alternatively, exported to various external model formats. Note that Boolean models as such are parameter-free, and the dynamical parameters for the ODEs have to be set externally. For convenience, Odefy employs a set of reasonable default values for all parameters in order to allow for a quick analysis of the system. Import, parameter adjustment, simulation and exporting can be accessed by the Odefy command line functionality as well as a graphical user interface (Figure <xref ref-type="fig" rid="F4">4</xref>). These Java Swing-based user dialogs provide a platform-independent look and feel. They use the MATLAB-internal Java engine and therefore do not require an external Java runtime environment. For advanced MATLAB users and users of the Octave environment, we provide functions for convenient parameter access, Boolean state analysis (steady states and state-transition graph) and phase plane visualization of dynamic simulations.</p>
        <fig id="F4" position="float">
          <label>Figure 4</label>
          <caption>
            <p><bold>Odefy graphical user interface</bold>. <bold>A </bold>Screenshot of the Odefy simulation dialog for convenient access to the dynamic model parameters, initial values, conversion types and plot options. All settings can be saved to or loaded from the current workspace. <bold>B </bold>Export dialog for all discrete and continuous Odefy export formats. <bold>C </bold>Exemplary time-course simulation of the cell cycle model from [<xref ref-type="bibr" rid="B5">5</xref>] with default parameters.</p>
          </caption>
          <graphic xlink:href="1471-2105-11-233-4"/>
        </fig>
      </sec>
      <sec>
        <title>Export</title>
        <p>Export formats for Odefy models include the MATLAB/Octave ODE script files, the Systems Biology (SB) Toolbox [<xref ref-type="bibr" rid="B16">16</xref>], the SBML format, script files for the R computing platform, the <italic>Genetic Network Analyzer </italic>(GNA) [<xref ref-type="bibr" rid="B17">17</xref>] and <italic>SQUAD </italic>[<xref ref-type="bibr" rid="B18">18</xref>]. SB Toolbox contains various advanced analysis functions for dynamical systems like parameter sensitivity and bifurcation analysis. The SBML format can be read by various systems biology software tools like COPASI [<xref ref-type="bibr" rid="B20">20</xref>] and CellDesigner [<xref ref-type="bibr" rid="B21">21</xref>] and thus provides a versatile interchange format. The GNA allows a structural analysis and qualitative simulations of systems of piece-wise linear ODEs. SQUAD analyzes discrete and continuous models using the standardized qualitative dynamical systems approach.</p>
      </sec>
      <sec>
        <title>Toolbox</title>
        <p>The Odefy toolbox is platform-independent due to the availability of MATLAB and Octave for all major operating systems and the direct integration of the Java Runtime Environment into MATLAB. It was verified to run smoothly on Windows, Linux KDE and GNOME as well as recent versions of Mac OS X. A detailed HTML documentation is included in the download package, which also provides a quick start guide to start working with the toolbox. Odefy is free for non-commerical and academic use. The toolbox including source codes can be downloaded at <ext-link ext-link-type="uri" xlink:href="http://cmb.helmholtz-muenchen.de/odefy">http://cmb.helmholtz-muenchen.de/odefy</ext-link>.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>Results and Discussion</title>
    <sec>
      <title>Mutual inhibitory switch</title>
      <p>In the following we demonstrate the use of Odefy for the analysis of a simple regulatory motif. The mutual inhibitory switch (Figure <xref ref-type="fig" rid="F5">5A</xref>) is a well-known circuit involved in developmental processes and stem cell differentiation, e.g. in the hematopoietic system [<xref ref-type="bibr" rid="B22">22</xref>]. Despite its simplicity the circuit displays remarkable dynamic characteristics leading to the fate decision between opposing differentiation lineages. Various theoretical studies have been published recently investigating different aspects and molecular assumptions for this motif [<xref ref-type="bibr" rid="B23">23</xref>-<xref ref-type="bibr" rid="B25">25</xref>]. We discuss two different ways of formulating the interactions in this network in terms of Boolean equations. Multiple regulatory inputs (in this case self-activation and cross-inhibition) can either be combined using an AND or an OR logic for both factors. Figure <xref ref-type="fig" rid="F5">5B</xref> shows the MATLAB code that analyzes the OR logics version of our mutual switch network. After creating the model structure we calculate and output the steady states of the Boolean model (Figure <xref ref-type="fig" rid="F5">5C</xref>).</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Mutual inhibitory switch</bold>. <bold>A </bold>Regulatory network known to take a prominent role in stem cell differentiation processes (see e.g. [<xref ref-type="bibr" rid="B22">22</xref>]). It consists of two mutual inhibitory factors (here with auto-activation). Intuitively, only one of the two factors can be fully active at any given time, leading to a switch-like behavior of this circuit. <bold>B </bold>This listing diplays the set of commands required to create and analyze the OR logics version of the mutual inhibitory switch. After initializing Odefy and generating the model structure (lines 1-2), we calculate and output Boolean steady states (lines 3-4) and finally convert the model into an ODE system to generate a picture of the attractor landscape (lines 5-6). <bold>C </bold>Boolean steady states of the OR and AND version of the mutual inhibitory switch model. <bold>D, E </bold>Phase planes visualizing the attractor landscapes of the OR (<bold>D</bold>) and AND (<bold>E</bold>) logics models. The figures display trajectories of both dynamical systems from various initial concentrations. Trajectories with the same color fall into the same stable steady state. Both systems comprise three stable continuous steady states, each of which belongs to one Boolean steady state.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-233-5"/>
      </fig>
      <p>We demonstrate the actual conversion into an ODE model and subsequent simulation within the Odefy toolbox. A two-dimensional phase plane projection of various initial values is drawn that displays the attractor landscape generated by the dynamical system (Figure <xref ref-type="fig" rid="F5">5D</xref>, the phase plane visualization for the corresponding AND logics model is shown in Figure <xref ref-type="fig" rid="F5">5E</xref>). Note that this analysis reveals continuous decision boundaries between different attractors not apparent in the discrete model alone. Furthermore, two unstable steady states emerge which mark the switching points from one attractor basin to the other. In stem cell research, the central state is considered to be a pre-differentiation <italic>priming </italic>state whereas the other two states correspond to the regulatory program leading to the commitment to a certain cell lineage [<xref ref-type="bibr" rid="B26">26</xref>]. With our continuous mathematical representations we gain insights into the putative switching dynamics of this important differentiation switch in stem cells. After fitting simulated trajectories to observed time series of expression data, we could now determine rate parameters and understand the detailed time dynamics of the system.</p>
    </sec>
    <sec>
      <title>Comparison with an existing ODE model</title>
      <p>We now employ the mutual inhibitory switch model discussed in the preceding section to address an important question for our novel modeling approach, namely whether the quantitative dynamics added to the discrete model are reasonable, or whether spurious, artifical effects are created by the method. In the study by Roeder et al. [<xref ref-type="bibr" rid="B23">23</xref>], a mechanistical model of the switch motif was proposed, which is based on actual biochemical reactions like promotor binding, transcription/translation and protein-protein interactions. The system was reduced to a two factor ODE by applying quasi-steady assumptions for the DNA and RNA species in the system. A comparison between simulation trajectories of the Odefy-converted model of the AND-gated switch and the Roeder model is displayed in Figure <xref ref-type="fig" rid="F6">6</xref>. Both systems have two non-zero stable steady states at similar positions, and the attractor basins for both states are virtually identical. Furthermore, both systems comprise a third, trivial steady state where both factors are zero. Interestingly, the parameter assignments we made for the simulation of the Odefy model, in order to achieve similarity between the model simulations, is qualitatively comparable with the parameter settings from the Roeder model. More precisely, the Roeder model employs a high <italic>unspecific transcription rate </italic>(we refer to the original publication for more details on the parameters), which effectively reduces the mutual inhibitory influences in relation to the autoregulatory activation of both factors. Accordingly, in our model we set the self-activation threshold to 0.01, which renders both factors strongly sensitive to their own expression levels. Taken together, we can reproduce important dynamical features of the reaction-based system by Roeder et al., inluding multistability, steady state positions, and the general shape of the attractor basins.</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Comparison with an existing modeling study</bold>. <bold>A </bold>Phase planes visualizing the attractor landscape of the Odefy-converted AND version of the mutual inhibitory switch from various initial conditions. We set the Hill parameter <italic>n </italic>to 2 in order to represent dimer binding of transription factors as proposed in the study by Roeder et al [<xref ref-type="bibr" rid="B23">23</xref>]. The self-activation threshold <italic>k</italic><sub><italic>s </italic></sub>was set to 0.01, resembling a highly sensitive self-activation in comparison to the mutual inhibition. <bold>B </bold>Simulation of the ODE system from [<xref ref-type="bibr" rid="B23">23</xref>] with a high <italic>unspecific transription rate</italic>. We show an exact reproduction of the phase plane displayed in Figure 2(h) from the original publication. Both dynamical systems are similar in terms of multistability, steady state positions and attractor basins, i.e. the initial values that fall into a certain steady state.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-233-6"/>
      </fig>
    </sec>
    <sec>
      <title>Mid-hindbrain boundary</title>
      <p>Our second example of dynamic modeling using Odefy concentrates on a multicellular biological system. During vertebrate development, the differentiation between mid- and hindbrain is determined by several transcription factors (e.g. Otx2, Gbx2) and secreted factors (e.g. Fgf8, Wnt1). These genes are stably expressed in a well-defined spatial pattern around the boundary between prospective mid- and hindbrain, the so-called mid-hindbrain boundary (Figure <xref ref-type="fig" rid="F7">7A</xref>). In a recent publication, we have applied both Boolean modeling and the HillCube conversion approach to this system [<xref ref-type="bibr" rid="B27">27</xref>]. In the following we will show how to use Odefy for automated model selection, that is the evaluation of an ensemble of regulatory networks with respect to stability of the known expression patterns. Figure <xref ref-type="fig" rid="F7">7B</xref> displays the MATLAB code required to fulfill this goal. First, we load a set of 9 regulatory networks known to give rise to the expression pattern along with 1000 random Boolean equations (not shown in the code) as a representative set of arbitrarily chosen regulatory networks. Then we iterate over all equation systems, generate a 6 cell multicompartment version of this model where the species representing the signaling molecules Fgf8 and Wnt1 are flagged as intercompartmental (Figure <xref ref-type="fig" rid="F7">7C</xref>). The multi-cell system is converted to an ODE system and simulated starting from the known stable expression state with default parameters <italic>n </italic>= 3, <italic>k </italic>= 0.5, <italic>τ </italic>= 1. If the activity of all players, in terms of exceeding the Hill threshold parameter, is still correct after a given amount of time steps, we consider the model to be valid. The results of this experiment show that indeed only 9 networks can give rise to the desired system behavior (Figure <xref ref-type="fig" rid="F7">7D</xref>). Analyzing these networks we see, in particular, that the maintenance of the boundary requires a mutual inhibition of Otx2 and Gbx2 and that these two transcription factors have antagonistic effects on Fgf8 and Wnt1 expression. Moreover, we find that Fgf8 and Wnt1 require each other for their stable maintenance. This agrees well with results from various loss-and gain-of-function experiments [<xref ref-type="bibr" rid="B28">28</xref>]. Note that while the small network in the former sections could still be handled manually, the model selection problem for the mid-hindbrain network demonstrates the absolute necessity for fully automated approaches as implemented in our toolbox. The system contains 6·4 = 24 differential equations with a total of up to 20 kinetic parameters for each compartment. Obviously, a model system of this size with parameter interdependencies due to multicompartmentality cannot reasonably be handled by manual mathematical modeling.</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>The Mid-hindbrain boundary</bold>. <bold>A </bold>Expression patterns of four major factors at the mid-hindbrain boundary. The relevant part of the neural tube is subdivided into 6 compartments, each displaying a unique expression pattern. The right table represents the known expression patterns in a Boolean framework (note that the secreted variants of Fgf8 and Wnt1 are not included here). <bold>B </bold>This code snippet demonstrates the use of Odefy for model selection. We load a precalculated set of random models along with the 9 known valid models and iterate over all model equations (lines 1-2, mhbsettings is contained in the examples folder of the Odefy package). Next, we generate Boolean models from each equation and extend the model to a six cell multicompartment model (lines 3-4). The Boolean model is converted into a system of ODEs and simulated starting from the known expression state (lines 5-7). Note that we simulate a sufficient amount of time units to ensure the systems has fallen into a steady state. If the final state after simulation is still correct in terms of activity we assume to model to be valid (lines 8-10). <bold>C </bold>Three replicated cells from our hypothetical six-cell system. Note that Wnt1 and Fgf8 are secreted factors and exhibit their influence towards neighboring cells. <bold>D </bold>The nine network variants that give rise to the desired steady state pattern. All models contain the mutual activation between Fgf8 and Wnt1 (between neighboring cells), a mutual inhibition between Otx2 and Gbx2 as well as some regulatory incluence of the transcription factors towards the secreted factors.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-233-7"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>Precise mechanistic details about regulatory interactions required for the quantitative modeling of biological systems are rare. However, more qualitative, phenomenological information like <italic>activation </italic>and <italic>inhibition </italic>is frequently available. With Odefy we created a simple yet useful toolbox to bridge the gap between qualitative and quantitative modeling of regulatory networks. A variety of such discrete models is already available and can immediately be converted into ODE systems by our tool.</p>
    <p>Quantitative modeling might reveal features not present in the original Boolean models. For instance, quantitative models allow for the estimation of system robustness with respect to parameter perturbations, even with ad-hoc parameter values. This provides insights into the general capability of the system to withstand external or intracellular fluctuations and has been demonstrated for various biological systems like Drosophila segmentation patterns [<xref ref-type="bibr" rid="B29">29</xref>] and the mid-hindbrain specification mentioned in this report. Furthermore, in [<xref ref-type="bibr" rid="B8">8</xref>] we determined parameter values by least-square fitting to experimental data in a T-cell signaling model. We could, amongst others, successfully predict relations between binding affinity constants of ligand-receptor interactions, which represent biochemical quantities not capturable in a Boolean framework.</p>
    <p>In this report we explained the concepts of automatic conversion from Boolean models to systems of ordinary differential equations. Two example cases were discussed stressing (a) the ease-of-use of the Odefy toolbox as well as (b) the requirement for automated conversion methods for more realistic biological systems like the Mid-hindbrain boundary network. We demonstrated that a discrete model converted to an ODE by Odefy displays similar dynamical properties as a mechanistically derived ODE model of the same system. Here we could show that, even though the identity of dynamical parameters between both modeling approaches is substantially different, qualitatively similar parameter changes show similar results.</p>
    <p>The integration of Odefy with other modeling applications through the import and export of models extends the scope of our toolbox. In particular, the SBML export functionality connects our toolbox to a broad variety of systems biology softwares supporting this common interchange format. With its novel modeling technique and its easy usability, Odefy will be a valuable tool for researchers aiming to understand the dynamics of gene regulation.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>• <bold>Project name</bold>: Odefy</p>
    <p>• <bold>Project home page</bold>: <ext-link ext-link-type="uri" xlink:href="http://cmb.helmholtz-muenchen.de/odefy">http://cmb.helmholtz-muenchen.de/odefy</ext-link></p>
    <p>• <bold>Operating system(s)</bold>: Platform independent</p>
    <p>• <bold>Programming language</bold>: MATLAB/Octave</p>
    <p>• <bold>Other requirements</bold>: MATLAB 7.1 or higher (no additional toolboxes required), Octave for non-GUI mode</p>
    <p>• <bold>License</bold>: Free for non-commercial purposes</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>DMW and FJT developed the automatic conversion technique and carried out the Mid-hindbrain study. JK and SP developed the Odefy application. JK and DMW wrote the initial manuscript. All authors revised and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>The authors would like to thank Steffen Klamt for valuable feedback during the development of the toolbox and the integration of Odefy into the CellNetAnalyzer package, and Florian Bloechl for stimulating discussions about the manuscript and the methodology. The authors thank the anonymous reviewers for valuable comments and suggestions. This research was partially supported by the Initiative and Networking Fund of the Helmholtz Association within the Helmholtz Alliance on Systems Biology (project CoReNe).</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Calzone</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Csikasz-Nagy</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Cross</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Novak</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Tyson</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Integrative analysis of cell cycle control in budding yeast</article-title>
        <source>Molecular Biology of the Cell</source>
        <year>2004</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>3841</fpage>
        <lpage>3862</lpage>
        <pub-id pub-id-type="doi">10.1091/mbc.E03-11-0794</pub-id>
        <pub-id pub-id-type="pmid">15169868</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Brazhnik</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Sobral</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Tyson</surname>
          <given-names>J</given-names>
        </name>
        <article-title>A quantitative study of the division cycle of Caulobacter crescentus stalked cells</article-title>
        <source>PLoS Comput Biol</source>
        <year>2008</year>
        <volume>11</volume>
        <fpage>e9</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0040009</pub-id>
        <pub-id pub-id-type="pmid">18225942</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Locke</surname>
          <given-names>JCW</given-names>
        </name>
        <name>
          <surname>Southern</surname>
          <given-names>MM</given-names>
        </name>
        <name>
          <surname>Kozma-Bognar</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Hibberd</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Brown</surname>
          <given-names>PE</given-names>
        </name>
        <name>
          <surname>Turner</surname>
          <given-names>MS</given-names>
        </name>
        <name>
          <surname>Millar</surname>
          <given-names>AJ</given-names>
        </name>
        <article-title>Extension of a genetic network model by iterative experimentation and mathematical analysis</article-title>
        <source>Mol Syst Biol</source>
        <year>2005</year>
        <volume>11</volume>
        <comment>2005.0013</comment>
        <pub-id pub-id-type="doi">10.1038/msb4100018</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Albert</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Othmer</surname>
          <given-names>HG</given-names>
        </name>
        <article-title>The topology of the regulatory interactions predicts the expression pattern of the segment polarity genes in Drosophila melanogaster</article-title>
        <source>J Theor Biol</source>
        <year>2003</year>
        <volume>11</volume>
        <fpage>1</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1016/S0022-5193(03)00035-3</pub-id>
        <pub-id pub-id-type="pmid">12782112</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Fauré</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Naldi</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Chaouiya</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Thieffry</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Dynamical analysis of a generic Boolean model for the control of the mammalian cell cycle</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>11</volume>
        <issue>14</issue>
        <fpage>e124</fpage>
        <lpage>e131</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl210</pub-id>
        <pub-id pub-id-type="pmid">16873462</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Klamt</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Saez-Rodriguez</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Gilles</surname>
          <given-names>ED</given-names>
        </name>
        <article-title>Structural and functional analysis of cellular networks with CellNetAnalyzer</article-title>
        <source>BMC Syst Biol</source>
        <year>2007</year>
        <volume>11</volume>
        <fpage>2</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-1-2</pub-id>
        <pub-id pub-id-type="pmid">17408509</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Samaga</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Saez-Rodriguez</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Alexopoulos</surname>
          <given-names>LG</given-names>
        </name>
        <name>
          <surname>Sorger</surname>
          <given-names>PK</given-names>
        </name>
        <name>
          <surname>Klamt</surname>
          <given-names>S</given-names>
        </name>
        <article-title>The logic of EGFR/ErbB signaling: theoretical properties and analysis of high-throughput data</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>e1000438</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000438</pub-id>
        <pub-id pub-id-type="pmid">19662154</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wittmann</surname>
          <given-names>DM</given-names>
        </name>
        <name>
          <surname>Krumsiek</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Saez-Rodriguez</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Lauffenburger</surname>
          <given-names>DA</given-names>
        </name>
        <name>
          <surname>Klamt</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Theis</surname>
          <given-names>FJ</given-names>
        </name>
        <article-title>Transforming Boolean models to continuous models: methodology and application to T-cell receptor signaling</article-title>
        <source>BMC Syst Biol</source>
        <year>2009</year>
        <volume>11</volume>
        <fpage>98</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-3-98</pub-id>
        <pub-id pub-id-type="pmid">19785753</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hill</surname>
          <given-names>A</given-names>
        </name>
        <article-title>The possible effects of the aggregation of the molecules of haemoglobin on its dissociation curves</article-title>
        <source>J Physiol</source>
        <year>1910</year>
        <volume>11</volume>
        <fpage>4</fpage>
        <lpage>7</lpage>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="book">
        <name>
          <surname>Alon</surname>
          <given-names>U</given-names>
        </name>
        <source>An Introduction to Systems Biology: Design Principles of Biological Circuits (Chapman &amp; Hall/Crc Mathematical and Computational Biology Series)</source>
        <year>2006</year>
        <publisher-name>Chapman &amp; Hall/CRC</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ruths</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Nakhleh</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Ram</surname>
          <given-names>PT</given-names>
        </name>
        <article-title>Rapidly exploring structural and dynamic properties of signaling networks using PathwayOracle</article-title>
        <source>BMC Syst Biol</source>
        <year>2008</year>
        <volume>11</volume>
        <fpage>76</fpage>
        <pub-id pub-id-type="doi">10.1186/1752-0509-2-76</pub-id>
        <pub-id pub-id-type="pmid">18713463</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <article-title>yED graph editor</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://www.yworks.com/products/yed/">http://www.yworks.com/products/yed/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Klamt</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Haus</surname>
          <given-names>UU</given-names>
        </name>
        <name>
          <surname>Theis</surname>
          <given-names>F</given-names>
        </name>
        <article-title>Hypergraphs and cellular networks</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>e1000385</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000385</pub-id>
        <pub-id pub-id-type="pmid">19478865</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gonzalez</surname>
          <given-names>AG</given-names>
        </name>
        <name>
          <surname>Naldi</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Sánchez</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Thieffry</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Chaouiya</surname>
          <given-names>C</given-names>
        </name>
        <article-title>GINsim: a software suite for the qualitative modelling, simulation and analysis of regulatory networks</article-title>
        <source>Biosystems</source>
        <year>2006</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>91</fpage>
        <lpage>100</lpage>
        <pub-id pub-id-type="doi">10.1016/j.biosystems.2005.10.003</pub-id>
        <pub-id pub-id-type="pmid">16434137</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <article-title>Probabilistic Boolean Networks toolbox</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://personal.systemsbiology.net/ilya/PBN/PBN.htm">http://personal.systemsbiology.net/ilya/PBN/PBN.htm</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Schmidt</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Jirstrand</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Systems Biology Toolbox for MATLAB: a computational platform for research in systems biology</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>11</volume>
        <issue>4</issue>
        <fpage>514</fpage>
        <lpage>515</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti799</pub-id>
        <pub-id pub-id-type="pmid">16317076</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>de Jong</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Geiselmann</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Hernandez</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Page</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Genetic Network Analyzer: qualitative simulation of genetic regulatory networks</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>11</volume>
        <issue>3</issue>
        <fpage>336</fpage>
        <lpage>344</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btf851</pub-id>
        <pub-id pub-id-type="pmid">12584118</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Di Cara</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Garg</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>De Micheli</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Xenarios</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Mendoza</surname>
          <given-names>L</given-names>
        </name>
        <article-title>Dynamic simulation of regulatory networks using SQUAD</article-title>
        <source>BMC Bioinformatics</source>
        <year>2007</year>
        <volume>11</volume>
        <fpage>462</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-8-462</pub-id>
        <pub-id pub-id-type="pmid">18039375</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Saez-Rodriguez</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Simeoni</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Lindquist</surname>
          <given-names>JA</given-names>
        </name>
        <name>
          <surname>Hemenway</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Bommhardt</surname>
          <given-names>U</given-names>
        </name>
        <name>
          <surname>Arndt</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Haus</surname>
          <given-names>UU</given-names>
        </name>
        <name>
          <surname>Weismantel</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Gilles</surname>
          <given-names>ED</given-names>
        </name>
        <name>
          <surname>Klamt</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Schraven</surname>
          <given-names>B</given-names>
        </name>
        <article-title>A Logical Model Provides Insights into T Cell Receptor Signaling</article-title>
        <source>PLoS Comput Biol</source>
        <year>2007</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>e163</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0030163</pub-id>
        <pub-id pub-id-type="pmid">17722974</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hoops</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Sahle</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Gauges</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Pahle</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Simus</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Singhal</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Xu</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Mendes</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Kummer</surname>
          <given-names>U</given-names>
        </name>
        <article-title>COPASI-a COmplex PAthway SImulator</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>11</volume>
        <issue>24</issue>
        <fpage>3067</fpage>
        <lpage>3074</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id>
        <pub-id pub-id-type="pmid">17032683</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Funahashi</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Matsuoka</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Jouraku</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Morohashi</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Kikuchi</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Kitano</surname>
          <given-names>H</given-names>
        </name>
        <article-title>CellDesigner 3.5: A Versatile Modeling Tool for Biochemical Networks</article-title>
        <source>Proceedings of the IEEE</source>
        <year>2008</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>1254</fpage>
        <lpage>1265</lpage>
        <pub-id pub-id-type="doi">10.1109/JPROC.2008.925458</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Cantor</surname>
          <given-names>AB</given-names>
        </name>
        <name>
          <surname>Orkin</surname>
          <given-names>SH</given-names>
        </name>
        <article-title>Hematopoietic development: a balancing act</article-title>
        <source>Curr Opin Genet Dev</source>
        <year>2001</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>513</fpage>
        <lpage>519</lpage>
        <pub-id pub-id-type="doi">10.1016/S0959-437X(00)00226-4</pub-id>
        <pub-id pub-id-type="pmid">11532392</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Roeder</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Glauche</surname>
          <given-names>I</given-names>
        </name>
        <article-title>Towards an understanding of lineage specification in hematopoietic stem cells: a mathematical model for the interaction of transcription factors GATA-1 and PU.1</article-title>
        <source>J Theor Biol</source>
        <year>2006</year>
        <volume>11</volume>
        <issue>4</issue>
        <fpage>852</fpage>
        <lpage>865</lpage>
        <pub-id pub-id-type="pmid">16510158</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Huang</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Guo</surname>
          <given-names>YP</given-names>
        </name>
        <name>
          <surname>May</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Enver</surname>
          <given-names>T</given-names>
        </name>
        <article-title>Bifurcation dynamics in lineage-commitment in bipotent progenitor cells</article-title>
        <source>Dev Biol</source>
        <year>2007</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>695</fpage>
        <lpage>713</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ydbio.2007.02.036</pub-id>
        <pub-id pub-id-type="pmid">17412320</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Chickarmane</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Enver</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Peterson</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Computational modeling of the hematopoietic erythroid-myeloid switch reveals insights into cooperativity, priming, and irreversibility</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>11</volume>
        <fpage>e1000268</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000268</pub-id>
        <pub-id pub-id-type="pmid">19165316</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Akashi</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>He</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Chen</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Iwasaki</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Niu</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Steenhard</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Haug</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>L</given-names>
        </name>
        <article-title>Transcriptional accessibility for genes of multiple tissues and hematopoietic lineages is hierarchically controlled during early hematopoiesis</article-title>
        <source>Blood</source>
        <year>2003</year>
        <volume>11</volume>
        <issue>2</issue>
        <fpage>383</fpage>
        <lpage>389</lpage>
        <pub-id pub-id-type="doi">10.1182/blood-2002-06-1780</pub-id>
        <pub-id pub-id-type="pmid">12393558</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wittmann</surname>
          <given-names>DM</given-names>
        </name>
        <name>
          <surname>Bölchl</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Trümbach</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Wurst</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Prakash</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Theis</surname>
          <given-names>FJ</given-names>
        </name>
        <article-title>Spatial Analysis of Expression Patterns Predicts Genetic Interactions at the Mid-Hindbrain Boundary</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>11</volume>
        <issue>11</issue>
        <fpage>e1000569</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000569</pub-id>
        <pub-id pub-id-type="pmid">19936059</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Prakash</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Wurst</surname>
          <given-names>W</given-names>
        </name>
        <article-title>Specification of midbrain territory</article-title>
        <source>Cell Tissue Res</source>
        <year>2004</year>
        <volume>11</volume>
        <fpage>5</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1007/s00441-004-0955-x</pub-id>
        <pub-id pub-id-type="pmid">15322917</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B29">
      <mixed-citation publication-type="journal">
        <name>
          <surname>von Dassow</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Meir</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Munro</surname>
          <given-names>EM</given-names>
        </name>
        <name>
          <surname>Odell</surname>
          <given-names>GM</given-names>
        </name>
        <article-title>The segment polarity network is a robust developmental module</article-title>
        <source>Nature</source>
        <year>2000</year>
        <volume>11</volume>
        <issue>6792</issue>
        <fpage>188</fpage>
        <lpage>192</lpage>
        <pub-id pub-id-type="doi">10.1038/35018085</pub-id>
        <pub-id pub-id-type="pmid">10910359</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

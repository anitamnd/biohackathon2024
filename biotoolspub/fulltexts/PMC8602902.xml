<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Immunol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Immunol</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Immunol.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Immunology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1664-3224</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8602902</article-id>
    <article-id pub-id-type="doi">10.3389/fimmu.2021.768541</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Immunology</subject>
        <subj-group>
          <subject>Technology and Code</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>FlowKit: A Python Toolkit for Integrated Manual and Automated Cytometry Analysis Workflows</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>White</surname>
          <given-names>Scott</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <xref rid="fn001" ref-type="author-notes">
          <sup>*</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/444514"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Quinn</surname>
          <given-names>John</given-names>
        </name>
        <xref rid="aff4" ref-type="aff">
          <sup>4</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1537888"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Enzor</surname>
          <given-names>Jennifer</given-names>
        </name>
        <xref rid="aff5" ref-type="aff">
          <sup>5</sup>
        </xref>
        <xref rid="aff6" ref-type="aff">
          <sup>6</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1534684"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Staats</surname>
          <given-names>Janet</given-names>
        </name>
        <xref rid="aff5" ref-type="aff">
          <sup>5</sup>
        </xref>
        <xref rid="aff6" ref-type="aff">
          <sup>6</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mosier</surname>
          <given-names>Sarah M.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff6" ref-type="aff">
          <sup>6</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Almarode</surname>
          <given-names>James</given-names>
        </name>
        <xref rid="aff4" ref-type="aff">
          <sup>4</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/1534686"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Denny</surname>
          <given-names>Thomas N.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff7" ref-type="aff">
          <sup>7</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/150008"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Weinhold</surname>
          <given-names>Kent J.</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff5" ref-type="aff">
          <sup>5</sup>
        </xref>
        <xref rid="aff6" ref-type="aff">
          <sup>6</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/34801/network"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ferrari</surname>
          <given-names>Guido</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <xref rid="aff6" ref-type="aff">
          <sup>6</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/230275/network"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chan</surname>
          <given-names>Cliburn</given-names>
        </name>
        <xref rid="aff1" ref-type="aff">
          <sup>1</sup>
        </xref>
        <xref rid="aff2" ref-type="aff">
          <sup>2</sup>
        </xref>
        <xref rid="aff3" ref-type="aff">
          <sup>3</sup>
        </xref>
        <uri xlink:href="https://loop.frontiersin.org/people/813861"/>
      </contrib>
    </contrib-group>
    <aff id="aff1"><sup>1</sup><institution>Duke Center for AIDS Research, Duke University</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <aff id="aff2"><sup>2</sup><institution>Department of Biostatistics and Bioinformatics, Duke University Medical Center</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <aff id="aff3"><sup>3</sup><institution>Center for Human Systems Immunology, Duke University Medical Center</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <aff id="aff4"><sup>4</sup><institution>BD Life Sciences - FlowJo</institution>, <addr-line>Ashland, OR</addr-line>, <country>United States</country></aff>
    <aff id="aff5"><sup>5</sup><institution>Duke Immune Profiling Core, Duke University School of Medicine</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <aff id="aff6"><sup>6</sup><institution>Department of Surgery, Duke University Medical Center</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <aff id="aff7"><sup>7</sup><institution>Duke Human Vaccine Institute</institution>, <addr-line>Durham, NC</addr-line>, <country>United States</country></aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p>Edited by: Juan J. Garcia-Vallejo, Amsterdam University Medical Center, Netherlands</p>
      </fn>
      <fn fn-type="edited-by">
        <p>Reviewed by: Thomas Myles Ashhurst, The University of Sydney, Australia; Gur Yaari, Bar-Ilan University, Israel</p>
      </fn>
      <corresp id="fn001">*Correspondence: Scott White, <email xlink:href="mailto:scott.white@duke.edu">scott.white@duke.edu</email>
</corresp>
      <fn fn-type="other" id="fn002">
        <p>This article was submitted to Systems Immunology, a section of the journal Frontiers in Immunology</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>05</day>
      <month>11</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>768541</elocation-id>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>8</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>19</day>
        <month>10</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â© 2021 White, Quinn, Enzor, Staats, Mosier, Almarode, Denny, Weinhold, Ferrari and Chan</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>White, Quinn, Enzor, Staats, Mosier, Almarode, Denny, Weinhold, Ferrari and Chan</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>An important challenge for primary or secondary analysis of cytometry data is how to facilitate productive collaboration between domain and quantitative experts. Domain experts in cytometry laboratories and core facilities increasingly recognize the need for automated workflows in the face of increasing data complexity, but by and large, still conduct all analysis using traditional applications, predominantly FlowJo. To a large extent, this cuts domain experts off from the rapidly growing library of Single Cell Data Science algorithms available, curtailing the potential contributions of these experts to the validation and interpretation of results. To address this challenge, we developed FlowKit, a Gating-ML 2.0-compliant Python package that can read and write FCS files and FlowJo workspaces. We present examples of the use of FlowKit for constructing reporting and analysis workflows, including round-tripping results to and from FlowJo for joint analysis by both domain and quantitative experts.</p>
    </abstract>
    <kwd-group>
      <kwd>systems immunology</kwd>
      <kwd>flow cytometry</kwd>
      <kwd>software</kwd>
      <kwd>python (programming language)</kwd>
      <kwd>single cell data science</kwd>
      <kwd>FlowJo</kwd>
      <kwd>GatingML</kwd>
    </kwd-group>
    <counts>
      <fig-count count="5"/>
      <table-count count="1"/>
      <equation-count count="0"/>
      <ref-count count="16"/>
      <page-count count="9"/>
      <word-count count="3661"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="s1">
    <title>Introduction</title>
    <p>Despite the phenomenal advances in Single Cell Data Science (SCDS) methodology and an ever-growing collection of algorithms and open-source packages, it is an open secret that the day-to-day analysis of cytometric data in flow laboratories and core facilities is still predominantly performed using traditional software, especially FlowJo. There are good reasons for this - traditional software such as FlowJo excels at the visual manipulation and analysis of data, and human analysis is inherently more adaptable than any fully automated workflow. For example, domain experts are typically better at removing debris, dead cells, and cell aggregates by gating than automated approaches. However, there are also severe limitations to a purely manual workflow for data analysis, especially the poor scalability to high-volume workflows and limitations of visual discovery for high-dimensional data sets.</p>
    <p>We developed FlowKit to bridge the gap between manual and automated workflows. Specifically, we wanted to develop a robust basis for foundational cytometry operations, provide a straightforward interface to SCDS algorithms, and facilitate the integration of manual and automated analysis. To ensure that foundational cytometry operations are supported, we checked for full compliance with Gating-ML 2.0 (<xref rid="B1" ref-type="bibr">1</xref>), hence ensuring that compensation, transformation, and gating operations were all implemented correctly. To interface with data science, machine learning and computer vision algorithms, we developed FlowKit so that analytic results and event data could be exported as a generic pandas DataFrame, a standard unit for analysis in Python scientific workflows and interoperable with the R, Spark, and SQL frameworks. To allow integrative manual and automated analysis, we worked with FlowJo developers to ensure that FlowKit could read <italic>and</italic> write FCS and FlowJo workspace files, allowing the round-tripping of data and analytic results to and from FlowJo.</p>
    <p>We chose Python as the implementation language for pragmatic reasons - Python is the dominant language for data science, machine learning and computer vision; the two main deep learning frameworks, TensorFlow and Torch, use Python as their <italic>de facto</italic> language; Python is now often taught as a first programming language in many quantitative disciplines; and Python has a robust ecosystem for scalable workflows and system integration. While R has a rich set of libraries for cytometric data analysis, we believe that FlowKit provides a complementary alternative with access to state-of-the-art data science and machine learning frameworks for Python developers and will be welcomed by the cytometry bioinformatics community. We anticipate and hope that the Python bioinformatics community will build advanced tools for quality control (QC), analysis, visualization, and even graphical user interfaces (GUI) on top of the foundational features provided by FlowKit.</p>
  </sec>
  <sec id="s2">
    <title>Methods</title>
    <sec id="s2_1">
      <title>Data Sets</title>
      <p>The data used in this manuscript were generated by the External Quality Assurance Program Oversight Laboratory (EQAPOL) Flow Cytometry Program. The program is designed to assess the proficiency of NIH/NIAID/DAIDS-supported and potentially other research laboratories interested in performing Intracellular Cytokine Staining (ICS) assays. A detailed account of the methods used to generate the data is provided in a previous publication (<xref rid="B2" ref-type="bibr">2</xref>).</p>
    </sec>
    <sec id="s2_2">
      <title>Organization of FlowKit</title>
      <p>The structure of FlowKit is simple, with only two building block classes: the <italic>Sample</italic> class for handling individual Flow Cytometry Standard (FCS) samples, and the GatingStrategy class for compensation, transformation, and gating operations. A third Session class is used for coordinating complex analytic workflows with multiple FCS samples and gating strategies. For standard analytic pipelines, these three classes suffice.</p>
      <p><bold>Sample</bold>. The Sample class represents a single sample and is typically created by reading in an FCS file acquired from either a flow or mass cytometer. It provides methods to retrieve the data and metadata, methods to sub-sample, filter, compensate, transform, and visualize sample events. Event data can be exported as a pandas DataFrame, with options to export the unprocessed, compensated, or transformed events. Compensation is designed as an optional step for compatibility with pre-compensated flow cytometry data sets or FCS files acquired <italic>via</italic> mass cytometry. Sample instances can also be created from a NumPy array or a pandas DataFrame, which can easily be exported to a new FCS file.</p>
      <p><bold>GatingStrategy</bold>. The GatingStrategy class represents a hierarchical gating strategy that includes instructions for compensation and transformation. Compensation matrices can be read in from multiple sources or created <italic>de novo</italic> from a set of compensation bead files. The <italic>GatingStrategy</italic> class supports the linear, log, channel ratio, inverse hyperbolic sine (asinh), hyperlog, logicle and FlowJo biexponential transformations, as well as Boolean, quadrant, rectangular, elliptical, and polygon gates. Instances of this class can be edited to programmatically customize hierarchical gating strategies.</p>
      <p><bold>Session</bold>. A Session represents a collection of gating strategies and FCS samples. FCS samples are added and assigned to sample groups, and each sample group has a single gating strategy template. The gates in a template can be customized per sample to accommodate variations cell sub-populations due to data acquisition. In practice, a <italic>Session</italic> instance is often populated from a FlowJo workspace file and its associated FCS files, though a FlowJo workspace is not required, and a Session can be completely constructed programmatically.</p>
    </sec>
    <sec id="s2_3">
      <title>Support for FCS Files</title>
      <p>FlowKit reads FCS 2.0, 3.0 and 3.1 files and writes FCS 3.1 files. Care has been taken to ensure that FlowKit can read common FCS files generated by diverse cytometers - typically contributed as bug reports from FlowKit users - including files that contain variable integer sizes and files that violate the standards specification with an off-by-one error. FlowKit also correctly interprets and applies both the gain and time step values from the FCS metadata.</p>
    </sec>
    <sec id="s2_4">
      <title>Display of Transformed Events</title>
      <p>FlowKit labels plot axes with the transformed values to be as transparent as possible regarding the display of processed data. While most flow cytometry analysts are familiar with scatter plots from FlowJo where the transformed data is presented with axes displaying the non-transformed event values, in a programmatic context this approach becomes problematic. Since FlowKit allows the retrieval of processed event data (compensated, transformed, and/or gated), an end user of FlowKit would receive exported data in the transformed space. If the user then went on to programmatically create a gate based on those events, the gate definition (e.g., coordinates of polygon vertices) would be in the transformed space. Displaying the transformed data values in FlowKit generated plots eliminates the need for end users to transpose gate boundary locations when using those plots as a guide for defining gates.</p>
    </sec>
    <sec id="s2_5">
      <title>Unit Tests and Coverage</title>
      <p>FlowKit currently has a suite of over 270 unit tests covering 91% of the code base. These tests include all the GatingML-2.0 compliance tests. To run these tests, issue the following commands in the top level of the FlowKit repository:</p>
      <p>
        <italic>python setup.py build_ext âinplace</italic>
      </p>
      <p>
        <italic>python run_tests.py</italic>
      </p>
    </sec>
    <sec id="s2_6">
      <title>Dependencies</title>
      <p>FlowKitâs dependencies are listed on the GitHub page, and include FlowIO and FlowUtils, also developed by our group. FlowIO is a pure Python package for reading and writing FCS files with no external dependencies, while <italic>FlowUtils</italic> handles low-level compensation and transformation tasks. <italic>FlowKit</italic> and <italic>FlowUtils</italic> use C extensions to improve performance.</p>
    </sec>
    <sec id="s2_7">
      <title>License and Installation</title>
      <p>FlowKit uses the open-source and permissive BSD 3-Clause License and is freely available from <uri xlink:href="https://github.com/whitews/FlowKit">https://github.com/whitews/FlowKit</uri>. It supports Python 3.6-3.9 and can be installed using <italic>pip install flowkit</italic>.</p>
    </sec>
    <sec id="s2_8">
      <title>Maintenance and Support</title>
      <p>The development effort for FlowKit is funded by the Duke Center for AIDS Research (CFAR), the Duke Center for Human Systems Immunology, and the External Quality Assurance Program Oversight Laboratory (EQAPOL). The core features for processing of FCS and workspace files are complete, and future releases will focus on improving and maintaining compatibility with FlowJo and any emerging FCM standards, as well as optimization and bug fixes. Inquiries or issues regarding the use of FlowKit can be submitted to the issues section of the GitHub website (<uri xlink:href="https://github.com/whitews/FlowKit/issues">https://github.com/whitews/FlowKit/issues</uri>).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="s3">
    <title>Results</title>
    <sec id="s3_1">
      <title>Features and Software Comparison</title>
      <p>While R has a rich set of libraries for cytometric data analysis <italic>via</italic> the Bioconductor ecosystem, the Python community lacks a counterpart with feature parity to the foundational flow cytometry libraries found in Bioconductor (specifically the flowCore (<xref rid="B3" ref-type="bibr">3</xref>) and flowWorkspace (<xref rid="B4" ref-type="bibr">4</xref>) packages). We developed FlowKit as an alternative to the R ecosystem (<xref rid="T1" ref-type="table"><bold>TableÂ 1</bold></xref>), to provide bioinformaticians using Python for cytometric analysis a reliable foundation to build upon. To that end, FlowKit is designed to facilitate accurate pre-processing of FCS data, including proper interpretation of event data using FCS metadata, adherence to gate definitions in the GatingML 2.0 specification, and convenient extraction of processed data for use in external libraries. Features available in FlowKit include:</p>
      <list list-type="simple">
        <list-item>
          <p>1. Read/Write FCS Files</p>
        </list-item>
        <list-item>
          <p>1.1. Read FCS files, supporting FCS versions 2.0, 3.0, and 3.1</p>
        </list-item>
        <list-item>
          <p>1.2. Proper application of cytometer channel gain and timestep information from FCS metadata</p>
        </list-item>
        <list-item>
          <p>1.3. Export FCS data as new FCS files, NumPy arrays, pandas DataFrame objects, and CSV files</p>
        </list-item>
        <list-item>
          <p>2. Compensation</p>
        </list-item>
        <list-item>
          <p>2.1. Compensate events using spillover matrices from various sources (FCS metadata or exported FlowJo compensation file)</p>
        </list-item>
        <list-item>
          <p>2.2. Create a compensation matrix from a set of compensation bead files</p>
        </list-item>
        <list-item>
          <p>3. Transformation</p>
        </list-item>
        <list-item>
          <p>3.1. Support for a variety of transformations used in the flow community, including logicle, inverse hyperbolic sine (asinh), and FlowJo-compatible bi-exponential transforms</p>
        </list-item>
        <list-item>
          <p>4. Gating</p>
        </list-item>
        <list-item>
          <p>4.1. Full support for the GatingML 2.0 specification</p>
        </list-item>
        <list-item>
          <p>4.2. Limited support for importing FlowJo 10 workspace files, including importing and exporting FlowJo 10 WSP files</p>
        </list-item>
        <list-item>
          <p>4.3. Programmatically create gating strategies including polygon, rectangle, range, ellipsoid, quadrant, and boolean gates</p>
        </list-item>
        <list-item>
          <p>4.4. Easily retrieve gating results from a gating strategy as a pandas DataFrame</p>
        </list-item>
        <list-item>
          <p>5. Visualization</p>
        </list-item>
        <list-item>
          <p>5.1. Histogram of single channel data</p>
        </list-item>
        <list-item>
          <p>5.2. Contour density plot and interactive scatter plot of two channels</p>
        </list-item>
        <list-item>
          <p>5.3. Interactive scatter plot matrix of any combination of channels</p>
        </list-item>
        <list-item>
          <p>5.4. Interactive scatter plots of gates with sample events</p>
        </list-item>
      </list>
      <table-wrap position="float" id="T1">
        <label>TableÂ 1</label>
        <caption>
          <p>Comparison of features between FlowKit and other FCM software libraries.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th valign="top" align="left" rowspan="1" colspan="1"/>
              <th valign="top" align="center" rowspan="1" colspan="1">FlowKit</th>
              <th valign="top" align="center" rowspan="1" colspan="1">flowCore (R)</th>
              <th valign="top" align="center" rowspan="1" colspan="1">Cytoflow</th>
              <th valign="top" align="center" rowspan="1" colspan="1">CytoPy</th>
              <th valign="top" align="center" rowspan="1" colspan="1">FlowCal</th>
              <th valign="top" align="center" rowspan="1" colspan="1">FlowCytometryTools</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Version</td>
              <td valign="top" align="left" rowspan="1" colspan="1">0.8.0</td>
              <td valign="top" align="left" rowspan="1" colspan="1">2.4.0</td>
              <td valign="top" align="left" rowspan="1" colspan="1">1.1.1</td>
              <td valign="top" align="left" rowspan="1" colspan="1">2.0.1</td>
              <td valign="top" align="left" rowspan="1" colspan="1">1.3.0</td>
              <td valign="top" align="left" rowspan="1" colspan="1">0.5.1</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">(release date)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(Oct 2021)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(Nov 2020)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(Mar 2021)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(May 20221)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(Jan 2021)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(Jan 2021)</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Programming Language</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Python</td>
              <td valign="top" align="left" rowspan="1" colspan="1">R</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Python</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Python</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Python</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Python</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">(latest version supported)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(3.9)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(4.1)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(3.7<sup>2</sup>)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(3.9)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(3.8)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">(2.7, 3<sup>5</sup>)</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Uses Continuous Integration</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Includes tests</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Reports test coverage</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">FCS file library</td>
              <td valign="top" align="left" rowspan="1" colspan="1">FlowIO</td>
              <td valign="top" align="left" rowspan="1" colspan="1">
                <italic>built-in</italic>
              </td>
              <td valign="top" align="left" rowspan="1" colspan="1">fcsparser<sup>3</sup>
</td>
              <td valign="top" align="left" rowspan="1" colspan="1">FlowIO</td>
              <td valign="top" align="left" rowspan="1" colspan="1">
                <italic>built-in</italic>
              </td>
              <td valign="top" align="left" rowspan="1" colspan="1">fcsparser</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports channel gain ($PnG)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes, but not by default</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes, but not by default</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports $TIMESTEP</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports logicle</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes<break/>(via FlowUtils)</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes<sup>4</sup>
</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports FlowJo bi-exponential</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports hierarchical gating</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes<sup>1</sup>
</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No<sup>6</sup>
</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports GatingML 2.0</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
            <tr>
              <td valign="top" align="left" rowspan="1" colspan="1">Supports FlowJo 10 workspaces</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes</td>
              <td valign="top" align="left" rowspan="1" colspan="1">Yes<sup>1</sup>
</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
              <td valign="top" align="left" rowspan="1" colspan="1">No</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn>
            <p>1. flowCore does not include hierarchical gating or FlowJo WSP support directly, this functionality is in the related flowWorkspace library.</p>
          </fn>
          <fn>
            <p>2. Cytoflow is installable through Anaconda.</p>
          </fn>
          <fn>
            <p>3. Cytoflow uses an internal fork of fcsparser.</p>
          </fn>
          <fn>
            <p>4. The FlowCal logicle function is implemented in Python as opposed to C for the other libraries in this list.</p>
          </fn>
          <fn>
            <p>5. It is unclear which Python versions are supported, PyPI states 2.7, the README file states âpython 3â.</p>
          </fn>
          <fn>
            <p>6. FlowCytometryTools supports a CompositeGate class to combine gates but does not have an API to explicitly create gate hierarchies.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec id="s3_2">
      <title>Use Cases</title>
      <p>We illustrate the application of FlowKit with four common use cases. While FlowKit can be used independently of FlowJo, we present use cases where a Session is initiated with a FlowJo workspace file and its associated FCS files to illustrate integrative manual and automated analysis. All examples including those that do not use FlowJo workspace files can be found in the GitHub repository in the examples folder. All examples and use cases are provided as Jupyter notebooks:</p>
      <list list-type="bullet">
        <list-item>
          <p><xref rid="f1" ref-type="fig"><bold>FiguresÂ 1</bold></xref>, <xref rid="f5" ref-type="fig"><bold>5</bold></xref> are from examples/flowkit-session-replicate-flowjo-wsp.ipynb</p>
        </list-item>
        <list-item>
          <p><xref rid="f2" ref-type="fig"><bold>FiguresÂ 2</bold></xref>, <xref rid="f3" ref-type="fig"><bold>3</bold></xref> are from examples/dimension_reduction_on_gated_populations.ipynb</p>
        </list-item>
        <list-item>
          <p><xref rid="f4" ref-type="fig"><bold>FigureÂ 4</bold></xref> is from examples/clustering_comparison_leiden_vs_louvain.ipynb</p>
        </list-item>
      </list>
      <fig position="float" id="f1">
        <label>FigureÂ 1</label>
        <caption>
          <p>Basic elements provided by FlowKit for generating reports and downstream analysis. Clockwise from top left â metadata as key:value pairs, gating hierarchy as ASCII text, scatter plot of a gate, DataFrame of results from applying gating strategy specified in the Session class.</p>
        </caption>
        <graphic xlink:href="fimmu-12-768541-g001" position="float"/>
      </fig>
      <fig position="float" id="f2">
        <label>FigureÂ 2</label>
        <caption>
          <p>Comparison of marker distributions across CD4+ and CD8+ T cells.</p>
        </caption>
        <graphic xlink:href="fimmu-12-768541-g002" position="float"/>
      </fig>
      <fig position="float" id="f3">
        <label>FigureÂ 3</label>
        <caption>
          <p>Comparison of dimension reduction algorithms on the Singlets (left) and CD3+ (right) gated events. Events are pseudo-colored by the CD4 marker intensity.</p>
        </caption>
        <graphic xlink:href="fimmu-12-768541-g003" position="float"/>
      </fig>
      <fig position="float" id="f4">
        <label>FigureÂ 4</label>
        <caption>
          <p><bold>(A)</bold> Comparison of the Leiden and Louvain community detection algorithms for clustering flow cytometry data. Labels in boxes are the assigned cluster indexes. Events plotted using PaCMAP for dimension reduction and colored according to the event cluster label. <bold>(B)</bold> Visualization of marker distribution for each cluster found using the Leiden algorithm shown in the top panel. Distributions are for values scaled to have zero mean and unit standard deviation; values to the left (right) of the thin vertical indicate mean marker values for that cluster that are below (above) the average for all cells.</p>
        </caption>
        <graphic xlink:href="fimmu-12-768541-g004" position="float"/>
      </fig>
      <fig position="float" id="f5">
        <label>FigureÂ 5</label>
        <caption>
          <p>Screenshot taken from FlowJo, showing an imported workspace that is entirely programmatically constructed.</p>
        </caption>
        <graphic xlink:href="fimmu-12-768541-g005" position="float"/>
      </fig>
      <sec id="s3_2_1">
        <title>Generating a Report From a FlowJo Workspace</title>
        <p>One of the most basic tasks is to generate a report about a sample group that has been analyzed in FlowJo. While FlowJo can obviously export gated results, doing so <italic>via</italic> code is more flexible and powerful. For example, it is simple to <italic>join</italic> the gated data with results from a separate complete blood count (CBC) assay to calculate the absolute cell counts (cells per unit volume of blood) for each gated subset. <xref rid="f1" ref-type="fig"><bold>FigureÂ 1</bold></xref> shows some of the basic elements directly provided by FlowKit to generate such reports, including metadata key:value pairs, the gating strategy, several options to visualize individual gates, and a table of gating results.</p>
        <p>Since FlowKit also provides access to the compensated, transformed, and gated events, more advanced reports can provide informative summaries of the event data in each gate. A simple example is shown in <xref rid="f2" ref-type="fig"><bold>FigureÂ 2</bold></xref>, where ridgeline plots of each marker distribution are constructed to compare events from the CD4+ and CD8+ gates.</p>
      </sec>
      <sec id="s3_2_2">
        <title>Creating SCDS/Machine Learning Workflows</title>
        <p>Of course, having programmatic access to the gated events makes it simple to develop automated analysis workflows that begin with events from a specific gate using other tools or libraries outside of FlowKit. This provides the opportunity to integrate manual analysis to generate filtered basic cell subsets (i.e., remove debris, aggregates, dead cells, and gate well-known cell subsets such as T and B lymphocytes) with automated analysis to explore these subsets in depth. We illustrate the ease of extending FlowKit with the common SCDS operations of dimension reduction, clustering based on community detection algorithms, and pseudo-coloring by arbitrary functions of the markers.</p>
        <p>In <xref rid="f3" ref-type="fig"><bold>FigureÂ 3</bold></xref>, we show the application of three different dimension reduction methods on events from two different gates (âSingletsâ and âCD3+â) to the 3 samples in the sample group. The three dimension reduction methods are FFT-accelerated Interpolation-based t-SNE (FIt-SNE) (<xref rid="B5" ref-type="bibr">5</xref>), Uniform Manifold Approximation and Projection (UMAP) (<xref rid="B6" ref-type="bibr">6</xref>), and Pairwise Controlled Manifold Approximation (PaCMAP) (<xref rid="B7" ref-type="bibr">7</xref>). Note that the PaCMAP algorithm is not available within FlowJo, showing that FlowKit makes it easy to apply and evaluate cutting-edge SCDS algorithms.</p>
        <p>In <xref rid="f4" ref-type="fig"><bold>FigureÂ 4A</bold></xref>, we evaluate two clustering methods, the Leiden (<xref rid="B8" ref-type="bibr">8</xref>) and Louvain (<xref rid="B9" ref-type="bibr">9</xref>) algorithms, that identify <italic>modular</italic> communities in graph-based representations of the event data. These algorithms are popular in the scRNA-seq community as they are fast and generate biologically plausible cluster labels, and appear to generate reasonable cluster structures in our example.</p>
        <p>In <xref rid="f4" ref-type="fig"><bold>FigureÂ 4B</bold></xref>, we explore the marker distributions of the clusters generated by the Leiden algorithm (top panel in <xref rid="f4" ref-type="fig"><bold>FigureÂ 4A</bold></xref>). Such visualizations can be used to aid the interpretation of individual clusters as distinct cell types by domain experts. As explained in the next section, the cluster labels can be added to an augmented FCS file, and automatically derived gates around each cluster added to the gating strategy for thorough review by a domain expert in FlowJo.</p>
      </sec>
      <sec id="s3_2_3">
        <title>Generating Output for FlowJo (âRound-Trippingâ)</title>
        <p>In this last example, we load a FlowJo workspace and then programmatically reconstruct the workspace from the ground up in a FlowKit session. During the reconstruction, we programmatically add a sample group, compensation matrix, transforms and multiple types of gates. Finally, we export the reconstructed workspace as a FlowJo WSP file and read it in using FlowJo. <xref rid="f5" ref-type="fig"><bold>FigureÂ 5</bold></xref> shows the reconstructed workspace as viewed in FlowJo. In practice, this will allow information from automated analysis (e.g., addition of additional feature columns such as dimension-reduced coordinates or illustrating a discovered cell cluster with ellipsoidal gates constructed from the cluster covariance) to be reviewed in a familiar setting by domain experts. Here we pseudo-colored events in the dimension-reduced plots by the fluorescence intensity of the CD4 marker, but it would be trivial to use any other function for coloring (e.g., CD4:CD8 ratio).</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s4">
    <title>Discussion</title>
    <p>We present FlowKit to the cytometry bioinformatics community as a software construction kit that is capable of large-scale secondary analysis of data in repositories such as ImmPort (<xref rid="B10" ref-type="bibr">10</xref>, <xref rid="B11" ref-type="bibr">11</xref>). FlowKit is most similar in functionality to the R package flowCore (with flowWorkspace), especially in the support for the full range of common transformations, hierarchical gating, GatingML 2.0, and FlowJo workspaces. One feature available in FlowKit but not flowCore is the ability to export programmatically constructed or modified gating hierarchies to FlowJo WSP files. There are four other Python packages that have functional overlap with FlowKit and show evidence of recent development activity, namely Cytoflow (<xref rid="B12" ref-type="bibr">12</xref>), CytoPy (<xref rid="B13" ref-type="bibr">13</xref>), FlowCal (<xref rid="B14" ref-type="bibr">14</xref>), and FlowCytometryTools (<xref rid="B15" ref-type="bibr">15</xref>), but none of them have feature parity with flowCore. We also note that one of the major Python packages, CytoPy, builds on top of our low-level packages FlowIO and FlowUtils. In short, FlowKit is unique among Python FCM packages in providing a feature-complete programmatic interface to FCM data and FlowJo workspaces, allowing the FCM community to leverage the vast Python statistics, data science and machine learning ecosystem for automated analysis or the creation of new software tools. In this manuscript and in notebooks available in the FlowKit GitHub repository, we provide examples of creating workflows that integrate manual and automated analysis and can take advantage of the latest SCDS algorithms being [s1] developed.</p>
    <p>FlowJo support is limited to FlowJo 10 WSP workspace files. For use with FlowKit, FlowJo generated JO files need to be imported into a recent version of FlowJo (&gt;10.8) and exported as WSP files. In principle, it is possible to use GatingML-2.0 files to specify gating strategies, and FlowKit supports the import and export of GatingML-2.0-compliant files, opening a route to FlowKit by non-FlowJo users. In practice, we are not aware of any laboratory or software that routinely generates and uses GatingML-2.0 files, probably because of the inconvenience of working at an individual sample level. The current version of FlowKit also does not support importing and exporting WSP files with custom modifications to individual samples within a sample group; this is due to a potentially ambiguous interpretation of such strategies when gates with the same name at different levels are used. We are working with FlowJo developers to remedy this and expect this functionality to be implemented soon.</p>
    <p>We emphasize that FlowKit is a toolkit that is meant to be built upon; it is most similar in purpose to the combination of the flowCore (<xref rid="B3" ref-type="bibr">3</xref>) and flowWorkspace (<xref rid="B4" ref-type="bibr">4</xref>) packages in R/Bioconductor. One design difference from flowCore is that we favor the ubiquitous DataFrame over more specialized formats to facilitate interoperability with other data science libraries in Python. For example, the pandas DataFrame is compatible with analysis using TensorFlow or Spark, facilitating the use of accelerated and distributed processing of cytometry data. Where necessary, it is simple to wrap the DataFrame in a richer data structure, for example, AnnData for compatibility with scanpy (<xref rid="B16" ref-type="bibr">16</xref>). Inspired by the ecosystem that has grown around flowCore and flowWorkspace, we hope that the Python bioinformatics community too will build an ecosystem of cytometry quality control, alignment, visualization, and analysis packages on it.</p>
  </sec>
  <sec sec-type="data-availability" id="s5">
    <title>Data Availability Statement</title>
    <p>Publicly available datasets were analyzed in this study. This data can be found here: <uri xlink:href="https://github.com/whitews/FlowKit/tree/0.8.1/examples">https://github.com/whitews/FlowKit/tree/0.8.1/examples</uri>.</p>
  </sec>
  <sec sec-type="author-contributions" id="s6">
    <title>Author Contributions</title>
    <p>CC directed the project. SW is the software developer of the FlowKit library. JQ and JA provided assistance and information to implement compatibility with the FlowJo application. JS, JE, and SM provided domain expertise on manual flow cytometry analysis. GF, KW, and TD provided immunological domain expertise. SW and CC contributed equally to the writing of the manuscript with consultation from all the authors. All authors contributed to the article and approved the submitted version.</p>
  </sec>
  <sec sec-type="funding-information" id="s7">
    <title>Funding</title>
    <p>This research is supported in part through an EQAPOL collaboration with federal funds from the National Institute of Allergy and Infectious Diseases, National Institutes of Health, Contract Number HHSN272201700061C, and by the Duke University Center for AIDS Research (CFAR), a National Institutes of Health (NIH) funded program (5P30 AI064518).</p>
  </sec>
  <sec sec-type="COI-statement" id="s8">
    <title>Conflict of Interest</title>
    <p>Authors JQ and JA were employed by BD Biosciences - FlowJo.</p>
    <p>The remaining authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s9">
    <title>Publisherâs Note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>We would also like to acknowledge Cassie Porth for her assistance as program manager for the EQAPOL program. Special acknowledgement goes to Josef Spidlen, the author of the GatingML 2.0 specification and its included set of validation data, both of which were instrumental in the development of FlowKit.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Spidlen</surname><given-names>J</given-names></name><name><surname>Moore</surname><given-names>W</given-names></name><name><surname>Force</surname><given-names>IDST</given-names></name><name><surname>Brinkman</surname><given-names>RR</given-names></name></person-group>. <article-title>Isacâs Gating-ML 2.0 Data Exchange Standard for Gating Description</article-title>. <source>Cytometry A</source> (<year>2015</year>) <volume>87</volume>(<issue>7</issue>):<page-range>683â7</page-range>. doi: <pub-id pub-id-type="doi">10.1002/cyto.a.22690</pub-id>
</mixed-citation>
    </ref>
    <ref id="B2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Staats</surname><given-names>JS</given-names></name><name><surname>Enzor</surname><given-names>JH</given-names></name><name><surname>Sanchez</surname><given-names>AM</given-names></name><name><surname>Rountree</surname><given-names>W</given-names></name><name><surname>Chan</surname><given-names>C</given-names></name><name><surname>Jaimes</surname><given-names>M</given-names></name><name><surname>Chan</surname><given-names>RC</given-names></name><etal/></person-group>. <article-title>Toward Development of a Comprehensive External Quality Assurance Program for Polyfunctional Intracellular Cytokine Staining Assays</article-title>. <source>J Immunol Methods</source> (<year>2014</year>) <volume>409</volume>:<fpage>44</fpage>â<lpage>53</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.jim.2014.05.021</pub-id>
<pub-id pub-id-type="pmid">24968072</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hahne</surname><given-names>F</given-names></name><name><surname>LeMeur</surname><given-names>N</given-names></name><name><surname>Brinkman</surname><given-names>RR</given-names></name><name><surname>Ellis</surname><given-names>B</given-names></name><name><surname>Haaland</surname><given-names>P</given-names></name><name><surname>Sarkar</surname><given-names>D</given-names></name><etal/></person-group>. <article-title>Flowcore: A Bioconductor Package for High Throughput Flow Cytometry</article-title>. <source>BMC Bioinf</source> (<year>2009</year>) <volume>10</volume>:<fpage>106</fpage>. doi: <pub-id pub-id-type="doi">10.1186/1471-2105-10-106</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <label>4</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Finak</surname><given-names>G</given-names></name><name><surname>Jiang</surname><given-names>M</given-names></name></person-group>. <article-title>Flowworkspace: Infrastructure for Representing and Interacting With Gated and Ungated Cytometry Data Sets</article-title>. In: <source>R Package Version 4.4.0</source> (<year>2021</year>). doi: <pub-id pub-id-type="doi">10.18129/B9.bioc.flowWorkspace</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Linderman</surname><given-names>GC</given-names></name><name><surname>Rachh</surname><given-names>M</given-names></name><name><surname>Hoskins</surname><given-names>JG</given-names></name><name><surname>Steinerberger</surname><given-names>S</given-names></name><name><surname>Kluger</surname><given-names>Y</given-names></name></person-group>. <article-title>Fast Interpolation-Based T-SNE for Improved Visualization of Single-Cell RNA-Seq Data</article-title>. <source>Nat Methods</source> (<year>2019</year>) <volume>16</volume>(<issue>3</issue>):<page-range>243â5</page-range>. doi: <pub-id pub-id-type="doi">10.1038/s41592-018-0308-4</pub-id>
</mixed-citation>
    </ref>
    <ref id="B6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Becht</surname><given-names>E</given-names></name><name><surname>McInnes</surname><given-names>L</given-names></name><name><surname>Healy</surname><given-names>J</given-names></name><name><surname>Dutertre</surname><given-names>CA</given-names></name><name><surname>Kwok</surname><given-names>I</given-names></name><name><surname>Ng</surname><given-names>LG</given-names></name><etal/></person-group>. <article-title>Dimensionality Reduction for Visualizing Single-Cell Data Using UMAP</article-title>. <source>Nat Biotechnol</source> (<year>2018</year>) <volume>37</volume>:<fpage>38</fpage>â<lpage>44</lpage>. doi: <pub-id pub-id-type="doi">10.1038/nbt.4314</pub-id>
</mixed-citation>
    </ref>
    <ref id="B7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Y</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Rudin</surname><given-names>C</given-names></name><name><surname>Shaposhnik</surname><given-names>Y</given-names></name></person-group>. <article-title>Understanding How Dimension Reduction Tools Work: An Empirical Approach to Deciphering T-SNE, UMAP, TriMAP, and PaCMAP for Data Visualization</article-title>. <source>ArXiv Preprint ArXiv:201204456</source> (<year>2020</year>) <volume>22</volume>:<fpage>1</fpage>â<lpage>73</lpage>.</mixed-citation>
    </ref>
    <ref id="B8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Traag</surname><given-names>VA</given-names></name><name><surname>Waltman</surname><given-names>L</given-names></name><name><surname>Van Eck</surname><given-names>NJ</given-names></name></person-group>. <article-title>From Louvain to Leiden: Guaranteeing Well-Connected Communities</article-title>. <source>Sci Rep</source> (<year>2019</year>) <volume>9</volume>(<issue>1</issue>):<fpage>1</fpage>â<lpage>12</lpage>. doi: <pub-id pub-id-type="doi">10.1038/s41598-019-41695-z</pub-id>
<pub-id pub-id-type="pmid">30626917</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <label>9</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Blondel</surname><given-names>VD</given-names></name><name><surname>Guillaume</surname><given-names>J-L</given-names></name><name><surname>Lambiotte</surname><given-names>R</given-names></name><name><surname>Lefebvre</surname><given-names>E</given-names></name></person-group>. <article-title>Fast Unfolding of Communities in Large Networks</article-title>. <source>J Stat Mech: Theory Experiment</source> (<year>2008</year>) <volume>2008</volume>(<issue>10</issue>):<fpage>P10008</fpage>. doi: <pub-id pub-id-type="doi">10.1088/1742-5468/2008/10/P10008</pub-id>
</mixed-citation>
    </ref>
    <ref id="B10">
      <label>10</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bhattacharya</surname><given-names>S</given-names></name><name><surname>Dunn</surname><given-names>P</given-names></name><name><surname>Thomas</surname><given-names>CG</given-names></name><name><surname>Smith</surname><given-names>B</given-names></name><name><surname>Schaefer</surname><given-names>H</given-names></name><name><surname>Chen</surname><given-names>J</given-names></name><etal/></person-group>. <article-title>ImmPort, Toward Repurposing of Open Access Immunological Assay Data for Translational and Clinical Research</article-title>. <source>Sci Data</source> (<year>2018</year>) <volume>5</volume>:<fpage>180015</fpage>. doi: <pub-id pub-id-type="doi">10.1038/sdata.2018.15</pub-id>
<pub-id pub-id-type="pmid">29485622</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <label>11</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bhattacharya</surname><given-names>S</given-names></name><name><surname>Andorf</surname><given-names>S</given-names></name><name><surname>Gomes</surname><given-names>L</given-names></name><name><surname>Dunn</surname><given-names>P</given-names></name><name><surname>Schaefer</surname><given-names>H</given-names></name><name><surname>Pontius</surname><given-names>J</given-names></name><etal/></person-group>. <article-title>ImmPort: Disseminating Data to the Public for the Future of Immunology</article-title>. <source>Immunol Res</source> (<year>2014</year>) <volume>58</volume>(<issue>2â3</issue>):<page-range>234â9</page-range>. doi: <pub-id pub-id-type="doi">10.1007/s12026-014-8516-1</pub-id>
</mixed-citation>
    </ref>
    <ref id="B12">
      <label>12</label>
      <mixed-citation publication-type="webpage">. Available at: <uri xlink:href="https://github.com/cytoflow/cytoflow">https://github.com/cytoflow/cytoflow</uri>.</mixed-citation>
    </ref>
    <ref id="B13">
      <label>13</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burton</surname><given-names>RJ</given-names></name><name><surname>Ahmed</surname><given-names>R</given-names></name><name><surname>Cuff</surname><given-names>SM</given-names></name><name><surname>Baker</surname><given-names>S</given-names></name><name><surname>Artemiou</surname><given-names>A</given-names></name><name><surname>Eberl</surname><given-names>M</given-names></name></person-group>. <article-title>CytoPy: An Autonomous Cytometry Analysis Framework</article-title>. <source>PloS Comput Biol</source> (<year>2021</year>) <volume>17</volume>(<issue>6</issue>):<fpage>e1009071</fpage>. doi: <pub-id pub-id-type="doi">10.1371/journal.pcbi.1009071</pub-id>
<pub-id pub-id-type="pmid">34101722</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <label>14</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Castillo-Hair</surname><given-names>SM</given-names></name><name><surname>Sexton</surname><given-names>JT</given-names></name><name><surname>Landry</surname><given-names>BP</given-names></name><name><surname>Olson</surname><given-names>EJ</given-names></name><name><surname>Igoshin</surname><given-names>OA</given-names></name><name><surname>Tabor</surname><given-names>JJ</given-names></name></person-group>. <article-title>FlowCal: A User-Friendly, Open Source Software Tool for Automatically Converting Flow Cytometry Data From Arbitrary to Calibrated Units</article-title>. <source>ACS Synth Biol</source> (<year>2016</year>) <volume>5</volume>(<issue>7</issue>):<page-range>774â80</page-range>. doi: <pub-id pub-id-type="doi">10.1021/acssynbio.5b00284</pub-id>
</mixed-citation>
    </ref>
    <ref id="B15">
      <label>15</label>
      <mixed-citation publication-type="webpage"><person-group person-group-type="author"><name><surname>Yurtsev</surname><given-names>E</given-names></name><name><surname>Friedman</surname><given-names>J</given-names></name><name><surname>Gore</surname><given-names>J</given-names></name></person-group>. <source>FlowCytometryTools: Version 0.4.5 (V0.4.5). Zenodo</source> (<year>2015</year>). doi: <pub-id pub-id-type="doi">10.5281/zenodo.32991</pub-id>
</mixed-citation>
    </ref>
    <ref id="B16">
      <label>16</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wolf</surname><given-names>FA</given-names></name><name><surname>Angerer</surname><given-names>P</given-names></name><name><surname>Theis</surname><given-names>FJ</given-names></name></person-group>. <article-title>SCANPY: Large-Scale Single-Cell Gene Expression Data Analysis</article-title>. <source>Genome Biol</source> (<year>2018</year>) <volume>19</volume>(<issue>1</issue>):<fpage>15</fpage>. doi: <pub-id pub-id-type="doi">10.1186/s13059-017-1382-0</pub-id>
<pub-id pub-id-type="pmid">29409532</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

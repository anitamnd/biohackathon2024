<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Res</journal-id>
    <journal-id journal-id-type="hwp">genome</journal-id>
    <journal-id journal-id-type="pmc">genome</journal-id>
    <journal-id journal-id-type="publisher-id">GENOME</journal-id>
    <journal-title-group>
      <journal-title>Genome Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1088-9051</issn>
    <issn pub-type="epub">1549-5469</issn>
    <publisher>
      <publisher-name>Cold Spring Harbor Laboratory Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5411771</article-id>
    <article-id pub-id-type="medline">9509184</article-id>
    <article-id pub-id-type="doi">10.1101/gr.214346.116</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ABySS 2.0: resource-efficient assembly of large genomes using a Bloom filter</article-title>
      <alt-title alt-title-type="left-running">Jackman et al.</alt-title>
      <alt-title alt-title-type="right-running">ABySS 2.0</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Jackman</surname>
          <given-names>Shaun D.</given-names>
        </name>
        <xref ref-type="author-notes" rid="FN1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vandervalk</surname>
          <given-names>Benjamin P.</given-names>
        </name>
        <xref ref-type="author-notes" rid="FN1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mohamadi</surname>
          <given-names>Hamid</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chu</surname>
          <given-names>Justin</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yeo</surname>
          <given-names>Sarah</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hammond</surname>
          <given-names>S. Austin</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jahesh</surname>
          <given-names>Golnaz</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Khan</surname>
          <given-names>Hamza</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Coombe</surname>
          <given-names>Lauren</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Warren</surname>
          <given-names>Rene L.</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Birol</surname>
          <given-names>Inanc</given-names>
        </name>
      </contrib>
    </contrib-group>
    <aff>Canada's Michael Smith Genome Sciences Centre, British Columbia Cancer Agency, Vancouver, British Columbia, V5Z 4S6, Canada</aff>
    <author-notes>
      <fn fn-type="equal" id="FN1">
        <label>1</label>
        <p>These authors are joint first authors and are listed in alphabetical order.</p>
      </fn>
      <corresp>Corresponding author: <email>ibirol@bcgsc.ca</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>5</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <month>5</month>
      <year>2017</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="ppub"/>. -->
    <volume>27</volume>
    <issue>5</issue>
    <fpage>768</fpage>
    <lpage>777</lpage>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>8</month>
        <year>2016</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>2</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/site/misc/terms.xhtml">© 2017 Jackman et al.; Published by Cold Spring Harbor Laboratory Press</ext-link>
      </copyright-statement>
      <copyright-year>2017</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This article, published in <italic>Genome Research</italic>, is available under a Creative Commons License (Attribution 4.0 International), as described at <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="768.pdf"/>
    <abstract>
      <p>The assembly of DNA sequences de novo is fundamental to genomics research. It is the first of many steps toward elucidating and characterizing whole genomes. Downstream applications, including analysis of genomic variation between species, between or within individuals critically depend on robustly assembled sequences. In the span of a single decade, the sequence throughput of leading DNA sequencing instruments has increased drastically, and coupled with established and planned large-scale, personalized medicine initiatives to sequence genomes in the thousands and even millions, the development of efficient, scalable and accurate bioinformatics tools for producing high-quality reference draft genomes is timely. With ABySS 1.0, we originally showed that assembling the human genome using short 50-bp sequencing reads was possible by aggregating the half terabyte of compute memory needed over several computers using a standardized message-passing system (MPI). We present here its redesign, which departs from MPI and instead implements algorithms that employ a Bloom filter, a probabilistic data structure, to represent a de Bruijn graph and reduce memory requirements. We benchmarked ABySS 2.0 human genome assembly using a Genome in a Bottle data set of 250-bp Illumina paired-end and 6-kbp mate-pair libraries from a single individual. Our assembly yielded a NG50 (NGA50) scaffold contiguity of 3.5 (3.0) Mbp using &lt;35 GB of RAM. This is a modest memory requirement by today's standards and is often available on a single computer. We also investigate the use of BioNano Genomics and 10x Genomics’ Chromium data to further improve the scaffold NG50 (NGA50) of this assembly to 42 (15) Mbp.</p>
    </abstract>
    <funding-group>
      <award-group id="funding-1">
        <funding-source>National Human Genome Research Institute <named-content content-type="funder-id">http://dx.doi.org/10.13039/100000051</named-content></funding-source>
      </award-group>
      <award-group id="funding-2">
        <funding-source>National Institutes of Health <named-content content-type="funder-id">http://dx.doi.org/10.13039/100000002</named-content></funding-source>
        <award-id>R01HG007182</award-id>
      </award-group>
      <award-group id="funding-3">
        <funding-source>British Columbia Cancer Foundation</funding-source>
      </award-group>
      <award-group id="funding-4">
        <funding-source>National Institutes of Health <named-content content-type="funder-id">http://dx.doi.org/10.13039/100000002</named-content></funding-source>
      </award-group>
    </funding-group>
  </article-meta>
</front>
<body>
  <p>De novo genome assembly remains a challenging problem, especially for large and complex genomes. The problem refers to reconstructing the chromosome sequence(s) for a genome from sequencing reads, which are orders of magnitude shorter than the target genome (<xref rid="JACKMANGR214346C23" ref-type="bibr">Nagarajan and Pop 2013</xref>). In practice, current state-of-the-art assemblers do not fully reconstruct the chromosome sequences but rather reduce the input sequencing reads to a smaller number of nonredundant, more contiguous sequences (contigs). If further linkage information is available, such as in the form of paired-end reads or physical maps, these contigs may be ordered and oriented with respect to each other and reported as scaffolds, where there may be undetermined sequences (represented as “N”s) between contigs. The quality of returned contigs and scaffolds are conventionally measured by the contiguity of the assembled sequences. Often assembly algorithms are also validated using data from resequencing experiments, where assembled sequences are compared against a reference genome for their correctness in addition to their contiguity (<xref rid="JACKMANGR214346C10" ref-type="bibr">Gurevich et al. 2013</xref>).</p>
  <p>Performance of sequence assembly algorithms is closely coupled with the sequencing technology used and the quality of the data they generate, with highly accurate long reads always being desirable. However, the genomics research landscape, especially cancer genomics studies, has been heavily dominated by the high-throughput sequencing platforms from Illumina. Although longer (albeit noisier) sequences from Pacific Biosciences instruments are proven to yield high-quality de novo human genome assemblies (<xref rid="JACKMANGR214346C4" ref-type="bibr">Chaisson et al. 2014</xref>; <xref rid="JACKMANGR214346C26" ref-type="bibr">Pendleton et al. 2015</xref>), they come at a higher price relative to Illumina reads. The newer long-read instruments from Oxford Nanopore Technologies do not yet have the necessary throughput or data quality to be of utility in human genomics studies. As a result, most large cohort projects, as well as price-sensitive personalized medicine applications, still use the Illumina platforms.</p>
  <p>Recently, new sequencing technologies have been introduced that combine long-range linkage information with the strengths of existing Illumina short-read technologies. The Chromium platform from 10x Genomics generates sequencing libraries that localize sequence information on DNA fragments that are &gt;100 kb long. The technology employs microfluidics to isolate large DNA fragments in partitions containing sequencing primers and a unique barcode, preparing a library that is compatible with Illumina paired-end sequencing (<xref rid="JACKMANGR214346C37" ref-type="bibr">Weisenfeld et al. 2017</xref>). Another recent technology for long-range linkage information is the optical mapping platform from BioNano Genomics. It has previously been demonstrated in the Human Genome Project (<xref rid="JACKMANGR214346C11" ref-type="bibr">International Human Genome Sequencing Consortium 2001</xref>) and other pioneering de novo sequencing projects that linkage information from a physical map is very valuable in building highly contiguous assemblies. In this article, we show that 10x Genomics data and BioNano Genomics data can be used in combination to substantially improve the contiguity of a de novo assembly.</p>
  <p>Of particular interest in this study is resequencing data from human genome studies. The approach of de novo assembly of data from these experiments prior to comparison to a reference sequence is a valuable approach in detecting structural variants between individuals or between tumor and normal genomes (<xref rid="JACKMANGR214346C21" ref-type="bibr">Mose et al. 2014</xref>; <xref rid="JACKMANGR214346C15" ref-type="bibr">Li 2015b</xref>). Even though it is substantially more computationally intensive to analyze sequencing data by assembling the reads first, the specificity gains and resulting savings in event verification efforts may justify the choice. However, when working with mammalian-size genome data, de novo assembly is often plagued with long assembly run times and prohibitively large memory requirements—resource usages that warrant improvements.</p>
  <p>In this domain, ABySS 1.0 was the first scalable de novo assembly tool that could assemble a human genome, using short reads from a high-throughput sequencing platform (<xref rid="JACKMANGR214346C33" ref-type="bibr">Simpson et al. 2009</xref>). However, the feat required aggregating a large amount of memory distributed across a number of compute nodes communicating through the message-passing interface (MPI) protocol. Although this enabling technology found applications in many large cancer cohort studies (<xref rid="JACKMANGR214346C39" ref-type="bibr">Yip et al. 2011</xref>; <xref rid="JACKMANGR214346C30" ref-type="bibr">Roberts et al. 2012</xref>; <xref rid="JACKMANGR214346C13" ref-type="bibr">Ley et al. 2013</xref>; <xref rid="JACKMANGR214346C20" ref-type="bibr">Morin et al. 2013</xref>; <xref rid="JACKMANGR214346C28" ref-type="bibr">Pugh et al. 2013</xref>), its large memory consumption constituted a substantial bottleneck. This issue was not unique to ABySS 1.0, with popular algorithms such as SOAPdenovo2 (<xref rid="JACKMANGR214346C17" ref-type="bibr">Luo et al. 2012</xref>) and DISCOVAR de novo requiring &gt;600 GB to assemble a typical human data set. Some noteworthy assembly algorithms that have been developed to reduce memory requirements include the following: (1) SGA (<xref rid="JACKMANGR214346C32" ref-type="bibr">Simpson and Durbin 2011</xref>), which uses the Burrows-Wheeler transform to compress and index sequencing data; (2) Minia (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>), which uses a Bloom filter (<xref rid="JACKMANGR214346C2" ref-type="bibr">Bloom 1970</xref>) to represent the de Bruijn graph; (3) BCALM 2 (<xref rid="JACKMANGR214346C7" ref-type="bibr">Chikhi et al. 2016</xref>), which employs minimizer hashing (<xref rid="JACKMANGR214346C6" ref-type="bibr">Chikhi et al. 2014</xref>) to partition the de Bruijn graph; and (4) MEGAHIT (<xref rid="JACKMANGR214346C16" ref-type="bibr">Li et al. 2016</xref>), which employs the Succinct de Bruijn graph data structure of <xref rid="JACKMANGR214346C3" ref-type="bibr">Bowe et al. (2012)</xref>.</p>
  <p>In this article, we describe the implementation of ABySS 2.0, which reduces memory requirements for de novo assembly by an order of magnitude, while achieving results competitive with existing assemblers. ABySS 2.0 follows the model of Minia, wherein a probabilistic Bloom filter representation is used to encode the de Bruijn graph. We compare the performance of ABySS 2.0 against the latest version of ABySS 1.0, as well as two other scalable assembly pipelines that include a scaffolding stage: SOAPdenovo2 and SGA. We note that there are other algorithms that can build contigs without scaffolding, and we include comparison to DISCOVAR de novo, MEGAHIT, Minia, and BCALM 2, scaffolding the contigs of DISCOVAR de novo using the scaffolding tools BESST (<xref rid="JACKMANGR214346C31" ref-type="bibr">Sahlin et al. 2016</xref>), LINKS (<xref rid="JACKMANGR214346C35" ref-type="bibr">Warren et al. 2015</xref>), and the ABySS scaffolding algorithm. We also demonstrate how long-range linkage information from Chromium reads and BioNano maps may improve scaffold contiguity of draft genome assemblies.</p>
  <sec sec-type="results" id="s1">
    <title>Results</title>
    <sec id="s1a">
      <title>Overview of ABySS 2.0 assembly algorithm</title>
      <p>ABySS 1.0 is a multistage de novo assembly pipeline consisting of unitig, contig, and scaffold stages. At the unitig stage, we perform the initial assembly of sequences according to the de Bruijn graph assembly paradigm (<xref rid="JACKMANGR214346C27" ref-type="bibr">Pevzner et al. 2001</xref>). At the contig stage, we align the paired-end reads to the unitigs and use the pairing information to orient and merge overlapping unitigs. At the scaffold stage, we align the mate-pair reads to the contigs to orient and join them into scaffolds, inserting runs of “N” characters at gaps in coverage and for unresolved repeats. The most resource-intensive stage of ABySS 1.0 is the unitig (de Bruijn graph) assembly stage and is also its peak memory requirement. This stage of the pipeline loads the full set of <italic>k</italic>-mers from the input sequencing reads into a hash table and stores auxiliary data for each <italic>k</italic>-mer such as the number of <italic>k</italic>-mer occurrences in the reads and the presence/absence of possible neighbor <italic>k</italic>-mers in the de Bruijn graph. ABySS 1.0 addresses the large memory requirement by implementing a distributed version of the de Bruijn graph assembly approach, wherein the hash table of <italic>k</italic>-mers is split across cluster nodes, and communication between nodes occurs via the MPI standard. By these means, ABySS 1.0 enables the assembly of large genomes on clusters of commodity hardware. For example, ABySS 1.0 was used to assemble the 20-Gbp white spruce genome with 115 cluster nodes and ∼4.3 TB of aggregate memory (<xref rid="JACKMANGR214346C1" ref-type="bibr">Birol et al. 2013</xref>).</p>
      <p>The main innovation of ABySS 2.0 is a Bloom filter-based implementation of the unitig assembly stage, and it reduces the overall memory requirements by an order of magnitude, enabling assembly of large genomes on a single machine. A Bloom filter (<xref rid="JACKMANGR214346C2" ref-type="bibr">Bloom 1970</xref>) is a compact data structure for representing a set of elements that supports two operations: (1) inserting an element into the set, and (2) querying for the presence of an element in the set. In the context of Bloom filter-based de Bruijn graph assembly algorithms, the elements of the set are the <italic>k</italic>-mers of the input sequencing reads. The Bloom filter data structure consists of a bit vector and one or more hash functions, where the hash functions map each <italic>k</italic>-mer to a corresponding set of positions within the bit vector (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>A); we refer to this set of bit positions as the <italic>bit signature</italic> for the <italic>k</italic>-mer. A <italic>k</italic>-mer is inserted into the Bloom filter by setting the positions of its bit signature to one and is queried by testing if all positions of its bit signature are one. While a Bloom filter provides a very memory-efficient means of representing a set, it has the caveat that it can generate <italic>false positives</italic> when the bit signatures of different <italic>k</italic>-mers overlap by chance. In the context of our application, this means that a certain fraction of <italic>k</italic>-mer queries will return true even though the <italic>k</italic>-mers do not exist in the input sequencing data. The false-positive rate (FPR) for a Bloom filter (<xref rid="JACKMANGR214346C2" ref-type="bibr">Bloom 1970</xref>) can be estimated using
<disp-formula id="JACKMANGR214346M1"><label>(1)</label><mml:math id="M1"><mml:mtext>FPR</mml:mtext><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mstyle><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mi>m</mml:mi></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">hn</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>h</mml:mi></mml:msup><mml:mo>≈</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">hn</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:math></disp-formula>
where <italic>m</italic> is the Bloom filter in bits, <italic>h</italic> is the number of hash functions, and <italic>n</italic> is the number of distinct <italic>k</italic>-mers in the data. Handling false positives was the main design challenge of ABySS 2.0, and we discuss the issue in further detail in Methods.</p>
      <fig id="JACKMANGR214346F1" orientation="portrait" position="float">
        <label>Figure 1.</label>
        <caption>
          <p>Overview of the ABySS 2.0 assembly algorithm. (<italic>A</italic>) <italic>k</italic>-mers from each input sequencing read are loaded into the Bloom filter by computing the hash values of each <italic>k</italic>-mer sequence and setting the corresponding bit in the Bloom filter. For clarity, we show a Bloom filter that uses a single hash function; in practice, multiple bit positions are set for each <italic>k</italic>-mer using multiple independent hash functions. (<italic>B</italic>) A path in the de Bruijn graph is traversed by repeatedly querying for possible successor <italic>k</italic>-mers and advancing to the successor(s) that are found in the Bloom filter. Each possible successor corresponds to single-base extension of the current <italic>k</italic>-mer by “A,” “C,” “G,” or “T.” (<italic>C</italic>) ABySS 2.0 builds unitig sequences by extending solid reads <italic>left</italic> and <italic>right</italic> within the de Bruijn graph. A solid read is a read that consists entirely of <italic>k</italic>-mers with an occurrence count greater or equal to a user-specified threshold (solid <italic>k</italic>-mers); the optimum minimum occurrence threshold is typically in the range of two to four. Extension of a solid read is halted when either a branching point or a dead end in the de Bruijn graph is encountered. A look-ahead algorithm is employed to detect and ignore short branches caused by Bloom filter false positives and/or recurrent read errors.</p>
        </caption>
        <graphic xlink:href="768f01"/>
      </fig>
      <p>During unitig assembly, two passes are made through the input sequencing reads. In the first pass, we extract the <italic>k</italic>-mers from the reads and load them into a Bloom filter (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>A). To filter out the majority of <italic>k</italic>-mers caused by sequencing errors, we discard all <italic>k</italic>-mers with an occurrence count below a user-specified threshold, typically in the range of two to four. We refer to the retained <italic>k</italic>-mers as <italic>solid k-mers</italic>. In the second pass through the reads, we identify reads that consist entirely of solid <italic>k</italic>-mers, which we term <italic>solid reads</italic>, and extend them left and right within the de Bruijn graph to create unitigs (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>C). During read extension, we adopt the same approach to graph traversal as originally described for Minia (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>). Since only the nodes (<italic>k</italic>-mers) of the de Bruijn graph are stored in the Bloom filter and not the edges, we query all four possible <italic>k</italic>-mers neighboring the current <italic>k</italic>-mer during each step of graph traversal. This step enables us to discover outgoing edges (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>B). We note that during the read extension phase of assembly, it is possible for multiple solid reads to result in the same unitig. To avoid such duplicate sequences, we use an additional tracking Bloom filter to record <italic>k</italic>-mers included in previous unitigs, and a solid read is only extended if it has at least one <italic>k</italic>-mer that is not already in the tracking Bloom filter.</p>
    </sec>
    <sec id="s1b">
      <title>Effect of Bloom filter FPR</title>
      <p>In the context of de Bruijn graph assembly, Bloom filter false positives have the effect of adding to the graph <italic>k</italic>-mers that are not present in the input sequencing reads. To address this issue, we have implemented a look-ahead mechanism to remove such <italic>k</italic>-mers from the graph, as described in the Methods. However, in order to confirm that Bloom filter false positives do not cause assembly artifacts and to better understand the relationship between Bloom filter FPR, assembly quality, RAM usage, and running time, we conducted the following experiment.</p>
      <p>By using the <italic>Caenorhabditis elegans</italic> data set DRR008444, we conducted assemblies with a range of Bloom filter FPRs and measured the resulting NG50 length metric, number of misassemblies, and wall-clock time (<xref ref-type="fig" rid="JACKMANGR214346F2">Fig. 2</xref>). We note that the Bloom filter FPR is not a directly tunable parameter of ABySS 2.0. Instead, we controlled the FPR indirectly by changing the Bloom filter size from 250 to 3000 MB, with a step size of 250 MB. Further details of the experimental setup are provided in “Effect of Bloom Filter Positive Rate” in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>. In <xref ref-type="fig" rid="JACKMANGR214346F2">Figure 2</xref>A, we observe that the NG50 remains stable in the neighborhood of 9600 bp as the Bloom filter allocation decreases from 3000 to 500 MB, corresponding to FPR values of 1.91% and 10.9%, respectively, but drops sharply when Bloom filter allocation is decreased further from 500 to 250 MB (FPR 10.9% and 20.7%, respectively). Similarly, the number of major misassemblies (9) and local misassemblies (30–31) reported by QUAST 3.2 remains stable as the Bloom filter allocation is decreased from 3000 to 250 MB (<xref ref-type="fig" rid="JACKMANGR214346F2">Fig. 2</xref>B). Additional QUAST metrics indicate that genome assemblies are of similar quality with a Bloom filter allocation as low as 500 MB (detailed in <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Figs. S1–S3</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Tables S1–S3</ext-link>). Finally, in <xref ref-type="fig" rid="JACKMANGR214346F2">Figure 2</xref>C we observe that the run time of ABySS 2.0 is inversely related to Bloom filter size. This behavior is due to the use of a look-ahead algorithm to trim false branches from the de Bruijn graph, as described in the Methods and depicted in <xref ref-type="fig" rid="JACKMANGR214346F1">Figure 1</xref>C. Run time increases gradually as the Bloom filter allocation decreases from 3000 to 500 MB but rises sharply from 57 to 152 min when the allocation is further decreased from 500 to 250 MB. These plots demonstrate a trade-off between memory usage and run time, with an FPR in the range of 5%–10% giving both good memory usage and time performance. It also indicates that any FPR &lt;20% has no adverse effects on assembly quality, considering both contiguity and correctness.</p>
      <fig id="JACKMANGR214346F2" orientation="portrait" position="float">
        <label>Figure 2.</label>
        <caption>
          <p>Effect of Bloom filter memory allocation on ABySS 2.0 assemblies of the <italic>C. elegans</italic> DRR008444 data set. (<italic>A</italic>) The assembly contiguity (NG50) remains stable in the neighborhood of 9600 bp as the Bloom filter allocation decreases from 3000 MB of 500 MB but drops sharply as the allocation is further decreased from 500 to 250 MB. (<italic>B</italic>) The number of major misassemblies (9) and local misassemblies (30–31) reported by QUAST remains stable as the Bloom filter allocation is decreased from 3000 to 250 MB. (<italic>C</italic>) The assembly wall-clock time increases gradually as the Bloom filter allocation is decreased from 3000 to 500 MB but rises sharply from 57 to 152 min when the allocation is further decreased from 500 to 250 MB. (<italic>D</italic>) The relationship between Bloom filter false-positive rate and the Bloom filter memory allocation. From these results, we conclude that a Bloom filter FPR in the range of 5%–10% provides a good balance between assembly time and memory usage, without any detrimental effect on assembly quality.</p>
        </caption>
        <graphic xlink:href="768f02"/>
      </fig>
      <p>Most false-positive <italic>k</italic>-mers result in a tip that is pruned by the look-ahead algorithm. In a standard de Bruijn graph, two <italic>k</italic>-mers that occur at distant locations in the genome but, coincidentally, share an overlap of <italic>k</italic> − 1 nucleotides cause a branch in the de Bruijn graph, stopping the assembly of a contig at that branching point. The false-positive <italic>k</italic>-mers of a Bloom filter de Bruijn graph can make a connection between two <italic>k</italic>-mers that overlap by fewer than <italic>k</italic> − 1 nucleotides. Such a chance connection similarly creates a branching point causing the contig to come to a premature end. The probability of such a chance connection decreases exponentially with a decreasing overlap, FPR<sup><italic>k</italic>−1−<italic>o</italic></sup>, where <italic>o</italic> is the amount of overlap between the two <italic>k</italic>-mers. If these chance connections occurred frequently, we would expect that varying the size of the Bloom filter and thus the FPR to significantly affect the contiguity of the assembly. However, we show empirically in <xref ref-type="fig" rid="JACKMANGR214346F2">Figure 2</xref>A that the contiguity of the assembly is largely insensitive to the FPR, and we surmise that these chance connections occur infrequently.</p>
    </sec>
    <sec id="s1c">
      <title>Assembler comparison</title>
      <p>To assess the performance of ABySS 2.0, we compared it with other leading assemblers for large genomes: ABySS 1.0 (<xref rid="JACKMANGR214346C33" ref-type="bibr">Simpson et al. 2009</xref>), BCALM 2 (<xref rid="JACKMANGR214346C7" ref-type="bibr">Chikhi et al. 2016</xref>), DISCOVAR de novo, MEGAHIT (<xref rid="JACKMANGR214346C16" ref-type="bibr">Li et al. 2016</xref>), Minia (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>), SGA (<xref rid="JACKMANGR214346C32" ref-type="bibr">Simpson and Durbin 2011</xref>), and SOAPdenovo2 (<xref rid="JACKMANGR214346C17" ref-type="bibr">Luo et al. 2012</xref>). We note that DISCOVAR de novo is the whole-genome de novo assembly successor to DISCOVAR (<xref rid="JACKMANGR214346C36" ref-type="bibr">Weisenfeld et al. 2014</xref>). We conducted our comparison using a recent, publicly available human short-read data set provided by the Genome in a Bottle (<xref rid="JACKMANGR214346C41" ref-type="bibr">Zook et al. 2016</xref>) project. The NIST HG004 (Coriell cell line NA24143) data were chosen for its deep 70× coverage of Illumina short-read (paired-end 250 bp) data and the availability of sequences from other platforms, including a 175× physical coverage mate-pair data set (after trimming), 10x Genomics Chromium data, and BioNano optical mapping data. We note that paired-end 250-bp sequencing data from an Illumina HiSeq 2500 in rapid-run mode is currently roughly double the cost per base of paired-end 125-bp sequencing data on the same machine in high-throughput mode (<uri xlink:href="http://bit.ly/hiseq2500">http://bit.ly/hiseq2500</uri>, <uri xlink:href="http://bit.ly/cornell-price-list">http://bit.ly/cornell-price-list</uri>).</p>
      <p>Each of the assemblers in the comparison was chosen due to its significant contributions toward the goal of scalable de novo assembly. The previous version of ABySS facilitates large genome assemblies by distributing the de Bruijn graph across cluster nodes and was the first software to assemble a human genome from short reads. The BCALM 2 assembler introduces a novel method for partitioning the de Bruijn graph using minimizer hashing, which enables subsets of the graph to be assembled iteratively or in parallel. DISCOVAR de novo is a recent de Bruijn graph assembler for large genomes. MEGAHIT utilizes a data structure called a succinct de Bruijn graph (<xref rid="JACKMANGR214346C3" ref-type="bibr">Bowe et al. 2012</xref>) to reduce the memory requirements for de Bruijn graph assembly. Minia is the first assembler to employ a Bloom filter representation of the de Bruijn graph and uses a novel algorithm for eliminating Bloom filter false positives. SGA demonstrates the use of an FM-index (<xref rid="JACKMANGR214346C32" ref-type="bibr">Simpson and Durbin 2011</xref>) as the core data structure for assembly, enabling detection of variable-length overlaps between reads with a low memory footprint. In addition to the aforementioned assemblers, we also attempted to include ALLPATHS-LG 52488 (<xref rid="JACKMANGR214346C9" ref-type="bibr">Gnerre et al. 2010</xref>) and MaSuRCA 3.1.3 (<xref rid="JACKMANGR214346C40" ref-type="bibr">Zimin et al. 2013</xref>); however, we were unable to run these assemblers to completion on the HG004 data set (for details, see “Assembler Scripts and Configuration Files” in <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>). For the majority of assemblers, we conducted assemblies across a range of <italic>k</italic>-mer sizes and selected a single assembly for inclusion in the comparison that represented the best tradeoff between maximizing contiguity (NG50 and NGA50) and minimizing alignment breakpoints with respect to reference genome GRCh38 (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Fig. S5</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Tables S5–S9</ext-link>). Further details regarding <italic>k</italic>-mer size optimization are described in “<italic>K</italic>-mer Size Sweeps” in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>.</p>
      <p>In <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>A and <xref ref-type="table" rid="JACKMANGR214346TB1">Table 1</xref>, we compare the peak RAM usage and wall-clock time of the assemblers. All assemblies from <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref> were benchmarked on a server with 2.5 TB of RAM and four Xeon E7-8867 v3 CPUs running at 2.50 GHz, providing a total of 64 cores. Memory usage and run time of the assemblers varied from 5 GB (BCALM 2) to 659 GB (SOAPdenovo2) and 9 h (BCALM 2) to 65 h (SGA). The tools that represent the de Bruijn graph succinctly—ABySS 2.0, MEGAHIT, Minia, and SGA—had memory footprints many times smaller than ABySS 1.0, DISCOVAR de novo, and SOAPdenovo2. BCALM 2 achieved both the smallest memory footprint, by virtue of its novel partitioning strategy to constructing the de Bruijn graph, and completed the assembly in 9 h, 8 h of which was spent counting <italic>k</italic>-mers with DSK (<xref rid="JACKMANGR214346C29" ref-type="bibr">Rizk et al. 2013</xref>). DISCOVAR de novo, which achieved the best sequence contiguity, required 618 GB of memory and 26 h to complete, and SOAPdenovo2 required a similar 659 GB and 35 h. SGA achieves its compact memory usage of 82 GB at the expense of run time, requiring 65 h to complete the assembly. In addition to the results of <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>A, we performed further benchmarking of ABySS 1.0 and ABySS 2.0 on other platforms (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Table S10</ext-link>). Most notably, we ran the ABySS 2.0 assembly on a low-memory machine with 48 GB RAM and 12 CPU cores, with a peak memory usage of 34 GB and a wall-clock time of 80 h.</p>
      <fig id="JACKMANGR214346F3" orientation="portrait" position="float">
        <label>Figure 3.</label>
        <caption>
          <p>De novo assembly results for Genome in a Bottle HG004 human genome short-read data with ABySS 1.0, ABySS 2.0, BCALM 2, DISCOVAR de novo, MEGAHIT, Minia, SOAPdenovo2, and SGA. To enable comparison with ABySS, the DISCOVAR de novo assembly was scaffolded with third-party scaffolders ABySS-Scaffold, LINKS (<xref rid="JACKMANGR214346C35" ref-type="bibr">Warren et al. 2015</xref>), and BESST (<xref rid="JACKMANGR214346C31" ref-type="bibr">Sahlin et al. 2016</xref>). For panels <italic>B</italic>–<italic>D</italic>, on the <italic>y</italic>-axes we show the range of NGA50 to NG50 to indicate uncertainty caused by real genomic variants between individual HG004 and the reference genome (GRCh38). On the <italic>x</italic>-axes, we show the number of breakpoints that occurred when aligning the sequences to the reference genome. (<italic>A</italic>) Peak memory usage and wall-clock time for the assemblers. (<italic>B</italic>) Contiguity and correctness metrics for contig sequences. (<italic>C</italic>) Contiguity and correctness metrics after scaffolding with mate-pair (MPET) reads. The SOAPdenovo2 result for this plot was excluded as an outlier with an NGA50 (NG50) value of 103 kbp (172 kbp) and 10,610 breakpoints. (<italic>D</italic>) Contiguity and correctness metrics after further scaffolding with BioNano optical mapping data, using BioNano's hybrid scaffolding pipeline.</p>
        </caption>
        <graphic xlink:href="768f03"/>
      </fig>
      <table-wrap id="JACKMANGR214346TB1" orientation="portrait" position="float">
        <label>Table 1.</label>
        <caption>
          <p>The peak memory usage and wall-clock run time with 64 threads of the assemblies of GIAB HG004</p>
        </caption>
        <graphic xlink:href="768tb01"/>
      </table-wrap>
      <p>In <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>B and <xref ref-type="table" rid="JACKMANGR214346TB2">Table 2</xref>, we compare the contiguity and correctness of the contig sequences generated by the assemblers. To extract contigs from the assemblies, we split the sequences at occurrences of one or more “N” characters. In addition to comparing the contigs produced by each assembler, we included two additional data points (“ABySS 1.0 + Sealer”, “ABySS 2.0 + Sealer”) in <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>B to show the contiguity improvement produced by closing scaffold gaps with Sealer (<xref rid="JACKMANGR214346C25" ref-type="bibr">Paulino et al. 2015</xref>), prior to splitting the scaffold sequences at “N”s. Further details regarding the Sealer results are provided in “Gap Filling with Sealer” in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>. To assess the contiguity of the contigs, we calculated both NG50 and NGA50 using a genome size of 3,088,269,832 bp. To assess assembly correctness, we counted the number of breakpoints when aligning the contigs to the primary chromosome sequences of the human reference GRCh38. Comparing the NG50 and NGA50 of the contigs, we observe that DISCOVAR de novo achieves the highest sequence contiguity by a factor of approximately two (DISCOVAR de novo NG50 of 82 kbp vs. ABySS 1.0 + Sealer NG50 of 38 kbp), although its memory use is the second largest, exceeded only by SOAPdenovo2. We note that the NG50 of the ABySS 1.0 (30 kbp) and ABySS 2.0 (21 kbp) contigs noticeably exceeds those of BCALM 2 (1 kbp), MEGAHIT (8 kbp), and Minia (5 kbp), primarily due to the additional use of paired-end information in ABySS. We also note that ABySS 2.0 achieves a lower contiguity than ABySS 1.0 (21 kbp vs. 30 kbp). Upon investigation, we conclude that the main cause of this difference is the handling of low coverage regions. Whereas ABySS 1.0 retains all <italic>k</italic>-mers in the de Bruijn graph along with their counts, ABySS 2.0 discards <italic>k</italic>-mers with counts below a user-specified threshold, as discussed in the Methods. To further assess the assemblies, we calculated the percentage of sequence identity and percentage of genome coverage of the contigs aligned to the reference genome. The percentage of identity ranged from 99.5% to 99.8%, the percentage of genome coverage from 93% to 98%, and ABySS 2.0 scored near the upper ends of both measures with 99.7% identity and 96% genome coverage (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Fig. S4</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Table S4</ext-link>).</p>
      <table-wrap id="JACKMANGR214346TB2" orientation="portrait" position="float">
        <label>Table 2.</label>
        <caption>
          <p>The sequence contiguity and number of breakpoints when aligned to GRCh38 using BWA-MEM of the assemblies of GIAB HG004</p>
        </caption>
        <graphic xlink:href="768tb02"/>
      </table-wrap>
      <p>In <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>C and <xref ref-type="table" rid="JACKMANGR214346TB3">Table 3</xref>, we compare the contiguity and correctness of the assemblies after scaffolding with Illumina mate-pair data. We generally excluded assemblers from this stage of the comparison that did not implement their own scaffolding algorithms. However, in light of the strong contiguity results of DISCOVAR de novo at the contig stage, we chose to scaffold the DISCOVAR de novo contigs with several third-party scaffolders: ABySS-Scaffold (data not shown), LINKS (<xref rid="JACKMANGR214346C35" ref-type="bibr">Warren et al. 2015</xref>), and BESST (<xref rid="JACKMANGR214346C31" ref-type="bibr">Sahlin et al. 2016</xref>). In comparison to <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>B, we note that the NG50 and NGA50 values of the DISCOVAR de novo and ABySS assemblies begin to converge, as do the values for the two versions of ABySS compared. We also note that there are significant differences between the scaffold NG50 and NGA50 length metrics, particularly in the case of the DISCOVAR de novo + ABySS-Scaffold assembly with an NG50 of 10.4 Mbp and NGA50 of 6.3 Mbp. We understand this divergence to be caused by the differing assumptions of the two contiguity metrics. While the NG50 is calculated under the assumption that all sequences are correctly assembled, the NGA50 metric penalizes breakpoints when aligning the sequences to the reference genome. While the NG50 is an overly optimistic metric, the NGA50 is an overly pessimistic metric because certain breakpoints may be attributed to real structural variation between the sequenced individual and the reference genome. For this reason, we show contiguity of the assemblies as a range between NGA50 and NG50, with the true unknown value lying somewhere in between.</p>
      <table-wrap id="JACKMANGR214346TB3" orientation="portrait" position="float">
        <label>Table 3.</label>
        <caption>
          <p>The scaffold contiguity and number of breakpoints when aligned to GRCh38 using BWA-MEM of the assemblies of GIAB HG004</p>
        </caption>
        <graphic xlink:href="768tb03"/>
      </table-wrap>
      <p>In <xref ref-type="fig" rid="JACKMANGR214346F3">Figure 3</xref>D and <xref ref-type="table" rid="JACKMANGR214346TB4">Table 4</xref>, we show the results after an additional round of scaffolding of the DISCOVAR de novo and ABySS assemblies using the BioNano optical map for individual HG004, as provided by the Genome in a Bottle project. The BioNano protocol generates an optical map of the genome by fluorescently tagging occurrences of a particular endonuclease motif within long DNA molecules, resulting in a barcode-like pattern for each molecule. To perform the scaffolding, the BioNano software generates an analogous set of barcode patterns in silico for the sequences of the input assembly and then aligns the two sets of bar codes. Applying BioNano scaffolding to the mate-pair–scaffolded sequences improved the NG50 by a factor of five or more across all assemblies, with NG50 reaching 52 Mbp with DISCOVAR de novo + ABySS-Scaffold + BioNano. We observe that the distance between the NG50 and NGA50 values grows even larger at this stage of scaffolding, which we surmise is caused by a greater likelihood of encountering real sequence variation between the sequenced individual and the reference genome.</p>
      <table-wrap id="JACKMANGR214346TB4" orientation="portrait" position="float">
        <label>Table 4.</label>
        <caption>
          <p>The scaffold contiguity and number of breakpoints when aligned to GRCh38 using BWA-MEM of the assemblies of GIAB HG004 with BioNano scaffolding</p>
        </caption>
        <graphic xlink:href="768tb04"/>
      </table-wrap>
      <p>Given the aforementioned limitations of our breakpoint metric for assessing assembly correctness, we additionally performed manual checks for assembly correctness. To this end, we investigated large-scale misassemblies (&gt;10 Mb) and found only two major events within our ABySS 2.0 + BioNano scaffolds (<xref ref-type="fig" rid="JACKMANGR214346F4">Figs. 4</xref>, <xref ref-type="fig" rid="JACKMANGR214346F5">5</xref>). One of these large-scale events between Chromosomes 1 and 16 was identified in every assembly (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Figs. S7–S12</ext-link>), which indicates that the event may be a real structural variant with respect to the reference human genome GRCh38. The other large scale event between Chromosomes 6 and 8 is interestingly also found in the DISCOVAR de novo + BESST + BioNano assembly (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Fig. S11</ext-link>), despite having fewer breakpoints and using an independent methodology. This suggests that the relative correctness of the ABySS 2.0 + BioNano assembly is on par with that of other assemblies.</p>
      <fig id="JACKMANGR214346F4" orientation="portrait" position="float">
        <label>Figure 4.</label>
        <caption>
          <p>Contigs from the 89 scaffolds &gt;3.2 Mbp that compose 90% of the genome are aligned to GRCh38 using BWA-MEM. Contigs from the same scaffold are shown in the same shade of gray, and alternating shades of light and dark gray are used to distinguish between contigs from different scaffolds. Two translocations, t(1;16) and t(6;8), are shown in green and blue. The segments of the genome that are not covered by alignments of the largest 89 scaffolds are shown offset in black. Gaps in the reference genome, including centromeres and other heterochromatin, are shown in red.</p>
        </caption>
        <graphic xlink:href="768f04"/>
      </fig>
      <fig id="JACKMANGR214346F5" orientation="portrait" position="float">
        <label>Figure 5.</label>
        <caption>
          <p>A Circos (<xref rid="JACKMANGR214346C12" ref-type="bibr">Krzywinski et al. 2009</xref>) assembly consistency plot. Scaftigs from the largest 89 scaffolds that compose 90% of the genome are aligned to GRCh38 using BWA-MEM. GRCh38 chromosomes are displayed on the <italic>left</italic> and the scaffolds on the <italic>right</italic>. Connections show the aligned regions between the genome and scaffolds. Contigs are included as a part of the same region if they are within 1 Mbp on either side of the connection, and regions &lt;100 kbp are not shown. The black regions on the chromosomes indicate gaps in the reference and the circles indicate the centromere location on each chromosome.</p>
        </caption>
        <graphic xlink:href="768f05"/>
      </fig>
    </sec>
    <sec id="s1d">
      <title>Scaffolding with Chromium data</title>
      <p>As the final step of our ABySS 2.0 assembly, we used the 10x Genomics Chromium data available for individual HG004 to further scaffold the BioNano assembly. The Chromium sequencing platform augments existing short-read technologies by labeling reads that originate from the same long DNA molecule with a shared barcode sequence. This labeling is achieved during library preparation by isolating long DNA molecules into droplets alongside gel beads containing the barcoding oligos. The barcodes added by the Chromium protocol provide additional long-range grouping information for the short reads, which can be leveraged for scaffolding and other bioinformatics applications, such as phasing sequence variants.</p>
      <p>To scaffold our assembly with the Chromium data, we developed ARCS (<xref rid="JACKMANGR214346C38" ref-type="bibr">Yeo et al. 2017</xref>). Briefly, we aligned the Chromium linked reads to the input BioNano scaffolds with BWA-MEM and recorded the barcodes of the reads that aligned to each scaffold. As we were only interested in the barcodes that joined scaffolds, we reduced noise by masking the interior portions of the input BioNano scaffolds with “N” characters, preserving only the first/last 30 kbp of sequence in each scaffold, prior to aligning the Chromium reads. By using the information obtained from the read alignments, we constructed a graph representation of the relationships between scaffolds, using nodes to represent scaffolds and edge weights to represent the number of shared barcodes between scaffolds. Finally, we supplied this graph as input to the LINKS (<xref rid="JACKMANGR214346C35" ref-type="bibr">Warren et al. 2015</xref>) scaffolding algorithm to identify high-confidence paths within the graph and to output the corresponding scaffolds. Additional information regarding the Chromium scaffolding with ARCS and LINKS is provided in “Assembler Scripts and Configuration Files” in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>.</p>
      <p>The Chromium scaffolding increased the scaffold NG50 of our ABySS 2.0 assembly from 26.9 to 41.9 Mbp. At this scale of contiguity, the largest scaffolds represent significant fractions of chromosome arms. In <xref ref-type="fig" rid="JACKMANGR214346F4">Figure 4</xref>, we show the positions on the chromosomes of the 89 scaffolds &gt;3.2 Mbp that compose 90% of the genome. We note that many chromosome arms are reconstructed by one to four large scaffolds, exemplified in <xref ref-type="fig" rid="JACKMANGR214346F5">Figure 5</xref>. We observe two regions indicative of a structural rearrangement and/or misassembly. Interestingly, the t(1;16) translocation is seen in every assembly (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Figs. S7–S12</ext-link>), and the t(6;8) translocation is also seen in the DISCOVAR de novo + BESST + BioNano assembly (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Fig. S11</ext-link>).</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s2">
    <title>Discussion</title>
    <p>The ideogram of <xref ref-type="fig" rid="JACKMANGR214346F4">Figure 4</xref> demonstrates that correct and highly-contiguous de novo assembly of human genomes is possible using current short-read sequencing technologies combined with long-range scaffolding techniques. While each of the scaffolding data types used here (mate-pair, BioNano, Chromium) are capable of increasing assembly contiguity by orders of magnitude on their own, our results demonstrate that these data are even more powerful when used in combination, also demonstrated by <xref rid="JACKMANGR214346C22" ref-type="bibr">Mostovoy et al. (2016)</xref>. In the human assembly we have described here, each scaffolding step feeds on the success of the previous assembly stages. Longer contig sequences improve the results of mate-pair scaffolding by allowing more mate-pairs to map to the contigs. Longer mate-pair scaffolds improve the BioNano scaffolding by allowing the optical map to align unambiguously to the mate-pair scaffolds; for this reason, BioNano recommends that the input assembly contains sequences of at least 100 kbp. Finally, longer BioNano scaffolds improve the Chromium scaffolding by resolving ambiguities in ordering and orientation of the scaffolds that are difficult to resolve using Chromium data alone.</p>
    <p>Another observation that can be made from our assembler comparison is that, in spite of more than a decade of research and development related to de Bruijn graph assemblers, the memory and runtime efficiency of short-read assemblers can still be greatly improved. This issue is particularly important for downstream studies that involve large numbers of de novo assemblies, such as human population studies, cancer genome studies, and clinical applications. The opportunity for improving the throughput of de novo assemblies is evident when comparing novel de Bruijn graph implementations such as Minia and BCALM 2 against more mature assembly pipelines such as ABySS 1.0 and DISCOVAR de novo (<xref ref-type="fig" rid="JACKMANGR214346F3">Fig. 3</xref>A). For example, the BCALM 2 assembly used only 5 GB RAM and 9 h to run, whereas the DISCOVAR de novo assembly used &gt;600 GB of RAM and over a day to run. While Minia and BCALM 2 did not match the results of ABySS and DISCOVAR de novo in terms of assembly contiguity (<xref ref-type="fig" rid="JACKMANGR214346F3">Fig. 3</xref>B), we posit that this is due to the limited error removal of the implementations and not a fundamental limitation of the algorithms themselves. In the case of Minia, this hypothesis is borne out by the results of ABySS 2.0 (<xref ref-type="fig" rid="JACKMANGR214346F3">Fig. 3</xref>A), which employs a Bloom filter-based assembly approach similar to Minia but achieves contiguity results that are on par with DISCOVAR de novo and ABySS 1.0.</p>
    <p>The assembly of long reads has yielded highly contiguous genome assemblies of human (<xref rid="JACKMANGR214346C26" ref-type="bibr">Pendleton et al. 2015</xref>; <xref rid="JACKMANGR214346C8" ref-type="bibr">Chin et al. 2016</xref>) and other organisms with sequence contiguity in the megabase range. Long-read sequencing comes, however, at a cost premium. For applications that are cost-sensitive, such as sequencing for diagnostic medicine, algorithms that exploit high-throughput short-read sequencing are valuable. We show that megabase scaffolds are achievable using short-read sequencing with one paired-end and one mate-pair library, and scaffolds approaching the size of entire chromosome arms are possible when scaffolding with additional BioNano and/or 10x Genomics data. A remaining challenge for short-read assemblies is to improve their sequence contiguity, which remains in the range of tens of kilobases, significantly shorter than the megabases achieved with the assembly of long-read sequencing.</p>
  </sec>
  <sec sec-type="methods" id="s3">
    <title>Methods</title>
    <sec id="s3a">
      <title>Bloom filter de Bruijn graph assembly</title>
      <p>The first stage of the ABySS 2.0 assembly pipeline is a de Bruijn graph assembler that uses a compact, Bloom filter-based representation of the graph. The use of Bloom filters for de novo assembly was first demonstrated in Minia (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>), and ABySS 2.0 builds on many aspects of that approach. The parts of our assembly algorithm that are novel with respect to Minia are (1) the use of <italic>solid reads</italic> to seed contig traversals (explained below), (2) the use of look-ahead for error correction and elimination of Bloom filter false positives rather than a separate data structure, and (3) the use of a new hashing algorithm, ntHash (<xref rid="JACKMANGR214346C18" ref-type="bibr">Mohamadi et al. 2016</xref>), designed for processing DNA/RNA sequences efficiently.</p>
      <p>We will begin by describing the basic aspects of our assembly algorithm that closely follow Minia, including the Bloom filter representation of the de Bruijn graph and the use of a <italic>cascading Bloom filter</italic> to remove low-occurrence <italic>k</italic>-mers. As in Minia, the first step of the assembly algorithm is to load all <italic>k</italic>-mers from the sequencing reads into a Bloom filter (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>A). These <italic>k</italic>-mers represent the set of nodes in the de Bruijn graph, but we do not explicitly store the edges representing the <italic>k</italic> − 1 bp overlaps between <italic>k</italic>-mers. Instead, as in Minia, we discover edges at runtime by querying the Bloom filter for the four possible predecessors/successors of the current <italic>k</italic>-mer during the course of a graph traversal (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>B). Each possible successor (predecessor) corresponds to a single-base extension of the current <italic>k</italic>-mer to the right (left) by “A,” “C,” “G,” or “T.” Another technique shared with Minia is the use of a cascading Bloom filter to eliminate low-occurrence <italic>k</italic>-mers, the majority of which are caused by sequencing errors (<xref rid="JACKMANGR214346C34" ref-type="bibr">Vandervalk et al. 2015</xref>). Briefly, a cascading Bloom filter is a chained array of Bloom filters where each Bloom filter stores <italic>k</italic>-mers with a count that is one higher than the preceding Bloom filter. The procedure for inserting a <italic>k</italic>-mer into a cascading Bloom filter is to query each Bloom filter in succession and to add the <italic>k</italic>-mer to the first Bloom filter where it is not already present. After all <italic>k</italic>-mers from the reads have been inserted, the last Bloom filter in the chain is then kept as the set of <italic>solid k-mers</italic> and the preceding Bloom filters are discarded. We note that ABySS 2.0 assigns equal sizes to each Bloom filter in the cascading chain, and so using <italic>c</italic> cascading Bloom filter levels effectively multiplies the peak memory requirement of the assembler by a factor of <italic>c</italic>. We used ntCard (<xref rid="JACKMANGR214346C19" ref-type="bibr">Mohamadi et al. 2017</xref>) to estimate the approximate number of singleton <italic>k</italic>-mers in the data set. As we describe below, an additional tracking Bloom filter is used to record <italic>k</italic>-mers that have been included in previously assembled contigs, and so the total memory multiplier is <italic>c</italic> + 1.</p>
      <p>We now proceed to describe the unique aspects of the ABySS 2.0 algorithm in comparison to Minia. The first difference is the method used to seed graph traversals in order to generate contigs. While Minia identifies and stores branching points of the de Bruijn graph to use as starting points for contig traversal, ABySS 2.0 instead extends <italic>solid reads</italic> left and right until either a dead end or a branching point is encountered in the graph. A read is considered to be a solid read if it consists entirely of solid <italic>k</italic>-mers, and is thus likely to represent a correct path in the de Bruijn graph. The percentage of solid reads in the data set depends on the user-specified minimum <italic>k</italic>-mer occurrence threshold. In the case of the Genome in a Bottle HG004 assembly, the <italic>k</italic>-mer occurrence threshold was set to three and the number of solid reads was 782,886,725 of 868,593,056 (90.1%), after correction with BFC (<xref rid="JACKMANGR214346C14" ref-type="bibr">Li 2015a</xref>). The read extension approach to contig generation has the advantage of being simple to implement but requires some precautions to ensure that redundant contigs are not generated by solid reads located in the same neighborhood of the de Bruijn graph. We address this issue by using an additional tracking Bloom filter to record the set of <italic>k</italic>-mers that have previously been included in contigs; if all the <italic>k</italic>-mers of a solid read are already contained in the tracking Bloom filter, it is not extended into a contig but is instead skipped. We note that in order for this scheme to work correctly, solid reads that span branching points of the de Bruijn graph must be split at the branching points and treated as separate candidates for extension. We note that the tracking Bloom filter is assigned the same size in memory as the chained Bloom filters that make up the cascading Bloom filter, described in the previous paragraph.</p>
      <p>A second important difference between Minia and ABySS 2.0 is the strategy used for handling of Bloom filter false positives. While the Minia approach uses an additional nonprobabilistic data structure to store <italic>critical false positives</italic> (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>), ABySS 2.0 instead uses a look-ahead mechanism during graph traversal to eliminate short branches that are caused by false positives and recurrent sequencing errors (<xref ref-type="fig" rid="JACKMANGR214346F1">Fig. 1</xref>C). The majority of branches created by sequencing errors are removed by the cascading Bloom filter. In detail, we invoke a look-ahead step at each branching point we encounter during contig extension, up to a distance of <italic>k</italic> nodes. If the look-ahead step reveals that a branch is less than or equal to <italic>k</italic> nodes in length, it is considered to be a false branch, and its existence is ignored. If, on the other hand, the branch point has two or more branches that are longer than <italic>k</italic> nodes, then the unitig extension is halted. The use of look-ahead incurs an additional computational cost to the graph traversal but obviates the requirement for additional data structures to track false positives and error <italic>k</italic>-mers.</p>
      <p>A third difference between Minia and ABySS 2.0 is the use of a specialized hash function called ntHash in ABySS 2.0. The ntHash algorithm is an efficient method for computing the hash values of all consecutive <italic>k</italic>-mers in a DNA sequence recursively, in which the hash value for each <italic>k</italic>-mer is derived from the hash value of the previous <italic>k</italic>-mer. More specifically, ntHash is an adapted version of cyclic polynomial hashing and is used to compute normal or canonical hash values for all <italic>k</italic>-mers in a DNA sequence. A further feature of ntHash is fast computation of multiple hash values for the same <italic>k</italic>-mer, without repeating the entire hashing computation. This is a useful feature for bioinformatics applications such as ABySS 2.0 that employ a Bloom filter data structure.</p>
    </sec>
    <sec id="s3b">
      <title>Experimental sequencing data</title>
      <p>In our experiment to assess the effects of Bloom filter FPR on ABySS 2.0 assemblies, we used <italic>C. elegans</italic> N2 strain data set SRA DRR008444, consisting of Illumina GAIIx 2 × 100 bp reads on 300-bp fragments with 75-fold coverage.</p>
      <p>For the assembler comparison, we used the data for the Ashkenazi mother (NIST HG004, Coriell cell line NA24143) from the Genome in a Bottle project (<xref rid="JACKMANGR214346C41" ref-type="bibr">Zook et al. 2016</xref>). The Illumina WGS 2 × 250 bp paired-end sequencing data may be downloaded from the URLs listed at <uri xlink:href="http://bit.ly/hg004-2x250">http://bit.ly/hg004-2x250</uri> (SRA SRR3440461–SRR3440495). The Illumina 6-kbp mate-pair sequencing data may be downloaded from URLs listed at <uri xlink:href="http://bit.ly/hg004-6kb">http://bit.ly/hg004-6kb</uri> (SRA SRR2832452–SRR283245). The BioNano optical map EXP_REFINEFINAL1_q.cmap may be downloaded from the URLs listed at <uri xlink:href="http://bit.ly/hg004-bionano">http://bit.ly/hg004-bionano</uri>, and the 10x Genomics Chromium data may be downloaded from the URLs listed at <uri xlink:href="http://bit.ly/hg004-chromium">http://bit.ly/hg004-chromium</uri>.</p>
      <p>We corrected sequencing errors in the reads using the tool BFC (<xref rid="JACKMANGR214346C14" ref-type="bibr">Li 2015a</xref>) with the parameter <monospace>-s3G</monospace>. We constructed the hash table of trusted <italic>k</italic>-mers using the paired-end reads and used this hash table to correct both the paired-end and mate-pair reads. We assembled both the BFC and uncorrected reads with each assembler (<ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Fig. S6</ext-link>; <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Tables S11, S12</ext-link>).</p>
      <p>We removed adapters from the mate-pair reads using NxTrim 0.4.0 (<xref rid="JACKMANGR214346C24" ref-type="bibr">O'Connell et al. 2015</xref>) with parameters <monospace>--norc --joinreads --preserve-mp</monospace>. The tool also classifies the reads as mate-pair, paired-end, single-end, or unknown. We discarded the reads classified as either paired-end or single-end and, for scaffolding, used the reads classified as mate-pair and unknown, which are composed primarily of mate-pair reads originating from large fragments.</p>
    </sec>
    <sec id="s3c">
      <title>Assembler comparison</title>
      <p>We assembled the GIAB HG004 data set using ABySS 1.9.0 (<xref rid="JACKMANGR214346C33" ref-type="bibr">Simpson et al. 2009</xref>), ABySS 2.0, ALLPATHS-LG 52488 (<xref rid="JACKMANGR214346C9" ref-type="bibr">Gnerre et al. 2010</xref>), BCALM 2.0.0 (<xref rid="JACKMANGR214346C7" ref-type="bibr">Chikhi et al. 2016</xref>), DISCOVAR de novo 52488, MaSuRCA 3.1.3 (<xref rid="JACKMANGR214346C40" ref-type="bibr">Zimin et al. 2013</xref>), MEGAHIT 1.0.6-3-gfb1e59b (<xref rid="JACKMANGR214346C16" ref-type="bibr">Li et al. 2016</xref>), Minia 3.0.0-alpha1 (<xref rid="JACKMANGR214346C5" ref-type="bibr">Chikhi and Rizk 2013</xref>), SGA 0.10.14 (<xref rid="JACKMANGR214346C32" ref-type="bibr">Simpson and Durbin 2011</xref>), and SOAPdenovo 2.04 (<xref rid="JACKMANGR214346C17" ref-type="bibr">Luo et al. 2012</xref>). We assembled with each tool the paired-end reads corrected by BFC 181. The mate-pair reads categorized by NxTrim 0.4.0 and corrected by BFC were used for scaffolding, when applicable for that assembler. We scaffolded the DISCOVAR de novo assembly using BESST 2.2.4 (<xref rid="JACKMANGR214346C31" ref-type="bibr">Sahlin et al. 2016</xref>), LINKS 1.8.2 (<xref rid="JACKMANGR214346C35" ref-type="bibr">Warren et al. 2015</xref>), and ABySS-Scaffold 1.9.0 (data not shown).</p>
      <p>Most software used in these analyses was installed from the Homebrew-Science software collection using Linuxbrew (<uri xlink:href="http://linuxbrew.sh">http://linuxbrew.sh</uri>) with the command <monospace>brew install abyss allpaths-lg bcalm bfc bwa discovardenovo masurca megahit nxtrim samtools seqtk sga soapdenovo</monospace>. The development version of ABySS 2.0 used in the comparison was compiled from the bloom-abyss-preview tag at <uri xlink:href="https://github.com/bcgsc/abyss/tree/bloom-abyss-preview">https://github.com/bcgsc/abyss/tree/bloom-abyss-preview</uri>, and we provide the source code in <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Archive 1</ext-link>. Minia 3.0.0-alpha1 and LINKS 1.8.2 were installed manually, as these versions are not yet available in Linuxbrew as of this writing. The Python package besst was installed using pip install besst.</p>
      <p>We provide the commands and configuration files used to run the various assemblers and scaffolding tools in <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Listings S1 through S16</ext-link> and as Makefile scripts in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Archive 2</ext-link>. The scripts are also available online at <uri xlink:href="https://github.com/bcgsc/abyss-2.0-giab">https://github.com/bcgsc/abyss-2.0-giab</uri>. To calculate a suitable Bloom filter size for ABySS 2.0, we counted distinct <italic>k</italic>-mers in the reads with ntHash (<xref rid="JACKMANGR214346C19" ref-type="bibr">Mohamadi et al. 2017</xref>) and targeted a Bloom filter FPR of 5%; we provide further details in “Assembler Scripts and Configuration Files” in the <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/lookup/suppl/doi:10.1101/gr.214346.116/-/DC1">Supplemental Material</ext-link>. To assess the correctness of each assembly, we aligned the contigs to the primary chromosome sequences of human reference GRCh38 with BWA-MEM 0.7.13 and counted the number of resulting breakpoints with <monospace>abyss-samtobreak -G3088269832 -l500</monospace>.</p>
    </sec>
  </sec>
  <sec id="s4">
    <title>Data access</title>
    <p>The FASTA files for the assemblies of the HG004 Genome in a Bottle data from this study may be downloaded from NCBI at <uri xlink:href="http://bit.ly/ncbi-giab-abyss2">http://bit.ly/ncbi-giab-abyss2</uri> and are also mirrored at <uri xlink:href="http://bit.ly/abyss2-ftp">http://bit.ly/abyss2-ftp</uri>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplemental Material</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_27_5_768__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="x-zip-compressed" xlink:href="supp_gr.214346.116_Supplemental_Archive_1.tar.gz"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="x-zip-compressed" xlink:href="supp_gr.214346.116_Supplemental_Archive_2.tar.gz"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="pdf" xlink:href="supp_gr.214346.116_Supplemental_Material.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>We thank Martin Krzywinski for his help with the data visualization in the ideogram and Circos figures. The research presented here was funded by the National Human Genome Research Institute of the National Institutes of Health (under award no. R01HG007182), with additional support provided by Intel, Genome Canada, Genome British Columbia, and the British Columbia Cancer Foundation. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health or other funding organizations.</p>
  </ack>
  <fn-group>
    <fn fn-type="supplementary-material">
      <p>[Supplemental material is available for this article.]</p>
    </fn>
    <fn>
      <p>Article published online before print. Article, supplemental material, and publication date are at <ext-link ext-link-type="uri" xlink:href="http://www.genome.org/cgi/doi/10.1101/gr.214346.116">http://www.genome.org/cgi/doi/10.1101/gr.214346.116</ext-link>.</p>
    </fn>
    <fn>
      <p>Freely available online through the <italic>Genome Research</italic> Open Access option.</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>References</title>
    <ref id="JACKMANGR214346C1">
      <mixed-citation publication-type="journal"><string-name><surname>Birol</surname><given-names>I</given-names></string-name>, <string-name><surname>Raymond</surname><given-names>A</given-names></string-name>, <string-name><surname>Jackman</surname><given-names>SD</given-names></string-name>, <string-name><surname>Pleasance</surname><given-names>S</given-names></string-name>, <string-name><surname>Coope</surname><given-names>R</given-names></string-name>, <string-name><surname>Taylor</surname><given-names>GA</given-names></string-name>, <string-name><surname>Saint Yuen</surname><given-names>MM</given-names></string-name>, <string-name><surname>Keeling</surname><given-names>CI</given-names></string-name>, <string-name><surname>Brand</surname><given-names>D</given-names></string-name>, <string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <etal/><year>2013</year><article-title>Assembling the 20 Gb white spruce (<italic>Picea glauca</italic>) genome from whole-genome shotgun sequencing data</article-title>. <source>Bioinformatics</source><volume>29</volume>: <fpage>1492</fpage>–<lpage>1497</lpage>.<pub-id pub-id-type="pmid">23698863</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C2">
      <mixed-citation publication-type="journal"><string-name><surname>Bloom</surname><given-names>BH</given-names></string-name>. <year>1970</year><article-title>Space/time trade-offs in hash coding with allowable errors</article-title>. <source>Commun ACM</source><volume>13</volume>: <fpage>422</fpage>–<lpage>426</lpage>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C3">
      <mixed-citation publication-type="book"><string-name><surname>Bowe</surname><given-names>A</given-names></string-name>, <string-name><surname>Onodera</surname><given-names>T</given-names></string-name>, <string-name><surname>Sadakane</surname><given-names>K</given-names></string-name>, <string-name><surname>Shibuya</surname><given-names>T</given-names></string-name>. <year>2012</year><article-title>Succinct de Bruijn graphs</article-title>. In <source>Algorithms in bioinformatics</source> (ed. <string-name><surname>Raphael</surname><given-names>B</given-names></string-name>, <string-name><surname>Tang</surname><given-names>J</given-names></string-name>), pp. <fpage>225</fpage>–<lpage>235</lpage>. <publisher-name>Springer</publisher-name>, <publisher-loc>Berlin, Heidelberg</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C4">
      <mixed-citation publication-type="journal"><string-name><surname>Chaisson</surname><given-names>MJP</given-names></string-name>, <string-name><surname>Huddleston</surname><given-names>J</given-names></string-name>, <string-name><surname>Dennis</surname><given-names>MY</given-names></string-name>, <string-name><surname>Sudmant</surname><given-names>PH</given-names></string-name>, <string-name><surname>Malig</surname><given-names>M</given-names></string-name>, <string-name><surname>Hormozdiari</surname><given-names>F</given-names></string-name>, <string-name><surname>Antonacci</surname><given-names>F</given-names></string-name>, <string-name><surname>Surti</surname><given-names>U</given-names></string-name>, <string-name><surname>Sandstrom</surname><given-names>R</given-names></string-name>, <string-name><surname>Boitano</surname><given-names>M</given-names></string-name>, <etal/><year>2014</year><article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title>. <source>Nature</source><volume>517</volume>: <fpage>608</fpage>–<lpage>611</lpage>.<pub-id pub-id-type="pmid">25383537</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C5">
      <mixed-citation publication-type="journal"><string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>, <string-name><surname>Rizk</surname><given-names>G</given-names></string-name>. <year>2013</year><article-title>Space-efficient and exact de Bruijn graph representation based on a Bloom filter</article-title>. <source>Algorithms Mol Biol</source><volume>8</volume>: <fpage>1</fpage>.<pub-id pub-id-type="pmid">23286762</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C6">
      <mixed-citation publication-type="book"><string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>, <string-name><surname>Limasset</surname><given-names>A</given-names></string-name>, <string-name><surname>Jackman</surname><given-names>S</given-names></string-name>, <string-name><surname>Simpson</surname><given-names>JT</given-names></string-name>, <string-name><surname>Medvedev</surname><given-names>P</given-names></string-name>. <year>2014</year><article-title>On the representation of de Bruijn graphs</article-title>. In <source>International conference on Research in computational molecular biology</source> (ed. <string-name><surname>Sharan</surname><given-names>R</given-names></string-name>), pp. <fpage>35</fpage>–<lpage>55</lpage>. <publisher-name>Springer</publisher-name>, <publisher-loc>Cham, Switzerland</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C7">
      <mixed-citation publication-type="journal"><string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>, <string-name><surname>Limasset</surname><given-names>A</given-names></string-name>, <string-name><surname>Medvedev</surname><given-names>P</given-names></string-name>. <year>2016</year><article-title>Compacting de Bruijn graphs from sequencing data quickly and in low memory</article-title>. <source>Bioinformatics</source><volume>32</volume>: <fpage>i201</fpage>–<lpage>i208</lpage>.<pub-id pub-id-type="pmid">27307618</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C8">
      <mixed-citation publication-type="journal"><string-name><surname>Chin</surname><given-names>C-S</given-names></string-name>, <string-name><surname>Peluso</surname><given-names>P</given-names></string-name>, <string-name><surname>Sedlazeck</surname><given-names>FJ</given-names></string-name>, <string-name><surname>Nattestad</surname><given-names>M</given-names></string-name>, <string-name><surname>Concepcion</surname><given-names>GT</given-names></string-name>, <string-name><surname>Clum</surname><given-names>A</given-names></string-name>, <string-name><surname>Dunn</surname><given-names>C</given-names></string-name>, <string-name><surname>O'Malley</surname><given-names>R</given-names></string-name>, <string-name><surname>Figueroa-Balderas</surname><given-names>R</given-names></string-name>, <string-name><surname>Morales-Cruz</surname><given-names>A</given-names></string-name>, <etal/><year>2016</year><article-title>Phased diploid genome assembly with single-molecule real-time sequencing</article-title>. <source>Nat Methods</source><volume>13</volume>: <fpage>1050</fpage>–<lpage>1054</lpage>.<pub-id pub-id-type="pmid">27749838</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C9">
      <mixed-citation publication-type="journal"><string-name><surname>Gnerre</surname><given-names>S</given-names></string-name>, <string-name><surname>MacCallum</surname><given-names>I</given-names></string-name>, <string-name><surname>Przybylski</surname><given-names>D</given-names></string-name>, <string-name><surname>Ribeiro</surname><given-names>FJ</given-names></string-name>, <string-name><surname>Burton</surname><given-names>JN</given-names></string-name>, <string-name><surname>Walker</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Sharpe</surname><given-names>T</given-names></string-name>, <string-name><surname>Hall</surname><given-names>G</given-names></string-name>, <string-name><surname>Shea</surname><given-names>TP</given-names></string-name>, <string-name><surname>Sykes</surname><given-names>S</given-names></string-name>, <etal/><year>2010</year><article-title>High-quality draft assemblies of mammalian genomes from massively parallel sequence data</article-title>. <source>Proc Natl Acad Sci</source><volume>108</volume>: <fpage>1513</fpage>–<lpage>1518</lpage>.<pub-id pub-id-type="pmid">21187386</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C10">
      <mixed-citation publication-type="journal"><string-name><surname>Gurevich</surname><given-names>A</given-names></string-name>, <string-name><surname>Saveliev</surname><given-names>V</given-names></string-name>, <string-name><surname>Vyahhi</surname><given-names>N</given-names></string-name>, <string-name><surname>Tesler</surname><given-names>G</given-names></string-name>. <year>2013</year><article-title>QUAST: quality assessment tool for genome assemblies</article-title>. <source>Bioinformatics</source><volume>29</volume>: <fpage>1072</fpage>–<lpage>1075</lpage>.<pub-id pub-id-type="pmid">23422339</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C11">
      <mixed-citation publication-type="journal"><collab>International Human Genome Sequencing Consortium</collab>. <year>2001</year><article-title>Initial sequencing and analysis of the human genome</article-title>. <source>Nature</source><volume>409</volume>: <fpage>860</fpage>–<lpage>921</lpage>.<pub-id pub-id-type="pmid">11237011</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C12">
      <mixed-citation publication-type="journal"><string-name><surname>Krzywinski</surname><given-names>M</given-names></string-name>, <string-name><surname>Schein</surname><given-names>J</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>, <string-name><surname>Connors</surname><given-names>J</given-names></string-name>, <string-name><surname>Gascoyne</surname><given-names>R</given-names></string-name>, <string-name><surname>Horsman</surname><given-names>D</given-names></string-name>, <string-name><surname>Jones</surname><given-names>SJ</given-names></string-name>, <string-name><surname>Marra</surname><given-names>MA</given-names></string-name>. <year>2009</year><article-title>Circos: an information aesthetic for comparative genomics</article-title>. <source>Genome Res</source><volume>19</volume>: <fpage>1639</fpage>–<lpage>1645</lpage>.<pub-id pub-id-type="pmid">19541911</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C13">
      <mixed-citation publication-type="journal"><string-name><surname>Ley</surname><given-names>T</given-names></string-name>, <string-name><surname>Miller</surname><given-names>C</given-names></string-name>, <string-name><surname>Ding</surname><given-names>L</given-names></string-name>, <string-name><surname>Raphael</surname><given-names>B</given-names></string-name>, <string-name><surname>Mungall</surname><given-names>A</given-names></string-name>, <string-name><surname>Robertson</surname><given-names>A</given-names></string-name>, <string-name><surname>Hoadley</surname><given-names>K</given-names></string-name>, <string-name><surname>Triche</surname><given-names>TJ</given-names></string-name>, <string-name><surname>Laird</surname><given-names>P</given-names></string-name>, <string-name><surname>Baty</surname><given-names>J</given-names></string-name>, <etal/><year>2013</year><article-title>Genomic and epigenomic landscapes of adult de novo acute myeloid leukemia</article-title>. <source>N Engl J Med</source><volume>368</volume>: <fpage>2059</fpage>–<lpage>2074</lpage>.<pub-id pub-id-type="pmid">23634996</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C14">
      <mixed-citation publication-type="journal"><string-name><surname>Li</surname><given-names>H</given-names></string-name>. <year>2015a</year><article-title>BFC: correcting Illumina sequencing errors</article-title>. <source>Bioinformatics</source><volume>32</volume>: <fpage>2885</fpage>–<lpage>2887</lpage>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C15">
      <mixed-citation publication-type="journal"><string-name><surname>Li</surname><given-names>H</given-names></string-name>. <year>2015b</year><article-title>FermiKit: assembly-based variant calling for Illumina resequencing data</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>3694</fpage>–<lpage>3696</lpage>.<pub-id pub-id-type="pmid">26220959</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C16">
      <mixed-citation publication-type="journal"><string-name><surname>Li</surname><given-names>D</given-names></string-name>, <string-name><surname>Luo</surname><given-names>R</given-names></string-name>, <string-name><surname>Liu</surname><given-names>C-M</given-names></string-name>, <string-name><surname>Leung</surname><given-names>C-M</given-names></string-name>, <string-name><surname>Ting</surname><given-names>H-F</given-names></string-name>, <string-name><surname>Sadakane</surname><given-names>K</given-names></string-name>, <string-name><surname>Yamashita</surname><given-names>H</given-names></string-name>, <string-name><surname>Lam</surname><given-names>T-W</given-names></string-name>. <year>2016</year><article-title>MEGAHIT v1. 0: a fast and scalable metagenome assembler driven by advanced methodologies and community practices</article-title>. <source>Methods</source><volume>102</volume>: <fpage>3</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">27012178</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C17">
      <mixed-citation publication-type="journal"><string-name><surname>Luo</surname><given-names>R</given-names></string-name>, <string-name><surname>Liu</surname><given-names>B</given-names></string-name>, <string-name><surname>Xie</surname><given-names>Y</given-names></string-name>, <string-name><surname>Li</surname><given-names>Z</given-names></string-name>, <string-name><surname>Huang</surname><given-names>W</given-names></string-name>, <string-name><surname>Yuan</surname><given-names>J</given-names></string-name>, <string-name><surname>He</surname><given-names>G</given-names></string-name>, <string-name><surname>Chen</surname><given-names>Y</given-names></string-name>, <string-name><surname>Pan</surname><given-names>Q</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Y</given-names></string-name>, <etal/><year>2012</year><article-title>SOAPdenovo2: an empirically improved memory-efficient short-read de novo assembler</article-title>. <source>Gigascience</source><volume>1</volume>: <fpage>18</fpage>.<pub-id pub-id-type="pmid">23587118</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C18">
      <mixed-citation publication-type="journal"><string-name><surname>Mohamadi</surname><given-names>H</given-names></string-name>, <string-name><surname>Chu</surname><given-names>J</given-names></string-name>, <string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2016</year><article-title>ntHash: recursive nucleotide hashing</article-title>. <source>Bioinformatics</source><volume>32</volume>: <fpage>3492</fpage>–<lpage>3494</lpage>.<pub-id pub-id-type="pmid">27423894</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C19">
      <mixed-citation publication-type="journal"><string-name><surname>Mohamadi</surname><given-names>H</given-names></string-name>, <string-name><surname>Khan</surname><given-names>H</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2017</year><article-title>ntCard: a streaming algorithm for cardinality estimation in genomics data</article-title>. <source>Bioinformatics</source><volume>pii</volume>: <fpage>btw832</fpage>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C20">
      <mixed-citation publication-type="journal"><string-name><surname>Morin</surname><given-names>RD</given-names></string-name>, <string-name><surname>Mungall</surname><given-names>K</given-names></string-name>, <string-name><surname>Pleasance</surname><given-names>E</given-names></string-name>, <string-name><surname>Mungall</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Goya</surname><given-names>R</given-names></string-name>, <string-name><surname>Huff</surname><given-names>RD</given-names></string-name>, <string-name><surname>Scott</surname><given-names>DW</given-names></string-name>, <string-name><surname>Ding</surname><given-names>J</given-names></string-name>, <string-name><surname>Roth</surname><given-names>A</given-names></string-name>, <string-name><surname>Chiu</surname><given-names>R</given-names></string-name>, <etal/><year>2013</year><article-title>Mutational and structural analysis of diffuse large B-cell lymphoma using whole-genome sequencing</article-title>. <source>Blood</source><volume>122</volume>: <fpage>1256</fpage>–<lpage>1265</lpage>.<pub-id pub-id-type="pmid">23699601</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C21">
      <mixed-citation publication-type="journal"><string-name><surname>Mose</surname><given-names>LE</given-names></string-name>, <string-name><surname>Wilkerson</surname><given-names>MD</given-names></string-name>, <string-name><surname>Hayes</surname><given-names>DN</given-names></string-name>, <string-name><surname>Perou</surname><given-names>CM</given-names></string-name>, <string-name><surname>Parker</surname><given-names>JS</given-names></string-name>. <year>2014</year><article-title>ABRA: improved coding indel detection via assembly-based realignment</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>2813</fpage>–<lpage>2815</lpage>.<pub-id pub-id-type="pmid">24907369</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C22">
      <mixed-citation publication-type="journal"><string-name><surname>Mostovoy</surname><given-names>Y</given-names></string-name>, <string-name><surname>Levy-Sakin</surname><given-names>M</given-names></string-name>, <string-name><surname>Lam</surname><given-names>J</given-names></string-name>, <string-name><surname>Lam</surname><given-names>ET</given-names></string-name>, <string-name><surname>Hastie</surname><given-names>AR</given-names></string-name>, <string-name><surname>Marks</surname><given-names>P</given-names></string-name>, <string-name><surname>Lee</surname><given-names>J</given-names></string-name>, <string-name><surname>Chu</surname><given-names>C</given-names></string-name>, <string-name><surname>Lin</surname><given-names>C</given-names></string-name>, <string-name><surname>Džakula</surname><given-names>Ž</given-names></string-name>, <etal/><year>2016</year><article-title>A hybrid approach for de novo human genome sequence assembly and phasing</article-title>. <source>Nat Methods</source><volume>13</volume>: <fpage>587</fpage>–<lpage>590</lpage>.<pub-id pub-id-type="pmid">27159086</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C23">
      <mixed-citation publication-type="journal"><string-name><surname>Nagarajan</surname><given-names>N</given-names></string-name>, <string-name><surname>Pop</surname><given-names>M</given-names></string-name>. <year>2013</year><article-title>Sequence assembly demystified</article-title>. <source>Nat Rev Genet</source><volume>14</volume>: <fpage>157</fpage>–<lpage>167</lpage>.<pub-id pub-id-type="pmid">23358380</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C24">
      <mixed-citation publication-type="journal"><string-name><surname>O'Connell</surname><given-names>J</given-names></string-name>, <string-name><surname>Schulz-Trieglaff</surname><given-names>O</given-names></string-name>, <string-name><surname>Carlson</surname><given-names>E</given-names></string-name>, <string-name><surname>Hims</surname><given-names>MM</given-names></string-name>, <string-name><surname>Gormley</surname><given-names>NA</given-names></string-name>, <string-name><surname>Cox</surname><given-names>AJ</given-names></string-name>. <year>2015</year><article-title>NxTrim: optimized trimming of Illumina mate pair reads</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>2035</fpage>–<lpage>2037</lpage>.<pub-id pub-id-type="pmid">25661542</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C25">
      <mixed-citation publication-type="journal"><string-name><surname>Paulino</surname><given-names>D</given-names></string-name>, <string-name><surname>Warren</surname><given-names>RL</given-names></string-name>, <string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <string-name><surname>Raymond</surname><given-names>A</given-names></string-name>, <string-name><surname>Jackman</surname><given-names>SD</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2015</year><article-title>Sealer: a scalable gap-closing application for finishing draft genomes</article-title>. <source>BMC Bioinformatics</source><volume>16</volume>: <fpage>230</fpage>.<pub-id pub-id-type="pmid">26209068</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C26">
      <mixed-citation publication-type="journal"><string-name><surname>Pendleton</surname><given-names>M</given-names></string-name>, <string-name><surname>Sebra</surname><given-names>R</given-names></string-name>, <string-name><surname>Pang</surname><given-names>AWC</given-names></string-name>, <string-name><surname>Ummat</surname><given-names>A</given-names></string-name>, <string-name><surname>Franzen</surname><given-names>O</given-names></string-name>, <string-name><surname>Rausch</surname><given-names>T</given-names></string-name>, <string-name><surname>Stütz</surname><given-names>AM</given-names></string-name>, <string-name><surname>Stedman</surname><given-names>W</given-names></string-name>, <string-name><surname>Anantharaman</surname><given-names>T</given-names></string-name>, <string-name><surname>Hastie</surname><given-names>A</given-names></string-name>, <etal/><year>2015</year><article-title>Assembly and diploid architecture of an individual human genome via single-molecule technologies</article-title>. <source>Nat Methods</source><volume>12</volume>: <fpage>780</fpage>–<lpage>786</lpage>.<pub-id pub-id-type="pmid">26121404</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C27">
      <mixed-citation publication-type="journal"><string-name><surname>Pevzner</surname><given-names>PA</given-names></string-name>, <string-name><surname>Tang</surname><given-names>H</given-names></string-name>, <string-name><surname>Waterman</surname><given-names>MS</given-names></string-name>. <year>2001</year><article-title>An Eulerian path approach to DNA fragment assembly</article-title>. <source>Proc Natl Acad Sci</source><volume>98</volume>: <fpage>9748</fpage>–<lpage>9753</lpage>.<pub-id pub-id-type="pmid">11504945</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C28">
      <mixed-citation publication-type="journal"><string-name><surname>Pugh</surname><given-names>TJ</given-names></string-name>, <string-name><surname>Morozova</surname><given-names>O</given-names></string-name>, <string-name><surname>Attiyeh</surname><given-names>EF</given-names></string-name>, <string-name><surname>Asgharzadeh</surname><given-names>S</given-names></string-name>, <string-name><surname>Wei</surname><given-names>JS</given-names></string-name>, <string-name><surname>Auclair</surname><given-names>D</given-names></string-name>, <string-name><surname>Carter</surname><given-names>SL</given-names></string-name>, <string-name><surname>Cibulskis</surname><given-names>K</given-names></string-name>, <string-name><surname>Hanna</surname><given-names>M</given-names></string-name>, <string-name><surname>Kiezun</surname><given-names>A</given-names></string-name>, <etal/><year>2013</year><article-title>The genetic landscape of high-risk neuroblastoma</article-title>. <source>Nat Genet</source><volume>45</volume>: <fpage>279</fpage>–<lpage>284</lpage>.<pub-id pub-id-type="pmid">23334666</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C29">
      <mixed-citation publication-type="journal"><string-name><surname>Rizk</surname><given-names>G</given-names></string-name>, <string-name><surname>Lavenier</surname><given-names>D</given-names></string-name>, <string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>. <year>2013</year><article-title>DSK: k-mer counting with very low memory usage</article-title>. <source>Bioinformatics</source><volume>29</volume>: <fpage>652</fpage>–<lpage>653</lpage>.<pub-id pub-id-type="pmid">23325618</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C30">
      <mixed-citation publication-type="journal"><string-name><surname>Roberts</surname><given-names>KG</given-names></string-name>, <string-name><surname>Morin</surname><given-names>RD</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>J</given-names></string-name>, <string-name><surname>Hirst</surname><given-names>M</given-names></string-name>, <string-name><surname>Zhao</surname><given-names>Y</given-names></string-name>, <string-name><surname>Su</surname><given-names>X</given-names></string-name>, <string-name><surname>Chen</surname><given-names>S-C</given-names></string-name>, <string-name><surname>Payne-Turner</surname><given-names>D</given-names></string-name>, <string-name><surname>Churchman</surname><given-names>ML</given-names></string-name>, <string-name><surname>Harvey</surname><given-names>RC</given-names></string-name>, <etal/><year>2012</year><article-title>Genetic alterations activating kinase and cytokine receptor signaling in high-risk acute lymphoblastic leukemia</article-title>. <source>Cancer Cell</source><volume>22</volume>: <fpage>153</fpage>–<lpage>166</lpage>.<pub-id pub-id-type="pmid">22897847</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C31">
      <mixed-citation publication-type="journal"><string-name><surname>Sahlin</surname><given-names>K</given-names></string-name>, <string-name><surname>Chikhi</surname><given-names>R</given-names></string-name>, <string-name><surname>Arvestad</surname><given-names>L</given-names></string-name>. <year>2016</year><article-title>Assembly scaffolding with PE-contaminated mate-pair libraries</article-title>. <source>Bioinformatics</source><volume>32</volume>: <fpage>1925</fpage>–<lpage>1932</lpage>.<pub-id pub-id-type="pmid">27153683</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C32">
      <mixed-citation publication-type="journal"><string-name><surname>Simpson</surname><given-names>JT</given-names></string-name>, <string-name><surname>Durbin</surname><given-names>R</given-names></string-name>. <year>2011</year><article-title>Efficient de novo assembly of large genomes using compressed data structures</article-title>. <source>Genome Res</source><volume>22</volume>: <fpage>549</fpage>–<lpage>556</lpage>.<pub-id pub-id-type="pmid">22156294</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C33">
      <mixed-citation publication-type="journal"><string-name><surname>Simpson</surname><given-names>JT</given-names></string-name>, <string-name><surname>Wong</surname><given-names>K</given-names></string-name>, <string-name><surname>Jackman</surname><given-names>SD</given-names></string-name>, <string-name><surname>Schein</surname><given-names>JE</given-names></string-name>, <string-name><surname>Jones</surname><given-names>SJ</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2009</year><article-title>ABySS: a parallel assembler for short read sequence data</article-title>. <source>Genome Res</source><volume>19</volume>: <fpage>1117</fpage>–<lpage>1123</lpage>.<pub-id pub-id-type="pmid">19251739</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C34">
      <mixed-citation publication-type="journal"><string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <string-name><surname>Yang</surname><given-names>C</given-names></string-name>, <string-name><surname>Xue</surname><given-names>Z</given-names></string-name>, <string-name><surname>Raghavan</surname><given-names>K</given-names></string-name>, <string-name><surname>Chu</surname><given-names>J</given-names></string-name>, <string-name><surname>Mohamadi</surname><given-names>K</given-names></string-name>, <string-name><surname>Jackman</surname><given-names>SD</given-names></string-name>, <string-name><surname>Chiu</surname><given-names>R</given-names></string-name>, <string-name><surname>Warren</surname><given-names>RL</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2015</year><article-title>Konnector v2.0: pseudo-long reads from paired-end sequencing data</article-title>. <source>BMC Med Genomics</source><volume>8</volume>(<issue>Suppl. 3</issue>): <fpage>S1</fpage><pub-id pub-id-type="doi">10.1186/1755-8794-8-S3-S1</pub-id>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C35">
      <mixed-citation publication-type="journal"><string-name><surname>Warren</surname><given-names>RL</given-names></string-name>, <string-name><surname>Yang</surname><given-names>C</given-names></string-name>, <string-name><surname>Vandervalk</surname><given-names>BP</given-names></string-name>, <string-name><surname>Behsaz</surname><given-names>B</given-names></string-name>, <string-name><surname>Lagman</surname><given-names>A</given-names></string-name>, <string-name><surname>Jones</surname><given-names>SJM</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2015</year><article-title>LINKS: scalable, alignment-free scaffolding of draft genomes with long reads</article-title>. <source>Gigascience</source><volume>4</volume>: <fpage>35</fpage>.<pub-id pub-id-type="pmid">26244089</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C36">
      <mixed-citation publication-type="journal"><string-name><surname>Weisenfeld</surname><given-names>NI</given-names></string-name>, <string-name><surname>Yin</surname><given-names>S</given-names></string-name>, <string-name><surname>Sharpe</surname><given-names>T</given-names></string-name>, <string-name><surname>Lau</surname><given-names>B</given-names></string-name>, <string-name><surname>Hegarty</surname><given-names>R</given-names></string-name>, <string-name><surname>Holmes</surname><given-names>L</given-names></string-name>, <string-name><surname>Sogoloff</surname><given-names>B</given-names></string-name>, <string-name><surname>Tabbaa</surname><given-names>D</given-names></string-name>, <string-name><surname>Williams</surname><given-names>L</given-names></string-name>, <string-name><surname>Russ</surname><given-names>C</given-names></string-name>, <etal/><year>2014</year><article-title>Comprehensive variation discovery in single human genomes</article-title>. <source>Nat Genet</source><volume>46</volume>: <fpage>1350</fpage>–<lpage>1355</lpage>.<pub-id pub-id-type="pmid">25326702</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C37">
      <mixed-citation publication-type="journal"><string-name><surname>Weisenfeld</surname><given-names>NI</given-names></string-name>, <string-name><surname>Kumar</surname><given-names>V</given-names></string-name>, <string-name><surname>Shah</surname><given-names>P</given-names></string-name>, <string-name><surname>Church</surname><given-names>DM</given-names></string-name>, <string-name><surname>Jaffe</surname><given-names>DB</given-names></string-name>. <year>2017</year><article-title>Direct determination of diploid genome sequences</article-title>. <source>Genome Res</source> (this issue). <pub-id pub-id-type="doi">10.1101/gr.214874.116</pub-id>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C38">
      <mixed-citation publication-type="journal"><string-name><surname>Yeo</surname><given-names>S</given-names></string-name>, <string-name><surname>Coombe</surname><given-names>L</given-names></string-name>, <string-name><surname>Chu</surname><given-names>J</given-names></string-name>, <string-name><surname>Warren</surname><given-names>RL</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>. <year>2017</year><article-title>ARCS: assembly roundup by chromium scaffolding</article-title>. <source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/100750</pub-id>.</mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C39">
      <mixed-citation publication-type="journal"><string-name><surname>Yip</surname><given-names>S</given-names></string-name>, <string-name><surname>Butterfield</surname><given-names>YS</given-names></string-name>, <string-name><surname>Morozova</surname><given-names>O</given-names></string-name>, <string-name><surname>Chittaranjan</surname><given-names>S</given-names></string-name>, <string-name><surname>Blough</surname><given-names>MD</given-names></string-name>, <string-name><surname>An</surname><given-names>J</given-names></string-name>, <string-name><surname>Birol</surname><given-names>I</given-names></string-name>, <string-name><surname>Chesnelong</surname><given-names>C</given-names></string-name>, <string-name><surname>Chiu</surname><given-names>R</given-names></string-name>, <string-name><surname>Chuah</surname><given-names>E</given-names></string-name>, <etal/><year>2011</year><article-title>Concurrent CIC mutations, IDH mutations, and 1p/19q loss distinguish oligodendrogliomas from other cancers</article-title>. <source>J Pathol</source><volume>226</volume>: <fpage>7</fpage>–<lpage>16</lpage>.<pub-id pub-id-type="pmid">22072542</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C40">
      <mixed-citation publication-type="journal"><string-name><surname>Zimin</surname><given-names>AV</given-names></string-name>, <string-name><surname>Marcais</surname><given-names>G</given-names></string-name>, <string-name><surname>Puiu</surname><given-names>D</given-names></string-name>, <string-name><surname>Roberts</surname><given-names>M</given-names></string-name>, <string-name><surname>Salzberg</surname><given-names>SL</given-names></string-name>, <string-name><surname>Yorke</surname><given-names>JA</given-names></string-name>. <year>2013</year><article-title>The MaSuRCA genome assembler</article-title>. <source>Bioinformatics</source><volume>29</volume>: <fpage>2669</fpage>–<lpage>2677</lpage>.<pub-id pub-id-type="pmid">23990416</pub-id></mixed-citation>
    </ref>
    <ref id="JACKMANGR214346C41">
      <mixed-citation publication-type="journal"><string-name><surname>Zook</surname><given-names>JM</given-names></string-name>, <string-name><surname>Catoe</surname><given-names>D</given-names></string-name>, <string-name><surname>McDaniel</surname><given-names>J</given-names></string-name>, <string-name><surname>Vang</surname><given-names>L</given-names></string-name>, <string-name><surname>Spies</surname><given-names>N</given-names></string-name>, <string-name><surname>Sidow</surname><given-names>A</given-names></string-name>, <string-name><surname>Weng</surname><given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Y</given-names></string-name>, <string-name><surname>Mason</surname><given-names>CE</given-names></string-name>, <string-name><surname>Alexander</surname><given-names>N</given-names></string-name>, <etal/><year>2016</year><article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title>. <source>Sci Data</source><volume>3</volume>: <fpage>160025</fpage>.<pub-id pub-id-type="pmid">27271295</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6580563</article-id>
    <article-id pub-id-type="publisher-id">2936</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-019-2936-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>FastProNGS: fast preprocessing of next-generation sequencing reads</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Xiaoshuang</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Yan</surname>
          <given-names>Zhenhe</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Wu</surname>
          <given-names>Chao</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yang</surname>
          <given-names>Yang</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Xiaomin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8165-7167</contrib-id>
        <name>
          <surname>Zhang</surname>
          <given-names>Guangxin</given-names>
        </name>
        <address>
          <email>zhangguangxin@megagenomics.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label>Megagenomics Corporation, Beijing, China </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2199 3636</institution-id><institution-id institution-id-type="GRID">grid.419357.d</institution-id><institution>National Renewable Energy Laboratory CO, </institution></institution-wrap>Colorado, USA </aff>
      <aff id="Aff3"><label>3</label>Ping An Health Technology, Beijing, China </aff>
      <aff id="Aff4"><label>4</label>NLP, R&amp;D Suning, Beijing, China </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>6</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>6</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>345</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>9</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>6</day>
        <month>6</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Next-generation sequencing technology is developing rapidly and the vast amount of data that is generated needs to be preprocessed for downstream analyses. However, until now, software that can efficiently make all the quality assessments and filtration of raw data is still lacking.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We developed FastProNGS to integrate the quality control process with automatic adapter removal. Parallel processing was implemented to speed up the process by allocating multiple threads. Compared with similar up-to-date preprocessing tools, FastProNGS is by far the fastest. Read information before and after filtration can be output in plain-text, JSON, or HTML formats with user-friendly visualization.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">FastProNGS is a rapid, standardized, and user-friendly tool for preprocessing next-generation sequencing data within minutes. It is an all-in-one software that is convenient for bulk data analysis. It is also very flexible and can implement different functions using different user-set parameter combinations.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (10.1186/s12859-019-2936-9) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Quality control</kwd>
      <kwd>Adapter removing</kwd>
      <kwd>NGS</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par6">With the development of next-generation sequencing (NGS) technologies, the cost of sequencing has decreased a lot. From data from the NHGRI Genome Sequencing Program (GSP), over the past seventeen years, the cost of DNA sequence per megabase has decreased from nearly $10,000 to less than $0.1 and the cost of sequencing per human-sized genome has decreased from 100 million dollars to almost one thousand dollars, thus stimulating the production of an avalanche of data. Among the sequencing platforms, Illumina platforms dominate the sequencing market (personal communication, Timmerman, L.). However, because of the nature of the its technology, the average error rate of Illumina Miseq system is nearly 1% [<xref ref-type="bibr" rid="CR1">1</xref>], which is significantly higher than the error rate of traditional Sanger sequencing platforms, which is below 0.001% [<xref ref-type="bibr" rid="CR2">2</xref>]. To achieve reliable conclusions from downstream analyses such as variant discovery and clinical applications, quality control (QC) processes like filtration of low quality reads are important. In addition, adapter trimming is essential in most cases because adapter contamination can lead to NGS alignment errors and an increased number of unaligned reads, especially for small RNA sequencing.</p>
    <p id="Par7">To date, several tools with different functions have been developed to deal with FASTQ files produced by Illumina sequencing (Table <xref rid="Tab1" ref-type="table">1</xref>). Some offer only a few functions to deal with FASTQ or FASTA files, such as Seqtk [<xref ref-type="bibr" rid="CR3">3</xref>], FastQC [<xref ref-type="bibr" rid="CR4">4</xref>] and PIQA [<xref ref-type="bibr" rid="CR5">5</xref>]. They are suitable for quality checks but not for preprocessing of NGS reads. PRINSEQ [<xref ref-type="bibr" rid="CR6">6</xref>], FASTX-Toolkit [<xref ref-type="bibr" rid="CR7">7</xref>] and NGS QC Toolkit [<xref ref-type="bibr" rid="CR8">8</xref>] behave poorly on run-time performance. Fastp [<xref ref-type="bibr" rid="CR9">9</xref>] and a new version of FaQCs [<xref ref-type="bibr" rid="CR10">10</xref>] are written in C++, but they can’t totally satisfy the demands of different users. We will discuss about it in the following section. Therefore, there is still a great need for a highly efficient user-friendly tool that can preprocess NGS sequencing data in most cases. We have developed FastProNGS, a one-button and all-in-one tool for QC and adapter removal that can handle both single-end and paired-end sequences. Importantly, the efficiency of FastProNGS is much higher than almost all the current methods. We believe FastProNGS will greatly facilitate the preprocessing tasks with its fast and versatile functionality.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Tools developed for processing next-generation sequencing data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Software</th><th>Major functions</th><th>Programming language</th></tr></thead><tbody><tr><td>FastQC</td><td>Quality check</td><td>Java</td></tr><tr><td>PIQA</td><td>Quality check</td><td>R,C++</td></tr><tr><td>FASTX-Toolkit</td><td>A collection of tools to filter low quality reads and remove adapters</td><td>C,C++</td></tr><tr><td>Fqtools</td><td>FASTQ file manipulation, such as validate FASTQ and trim reads in a FASTQ file</td><td>C</td></tr><tr><td>seqtk</td><td>Toolkit for processing sequences in FASTA/Q formats, such as format conversion and subsampling of sequences</td><td>C</td></tr><tr><td>PRINSEQ</td><td>Filter, reformat and trim sequences</td><td>Perl, R</td></tr><tr><td>Multiqc</td><td>Aggregate results across many samples into a single report</td><td>Python</td></tr><tr><td>NGS QC Toolkit</td><td>Filter low quality reads and remove adapters.</td><td>Perl</td></tr><tr><td>Fastp</td><td>Filter low quality reads and trim adapters</td><td>C++</td></tr><tr><td>FaQCs</td><td>Filter low quality reads and trim adapters</td><td>C++</td></tr></tbody></table></table-wrap></p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par8">FastProNGS is written mainly in C and was developed on a Redhat Linux system. To create graphical charts in the report in HTML format, a JavaScript plug-in is included. FastProNGS implements a producer–consumer pattern to support multithreading. In the multithreaded mode, a single file is divided into parts and processed in parallel using multiple CPUs. FASTQ format is used for sequence data input and output and both can be gzip-compressed, which significantly reduces disk storage requirements and is compatible with several downstream analysis tools. FastProNGS supports single-end or paired-end sequences, as well as 33-based or 64-based quality score encodings. To better support downstream analyses, the output can also be obtained as several split files. Furthermore, considering different data sources and requirements for QC, all the parameters in FastProNGS can be used separately. For example, it can be used only to filter low quality reads without removing adapters, depending on the users’ requirements.</p>
    <sec id="Sec3">
      <title>Removing adapters</title>
      <p id="Par9">The alignment algorithm for adapter trimming is an extension of the semiglobal alignment algorithm with the cost function modified to achieve the desired effect of allowing arbitrary overlaps, which is similar to Cutadapt. Parameter –O or --overlap is the minimum overlap parameter between a read and an adapter which can be set to a value higher than the default of three to avoid discarding too many reads with random adapter matches. FastProNGS first searches for an exact match of the adapter sequence within the read sequences. If a match is found, the alignment procedure can be stopped. Auxiliary matrices in the dynamic programming algorithm are used to calculate the alignment error rate, which is defined as the number of errors divided by the number of aligned adapter bases. Only alignments below a given error rate threshold are found, which is defined by parameter –e or --error-rate. The calculation would be stopped at a column when the number of encountered errors exceed the threshold. FastProNGS can also map with indels and approve mismatches between a read and an adapter by default. If parameter –i or --no-indels is defined, only mismatches in alignments are allowed. Multiple adapter removal and 5′ or 3′ adapter trimming in the anchored or non-anchored case are also supported by using parameters such as –b and –B. Once the adapters are found within the sequences, they will be removed directly.</p>
    </sec>
    <sec id="Sec4">
      <title>Quality control and filtering</title>
      <p id="Par10">FastProNGS can perform read quality assessment and filtration based on GC content, occurrence of Ns, read length, and quality scores. Generally, the quality of bases at the ends of reads is substantially lower than the quality of the other bases, so it is crucial to trim these bases to improve the overall quality score of the reads. FastProNGS allows users to trim sequences containing low quality scores (parameter –Q or --quality-low) or Ns (parameter –n or --trim-n) at their 5′- and 3′-ends. Besides, if the total quality score of a read is under a user-defined threshold value (parameter –q or --quality-filter) or the number of Ns exceeds a defined value (parameter –r or --ratio-n), the read will be discarded. Reads that are not within a specified length range after trimming can also be removed, which is defined by parameters --min-length and --max-length. During the filtering process, it is crucial to maintain the pairing information, which is important for downstream analyses. In the process of trimming and adapter removal, paired sequences are processed sequentially. But in the filtering process, each paired reads are analyzed simultaneously. Thus, for paired-end reads, if only one end passes the filtration, both ends will be removed. Trimming is performed before adapter removal and filtering is done after adapter removal.</p>
    </sec>
    <sec id="Sec5">
      <title>Summary and statistics</title>
      <p id="Par11">The quality statistics of the input and output filtered data can be obtained in plain-text, JSON, or HTML format files for different downstream analyses. The statistics include the percentages of bases A, T, C, G, and N; adapter information on the reads; sequence length distribution; and number and percentage of reads filtered at each step. Graphs showing this information are exhibited with a JavaScript plug-in in the HTML report. The plots are editable by Chart Studio and are also resizable, interactive, and can be downloaded in a range of publication-ready formats.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results</title>
    <sec id="Sec7">
      <title>Workflow demonstration</title>
      <p id="Par12">We used a paired-end 150-bp whole-genome resequencing data set of soybean to demonstrate the functions of FastProNGS. The total base size of sequencing data was 12.4 GB. The FastProNGS parameters used for the test are shown in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>. Parameter “–Q 20” means the quality of bases lower than 20 were trimmed. Parameter “-n” means N bases at the 5′- and 3′-ends were trimmed. If at least three overlapping bases (parameter –O 3) between a read and adapter sequence were found, the overlapping bases will be removed from the read. Parameter “-O” can be set higher than 3 according to the requirements of users. The higher the parameter, the less reads with random adapter matches will be discarded, which may cause lower mapping rate in the downstream analysis. Parameter “-q 30,0.85” means if the percent of bases with more than 30 quality score is less than 85% for one read, the read will be removed. This parameter can be set to a higher value if only highly quality reads are required, such as “-q 30,0.9”. Parameter “-r 0.01” means reads with base N exceeding 1% will be removed. After filtering and trimming, reads with less than 20 bases were removed to improve the efficiency of downstream analyses by parameter “-m 20”. It is recommended to be a lower value in small RNA sequencing projects. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows the summary information provided in the HTML report, such as statistical graphs before and after the filtration.<fig id="Fig1"><label>Fig. 1</label><caption><p>Statistical graphs provided in an HTML report. (<bold>a</bold>). Overview of the range of quality values across all bases at each position in a FASTQ file. (<bold>b</bold>). Proportion of each base at each position in the FASTQ files before and after quality control. (<bold>c</bold>). Percentages of reads filtered by different criterion. ‘+’ indicates reads that were filtered by more than one criterion. (<bold>d</bold>). Number of reads containing adapter sequence at different overlapping bases. (<bold>e</bold>). Percentages of each base in the FASTQ files. (<bold>f</bold>). Length distribution of sequences</p></caption><graphic xlink:href="12859_2019_2936_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec8">
      <title>Program run-time efficiency</title>
      <p id="Par13">To compare the time cost of FastProNGS with existing tools, we first selected tools that performed both QC and adapter removal, namely NGS QC Toolkit (v2.3.3), FASTX-Toolkit (v0.0.14) FaQCs(v2.08) and fastp (v0.19.4). FASTX-Toolkit can only deal with one sequence file at a time, so the total running time is the sum of the processing time of each file. However, commonly a combination of two tools is used to preprocess sequence data; one for QC and the other for adapter removal. Therefore, we also chose PRINSEQ (version 0.20.4) and FastQC (version 0.11.5) as the QC software, Cutadapt (version 1.11) as the adapter removal software. The same dataset of soybean mentioned before was used. For all tools, the closest options for each parameter were used and are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. For multi-threaded tools such as FastQC, FaQCs, Fastp, cutadapt and FastProNGS, 8 CPUs were specified. Memory is not restricted. The tasks were run on a computer with 284GB memory and they can use as much memory as desired. All comparisons were run 10 times repeatedly to avoid any instability of the computer system. The real running time, CPU, memory, and IO cost were recorded and the results are shown in Table <xref rid="Tab2" ref-type="table">2</xref>, and Figs. <xref rid="Fig2" ref-type="fig">2</xref> and <xref rid="Fig3" ref-type="fig">3</xref>. Because some tools such as PRINSEQ do not support multithreading, we also compared the run-time efficiency where only one CPU was used by multiplying the real running time by the number of CPUs used. In both cases, FastProNGS was faster than the other QC tools except FastQC in the mode of one CPU and fastp if the output files were required to be gzippd. FastProNGS used more memory but much less IO than most tools. For most computers, we believe that the memory used by FastProNGS is small compared with the limited number of CPUs. FastProNGS has the same results with NGS QC Toolkit and Cutadapt respectively (Additional file <xref rid="MOESM2" ref-type="media">2</xref>, Figure S1). It should be noticed that FastProNGS and Cutadapt reported about 4% reads containing adapters, but only 1.57 and 0.92% reads were reported to contain adapter sequences by FaQCs and fastp respectively, mainly because they can only trim adapters and don’t allow mismatches and indels in the alignments. The detailed information of the comparisons are shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Run-time efficiency of tools for processing next-generation sequencing data</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Tools</th><th>run-time<sup>c</sup></th><th>rss (MB)<sup>d</sup></th><th>vmem (MB)<sup>e</sup></th><th>Average CPU utilization <sup>f</sup></th><th>rchar(GB)<sup>g</sup></th><th>wchar(GB)<sup>h</sup></th><th>run-time/CPU<sup>i</sup></th><th>Process .gz<sup>j</sup></th></tr></thead><tbody><tr><td>NGS QC Toolkit</td><td>344</td><td>3062</td><td>3400</td><td>3.312</td><td>88</td><td>54</td><td>1139</td><td>R + W</td></tr><tr><td>FASTX-Toolkit</td><td>308</td><td>10</td><td>29</td><td>1.556</td><td>60</td><td>46</td><td>479</td><td>W</td></tr><tr><td>PRINSEQ</td><td>252</td><td>20</td><td>115</td><td>1.173</td><td>177</td><td>99</td><td>296</td><td>–</td></tr><tr><td>Fastqc</td><td>7</td><td>395</td><td>2150</td><td>2.403</td><td>6</td><td>0</td><td>17</td><td>R</td></tr><tr><td>Cutadapt<sup>a</sup></td><td>4</td><td>670</td><td>1645</td><td>6.548</td><td>56</td><td>75</td><td>26</td><td>R</td></tr><tr><td>Cutadapt<sup>b</sup></td><td>58</td><td>675</td><td>1659</td><td>1.605</td><td>84</td><td>84</td><td>93</td><td>R + W</td></tr><tr><td>FastProNGS<sup>b</sup></td><td>3</td><td>7168</td><td>7291</td><td>6.396</td><td>6</td><td>22</td><td>19</td><td>R + W</td></tr><tr><td>FastProNGS<sup>a</sup></td><td>13</td><td>7066</td><td>7270</td><td>6.008</td><td>6</td><td>4</td><td>78</td><td>R</td></tr><tr><td>FaQC</td><td>27</td><td>121</td><td>644</td><td>3.876</td><td>7</td><td>27</td><td>105</td><td>R</td></tr><tr><td>fastp<sup>a</sup></td><td>8</td><td>723</td><td>1167</td><td>4.614</td><td>7</td><td>5</td><td>36</td><td>R + W</td></tr><tr><td>fastp<sup>b</sup></td><td>7</td><td>720</td><td>1110</td><td>5.421</td><td>7</td><td>21</td><td>40</td><td>R</td></tr></tbody></table><table-wrap-foot><p>All tools were installed locally and run against the test data set</p><p><sup>a</sup>Output files are gzip-compressed</p><p><sup>b</sup>Output files are not compressed</p><p><sup>c</sup>Minimum task execution time (minutes)</p><p><sup>d</sup>Mean real memory (resident set) size of the process (MB)</p><p><sup>e</sup>Mean virtual memory size of the process (MB)</p><p><sup>f</sup>Average number of CPUs utilized by the process</p><p><sup>g</sup>Number of bytes the process read (GB)</p><p><sup>h</sup>Number of bytes the process wrote (GB)</p><p><sup>i</sup>Minimum task execution time using one CPU (minutes)</p><p><sup>j</sup>Process .gz indicates if the test was natively read (R) or write (W) compressed files. ‘--’ indicates neither read or write compressed files</p></table-wrap-foot></table-wrap><fig id="Fig2"><label>Fig. 2</label><caption><p>Time costs of different preprocessing tools. The difference between Cutadapt_gz and Cutadapt is whether output files are compressed. Cutadapt_gz indicates the output files were gzip-compressed. <bold>a</bold>. Time cost of different tools using multiple threads. <bold>b</bold>. Time cost of different tools when only one CPU was used</p></caption><graphic xlink:href="12859_2019_2936_Fig2_HTML" id="MO2"/></fig><fig id="Fig3"><label>Fig. 3</label><caption><p>Resources used by different preprocessing tools. <bold>a</bold>. Number of CPUs. <bold>b</bold>. Mean virtual memory size (vmem) and real memory (resident set) size (rss). <bold>c</bold>. Mean number of read and write bytes</p></caption><graphic xlink:href="12859_2019_2936_Fig3_HTML" id="MO3"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par14">With the increasing amount of sequencing data generated per sample, the run-time efficiency is becoming high demanding in data processing. FastProNGS is an easy-to-use stand-alone tool written in C that provides convenient utilities for preprocessing Illumina sequencing data. It supports parallelization to speed up the QC and adapter removal processes by splitting raw data files internally, which saves both time and trivial troubles for users. All the preprocessing functions required for downstream analyses of NGS data can be accomplished using only one command-line. The processing results can be output as plain-text, JSON, or HTML format files, which is suitable for various analysis situations. Ovarall, FastProNGS contains the most comprehensive functions and has advantages in run-time efficiency compared with almost all the existing tools. In the future, we will further optimize FastProNGS, such as improvement in memory usage and run-time efficiency when results are required to be gzipped.</p>
  </sec>
  <sec id="Sec10">
    <title>Availability and requirements</title>
    <p id="Par15">Project name: FastProNGS.</p>
    <p id="Par16">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/Megagenomics/FastProNGS">https://github.com/Megagenomics/FastProNGS</ext-link></p>
    <p id="Par17">Operation system: Linux.</p>
    <p id="Par18">Other requirements: libxml2–2.9.7.</p>
    <p id="Par19">Programming languages: C, JAVA.</p>
    <p id="Par20">License: GNU GPL.</p>
    <p id="Par21">Any restrictions to use by non-academics: license needed.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional files</title>
    <sec id="Sec11">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2019_2936_MOESM1_ESM.docx">
            <label>Additional file 1:</label>
            <caption>
              <p>FastProNGS: Fast Preprocessing for next-generation sequencing reads– Supplementary data FastProNGS Usage (DOCX 107 kb)</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2019_2936_MOESM2_ESM.png">
            <label>Additional file 2:</label>
            <caption>
              <p>The comparison results of FastProNGS, NGS QC Toolkit and Cutadapt. (PNG 424 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par4">Next Generation Sequence</p>
        </def>
      </def-item>
      <def-item>
        <term>QC</term>
        <def>
          <p id="Par5">Quality Control</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Xiaoshuang Liu, Zhenhe Yan and Chao Wu contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <p>We like to thank Dr. Hua Xu for the valuable advice for this project.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>ZY implemented the program. XL1 and CW wrote the manuscript. YY offered the test data. XL2 tested QC tools. GZ conceived and designed the study. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Not applicable.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The datasets supporting the conclusions of this article are included within the article and its Additional file <xref rid="MOESM1" ref-type="media">1</xref>. The source codes and small test data of FastProNGS are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/Megagenomics/FastProNGS">https://github.com/Megagenomics/FastProNGS</ext-link>.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par22">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par23">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par24">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schirmer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>D'Amore</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ijaz</surname>
            <given-names>UZ</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Quince</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Illumina error profiles: resolving fine-scale variation in metagenomic sequencing data</article-title>
        <source>BMC Bioinformatics</source>
        <year>2016</year>
        <volume>17</volume>
        <fpage>125</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-016-0976-y</pub-id>
        <pub-id pub-id-type="pmid">26968756</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Pong</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Law</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Comparison of next-generation sequencing systems</article-title>
        <source>J Biomed Biotechnol</source>
        <year>2012</year>
        <volume>2012</volume>
        <fpage>251364</fpage>
        <?supplied-pmid 22829749?>
        <pub-id pub-id-type="pmid">22829749</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Toolkit for processing sequences in FASTA/Q formats. GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/seqtk">https://github.com/lh3/seqtk</ext-link>. Accessed 5 January 2018.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Babraham Bioinformatics, FastQC:A quality control tool for high throughput sequence data. <ext-link ext-link-type="uri" xlink:href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/">http://www.bioinformatics.babraham.ac.uk/projects/fastqc/</ext-link>. Accessed 5 January 2018.</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martinez-Alcantara</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ballesteros</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rojas</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Koshinsky</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Fofanov</surname>
            <given-names>VY</given-names>
          </name>
          <name>
            <surname>Havlak</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Fofanov</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>PIQA: pipeline for Illumina G1 genome analyzer data quality assessment</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>18</issue>
        <fpage>2438</fpage>
        <lpage>2439</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp429</pub-id>
        <pub-id pub-id-type="pmid">19602525</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schmieder</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Edwards</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Quality control and preprocessing of metagenomic datasets</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>6</issue>
        <fpage>863</fpage>
        <lpage>864</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr026</pub-id>
        <pub-id pub-id-type="pmid">21278185</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">FASTX-Toolkit: FASTQ/a short-reads pre-processing tools. <ext-link ext-link-type="uri" xlink:href="http://hannonlab.cshl.edu/fastx_toolkit/">http://hannonlab.cshl.edu/fastx_toolkit/</ext-link>. Accessed 5 January 2018.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patel</surname>
            <given-names>RK</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>NGS QC toolkit: a toolkit for quality control of next generation sequencing data</article-title>
        <source>PLoS One</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>2</issue>
        <fpage>e30619</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0030619</pub-id>
        <pub-id pub-id-type="pmid">22312429</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Chen S, Zhou Y, Chen Y, Gu J. Fastp: an ultra-fast all-in-one FASTQ preprocessor. bioRxiv. 2018:274100.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lo</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Chain</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>Rapid evaluation and quality control of next generation sequencing data with FaQCs</article-title>
        <source>BMC Bioinformatics</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>366</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-014-0366-2</pub-id>
        <pub-id pub-id-type="pmid">25408143</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

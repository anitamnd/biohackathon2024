<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9869717</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbac085</article-id>
    <article-id pub-id-type="publisher-id">vbac085</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Porechop_ABI: discovering unknown adapters in Oxford Nanopore Technology sequencing reads for downstream trimming</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Bonenfant</surname>
          <given-names>Quentin</given-names>
        </name>
        <aff><institution>Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL—Centre de Recherche en Informatique Signal et Automatique de Lille</institution>, Lille F-59000, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1170-8376</contrib-id>
        <name>
          <surname>Noé</surname>
          <given-names>Laurent</given-names>
        </name>
        <aff><institution>Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL—Centre de Recherche en Informatique Signal et Automatique de Lille</institution>, Lille F-59000, <country country="FR">France</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5305-9987</contrib-id>
        <name>
          <surname>Touzet</surname>
          <given-names>Hélène</given-names>
        </name>
        <aff><institution>Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL—Centre de Recherche en Informatique Signal et Automatique de Lille</institution>, Lille F-59000, <country country="FR">France</country></aff>
        <xref rid="vbac085-cor1" ref-type="corresp"/>
        <!--helene.touzet@univ-lille.fr-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Zhang</surname>
          <given-names>Zhang</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbac085-cor1">To whom correspondence should be addressed. <email>helene.touzet@univ-lille.fr</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-11-21">
      <day>21</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbac085</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>07</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>31</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>23</day>
        <month>1</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbac085.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Oxford Nanopore Technologies (ONT) sequencing has become very popular over the past few years and offers a cost-effective solution for many genomic and transcriptomic projects. One distinctive feature of the technology is that the protocol includes the ligation of adapters to both ends of each fragment. Those adapters should then be removed before downstream analyses, either during the basecalling step or by explicit trimming. This basic task may be tricky when the definition of the adapter sequence is not well documented.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We have developed a new method to scan a set of ONT reads to see if it contains adapters, without any prior knowledge on the sequence of the potential adapters, and then trim out those adapters. The algorithm is based on approximate <italic toggle="yes">k</italic>-mers and is able to discover adapter sequences based on their frequency alone. The method was successfully tested on a variety of ONT datasets with different flowcells, sequencing kits and basecallers.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>The resulting software, named Porechop_ABI, is open-source and is available at <ext-link xlink:href="https://github.com/bonsai-team/Porechop_ABI" ext-link-type="uri">https://github.com/bonsai-team/Porechop_ABI</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics advances</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>French National Research Agency</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001665</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>ANR-16-CE23-0001</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Oxford Nanopore Technology (ONT) is a versatile sequencing technology that produces long reads and has many applications, including <italic toggle="yes">de novo</italic> genome sequencing, metagenomics (<xref rid="vbac085-B4" ref-type="bibr">Moss <italic toggle="yes">et al.</italic>, 2020</xref>), structural variants (<xref rid="vbac085-B8" ref-type="bibr">Sakamoto <italic toggle="yes">et al.</italic>, 2021</xref>) and transcriptome sequencing (<xref rid="vbac085-B9" ref-type="bibr">Sessegolo <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="vbac085-B12" ref-type="bibr">Workman <italic toggle="yes">et al.</italic>, 2019</xref>). One common feature of all sequencing kits and flowcells is that library preparation includes ligation of adapter sequences to both ends of DNA, cDNA or RNA fragments. These adapters facilitate strand capture and loading of a processive enzyme.</p>
    <p>Since the adapters are sequenced with the fragment, this implies that resulting reads may contain full-length or partial adapters due to incomplete sequencing.</p>
    <p>These extra sequences can be removed by <italic toggle="yes">read trimming</italic>. It allows one to deal with adapter contamination and to avoid unexpected interferences in downstream analyses. Indeed, read trimming leads to better contiguity in genome assemblies (<xref rid="vbac085-B5" ref-type="bibr">Murigneux <italic toggle="yes">et al.</italic>, 2021</xref>), higher accuracy in RNA-seq reads clustering (<xref rid="vbac085-B1" ref-type="bibr">De la Rubia <italic toggle="yes">et al.</italic>, 2022</xref>), to cite a few examples of application. Tools such as Porechop that finds and removes adapters, were designed to perform this task efficiently (<xref rid="vbac085-B10" ref-type="bibr">Wick, 2017</xref>) and are widely used by the community. The main limitation however is that such tools rely on a static database of known adapters. This prerequisite can be a critical issue when the adapters used are not known, when they are not present in the database or when there is no information about the fact that the reads have already been trimmed out or not. In particular, Porechop database is no longer maintained since October 2018. More recently, ONT released the Guppy toolkit that contains several basecalling and post-processing algorithms, including adapter trimming. But, this toolkit can be seen as a black box with no control on the output. Moreover, it cannot be applied to previously published public datasets when the FAST5 files are no longer available.</p>
    <p>In this context, it is therefore particularly useful to have tools that can deal with adapters of unknown origin. This problem has been recently addressed in <xref rid="vbac085-B6" ref-type="bibr">Ranjan <italic toggle="yes">et al.</italic> (2022)</xref> that proposes an approach based on visual confirmation and input-assisted removal of adapter contamination.</p>
    <p>In this article, we present an alternative way to deal with undocumented adapters. We have developed a new algorithm to automatically infer adapter sequences from raw reads alone, without any external knowledge or database. The method determines whether the reads contain adapters, and if so what the content of these adapters is. It uses techniques coming from string algorithms, with approximate <italic toggle="yes">k</italic>-mer, full-text compressed index and assembly graphs.</p>
    <p>The method is available as an extension of the existing Porechop tool, and the resulting software is named Porechop_ABI (ABI stands for <italic toggle="yes">ab initio</italic>). This new tool is proving to be useful to clean untrimmed reads for which the adapter sequences are not documented and to check whether a dataset has been trimmed or not. It is even able to find leftover adapters in datasets that have been previously processed with Guppy with trimming mode activated or to deal with datasets with several distinct adapters.</p>
  </sec>
  <sec>
    <title>2 Algorithm for adapter inference</title>
    <p>The goal is to design a computational method that is able to infer, or to accurately guess, the adapter sequences from a set of untrimmed reads. The starting point of the method is that adapters are expected to be found mainly at each extremity on untrimmed reads and are over-represented sequences that could be distinguished from the biological content. To work properly, the method should fulfill several additional constraints: it should be tolerant of sequencing errors; it should scale to large datasets; it should deal with adapters of varying length (from 16 nt to more than 30 nt); it should accommodate to the presence of several distinct adapters in the dataset. For that, we have developed a new algorithm that is based on four main steps:
</p>
    <list list-type="roman-lower">
      <list-item>
        <p>Reads sampling: Select 10 independent samples of 40 000 reads from the dataset, then for each read of the samples select start and end regions of length 100 nt.</p>
      </list-item>
      <list-item>
        <p>Approximate <italic toggle="yes">k</italic>-mer counting: Find and count <italic toggle="yes">k</italic>-mers that are over-represented throughout the start (respectively end) region. This search allows for edit errors (insertions, deletions and mismatches).</p>
      </list-item>
      <list-item>
        <p>Adapter construction: Reconstruct the start (respectively end) adapter sequence by assembling <italic toggle="yes">k</italic>-mers using an assembly graph based on most represented <italic toggle="yes">k</italic>-mers.</p>
      </list-item>
      <list-item>
        <p>Consensus between samples: Align and compare the start (respectively end) adapters found for each of the 10 samples, and build a consensus sequence. When the sequences are not fully compatible, when there is no single consensus sequence, the method outputs several adapters associated with a support score that corresponds to the proportion of samples containing the adapter.</p>
      </list-item>
    </list>
    <p>The algorithm is described in full details in <xref rid="sup1" ref-type="supplementary-material">Section S1</xref> of <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
  </sec>
  <sec>
    <title>3 Implementation</title>
    <p>The algorithm is implemented in C++ and Python, using the SEQAN library (<xref rid="vbac085-B7" ref-type="bibr">Reinert <italic toggle="yes">et al.</italic>, 2017</xref>) and the NetworkX library (<ext-link xlink:href="https://networkx.org/" ext-link-type="uri">https://networkx.org/</ext-link>). SEQAN provides Optimal Search Schemes together with a bidirectional Burrows–Wheeler Transform and a FM-index for read indexing, which makes the search of approximate <italic toggle="yes">k</italic>-mers very efficient (<xref rid="vbac085-B2" ref-type="bibr">Hauswedell, 2022</xref>; <xref rid="vbac085-B3" ref-type="bibr">Kianfar <italic toggle="yes">et al.</italic>, 2018</xref>). NetworkX is a graph library that is used in the assembly step of the algorithm.</p>
    <p>This new code is available as an extension of Porechop to form a new software: Porechop_ABI. The algorithm presented in Section 2 is implemented in the ABI module (<italic toggle="yes">ab initio</italic>), which is interfaced with Porechop. Porechop_ABI, as a whole, allows one to automatically infer adapters and trim them in a single run. In practice, adapter sequences found by the ABI module are loaded in the database used by Porechop (file <monospace>adapter.py</monospace>). This organization is summarized in <xref rid="vbac085-F1" ref-type="fig">Figure 1</xref>. It is also possible for the user to only run the ABI module. In this specific case, the output is simply a set a putative start adapters and end adapters, when such sequences are extracted from the raw reads.</p>
    <fig position="float" id="vbac085-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Organization of Porechop_ABI. (1) The tool takes as input a set of reads. When those reads are untrimmed, the ABI module is able to determine the sequences of the adapters that have been used in the sequencing protocol. (2) Those sequences are then ready to be used by Porechop for downstream trimming. If the reads are already trimmed out, no adapter sequence is returned by the ABI module</p>
      </caption>
      <graphic xlink:href="vbac085f1" position="float"/>
    </fig>
    <p>Installation can be performed directly from the source code, or using the conda package management system from the bioconda channel.</p>
  </sec>
  <sec>
    <title>4 Experimental results</title>
    <p>We present the results of the software on a series of datasets, which are listed in <xref rid="vbac085-T1" ref-type="table">Table 1</xref>. The complete source of each data along with its description is available in <xref rid="sup1" ref-type="supplementary-material">Section S2</xref> of <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>, where we also provide additional details on experimental results and one more dataset from the Nanopore WGS Consortium composed of a human poly(A) transcriptome from B-lymphocyte cell line. In all experiments, Porechop_ABI was used with default parameters.</p>
    <table-wrap position="float" id="vbac085-T1">
      <label>Table 1.</label>
      <caption>
        <p>List of tested datasets: the first dataset is composed of simulated reads (with the read simulator BadReads)</p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
          <col valign="top" align="center" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1">Organism, tissue</th>
            <th rowspan="1" colspan="1">Type</th>
            <th rowspan="1" colspan="1">Flowcell</th>
            <th rowspan="1" colspan="1">Sequencing Kit</th>
            <th rowspan="1" colspan="1">Base caller</th>
            <th rowspan="1" colspan="1">Source</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">Mouse</td>
            <td rowspan="1" colspan="1">cDNA</td>
            <td colspan="4" rowspan="1">Simulated with BadReads</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <italic toggle="yes">Eucalyptus pauciflora</italic>
            </td>
            <td rowspan="1" colspan="1">DNA</td>
            <td rowspan="1" colspan="1">r9.5</td>
            <td rowspan="1" colspan="1">SQK-LSK108</td>
            <td rowspan="1" colspan="1">Albacore 2.0.2</td>
            <td rowspan="1" colspan="1">SRR7153074.1</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <italic toggle="yes">Prunus dulcis</italic>
            </td>
            <td rowspan="1" colspan="1">DNA</td>
            <td rowspan="1" colspan="1">r9.4</td>
            <td rowspan="1" colspan="1">SQK-NSK007</td>
            <td rowspan="1" colspan="1">Metrichor</td>
            <td rowspan="1" colspan="1">SRA ERR3430401</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Mouse brain</td>
            <td rowspan="1" colspan="1">cDNA</td>
            <td rowspan="1" colspan="1">r9.4</td>
            <td rowspan="1" colspan="1">SQK-LSK008</td>
            <td rowspan="1" colspan="1">Metrichor</td>
            <td rowspan="1" colspan="1">SRA PRJEB25574</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <italic toggle="yes">Zea mays</italic>
            </td>
            <td rowspan="1" colspan="1">cDNA</td>
            <td rowspan="1" colspan="1">r9.4</td>
            <td rowspan="1" colspan="1">SQK-PCS108</td>
            <td rowspan="1" colspan="1">Guppy</td>
            <td rowspan="1" colspan="1">SRA PRJNA643165</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">
              <italic toggle="yes">Percina kusha</italic>
            </td>
            <td rowspan="1" colspan="1">mtDNA</td>
            <td rowspan="1" colspan="1">FLO-FLG001</td>
            <td rowspan="1" colspan="1">SQK-LSK110</td>
            <td rowspan="1" colspan="1">Guppy</td>
            <td rowspan="1" colspan="1">SRA PRJNA742674</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <p><italic toggle="yes">Note</italic>: The three following datasets are composed of cDNA and DNA reads for various organisms, flowcells, basecallers and adapter sequences. The two last datasets contain reads that have previously been processed with the basecaller Guppy and that are not supposed to exhibit adapter sequences.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>The first dataset is composed of artificial long reads generated using BadRead (<xref rid="vbac085-B11" ref-type="bibr">Wick, 2019</xref>) from the reference assembly of the mouse transcriptome for the GRCm38 genome. Porechop_ABI finds one single sequence for the start adapter and one single sequence for the end region, both with support 100%. See <xref rid="vbac085-F2" ref-type="fig">Figure 2</xref>. Those two sequences each match with BadReads adapters: 26 out of 28 nt for the start adapter and 21 out of 22 nt for the end adapter. Regarding the end adapter, this result is particularly convincing because, according to BadReads specification, only half of the reads are intended to contain the end adapter, with a mean length of 20% of the original adapter across the whole dataset. Even in this case, Porechop_ABI is able to accurately recover the signal.</p>
    <fig position="float" id="vbac085-F2">
      <label>Fig. 2.</label>
      <caption>
        <p>Start and end adapters for the BadRead, <italic toggle="yes">E.pauciflora</italic>, <italic toggle="yes">P.dulcis</italic>, <italic toggle="yes">Z.mays</italic> and <italic toggle="yes">P.kusha</italic> datasets. For each example, we searched for the sequences of the start and end adapters. The first sequence (top) is the reference adapter sequence, such as documented in the associated publication or found in the Porechop database. The other sequence (bottom) is the sequence determined <italic toggle="yes">ab initio</italic> by Porechop_ABI from the raw reads, without knowing the reference sequence. The percentage indicated with the Porechop_ABI sequence is the support score, computed during the sampling phase of the algorithm. Identical positions between the reference sequence and Porechop_ABI adapter are marked by stars</p>
      </caption>
      <graphic xlink:href="vbac085f2" position="float"/>
    </fig>
    <p>The second dataset is a high-coverage sequencing of the genome of a <italic toggle="yes">Eucalyptus pauciflora</italic> individual. Once again, Porechop_ABI finds a single start adapter sequence and a single end adapter sequence, both with support 100% (<xref rid="vbac085-F2" ref-type="fig">Fig. 2</xref>). As for the start region, the adapter found by Porechop_ABI is very similar to the top adapter of SQK-NSK007-Y: SQK-NSK007-Y-top is 28 nt long, and we correctly recovered 26 nucleotides at the 3′ end. Our sequence does, however, contain four extra-nucleotides at the 5′ extremity. To see if this difference has an impact on the subsequent trimming step, we compared trimmed reads with each one of the two adapter sequences. This comparison shows that only 5% of the total amount of reads have distinct trimming sites. Regarding the end region, the majority of reads (74%) have not been trimmed out with either the SQK-NSK007_Y_bottom adapter or the adapter found with Porechop_ABI. For the remaining reads, there is a strong overlap (more than 60%) between the two methods. We also used this dataset to estimate the stability of results across samplings. We ran Porechop_ABI 100 times independently on the whole dataset (818 267 reads). For the start adapter, all runs produced exactly the same output, with 100% support at each try. For the end adapter, there are some minor variations: 91 tests obtained the same sequence with maximal support (100%), 8 tests obtained the same sequence with a lower support (98.3%) and one test produced a sequence with one extra nucleotide (100% support). This shows that the sampling strategy is stable, and that the software can be trustfully used without re-sampling.</p>
    <p>The third dataset is composed of genomic reads for the <italic toggle="yes">Prunus dulcis</italic>, the almond tree. Once again, Porechop_ABI finds one start adapter and one end adapter that both closely match the expected sequences and that are suitable for trimming.</p>
    <p>All those three first datasets were intended to contain only one start adapter and one end adapter. The fourth dataset, the mouse brain, was sequenced with a custom protocol for cDNA, and is supposed to contain multiple distinct adapters. In this context, Porechop_ABI identified two distinct sequences for the start region, both with support 50% (see <xref rid="vbac085-F3" ref-type="fig">Fig. 3</xref>). Those sequences share the same initial motif, which appears to be SQK-NSK007_Y_Top, and the same final motif, which is SQK-MAP006_Short_Y_Top_LI32. They differ with the middle part: one sequence contains PCR_1_Start while the other one contains PCR_2_start. The end region exhibits the same three-part pattern, with SQK-MAP006_Short_Y_Bottom_LI33 at the beginning, followed by either PCR_3_End or PCR_2_End in the middle, and then SQK-NSK007_Y_Bottom at the end. This demonstrates the ability of Porechop_ABI to successfully manage datasets with mixed adapters. To give an idea on the runtime, the execution on this dataset took 70 min on a PC with 16G RAM [Intel(R) Core(TM) i5-3570 CPU] and four threads: 15% of the time is dedicated to ABI preprocessing, and 85% of the time is dedicated to adapter clipping with Porechop. It means that the extra cost of adapter inference is reasonable compared to the whole processing time.</p>
    <fig position="float" id="vbac085-F3">
      <label>Fig. 3.</label>
      <caption>
        <p>Start and end adapters for the mouse brain dataset</p>
      </caption>
      <graphic xlink:href="vbac085f3" position="float"/>
    </fig>
    <p>The two last examples of <xref rid="vbac085-T1" ref-type="table">Table 1</xref>, cDNA sequencing of <italic toggle="yes">Zea mays</italic> and mitochondrial genome sequencing of <italic toggle="yes">Percina kusha</italic> (the fish bridled darter) are datasets that have each been previously basecalled with Guppy with trimming mode activated. The question is whether there are still adapter traces that could be detected by the program. In both cases, Porechop_ABI was able to extract a signal that corresponds to residual PCR adapters (<xref rid="vbac085-F2" ref-type="fig">Fig. 2</xref>). For the maize dataset, it appeared that the Porechop_ABI sequence of the start adapter is found in 31% reads in the region [1,150], and of the end adapter in 39% reads in the region [−150,−1]. For the bridled starter, traces of the start adapter are found in 81% reads in the region [1,150]. There is no end adapter detected.</p>
    <p>Lastly, we also evaluated the precision of the method by testing the program on negative datasets, which are not supposed to exhibit adapters. The first type of negative datasets is composed of random sequences. The second type of negative datasets is composed of sequencing reads (DNA and cDNA) for which we have removed start and end regions (100 nt). Exhaustive results are presented in Subsection 2.6 of <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>. In all cases, Porechop_ABI found no motif.</p>
  </sec>
  <sec>
    <title>5 Discussion</title>
    <p>We have developed a new software that meets the initial requirements: to infer the adapter sequences in ONT reads, without any prior knowledge about the adapters. It allows one to determine whether the reads have already been trimmed out, and if not, which adapters have been used. This algorithm is integrated into the open-source software Porechop, which makes it easy to use and allows trimming out in a single pass once the adapters have been identified.</p>
    <p>We believe that Porechop_ABI can be useful to help analyzing freshly sequenced data, by verifying that the reads indeed contain the expected adapters or that they have been accurately trimmed out. It also facilitates the usage of data available on public repositories, that often lack metadata.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>vbac085_Supplementary_Data</label>
      <media xlink:href="vbac085_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We are grateful to Ryan Wick for developing Porechop, on which our porechop_ABI extension is based, and for the useful and fruitful exchanges during this project. We also thank the anonymous reviewers for their thoughtful comments and suggestions, both on software and manuscript.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by the French National Research Agency [ASTER ANR-16-CE23-0001].</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbac085-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>De la Rubia</surname><given-names>I.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>RATTLE: reference-free reconstruction and quantification of transcriptomes from nanopore sequencing</article-title>. <source>Genome Biol</source>., <volume>23</volume>, 153. <pub-id pub-id-type="doi">10.1186/s13059-022-02715-w</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbac085-B2">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Hauswedell</surname><given-names>H.</given-names></string-name></person-group> (<year>2022</year>) <source>Sequence Analysis and Modern C++</source>. <publisher-name>Springer</publisher-name>.</mixed-citation>
    </ref>
    <ref id="vbac085-B3">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Kianfar</surname><given-names>K.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) Optimum Search Schemes for approximate string matching using bidirectional FM-index. <italic toggle="yes">bioRxiv.</italic></mixed-citation>
    </ref>
    <ref id="vbac085-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Moss</surname><given-names>E.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Complete, closed bacterial genomes from microbiomes using nanopore sequencing</article-title>. <source>Nat. Biotechnol</source>., <volume>38</volume>, <fpage>701</fpage>–<lpage>707</lpage>.<pub-id pub-id-type="pmid">32042169</pub-id></mixed-citation>
    </ref>
    <ref id="vbac085-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Murigneux</surname><given-names>V.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>MicroPIPE: validating an end-to-end workflow for high-quality complete bacterial genome construction</article-title>. <source>BMC Genomics</source>, <volume>22</volume>, <fpage>474</fpage>.<pub-id pub-id-type="pmid">34172000</pub-id></mixed-citation>
    </ref>
    <ref id="vbac085-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ranjan</surname><given-names>P.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>SNIKT: sequence-independent adapter identification and removal in long-read shotgun sequencing data</article-title>. <source>Bioinformatics</source>, <volume>38</volume>, <fpage>3830</fpage>–<lpage>3832</lpage>.<pub-id pub-id-type="pmid">35695743</pub-id></mixed-citation>
    </ref>
    <ref id="vbac085-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Reinert</surname><given-names>K.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>The SeqAn C++ template library for efficient sequence analysis: a resource for programmers</article-title>. <source>J. Biotechnol</source>., <volume>261</volume>, <fpage>157</fpage>–<lpage>168</lpage>.<pub-id pub-id-type="pmid">28888961</pub-id></mixed-citation>
    </ref>
    <ref id="vbac085-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sakamoto</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Application of long-read sequencing to the detection of structural variants in human cancer genomes</article-title>. <source>Comput. Struct. Biotechnol. J</source>., <volume>19</volume>, <fpage>4207</fpage>–<lpage>4216</lpage>.<pub-id pub-id-type="pmid">34527193</pub-id></mixed-citation>
    </ref>
    <ref id="vbac085-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sessegolo</surname><given-names>C.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Transcriptome profiling of mouse samples using nanopore sequencing of cDNA and RNA molecules</article-title>. <source>Sci. Rep</source>., <volume>9</volume>, 14908. <pub-id pub-id-type="doi">10.1038/s41598-019-51470-9</pub-id>.</mixed-citation>
    </ref>
    <ref id="vbac085-B10">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wick</surname><given-names>R.</given-names></string-name></person-group> (<year>2017</year>) Porechop: adapter trimmer for Oxford Nanopore reads. <ext-link xlink:href="https://github.com/rrwick/Porechop/" ext-link-type="uri">https://github.com/rrwick/Porechop/</ext-link> (August 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="vbac085-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wick</surname><given-names>R.</given-names></string-name></person-group> (<year>2019</year>) <article-title>Badread: simulation of error-prone long reads</article-title>. <source>J. Open Source Softw</source>., <volume>4</volume>, <fpage>1316</fpage>.</mixed-citation>
    </ref>
    <ref id="vbac085-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Workman</surname><given-names>R.E.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Nanopore native RNA sequencing of a human poly(A) transcriptome</article-title>. <source>Nat. Methods</source>, <volume>16</volume>, <fpage>1297</fpage>–<lpage>1305</lpage>.<pub-id pub-id-type="pmid">31740818</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9913046</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbad005</article-id>
    <article-id pub-id-type="publisher-id">vbad005</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Article</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Software</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Snekmer: a scalable pipeline for protein sequence fingerprinting based on amino acid recoding</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Chang</surname>
          <given-names>Christine H</given-names>
        </name>
        <aff><institution>Biological Sciences Division, Pacific Northwest National Laboratory</institution>, Richland, WA 99352, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nelson</surname>
          <given-names>William C</given-names>
        </name>
        <aff><institution>Biological Sciences Division, Pacific Northwest National Laboratory</institution>, Richland, WA 99352, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jerger</surname>
          <given-names>Abby</given-names>
        </name>
        <aff><institution>Biological Sciences Division, Pacific Northwest National Laboratory</institution>, Richland, WA 99352, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3172-5253</contrib-id>
        <name>
          <surname>Wright</surname>
          <given-names>Aaron T</given-names>
        </name>
        <aff><institution>Department of Biology, Baylor University</institution>, Waco, TX 76798, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-9470-7124</contrib-id>
        <name>
          <surname>Egbert</surname>
          <given-names>Robert G</given-names>
        </name>
        <aff><institution>Biological Sciences Division, Pacific Northwest National Laboratory</institution>, Richland, WA 99352, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-2961-2572</contrib-id>
        <name>
          <surname>McDermott</surname>
          <given-names>Jason E</given-names>
        </name>
        <aff><institution>Biological Sciences Division, Pacific Northwest National Laboratory</institution>, Richland, WA 99352, <country country="US">USA</country></aff>
        <aff><institution>Department of Molecular Microbiology and Immunology, Oregon Health &amp; Science University</institution>, Portland, OR 97239, <country country="US">USA</country></aff>
        <xref rid="vbad005-cor1" ref-type="corresp"/>
        <!--jason.mcdermott@pnnl.gov-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Arighi</surname>
          <given-names>Cecilia</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbad005-cor1">To whom correspondence should be addressed. <email>jason.mcdermott@pnnl.gov</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-02-02">
      <day>02</day>
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>02</day>
      <month>2</month>
      <year>2023</year>
    </pub-date>
    <volume>3</volume>
    <issue>1</issue>
    <elocation-id>vbad005</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>3</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>16</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>13</day>
        <month>1</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>01</day>
        <month>2</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>10</day>
        <month>2</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution-NonCommercial License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">https://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbad005.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>The vast expansion of sequence data generated from single organisms and microbiomes has precipitated the need for faster and more sensitive methods to assess evolutionary and functional relationships between proteins. Representing proteins as sets of short peptide sequences (kmers) has been used for rapid, accurate classification of proteins into functional categories; however, this approach employs an exact-match methodology and thus may be limited in terms of sensitivity and coverage. We have previously used similarity groupings, based on the chemical properties of amino acids, to form reduced character sets and recode proteins. This amino acid recoding (AAR) approach simplifies the construction of protein representations in the form of kmer vectors, which can link sequences with distant sequence similarity and provide accurate classification of problematic protein families.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we describe Snekmer, a software tool for recoding proteins into AAR kmer vectors and performing either (i) construction of supervised classification models trained on input protein families or (ii) clustering for <italic toggle="yes">de novo</italic> determination of protein families. We provide examples of the operation of the tool against a set of nitrogen cycling families originally collected using both standard hidden Markov models and a larger set of proteins from Uniprot and demonstrate that our method accurately differentiates these sequences in both operation modes.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Snekmer is written in Python using Snakemake. Code and data used in this article, along with tutorial notebooks, are available at <ext-link xlink:href="http://github.com/PNNL-CompBio/Snekmer" ext-link-type="uri">http://github.com/PNNL-CompBio/Snekmer</ext-link> under an open-source BSD-3 license.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics Advances</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Department of Energy</institution>
            <institution-id institution-id-type="DOI">10.13039/100000015</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>The ability to rapidly and inexpensively sequence diverse biological samples has driven a sharp increase in the amount of sequence information available. However, analysis of functional annotation assignment has revealed that, on average, only â¼50â60% of genes are assigned any functional annotation using current standard annotation techniques, and only about half of those receive specific functional assignment (<xref rid="vbad005-B19" ref-type="bibr">Lobb <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="vbad005-B30" ref-type="bibr">Salzberg, 2019</xref>). Development of new methods providing improved and expanded functional annotations, including user-driven exploration of sequence space and automated construction of functional prediction models, have significantly trailed the huge increases in sequence information becoming available. Sequence similarity (e.g. via BLAST) is commonly used to assign functional annotations, and hidden Markov models (HMMs) provide a probabilistic approach to modeling protein families and motifs. However, traditional sequence similarity methods are unable to accurately capture distantly related sequences in many cases, and HMMs can be time consuming to build, in part due to the requirement for building multiple sequence alignments from families (<xref rid="vbad005-B3" ref-type="bibr">Bateman <italic toggle="yes">et al.</italic>, 2000</xref>; <xref rid="vbad005-B7" ref-type="bibr">Eddy, 1998</xref>).</p>
    <p>Previously, for machine learning and rapid comparison, proteins have been represented as vectors of short peptide sequences (kmers). At least one major annotation resource [Rapid Annotation using Subsystem Technology (RAST)] uses the kmer approach for protein annotation (<xref rid="vbad005-B9" ref-type="bibr">Edwards <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="vbad005-B28" ref-type="bibr">Overbeek <italic toggle="yes">et al.</italic>, 2014</xref>) and multiple newer tools, such as MMseqs2 (<xref rid="vbad005-B24" ref-type="bibr">Mirdita <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="vbad005-B32" ref-type="bibr">Steinegger and SÃ¶ding, 2017</xref>) and DIAMOND (<xref rid="vbad005-B4" ref-type="bibr">Buchfink <italic toggle="yes">et al.</italic>, 2021</xref>) use kmers to increase the speed and sensitivity of searches in various ways. We previously extended the protein kmer approach via amino acid recoding (AAR), which uses chemical similarities between amino acids to simplify the sequence space (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>). We found that a simple AAR grouping of amino acids by hydrophobicity or hydrophilicity performed well in classifying disparate families of ubiquitin ligase effector mimics from viral and bacterial pathogens (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>). This work demonstrated that the kmer AAR approach can be used as the basis for machine learning models capable of classifying sets of functionally related proteins with little sequence similarity. We concluded that the AAR allows greater flexibility in sequence representation and captures similarity between sequences that would not be detected via conventional methods, and these observations have been borne out in other studies as well (<xref rid="vbad005-B13" ref-type="bibr">Hauswedell <italic toggle="yes">et al.</italic>, 2014</xref>; <xref rid="vbad005-B18" ref-type="bibr">Liang <italic toggle="yes">et al.</italic>, 2022</xref>). Thus, AAR creates simplified representations of proteins in the form of flexible feature vectors, which can then be used to construct machine learning models for functional prediction, explore sequence similarities in newly sequenced datasets (e.g. from metagenomes), and identify similarities between sets of sequences that may be undetected using other methods.</p>
    <p>Our previous study included code implementing the kmer AAR approach for the specific application, but this code was neither easily applied to new protein families nor compatible with high-performance computing to build models for large numbers of sequences. Here we describe Snekmer (<xref rid="vbad005-F1" ref-type="fig">Fig.Â 1</xref>), an open-source Python tool that expands the AAR approach into a flexible, modular pipeline incorporating multiple recoding schemes, model training and automatic evaluation. Snekmer generates AAR features from input proteins, trains models automatically from input sets of proteins and clusters proteins based on kmer similarity assessment. Snekmer can also be used as a general tool to cluster moderately sized sets of proteins (10â100k) to determine protein sequence and function similarity using unsupervised clustering. Users can alternatively supply their own sets of proteins to build kmer-based models, assess those models for performance and apply the models to novel sets of sequences.</p>
    <fig position="float" id="vbad005-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Workflow for the Snekmer pipeline. Steps are implemented as individual Snakemake rules. This figure provides an overview of the main Snekmer capabilities the supervised model mode, and the unsupervised cluster mode. For both modes preliminary steps include preprocessing to filter out duplicates and clean input data, generation of kmers from input sequences and vectorization of kmer signatures to build frequency vectors. The model mode then applies a scoring algorithm to the kmers and builds a predictive model for each family. The cluster mode generates clusters based on user input parameters. A third mode, search mode, is used to apply trained models to new input sequences</p>
      </caption>
      <graphic xlink:href="vbad005f1" position="float"/>
    </fig>
    <p>To evaluate Snekmer and the AAR approach, we applied Snekmer to a set of protein families associated with the nitrogen cycle and to a larger set of disparate proteins from Uniprot. Our results demonstrate excellent fidelity with the HMMs that were used to identify these families, across a range of AAR and kmer lengths, and good agreement with MMSeqs2 for clustering performance. We anticipate Snekmer will empower users to rapidly develop their own prediction models based on sets of input sequences, enabling computationally efficient exploration of the sequence landscape in large collections of sequence information from microbiomes.</p>
  </sec>
  <sec>
    <title>2 Results</title>
    <sec>
      <title>2.1. Implementation and availability</title>
      <sec>
        <title>2.1.1. Software stack</title>
        <p>Snekmer is written in Python (version 3.6+) and uses the Snakemake [version 6.0+, (<xref rid="vbad005-B14" ref-type="bibr">Koster and Rahmann, 2018</xref>)] workflow management system. Key dependencies include the Scikit-Learn library [sklearn; (<xref rid="vbad005-B29" ref-type="bibr">Pedregosa <italic toggle="yes">et al.</italic>, 2011</xref>)] for building machine learning models, Bioconda (<xref rid="vbad005-B10" ref-type="bibr">Gruning <italic toggle="yes">et al.</italic>, 2018</xref>), NumPy for matrix operations (<xref rid="vbad005-B12" ref-type="bibr">Harris <italic toggle="yes">et al.</italic>, 2020</xref>), Pandas for general data manipulations (<xref rid="vbad005-B23" ref-type="bibr">McKinney, 2010</xref>), HDBSCAN (<xref rid="vbad005-B16" ref-type="bibr">McInnes <italic toggle="yes">et al.</italic>, 2017</xref>) and UMAP (<xref rid="vbad005-B15" ref-type="bibr">McInnes <italic toggle="yes">et al.</italic>, 2018</xref>). Optionally, the Blazing Signature Filter (<xref rid="vbad005-B17" ref-type="bibr">Lee <italic toggle="yes">et al.</italic>, 2018</xref>) can be installed to facilitate clustering on larger datasets. The implementation of Snekmer via Snakemake provides several advantages, including scalability, reproducibility and Python compatibility. Because Snakemake determines dependencies between steps in a workflow and queues each step sequentially, Snekmer easily scales to high-performance computing (HPC) environments, e.g. supercomputer and cloud computing clusters, and executes each step as its own job script. As a result, multiple input files can be processed simultaneously, in parallel.</p>
      </sec>
      <sec>
        <title>2.1.2. Execution modes</title>
        <p>Snekmer can be operated in three distinct modes: <italic toggle="yes">model</italic> (supervised) or <italic toggle="yes">cluster</italic> (unsupervised) and <italic toggle="yes">search</italic> to apply trained models to new sequences. In the supervised mode, users supply a series of FASTA files, each containing sequences from a single family, to construct models. For each family, Snekmer generates features from all the proteins, constructs feature vectors and calculates a probability score for each kmer feature based on its representation in that family versus other families and, optionally, in user-defined background sequences. Snekmer then builds a logistic regression classification model based on each sequenceâs scores for in-family versus out-of-family assignment for each family (see Section 2.1.4 below for details). Classification performance is evaluated using K-fold cross-validation. The resulting models can further be applied to new sequences that have been processed via Snekmer with matching AAR parameters.</p>
        <p>In the unsupervised mode, Snekmer uses clustering to identify similarities between protein sequences in a given FASTA file or files. Snekmer generates features from all protein sequences, constructs feature vectors, and calculates the similarity between the vectors based on standard metrics (see Section 2.2.2 below for details) and can apply multiple clustering methods to produce related sets of proteins. Optionally, the similarity matrix can be output if a more granular inspection of sequence similarity is desired.</p>
        <p>An example is included in the software (demo_example) which can be used to run each of the different modes on a small set of nitrogen cycle families. Additionally, a Jupyter notebook outlining each step of each Snekmer mode is included.</p>
        <p>Once a Snekmer analysis has been applied, the results are summarized in a report (in HTML format) which is produced in the top-level output directory. Each report provides a short description of the results, diagnostic plots from the run if appropriate and links to the relevant output files.</p>
      </sec>
      <sec>
        <title>2.1.3. Feature generation</title>
        <p>Following the Snakemake framework, Snekmer accepts sequence files as input and performs a predetermined set of processing stepsâknown as rules in Snakemakeâon each input file until the desired output file has successfully been generated. Input parameters and pipeline steps are defined by the user in a configuration (YAML) file; an example configuration file is provided in the code repository. By default, Snekmer handles a number of FASTA-type input file formats (FASTA, FAA, FNA and FA), but the user can specify acceptable file extensions in the configuration file. Snekmer also automatically decompresses files compressed with gzip. Once input files are read, Snekmer can optionally screen for duplicate sequences.</p>
        <p>The standard Snekmer pipeline first processes the input file to generate kmer features. The desired recoding scheme (alphabet) and kmer length (k) are specified by the user. Six recoding alphabets are included (<xref rid="vbad005-T1" ref-type="table">TableÂ 1</xref>) (<xref rid="vbad005-B1" ref-type="bibr">Arnold <italic toggle="yes">et al.</italic>, 2009</xref>; <xref rid="vbad005-B2" ref-type="bibr">Bacardit <italic toggle="yes">et al.</italic>, 2009</xref>; <xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="vbad005-B33" ref-type="bibr">Yamada and Tomii, 2014</xref>), or the user may specify no recoding at all. Snekmer uses the specified alphabet and kmer length to calculate the potential kmer space of all possible kmer combinations. Then, Snekmer recodes all sequences in the input file according to the desired alphabet recoding and generates a vector counting all kmers that occur in the sequence. Features that are not observed in at least one input sequence are removed from the final feature space, though this threshold can be adjusted by the user.</p>
        <table-wrap position="float" id="vbad005-T1">
          <label>Table 1.</label>
          <caption>
            <p>AAR schemes showing the groups of amino acids used for each scheme included in Snekmer</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
            </colgroup>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">
                  <inline-graphic xlink:href="vbad005ilf1.jpg"/>
                </td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>The âmin_filterâ parameter allows users to specify a threshold for inclusion of kmers in models or the clustering process to reduce the complexity of the kmer matrix. This threshold can be either (i) an integer number of observations of a kmer, or (ii) a percentage of the sequences the kmer must be observed in. Setting a higher threshold will reduce the memory footprint of the operation and increase execution speed, but may degrade model or cluster quality if the filter is set too stringently.</p>
      </sec>
      <sec>
        <title>2.1.4. Scoring</title>
        <p>If supervised mode is selected, a probability score is calculated for each input protein family group. The family probability of a kmer, <italic toggle="yes">F</italic><sub>kmer</sub>, is the ratio of the number of family members containing the kmer to the total number of family members:
<disp-formula id="E1"><mml:math id="M1" display="block" overflow="scroll"><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:math></disp-formula></p>
        <p>Here, <italic toggle="yes">n</italic><sub>kmer</sub> is the number of family members containing the kmer and <italic toggle="yes">N</italic> is the total number of family members. If sequences for additional families are provided, a modified family probability score is generated by subtracting the summed fractional family probabilities for the other <italic toggle="yes">G</italic> families:
<disp-formula id="E2"><mml:math id="M2" display="block" overflow="scroll"><mml:msub><mml:mrow><mml:mi>F</mml:mi><mml:mi mathvariant="normal">'</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="normal">Â </mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="normal">Â </mml:mi><mml:mrow><mml:munderover><mml:mo stretchy="false">â</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:mi mathvariant="normal">Â </mml:mi><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:mfrac><mml:mi mathvariant="normal">Â </mml:mi><mml:mo>Ã</mml:mo><mml:mi mathvariant="normal">Â </mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula></p>
        <p>For many applications, the ability to compare sequences against a background set of sequences representative of a larger sequence space is useful. User-supplied background sequences are processed using a similar method as described above in Section 2.1.3; however, to minimize computational requirements, Snekmer only evaluates the background sequences for the kmer feature space defined by the input target families. Snekmer then accounts for the prevalence of kmers in the background set in calculating the overall kmer probability scores.</p>
        <p>The overall score <italic toggle="yes">S</italic><sub>kmer</sub> combines the modified family probability and the probability of the kmer appearing in general protein space. The background set is provided by the user and should be chosen carefully to minimize bias and maximize both sequence diversity and protein family representation.
<disp-formula id="E3"><mml:math id="M3" display="block" overflow="scroll"><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="normal">Â </mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi><mml:mi mathvariant="normal">'</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">max</mml:mi><mml:mo>â¡</mml:mo><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">'</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mfrac><mml:mi mathvariant="normal">Â </mml:mi><mml:mo>Ã</mml:mo><mml:mi mathvariant="normal">Â </mml:mi><mml:mfenced open="(" close=")" separators="|"><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi mathvariant="normal">Â </mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">kmer</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="normal">max</mml:mi><mml:mo>â¡</mml:mo><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic toggle="yes">P</italic><sub>kmer</sub> is the fraction of sequences in the background data set that contain the kmer.</p>
        <p>The resulting method assigns a score between (â1, 1), where a maximum score of 1 indicates that the kmer is found in all sequences within a given group and in no sequences outside of the group, whereas a minimum score of â1 indicates that the kmer is found in none of sequences within the group but found in all sequences outside of the group. A score of zero indicates the kmer is perfectly agnostic toward in-group or out-of-group assignment.</p>
        <p>Because kmers with scores near zero contribute little to in-family assignment scores, these kmers are relatively unimportant to final in-group assignment. Thus, users can reduce the number of kmers used in scoring. For instance, kmers can be restricted to the top <italic toggle="yes">N</italic>, or top <italic toggle="yes">n</italic>%, of kmers by absolute score. Thus, a final score can be tailored to selectively include kmers with the strongest positive or negative association with a group assignment.</p>
      </sec>
      <sec>
        <title>2.1.5. Model building</title>
        <p>In supervised mode, models for input protein groups are automatically trained and evaluated. Snekmer employs the method described above to score each pre-labeled sequence based on its substituent kmers. The in-group scores are then used to train an in-group versus out-of-group classification model using logistic regression. In the process, a model is built and evaluated for each input protein family using the other input family sequences and an optional background set of sequences as the negative examples for the model. This means that model results may vary based on the number of input families modeled, as well as the relative numbers and types of sequences in those families.</p>
        <p>Currently, trained models are stored in the Python-standard pickle binary format. Installation for Snekmer using conda will ensure that these are forward compatible with libraries used, but in future versions of Snekmer, we plan to explore alternatives to pickle for file storage.</p>
      </sec>
      <sec>
        <title>2.1.6. Clustering</title>
        <p>To evaluate Snekmerâs ability to identify useful clusters of functionally related sequences, we clustered a 10-genome set of sequences (46Â 908 proteins) from Uniprot using Snekmer and the Many-against-Many sequence searching (MMseqs2) suite (<xref rid="vbad005-B24" ref-type="bibr">Mirdita <italic toggle="yes">et al.</italic>, 2019</xref>) easy-clust mode with default parameters.</p>
      </sec>
      <sec>
        <title>2.1.7. Evaluation</title>
        <p>Model performance was evaluated via K-fold cross-validation and calculation of accuracy, specificity, sensitivity, area under the receiver-operator characteristic curve (AUROC or AUC ROC) and area under the precision-recall curve (AUPR or PRAUC). For each fold, kmers were rescored using the same methodology as described in Section 2.1.4, but with family probabilities calculated separately for each fold using each training set. Thus, a separate scoring basis and model were developed, trained and evaluated for a given fold. Results from each cross-validation split are stored in tabular form and summarized graphically (<xref rid="vbad005-F2" ref-type="fig">Fig.Â 2</xref>). Descriptions of each evaluation metric are given in <xref rid="vbad005-T3" ref-type="table">TableÂ 2</xref>.</p>
        <fig position="float" id="vbad005-F2">
          <label>Fig. 2.</label>
          <caption>
            <p>AUROC (left) and AUPR (right) curves, with 5-fold cross-validation, for a NapB protein family classification model using AAR with the standard alphabet and kmer length of 8</p>
          </caption>
          <graphic xlink:href="vbad005f2" position="float"/>
        </fig>
        <table-wrap position="float" id="vbad005-T3">
          <label>Table 2.</label>
          <caption>
            <p>Description of metrics describing the performance of binary classification models</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="left" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Metric</th>
                <th rowspan="1" colspan="1">Method</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Accuracy</td>
                <td rowspan="1" colspan="1">
                  <inline-formula id="IE1">
                    <mml:math id="IM1" display="inline" overflow="scroll">
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">TN</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FP</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">TN</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FN</mml:mi>
                        </mml:mrow>
                      </mml:mfrac>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Sensitivity (true positive rate or recall)</td>
                <td rowspan="1" colspan="1">
                  <inline-formula id="IE2">
                    <mml:math id="IM2" display="inline" overflow="scroll">
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FN</mml:mi>
                        </mml:mrow>
                      </mml:mfrac>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Specificity (true negative rate)</td>
                <td rowspan="1" colspan="1">
                  <inline-formula id="IE3">
                    <mml:math id="IM3" display="inline" overflow="scroll">
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TN</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TN</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FP</mml:mi>
                        </mml:mrow>
                      </mml:mfrac>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">False positive rate</td>
                <td rowspan="1" colspan="1">
                  <inline-formula id="IE4">
                    <mml:math id="IM4" display="inline" overflow="scroll">
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">FP</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TN</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FP</mml:mi>
                        </mml:mrow>
                      </mml:mfrac>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precision</td>
                <td rowspan="1" colspan="1">
                  <inline-formula id="IE5">
                    <mml:math id="IM5" display="inline" overflow="scroll">
                      <mml:mfrac>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mi mathvariant="normal">TP</mml:mi>
                          <mml:mo>+</mml:mo>
                          <mml:mi mathvariant="normal">FP</mml:mi>
                        </mml:mrow>
                      </mml:mfrac>
                    </mml:math>
                  </inline-formula>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Area under receiver-operator characteristic curve</td>
                <td rowspan="1" colspan="1">Plot: true positive rate versus false positive rate</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Area under precision-recall curve</td>
                <td rowspan="1" colspan="1">Plot: precision versus recall</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn1">
              <p><italic toggle="yes">Note</italic>: Note that P indicates positive examples and N indicates negative examples. T and F represent true and false assignments, respectively. Thus, TP indicates true positives assigned by the model.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>The AUROC (also known as AUC ROC or ROC AUC) is commonly used to evaluate binary classifiers. However, for imbalanced datasets, the AUROC alone may be insufficient in summarizing classifier performance in instances where the number of negative examples far outweighs the number of positive examples (<xref rid="vbad005-B5" ref-type="bibr">Davis and Goadrich, 2006</xref>). The nitrogen cycling family dataset presents such a case, since the number of positive examples (i.e. members of one family) is much smaller than the number of negative examples (i.e. members of all the remaining families) used to evaluate each model. Thus, we compared both AUROC and AUPR for all classifiers trained from the nitrogen cycling family dataset.</p>
        <p>To evaluate results from the Snekmer and MMseqs2 clustering runs, we used available Uniprot annotations from EggNog (COG), Pfam, Interpro, GO and TIGRFams and evaluated clusters using homogeneity, completeness and the V score metrics from Scikit-Learn. Briefly, given an existing set of annotations for clustered proteins, completeness assesses the likelihood that an annotation label can be found in only one cluster and homogeneity assesses how likely a cluster is to have just one annotation label assigned to its members. The V score is the harmonic mean between homogeneity and completeness. We report average metrics across all clusters.</p>
      </sec>
      <sec>
        <title>2.1.8. Availability</title>
        <p>Snekmer and associated example data and code are available at <ext-link xlink:href="http://github.com/PNNL-CompBio/Snekmer" ext-link-type="uri">http://github.com/PNNL-CompBio/Snekmer</ext-link>. Documentation for Snekmer is available at <ext-link xlink:href="https://snekmer.readthedocs.io" ext-link-type="uri">https://snekmer.readthedocs.io</ext-link>.</p>
      </sec>
    </sec>
    <sec>
      <title>2.2. Example applications</title>
      <p>To illustrate the utility of Snekmer, we tested two distinct applications: (i) supervised mode, which involves automatically building and evaluating models for nitrogen cycling families and (ii) unsupervised mode, which involves <italic toggle="yes">de novo</italic> clustering of similar proteins. For the unsupervised mode, we additionally clustered a larger dataset of â¼50Â 000 protein sequences comprising 10 complete genomes.</p>
      <sec>
        <title>2.2.1. Data description</title>
        <p>For both applications delineated above, we applied Snekmer to an example dataset of sequences belonging to 33 nitrogen cycling families. Each family contains between 13 and 390 sequences for a total of 5530 sequences (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). We used 33 previously described HMMs (<xref rid="vbad005-B11" ref-type="bibr">Haft <italic toggle="yes">et al.</italic>, 2013</xref>; <xref rid="vbad005-B25" ref-type="bibr">Mistry <italic toggle="yes">et al.</italic>, 2021</xref>; <xref rid="vbad005-B26" ref-type="bibr">Nelson <italic toggle="yes">et al.</italic>, 2020</xref>) and the hmmer package (<xref rid="vbad005-B8" ref-type="bibr">Eddy, 2011</xref>) to identify proteins involved in nitrogen transport or transformation from a set of 1835 representative and reference complete genomes from the NCBI RefSeq database (generated in 2018) (<xref rid="vbad005-B27" ref-type="bibr">O'Leary <italic toggle="yes">et al.</italic>, 2016</xref>) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). To determine nitrogen cycle family genes, we searched the NCBI using HMMer (version 3.3.2) (<xref rid="vbad005-B8" ref-type="bibr">Eddy, 2011</xref>) with trusted cut-off scores from Pfam (<xref rid="vbad005-B25" ref-type="bibr">Mistry <italic toggle="yes">et al.</italic>, 2021</xref>). All protein sequences used for modeling are included with the code as an example application.</p>
        <p>We also analyzed a dataset comprised of 10 complete genomes from the SwissProt/UniProt database (<xref rid="vbad005-B6" ref-type="bibr">Duvaud <italic toggle="yes">et al.</italic>, 2021</xref>). The list of genomes can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>. The dataset contains 46Â 908 protein sequences. Uniprot annotations (GO, Pfam, Interpro, TIGRFams, COG and OrthoDB) were obtained for each genome to evaluate clustering results.</p>
      </sec>
      <sec>
        <title>2.2.2. Example Application 1: Automated training and evaluation of models for nitrogen cycling protein families</title>
        <p>We evaluated Snekmerâs supervised operation mode in automatically generating kmer-based classification models for protein families in the nitrogen cycling protein set. The supervised mode is useful when available sets of sequences are known to be functionally and/or evolutionarily related. The nitrogen cycling families used for these examples were identified using traditional sequence similarity methods and thus represent a useful example set. Our previous work has shown that AAR can be used to develop models for families which are functionally related, but where members lack significant sequence similarity with each other (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>). Resulting models can then be applied to sequence collections (e.g. genomes or metagenomes) to provide predictions for the models generated in the training phase.</p>
        <sec>
          <title>2.2.2.1 Model construction</title>
          <p>We used Snekmer to evaluate all included recoding alphabets (<xref rid="vbad005-T1" ref-type="table">TableÂ 1</xref>) for kmers of lengths between 4 and 16. Probability scores were then used to train logistic regression binary classification models for in-family versus out-of-family assignment for each of the 31 protein families.</p>
        </sec>
        <sec>
          <title>2.2.2.2. Model evaluation</title>
          <p>We evaluated the performance of Snekmer for automatically constructing classifiers for the 33 protein families using 5-fold cross-validation. The results of this analysis are shown for a range of AAR schemes and lengths of <italic toggle="yes">k</italic> in <xref rid="vbad005-F3" ref-type="fig">FigureÂ 3</xref>. The corresponding overall AUC PR plots and plots showing the performance in individual families are included as <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref>.</p>
          <fig position="float" id="vbad005-F3">
            <label>Fig. 3.</label>
            <caption>
              <p>Overall performance of automatically generated supervised models from Snekmer. Models were generated by Snekmer as described and 5-fold cross validated. The mean AUC ROC across all 33 families for each alphabet/k combination is shown</p>
            </caption>
            <graphic xlink:href="vbad005f3" position="float"/>
          </fig>
          <p>For most of the protein families, the models developed via Snekmer perform well, but performance of individual families varied (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). The AAR alphabets with higher complexity (i.e. greater number of encodings)âStandard, MIQS and no encodingâperformed best overall, showing consistently high PR AUC and AUC ROC across multiple <italic toggle="yes">k</italic> values (<xref rid="vbad005-F3" ref-type="fig">Fig.Â 3</xref>). We note that overall, the classifiers perform well with most alphabet and <italic toggle="yes">k</italic> combinations, speaking to the highly specific and differentiated nature of the original dataset.</p>
          <p>However, while the per-alphabet differences in AUC are pronounced at low <italic toggle="yes">k</italic> values, as <italic toggle="yes">k</italic> increases the AUCs are similar between simple (Hydro, Hydrocharge and Hydrostruct) and complex alphabets (Standard, MIQS and no encoding). This indicates a tradeoff in specificity, with the simpler alphabets requiring longer kmers to attain specificity for the families, whereas the more complex alphabets display peak performance at short kmer lengths. In other words, higher-complexity alphabets paired with longer kmer lengths are more prone to overfitting, and conversely lower-complexity alphabets paired with shorter kmer lengths result in an overabundance of detected kmers with little diagnostic value.</p>
          <p>The best-performing combination across all protein families that we examined was <italic toggle="yes">k</italic> of 4 with MIQS AAR or a <italic toggle="yes">k</italic> of 8 for the standard chemistry encoding, for which the majority of the models had an ROC AUC of 1.0 (perfect classification). However, we note that many encoding/k combinations performed in the range of 0.98â1.0 over the families, indicating many possible options for encoding that may work well across different families (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). We include the complete results of our analysis as <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>. Our results indicate that while for the studied protein families, a shorter <italic toggle="yes">k</italic> with a more complex alphabet may be the optimal choice, other alphabet combinations can achieve similar classification performance. Overall, as observed previously (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>), certain families present challenges to this simple approach and may necessitate more flexible AARs for classification.</p>
          <p>One significant difference between parameters, however, is the computational requirement. For instance, models built from MIQS recoded 4-mers exhibit comparable performance as the unencoded 4-mers, but the feature generation step for the MIQS recoded sequence is nearly 4 times faster (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). The differences in calculation time scale with k-mer length, presenting a significant obstacle for large datasets.</p>
        </sec>
      </sec>
      <sec>
        <title>2.2.3. Example Application 2: Unsupervised clustering of nitrogen cycling protein families</title>
        <p>For the second example application, we used Snekmer to cluster protein sequences in an unsupervised manner based on AAR kmer profile similarity. This application can enable exploration of the protein space for largely uncharacterized sequences, such as metagenome sequences. Resulting protein clusters should represent similar functional groups for further evaluation.</p>
        <sec>
          <title>2.2.3.1. Unsupervised operation</title>
          <p>We first generated kmer features from input protein sequences belonging to the nitrogen cycle families used in Example 1 and created feature vectors for each protein encompassing all kmers occurring more than once in the dataset. We then calculated Pearson correlation coefficients between all pairs of feature vectors.</p>
        </sec>
        <sec>
          <title>2.2.3.2. Unsupervised operation evaluation</title>
          <p>To evaluate Snekmerâs capacity to identify clusters that match functional families, we used the original nitrogen cycle family designations to calculate the ROC AUC for each family using the correlation values between proteins in the same family (âpositiveâ predictions) compared to correlation values between a protein in the family and one not in the family (ânegativeâ predictions). Since, the original labels used were generated using HMM models, the average AUC values here represent agreement with those models. As can be seen in <xref rid="vbad005-F4" ref-type="fig">FigureÂ 4</xref>, with results from individual families shown as <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref>, the Snekmer unsupervised mode performs quite well, with average AUC scores of &gt;0.9 in more than half of the examined alphabet and kmer length combinations. Thus Snekmer-generated clusters match the performance of the original HMMs, and roughly mirror results from the Snekmer-generated models in Example 1 in terms of AUCs for this controlled clustering example.</p>
          <fig position="float" id="vbad005-F4">
            <label>Fig. 4.</label>
            <caption>
              <p>Overall performance of <italic toggle="yes">de novo</italic> determined relationships between nitrogen cycling family members from Snekmer. Feature vectors generated by Snekmer were used to determine similarity between proteins. The AUC ROC was calculated by considering each similarity relationship as positive if it links two members of the same family and negative if it links members of different families. The mean AUC ROC over all 33 families is shown</p>
            </caption>
            <graphic xlink:href="vbad005f4" position="float"/>
          </fig>
          <p>Though the example clusters perform well, we highlight that the well-annotated test dataset are not representative of a typical dataset necessitating the unsupervised mode, which would likely contain little-to-no previous understanding of the protein family structure. Therefore, we used the correlation matrix to generate edges with a minimum correlation value threshold and visualized the resulting network, coloring nodes by their respective families (<xref rid="vbad005-F5" ref-type="fig">Fig.Â 5</xref>). The network is clearly organized into clusters that faithfully represent the original nitrogen cycle families and could be easily separated by applying a community detection algorithm to the network. We varied the correlation threshold and show that at a more conservative correlation value of 0.5 the families are distinct, unconnected subnetworks (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref>). We also performed the same clustering using the solvent accessibility alphabet and a k of 12, which performed well in the correlation analysis (<xref rid="vbad005-F4" ref-type="fig">Fig.Â 4</xref>) and show the resulting network with a correlation threshold of 0.1 as <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S5</xref>. These results show that the AARs produce similar clustering results as the unencoded kmers, but at a significantly reduced computational cost.</p>
          <fig position="float" id="vbad005-F5">
            <label>Fig. 5.</label>
            <caption>
              <p>Network representation of the <italic toggle="yes">de novo</italic> similarity relationships determined by Snekmer (<italic toggle="yes">k</italic>â=â4, no encoding) showing the nitrogen cycling families as different colors (legend). Nodes represent proteins and edges represent similarity relationships with a correlation of 0.1 or greater as determined by comparing kmer vectors for both proteins</p>
            </caption>
            <graphic xlink:href="vbad005f5" position="float"/>
          </fig>
        </sec>
      </sec>
      <sec>
        <title>2.2.4. Example Application 3: Unsupervised clustering of multiple genomes</title>
        <p>Though Snekmer performed well for the nitrogen cycle families example, we were interested in evaluating Snekmerâs clustering performance on larger datasets that more closely mirror datasets of interest to potential users, and benchmarking our method versus state-of-the art sequence clustering methods. Accordingly, we gathered 46Â 908 protein sequences from 10 randomly selected genomes from the SwissProt/UniProt database (<xref rid="vbad005-B6" ref-type="bibr">Duvaud <italic toggle="yes">et al.</italic>, 2021</xref>). We compared the performance of different parameter selections by assessing the homogeneity and completeness of the resulting clusters when evaluated against annotations available from Uniprot, including Gene Ontology (GO), Pfam, Interpro and Clusters of Orthogolous Genes (COG).</p>
        <p>Using parameter combinations derived from the best-performing clusters from our second example (<xref rid="vbad005-F4" ref-type="fig">Fig.Â 4</xref>), we chose kâ=â4 and the MIQS alphabet, <italic toggle="yes">k</italic>â=â8 with the solvent accessibility alphabet, and <italic toggle="yes">k</italic>â=â14 with the hydrophobicity alphabet. We applied Snekmer in cluster mode to the sequences using Jaccard similarity to determine the distance matrix and Scikit-Learn's agglomerative clustering using complete linkage. After some parameter exploration, we settled on a distance threshold for the agglomerative clustering of 95. To compare our results with an existing clustering method, we also applied MMSeqs2 to the same protein set using the âeasy clusterâ mode with the default sensitivity (<xref rid="vbad005-B24" ref-type="bibr">Mirdita <italic toggle="yes">et al.</italic>, 2019</xref>). The average V score across all clusters shows that Snekmer clustering has the best performance when <italic toggle="yes">k</italic>â=â14 with a hydrophobic AAR. These results are somewhat lower than those with MMseqs2 (<xref rid="vbad005-T4" ref-type="table">TableÂ 3</xref>), though still show Snekmer can perform reasonably well for annotation purposes.</p>
        <table-wrap position="float" id="vbad005-T4">
          <label>Table 3.</label>
          <caption>
            <p>V-score performance of clustering on 46Â 908 proteins</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th colspan="3" rowspan="1">Snekmer<hr/></th>
                <th rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Annotation</th>
                <th rowspan="1" colspan="1">k4, MIQS</th>
                <th rowspan="1" colspan="1">k8, SolvAcc</th>
                <th rowspan="1" colspan="1">k14, Hydro</th>
                <th rowspan="1" colspan="1">MMSeqs2</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">GO</td>
                <td rowspan="1" colspan="1">0.599</td>
                <td rowspan="1" colspan="1">0.671</td>
                <td rowspan="1" colspan="1">0.702</td>
                <td rowspan="1" colspan="1">0.783</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Pfam</td>
                <td rowspan="1" colspan="1">0.759</td>
                <td rowspan="1" colspan="1">0.820</td>
                <td rowspan="1" colspan="1">0.854</td>
                <td rowspan="1" colspan="1">0.919</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">InterPro</td>
                <td rowspan="1" colspan="1">0.729</td>
                <td rowspan="1" colspan="1">0.790</td>
                <td rowspan="1" colspan="1">0.824</td>
                <td rowspan="1" colspan="1">0.883</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">TIGRFAMs</td>
                <td rowspan="1" colspan="1">0.807</td>
                <td rowspan="1" colspan="1">0.899</td>
                <td rowspan="1" colspan="1">0.921</td>
                <td rowspan="1" colspan="1">0.966</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">COG</td>
                <td rowspan="1" colspan="1">0.816</td>
                <td rowspan="1" colspan="1">0.874</td>
                <td rowspan="1" colspan="1">0.853</td>
                <td rowspan="1" colspan="1">0.922</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">OrthoDB</td>
                <td rowspan="1" colspan="1">0.850</td>
                <td rowspan="1" colspan="1">0.900</td>
                <td rowspan="1" colspan="1">0.894</td>
                <td rowspan="1" colspan="1">0.943</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
        <p>To further investigate the differences between Snekmer clustering and MMseqs2, we examined the overlap between proteins assigned to a cluster containing at least two sequences as determined by each method. Surprisingly, we found that although each method clustered approximately 50â60% of the proteins, roughly 60% of the proteins clustered were not shared between the two (<xref rid="vbad005-F6" ref-type="fig">Fig.Â 6</xref>). Integrating Snekmer and MMSeqs2 clustering results increases the fraction of total proteins assigned to clusters from â¼50% to 60% by either method alone, to 85% using both methods together.</p>
        <fig position="float" id="vbad005-F6">
          <label>Fig. 6.</label>
          <caption>
            <p>Coverage of clustering methods on a multiple genome protein set. The entire set (box) is indicated and the coverage of the Snekmer clustering (left circle), MMSeqs2 (right circle) and shared (middle area) are shown with numbers indicating the number of proteins in the groups that are unique to each method or shared between the two</p>
          </caption>
          <graphic xlink:href="vbad005f6" position="float"/>
        </fig>
        <p>The results we present are compared with MMSeqs2 clustering run with default parameters but see little difference when we alter sensitivity of MMSeqs2. MMSeqs2 clustering using sensitivities in the range of 1 (least) to 7.5 (most) sensitive show that the results vary little either in terms of protein coverage, from a minimum of 20Â 240 to a maximum of 28Â 977, or clustering performance, with a Pfam V score minimum of 0.90 and a maximum of 0.92.</p>
        <p>To evaluate Snekmerâs ability to predict annotations for unannotated proteins, we evaluated the number of clusters containing at least one annotated protein and at least one unannotated protein. These clusters would be candidates for transitive annotation based on the annotated protein association. Notably, though the overall performance metrics for Snekmer and MMseqs2 are similar, Snekmer identifies nearly twice as many clusters as MMseqs2, and the proportion of mixed clusters is higher, indicating an increased number of annotation predictions for Snekmer (<xref rid="vbad005-T5" ref-type="table">TableÂ 4</xref>). Determining whether these predictions are true positives or false positives is the subject of ongoing work.</p>
        <table-wrap position="float" id="vbad005-T5">
          <label>Table 4.</label>
          <caption>
            <p>Summary of clusters with annotations</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="center" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th colspan="2" align="left" rowspan="1">Snekmer<hr/></th>
                <th colspan="2" rowspan="1">MMSeqs2<hr/></th>
              </tr>
              <tr>
                <th rowspan="1" colspan="1">Annotation</th>
                <th rowspan="1" colspan="1">Annotated</th>
                <th rowspan="1" colspan="1">Mixed</th>
                <th rowspan="1" colspan="1">Annotated</th>
                <th rowspan="1" colspan="1">Mixed</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">GO</td>
                <td rowspan="1" colspan="1">9645</td>
                <td rowspan="1" colspan="1">4235</td>
                <td rowspan="1" colspan="1">4918</td>
                <td rowspan="1" colspan="1">571</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Pfam</td>
                <td rowspan="1" colspan="1">10Â 327</td>
                <td rowspan="1" colspan="1">4030</td>
                <td rowspan="1" colspan="1">5406</td>
                <td rowspan="1" colspan="1">362</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">InterPro</td>
                <td rowspan="1" colspan="1">10Â 782</td>
                <td rowspan="1" colspan="1">3500</td>
                <td rowspan="1" colspan="1">5709</td>
                <td rowspan="1" colspan="1">135</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">TIGRFAMs</td>
                <td rowspan="1" colspan="1">3833</td>
                <td rowspan="1" colspan="1">2574</td>
                <td rowspan="1" colspan="1">1891</td>
                <td rowspan="1" colspan="1">677</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">COG</td>
                <td rowspan="1" colspan="1">1851</td>
                <td rowspan="1" colspan="1">1579</td>
                <td rowspan="1" colspan="1">1395</td>
                <td rowspan="1" colspan="1">1243</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">OrthoDB</td>
                <td rowspan="1" colspan="1">2265</td>
                <td rowspan="1" colspan="1">2050</td>
                <td rowspan="1" colspan="1">2109</td>
                <td rowspan="1" colspan="1">2017</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn2">
              <p><italic toggle="yes">Note</italic>: Annotated indicates the number of clusters with at least one annotation of that type. Mixed indicates the number of clusters with at least one annotation, and one unannotated protein in the same cluster.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3. Limitations and future directions</title>
    <p>Snekmer is a tool designed to be modular and flexible in order to enable easy development of (i) predictive models for protein families and (ii) clusters of moderate-sized protein sets. Its integration of Snekmer further allows simple deployment of Snekmer on high-performance computing platforms for the training of large sets of models. However, Snekmer currently demonstrates some limitations in speed and memory usage, particularly in clustering very large datasets. In future development of Snekmer, we plan to optimize clustering and model-building to improve Snekmerâs ability to model and cluster large datasets. We also plan to provide more support for user-associated metadata for trained models.</p>
  </sec>
  <sec>
    <title>4. Conclusions</title>
    <p>We describe Snekmer, a Snakemake pipeline to perform AAR and kmer representation for protein sequences. We have previously used this approach to develop a machine-learning model for ubiquitin ligase mimics from pathogens (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>), as well as related machine-learning methods to predict type III secreted effectors (<xref rid="vbad005-B21" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="vbad005-B31" ref-type="bibr">Samudrala <italic toggle="yes">et al.</italic>, 2009</xref>), and multi-drug efflux transporters (<xref rid="vbad005-B20" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2015</xref>) in bacteria. The current work enables broader adoption of AAR-based workflows and high-throughput kmer-based sequence analysis. The Snekmer pipeline is available on GitHub (<ext-link xlink:href="http://github.com/PNNL-CompBio/Snekmer" ext-link-type="uri">http://github.com/PNNL-CompBio/Snekmer</ext-link>).</p>
    <p>Previously, we demonstrated that the simpler AAR schemes (e.g. separating amino acids into hydrophobic and hydrophilic groups) outperformed the native protein sequence kmers for classification of the sequence-diverse ubiquitin ligase proteins (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>). In the current work, using Snekmer to apply the AAR approach to a variety of protein families in an automated fashion, we found that many protein families are accurately classified using the native protein sequence kmers. However, some of families are classified more accurately using AAR, indicating its utility. Because AAR captures greater flexibility in sequence space (<xref rid="vbad005-B22" ref-type="bibr">McDermott <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="vbad005-B33" ref-type="bibr">Yamada and Tomii, 2014</xref>), the approach will likely be more robust to introduction of new sequences into a family.</p>
    <p>We describe two applications of Snekmer workflows: (i) supervised automatic construction of classification models for input protein families and (ii) unsupervised clustering of protein sequences based on recoded kmers. In both cases, Snekmer produces high-quality results, either in the form of automatically generated models that can predict the function of protein families with high accuracy or identified protein clusters that reproduce the known family structure of the underlying sequences. For clustering, Snekmer can generate clusters of comparable quality to MMseqs2, but that covers a different subset of protein space, demonstrating the value of our approach as a supplement to the widely used MMseqs2. We note that while the flexible architecture of Snekmer currently limits the size of input protein files that can be reasonably executed on standard computing environments, especially for the clustering mode, future development will be aimed toward enabling faster clustering for larger protein files. We believe researchers studying novel genomes and microbial communities will find Snekmer valuable in building predictive models for functionally related proteins.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>vbad005_Supplementary_Data</label>
      <media xlink:href="vbad005_supplementary_data.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Department of Energy (DOE) Office of Biological and Environmental Research (BER) and is a contribution of the Scientific Focus Area âPersistence Control of Engineered Functions in Complex Soil Microbiomesâ, the DOE/BER âImproved Protein Annotation in KBase Using Machine Learning, Multi-Omics Data Integration, and Structural Predictionâ project, the DOE/BER âMachine-Learning Approaches for Integrating Multi-Omics Data to Expand Microbiome Annotationâ project, NSF [1856556], the Defense Threat Reduction Agency, under Interagency Agreement [DTRA13081â37739], and the Proxy Applications for Converged Workloads (PACER) project, a component of the Laboratory Directed Research and Development Program at Pacific Northwest National Laboratory. PNNL is operated for the DOE by Battelle Memorial Institute under Contract [DE-AC05-76RL01830].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data Availability</title>
    <p>Example data as well as code are available at <ext-link xlink:href="http://github.com/PNNL-CompBio/Snekmer" ext-link-type="uri">http://github.com/PNNL-CompBio/Snekmer</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbad005-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Arnold</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Sequence-based prediction of type III secreted proteins</article-title>. <source>PLoS Pathog</source>., <volume>5</volume>, <fpage>e1000376</fpage>.<pub-id pub-id-type="pmid">19390696</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bacardit</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Automated alphabet reduction for protein datasets</article-title>. <source>BMC Bioinformatics</source>, <volume>10</volume>, <fpage>6</fpage>.<pub-id pub-id-type="pmid">19126227</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bateman</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2000</year>) <article-title>The Pfam protein families database</article-title>. <source>Nucleic Acids Res</source>., <volume>28</volume>, <fpage>263</fpage>â<lpage>266</lpage>.<pub-id pub-id-type="pmid">10592242</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Buchfink</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Sensitive protein alignments at tree-of-life scale using DIAMOND</article-title>. <source>Nat. Methods</source>, <volume>18</volume>, <fpage>366</fpage>â<lpage>368</lpage>.<pub-id pub-id-type="pmid">33828273</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Davis</surname><given-names>J.</given-names></string-name>, <string-name><surname>Goadrich</surname><given-names>M.</given-names></string-name></person-group> (<year>2006</year>) The relationship between precision-recall and ROC curves. In: <italic toggle="yes">Proceedings of the 23rd International Conference on Machine Learning (ICML '06)</italic>, pp. <fpage>233</fpage>-<lpage>240</lpage>. Association for Computing Machinery, New York, NY.</mixed-citation>
    </ref>
    <ref id="vbad005-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Duvaud</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Expasy, the Swiss Bioinformatics Resource Portal, as designed by its users</article-title>. <source>Nucleic Acids Res</source>., <volume>49</volume>, <fpage>W216</fpage>â<lpage>W227</lpage>.<pub-id pub-id-type="pmid">33849055</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eddy</surname><given-names>S.R.</given-names></string-name></person-group> (<year>1998</year>) <article-title>Profile hidden Markov models</article-title>. <source>Bioinformatics</source>, <volume>14</volume>, <fpage>755</fpage>â<lpage>763</lpage>.<pub-id pub-id-type="pmid">9918945</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eddy</surname><given-names>S.R.</given-names></string-name></person-group> (<year>2011</year>) <article-title>Accelerated profile HMM searches</article-title>. <source>PLoS Comput. Biol</source>., <volume>7</volume>, <fpage>e1002195</fpage>.<pub-id pub-id-type="pmid">22039361</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Edwards</surname><given-names>R.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2012</year>) <article-title>Real time metagenomics: using k-mers to annotate metagenomes</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>3316</fpage>â<lpage>3317</lpage>.<pub-id pub-id-type="pmid">23047562</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gruning</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal>; <collab>The Bioconda Team</collab>. (<year>2018</year>) <article-title>Bioconda: sustainable and comprehensive software distribution for the life sciences</article-title>. <source>Nat. Methods</source>, <volume>15</volume>, <fpage>475</fpage>â<lpage>476</lpage>.<pub-id pub-id-type="pmid">29967506</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Haft</surname><given-names>D.H.</given-names></string-name></person-group><etal>et al</etal> (<year>2013</year>) <article-title>TIGRFAMs and genome properties in 2013</article-title>. <source>Nucleic Acids Res</source>., <volume>41</volume>, <fpage>D387</fpage>â<lpage>395</lpage>.<pub-id pub-id-type="pmid">23197656</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>C.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Array programming with NumPy</article-title>. <source>Nature</source>, <volume>585</volume>, <fpage>357</fpage>â<lpage>362</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hauswedell</surname><given-names>H.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Lambda: the local aligner for massive biological data</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>i349</fpage>â<lpage>i355</lpage>.<pub-id pub-id-type="pmid">25161219</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koster</surname><given-names>J.</given-names></string-name>, <string-name><surname>Rahmann</surname><given-names>S.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Snakemake-a scalable bioinformatics workflow engine</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>3600</fpage>.<pub-id pub-id-type="pmid">29788404</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McInnes</surname><given-names>L.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>UMAP: uniform manifold approximation and projection</article-title>. <source>J. Open Source Softw</source>., <volume>3</volume>, <fpage>861</fpage>.</mixed-citation>
    </ref>
    <ref id="vbad005-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McInnes</surname><given-names>L.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>hdbscan: hierarchical density based clustering</article-title>. <source>Open J</source>., <volume>2</volume>, <fpage>205</fpage>.</mixed-citation>
    </ref>
    <ref id="vbad005-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>J.Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Blazing signature filter: a library for fast pairwise similarity comparisons</article-title>. <source>BMC Bioinformatics</source>, <volume>19</volume>, <fpage>221</fpage>.<pub-id pub-id-type="pmid">29890950</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liang</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Research progress of reduced amino acid alphabets in protein analysis and prediction</article-title>. <source>Comput. Struct. Biotechnol. J</source>., <volume>20</volume>, <fpage>3503</fpage>â<lpage>3510</lpage>.<pub-id pub-id-type="pmid">35860409</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lobb</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>An assessment of genome annotation coverage across the bacterial tree of life</article-title>. <source>Microb. Genom</source>., <volume>6</volume>, <fpage>e000341</fpage>.<pub-id pub-id-type="pmid">32124724</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McDermott</surname><given-names>J.E.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>Prediction of multi-drug resistance transporters using a novel sequence analysis method</article-title>. <source>F1000Res</source>., <volume>4</volume>, <fpage>60</fpage>.<pub-id pub-id-type="pmid">26913187</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McDermott</surname><given-names>J.E.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <article-title>Computational prediction of type III and IV secreted effectors in gram-negative bacteria</article-title>. <source>Infect. Immun</source>., <volume>79</volume>, <fpage>23</fpage>â<lpage>32</lpage>.<pub-id pub-id-type="pmid">20974833</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McDermott</surname><given-names>J.E.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Prediction of bacterial E3 ubiquitin ligase effectors using reduced amino acid peptide fingerprinting</article-title>. <source>PeerJ</source>, <volume>7</volume>, <fpage>e7055</fpage>.<pub-id pub-id-type="pmid">31211016</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B23">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>McKinney</surname><given-names>W.</given-names></string-name></person-group> (<year>2010</year>) <part-title>Data structures for statistical computing in Python</part-title>. In: <person-group person-group-type="editor"><string-name><surname>van der Walt</surname><given-names>S.J.</given-names></string-name>, <string-name><surname>Millman</surname><given-names>J.</given-names></string-name></person-group>, (eds) <source>Proceedings of the 9th Python in Science Conference</source>, Austin, TX. pp. <fpage>56</fpage>-<lpage>61</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad005-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mirdita</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>MMseqs2 desktop and local web server app for fast, interactive sequence searches</article-title>. <source>Bioinformatics</source>, <volume>35</volume>, <fpage>2856</fpage>â<lpage>2858</lpage>.<pub-id pub-id-type="pmid">30615063</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mistry</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Pfam: the protein families database in 2021</article-title>. <source>Nucleic Acids Res</source>., <volume>49</volume>, <fpage>D412</fpage>â<lpage>D419</lpage>.<pub-id pub-id-type="pmid">33125078</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nelson</surname><given-names>W.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Distinct temporal diversity profiles for nitrogen cycling genes in a hyporheic microbiome</article-title>. <source>PLoS One</source>, <volume>15</volume>, <fpage>e0228165</fpage>.<pub-id pub-id-type="pmid">31986180</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>O'Leary</surname><given-names>N.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation</article-title>. <source>Nucleic Acids Res</source>., <volume>44</volume>, <fpage>D733</fpage>â<lpage>745</lpage>.<pub-id pub-id-type="pmid">26553804</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Overbeek</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>The SEED and the rapid annotation of microbial genomes using subsystems technology (RAST)</article-title>. <source>Nucleic Acids Res</source>., <volume>42</volume>, <fpage>D206</fpage>â<lpage>214</lpage>.<pub-id pub-id-type="pmid">24293654</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname><given-names>F.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <article-title>Scikit-learn: machine learning in python</article-title>. <source>J. Mach. Learn. Res</source>., <volume>12</volume>, <fpage>2825</fpage>â<lpage>2830</lpage>.</mixed-citation>
    </ref>
    <ref id="vbad005-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Salzberg</surname><given-names>S.L.</given-names></string-name></person-group> (<year>2019</year>) <article-title>Next-generation genome annotation: we still struggle to get it right</article-title>. <source>Genome Biol</source>., <volume>20</volume>, <fpage>92</fpage>.<pub-id pub-id-type="pmid">31097009</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Samudrala</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Accurate prediction of secreted substrates and identification of a conserved putative secretion signal for type III secretion systems</article-title>. <source>PLoS Pathog</source>., <volume>5</volume>, <fpage>e1000375</fpage>.<pub-id pub-id-type="pmid">19390620</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steinegger</surname><given-names>M.</given-names></string-name>, <string-name><surname>SÃ¶ding</surname><given-names>J.</given-names></string-name></person-group> (<year>2017</year>) <article-title>MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets</article-title>. <source>Nat. Biotechnol</source>., <volume>35</volume>, <fpage>1026</fpage>â<lpage>1028</lpage>.<pub-id pub-id-type="pmid">29035372</pub-id></mixed-citation>
    </ref>
    <ref id="vbad005-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yamada</surname><given-names>K.</given-names></string-name>, <string-name><surname>Tomii</surname><given-names>K.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Revisiting amino acid substitution matrices for identifying distantly related proteins</article-title>. <source>Bioinformatics</source>, <volume>30</volume>, <fpage>317</fpage>â<lpage>325</lpage>.<pub-id pub-id-type="pmid">24281694</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

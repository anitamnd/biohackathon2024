<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9710554</article-id>
    <article-id pub-id-type="pmid">36259946</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac685</article-id>
    <article-id pub-id-type="publisher-id">btac685</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Structural Bioinformatics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ATLIGATOR: editing protein interactions with an atlas-based approach</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1412-1797</contrib-id>
        <name>
          <surname>Kynast</surname>
          <given-names>Josef Paul</given-names>
        </name>
        <aff><institution>Department of Biochemistry, University of Bayreuth</institution>, 95447 Bayreuth, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schwägerl</surname>
          <given-names>Felix</given-names>
        </name>
        <aff><institution>Department of Biochemistry, University of Bayreuth</institution>, 95447 Bayreuth, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8250-9462</contrib-id>
        <name>
          <surname>Höcker</surname>
          <given-names>Birte</given-names>
        </name>
        <xref rid="btac685-cor1" ref-type="corresp"/>
        <!--birte.hoecker@uni-bayreuth.de-->
        <aff><institution>Department of Biochemistry, University of Bayreuth</institution>, 95447 Bayreuth, <country country="DE">Germany</country></aff>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btac685-cor1">To whom correspondence should be addressed. Email: <email>birte.hoecker@uni-bayreuth.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-10-19">
      <day>19</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>19</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>23</issue>
    <fpage>5199</fpage>
    <lpage>5205</lpage>
    <history>
      <date date-type="received">
        <day>01</day>
        <month>2</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>24</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>09</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>15</day>
        <month>11</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac685.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Recognition of specific molecules by proteins is a fundamental cellular mechanism and relevant for many applications. Being able to modify binding is a key interest and can be achieved by repurposing established interaction motifs. We were specifically interested in a methodology for the design of peptide binding modules. By leveraging interaction data from known protein structures, we plan to accelerate the design of novel protein or peptide binders.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We developed ATLIGATOR—a computational method to support the analysis and design of a protein’s interaction with a single side chain. Our program enables the building of interaction atlases based on structures from the PDB. From these atlases pocket definitions are extracted that can be searched for frequent interactions. These searches can reveal similarities in unrelated proteins as we show here for one example. Such frequent interactions can then be grafted onto a new protein scaffold as a starting point of the design process. The ATLIGATOR tool is made accessible through a python API as well as a CLI with python scripts.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Source code can be downloaded at github (<ext-link xlink:href="https://www.github.com/Hoecker-Lab/atligator" ext-link-type="uri">https://www.github.com/Hoecker-Lab/atligator</ext-link>), installed from PyPI (‘atligator’) and is implemented in Python 3.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>European Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/100010663</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>764434</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="S1">
    <title>1 Introduction</title>
    <p>For protein design it is crucial to understand how proteins form interactions. Interactions can be formed intramolecularly to define stability or function as well as intermolecularly with various interaction partners such as solvent, small molecules, peptides or full proteins. Thus, the choice of a particular amino acid at a certain position in a protein is crucial to establish such favorable interactions between two or more amino acid residues. Hence, understanding how specific residue types interact with each other is of particular interest when creating newly designed proteins.</p>
    <p>A description of the conformational space that is occupied by interacting amino acid side chains in known protein structures as well as relative positioning of both interaction partners can provide powerful information for protein design. Singh and Thornton (<xref rid="btac685-B20" ref-type="bibr">Singh and Thornton, 1992</xref>) already classified interactions between pairs of distinct residue types. Moreover, they described clusters of orientation and position combinations within these pairs of amino acids. In a similar approach, Vondrasek and colleagues investigated interaction energies of amino acid combinations calculated in gas-phase (<xref rid="btac685-B2" ref-type="bibr">Berka <italic toggle="yes">et al.</italic>, 2009</xref>, <xref rid="btac685-B3" ref-type="bibr">2010</xref>; <xref rid="btac685-B7" ref-type="bibr">Galgonek <italic toggle="yes">et al.</italic>, 2017</xref>). For the analysis of enzymatic active sites, groups of amino acid residues from three-dimensional structures were categorized, based on sequence alignments (<xref rid="btac685-B19" ref-type="bibr">Porter <italic toggle="yes">et al.</italic>, 2004</xref>). While these studies led to a better understanding of amino acid interactions, their focus was more on analysis rather than design applications.</p>
    <p>Recent developments, clearly moved toward designing protein structures as well as interaction surfaces. By extending amino acid pairs with information about their structural environment, two independent approaches successfully improved the quality of interaction data extracted from existing protein structures (<xref rid="btac685-B12" ref-type="bibr">Holland and Grigoryan, 2022</xref>; <xref rid="btac685-B13" ref-type="bibr">Jha <italic toggle="yes">et al.</italic>, 2010</xref>). In particular, the software dTERMen incorporates structural elements called tertiary structural motifs (TERMs) into the redesign of protein structures (<xref rid="btac685-B17" ref-type="bibr">MacKenzie <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btac685-B22" ref-type="bibr">Zhou <italic toggle="yes">et al.</italic>, 2020</xref>). TERMs were also recently used as surface-complementary fragments during protein design for peptide-binding (<xref rid="btac685-B21" ref-type="bibr">Swanson <italic toggle="yes">et al.</italic>, 2022</xref>).</p>
    <p>Another important point was investigated by focusing next on positional and orientational information within amino acid-based interactions. For example, Polizzi and DeGrado generalized pairwise interactions by describing connections between amino acids and functional groups in so-called van der Mers (<xref rid="btac685-B18" ref-type="bibr">Polizzi and Degrado, 2020</xref>), while Liu <italic toggle="yes">et al</italic> developed the neighborhood-sensitive program NEPRE which is able to assess the quality of protein structures based on amino acid identities (<xref rid="btac685-B16" ref-type="bibr">Liu <italic toggle="yes">et al.</italic>, 2020</xref>).</p>
    <p>We started looking into similar amino acid interaction groups for a specific design problem, namely the construction of custom-made modular peptide-binders based on armadillo repeat proteins. Armadillo repeat proteins comprise a natural binding interface for elongated peptide stretches which was further refined to exhibit peptide binding in a regularized fashion (<xref rid="btac685-B11" ref-type="bibr">Hansen <italic toggle="yes">et al.</italic>, 2018</xref>, <xref rid="btac685-B10" ref-type="bibr">2016</xref>). Thus, the transfer of existing motifs of known structures on the binding interface of a single repeat—also referred to as grafting—would be a crucial step to design new modules that can be assembled or incorporated in an existing peptide binder (<xref rid="btac685-B8" ref-type="bibr">Gisdon <italic toggle="yes">et al.</italic>, 2022</xref>).</p>
    <p>So, we extended the atlas idea of Singh and Thornton to be applicable for design. By now, much more structural data is available that can be leveraged and made searchable for specific design applications. Some interaction modes can be found more frequently in nature and thus appear more favorable than others. Our aim was to make such natural interaction motifs explorable so that they can be searched and incorporated into the context of a protein scaffold. Such information allows to modify not only internal interactions within a protein, but also interactions with a different peptide or protein binding partner. Furthermore, the identification of frequently interacting residue groups plus their favored conformations opens the possibility to graft specialized binding pockets to specifically bind peptide or protein targets of interest.</p>
    <p>To enable such rational design, we now present the software tool ATLIGATOR, short for ATlas-based LIGAnd binding site ediTOR. It allows the user to analyze frequent interaction modes of two or more amino acids and to directly apply this information to rational design approaches (<xref rid="btac685-F1" ref-type="fig">Fig. 1</xref>). The program relies on data structures called <italic toggle="yes">atlases</italic> that contain descriptions of pairwise interactions from protein structures. A collection of structures that builds up such an <italic toggle="yes">atlas</italic> is a subgroup of all structures in the Protein Data Bank (<xref rid="btac685-B4" ref-type="bibr">Berman <italic toggle="yes">et al.</italic>, 2000</xref>) and can for example represent a certain type of fold based on classifiers of the SCOPe database (<xref rid="btac685-B6" ref-type="bibr">Fox <italic toggle="yes">et al.</italic>, 2014</xref>). Moreover, the ATLIGATOR tool also incorporates association rule learning in the form of frequent itemset mining to extract frequent groups of pairwise interactions based on single ligand residues from the <italic toggle="yes">atlas</italic>. These groups are called <italic toggle="yes">pockets</italic> and represent starting points for protein interface design tasks. This representation is based on the assumption that favorable interaction groups have been established during the evolution of the proteins of choice and are thus detected as <italic toggle="yes">pockets</italic>. A major key functionality of ATLIGATOR is the ability to visualize each individual step of the ATLIGATOR toolchain interactively. Furthermore, ATLIGATOR <italic toggle="yes">atlas</italic> and <italic toggle="yes">pocket</italic> datapoints can not only be browsed for individual amino acid combinations but can additionally be used in an integrated tool called Manual Design. Manual Design allows to use a protein–peptide complex structure of choice and alter the interaction surface by binding pocket grafting or manual mutations with recommendations based on <italic toggle="yes">pocket</italic> data. Hence, ATLIGATOR acts as a framework that offers a multitude of possible workflows. Besides the use of single parts for analysis or design, the setup offers a complete workflow from the analysis of interaction modes in protein structures all the way to the interactive application of protein interface design by leveraging previously accumulated knowledge.</p>
    <fig position="float" id="btac685-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Overview of the ATLIGATOR toolchain. The python-based tools of ATLIGATOR include the extraction of pairwise interactions from a <italic toggle="yes">structure collection</italic> as well as mining of frequent groups of interactions. Those tools as well as the input and output data can be accessed via a python API, meaning the source code as well as predefined scripts. Both types of interfaces can be used to analyze extracted interactions to find patterns which can be employed for new designs. This can be achieved by visualizing <italic toggle="yes">atlas</italic> statistics or 3D plotting of <italic toggle="yes">atlas</italic> and <italic toggle="yes">pockets</italic>. Moreover, ATLIGATOR includes the option to design new interaction sites based on binding pocket grafting</p>
      </caption>
      <graphic xlink:href="btac685f1" position="float"/>
    </fig>
  </sec>
  <sec id="S2">
    <title>2 System and methods</title>
    <sec id="S3">
      <title>2.1 Algorithms</title>
      <p>ATLIGATOR is a versatile toolkit for the analysis and the design of protein interactions. It focusses on single side chains of one interacting partner (the ligand) and its relation with multiple residues at the surface of the other interacting partner (the binder) that form a binding pocket for the single residue. <italic toggle="yes">Atlases</italic> are generated for all of these interactions within a user-specified set of complex structures. Through this focus on the single residue interaction level, the tool allows to detect promising interaction features. This knowledge can directly be applied to specific design problems of protein complex interfaces. The toolkit contains the following parts.</p>
      <sec id="S4">
        <label>2.1.1</label>
        <title>Structure selection and preprocessing</title>
        <p>The information gathered by ATLIGATOR is extracted from existing protein structures derived from the Protein Data Bank (PDB). The PDB contains an abundant collection of protein structures, which have been derived mainly from experimental methods. It is useful to be able to select the qualitatively best structures as well as the most fitting structures, e.g. from the same protein family, fold or class. Therefore, we provide the option to select structures based on one’s own rationale or on identifiers of the SCOPe database, thereby creating sets of structures with shared structural or evolutionary background.</p>
        <p>Furthermore, we allow to additionally filter structures for certain properties and quality criteria using a pre-selection and processing utility. This utility within ATLIGATOR is capable of applying the following filter criteria:
</p>
        <list list-type="order">
          <list-item>
            <p>Specific protein families (e.g. by SCOPe query).</p>
          </list-item>
          <list-item>
            <p>Minimum/maximum length of binder and ligand sequences.</p>
          </list-item>
          <list-item>
            <p>Maximum distance between ligand and any binder residue.</p>
          </list-item>
          <list-item>
            <p>Secondary structure content.</p>
          </list-item>
        </list>
        <p>The underlying routine produces a directory of pre-processed pdb files, each containing one ligand-binding complex where ligand and binder are located in individual chains, removing unnecessary parts of ligand chains. These files are then used for <italic toggle="yes">atlas</italic> generation after an optional filtering step.</p>
      </sec>
      <sec id="S5">
        <label>2.1.2</label>
        <title>Atlas generation</title>
        <p>The pre-selected input structures contain external coordinates for the atoms of different ligand residues and binder proteins, respectively. An <italic toggle="yes">atlas</italic> is a collection of filtered and transformed datapoints, each describing an interaction between one residue of the ligand and one residue of a binder. The following algorithm describes on a coarse level how <italic toggle="yes">atlas</italic> datapoints are obtained from the input structures: <boxed-text id="btac685-BOX1" position="float"><label>Algorithm 1:</label><caption><p>Atlas Datapoint Extraction as Simplified Python Code.</p></caption><p>for structure in all_structures:</p><p> ligands = find_ligands(structure)</p><p> for ligand_residue in ligands:</p><p>  for binder_residue in residues_within_radius(ligand, structure):</p><p>   icoor = get_internal_coordinates_from(ligand_residue)</p><p>   for atom in ligand_residue:</p><p>    atom = icoor.external_to_internal(atom)</p><p>   for atom in binder_residue:</p><p>    atom = icoor.external_to_internal(atom)</p><p>   yield AtlasDatapoint(ligand_residue, binder_residue.residue_type, ligand_residue.origin, binder_residue.origin, ligand_residue.atoms, binder_residue.atoms)</p></boxed-text>For determining whether any pair of ligand and binder atoms are considered as interacting, we define specific interaction distances. These distances depend on the type of interactions between ligand and binder atom:</p>
        <list list-type="bullet">
          <list-item>
            <p>Ionic: interactions between positively and negatively charged atoms (default: 8.0 Å).</p>
          </list-item>
          <list-item>
            <p>Aromatic: interactions between carbon atoms of aromatic rings (default: 6.0 Å).</p>
          </list-item>
          <list-item>
            <p>Hydrogen bonds: interactions between donor and acceptor atoms (default: 6.0 Å).</p>
          </list-item>
          <list-item>
            <p>All other interactions, e.g. hydrophobic (default: 4.0 Å).</p>
          </list-item>
        </list>
        <p>The interacting residues are transformed into an internal coordinate system, which allows to detect patterns in pairwise interactions, seen from the perspective of ligand residues. It is defined similarly to Liu <italic toggle="yes">et al</italic> as follows (<xref rid="btac685-B16" ref-type="bibr">Liu <italic toggle="yes">et al.</italic>, 2020</xref>):
</p>
        <list list-type="bullet">
          <list-item>
            <p>The ligand residue’s <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> atom is the origin.</p>
          </list-item>
          <list-item>
            <p>The ligand residue’s <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">β</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> atom is located on the <italic toggle="yes">x</italic>-axis of the internal coordinate system. (For glycine, we simulate a virtual <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">β</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> atom for this purpose.)</p>
          </list-item>
          <list-item>
            <p>The ligand residue’s C atom (carbonyl carbon) lies within the <italic toggle="yes">xy</italic>-plane.</p>
          </list-item>
          <list-item>
            <p>The ligand residue’s N atom is defined with a negative <italic toggle="yes">z</italic>-value.</p>
          </list-item>
        </list>
        <p>Every <italic toggle="yes">atlas</italic> is composed of datapoints storing individual interactions between two residues—a ligand and a binder residue. This collection of datapoints is grouped into <italic toggle="yes">atlas pages</italic> including all datapoints of a certain ligand residue type. <italic toggle="yes">Atlas pages</italic> are partitioned further into <italic toggle="yes">atlas maps</italic> including all datapoints of a combination of one ligand residue amino acid type interacting with one binder residue amino acid type (<xref rid="btac685-F2" ref-type="fig">Fig. 2</xref>).</p>
        <fig position="float" id="btac685-F2">
          <label>Fig. 2.</label>
          <caption>
            <p>Structure of atlas and pocket database. An <italic toggle="yes">atlas</italic> consists of <italic toggle="yes">atlas maps</italic> defining the ligand residue types that can be further subdivided into <italic toggle="yes">atlas pages</italic>. <italic toggle="yes">Atlas pages</italic> are defined by a specific ligand–binder residue type combination. <italic toggle="yes">Pockets</italic> are subgroups of the underlying <italic toggle="yes">atlas</italic> and can be structured by their ligand residue type as well. One <italic toggle="yes">pocket</italic> is defined by the ligand residue type in combination with a group of binder residue types. Both, <italic toggle="yes">atlas pages</italic> and <italic toggle="yes">pockets</italic> contain several <italic toggle="yes">datapoints</italic> that store exactly one pairwise interaction between two residues</p>
          </caption>
          <graphic xlink:href="btac685f2" position="float"/>
        </fig>
      </sec>
      <sec id="S6">
        <label>2.1.3</label>
        <title>Spatial similarity function</title>
        <p>To compare <italic toggle="yes">atlas</italic> datapoints with each other or with designable binder residues we created a distance-orientation function to describe the spatial similarity of two residues <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula>. Assuming that they are both represented in the same, internal or external, coordinate system, their distance <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:math></inline-formula> is defined as follows:
<disp-formula id="E1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mfenced open="|" close="|" separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mfenced open="|" close="|" separators="|"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>o</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="normal">∠</mml:mi><mml:mfenced open="(" close=")" separators="|"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">β</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">β</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mi mathvariant="normal">∠</mml:mi><mml:mfenced open="(" close=")" separators="|"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>O</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>O</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>α</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>→</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mfenced></mml:math></disp-formula></p>
        <p>The equation considers positions of Cα atoms of both interacting residues (where <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mo>α</mml:mo></mml:mrow></mml:msubsup></mml:math></inline-formula> denotes the <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> atom of <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula>, etc.). Furthermore, the angles between two characteristic orientation vectors, namely those between <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">β</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> (referred to as primary orientation below) as well as <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">α</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and the carbonyl C (secondary orientation) of the residues are compared. The weight factors <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>, <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> can be adjusted by the user; the default values are <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mn>1.0</mml:mn><mml:msup><mml:mrow><mml:mo>Å</mml:mo></mml:mrow><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> for <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mn>2.0</mml:mn></mml:math></inline-formula> for both <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math></inline-formula>.</p>
      </sec>
      <sec id="S7">
        <label>2.1.4</label>
        <title>Pocket mining</title>
        <p>Ligand–binder interactions as shown in the <italic toggle="yes">atlas</italic> do not have a purely pairwise nature. Several binder residues can instead contribute to binding one ligand residue. If similar binder residue groups form interactions to ligand residues in various structures, interaction patterns can be extracted and generalized. We call such a frequently occurring interaction pattern a <italic toggle="yes">pocket</italic>. Such <italic toggle="yes">pockets</italic> can be detected and extracted from an <italic toggle="yes">atlas</italic> database which is described below.</p>
        <p><bold>Itemset extraction</bold>. In its first step, the algorithm exploits the fact that datapoints of the <italic toggle="yes">atlas</italic> include their origin. Hence, we group all datapoints originating from the same ligand residue and call this a natural pocket. To detect which <italic toggle="yes">pockets</italic> are frequent, we reduce the information stored in these groups into natural itemsets, which are mere enumerations of binder residues that interact with the same ligand residue.</p>
        <p><bold>Frequent itemset mining</bold>. Depending on the size of the <italic toggle="yes">atlas</italic>, we obtain a large number of itemsets for every specific ligand residue type in this way. In the field of business intelligence, the so-called a-priori algorithm (<xref rid="btac685-B1" ref-type="bibr">Agrawal <italic toggle="yes">et al.</italic>, 1993</xref>) has been established. It guides customers to products frequently bought in combination with their product of interest by finding representative subsets of products in previous purchases. We apply this procedure in order to find representative subsets that are contained in a relevant share of natural itemsets extracted from the <italic toggle="yes">atlas</italic>. As a result, these subsets are groups of binder residue types that are found to interact frequently with a ligand residue type.</p>
        <p><bold>Pocket extraction</bold>. Frequent itemsets indicate which residues are part of a <italic toggle="yes">pocket</italic>, but ignore their structure. This information in turn is added during <italic toggle="yes">pocket</italic> extraction where the coordinates of the underlying <italic toggle="yes">atlas</italic> datapoints play a major role. In this step, natural pockets of the <italic toggle="yes">atlas</italic> are matched with frequent itemsets to identify and extract those pockets that represent the itemset (i.e. they include the same collection of residues or more). This adds the structural component of each pairwise interaction from the <italic toggle="yes">atlas datapoint</italic> to the group of amino acid types within the itemset. The resulting <italic toggle="yes">pocket</italic> stores the <italic toggle="yes">datapoints</italic> of the natural pockets in a superimposed way; technically, every superimposed <italic toggle="yes">pocket</italic> is a subset of the original <italic toggle="yes">atlas</italic>.</p>
        <p><bold>Clustering, noise reduction and selection of representative</bold>. Last, the information stored in every superimposed <italic toggle="yes">pocket</italic> is clustered. To this end, we employ a modified variant of the k-means algorithm (<xref rid="btac685-B5" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2004</xref>), utilizing the spatial similarity function shown in Section 2.1.3 for the calculation of cluster centroids and variances (i.e. the mean deviation of clustered <italic toggle="yes">pocket</italic> residues from the cluster centroid).</p>
        <p>In order to reduce noise, the specific algorithm utilized here additionally ensures that the variance of a cluster is kept below a user-defined threshold (default value: 5.0 Å). By removing the most distant members from the cluster until the threshold is met, the noise present in superimposed <italic toggle="yes">pockets</italic> is reduced.</p>
        <p>For every cluster, we ultimately select as the most representative element (also called medioid) the natural pocket with the least distance from the cluster centroid. This is an instance of the so-called assignment problem, which can be solved using the Hungarian Algorithm (<xref rid="btac685-B14" ref-type="bibr">Kuhn, 1955</xref>).</p>
      </sec>
      <sec id="S8">
        <label>2.1.5</label>
        <title>Pocket grafting</title>
        <p><italic toggle="yes">Pocket</italic> grafting is a simple method that directly exploits the information available from the <italic toggle="yes">pockets</italic> for the creation of designed ligand–binder complexes based on a scaffold. It takes the best-matching <italic toggle="yes">pocket</italic> residues of a selected <italic toggle="yes">pocket</italic> according to the spatial similarity function (see Section 2.1.3) and applies corresponding mutations to binder residues. The details of the procedure are described by the following algorithm:<boxed-text id="btac685-BOX2" position="float"><label>Algorithm 2:</label><caption><p>Pocket Grafting as Simplified Python Code.</p></caption><p>icoor = get_internal_coordinates_from(ligand_residue)</p><p>for atom in mutable_binder_residues:</p><p> atom = icoor.external_to_internal(atom)</p><p>for mutable_positions in mutable_binder_residues:</p><p> for pocket_residue in pocket.binder_residues:</p><p>  score = calc_spatial_similarity(mutable_position, pocket_residue)</p><p>  scores[mutable_residue, pocket_residue] = score</p><p>occupied_positions = []</p><p>occupied_residues = []</p><p>for mutable_position, pocket_residue, score in sorted(scores):</p><p>if score &gt; threshold:</p><p> break</p><p>if mutable_position not in occupied_positions:</p><p> if pocket residue not in occupied_residues:</p><p>  mutable_position.mutate_to(pocket_residue)</p><p>  occupied_positions.append(mutable_position)</p><p>  occupied_residues.append(pocket_residue)</p></boxed-text>The algorithm contains an additional adjustable parameter, the distance threshold θd (default: 12.0), which prevents the alignment of bad-matching <italic toggle="yes">pocket</italic> residues.</p>
        <p>The algorithm contains an additional adjustable parameter, the distance threshold θd (default: 12.0), which prevents the alignment of badmatching <italic toggle="yes">pocket</italic> residues.</p>
      </sec>
      <sec id="S9">
        <label>2.1.6</label>
        <title>Quick graft</title>
        <p>Pocket mining usually results in several <italic toggle="yes">pockets</italic> for each ligand residue type. To overcome the need to graft each <italic toggle="yes">pocket</italic> onto the scaffold individually and to select the best graft manually the quick graft protocol includes automatic grafting of the best matching pocket. To select the best pocket quick graft picks the pocket graft resulting in the best cumulative spatial similarity (see 2.1.3).</p>
        <p>In the process of redesigning an interaction interface more than one ligand residue might be mutated. In this case, the grafted binding pockets need to complement each other to create the best fit for all exchanged ligand side chains. As a solution, quick graft detects conflicting grafts and finds the optimal set of pocket grafts with mutually exclusive positions to mutate. In addition, the best n grafted designs can be generated to give the user the option to compare and select the best grafts.</p>
      </sec>
    </sec>
    <sec id="S10">
      <title>2.2 Implementation</title>
      <p>The algorithms discussed in Section 2.1 are implemented in Python 3. To access the functionality, we deliver scripts with user argument parsing as well as a raw python API (see <xref rid="btac685-F1" ref-type="fig">Fig. 1</xref>).</p>
      <sec id="S11">
        <label>2.2.1</label>
        <title>Python API and CLI</title>
        <p>The API as well as the supplemented python CLI (command-line interface) allow to generate and access all parts of the ATLIGATOR toolchain, visualize <italic toggle="yes">atlases</italic>, <italic toggle="yes">pockets</italic> and additional statistics and follow preprocessing steps. Furthermore, within the API the visualization of single pockets and pocket grafting functions are available. The following paragraphs will guide through a typical workflow of the different tools.</p>
        <p><bold>Structure selection.</bold> The PDB is a rich resource for protein structures. Due to the large amount of data, but also due to biases in structures, scanning the whole PDB for ligand–binder interaction information is not recommended. Rather, the user can select structures from the PDB based on own rationale or on identifiers of the SCOPe database, creating sets of structures with shared structural or evolutionary background. Furthermore, we allow to use preprocessing and filtering structure files (see Section 2.1.1). Those sets of structures are called <italic toggle="yes">structure collections</italic>.</p>
        <p><bold>Atlas visualization and usage.</bold> <italic toggle="yes">Atlases</italic> can be obtained with the <italic toggle="yes">atlas</italic> generation algorithm (see Section 2.1.2) from <italic toggle="yes">structure collections</italic>. <italic toggle="yes">Atlases</italic> do not only serve as input for further analysis and design but visualizing them directly also provides insights into the collected data. Of particular interest are the 20 different <italic toggle="yes">atlas maps</italic> encoded in every <italic toggle="yes">atlas</italic>, which show frequent interactions for given ligand residue types. ATLIGATOR offers a three-dimensional visualization of single ligand amino acid types against one or all other binder amino acid types, corresponding to <italic toggle="yes">atlas maps</italic> or <italic toggle="yes">pages</italic>. These plots contain Cα and Cβ atoms of the centered ligand residue as well as Cα and Cβ atoms of the binder residues of each included datapoint. Thus, information about the relative position as well as orientation of both interaction partners is provided. Furthermore, it provides statistical insights into the composition of the <italic toggle="yes">atlas</italic> in terms of pair-wise interactions such as frequency of detected interaction pairs.</p>
        <p><bold>Pocket visualization and general usage.</bold> <italic toggle="yes">Pockets</italic> can be mined directly from <italic toggle="yes">atlases</italic>. ATLIGATOR can visualize and export into pdb format both superimposed and representative <italic toggle="yes">pockets</italic> (see Section 2.1.4). To present a more detailed point of view <italic toggle="yes">pockets</italic> can also be plotted as a collection of all included datapoints, representing the <italic toggle="yes">pocket atlas</italic> as a filtered instance of the corresponding <italic toggle="yes">atlas</italic> page (see <xref rid="btac685-F3" ref-type="fig">Fig. 3A and B</xref>). Also, single <italic toggle="yes">pocket</italic> instances can be visualized, they contain exactly one ligand rotamer as well as all binder residue rotamers interacting with this exact ligand in the source structure as a part of this <italic toggle="yes">pocket</italic>. Thus, only those residues included in the <italic toggle="yes">pocket</italic> itemset that were not filtered during <italic toggle="yes">pocket</italic> generation will be present (see <xref rid="btac685-F3" ref-type="fig">Fig. 3C</xref>). <italic toggle="yes">Pockets</italic> constitute a useful information <italic toggle="yes">per se</italic>, but they are also utilized in an automated grafting algorithm.</p>
        <fig position="float" id="btac685-F3">
          <label>Fig. 3.</label>
          <caption>
            <p>Essential steps during design process with ATLIGATOR. (<bold>A</bold>) Three-dimensional visualization of <italic toggle="yes">Atlas</italic> datapoints for an Arg ligand residue. For reasons of visibility all datapoints with a positive z-value were discarded and only Asp (D), Glu (E) and Trp (W) binder residues are shown with full opacity. (<bold>B</bold>) All datapoints of the DEW <italic toggle="yes">pocket</italic> of an Arg ligand residue derived by mining (A). (<bold>C</bold>) Detailed view on a single instance of the DEW <italic toggle="yes">pocket</italic> including all side chain atoms. (<bold>D</bold>) DEW <italic toggle="yes">pocket</italic> grafted onto an armadillo repeat protein scaffold. The mutated residues are highlighted by coloring their carbon atoms according to the ATLIGATOR scheme. In A, B and C the axes are defined using the standard <italic toggle="yes">x</italic>, <italic toggle="yes">y</italic> and <italic toggle="yes">z</italic> coordinate definitions. The Cα atom of the Arg ligand residue is highlighted by a bigger radius as the center of view. In A and B every binder residue as well as the ligand residue consists of a Cα atom (stronger color, big radius) and a Cβ atom (lighter color, small radius) colored according to the ATLIGATOR color scheme</p>
          </caption>
          <graphic xlink:href="btac685f3" position="float"/>
        </fig>
        <p><bold>Pocket grafting and quick graft<italic toggle="yes">.</italic></bold>Gathered insights and ideas from <italic toggle="yes">atlas</italic> and <italic toggle="yes">pockets</italic> can be applied to a protein of interest to craft designs with new binding features. Pocket grafting and the quick graft protocol can help fulfill this task. By supplying a structure of the protein–protein or protein–peptide complex of interest as a scaffold and selecting a previously mined collection of pockets such a task can be started. After defining mutable groups of peptide or protein ligand and binder within the scaffold this can be fed into a new design. Here, <italic toggle="yes">pockets</italic> of the assigned <italic toggle="yes">pocket</italic> collection can be selected and grafted automatically onto the binder protein (see Sections 2.1.5 and 2.1.6). If <italic toggle="yes">pockets</italic> are chosen for neighboring ligand residues and the same binder residue is mutated multiple times conflicts may occur. Such conflicts are internally solved based on cumulative similarity scoring (see Sections 2.1.5 and 2.1.6) and provide the optimal grafting solutions. Nevertheless, the mutations are based on natural pockets in the input structures and the side-chain rotamers will not fit perfectly into the new backbone. Thus, we recommend minimizing these rotamers subsequently, e.g. with the Rosetta fixbb side-chain packing protocol (<xref rid="btac685-B15" ref-type="bibr">Leaver-Fay <italic toggle="yes">et al.</italic>, 2011</xref>), to receive a self-consistent representation of all mutable residues. Designs can be written into a pdb file.</p>
      </sec>
    </sec>
  </sec>
  <sec id="S12">
    <title>3 Results and discussion</title>
    <p>There has always been an interest in computational structural biology to describe and classify protein side-chain interactions. The introduction of such descriptions established by Singh &amp; Thornton (<xref rid="btac685-B20" ref-type="bibr">Singh and Thornton, 1992</xref>) led to improved understanding, but so far, the utilization of this data did not combine individual exploration as well as higher order interactions with a focus on protein design approaches. To do so, we created ATLIGATOR to more automatically detect naturally occurring interaction patterns and feed them into the design of protein–protein and protein–peptide interactions.</p>
    <p>Now that <italic toggle="yes">atlases</italic> can be generated and designs can be created based on this data, it is interesting to look at the main functions of ATLIGATOR in the context of a typical workflow e.g. when designing a peptide binding interface. As an example, we chose the redesign of the binding interface of a designed armadillo repeat protein (dArmRP) that binds a peptide with the sequence [KR]<sub>5</sub> (<xref rid="btac685-B10" ref-type="bibr">Hansen <italic toggle="yes">et al.</italic>, 2016</xref>). We will focus on the third arginine in the peptide. On the one hand we aim to improve binding to arginine by pocket grafting and on the other hand we would like to alter the binding preference to isoleucine.</p>
    <p>For redesigning the dArmRP binding site we decided to use structures assigned to SCOPe identifier a.118 (alpha–alpha superhelix) as our data source based on their structural similarity to our target protein. We processed all corresponding structures (parameters shown in <xref rid="btac685-T1" ref-type="table">Table 1</xref>). Hereby, we selected 907 structure files from the Protein Data Bank, leading to 2584 processed substructure complexes.</p>
    <table-wrap position="float" id="btac685-T1">
      <label>Table 1.</label>
      <caption>
        <p>Parameters for preprocessing, <italic toggle="yes">atlas</italic> generation and pocket mining</p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="center" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1">Preprocessing parameter</th>
            <th rowspan="1" colspan="1">Value</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">Distance</td>
            <td rowspan="1" colspan="1">8 A</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Threshold binder</td>
            <td rowspan="1" colspan="1">40 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Min ligand</td>
            <td rowspan="1" colspan="1">3 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Hydrogen interactions</td>
            <td rowspan="1" colspan="1">No</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Atlas generation parameter</td>
            <td rowspan="1" colspan="1">Value</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Min length ligand</td>
            <td rowspan="1" colspan="1">3 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Max length ligand</td>
            <td rowspan="1" colspan="1">20 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Interaction radius (default)</td>
            <td rowspan="1" colspan="1">4.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Interaction radius (h-bond)</td>
            <td rowspan="1" colspan="1">6.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Interaction radius (aromatic)</td>
            <td rowspan="1" colspan="1">6.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Interaction radius (Ionic)</td>
            <td rowspan="1" colspan="1">8.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Skip backbone atoms</td>
            <td rowspan="1" colspan="1">True</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Allow intramolecular interactions</td>
            <td rowspan="1" colspan="1">False</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Pocket mining parameter</td>
            <td rowspan="1" colspan="1">Value</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Max p per Lig Res</td>
            <td rowspan="1" colspan="1">10 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Minimum pocket size</td>
            <td rowspan="1" colspan="1">3 aa</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Confidence threshold</td>
            <td rowspan="1" colspan="1">0.02</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Support threshold</td>
            <td rowspan="1" colspan="1">0.01</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Cardinality base</td>
            <td rowspan="1" colspan="1">1.21</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Distance factor</td>
            <td rowspan="1" colspan="1">2.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Orientation factor</td>
            <td rowspan="1" colspan="1">1.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Secondary orientation factor</td>
            <td rowspan="1" colspan="1">1.0</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Variance threshold</td>
            <td rowspan="1" colspan="1">9999</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>The <italic toggle="yes">atlas</italic> was generated from all structures obtained in the last step using parameters shown in <xref rid="btac685-T1" ref-type="table">Table 1</xref>. The <italic toggle="yes">atlas</italic> includes 20 pages containing 400 maps (see <xref rid="btac685-F2" ref-type="fig">Fig. 2</xref>) in total—respective to every combination of canonical amino acids—comprising 43 752 datapoints. Of these, 4869 datapoints contain Arg as ligand residue (<xref rid="btac685-F3" ref-type="fig">Fig. 3A</xref>), with the most frequent interaction partners of Arg being Asp (1055), Glu (998) and Thr (482). To get a better understanding of these interactions we analyzed frequent groups of interactions by <italic toggle="yes">pocket</italic> mining using the parameters shown in <xref rid="btac685-T1" ref-type="table">Table 1</xref>. One prevalent motif is the DEW <italic toggle="yes">pocket</italic>, which contains the residues Asp, Glu and Trp (see <xref rid="btac685-F3" ref-type="fig">Fig. 3B</xref>). An example single <italic toggle="yes">pocket</italic> instance is shown in <xref rid="btac685-F3" ref-type="fig">Figure 3C</xref>. These <italic toggle="yes">pockets</italic> are then used for grafting onto the scaffold of choice as shown exemplarily in <xref rid="btac685-F3" ref-type="fig">Figure 3D</xref> for a DEW <italic toggle="yes">pocket</italic> grafted on the dArmRP scaffold. Such designs can now serve as starting points for further calculations or experimental testing.</p>
    <p>For our second objective of altering the binding preference to isoleucine, we used the same atlas and pockets as above. Here, 1447 datapoints contained Ile as the ligand residue. The most frequent interaction partners of Ile were Tyr (157), Asp (150) and Met (148). For the transfer of an Ile binding pocket, we want to highlight an Ile—RDFY <italic toggle="yes">pocket</italic>, which was found in 8% of all Ile ligand residues. The RDFY interaction groups that were extracted from proteins that contain the alpha–alpha superhelix fold (a.118) are shown in <xref rid="btac685-F4" ref-type="fig">Figure 4A</xref>. The single pocket instance shown in <xref rid="btac685-F4" ref-type="fig">Figure 4B</xref> visualizes the interactions of isoleucine with the members of this pocket. Apart from using this pocket for grafting, it can also be used to search for similar binding pockets present in different folds. In fact, when we did this, we found a motif with remarkable similarity in the ankyrin repeat cluster domain 4 of human Tankyrase 2 (<xref rid="btac685-B9" ref-type="bibr">Guettler <italic toggle="yes">et al.</italic>, 2011</xref>), which is unrelated to our input <italic toggle="yes">structure collection</italic>. Interestingly, this motif is interacting with an Ile side chain of a bound peptide in a similar way (see <xref rid="btac685-F4" ref-type="fig">Fig. 4C</xref>), supporting the idea that general descriptions of binding pockets can exist in different folds. This encourages potential transferability of pockets from one protein to another.</p>
    <fig position="float" id="btac685-F4">
      <label>Fig. 4.</label>
      <caption>
        <p>Ile—RDFY <italic toggle="yes">pocket</italic> in comparison to a natural binding pocket found in an un-related peptide-binding protein. (<bold>A</bold>) Cα and Cβ data points of Ile-binding pocket containing Arg, Asp, Phe and Tyr (see <xref rid="btac685-F3" ref-type="fig">Fig. 3B</xref>). This <italic toggle="yes">pocket</italic> is based on an <italic toggle="yes">atlas</italic> of structures assigned to SCOPe classification a.118 (alpha–alpha superhelix). (<bold>B</bold>) Single RDFY <italic toggle="yes">pocket</italic> with complete side-chain configuration, originating from pdb structure 2ein. (<bold>C</bold>) Overlay of <italic toggle="yes">pocket</italic> in B (same coloring as before) and an Ile—RDFY inter- action (Cα trace and side chains) found in an ankyrin repeat protein (d.211.1.0)</p>
      </caption>
      <graphic xlink:href="btac685f4" position="float"/>
    </fig>
    <p>Surprisingly, the individual <italic toggle="yes">pocket</italic> instance in <xref rid="btac685-F4" ref-type="fig">Figure 4B</xref> does not originate from the alpha–alpha superhelix (a.118) domain, but other parts within the larger multidomain protein. In fact, this binding pocket is formed by three subsections of two polypeptide chains, classified as f.17.2.1, b.6.1.2 and f.23.3.1. This is due to the fact that the original polyprotein complex contains just one a.118 subunit and no additional filtering was applied to input structures for <italic toggle="yes">atlas</italic> generation. Even though the <italic toggle="yes">pocket’</italic>s origin is not the same fold as our scaffold protein, this is a very strong hint that interaction motifs found with ATLIGATOR can be generalized to other folds—even if more than one chain is forming such a binding pocket. Thus, analyzing <italic toggle="yes">atlases</italic> or <italic toggle="yes">pockets</italic> from different origins will help understand relationships of yet uncovered binding motifs.</p>
    <p>In fact, ATLIGATOR is a versatile, data-driven methodology to analyze protein–protein and protein–peptide interactions in a variety of protein folds. In contrast to other tools, it focusses on local interactions, basically focusing the problem onto the side-chain level while incorporating higher-order interactions and intuitive design options. Moreover, it opens the opportunity to compare binding motifs from different sources to answer questions about generalizability of such motifs. Hence, fold-specific motifs can be detected and compared. ATLIGATOR also features statistical tools which can be utilized for analyzing interactions within the context of an <italic toggle="yes">atlas</italic>, <italic toggle="yes">atlas map</italic>, <italic toggle="yes">atlas page</italic> or <italic toggle="yes">pockets</italic>.</p>
    <p>Despite these possible applications of ATLIGATOR, the main focus is to analyze the interaction in <italic toggle="yes">atlas</italic> and <italic toggle="yes">pockets</italic> for further use in a specific design task. To this end, it includes multiple ways to visualize and use data stored in the <italic toggle="yes">atlas</italic> and <italic toggle="yes">pockets</italic> and provides pocket grafting and quick graft options enabling a unique use of the interactions leveraged from the input structures.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank members of the Höcker lab and the PReART research team for discussions and feedback, in particular Florian Gisdon, Julian Beck, Merve Ayyildiz, Steffen Schmidt, Pascal Kröger, Noelia Ferruz, Dominik Lemm and Abhishek Anan Jalan.</p>
    <sec id="S13">
      <title>Funding</title>
      <p>This work was supported by the European Research Council [H2020-FETopen-RIA grant 764434 ‘PRe-ART’].</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac685-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Agrawal</surname><given-names>R.</given-names></string-name></person-group><etal>et al</etal> (<year>1993</year>) <article-title>Mining association rules between sets of items in large databases</article-title>. <source>SIGMOD Rec</source>., <volume>22</volume>, <fpage>207</fpage>–<lpage>216</lpage>.</mixed-citation>
    </ref>
    <ref id="btac685-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berka</surname><given-names>K.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Representative amino acid side chain interactions in proteins. A comparison of highly accurate correlated ab initio quantum chemical and empirical potential procedures</article-title>. <source>J. Chem. Theory Comput</source>., <volume>5</volume>, <fpage>982</fpage>–<lpage>992</lpage>.<pub-id pub-id-type="pmid">26609607</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berka</surname><given-names>K.</given-names></string-name></person-group><etal>et al</etal> (<year>2010</year>) <article-title>Energy matrix of structurally important side-chain/side-chain interactions in proteins</article-title>. <source>J. Chem. Theory Comput</source>., <volume>6</volume>, <fpage>2191</fpage>–<lpage>2203</lpage>.<pub-id pub-id-type="pmid">26615945</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berman</surname><given-names>H.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2000</year>) <article-title>The protein data bank</article-title>. <source>Nucleic Acids Res</source>., <volume>28</volume>, <fpage>235</fpage>–<lpage>242</lpage>.<pub-id pub-id-type="pmid">10592235</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>J.-S.</given-names></string-name></person-group><etal>et al</etal> (<year>2004</year>) <article-title>An extended study of the K-means algorithm for data clustering and its applications</article-title>. <source>J. Oper. Res. Soc</source>., <volume>55</volume>, <fpage>976</fpage>–<lpage>987</lpage>.</mixed-citation>
    </ref>
    <ref id="btac685-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fox</surname><given-names>N.K.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>SCOPe: structural classification of proteins—extended, integrating SCOP and ASTRAL data and classification of new structures</article-title>. <source>Nucleic Acids Res</source>., <volume>42</volume>, <fpage>D304</fpage>–<lpage>D309</lpage>.<pub-id pub-id-type="pmid">24304899</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Galgonek</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>Amino acid interaction (INTAA) web server</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>W388</fpage>–<lpage>W392</lpage>.<pub-id pub-id-type="pmid">28472475</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gisdon</surname><given-names>F.J.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Modular peptide binders-development of a predictive technology as alternative for reagent antibodies</article-title>. <source>Biol. Chem</source>., <volume>403</volume>, <fpage>535</fpage>–<lpage>543</lpage>.<pub-id pub-id-type="pmid">35089661</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Guettler</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <article-title>Structural basis and sequence rules for substrate recognition by Tankyrase explain the basis for Cherubism disease</article-title>. <source>Cell</source>, <volume>147</volume>, <fpage>1340</fpage>–<lpage>1354</lpage>.<pub-id pub-id-type="pmid">22153077</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hansen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Structure and energetic contributions of a designed modular peptide-binding protein with picomolar affinity</article-title>. <source>J. Am. Chem. Soc</source>., <volume>138</volume>, <fpage>3526</fpage>–<lpage>3532</lpage>.<pub-id pub-id-type="pmid">26878586</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hansen</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Curvature of designed armadillo repeat proteins allows modular peptide binding</article-title>. <source>J. Struct. Biol</source>., <volume>201</volume>, <fpage>108</fpage>–<lpage>117</lpage>.<pub-id pub-id-type="pmid">28864298</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Holland</surname><given-names>J.</given-names></string-name>, <string-name><surname>Grigoryan</surname><given-names>G.</given-names></string-name></person-group> (<year>2022</year>) <article-title>Structure-conditioned amino-acid couplings: how contact geometry affects pairwise sequence preferences</article-title>. <source>Protein Sci</source>., <volume>31</volume>, <fpage>900</fpage>–<lpage>917</lpage>.<pub-id pub-id-type="pmid">35060221</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jha</surname><given-names>A.N.</given-names></string-name></person-group><etal>et al</etal> (<year>2010</year>) <article-title>Amino acid interaction preferences in proteins</article-title>. <source>Protein Sci</source>., <volume>19</volume>, <fpage>603</fpage>–<lpage>616</lpage>.<pub-id pub-id-type="pmid">20073083</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kuhn</surname><given-names>H.W.</given-names></string-name></person-group> (<year>1955</year>) <article-title>The hungarian method for the assignment problem</article-title>. <source>Naval Res. Logistics Q</source>., <volume>2</volume>, <fpage>83</fpage>–<lpage>97</lpage>.</mixed-citation>
    </ref>
    <ref id="btac685-B15">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Leaver-Fay</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <part-title>Chapter nineteen—Rosetta3: an object-oriented software suite for the simulation and design of macromolecules</part-title>. In: <person-group person-group-type="editor"><string-name><surname>Johnson</surname><given-names>M.L.</given-names></string-name>, <string-name><surname>Brand</surname><given-names>L.</given-names></string-name></person-group> (eds.) <source>Methods in Enzymology</source>. <publisher-name>Academic Press (Elsevier)</publisher-name>, Cambridge, Massachusetts, pp. <fpage>545</fpage>–<lpage>574</lpage>.</mixed-citation>
    </ref>
    <ref id="btac685-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Neighborhood preference of amino acids in protein structures and its applications in protein structure assessment</article-title>. <source>Sci. Rep</source>., <volume>10</volume>, <fpage>4371</fpage>.<pub-id pub-id-type="pmid">32152349</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>MacKenzie</surname><given-names>C.O.</given-names></string-name></person-group><etal>et al</etal> (<year>2016</year>) <article-title>Tertiary alphabet for the observable protein structural universe</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>113</volume>, <fpage>E7438</fpage>–<lpage>E7447</lpage>.<pub-id pub-id-type="pmid">27810958</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Polizzi</surname><given-names>N.F.</given-names></string-name>, <string-name><surname>Degrado</surname><given-names>W.F.</given-names></string-name></person-group> (<year>2020</year>) <article-title>A defined structural unit enables de novo design of small-molecule-binding proteins</article-title>. <source>Science</source>, <volume>369</volume>, <fpage>1227</fpage>–<lpage>1233</lpage>.<pub-id pub-id-type="pmid">32883865</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Porter</surname><given-names>C.T.</given-names></string-name></person-group><etal>et al</etal> (<year>2004</year>) <article-title>The Catalytic Site Atlas: a resource of catalytic sites and residues identified in enzymes using structural data</article-title>. <source>Nucleic Acids Res</source>., <volume>32</volume>, <fpage>D129</fpage>–<lpage>33</lpage>.<pub-id pub-id-type="pmid">14681376</pub-id></mixed-citation>
    </ref>
    <ref id="btac685-B20">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Singh</surname><given-names>J.</given-names></string-name>, <string-name><surname>Thornton</surname><given-names>J.M.</given-names></string-name></person-group> (<year>1992</year>) <part-title>Atlas of protein side-chain interactions</part-title>. <publisher-name>IRL Press at Oxford University Press</publisher-name>, <publisher-loc>Oxford</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btac685-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Swanson</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>Tertiary motifs as building blocks for the design of protein-binding peptides</article-title>. <source>Protein Sci</source>., <volume>31</volume>, e4322.</mixed-citation>
    </ref>
    <ref id="btac685-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>A general-purpose protein design framework based on mining sequence-structure relationships in known protein structures</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>117</volume>, <fpage>1059</fpage>–<lpage>1068</lpage>.<pub-id pub-id-type="pmid">31892539</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

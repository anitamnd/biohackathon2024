<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5662523</article-id>
    <article-id pub-id-type="pmid">29086154</article-id>
    <article-id pub-id-type="publisher-id">241</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-017-0241-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Open chemistry: RESTful web APIs, JSON, NWChem and the modern web application</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5851-5272</contrib-id>
        <name>
          <surname>Hanwell</surname>
          <given-names>Marcus D.</given-names>
        </name>
        <address>
          <email>marcus.hanwell@kitware.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-7114-8315</contrib-id>
        <name>
          <surname>de Jong</surname>
          <given-names>Wibe A.</given-names>
        </name>
        <address>
          <email>WAdeJong@lbl.gov</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1113-3728</contrib-id>
        <name>
          <surname>Harris</surname>
          <given-names>Christopher J.</given-names>
        </name>
        <address>
          <email>chris.harris@kitware.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 1015 4706</institution-id><institution-id institution-id-type="GRID">grid.32348.3e</institution-id><institution>Kitware, Inc., </institution></institution-wrap>28 Corporate Drive, Clifton Park, NY 12065 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2231 4551</institution-id><institution-id institution-id-type="GRID">grid.184769.5</institution-id><institution>LBNL, </institution></institution-wrap>One Cyclotron Road, Berkeley, CA 94720 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>30</day>
      <month>10</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>30</day>
      <month>10</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2017</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>55</elocation-id>
    <history>
      <date date-type="received">
        <day>26</day>
        <month>5</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>10</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2017</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">An end-to-end platform for chemical science research has been developed that integrates data from computational and experimental approaches through a modern web-based interface. The platform offers an interactive visualization and analytics environment that functions well on mobile, laptop and desktop devices. It offers pragmatic solutions to ensure that large and complex data sets are more accessible. Existing desktop applications/frameworks were extended to integrate with high-performance computing resources, and offer command-line tools to automate interaction—connecting distributed teams to this software platform on their own terms. The platform was developed openly, and all source code hosted on the GitHub platform with automated deployment possible using Ansible coupled with standard Ubuntu-based machine images deployed to cloud machines. The platform is designed to enable teams to reap the benefits of the connected web—going beyond what conventional search and analytics platforms offer in this area. It also has the goal of offering federated instances, that can be customized to the sites/research performed. Data gets stored using JSON, extending upon previous approaches using XML, building structures that support computational chemistry calculations. These structures were developed to make it easy to process data across different languages, and send data to a JavaScript-based web client.
</p>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Chemistry</kwd>
      <kwd>Web</kwd>
      <kwd>Data</kwd>
      <kwd>Semantic</kwd>
      <kwd>NWChem</kwd>
      <kwd>JSON</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100006151</institution-id>
            <institution>Basic Energy Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>DE-SC0013250</award-id>
        <principal-award-recipient>
          <name>
            <surname>Hanwell</surname>
            <given-names>Marcus D.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2017</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">The in-silico determination of chemical and materials properties is a vital capability that drives innovation across many market sectors. Its importance is reflected in the number of codes that can perform simulations over a broad range of levels of theory and length scales [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR5">5</xref>], and the enormous investments in experimental facilities that can also produce large data that is often difficult or impossible to reproduce. However, it is all too common for experimental and computational studies to take place independently, with large scale studies often involving heroic efforts developing one-off software projects dedicated to the specific resource, such as the Protein Data Bank [<xref ref-type="bibr" rid="CR6">6</xref>] (over 100,000 experimental structures), Materials Project [<xref ref-type="bibr" rid="CR7">7</xref>] (over 33,000 simulated materials), and the Clean Energy Project [<xref ref-type="bibr" rid="CR8">8</xref>] (over 2.3 million calculated structures).</p>
    <p id="Par3">Driven by the U.S. Materials Genome Initiative the development of new and novel materials has become a multidisciplinary research endeavor where complex simulation and experimental data get integrated, and analytics such as machine learning techniques are utilized to aid in scientific discovery. This same multidisciplinary approach is becoming essential in chemical and biological research and development, in the design of new chemicals, biomolecules and drugs, or new energy efficient chemical production processes.</p>
    <p id="Par4">There is a strong need to develop a collaborative scientific research software platform that enables researchers to define concepts and hypotheses, add them, and analyze integrated sets of experimental and computational data to offer effective knowledge discovery more universally. This must go well beyond a web portal to create an interactive platform integrating simulation, experimental data, and analytics, while leveraging semantic web technologies to support the federated storage of data across geographically dispersed sites. The use of language independent programming interfaces that are consumed by web, desktop, and command-line clients will enable researchers to make much better use of their data. The platform described aims to provide an open source service that can satisfy this basic need, and also offer simple methods of extension to accommodate new areas of research.</p>
    <p id="Par5">The web has evolved significantly in the last two decades, and new developments should be explored to assess what can be achieved in a platform that seeks to use the latest open source tools, technologies, standards, and approaches to deliver an end-to-end platform for chemical/materials research. The basic approach employed was to develop a server component written in the Python language that exposes RESTful (representational state transfer) endpoints to interact with the data on the server. The Python code can use existing core functionality, Python modules, and wrapped libraries developed in other programming languages.</p>
    <p id="Par6">Ideally no HTML, images, etc would be generated on the server, the server acts as a data server primarily through RESTful endpoints that accept/return data, along with user authentication (required by some endpoints). It can trigger calculations, perform analyses, and batch jobs in order to make the data discoverable. The server can then be consumed by a rich HTML5 web client, more traditional desktop clients, and from command-line clients or other servers to perform automated workflows.</p>
    <p id="Par7">In this work a rich HTML5 web interface was developed that made use of the server’s API (application programming interface) briefly discussed above. It consumes data from the server, uploading/editing data, and maintaining local state in a one-page application reusing a popular open source HTML5 framework. The application integrated other open source frameworks for client side charting, and 3D rendering/visualization of molecular structure.</p>
    <p id="Par8">The web application was developed using open source tools, a number of frameworks, and was “built” as a static bundle of HTML5 web assets that are downloaded by the web client. It dynamically constructs the page in response to user interaction, server data, and other client events to provide a rich, interactive experience. This means that many interactions take place entirely on the client, requiring no interaction with or access to the server. This offers interactive data visualization and analysis, even on relatively low bandwidth links, once initial data for a molecule or calculation has been downloaded.</p>
    <p id="Par9">The field of chemical sciences needs access to open source chemical data services that make use of open data standards and formats. The development of tools with programming language agnostic interfaces available over standard web protocols is described. Standardized data representations in the database layer were employed, with translation facilities using existing open source tools to existing file formats, along with integrated visualization/analysis capabilities in the web browser.</p>
    <p id="Par10">The project can be used directly, extended for related use cases, or built upon in future work to offer a more comprehensive semantically enriched platform for chemical data. Most existing platforms use approaches that mix data with web page generation on the server, rather than embracing modern client-server approaches using the latest web standards and frameworks. The source code is often not available, and the platforms are curated centrally—such as the PDB, Materials Project and Clean Energy Project mentioned earlier.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <p id="Par11">An open source prototype web platform was developed to demonstrate key capabilities in addressing the needs outlined in the introduction, and summarized in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. The application has a number of components developed in several languages following modern development methodologies. It was intentionally developed using some of the latest technology innovations, which means that it requires a modern web browser that supports WebGL [<xref ref-type="bibr" rid="CR9">9</xref>] in order to render 3D geometry, and it makes extensive use of HTML5 [<xref ref-type="bibr" rid="CR10">10</xref>]. It is clear that not all devices/web browsers have full support for these technologies at this time, but that this support is already substantial and will grow in the coming years.<fig id="Fig1"><label>Fig. 1</label><caption><p>Architecture of the chemical data platform. Overview of the high-level architecture used for the chemical data platform</p></caption><graphic xlink:href="13321_2017_241_Fig1_HTML" id="MO1"/></fig>
</p>
    <p id="Par12">The server-side components were written in Python [<xref ref-type="bibr" rid="CR11">11</xref>], with wrapped C++ code [<xref ref-type="bibr" rid="CR12">12</xref>] providing access to a number of existing chemistry/materials libraries such as Avogadro [<xref ref-type="bibr" rid="CR13">13</xref>] and Open Babel [<xref ref-type="bibr" rid="CR14">14</xref>]. The basis for the server-side project was the Girder project [<xref ref-type="bibr" rid="CR15">15</xref>], which reuses a number of Python modules such as CherryPy [<xref ref-type="bibr" rid="CR16">16</xref>] to provide a minimalist Python web framework, Swagger [<xref ref-type="bibr" rid="CR17">17</xref>] to document the programming interfaces, MongoDB [<xref ref-type="bibr" rid="CR18">18</xref>] to store data/metadata, and Virtuoso [<xref ref-type="bibr" rid="CR19">19</xref>] to store triples. The chemistry specific functionality was developed as additional programming interfaces using the Girder project’s plugin mechanism to add additional endpoints extending upon existing functionality.</p>
    <p id="Par13">The client-side components were developed in HTML5, using open source web frameworks/technologies such as AngularJS 1.6 [<xref ref-type="bibr" rid="CR20">20</xref>] and Material Design [<xref ref-type="bibr" rid="CR21">21</xref>] to provide a single page web application. 3DMol.js [<xref ref-type="bibr" rid="CR22">22</xref>] was used to render molecular geometry in 3D, D3 [<xref ref-type="bibr" rid="CR23">23</xref>] to render charts, and responsive design elements to accommodate devices of various sizes/aspect rations. The capabilities developed have been demonstrated on desktop browsers, mobile phones, and tablets on the major operating systems. This includes Windows, macOS, Linux, iOS, and Android operating systems using browsers including Chrome, Firefox and Safari.</p>
    <p id="Par14">The features developed for the web platform made it possible to expose functions originally developed for command-line/desktop use, this led to the reuse of the Avogadro 2 libraries [<xref ref-type="bibr" rid="CR24">24</xref>] for the ingestion of chemical data. Extensions to the Avogadro 2 libraries, and several other components, were made to support the web platform. These have been merged into the main development branch, and were made available in the 1.90 release of the software. Capabilities, such as the visualization/animation of vibrational data, and additional file formats supporting the NWChem package were added to the library. The JSON readers/writers built upon the JsonCpp library [<xref ref-type="bibr" rid="CR25">25</xref>], and the capabilities were exposed to the Python-based server using Boost.Python [<xref ref-type="bibr" rid="CR26">26</xref>] wrapped calls to the C++ API, and then mapped to web endpoints in the Python code developed for the server.</p>
    <p id="Par15">The computational chemistry code used as a generator for the calculation results is the open source NWChem software suite [<xref ref-type="bibr" rid="CR1">1</xref>]. The JSON-Fortran library [<xref ref-type="bibr" rid="CR27">27</xref>] was integrated into the NWChem source to enable the code to write out a new JSON file in addition to the standard output or log file. APIs and interfaces between the Fortran-90 routines of the JSON-Fortran library and the Fortran-77 NWChem source were written to facilitate the transfer of the computational chemistry data into the JSON format. The full JSON enabled NWChem source code is available on Github [<xref ref-type="bibr" rid="CR28">28</xref>]. To enable the end-user to convert existing log files to the JSON format a Python 3 library was created. The library and examples are available in a separate Github repository [<xref ref-type="bibr" rid="CR29">29</xref>].</p>
    <p id="Par16">New JSON data structures were developed to support the end-to-end workflow from data generation, through to ingestion, analysis, and visualization. Python scripts were also developed to upload and add data files from the command-line, enabling ingestion of existing data sets, and new ones as they are generated.</p>
  </sec>
  <sec id="Sec3">
    <title>Results</title>
    <p id="Par17">The software components were developed to serve the needs of data-centric chemistry research using open source approaches that embrace the use of open APIs, open data formats, and open components. The approach made extensive use of client-side rendering/interaction wherever practical, and focused on a server-side component that served data from web endpoints using the web-native JSON format where possible. The development spanned a number of programming languages (Fortran, C++, Python, and JavaScript) in order to offer structured data that can be stored, queried, edited, and visualized.</p>
    <sec id="Sec4">
      <title>MongoChemServer: server side platform</title>
      <p id="Par18">The server code was developed using the Python 3 language as a Girder plugin. The Girder framework is an open source project, and released under the Apache 2.0 license. It has three main components:<list list-type="bullet"><list-item><p id="Par19">Data organization and dissemination</p></list-item><list-item><p id="Par20">User management and authentication</p></list-item><list-item><p id="Par21">Authorization management</p></list-item></list>It is developed as an extensible data management platform, and it reuses a number of open source projects including CherryPy—“a pythonic, object-oriented web framework”. The code in the mongochemserver repository [<xref ref-type="bibr" rid="CR30">30</xref>] extends the functionality provided in a plugin that is loaded by the Girder process when it starts up. The plugin adds RESTful API, reuses core functionality and core plugins for more generic features such as authentication, Gravatars, file upload/download, access control, etc.</p>
      <p id="Par22">The platform provides integration with MongoDB, using that to store user credentials, access permissions, metadata, and other elements exposed via its plugin system. Among the most useful abstractions provided in the context of this project are the authentication, access permission, and file storage systems. Almost all of these concepts must be exposed on both the server and in the web client code to be used effectively.</p>
      <p id="Par23">The existing OAuth2 plugin was used, and coupled with Google’s OAuth2 implementation to offer single-sign on. This can be replaced with other authentication schemes, or augmented with multiple options. For simplicity this was the only option offered in the prototype described, coupled with the use of encrypted SSL connections to provide secure authenticated access. This choice enabled the deployment of a demonstration to multiple locations, but was not always the most appropriate and will be augmented in future development to include integration with site-wide systems where appropriate.</p>
      <p id="Par24">The access permissions can be applied at several levels in the code. A RESTful API must be exposed as a resource which resolves various paths, which refer to namespaces within the API prefix and are documented using a system called “Swagger”. This enables developers to document API as it is written, provides an HTML5 web client that exposes this documentation, and offers the ability to test API live on the web, shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. The API exposed uses decorators to express whether a given piece of API is public, or can only be accessed by authenticated users. API that requires authentication can apply further restrictions based on user privileges, and provide filtered results containing only data the authenticated user has the access privileges for.<fig id="Fig2"><label>Fig. 2</label><caption><p>Swagger documentation for RESTful API. An example of Swagger being used to test some of the RESTful API in the ‘molecules’ resource</p></caption><graphic xlink:href="13321_2017_241_Fig2_HTML" id="MO2"/></fig>
</p>
      <p id="Par25">File upload/download sounds quite simple on the surface, but it involves a number of distinct components in order to scale and integrate well in different environments. The project uses asset stores to abstract the storage backend, and the backend can then be mapped to file systems, S3 storage (as provided by Amazon EC2), and others. Large files must also be uploaded/downloaded in “chunks”, something offered as part of the standard file API and exposed in the client application. File system storage proved sufficient for the work described, but future deployments would benefit from using large file stores, with extension to archive servers at supercomputing centers.</p>
      <p id="Par26">The web APIs were extended with three main endpoints for the chemical data server. The “molecules” prefix provides functions to interact with molecular data, and is linked to from the other objects created. A molecular graph is unique, and other objects such as calculations will refer to a molecule. The simplest way to use the molecules endpoint is to use a GET query on the name, InChI, or InChI key of a molecule to see if it exists. If the search results in a math then a JSON array will be returned with objects containing the fields id, inchikey, and name that can be used to retrieve each molecule. If no match then an empty JSON array will be returned.</p>
      <p id="Par27">Retrieving molecule records can be achieved using the molecules/id endpoint, using the URL “/api/v1/molecules/564a2fdd5573c07ff61ce3db/xyz” would retrieve the molecule with the ID of “564a2fdd5573c07ff61ce3db” in the XYZ format. Changing that to “/api/v1/molecules/564a2fdd5573c07ff61ce3db/cml” would retrieve the same molecule in the CML format, and ending it with ’cjson’ would return the molecule in the Chemical JSON format described later. There is a similar endpoint to query the database using InChI keys. A “/molecules/conversions/{output_format}” endpoint provides file format conversion services.</p>
      <p id="Par28">A “/molecules/search” endpoint offers a simple query language that was exposed in the web interface, where it is possible to search on molecular mass with numeric comparisons, logical AND or OR queries together. It contained a number of string based values that could be searched on, such as InChI, InChI key, name, chemical formula, as well as numeric fields such as mass, atom count, and heavy atom count. This was implemented in a Python file, and exposed in the endpoint, with inline documentation available by clicking on the search icon.</p>
      <p id="Par29">The other major endpoint developed was the “calculations” prefix, this provides access to quantum chemical calculations. They must have a parent molecule, and are primarily accessed using the GET method, querying on the “moleculeId”. If there are calculations present for a given moleculeId, a JSON array will be returned with objects containing the “_id” (the identifier for the calculation), with various properties such as the name of the code performing the calculation, the theory, calculation types contained, and a file identifier that refers to the original output used to build the record. The calculation identifier can then be used to retrieve other elements of the calculation, such as the atomic coordinates as a JSON file, a cube for a given molecular orbital, vibrational modes, etc.</p>
      <p id="Par30">All of these endpoints, along with the more generic ones usch as file, folder, group, item, user, etc can be viewed using the built in Swagger. One of the important results is not the features described, but the simple mapping of Python code to endpoints, with inline documentation, that can be rapidly extended and deployed. Python offers an excellent glue, providing easy access to native Python code, C/C++ wrapped libraries, and even other web services.</p>
    </sec>
    <sec id="Sec5">
      <title>MongoChemClient: rich HTML5 web client</title>
      <p id="Par31">The Girder project has its own web interface, but this was not used—a custom user interface was developed in the mongochemclient repository [<xref ref-type="bibr" rid="CR31">31</xref>]. The interface developed in this repository is a modern HTML5 web interface. This means that all HTML5 assets can be served as static files, and the page is built up dynamically on the client-side using the web API to authenticate (if necessary), retrieve data, upload new date, and visualize data. A number of technologies and projects were leveraged in order to create a compelling, modern interface in a relatively short space of time.</p>
      <p id="Par32">The main framework used to manage interaction, react to events, and coordinate the single dynamic page approach was AngularJS. This framework is divided into a number of modules that provide various services/extensions, such as easy access to APIs, animations, routing (where the URL is updated to reflect the current ‘location’ (state) despite being in a single-page web application), and overall look and feel (Materials design in this instance). AngularJS was chosen for the rich feature set, maturity, and encapsulation of components along with its powerful web page layout framework. An example of the single page application in action is shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>, where a molecular structure can be seen beside a plot of vibrational modes that can be animated in the 3DMol.js based geometry viewer.<fig id="Fig3"><label>Fig. 3</label><caption><p>HTML5 web client with molecular structure and vibrational modes. The web client displaying a molecular structure in 3DMol.js, and selection of vibrational modes in a D3 chart</p></caption><graphic xlink:href="13321_2017_241_Fig3_HTML" id="MO3"/></fig>
</p>
      <p id="Par33">The static HTML5 content that serves as the frontend, and the dynamic programming interfaces offering access to the data must be presented to the web client. This is where the NGINX web server [<xref ref-type="bibr" rid="CR32">32</xref>] came in, offering an SSL-enabled endpoint for encryption, serving the static content in the web root, and proxying requests to the /api/v1 prefix to the Python-based backend. The Python-based backend also had access to the MongoDB server where all metadata, access controls, and links to files were stored. There is also an asset store, where a simple on-disk asset store was used.</p>
      <p id="Par34">The software infrastructure involves a number of build/deployment systems, and a deployment repository [<xref ref-type="bibr" rid="CR33">33</xref>] was necessary to coordinate the task of deploying everything to the right location, with compatible software versions, and ensuring services are brought up/down in the correct order. The project employed an industry standard open source tool called Ansible [<xref ref-type="bibr" rid="CR34">34</xref>] to document how the service was deployed on Amazon’s EC2 infrastructure, and this approach can be adopted to other environments. Ansible automates the process of logging into specified web hosts, setting up users, installing packages, and placing everything in the correct place before starting services such as the database and web services.</p>
    </sec>
    <sec id="Sec6">
      <title>JSON data formats</title>
      <p id="Par35">Over the years, various data formats have been developed for computational chemistry to enable, among other things, information exchange and visualization. More recent work has focused on the development of ways to express results (log files) from computational chemistry in data formats that are suitable for knowledge discovery on the semantic web. One example is the XML based Chemical Markup Language (CML) [<xref ref-type="bibr" rid="CR35">35</xref>].</p>
      <p id="Par36">Here, we chose to build a data format using JSON because it is less cumbersome than XML, with simpler parsers, and is a native format of the web. It is based on many of the concepts developed in the CML format as part of several ongoing collaborations under the broad umbrella of the Blue Obelisk [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>]. Two JSON formats were developed in parallel, one focused on providing information essential for visualization platforms, and one with the goal to provide semantically enriched information from computational chemistry codes as an alternative to plain text log files. Comparison of the two JSON formats provides insight into the disparate needs of the use cases, and can serve as a guide for the development of a community wide JSON data format.</p>
      <p id="Par37">The Chemical JSON format within the Avogadro 2 project has been in development for a number of years, with the focus on providing a simple means of data storage and exchange of chemical data for visualization. The JSON format was developed based upon the requirements of storing data in BSON using MongoDB, communicating chemical data over JSON-RPC 2.0 between desktop applications, and later using web services. It was also motivated by the need for a format to support an application being developed to edit and communicate chemical structures. The format was tested with small molecules through to molecules with millions of atoms using a philosophy of being machine readable, efficient, and avoiding repetition. It was written to represent a simple mapping of the in memory data structures.</p>
      <p id="Par38">This JSON format exposed the internal data model used in Avogadro 2, and was used as the transport layer to the 3DMol.js client-side rendering. It was extended to expose vibrational modes, and a primitive container for volumetric data already present in the 3DMol.js project. The current state of the Chemical JSON format is documented in a Github repository [<xref ref-type="bibr" rid="CR38">38</xref>], and will continue to evolve as it is extended to serve more use cases.</p>
      <p id="Par39">In parallel, the ChemLog JSON format was developed with the goal of encapsulating the data from computational chemistry software, such as the open source NWChem, with semantic annotation. The goals of the two formats were somewhat orthogonal. Chemical JSON expresses the properties of a single molecule in machine readable arrays that contain the essential data that might be visualized/displayed. In contrast, the ChemLog JSON format is focused on storing all the essential input and output data with semantic annotation from the computational chemistry software simulation (here for NWChem) for the (possibly multiple) simulation(s). This is somewhat akin to the typical molecular file formats (XYZ, CML, SDF, etc) versus a more structured quantum mechanical log file—a snapshot of definite structure versus data discovery and recording.</p>
      <p id="Par40">This new format focuses on satisfying the need to replace a log file with structured output, offering output of multiple calculations as a computational chemistry code like NWChem is executed. The JSON file generated by the NWChem application builds upon previous work done integrating CML into NWChem [<xref ref-type="bibr" rid="CR39">39</xref>] (an XML-based format), with some related efforts extending CML for the semantic web using an intermediary format called CSX [<xref ref-type="bibr" rid="CR40">40</xref>]. It is designed around the notion of using objects as the primary representation. As a starting point the CML naming and conventions were adopted and extended with new concepts. The format was developed and designed to be portable to multiple computational chemistry codes but in this work firmly targeted the NWChem code.</p>
      <p id="Par41">The relevant section representing the geometry/structure of JSON files generated in the two formats, in this case for a water molecule, are compared to clearly show the difference in design philosophies, i.e. arrays vs objects, driven by the use case, i.e. visualization vs semantically enriched semantic. The listing below shows a molecule block within the Chemical JSON format:</p>
      <graphic position="anchor" xlink:href="13321_2017_241_Figa_HTML" id="MO4"/>
      <p id="Par42">The format focuses on using arrays to store information about atoms, bonds, etc—such as the atomic number, bond order, etc. The 3D coordinates are in an array, and each 3D position is offset by 3N where N is the index of the atom. This offers compact, simple representations with efficient storage of atomic data. It does not provide a layout that is focused on human readability, and it is not intended to be used as a directly editable set of objects in Python/JavaScript without some code in front of it to aid in manipulation/keeping the representation consistent. This representation is very easy to use in web platforms where asynchronous network calls can bring in progressively more data about the molecule, starting with just atoms, then bonds, then molecular orbital cubes, vibrations, etc.</p>
      <p id="Par43">The listing below shows the same molecule block within the ChemLog JSON format:</p>
      <graphic position="anchor" xlink:href="13321_2017_241_Figb_HTML" id="MO5"/>
      <p id="Par44">In contrast to the Chemical JSON listing, all information and properties of each atom in ChemLog JSON is collected in a single object. A key aspect of this format is the explicit definition of units, a key aspect brought in for the CML specification. It is relatively simple to map between the two formats, and this is now possible in the Avogadro 2 libraries which feature readers for both formats.</p>
      <p id="Par45">In developing the ChemLog JSON format, some additional referencing features were introduced that are not natural to JSON. The listing below shows an excerpt of a JSON data file containing the calculation setup and some of the properties that can be calculated with quantum chemistry software:</p>
      <graphic position="anchor" xlink:href="13321_2017_241_Figc_HTML" id="MO6"/>
      <p id="Par46">Input structures in computational chemistry codes are set up to allow a sequence of calculations to be executed in one single run. To store this sequence, the ChemLog JSON format has adopted the CML approach of storing each calculation in a “calculations” array. The listing above shows an excerpt of the fourth calculation in this series. Often, data from previous calculation steps in the sequence is reused in the quantum chemistry code. To avoid duplicating information, “id” tags were used to provide a pointer to the first mention of the JSON object. An example of this in the listing above are the key “molecule” to “Molecule.2”, which is defined as the id-tag in the molecule block in the previous listing. Another example is the “basisSet” keyword in the “calculationSetup” block. Even the “calculationSetup” could be the same for multiple calculations, and could be pointed to in this fashion. The same approach is used to identify the atom within the molecule to which the calculated atomic properties belong. Here the “atom” keyword points to atom “Atom.1.Mol.2” in the earlier ChemLog JSON listing for the molecular geometry. Essentially, this referencing approach mimics the ability to link different sets of data. The referencing feature is missing in the current JSON specification but native to XML. The JSON pointer has been proposed in RFC 6091 [<xref ref-type="bibr" rid="CR41">41</xref>] and a draft RFC is being developed for the JSON reference [<xref ref-type="bibr" rid="CR42">42</xref>]. While JSON reference would provide the necessary flexibility, either could readily be adopted in the format in the near future.</p>
      <p id="Par47">Examples of complete ChemLog JSON files generated by the NWChem quantum chemistry code can be found on the Github repository [<xref ref-type="bibr" rid="CR29">29</xref>].</p>
      <p id="Par48">The JSON file can be submitted to the web platform developed, and relevant metadata will be extracted. The format is capable of encapsulating jobs that have multiple steps, and it has been demonstrated with vibrational and electronic structure data. The format breaks most elements of the output into distinct objects, and it has been designed to be more semantically expressive than the Chemical JSON format developed as part of the Avogadro 2 project. Future work will draw upon new developments in JSON-LD [<xref ref-type="bibr" rid="CR40">40</xref>, <xref ref-type="bibr" rid="CR43">43</xref>] that aims to bring linked data and meaning to JSON using the same approaches used in semantic data structures.</p>
      <p id="Par49">The two formats were used as part of this project, with several extensions made to the Chemical JSON format in order to support data needed by the project. They are both supported by the Avogadro 2 libraries, and exposed in the Python-wrapped API used on the server side. The Chemical JSON format is designed in a pragmatic fashion, making extensive use of arrays, along with key-value pairs for simple properties. The format closely matches in-memory structures, it is optimized for storage in BSON (the binary form of JSON used internally by MongoDB), is easy to visualize and store as a single document in MongoDB. The new ChemLog JSON format developed tends to represent everything as an object, can store multiple configurations/states of a molecule, and uses links to reuse objects that have not changed. This makes it more complex to parse, but more expressive, and it more closely reflects what is currently stored in log files.</p>
      <p id="Par50">As stated before, extensions were needed in the internal models used in the Avogadro 2 projects, the 3Dmol.js project, and in the model employed in the web framework. Ultimately, any given visualization can only show a single state, and the web and desktop frameworks both generally assume a file only has a single state with minimal links back to the input file. This concept will need to be extended in order to visualize and analyze data from more complex multi-step files, and some of this development was started in the work described.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Discussion</title>
    <p id="Par51">Research in chemistry is becoming more data intensive, and as a result it is vital that we act to create platforms that can be easily deployed, used, and shared with a focus on data. This requires standard formats that support a multitude of facets of chemical data that leverage industry standard technologies such as XML, JSON, and the semantic web.</p>
    <p id="Par52">As we move closer to a landscape where the web is an essential part of any workflow we must embrace web-native formats, generally using JSON and similar containers, to enable the free exchange, analysis and visualization of data. This can be further augmented through the use of JSON-LD, and is something the authors would like to do in order to offer semantic meaning and enable the simple transformation of JSON-LD documents to triples.</p>
    <p id="Par53">The use of triples open up the semantic, linked web that is becoming increasingly important as this widens access to the data. As we move forward, and data-centric computing proliferates embracing the standards of the semantic web will make it easier to find and use the data generated, and it will also make the meaning of specific keys clear to machines, i.e. the definition of a 3D coordinate, and the units it is expressed in, of the “energy” of a quantum calculation—what quantity is being expressed, on what molecule, and in what units. This requires normalized data, but goes well beyond it to express data less ambiguously and more formally.</p>
    <p id="Par54">Once these components are available the open source code referenced here, and available as a demonstration capability, show what can be built around it. The RESTful APIs, databases, and HTML5 frontends can be readily coupled with command line and powerful desktop applications to offer a compelling ecosystem of data-centric applications that serve the chemical research enterprise.</p>
    <p id="Par55">The definition of suitable schema, codification of that into JSON-LD, and community agreement still represent significant barriers to wider adoption. The development of permissively licensed open source code, which can be readily inspected, reused, and modified is one approach to improving the situation. Coupled with the use of community platforms such as GitHub for collaborative development, and workshops gathering interested experts, these approaches can be iterated upon and standardized.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusions</title>
    <p id="Par56">A “full-stack” open source web application was developed, making heavy use of Python and open source community tools on the backend, and HTML5/JavaScript on the frontend. Years of experience in using, converting, and developing data formats was drawn upon to create some new formats for the output of structured data from the NWChem code, ingestion into databases, and the subsequent visualization/analysis of data. This was demonstrated in a new web client, and added to the Avogadro 2 desktop application. The primary data types were 3D chemical structure, electronic structure, and vibrational modes on the web and desktop.</p>
    <p id="Par57">If the field of chemical sciences is to progress towards knowledge discovery on the semantic web, it is important to move away from disparate formats and basic data log files. The ingestion and normalization of data still represents a serious challenge to reaping the benefits powerful data-centric platforms promise. The Avogadro project provides translation to and from standard chemical data formats, these can be read by Open Babel and translated to all supported formats. The authors were made aware of a new effort by the European Materials Modeling Council (EMMC) on enhancing interoperability in materials modeling codes. As this paper was written, the authors and researchers at the Molecular Sciences Software Institute (MolSSI) started a working group committed to the development of a unified community (web, visualization, workflow, computational chemistry codes, and others) supported JSON data format.
</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>3D</term>
        <def>
          <p>three dimensional</p>
        </def>
      </def-item>
      <def-item>
        <term>API</term>
        <def>
          <p>application programming interface</p>
        </def>
      </def-item>
      <def-item>
        <term>CSS</term>
        <def>
          <p>cascading style sheets</p>
        </def>
      </def-item>
      <def-item>
        <term>CML</term>
        <def>
          <p>Chemical Markup Language</p>
        </def>
      </def-item>
      <def-item>
        <term>HTML</term>
        <def>
          <p>Hypertext Markup Language</p>
        </def>
      </def-item>
      <def-item>
        <term>HPC</term>
        <def>
          <p>high-performance computing</p>
        </def>
      </def-item>
      <def-item>
        <term>JSON</term>
        <def>
          <p>JavaScript object notation</p>
        </def>
      </def-item>
      <def-item>
        <term>LBNL</term>
        <def>
          <p>Lawrence Berkeley National Laboratory</p>
        </def>
      </def-item>
      <def-item>
        <term>REST</term>
        <def>
          <p>representational state transfer</p>
        </def>
      </def-item>
      <def-item>
        <term>SSL</term>
        <def>
          <p>Secure sockets layer</p>
        </def>
      </def-item>
      <def-item>
        <term>XML</term>
        <def>
          <p>Extensible Markup Language</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>Marcus D. Hanwell and Wibe A. de Jong contributed equally to this work</p>
    </fn>
  </fn-group>
  <ack>
    <title>Authors' contributions</title>
    <p>MDH and CJH developed the client and server code, new file format support in Avogadro 2, and the Chemical JSON file format. WDJ developed the CompChem JSON data format, the JSON writer in the NWChem application and the Python NWChem output converter, and generated the simulation data used in testing. MDH and WDJ wrote the manuscript. All authors read and approved the final manuscript.</p>
    <sec id="FPar7">
      <title>Acknowledgements</title>
      <p id="Par65">Not applicable.</p>
    </sec>
    <sec id="FPar5">
      <title>Competing interests</title>
      <p id="Par63">The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar4">
      <title>Availability of data and materials</title>
      <p id="Par62">All code and data discussed in this manuscript is available under open licenses on GitHub. The following repositories contain all the data and materials:</p>
      <p>Chemical data RESTful server [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]</p>
      <p>Web frontend single-page application [<xref ref-type="bibr" rid="CR31">31</xref>]</p>
      <p>Chemical JSON specification and examples [<xref ref-type="bibr" rid="CR38">38</xref>]</p>
      <p>NWChem with JSON output [<xref ref-type="bibr" rid="CR28">28</xref>]</p>
      <p>Conversion tool from NWChem log files to JSON [<xref ref-type="bibr" rid="CR29">29</xref>].</p>
    </sec>
    <sec id="FPar2">
      <title>Consent for publication</title>
      <p id="Par60">Not applicable.</p>
    </sec>
    <sec id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par59">Not applicable.</p>
    </sec>
    <sec id="FPar6">
      <title>Funding</title>
      <p id="Par64">This material is based upon work supported by the U.S. Department of Energy, Office of Science, Office of Basic Energy Sciences, Small Business Innovation Research (SBIR) program under Award Number DE-SC0013250.</p>
    </sec>
    <sec id="FPar8">
      <title>Publisher’s Note</title>
      <p id="Par66">Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Valiev</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bylaska</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Govind</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kowalski</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Straatsma</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>van Dam</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Nieplocha</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Apra</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Windus</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>de Jong</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>NWChem: a comprehensive and scalable open-source solution for large scale molecular simulations</article-title>
        <source>Comput Phys Commun</source>
        <year>2010</year>
        <volume>181</volume>
        <fpage>1477</fpage>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2010.04.018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kong</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>White</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Krylov</surname>
            <given-names>AI</given-names>
          </name>
          <name>
            <surname>Sherrill</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Adamson</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Furlani</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Gwaltney</surname>
            <given-names>SR</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Ochsenfeld</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Gilbert</surname>
            <given-names>ATB</given-names>
          </name>
          <name>
            <surname>Kedziora</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Rassolov</surname>
            <given-names>VA</given-names>
          </name>
          <name>
            <surname>Maurice</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Nair</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Shao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Besley</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Maslen</surname>
            <given-names>PE</given-names>
          </name>
          <name>
            <surname>Dombroski</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Daschel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Korambath</surname>
            <given-names>PP</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Byrd</surname>
            <given-names>EFC</given-names>
          </name>
          <name>
            <surname>Van Voorhis</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Oumi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hirata</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hsu</surname>
            <given-names>C-P</given-names>
          </name>
          <name>
            <surname>Ishikawa</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Florian</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Warshel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>BG</given-names>
          </name>
          <name>
            <surname>Gill</surname>
            <given-names>PMW</given-names>
          </name>
          <name>
            <surname>Head-Gordon</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pople</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Q-chem 2.0: a high-performance ab initio electronic structure program package</article-title>
        <source>J Comput Chem</source>
        <year>2000</year>
        <volume>21</volume>
        <issue>16</issue>
        <fpage>1532</fpage>
        <lpage>1548</lpage>
        <pub-id pub-id-type="doi">10.1002/1096-987X(200012)21:16&lt;1532::AID-JCC10&gt;3.0.CO;2-W</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hutter</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Iannuzzi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schiffmann</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>VandeVondele</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>cp2k: atomistic simulations of condensed matter systems</article-title>
        <source>Wiley Interdiscip Rev Comput Mol Sci</source>
        <year>2014</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <lpage>25</lpage>
        <pub-id pub-id-type="doi">10.1002/wcms.1159</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gonze</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Amadon</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Anglade</surname>
            <given-names>P-M</given-names>
          </name>
          <name>
            <surname>Beuken</surname>
            <given-names>J-M</given-names>
          </name>
          <name>
            <surname>Bottin</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Boulanger</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bruneval</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Caliste</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Caracas</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Côt;é</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Deutsch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Genovese</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ghosez</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Giantomassi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Goedecker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Hamann</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Hermet</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Jollet</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Jomard</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Leroux</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Mancini</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mazevet</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Oliveira</surname>
            <given-names>MJT</given-names>
          </name>
          <name>
            <surname>Onida</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pouillon</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Rangel</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Rignanese</surname>
            <given-names>G-M</given-names>
          </name>
          <name>
            <surname>Sangalli</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Shaltaf</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Torrent</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Verstraete</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Zerah</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Zwanziger</surname>
            <given-names>JW</given-names>
          </name>
        </person-group>
        <article-title>Abinit: first-principles approach to material and nanosystem properties</article-title>
        <source>Comput Phys Commun</source>
        <year>2009</year>
        <volume>180</volume>
        <issue>12</issue>
        <fpage>2582</fpage>
        <lpage>2615</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cpc.2009.07.007</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">List of Quantum Chemistry and Solid-state Physics Software. <ext-link ext-link-type="uri" xlink:href="https://en.wikipedia.org/wiki/List%5fof%5fquantum%5fchemistry%5fand%5fsolid-state%5fphysics%5fsoftware">https://en.wikipedia.org/wiki/List_of_quantum_chemistry_and_solid-state_physics_software</ext-link></mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Weissig</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Shindyalov</surname>
            <given-names>IN</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>The protein data bank</article-title>
        <source>Nucleic Acids Res</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ong</surname>
            <given-names>SP</given-names>
          </name>
          <name>
            <surname>Hautier</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Richards</surname>
            <given-names>WD</given-names>
          </name>
          <name>
            <surname>Dacek</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cholia</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gunter</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Skinner</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ceder</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Persson</surname>
            <given-names>Ka</given-names>
          </name>
        </person-group>
        <article-title>The materials project: a materials genome approach to accelerating materials innovation</article-title>
        <source>APL Mater</source>
        <year>2013</year>
        <volume>1</volume>
        <issue>1</issue>
        <fpage>011002</fpage>
        <pub-id pub-id-type="doi">10.1063/1.4812323</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hachmann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Olivares-Amaya</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Atahan-Evrenk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Amador-Bedolla</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sánchez-Carrera</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Gold-Parker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vogt</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Brockway</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Aspuru-Guzik</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>The Harvard Clean Energy Project: large-scale computational screening and design of organic photovoltaics on the World Community Grid</article-title>
        <source>J Phys Chem Lett</source>
        <year>2011</year>
        <volume>2</volume>
        <issue>17</issue>
        <fpage>2241</fpage>
        <lpage>2251</lpage>
        <pub-id pub-id-type="doi">10.1021/jz200866s</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">WebGL. <ext-link ext-link-type="uri" xlink:href="https://www.khronos.org/webgl/">https://www.khronos.org/webgl/</ext-link></mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">HTML5. <ext-link ext-link-type="uri" xlink:href="https://www.w3.org/TR/html5/">https://www.w3.org/TR/html5/</ext-link></mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Python. <ext-link ext-link-type="uri" xlink:href="https://www.python.org/">https://www.python.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">C++. <ext-link ext-link-type="uri" xlink:href="https://isocpp.org/">https://isocpp.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hanwell</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Curtis</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Lonie</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Vandermeersch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zurek</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hutchison</surname>
            <given-names>GR</given-names>
          </name>
        </person-group>
        <article-title>Avogadro: an advanced semantic chemical editor, visualization, and analysis platform</article-title>
        <source>J Cheminform</source>
        <year>2012</year>
        <volume>4</volume>
        <fpage>17</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-4-17</pub-id>
        <pub-id pub-id-type="pmid">22889332</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O'Boyle</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Banck</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>James</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Morley</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Vandermeersch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hutchison</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Open babel: an open chemical toolbox</article-title>
        <source>J Cheminform</source>
        <year>2011</year>
        <volume>3</volume>
        <fpage>33</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-3-33</pub-id>
        <pub-id pub-id-type="pmid">21982300</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Girder. <ext-link ext-link-type="uri" xlink:href="https://github.com/girder/girder">https://github.com/girder/girder</ext-link></mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">CherryPy. <ext-link ext-link-type="uri" xlink:href="http://cherrypy.org/">http://cherrypy.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Swagger. <ext-link ext-link-type="uri" xlink:href="https://swagger.io/">https://swagger.io/</ext-link></mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">MongoDB. <ext-link ext-link-type="uri" xlink:href="https://www.mongodb.com/">https://www.mongodb.com/</ext-link></mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Virtuoso. <ext-link ext-link-type="uri" xlink:href="https://github.com/openlink/virtuoso-opensource">https://github.com/openlink/virtuoso-opensource</ext-link></mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">AngularJS. <ext-link ext-link-type="uri" xlink:href="https://angularjs.org/">https://angularjs.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Material Design. <ext-link ext-link-type="uri" xlink:href="https://material.io/">https://material.io/</ext-link></mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rego</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Koes</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>3dmol.js: molecular visualization with webgl</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>8</issue>
        <fpage>1322</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu829</pub-id>
        <pub-id pub-id-type="pmid">25505090</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Bostock M, Ogievetsky V, Heer J (2011) D3: data-driven documents. IEEE Trans Vis Comput Graph (Proc. InfoVis)</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Avogadro Libraries. <ext-link ext-link-type="uri" xlink:href="https://github.com/openchemistry/avogadrolibs">https://github.com/openchemistry/avogadrolibs</ext-link></mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">JsonCpp. <ext-link ext-link-type="uri" xlink:href="https://github.com/open-source-parsers/jsoncpp">https://github.com/open-source-parsers/jsoncpp</ext-link></mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Boost.Python. <ext-link ext-link-type="uri" xlink:href="http://boostorg.github.io/python">http://boostorg.github.io/python</ext-link></mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">JSON-Fortran Version 2.0.0. <ext-link ext-link-type="uri" xlink:href="https://github.com/jacobwilliams/json-fortran/wiki">https://github.com/jacobwilliams/json-fortran/wiki</ext-link></mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">NWChem-ChemLog-JSON Writer Github Repository. <ext-link ext-link-type="uri" xlink:href="https://github.com/wadejong/NWChem-Json">https://github.com/wadejong/NWChem-Json</ext-link></mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Python ChemLog JSON Github Repository. <ext-link ext-link-type="uri" xlink:href="https://github.com/wadejong/NWChemOutputToJson">https://github.com/wadejong/NWChemOutputToJson</ext-link></mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">mongochemserver. <ext-link ext-link-type="uri" xlink:href="https://github.com/openchemistry/mongochemserver">https://github.com/openchemistry/mongochemserver</ext-link></mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">mongochemclient. <ext-link ext-link-type="uri" xlink:href="https://github.com/openchemistry/mongochemclient">https://github.com/openchemistry/mongochemclient</ext-link></mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">NGINX. <ext-link ext-link-type="uri" xlink:href="https://www.nginx.com/">https://www.nginx.com/</ext-link></mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">mongochemdeploy. <ext-link ext-link-type="uri" xlink:href="https://github.com/openchemistry/mongochemdeploy">https://github.com/openchemistry/mongochemdeploy</ext-link></mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Ansible. <ext-link ext-link-type="uri" xlink:href="https://www.ansible.com/">https://www.ansible.com/</ext-link></mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Murray-Rust</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rzepa</surname>
            <given-names>HS</given-names>
          </name>
        </person-group>
        <article-title>Markup languages—how to structure chemistry related documents</article-title>
        <source>Chem Int</source>
        <year>2002</year>
        <volume>4</volume>
        <issue>24</issue>
        <fpage>9</fpage>
        <lpage>13</lpage>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guha</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Howard</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Hutchison</surname>
            <given-names>GR</given-names>
          </name>
          <name>
            <surname>Murray-Rust</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rzepa</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Steinbeck</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wegner</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Willighagen</surname>
            <given-names>EL</given-names>
          </name>
        </person-group>
        <article-title>The blue obelisk—interoperability in chemical informatics</article-title>
        <source>J Chem Inf Model</source>
        <year>2006</year>
        <volume>46</volume>
        <issue>3</issue>
        <fpage>991</fpage>
        <pub-id pub-id-type="doi">10.1021/ci050400b</pub-id>
        <pub-id pub-id-type="pmid">16711717</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>O’Boyle</surname>
            <given-names>NM</given-names>
          </name>
          <name>
            <surname>Guha</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Willighagen</surname>
            <given-names>EL</given-names>
          </name>
          <name>
            <surname>Adams</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Alvarsson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bradley</surname>
            <given-names>J-C</given-names>
          </name>
          <name>
            <surname>Filippov</surname>
            <given-names>IV</given-names>
          </name>
          <name>
            <surname>Hanson</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Hanwell</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Hutchison</surname>
            <given-names>GR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Open data, open source and open standards in chemistry: the Blue Obelisk five years on</article-title>
        <source>J Cheminform</source>
        <year>2011</year>
        <volume>3</volume>
        <fpage>37</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-3-37</pub-id>
        <pub-id pub-id-type="pmid">21999342</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <mixed-citation publication-type="other">Chemical JSON Github Repository. <ext-link ext-link-type="uri" xlink:href="https://github.com/OpenChemistry/chemicaljson/blob/master/chemicaljson.md">https://github.com/OpenChemistry/chemicaljson/blob/master/chemicaljson.md</ext-link></mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de Jong</surname>
            <given-names>WA</given-names>
          </name>
          <name>
            <surname>Walker</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Hanwell</surname>
            <given-names>MD</given-names>
          </name>
        </person-group>
        <article-title>From data to analysis: linking NWChem and Avogadro with the syntax and semantics of Chemical Markup Language</article-title>
        <source>J Cheminform</source>
        <year>2013</year>
        <volume>5</volume>
        <fpage>25</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-5-25</pub-id>
        <pub-id pub-id-type="pmid">23705910</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dobosh</surname>
            <given-names>PA</given-names>
          </name>
          <name>
            <surname>Chalk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sopek</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ostlund</surname>
            <given-names>NS</given-names>
          </name>
        </person-group>
        <article-title>Computational chemistry data management platform based on the semantic web</article-title>
        <source>J Phys Chem A</source>
        <year>2017</year>
        <volume>121</volume>
        <issue>1</issue>
        <fpage>298</fpage>
        <lpage>307</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jpca.6b10489</pub-id>
        <pub-id pub-id-type="pmid">27936706</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">RFC 6091 for JSON Pointer. <ext-link ext-link-type="uri" xlink:href="https://tools.ietf.org/html/rfc6901">https://tools.ietf.org/html/rfc6901</ext-link></mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Draft RFC for JSON Reference. <ext-link ext-link-type="uri" xlink:href="https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03">https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03</ext-link></mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">JSON-LD. <ext-link ext-link-type="uri" xlink:href="http://json-ld.org/">http://json-ld.org/</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>

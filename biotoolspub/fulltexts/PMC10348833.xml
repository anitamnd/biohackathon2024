<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10348833</article-id>
    <article-id pub-id-type="pmid">37432342</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad419</article-id>
    <article-id pub-id-type="publisher-id">btad419</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Counting pseudoalignments to novel splicing events</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Borozan</surname>
          <given-names>Luka</given-names>
        </name>
        <aff><institution>Department of Mathematics, Josip Juraj Strossmayer University of Osijek</institution>, Osijek 31000, <country country="HR">Croatia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8776-9768</contrib-id>
        <name>
          <surname>Rojas Ringeling</surname>
          <given-names>Francisca</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
        <aff><institution>Huck Institutes of the Life Sciences, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kao</surname>
          <given-names>Shao-Yen</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nikonova</surname>
          <given-names>Elena</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8706-4079</contrib-id>
        <name>
          <surname>Monteagudo-Mesas</surname>
          <given-names>Pablo</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Matijević</surname>
          <given-names>Domagoj</given-names>
        </name>
        <aff><institution>Department of Mathematics, Josip Juraj Strossmayer University of Osijek</institution>, Osijek 31000, <country country="HR">Croatia</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2068-3350</contrib-id>
        <name>
          <surname>Spletter</surname>
          <given-names>Maria L</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
        <aff><institution>School of Science and Engineering, Division of Biological &amp; Biomedical Systems, University of Missouri Kansas City</institution>, Kansas City, MO 64110, <country country="US">United States</country></aff>
        <xref rid="btad419-cor1" ref-type="corresp"/>
        <!--maria.spletter@umkc.edu-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-4719-8010</contrib-id>
        <name>
          <surname>Canzar</surname>
          <given-names>Stefan</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
        <aff><institution>Huck Institutes of the Life Sciences, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
        <aff><institution>Department of Computer Science and Engineering, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
        <xref rid="btad419-cor1" ref-type="corresp"/>
        <!--canzar@psu.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad419-cor1">Corresponding authors. School of Science and Engineering, Division of Biological &amp; Biomedical Systems, University of Missouri Kansas City, 5009 Rockhill Rd., Spencer Hall 505B, Kansas City, MO 64110, United States. E-mail: <email>maria.spletter@umkc.edu</email> (M.L.S.); Department of Computer Science and Engineering, The Pennsylvania State University, W204B Westgate Building, University Park, PA 16802, United States. E-mail: <email>canzar@psu.edu</email> (S.C.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-07-11">
      <day>11</day>
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>7</issue>
    <elocation-id>btad419</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>21</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>03</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>14</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad419.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Alternative splicing (AS) of introns from pre-mRNA produces diverse sets of transcripts across cell types and tissues, but is also dysregulated in many diseases. Alignment-free computational methods have greatly accelerated the quantification of mRNA transcripts from short RNA-seq reads, but they inherently rely on a catalog of known transcripts and might miss novel, disease-specific splicing events. By contrast, alignment of reads to the genome can effectively identify novel exonic segments and introns. Event-based methods then count how many reads align to predefined features. However, an alignment is more expensive to compute and constitutes a bottleneck in many AS analysis methods.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we propose fortuna, a method that guesses novel combinations of annotated splice sites to create transcript fragments. It then pseudoaligns reads to fragments using kallisto and efficiently derives counts of the most elementary splicing units from kallisto’s equivalence classes. These counts can be directly used for AS analysis or summarized to larger units as used by other widely applied methods. In experiments on synthetic and real data, fortuna was around <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mn>7</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster than traditional align and count approaches, and was able to analyze almost 300 million reads in just 15 min when using four threads. It mapped reads containing mismatches more accurately across novel junctions and found more reads supporting aberrant splicing events in patients with autism spectrum disorder than existing methods. We further used fortuna to identify novel, tissue-specific splicing events in <italic toggle="yes">Drosophila</italic>.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>fortuna source code is available at <ext-link xlink:href="https://github.com/canzarlab/fortuna" ext-link-type="uri">https://github.com/canzarlab/fortuna</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Deutsche Forschungsgemeinschaft</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>417912216</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Intronic sequences need to be removed, or spliced, from a transcribed pre-mRNA to produce mature mRNA. Introns can be spliced in alternative ways from the same pre-mRNA to produce distinct combinations of exons in different mRNA transcript variants. This alternative splicing (AS) contributes to the diversity of transcriptomes and proteomes across cell types, tissues, and developmental stages. Aberrant splicing, for example caused by human genomic variants, is prevalent in various diseases, including cancer and neurological disorders (<xref rid="btad419-B30" ref-type="bibr">Titus <italic toggle="yes">et al.</italic> 2021</xref>). The identification of expressed transcript variants and their roles in normal development and disease is still a field of open investigation. RNA sequencing (RNA-seq) is the preferred technology to study expressed transcript variants.</p>
    <p>The quantification of full-length transcripts from short reads produced by RNA-seq is facilitated by the rapid pseudoalignment of reads to known transcripts by methods such as kallisto (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>) and salmon (<xref rid="btad419-B23" ref-type="bibr">Patro <italic toggle="yes">et al.</italic> 2017</xref>). Instead of performing a computationally expensive alignment between all reads and all transcript sequences, a pseudoalignment simply determines the set of compatible transcripts each read could have originated from. However, pseudoalignment-based analysis as introduced in <xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> (2016)</xref> is defined with respect to known transcripts and will not only miss novel or disease-specific splicing events, but unmappped or mismapped reads from novel junctions can also affect downstream quantification of annotated features.</p>
    <p>The differential usage of individual exons, on the other hand, can be detected by methods such as DEXSeq (<xref rid="btad419-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2012</xref>) without making any assumptions about how exons have been combined in potentially novel transcripts. More generally, most event-based methods such as SplAdder (<xref rid="btad419-B17" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2016</xref>) and rMATS (<xref rid="btad419-B26" ref-type="bibr">Shen <italic toggle="yes">et al.</italic> 2014</xref>) first summarize reads by counting how many of them support the inclusion of transcript “building blocks” that are assumed indivisible. To identify and quantify potentially novel compositions of such building blocks, reads first need to be aligned to their corresponding sequences. Although such an alignment effectively enables the detection of novel exonic segments and novel splice sites and introns, it imposes a computational bottleneck (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B29" ref-type="bibr">Sterne-Weiler <italic toggle="yes">et al.</italic> 2018</xref>).</p>
    <p>Here, we make use of the fact that a large number of novel introns found in human and other well-annotated species typically do not gap arbitrary stretches of nucleotides in the genome, but rather re-use known splice sites. For example, using recount3 (<xref rid="btad419-B32" ref-type="bibr">Wilks <italic toggle="yes">et al.</italic> 2021</xref>), a resource that compiles hundreds of thousands of public human and mouse RNA-seq samples, <xref rid="btad419-B32" ref-type="bibr">Wilks <italic toggle="yes">et al.</italic> (2021)</xref> reported that <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mn>31.3</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel human junctions in the Sequence Read Archive (SRA) combine known splice sites. In only <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mn>15.6</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel junctions, neither donor nor acceptor appeared in the annotation. Among splice junctions that appear in at least <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mn>20</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of SRA run accessions, almost every second of novel junctions contained exclusively annotated splice sites.</p>
    <p>Recognizing the limitation of fast pseudoalignment-based methods to predefined transcript annotations on the one hand, and the high computational cost incurred by more accurate, event-based methods on the other, Whippet (<xref rid="btad419-B29" ref-type="bibr">Sterne-Weiler <italic toggle="yes">et al.</italic> 2018</xref>) implements a new transcriptome index for fast alignment across novel junctions between annotated splice sites. The index records <italic toggle="yes">k</italic>-mers flanking all combinations of annotated donors and acceptors. This reliance on <italic toggle="yes">k</italic>-mers makes Whippet sensitive to mismatches near splice sites and requires reads across splice junctions to have a minimum overhang of <italic toggle="yes">k</italic>. Furthermore, the heuristic pruning of the search space might eliminate true hits of reads. Connecting all annotated donor and acceptor sites to be able to detect novel junctions has also been proposed by other (alignment-based) methods such as ASGAL (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>). Its high computational cost, however, makes ASGAL suitable for the analysis of single genes or a small set of target genes.</p>
    <p>In fortuna, we therefore take a different approach and pseudoalign reads to longer transcript fragments that join splice junctions. A similar idea was adopted by Yanagi (<xref rid="btad419-B15" ref-type="bibr">Gunady <italic toggle="yes">et al.</italic> 2019</xref>), but it is limited to annotated transcripts. It extracts transcript segments only across annotated splice junctions and can thus not identify novel events. By contrast, we assemble fragments by “guessing” novel introns that combine annotated splice sites in novel, biologically motivated ways. From pseudoalignments we derive counts of the most elementary splicing units which correspond to the number of reads with distinct splicing patterns that were obtained from an extended, well-defined catalog of transcripts. These counts can then be directly used for AS analysis or summarized to larger units such as those used by DEXSeq. In addition, fortuna optionally incorporates novel splice sites identified by STAR (<xref rid="btad419-B10" ref-type="bibr">Dobin <italic toggle="yes">et al.</italic> 2013</xref>) or any other spliced aligner and annotates all splicing events implied by novel introns.</p>
    <p>In experiments on synthetic and real data, we demonstrate a substantial speed advantage of fortuna compared to traditional align and count approaches. We further show that fortuna more accurately maps reads across novel introns in challenging scenarios when reads contain mismatches or span multiple junctions. We use fortuna to catalog thousands of novel splicing events in different <italic toggle="yes">Drosophila</italic> pupal tissues.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>The steps that fortuna takes to quantify unambiguous building blocks of transcripts and to detect and annotate novel splicing events are illustrated in <xref rid="btad419-F1" ref-type="fig">Fig. 1</xref>. fortuna starts (A) by “guessing” novel transcripts based on annotated splice sites (Section 2.2). It then (B) creates a set of sequence fragments of annotated and guessed novel transcripts that contain all possible combinations of unspliced exonic segments. We design this fragment set to be small with little sequence overlap to reduce required computational resources (described formally in Section 2.3). From this set of fragments we build a kallisto index (C) and use it to efficiently pseudoalign reads to fragments (D), which yields counts of the most elementary splicing units (<italic toggle="yes">signature counts</italic>, introduced in the next Section). Optionally, fortuna can further incorporate novel splice sites (e.g. exonic segment <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) identified by any spliced aligner from reads that remained unmapped in step (D), but does not attempt to assemble them to novel exons. Computed counts can be directly used for alternative splicing (AS) analysis or added up to larger units such as those used by DEXSeq (E1). In addition, fortuna annotates all novel events (E2) based on precise definitions of event types (Section 2.4).</p>
    <fig position="float" id="btad419-F1">
      <label>Figure 1.</label>
      <caption>
        <p>fortuna overview. Detailed description in the main text</p>
      </caption>
      <graphic xlink:href="btad419f1" position="float"/>
    </fig>
    <sec>
      <title>2.1 Equivalent mapping signatures</title>
      <p>Short reads can be summarized with respect to a catalog of known transcripts by grouping them according to the set of transcripts they could have originated from. kallisto (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>), for instance, considers two reads equivalent if they are compatible with the exact same set of transcripts. The red reads, dark blue reads, and the two spliced green reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> are compatible with annotated transcripts <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and are thus pairwise equivalent. kallisto then summarizes read data by the sizes of the resulting equivalence classes, often referred to as transcript compatibility counts (TCCs). Reads from the previous example would thus form an equivalence class of size 7. This data summary can serve as input to an EM algorithm to quantify known transcripts (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>), or can be directly compared between conditions (<xref rid="btad419-B27" ref-type="bibr">Soneson <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B7" ref-type="bibr">Cmero <italic toggle="yes">et al.</italic> 2019</xref>), or single cells (<xref rid="btad419-B22" ref-type="bibr">Ntranos <italic toggle="yes">et al.</italic> 2016</xref>).</p>
      <fig position="float" id="btad419-F2">
        <label>Figure 2.</label>
        <caption>
          <p>In this example, transcripts <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are assumed to be annotated, while <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are novel. <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> partition exons into subexons <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>–<inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Red, dark blue, and spliced green reads are considered pairwise equivalent by kallisto, while Yanagi distinguishes red and dark blue reads in distinct counts. Gray reads from novel junction are ignored in kallisto and Yanagi. DEXSeq counts reads overlapping individual subexons, while Yanagi summarizes red and spliced green reads into a single counting bin. fortuna refines counting bins to mapping signatures, such as <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the case of the shaded blue read</p>
        </caption>
        <graphic xlink:href="btad419f2" position="float"/>
      </fig>
      <p>TCCs by definition rely on known transcripts. Reads obtained from novel transcripts may be ignored, such as the gray reads from novel transcript <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>, or transcripts missing in the annotation may cause mixing of nonequivalent reads, e.g. red and spliced green reads. Another tool Yanagi (<xref rid="btad419-B15" ref-type="bibr">Gunady <italic toggle="yes">et al.</italic> 2019</xref>) therefore separates alternatively spliced gene regions into distinct counting bins, such that shifts in counts caused by transcripts that combine distant splicing events in novel ways can be detected. For example, an increase in expression of unknown transcript <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> can yield more reads of the dark blue type but not of the red type, which will be reflected in Yanagi’s distinct counts.</p>
      <p>Novel junctions, however, even across annotated splice sites, would still be missed by Yanagi (e.g. gray reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>) and nonequivalent reads may incorrectly be summarized in the same counting bin (red and spliced green reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>). Methods such as DEXSeq (<xref rid="btad419-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2012</xref>) therefore subdivide exons into smaller units that transcripts could combine in novel ways. A set of transcripts naturally partitions exons into the smallest possible segments, or <italic toggle="yes">subexons</italic>, that are bounded by splice sites or transcription start and end sites [introduced previously as, e.g., <italic toggle="yes">segments</italic> (<xref rid="btad419-B12" ref-type="bibr">Feng <italic toggle="yes">et al.</italic> 2011</xref>) or <italic toggle="yes">blocks</italic> (<xref rid="btad419-B4" ref-type="bibr">Beretta <italic toggle="yes">et al.</italic> 2014</xref>)]. For example, transcripts <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> imply subexons <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> through <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. DEXSeq then counts the overlapping number of aligned reads for every such subexon. Gray reads, for example, contribute a count of 3 to both <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The possible contribution of a single read to counts of multiple subexons could introduce ambiguities in the DEXSeq analysis. Instead, a different approach has been developed to address this problem by considering two reads equivalent if they overlap the exact same sequence of subexons. This preserves as much information as possible about potentially novel connectivity of subexons in transcripts. For instance, the shaded blue read in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> overlaps subexons <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, in this order, and can be generated only by the splicing pattern of <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, even though each of the three subexons occur in multiple transcripts. These <italic toggle="yes">(sub)exon paths</italic> were originally introduced in <xref rid="btad419-B24" ref-type="bibr">Rossell <italic toggle="yes">et al.</italic> (2014)</xref>, and have since been used in various splicing analysis methods (e.g. <xref rid="btad419-B6" ref-type="bibr">Canzar <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B1" ref-type="bibr">Alqassem <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <p>To more formally state this concept as applied in this work, let a given gene be subdivided into subexons <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, consecutively numbered in increasing order of their genomic coordinates. Then the <italic toggle="yes">mapping signature</italic> of a read <italic toggle="yes">r</italic> denotes the increasing sequence of indices of subexons <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> read <italic toggle="yes">r</italic> overlaps, such as <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the case of the shaded read in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>. Then, two reads <italic toggle="yes">r</italic> and <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> are equivalent if their mapping signatures are identical, i.e. if <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We refer to the sizes of the resulting equivalence classes as <italic toggle="yes">signature counts.</italic> Mapping signatures can naturally be extended to paired-end reads. A read pair <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> has signature <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Two paired-end reads <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> are equivalent if <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. In the remainder of this work, we restrict the discussion to single-end reads. We describe how fortuna processes paired-end reads in Section 3.4 and discuss the limitation of this approach in Section 4. To simplify notation, we drop the read subscript where the meaning is clear from the context. We similarly model both exons and transcripts as sequences of subexons and denote the sequence of subexon indices that define exon <italic toggle="yes">e</italic> or transcript <italic toggle="yes">t</italic> as <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. We alternatively treat transcripts as sequences of exons and point out the distinction where necessary.</p>
      <p>Signature counts computed by fortuna contain sufficient information to allow conversion to other count types without processing raw reads or their alignments, while the reverse is not true. The set of compatible transcripts, and thus the equivalence class of a read as defined by kallisto can be computed from the read’s mapping signature <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> as
where <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denotes the set of transcripts subexon <italic toggle="yes">s</italic> is contained in and <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mo>ı</mml:mo><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:math></inline-formula> contains subexons that lie between the first and last subexon of <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> but are not in <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>. Yanagi’s equivalence classes can be obtained by merging overlapping mapping signatures that are compatible with the same set of (annotated) transcripts. In <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>, for instance, red reads [signature <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>] and spliced green reads [signature <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>], would be combined into a single counting class, given that transcript <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with its novel junction is missing in the annotation. To generate counts as used in DEXSeq, for every subexon <italic toggle="yes">s</italic> we simply add all counts of mapping signatures that contain <italic toggle="yes">s</italic>. Finally, signature counts can be summed to quantify the elements of splicing graphs. SplAdder, for example, represents subexons and their connections by introns as nodes and edges in a <italic toggle="yes">segment graph</italic>. SplAdder quantifies individual nodes and edges, and thus does not allow reconstruction of mapping signatures which correspond to more complex combinations of elements, e.g. more than one intron, in the segment graph.</p>
      <disp-formula id="E1">
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∩</mml:mo>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mo>ı</mml:mo>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mi>t</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>∖</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∪</mml:mo>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mover accent="true">
                        <mml:mo>ı</mml:mo>
                        <mml:mo>¯</mml:mo>
                      </mml:mover>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mi>t</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
    </sec>
    <sec>
      <title>2.2 Guessing alternative processing of pre-mRNA</title>
      <p>Pseudoalignments computed by methods such as kallisto rely on a set of annotated transcripts. Reads are compared to this annotated catalog to determine from which transcript they could have potentially originated. Here, we conceptually extend such an annotated set of transcripts <italic toggle="yes">T</italic> to include additional, undocumented alternative splicing events. For a gene <italic toggle="yes">g</italic>, let <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> be the set of transcripts annotated for <italic toggle="yes">g</italic>. In virtual transcriptome <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, we extend <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by transcripts that can be derived from transcripts in <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by alternatively splicing its exons using known donor and acceptor sites. More precisely, <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> additionally contains all transcripts <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> that can be generated from a transcript <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by skipping exons in <italic toggle="yes">t</italic> and by modifying the boundaries of the remaining exons consistently with donor and acceptor sites contained in other transcripts in <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
      <p>For example, novel transcript <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> is contained in <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, since its novel junction can be obtained by skipping an exon in <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The sequence of introns in <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, i.e. its <italic toggle="yes">intron chain</italic>, is also contained in <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, since its junctions either match a junction in <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or combine a donor site in <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with an acceptor in <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Note that transcript <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> also uses a novel transcription start site, which we do not attempt to infer in fortuna. More formally, set <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> contains all transcripts that satisfy the following:</p>
      <statement id="mthst1">
        <label>Definition 1</label>
        <p>(Virtual transcriptome <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>). <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains all transcripts</italic> <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic></p>
        <p>
          <list list-type="simple">
            <list-item>
              <p><italic toggle="yes">(a)</italic> <italic toggle="yes">there exists a transcript</italic> <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that every exon e of</italic> <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">has nonempty overlap with t, and</italic> <inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains the same transcript start site (TSS) and transcription end site (TES) as t</italic>,</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(b)</italic> <italic toggle="yes">no two “touching” exons from different transcripts can be merged [see property (i) of</italic> <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>]</italic>,</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(c)</italic> <inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains only annotated donor and acceptor sites [see property (ii) of</italic> <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>]</italic>.</p>
            </list-item>
          </list>
        </p>
      </statement>
      <p>Transcripts <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref> are examples of novel transcripts created in <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref> shows examples of transcripts that are not contained in <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, because they violate property <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (transcript <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) or property <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (transcript <inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.). In virtual transcriptome <inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> we mimic more general alternative processing of pre-mRNA, including splicing, 5’ end capping, and 3’ end cleavage. In contrast to <inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, annotated splice sites can be combined in novel ways without restriction to the (modified) exons of a reference transcripts and the genomic region bounded by its TSS and TES. The formal definition of virtual transcriptome <inline-formula id="IE86"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>. It holds that <inline-formula id="IE87"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. Transcript <inline-formula id="IE88"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>, for instance, is contained in <inline-formula id="IE89"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> but not in <inline-formula id="IE90"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> since it combines exons from different transcripts.</p>
      <p>The guessing of novel transcripts in virtual transcriptomes introduces new combinations of annotated splice sites, but the detection of novel splice sites requires a conventional spliced alignment of reads. fortuna optionally incorporates novel splice sites found by a spliced aligner as described in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>.</p>
    </sec>
    <sec>
      <title>2.3 Transcript fragments</title>
      <p>fortuna never explicitly constructs virtual transcriptomes, but counts mapping signatures that are compatible with fragments extracted from them. Given a read length <italic toggle="yes">l</italic> and a transcriptome <italic toggle="yes">T</italic> (or one of its extensions <inline-formula id="IE91"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE92"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>), we define the set of signatures that can have a nonzero count as <italic toggle="yes">feasible signatures</italic>. In other words, a signature <inline-formula id="IE93"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> is feasible if a read of length <italic toggle="yes">l</italic> can be obtained from a transcript in <italic toggle="yes">T</italic>, such that it overlaps exactly subexons in <inline-formula id="IE94"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>. More formally, let <inline-formula id="IE95"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>⊆</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> denote <inline-formula id="IE96"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> to be a subsequence of <inline-formula id="IE97"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and let <inline-formula id="IE98"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı </mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo> ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> specify a contiguous subsequence <inline-formula id="IE99"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> of <inline-formula id="IE100"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. For instance, <inline-formula id="IE101"><mml:math id="IM101" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> but <inline-formula id="IE102"><mml:math id="IM102" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">) </mml:mo><mml:mrow><mml:msub><mml:mo>⊈</mml:mo><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false"> (</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, while <inline-formula id="IE103"><mml:math id="IM103" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
      <statement id="mthst2">
        <label>Definition 2</label>
        <p>(feasible signature). <italic toggle="yes">Let l be the read length and T the set of transcripts. A sequence</italic> <inline-formula id="IE104"><mml:math id="IM104" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>  <italic toggle="yes">of subexons in T is a feasible signature if and only if it satisfies:</italic><disp-quote content-type="extract"><p>(<inline-formula id="IE105"><mml:math id="IM105" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">There must exist a transcript</italic> <inline-formula id="IE106"><mml:math id="IM106" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic> <inline-formula id="IE107"><mml:math id="IM107" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı </mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo> ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>(<inline-formula id="IE108"><mml:math id="IM108" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">A read of length l can be sampled from</italic> <inline-formula id="IE109"><mml:math id="IM109" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula><italic toggle="yes">:</italic> <inline-formula id="IE110"><mml:math id="IM110" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>ı</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>≥</mml:mo><mml:mi>l</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></inline-formula></p><p>(<inline-formula id="IE111"><mml:math id="IM111" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">If</italic> <inline-formula id="IE112"><mml:math id="IM112" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">with</italic> <inline-formula id="IE113"><mml:math id="IM113" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula><italic toggle="yes">, a read of length l must be able to cover all subexons:</italic></p></disp-quote>
 <disp-formula id="E4"><mml:math id="M4" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>2.</mml:mn></mml:mrow></mml:math></disp-formula></p>
      </statement>
      <p>A read contained in the equivalence class of a feasible signature <inline-formula id="IE115"><mml:math id="IM115" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> fully covers all subexons <inline-formula id="IE116"><mml:math id="IM116" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with <inline-formula id="IE117"><mml:math id="IM117" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, but may overlap first and last subexons <inline-formula id="IE118"><mml:math id="IM118" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE119"><mml:math id="IM119" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> only partially. More specifically, let <inline-formula id="IE120"><mml:math id="IM120" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE121"><mml:math id="IM121" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denote the genomic coordinate of the first and last nucleotide in subexon <italic toggle="yes">s</italic>, respectively. Then the leftmost nucleotide <inline-formula id="IE122"><mml:math id="IM122" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> a read of length <italic toggle="yes">l</italic> can cover in <inline-formula id="IE123"><mml:math id="IM123" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the rightmost nucleotide <inline-formula id="IE124"><mml:math id="IM124" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> it can cover in <inline-formula id="IE125"><mml:math id="IM125" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are specified by <xref rid="E3" ref-type="disp-formula">Equations (1)</xref> and (2) in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>. We denote by [<italic toggle="yes">i</italic>, <italic toggle="yes">j</italic>] the genomic sequence from coordinate <italic toggle="yes">i</italic> to (including) coordinate <italic toggle="yes">j</italic> and, with a slight abuse of notation, by <inline-formula id="IE126"><mml:math id="IM126" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> the genomic sequence of subexon <italic toggle="yes">s</italic>. Then the minimal nucleotide sequence <inline-formula id="IE127"><mml:math id="IM127" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> such that every possible read with mapping signature <inline-formula id="IE128"><mml:math id="IM128" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, for <inline-formula id="IE129"><mml:math id="IM129" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, maps to <inline-formula id="IE130"><mml:math id="IM130" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is:
where “<inline-formula id="IE131"><mml:math id="IM131" display="inline" overflow="scroll"><mml:mo>⋅</mml:mo></mml:math></inline-formula>” denotes the concatenation of nucleotide sequences. For <inline-formula id="IE132"><mml:math id="IM132" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE133"><mml:math id="IM133" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Note that <inline-formula id="IE134"><mml:math id="IM134" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a fragment of a transcript in <italic toggle="yes">T</italic> due to the property <inline-formula id="IE135"><mml:math id="IM135" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Definition 2. Therefore, to determine the mapping signatures of all reads of length <italic toggle="yes">l</italic> obtained from transcripts in <italic toggle="yes">T</italic>, we need to contiguously map them to transcript fragments in the following set <italic toggle="yes">F</italic>:
</p>
      <disp-formula id="E2">
        <mml:math id="M2" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mi>f</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mn>5</mml:mn>
                </mml:mrow>
                <mml:mi>l</mml:mi>
                <mml:mo>′</mml:mo>
              </mml:msubsup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
            <mml:mrow>
              <mml:msup>
                <mml:mrow>
                  <mml:mn>3</mml:mn>
                </mml:mrow>
                <mml:mo>′</mml:mo>
              </mml:msup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mn>1</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>…</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>m</mml:mi>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msup>
                <mml:mrow>
                  <mml:mn>5</mml:mn>
                </mml:mrow>
                <mml:mo>′</mml:mo>
              </mml:msup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mi>m</mml:mi>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
            <mml:mrow>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mn>3</mml:mn>
                </mml:mrow>
                <mml:mi>l</mml:mi>
                <mml:mo>′</mml:mo>
              </mml:msubsup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <disp-formula id="E3">
        <label>(1)</label>
        <mml:math id="M3" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>F</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mn>1</mml:mn>
                  <mml:mo>:</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>:</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mo>{</mml:mo>
            <mml:mi>f</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>|</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mtext>is feasible signature given</mml:mtext>
            <mml:mo> </mml:mo>
            <mml:mi>T</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>l</mml:mi>
            <mml:mo>}</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>A read that maps to a fragment <inline-formula id="IE136"><mml:math id="IM136" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in <inline-formula id="IE137"><mml:math id="IM137" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> has mapping signature <inline-formula id="IE138"><mml:math id="IM138" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>, and <inline-formula id="IE139"><mml:math id="IM139" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is encoded in the fragment name. Set <inline-formula id="IE140"><mml:math id="IM140" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> will contain many fragments that overlap in their sequence, as illustrated in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>. Redundant sequences can be removed by eliminating all signatures that are contained in other signatures, to obtain fragment set <inline-formula id="IE141"><mml:math id="IM141" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (Equation 3, <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>). In contrast to <inline-formula id="IE142"><mml:math id="IM142" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, sequences of boundary subexons are included in full in the definition of <inline-formula id="IE143"><mml:math id="IM143" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to include all nucleotide sequences corresponding to contained signatures. <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref> contains a description of the algorithm to compute <inline-formula id="IE144"><mml:math id="IM144" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE145"><mml:math id="IM145" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
      <p><xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref> demonstrates that <inline-formula id="IE146"><mml:math id="IM146" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can contain a substantially smaller number of fragments than <inline-formula id="IE147"><mml:math id="IM147" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Since there is no longer a one-to-one correspondence between fragments in <inline-formula id="IE148"><mml:math id="IM148" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and feasible signatures, the precise equivalence class a read <italic toggle="yes">r</italic> belongs to needs to be computed by a linear scan through the subexons the fragment is composed of. Fragments in <inline-formula id="IE149"><mml:math id="IM149" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> may mutually overlap in their boundary subexons <inline-formula id="IE150"><mml:math id="IM150" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE151"><mml:math id="IM151" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> that are included in their entire length irrespective of read length (e.g. subexon <inline-formula id="IE152"><mml:math id="IM152" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>). We therefore reduce sequence overlap by including sufficiently long subexons as singleton fragments which in turn allows us to trim sequences at the end of the remaining fragments to at most <inline-formula id="IE153"><mml:math id="IM153" display="inline" overflow="scroll"><mml:mrow><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> bases in the first and last subexons. This trimming strategy ensures that every mapping that overlaps <inline-formula id="IE154"><mml:math id="IM154" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE155"><mml:math id="IM155" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> also overlaps <inline-formula id="IE156"><mml:math id="IM156" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE157"><mml:math id="IM157" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively, and thus does not conflict with mappings to singleton <inline-formula id="IE158"><mml:math id="IM158" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE159"><mml:math id="IM159" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The trimming of fragments and the final set of fragments <italic toggle="yes">F</italic> generated by fortuna are formally specified in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>.</p>
      <statement id="mthst3">
        <label>Theorem 1.</label>
        <p><italic toggle="yes">Let</italic> <inline-formula id="IE160"><mml:math id="IM160" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">denote the (maximal) feasible signature that gave rise to fragment</italic> <inline-formula id="IE161"><mml:math id="IM161" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula><italic toggle="yes">. Given read length l and transcriptome T, the set of transcript fragments F is correct and complete in the following sense:</italic></p>
        <p>
          <list list-type="simple">
            <list-item>
              <p><italic toggle="yes">(1)</italic> <italic toggle="yes">F only contains sequences that can be derived from transcripts in T, namely</italic> <inline-formula id="IE162"><mml:math id="IM162" display="inline" overflow="scroll"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi><mml:mo> </mml:mo><mml:mo>∃</mml:mo><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic> <inline-formula id="IE163"><mml:math id="IM163" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(2)</italic> <italic toggle="yes">Any read of length l sampled from a transcript in T can be mapped to some</italic> <inline-formula id="IE164"><mml:math id="IM164" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula>.</p>
            </list-item>
          </list>
        </p>
      </statement>
      <p>The proof of Theorem 1 can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>.</p>
    </sec>
    <sec>
      <title>2.4 Alternative splicing events</title>
      <p>fortuna classifies every novel intron implied by a mapping signature as one of the following types of alternative splicing: (Multi-)exon skipping, alternative donor, alternative acceptor, alternative donor-acceptor pair, novel intron in exon [or <italic toggle="yes">exitron</italic> (<xref rid="btad419-B31" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2021</xref>)], and intron retention. Similar to AStalavista (<xref rid="btad419-B13" ref-type="bibr">Foissac and Sammeth 2007</xref>), we compare a novel intron pairwise to every annotated transcript <italic toggle="yes">t</italic> to identify the implied event type. For formal definitions of events, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.4</xref>. Note that the same intron can imply different types of events with respect to different transcripts.</p>
      <p>Since fortuna does not attempt to assemble novel exons, it conservatively labels reads as <italic toggle="yes">intron retention</italic> only if they overlap intronic sequences that are not part of any annotated transcript, and within which no further splicing was observed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.4</xref>).</p>
      <p>All reads that do not satisfy the conditions of the above event types are classified as <italic toggle="yes">unknown</italic> by fortuna. Reads with unknown splicing status were either obtained from novel exons or span novel introns that overlap at most one exon in any given transcript. Both cases would require an assembly of reads to be correctly classified. <xref rid="btad419-F3" ref-type="fig">Figure 3</xref> (and <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref>) illustrates all event types.</p>
      <fig position="float" id="btad419-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Illustration of splicing event definitions. Transcripts <inline-formula id="IE165"><mml:math id="IM165" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> imply subexons <inline-formula id="IE166"><mml:math id="IM166" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>8</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Subexons are colored according to the event type the corresponding (novel) splice junction defines. In this example, mapping signature <inline-formula id="IE167"><mml:math id="IM167" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> defines a classical exon skipping (ES) with respect to <inline-formula id="IE168"><mml:math id="IM168" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and a nonclassical ES wrt <inline-formula id="IE169"><mml:math id="IM169" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE170"><mml:math id="IM170" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> spans an alternative donor (AD) wrt <inline-formula id="IE171"><mml:math id="IM171" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE172"><mml:math id="IM172" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>) an alternative acceptor (AA) wrt <inline-formula id="IE173"><mml:math id="IM173" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE174"><mml:math id="IM174" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> an alternative donor-acceptor pair (AP) wrt <inline-formula id="IE175"><mml:math id="IM175" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and an alternative acceptor wrt <inline-formula id="IE176"><mml:math id="IM176" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE177"><mml:math id="IM177" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> a novel intron in exon (IE) wrt <inline-formula id="IE178"><mml:math id="IM178" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, while the subexons <inline-formula id="IE179"><mml:math id="IM179" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE180"><mml:math id="IM180" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> including the intron between them constitute a novel intron retention (IR)</p>
        </caption>
        <graphic xlink:href="btad419f3" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 fortuna more accurately detects novel splice junctions than existing methods</title>
      <p>In this section we evaluate the accuracy of fortuna and alternative methods in identifying novel junctions between annotated splice sites. We used FluxSimulator (<xref rid="btad419-B14" ref-type="bibr">Griebel <italic toggle="yes">et al.</italic> 2012</xref>) to generate two simulated data sets containing 80 million reads of length 75 and 100 bp. Reads were obtained from human transcripts annotated in NCBI’s RefSeq database (release 109) and included sequencing errors according to an Illumina error profile predefined by FluxSimulator. To mimic an incomplete catalogue of known splice junctions, we used AStalavista (<xref rid="btad419-B13" ref-type="bibr">Foissac and Sammeth 2007</xref>) to identify exon skipping events and alternative acceptor and donor sites in our simulated data sets and subsequently removed all transcripts that supported such an event type, i.e. that contained the corresponding intron. Even though fortuna introduces more complex splicing alterations in its virtual transcriptomes, for ease of interpretability we focus the analysis on these simple, most abundant types of splicing events (<xref rid="btad419-B25" ref-type="bibr">Sammeth <italic toggle="yes">et al.</italic> 2008</xref>) that involve a single alternative splice site.</p>
      <p>We then provided each method with the full read data, but only the partial transcript annotation. We benchmarked all methods with respect to simulated reads spanning novel junctions that re-combine annotated donor and acceptor sites. In both datasets (75 and 100 bp), we split this set of reads into error-free reads (234,432 and 302,409) and reads that contained at least one mismatch (75,594 and 141,213). Consistent with <xref rid="btad419-B28" ref-type="bibr">Srivastava <italic toggle="yes">et al.</italic> (2016)</xref>, we consider a read a true positive if at least one of its alignments computed by a method matches its true origin across a novel junction. Accordingly, if none of its alignments matches its true origin, we define the read to be a false positive. We counted unmapped reads as false negatives. Based on these definitions, we report in <xref rid="btad419-F4" ref-type="fig">Fig. 4</xref> recall and precision on the 75-bp dataset comparing fortuna to methods Whippet and STAR, which are both able to map reads to novel junctions. STAR is a general purpose spliced aligner whose output is typically utilized by specialized AS analysis methods such as LeafCutter (<xref rid="btad419-B20" ref-type="bibr">Li <italic toggle="yes">et al.</italic> 2018</xref>), rMATS (<xref rid="btad419-B26" ref-type="bibr">Shen <italic toggle="yes">et al.</italic> 2014</xref>), or SplAdder (<xref rid="btad419-B17" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2016</xref>). We ran STAR once in 1-pass and once in 2-pass mode using default options, and provided the same partial annotation during index generation as to all other methods. We let fortuna guess transcripts according to <inline-formula id="IE181"><mml:math id="IM181" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (see Definition 1). As expected, STAR run in 2-pass mode achieved slightly better results than its faster 1-pass variant. For error-free reads, STAR benefited from the second run mostly in terms of precision. When reads contained mismatches, the second STAR run also improved sensitivity. fortuna consistently detected novel junctions with the highest precision, with only a minor drop in sensitivity when inferring novel exons skipping or alternative donors from error-free reads. For reads containing mismatches, fortuna paired the highest sensitivity with the highest precision across event types. Whippet, on the other hand, detected the fewest reads across novel junctions, and mismatches caused its sensitivity to drop further to between 68% and 71%. A similar pattern can be observed for 100 bp long reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5</xref>). Taking junction reads with and without errors together, fortuna consistently achieved highest recall and precision (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). The number of hits per read for STAR, Whippet, and fortuna were 1.02, 1.04, and 1.16, respectively, with a marginally higher value obtained by STAR in 2-pass mode than in 1-pass mode. Even when considering only annotated junctions, their explicit construction by fortuna facilitates the mapping of reads across them (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S6</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). As expected, in this setting the two-pass mode does not provide any advantage for STAR. We have also compared fortuna to ASGAL (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>), a spliced aligner that is able to detect novel splicing events. Consistent with other methods in this benchmark, we evaluated the alignments across novel junctions produced by ASGAL and ignored the subsequent event identification step. ASGAL aligns reads with a competitive precision but achieves substantially smaller recall values, especially when reads contain mismatches (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). For genome-wide analysis, ASGAL relies on Salmon (<xref rid="btad419-B23" ref-type="bibr">Patro <italic toggle="yes">et al.</italic> 2017</xref>) to split input reads into one instance per gene. This might leave some reads from novel junctions unmapped (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>) potentially causing a drop in recall. Due to recall values that lie far outside of the shown range, we did not include ASGAL in <xref rid="btad419-F4" ref-type="fig">Fig. 4</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5</xref>. ASGAL was designed to run on a single gene or a small set of target genes. For the genome-wide analysis on the two simulated datasets, ASGAL took more than 32 h. Because of its excessive running time and its different intended use we exclude it from the following experiments, which involve more than three times larger datasets.</p>
      <fig position="float" id="btad419-F4">
        <label>Figure 4.</label>
        <caption>
          <p>Precision and recall in finding novel junctions between annotated splice sites. Results of fortuna, Whippet, STAR and STAR with two-pass mode (STAR2) are shown for the simulated dataset with 75 bp reads. Reads were split into error-free reads (upper row) and reads containing mismatches (bottom row). Results are stratified by event type (columns)</p>
        </caption>
        <graphic xlink:href="btad419f4" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 fortuna finds more reads supporting aberrant splicing events in patients with autism spectrum disorder</title>
      <p>Noncoding genetic variants that disrupt mRNA splicing play an important role in rare genetic diseases (<xref rid="btad419-B8" ref-type="bibr">Cooper <italic toggle="yes">et al.</italic> 2009</xref>). In <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref>, the authors identified a set of <italic toggle="yes">de novo</italic> mutations that they predicted to alter splicing in individuals with intellectual disability or autism spectrum disorder (ASD). The authors validated 21 aberrant splicing events associated with the predicted <italic toggle="yes">de novo</italic> mutations based on RNA-seq reads spanning the affected splice junction(s). Here we use fortuna to re-align reads from RNA-seq experiments performed in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> on peripheral blood-derived lymphoblastoid cell lines from individuals with ASD. We compared the number of reads supporting the aberrant splicing events found by fortuna to the original study as well as to the number of reads found by STAR and Whippet. STAR was run with default options and was provided the same transcript annotation (RefSeq, release 109) during index generation as fortuna and Whippet. fortuna was run to guess novel transcripts according to the definition of transcriptome <inline-formula id="IE182"><mml:math id="IM182" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (Definition 1 in Section 2.2). In fortuna we only retained the single alignment designated as primary by kallisto. The eight aberrant exon skipping events reported in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> correspond to the eight RNA-seq samples listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>. We excluded sample 28, as the exon skipping event in this sample is contained in the RefSeq annotation used in our experiments. Across exon skipping events, the three methods agree on a large fraction of junction spanning reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S7</xref>). The original publication (<xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> 2019</xref>) used OLego (<xref rid="btad419-B33" ref-type="bibr">Wu <italic toggle="yes">et al.</italic> 2013</xref>) to align reads. <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> tried to eliminate OLego’s reference bias caused by its dependence on splicing motifs, but overall fewer supporting reads were found possibly due to disrupted motifs (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>). On the skipping event in sample 20, STAR and fortuna agreed on a large number of reads (196) which remained unmapped by Whippet. Across events, fortuna detected the largest number of supporting reads, with a substantial number of reads uniquely found by fortuna in all but two samples. Conversely, each read mapped by STAR across one of the aberrantly spliced novel junctions was identically mapped by fortuna. Visual inspection of reads mapped uniquely by fortuna revealed that all but 35 reads in sample 36 spanned at least two introns, which makes them particularly challenging to identify. The remaining 35 reads were mapped uniquely by fortuna across the aberrantly spliced intron reported in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref>. This shows that fortuna has a higher sensitivity to detect difficult AS events, and outperforms other analysis tools.</p>
      <p>The eight samples listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref> contained novel acceptor or donor sites that fortuna detected using STAR in a second phase to align reads that were not mapped to annotated transcripts or novel donor and acceptor combinations guessed by fortuna (option—<monospace>refine</monospace>, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>). As expected, fortuna and STAR agreed on the exact set of supporting reads, while Whippet was not able to identify any such read (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>). To be able to detect novel splice sites, Whippet needs to be provided with the (full) alignments of reads previously computed by a conventional read mapper such as STAR, which, in contrast to fortuna, eliminates its original speed advantage over traditional alignment methods. Compared to STAR alignments, only ∼2% of novel junctions between annotated splice sites were missed by fortuna (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S5</xref>), which demonstrates the effectiveness of its underlying virtual transcriptome.</p>
    </sec>
    <sec>
      <title>3.3 fortuna aligns and counts faster than existing methods</title>
      <p>To examine the running time of fortuna as a function of the number of reads, we randomly sampled between 10% and 90% of reads in ASD sample 29, which contained ∼291 million 151 bp paired-end reads. CPU times were measured on a 2.30 GHz Intel<sup>®</sup> Xeon<sup>®</sup> E5-2697 v4 processors with 320 GB memory. STAR does not count reads in genomic features, and thus needs to be combined with counting methods such as SplAdder, sigcount (<xref rid="btad419-B6" ref-type="bibr">Canzar <italic toggle="yes">et al.</italic> 2016</xref>), htseq-count (<xref rid="btad419-B3" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2015</xref>), or featureCounts (<xref rid="btad419-B21" ref-type="bibr">Liao <italic toggle="yes">et al.</italic> 2014</xref>). The latter two methods count reads that overlap any of a set of genomic intervals and thus cannot count reads that exactly overlap all intervals (here subexons) of a mapping signature. We therefore provide the total time required to run STAR (in faster 1-pass mode) combined with either SplAdder or sigcount, with a prior sorting and indexing of alignments using samtools (<xref rid="btad419-B19" ref-type="bibr">Li <italic toggle="yes">et al.</italic> 2009</xref>). sigcount is based on the exact same definition of signature counts and uses efficient algorithms and data structures implemented in the SeqAn library (<xref rid="btad419-B11" ref-type="bibr">Döring <italic toggle="yes">et al.</italic> 2008</xref>). SplAdder quantifies reads in (sub)exons and across introns but cannot distinguish more complex combinations of subexons. We included SplAdder in this benchmark since it was used in a large-scale study of alternative splicing in almost 9000 tumor samples (<xref rid="btad419-B18" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2018</xref>), and since signature counts used by fortuna can be converted in principle to exon/intron counts as used in SplAdder. We ran SplAdder with option –quantify-graph to omit the extraction of AS events. Consistent with previous experiments, fortuna was run to guess novel transcripts in <inline-formula id="IE183"><mml:math id="IM183" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (Definition 1).</p>
      <p><xref rid="btad419-F5" ref-type="fig">Figure 5</xref> demonstrates a clear speed advantage of alignment-free methods Whippet and fortuna compared to conventional align &amp; count approaches. fortuna is more than two times faster than Whippet on all but the smallest sample size. In contrast to Whippet, fortuna can further benefit from multiple threads and was able to count 291 million reads with equivalent mapping signatures in around 15 min using just four threads. With the same number of threads, STAR (1-pass) combined with sigcount took 159 min and was thus still slower than Whippet using a single thread.</p>
      <fig position="float" id="btad419-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Running time in minutes of fortuna and competing methods on random subsamples of an ASD sample with 291 million reads</p>
        </caption>
        <graphic xlink:href="btad419f5" position="float"/>
      </fig>
      <p><xref rid="sup1" ref-type="supplementary-material">Supplementary Table S6</xref> lists the total running times of all methods, which are further split into times required for alignment, sorting, and counting in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S7</xref>. As expected, running STAR in the more accurate 2-pass mode roughly doubled the time required for the alignment step. Note that fortuna and Whippet circumvent writing the (pseudo)alignments of reads to disk which can be time-consuming. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S8</xref>, we report running times of fortuna and Whippet when making use of the option to output aligned reads in addition to counts. Peak memory usage was smallest for methods Whippet (2 GB) and kallisto (4 GB). fortuna used up to 24 GB of memory, compared to 29 GB for STAR. For a shorter read length of 75 bp as used in one of our simulations, fortuna’s peak memory usage decreased to below 10 GB.</p>
      <p>In addition, we ran STAR on reads that fortuna was not able to map to transcripts in <inline-formula id="IE184"><mml:math id="IM184" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> which we then used to refine signature counts (option –refine, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>). After providing fortuna with 291 million reads, STAR was run on ∼20 million unmapped reads, ∼3 million of which it successfully aligned in 25 min (single-threaded). The final partitioning of subexons and the adjustment of signature counts by fortuna took &lt;2 min. This shows that fortuna can flexibly incorporate novel splice sites without sacrificing its core speed advantage.</p>
      <p>Finally, we show in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S9</xref> that the set of fragments <italic toggle="yes">F</italic> (equation (4), <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>) fortuna constructs is indeed smaller than <inline-formula id="IE185"><mml:math id="IM185" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (1) and contains less sequence redundancy than <inline-formula id="IE186"><mml:math id="IM186" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (equation (3), <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>), and thus yields the best trade-off between running time and memory usage.</p>
    </sec>
    <sec>
      <title>3.4 fortuna identifies novel, tissue-specific events in <italic toggle="yes">Drosophila</italic></title>
      <p>We next demonstrate the application of fortuna to gain novel, biologically relevant insight into tissue-specific splicing in the model organism <italic toggle="yes">Drosophila</italic>. We tested fortuna on paired-end RNA-seq data generated from different <italic toggle="yes">Drosophila</italic> pupal tissues, including dissected brain, indirect flight muscle (IFM) and whole leg. fortuna (pseudo-)aligned the two reads of each pair independently and reported the sum of counts over both ends. fortuna identified thousands of novel splicing events mapping to hundreds of genes in each tissue, even after stringent filtering (<xref rid="btad419-F6" ref-type="fig">Fig. 6A</xref>). About <inline-formula id="IE187"><mml:math id="IM187" display="inline" overflow="scroll"><mml:mrow><mml:mn>10</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of these events utilize novel splice acceptors or donors, while the majority reflect novel junctions between annotated splice sites (<xref rid="btad419-F6" ref-type="fig">Fig. 6B</xref>). Although we observed novel instances of all types of splice events, exon skipping events were most prevalent (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8A</xref>). Only <inline-formula id="IE188"><mml:math id="IM188" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>2</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel events are supported by 150 or more reads (∼RPM <inline-formula id="IE189"><mml:math id="IM189" display="inline" overflow="scroll"><mml:mo>&gt;</mml:mo></mml:math></inline-formula> 1), while more than <inline-formula id="IE190"><mml:math id="IM190" display="inline" overflow="scroll"><mml:mrow><mml:mn>60</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> are supported by five or fewer reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8B</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>), likely reflecting noise in the data given the sequencing depth. Thus, subsequent analysis was performed on events with an RPM <inline-formula id="IE191"><mml:math id="IM191" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1, to focus on the most biologically relevant events. We observed only weak correlation between event RPM and gene length, locus complexity or expression level at any filter level (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8C–E</xref>; <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>).</p>
      <fig position="float" id="btad419-F6">
        <label>Figure 6.</label>
        <caption>
          <p>fortuna detects novel, tissue-specific events in <italic toggle="yes">Drosophila</italic>. (A) Line plot showing the number of novel events (left) or genes containing novel events (right) in indirect flight muscle (IFM, green), leg (orange) and brain (purple) samples dissected from <italic toggle="yes">Drosophila</italic> at 72 h after puparium formation. Samples were evaluated at various RPM thresholds. (B) Bar plot of the percent of events (RPM <inline-formula id="IE192"><mml:math id="IM192" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 0) utilizing a novel splice acceptor (SA, cyan), a novel splice donor (SD, purple) or annotated SA/SD (yellow). (C) Venn diagram of the overlap in novel events (top, black numbers) and genes containing events (bottom, blue numbers) between IFM (left circle, purple), leg (right circle, cyan) and brain (bottom circle, yellow) at RPM <inline-formula id="IE193"><mml:math id="IM193" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1. (D) Clustering and heatmap of event RPM for the top 100 events in all three tissues. RT-PCR on IFM confirming novel events in <italic toggle="yes">bruno1</italic> (<italic toggle="yes">bru1</italic>) (E) and <italic toggle="yes">bent</italic> (<italic toggle="yes">bt</italic>, Titin) (F). Annotated (A) and novel (N) isoform lengths in basepairs (bp), as well as exons joined by the novel events (cyan, left most boxes in N), skipped exons (red, present in A but absent in N) and primers (arrows) are illustrated. The <italic toggle="yes">bru1</italic> event results in a shorter 5’-UTR on the <italic toggle="yes">bru1-RD</italic> mRNA isoform (coding: dark gray box, UTR: light gray boxes). The event in <italic toggle="yes">bt</italic> produces a shorter Projectin protein isoform lacking several Fibronectin-3 (FN3, F) and Immunoglobulin (Ig) domain repeats</p>
        </caption>
        <graphic xlink:href="btad419f6" position="float"/>
      </fig>
      <p>We hypothesized that the novel events might reflect tissue-specific splicing that is currently unannotated. Indeed, we found that only <inline-formula id="IE194"><mml:math id="IM194" display="inline" overflow="scroll"><mml:mrow><mml:mn>7.5</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of events with an RPM <inline-formula id="IE195"><mml:math id="IM195" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1 are shared across all three tissues, while <inline-formula id="IE196"><mml:math id="IM196" display="inline" overflow="scroll"><mml:mrow><mml:mn>13</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE197"><mml:math id="IM197" display="inline" overflow="scroll"><mml:mrow><mml:mn>15</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE198"><mml:math id="IM198" display="inline" overflow="scroll"><mml:mrow><mml:mn>48</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> are IFM, leg and brain specific, respectively (<xref rid="btad419-F6" ref-type="fig">Fig. 6C</xref>). This is also reflected in a heatmap of the top 100 events in each tissue (<xref rid="btad419-F6" ref-type="fig">Fig. 6D</xref>). Many events are tissue-specific or show dramatically different RPM levels between tissues. The genes harboring these novel events are diverse, and also reflect underlying tissue-specific functionalization as revealed by gene ontology enrichments (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S9A and B</xref>). For example, while genes harboring shared events are enriched in common biological process terms such as “cytoskeleton organization” and “behavior,” brain-specific genes are enriched in “synapse organization,” “neuron recognition,” and “ion transport” reflecting neuronal-specific processes. By contrast, IFM and leg-specific genes are enriched in “actomyosin structure organization,” “oxidation-reduction process,” “flight,” and “mesoderm development,” reflecting muscle-specific processes.</p>
      <p>We also noted that the number of novel events per gene is tissue-specific and moderately correlated with locus expression level (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8D and E</xref>; <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>). Many novel events are found in genes that undergo tissue-specific alternative splicing, for example genes that encode essential sarcomere proteins such as <italic toggle="yes">Mhc</italic>, <italic toggle="yes">bt</italic>, <italic toggle="yes">Unc-89</italic>, <italic toggle="yes">up</italic>, <italic toggle="yes">Tm1</italic>, <italic toggle="yes">wupA</italic>, <italic toggle="yes">Strn-Mlck</italic> and <italic toggle="yes">sls</italic> all have more than 10 novel events in IFM or leg samples (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S9C</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>). By contrast, in brain, genes relevant for neuronal activity such as <italic toggle="yes">kcc</italic>, <italic toggle="yes">slo</italic>, <italic toggle="yes">Atp</italic><inline-formula id="IE199"><mml:math id="IM199" display="inline" overflow="scroll"><mml:mo>α</mml:mo></mml:math></inline-formula>, <italic toggle="yes">CaMKII</italic>, <italic toggle="yes">brp</italic>, <italic toggle="yes">Cadps</italic>, <italic toggle="yes">stj</italic>, and <italic toggle="yes">Rdl</italic> have more than 10 novel events. We verified several novel events in IFM using RT-PCR. One novel exon skipping event in <italic toggle="yes">bru1</italic>, an essential regulator of IFM-specific splicing, results in a shorter 5’-UTR structure of the <italic toggle="yes">bru1-RD</italic> isoform mRNA (<xref rid="btad419-F6" ref-type="fig">Fig. 6E</xref>). Another (multi) exon skipping event we confirmed in <italic toggle="yes">bt</italic>, which encodes Projectin, a Titin isoform that forms connecting filaments in the sarcomere, results in attenuation of a protein region rich in flexible Fibronectin-3 (FN3) and immunoglobulin (Ig) domains (<xref rid="btad419-F6" ref-type="fig">Fig. 6F</xref>) that may impact sarcomere stiffness. These findings illustrate the utility of fortuna to identify novel, biologically relevant alternative splice events. Moreover, this data illustrates the importance of including novel splice event discovery in RNA-seq analysis pipelines, even for “wildtype” samples, as tissue or temporal specific splicing events may not be adequately represented in existing transcriptome annotations.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>We have introduced fortuna, a novel method that allows quantification of novel splicing patterns using fast pseudoalignments. It is several times faster than conventional align and count methods and its explicit construction of fragments containing guessed splice junctions facilitates the identification of novel introns in challenging scenarios.</p>
    <p>fortuna counts reads that are equivalent in terms of their splicing of unambiguous units that do not contain any splice sites. These signature counts can be used as input by various AS analysis methods, and are used by fortuna to infer and annotate novel introns. Furthermore, any counting unit based on transcriptomic features alone can be reconstructed from signature counts. We provide a script that within seconds converts signature counts to counts as defined and used by DEXSeq.</p>
    <p>fortuna currently does not take into account the pairing information of reads during mapping. It computes the signature of each read independently and optionally allows to combine them subsequently to more general signatures and counts of paired-end reads (see Section 2.1). In our experiments on paired-end read data (Section 3.4), we were interested in the total number of individual reads supporting novel junctions, regardless of read pairing. For other types of downstream analysis, signature counts of paired-end reads might contain valuable information that fortuna is able to reconstruct from signatures of individual reads. Using pairing information during mapping could potentially further improve mapping accuracy, but in contrast to genomic mappings the unknown structure of the originating transcript would only impose weak constraints on mapping locations.</p>
    <p>Even though Whippet previously accelerated AS analysis compared to classical alignment-based approaches, fortuna is more than two times faster than Whippet and can further benefit from multiple threads. More importantly, our experiments show that Whippet’s increased speed comes at the cost of a lower sensitivity, especially when mismatches affect flanking <italic toggle="yes">k</italic>-mers. In addition, Whippet will miss reads with an overhang smaller than <italic toggle="yes">k</italic> and can include novel splice sites only when additionally running a spliced aligner on the entire dataset.</p>
    <p>We also used fortuna to explore novel splice junctions in <italic toggle="yes">Drosophila</italic>, demonstrating the broad applicability of our tool across organisms. We identified hundreds of novel AS events reflecting distinct, tissue-specific expression signatures. fortuna’s speed and sensitivity thus make it possible to combine novel junction discovery with other RNA-seq analysis pipelines to supplement gaps in existing annotations and to obtain a more comprehensive and biologically relevant catalog of AS events between cells and tissues in normal development and in neuromuscular disease.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad419_Supplementary_Data</label>
      <media xlink:href="btad419_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Deutsche Forschungsgemeinschaft [417912216 to M.L.S. and SFB-TRR 338/1 2021-452881907 to S.C.]; Deutsche Gesellschaft für Muskelkranke (8225310 to M.L.S.); start-up funding from the University of Missouri Kansas City (to M.L.S.); the International Max Planck Research School for Molecular and Cellular Life Sciences (E.N.); and a Deutsche Forschungsgemeinschaft fellowship through the Graduate School of Quantitative Biosciences Munich (P.M.M.).</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>All mRNA-Seq data are publicly available from GEO under accession number GSE194199.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad419-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alqassem</surname><given-names>I</given-names></string-name>, <string-name><surname>Sonthalia</surname><given-names>Y</given-names></string-name>, <string-name><surname>Klitzke-Feser</surname><given-names>E</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>McSplicer: a probabilistic model for estimating splice site usage from RNA-seq data</article-title>. <source>Bioinformatics</source>  <year>2021</year>;<volume>37</volume>:<fpage>2004</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">33515239</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S</given-names></string-name>, <string-name><surname>Reyes</surname><given-names>A</given-names></string-name>, <string-name><surname>Huber</surname><given-names>W.</given-names></string-name></person-group>  <article-title>Detecting differential usage of exons from RNA-seq data</article-title>. <source>Genome Res</source>  <year>2012</year>;<volume>22</volume>:<fpage>2008</fpage>–<lpage>17</lpage>.<pub-id pub-id-type="pmid">22722343</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S</given-names></string-name>, <string-name><surname>Pyl</surname><given-names>PT</given-names></string-name>, <string-name><surname>Huber</surname><given-names>W.</given-names></string-name></person-group>  <article-title>Htseq – a Python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>31</volume>:<fpage>166</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Beretta</surname><given-names>S</given-names></string-name>, <string-name><surname>Bonizzoni</surname><given-names>P</given-names></string-name>, <string-name><surname>Vedova</surname><given-names>GD</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Modeling alternative splicing variants from RNA-seq data with isoform graphs</article-title>. <source>J Comput Biol</source>  <year>2014</year>;<volume>21</volume>:<fpage>16</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">24200390</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bray</surname><given-names>NL</given-names></string-name>, <string-name><surname>Pimentel</surname><given-names>H</given-names></string-name>, <string-name><surname>Melsted</surname><given-names>P</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Near-optimal probabilistic RNA-seq quantification</article-title>. <source>Nat Biotechnol</source>  <year>2016</year>;<volume>34</volume>:<fpage>525</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">27043002</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Canzar</surname><given-names>S</given-names></string-name>, <string-name><surname>Andreotti</surname><given-names>S</given-names></string-name>, <string-name><surname>Weese</surname><given-names>D</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Cidane: comprehensive isoform discovery and abundance estimation</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>16</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">26831908</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cmero</surname><given-names>M</given-names></string-name>, <string-name><surname>Davidson</surname><given-names>NM</given-names></string-name>, <string-name><surname>Oshlack</surname><given-names>A.</given-names></string-name></person-group>  <article-title>Using equivalence class counts for fast and accurate testing of differential transcript usage</article-title>. <source>F1000Res</source>  <year>2019</year>;<volume>8</volume>:<fpage>265</fpage>.<pub-id pub-id-type="pmid">31143443</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cooper</surname><given-names>TA</given-names></string-name>, <string-name><surname>Wan</surname><given-names>L</given-names></string-name>, <string-name><surname>Dreyfuss</surname><given-names>G.</given-names></string-name></person-group>  <article-title>RNA and disease</article-title>. <source>Cell</source>  <year>2009</year>;<volume>136</volume>:<fpage>777</fpage>–<lpage>93</lpage>.<pub-id pub-id-type="pmid">19239895</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Denti</surname><given-names>L</given-names></string-name>, <string-name><surname>Rizzi</surname><given-names>R</given-names></string-name>, <string-name><surname>Beretta</surname><given-names>S</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>ASGAL: aligning RNA-seq data to a splicing graph to detect novel alternative splicing events</article-title>. <source>BMC Bioinformatics</source>  <year>2018</year>;<volume>19</volume>:<fpage>444</fpage>.<pub-id pub-id-type="pmid">30458725</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dobin</surname><given-names>A</given-names></string-name>, <string-name><surname>Davis</surname><given-names>CA</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Star: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source>  <year>2013</year>;<volume>29</volume>:<fpage>15</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">23104886</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Döring</surname><given-names>A</given-names></string-name>, <string-name><surname>Weese</surname><given-names>D</given-names></string-name>, <string-name><surname>Rausch</surname><given-names>T</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Seqan an efficient, generic C++ library for sequence analysis</article-title>. <source>BMC Bioinformatics</source>  <year>2008</year>;<volume>9</volume>:<fpage>11</fpage>.<pub-id pub-id-type="pmid">18184432</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feng</surname><given-names>J</given-names></string-name>, <string-name><surname>Li</surname><given-names>W</given-names></string-name>, <string-name><surname>Jiang</surname><given-names>T.</given-names></string-name></person-group>  <article-title>Inference of isoforms from short sequence reads</article-title>. <source>J Comput Biol</source>  <year>2011</year>;<volume>18</volume>:<fpage>305</fpage>–<lpage>21</lpage>. PMID: 21385036. <pub-id pub-id-type="doi">10.1089/cmb.2010.0243</pub-id>.<pub-id pub-id-type="pmid">21385036</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Foissac</surname><given-names>S</given-names></string-name>, <string-name><surname>Sammeth</surname><given-names>M.</given-names></string-name></person-group>  <article-title>Astalavista: dynamic and flexible analysis of alternative splicing events in custom gene datasets</article-title>. <source>Nucleic Acids Res</source>  <year>2007</year>;<volume>35</volume>:<fpage>W297</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">17485470</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griebel</surname><given-names>T</given-names></string-name>, <string-name><surname>Zacher</surname><given-names>B</given-names></string-name>, <string-name><surname>Ribeca</surname><given-names>P</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Modelling and simulating generic RNA-seq experiments with the flux simulator</article-title>. <source>Nucleic Acids Res</source>  <year>2012</year>;<volume>40</volume>:<fpage>10073</fpage>–<lpage>83</lpage>.<pub-id pub-id-type="pmid">22962361</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gunady</surname><given-names>MK</given-names></string-name>, <string-name><surname>Mount</surname><given-names>SM</given-names></string-name>, <string-name><surname>Corrada</surname><given-names>CB.</given-names></string-name></person-group>  <article-title>Yanagi: fast and interpretable segment-based alternative splicing and gene expression analysis</article-title>. <source>BMC Bioinformatics</source>  <year>2019</year>;<volume>20</volume>:<fpage>421</fpage>.<pub-id pub-id-type="pmid">31409274</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jaganathan</surname><given-names>K</given-names></string-name>, <string-name><surname>Panagiotopoulou</surname><given-names>SK</given-names></string-name>, <string-name><surname>McRae</surname><given-names>JF</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Predicting splicing from primary sequence with deep learning</article-title>. <source>Cell</source>  <year>2019</year>;<volume>176</volume>:<fpage>535</fpage>–<lpage>48.e24</lpage>.<pub-id pub-id-type="pmid">30661751</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kahles</surname><given-names>A</given-names></string-name>, <string-name><surname>Ong</surname><given-names>CS</given-names></string-name>, <string-name><surname>Zhong</surname><given-names>Y</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>SplAdder: identification, quantification and testing of alternative splicing events from RNA-seq data</article-title>. <source>Bioinformatics</source>  <year>2016</year>;<volume>32</volume>:<fpage>1840</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">26873928</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kahles</surname><given-names>A</given-names></string-name>, <string-name><surname>Lehmann</surname><given-names>K</given-names></string-name>, <string-name><surname>Toussaint</surname><given-names>NC</given-names></string-name></person-group>  <etal>et al</etal>; <collab>Cancer Genome Atlas Research Network</collab>. <article-title>Comprehensive analysis of alternative splicing across tumors from 8,705 patients</article-title>. <source>Cancer Cell</source>  <year>2018</year>;<volume>34</volume>:<fpage>211</fpage>–<lpage>24.e6</lpage>.<pub-id pub-id-type="pmid">30078747</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H</given-names></string-name>, <string-name><surname>Handsaker</surname><given-names>B</given-names></string-name>, <string-name><surname>Wysoker</surname><given-names>A</given-names></string-name></person-group>  <etal>et al</etal>; <collab>1000 Genome Project Data Processing Subgroup</collab>. <article-title>The sequence alignment/map (SAM) format and samtools</article-title>. <source>Bioinformatics</source>  <year>2009</year>;<volume>25</volume>:<fpage>2078</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>YI</given-names></string-name>, <string-name><surname>Knowles</surname><given-names>DA</given-names></string-name>, <string-name><surname>Humphrey</surname><given-names>J</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Annotation-free quantification of RNA splicing using LeafCutter</article-title>. <source>Nat Genet</source>  <year>2018</year>;<volume>50</volume>:<fpage>151</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">29229983</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y</given-names></string-name>, <string-name><surname>Smyth</surname><given-names>GK</given-names></string-name>, <string-name><surname>Shi</surname><given-names>W.</given-names></string-name></person-group>  <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>  <year>2014</year>;<volume>30</volume>:<fpage>923</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ntranos</surname><given-names>V</given-names></string-name>, <string-name><surname>Kamath</surname><given-names>GM</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>JM</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Fast and accurate single-cell RNA-seq analysis by clustering of transcript-compatibility counts</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>112</fpage>.<pub-id pub-id-type="pmid">27230763</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Patro</surname><given-names>R</given-names></string-name>, <string-name><surname>Duggal</surname><given-names>G</given-names></string-name>, <string-name><surname>Love</surname><given-names>MI</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Salmon provides fast and bias-aware quantification of transcript expression</article-title>. <source>Nat Methods</source>  <year>2017</year>;<volume>14</volume>:<fpage>417</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">28263959</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rossell</surname><given-names>D</given-names></string-name>, <string-name><surname>Attolini</surname><given-names>CSO</given-names></string-name>, <string-name><surname>Kroiss</surname><given-names>M</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Quantifying alternative splicing from paired-end RNA-sequencing data</article-title>. <source>Ann Appl Stat</source>  <year>2014</year>;<volume>8</volume>:<fpage>309</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">24795787</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sammeth</surname><given-names>M</given-names></string-name>, <string-name><surname>Foissac</surname><given-names>S</given-names></string-name>, <string-name><surname>Guigó</surname><given-names>R.</given-names></string-name></person-group>  <article-title>A general definition and nomenclature for alternative splicing events</article-title>. <source>PLoS Comput Biol</source>  <year>2008</year>;<volume>4</volume>:<fpage>e1000147</fpage>.<pub-id pub-id-type="pmid">18688268</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shen</surname><given-names>S</given-names></string-name>, <string-name><surname>Park</surname><given-names>JW</given-names></string-name>, <string-name><surname>Lu</surname><given-names>Z</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>rMATS: robust and flexible detection of differential alternative splicing from replicate rna-seq data</article-title>. <source>Proc Natl Acad Sci USA</source>  <year>2014</year>;<volume>111</volume>:<fpage>E5593</fpage>–<lpage>601</lpage>.<pub-id pub-id-type="pmid">25480548</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Soneson</surname><given-names>C</given-names></string-name>, <string-name><surname>Matthes</surname><given-names>KL</given-names></string-name>, <string-name><surname>Nowicka</surname><given-names>M</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Isoform prefiltering improves performance of count-based methods for analysis of differential transcript usage</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>12</fpage>.<pub-id pub-id-type="pmid">26813113</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Srivastava</surname><given-names>A</given-names></string-name>, <string-name><surname>Sarkar</surname><given-names>H</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>N</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>RapMap: a rapid, sensitive and accurate tool for mapping RNA-seq reads to transcriptomes</article-title>. <source>Bioinformatics</source>  <year>2016</year>;<volume>32</volume>:<fpage>i192</fpage>–<lpage>200</lpage>.<pub-id pub-id-type="pmid">27307617</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sterne-Weiler</surname><given-names>T</given-names></string-name>, <string-name><surname>Weatheritt</surname><given-names>RJ</given-names></string-name>, <string-name><surname>Best</surname><given-names>AJ</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Efficient and accurate quantitative profiling of alternative splicing patterns of any complexity on a laptop</article-title>. <source>Mol Cell</source>  <year>2018</year>;<volume>72</volume>:<fpage>187</fpage>–<lpage>200.e6</lpage>.<pub-id pub-id-type="pmid">30220560</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Titus</surname><given-names>MB</given-names></string-name>, <string-name><surname>Chang</surname><given-names>AW</given-names></string-name>, <string-name><surname>Olesnicky</surname><given-names>EC.</given-names></string-name></person-group>  <article-title>Exploring the diverse functional and regulatory consequences of alternative splicing in development and disease</article-title>. <source>Front Genet</source>  <year>2021</year>;<volume>12</volume>:<fpage>775395</fpage>.<pub-id pub-id-type="pmid">34899861</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>T-Y</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Ren</surname><given-names>Y</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>A pan-cancer transcriptome analysis of exitron splicing identifies novel cancer driver genes and neoepitopes</article-title>. <source>Mol Cell</source>  <year>2021</year>;<volume>81</volume>:<fpage>2246</fpage>–<lpage>60.e12</lpage>.<pub-id pub-id-type="pmid">33861991</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilks</surname><given-names>C</given-names></string-name>, <string-name><surname>Zheng</surname><given-names>SC</given-names></string-name>, <string-name><surname>Chen</surname><given-names>FY</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>recount3: summaries and queries for large-scale RNA-seq expression and splicing</article-title>. <source>Genome Biol</source>  <year>2021</year>;<volume>22</volume>:<fpage>323</fpage>.<pub-id pub-id-type="pmid">34844637</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>J</given-names></string-name>, <string-name><surname>Anczukòw</surname><given-names>O</given-names></string-name>, <string-name><surname>Krainer</surname><given-names>AR</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Olego: fast and sensitive mapping of spliced mrna-seq reads using small seeds</article-title>. <source>Nucleic Acids Res</source>  <year>2013</year>;<volume>41</volume>:<fpage>5149</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">23571760</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10348833</article-id>
    <article-id pub-id-type="pmid">37432342</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad419</article-id>
    <article-id pub-id-type="publisher-id">btad419</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Counting pseudoalignments to novel splicing events</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Borozan</surname>
          <given-names>Luka</given-names>
        </name>
        <aff><institution>Department of Mathematics, Josip Juraj Strossmayer University of Osijek</institution>, Osijek 31000, <country country="HR">Croatia</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8776-9768</contrib-id>
        <name>
          <surname>Rojas Ringeling</surname>
          <given-names>Francisca</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
        <aff><institution>Huck Institutes of the Life Sciences, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kao</surname>
          <given-names>Shao-Yen</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nikonova</surname>
          <given-names>Elena</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8706-4079</contrib-id>
        <name>
          <surname>Monteagudo-Mesas</surname>
          <given-names>Pablo</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Matijević</surname>
          <given-names>Domagoj</given-names>
        </name>
        <aff><institution>Department of Mathematics, Josip Juraj Strossmayer University of Osijek</institution>, Osijek 31000, <country country="HR">Croatia</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2068-3350</contrib-id>
        <name>
          <surname>Spletter</surname>
          <given-names>Maria L</given-names>
        </name>
        <aff><institution>Biomedical Center, Department of Physiological Chemistry, Ludwig-Maximilians-Universität München</institution>, Planegg-Martinsried 82152, <country country="DE">Germany</country></aff>
        <aff><institution>School of Science and Engineering, Division of Biological &amp; Biomedical Systems, University of Missouri Kansas City</institution>, Kansas City, MO 64110, <country country="US">United States</country></aff>
        <xref rid="btad419-cor1" ref-type="corresp"/>
        <!--maria.spletter@umkc.edu-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-4719-8010</contrib-id>
        <name>
          <surname>Canzar</surname>
          <given-names>Stefan</given-names>
        </name>
        <aff><institution>Gene Center, Ludwig-Maximilians-Universität München</institution>, Munich 81377, <country country="DE">Germany</country></aff>
        <aff><institution>Huck Institutes of the Life Sciences, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
        <aff><institution>Department of Computer Science and Engineering, The Pennsylvania State University</institution>, University Park, PA 16802, <country country="US">United States</country></aff>
        <xref rid="btad419-cor1" ref-type="corresp"/>
        <!--canzar@psu.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad419-cor1">Corresponding authors. School of Science and Engineering, Division of Biological &amp; Biomedical Systems, University of Missouri Kansas City, 5009 Rockhill Rd., Spencer Hall 505B, Kansas City, MO 64110, United States. E-mail: <email>maria.spletter@umkc.edu</email> (M.L.S.); Department of Computer Science and Engineering, The Pennsylvania State University, W204B Westgate Building, University Park, PA 16802, United States. E-mail: <email>canzar@psu.edu</email> (S.C.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-07-11">
      <day>11</day>
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>7</issue>
    <elocation-id>btad419</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>21</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>03</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>14</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad419.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Alternative splicing (AS) of introns from pre-mRNA produces diverse sets of transcripts across cell types and tissues, but is also dysregulated in many diseases. Alignment-free computational methods have greatly accelerated the quantification of mRNA transcripts from short RNA-seq reads, but they inherently rely on a catalog of known transcripts and might miss novel, disease-specific splicing events. By contrast, alignment of reads to the genome can effectively identify novel exonic segments and introns. Event-based methods then count how many reads align to predefined features. However, an alignment is more expensive to compute and constitutes a bottleneck in many AS analysis methods.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we propose fortuna, a method that guesses novel combinations of annotated splice sites to create transcript fragments. It then pseudoaligns reads to fragments using kallisto and efficiently derives counts of the most elementary splicing units from kallisto’s equivalence classes. These counts can be directly used for AS analysis or summarized to larger units as used by other widely applied methods. In experiments on synthetic and real data, fortuna was around <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mn>7</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math></inline-formula> faster than traditional align and count approaches, and was able to analyze almost 300 million reads in just 15 min when using four threads. It mapped reads containing mismatches more accurately across novel junctions and found more reads supporting aberrant splicing events in patients with autism spectrum disorder than existing methods. We further used fortuna to identify novel, tissue-specific splicing events in <italic toggle="yes">Drosophila</italic>.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>fortuna source code is available at <ext-link xlink:href="https://github.com/canzarlab/fortuna" ext-link-type="uri">https://github.com/canzarlab/fortuna</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Deutsche Forschungsgemeinschaft</institution>
            <institution-id institution-id-type="DOI">10.13039/501100001659</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>417912216</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Intronic sequences need to be removed, or spliced, from a transcribed pre-mRNA to produce mature mRNA. Introns can be spliced in alternative ways from the same pre-mRNA to produce distinct combinations of exons in different mRNA transcript variants. This alternative splicing (AS) contributes to the diversity of transcriptomes and proteomes across cell types, tissues, and developmental stages. Aberrant splicing, for example caused by human genomic variants, is prevalent in various diseases, including cancer and neurological disorders (<xref rid="btad419-B30" ref-type="bibr">Titus <italic toggle="yes">et al.</italic> 2021</xref>). The identification of expressed transcript variants and their roles in normal development and disease is still a field of open investigation. RNA sequencing (RNA-seq) is the preferred technology to study expressed transcript variants.</p>
    <p>The quantification of full-length transcripts from short reads produced by RNA-seq is facilitated by the rapid pseudoalignment of reads to known transcripts by methods such as kallisto (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>) and salmon (<xref rid="btad419-B23" ref-type="bibr">Patro <italic toggle="yes">et al.</italic> 2017</xref>). Instead of performing a computationally expensive alignment between all reads and all transcript sequences, a pseudoalignment simply determines the set of compatible transcripts each read could have originated from. However, pseudoalignment-based analysis as introduced in <xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> (2016)</xref> is defined with respect to known transcripts and will not only miss novel or disease-specific splicing events, but unmappped or mismapped reads from novel junctions can also affect downstream quantification of annotated features.</p>
    <p>The differential usage of individual exons, on the other hand, can be detected by methods such as DEXSeq (<xref rid="btad419-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2012</xref>) without making any assumptions about how exons have been combined in potentially novel transcripts. More generally, most event-based methods such as SplAdder (<xref rid="btad419-B17" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2016</xref>) and rMATS (<xref rid="btad419-B26" ref-type="bibr">Shen <italic toggle="yes">et al.</italic> 2014</xref>) first summarize reads by counting how many of them support the inclusion of transcript “building blocks” that are assumed indivisible. To identify and quantify potentially novel compositions of such building blocks, reads first need to be aligned to their corresponding sequences. Although such an alignment effectively enables the detection of novel exonic segments and novel splice sites and introns, it imposes a computational bottleneck (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B29" ref-type="bibr">Sterne-Weiler <italic toggle="yes">et al.</italic> 2018</xref>).</p>
    <p>Here, we make use of the fact that a large number of novel introns found in human and other well-annotated species typically do not gap arbitrary stretches of nucleotides in the genome, but rather re-use known splice sites. For example, using recount3 (<xref rid="btad419-B32" ref-type="bibr">Wilks <italic toggle="yes">et al.</italic> 2021</xref>), a resource that compiles hundreds of thousands of public human and mouse RNA-seq samples, <xref rid="btad419-B32" ref-type="bibr">Wilks <italic toggle="yes">et al.</italic> (2021)</xref> reported that <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mn>31.3</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel human junctions in the Sequence Read Archive (SRA) combine known splice sites. In only <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mn>15.6</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel junctions, neither donor nor acceptor appeared in the annotation. Among splice junctions that appear in at least <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mn>20</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of SRA run accessions, almost every second of novel junctions contained exclusively annotated splice sites.</p>
    <p>Recognizing the limitation of fast pseudoalignment-based methods to predefined transcript annotations on the one hand, and the high computational cost incurred by more accurate, event-based methods on the other, Whippet (<xref rid="btad419-B29" ref-type="bibr">Sterne-Weiler <italic toggle="yes">et al.</italic> 2018</xref>) implements a new transcriptome index for fast alignment across novel junctions between annotated splice sites. The index records <italic toggle="yes">k</italic>-mers flanking all combinations of annotated donors and acceptors. This reliance on <italic toggle="yes">k</italic>-mers makes Whippet sensitive to mismatches near splice sites and requires reads across splice junctions to have a minimum overhang of <italic toggle="yes">k</italic>. Furthermore, the heuristic pruning of the search space might eliminate true hits of reads. Connecting all annotated donor and acceptor sites to be able to detect novel junctions has also been proposed by other (alignment-based) methods such as ASGAL (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>). Its high computational cost, however, makes ASGAL suitable for the analysis of single genes or a small set of target genes.</p>
    <p>In fortuna, we therefore take a different approach and pseudoalign reads to longer transcript fragments that join splice junctions. A similar idea was adopted by Yanagi (<xref rid="btad419-B15" ref-type="bibr">Gunady <italic toggle="yes">et al.</italic> 2019</xref>), but it is limited to annotated transcripts. It extracts transcript segments only across annotated splice junctions and can thus not identify novel events. By contrast, we assemble fragments by “guessing” novel introns that combine annotated splice sites in novel, biologically motivated ways. From pseudoalignments we derive counts of the most elementary splicing units which correspond to the number of reads with distinct splicing patterns that were obtained from an extended, well-defined catalog of transcripts. These counts can then be directly used for AS analysis or summarized to larger units such as those used by DEXSeq. In addition, fortuna optionally incorporates novel splice sites identified by STAR (<xref rid="btad419-B10" ref-type="bibr">Dobin <italic toggle="yes">et al.</italic> 2013</xref>) or any other spliced aligner and annotates all splicing events implied by novel introns.</p>
    <p>In experiments on synthetic and real data, we demonstrate a substantial speed advantage of fortuna compared to traditional align and count approaches. We further show that fortuna more accurately maps reads across novel introns in challenging scenarios when reads contain mismatches or span multiple junctions. We use fortuna to catalog thousands of novel splicing events in different <italic toggle="yes">Drosophila</italic> pupal tissues.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>The steps that fortuna takes to quantify unambiguous building blocks of transcripts and to detect and annotate novel splicing events are illustrated in <xref rid="btad419-F1" ref-type="fig">Fig. 1</xref>. fortuna starts (A) by “guessing” novel transcripts based on annotated splice sites (Section 2.2). It then (B) creates a set of sequence fragments of annotated and guessed novel transcripts that contain all possible combinations of unspliced exonic segments. We design this fragment set to be small with little sequence overlap to reduce required computational resources (described formally in Section 2.3). From this set of fragments we build a kallisto index (C) and use it to efficiently pseudoalign reads to fragments (D), which yields counts of the most elementary splicing units (<italic toggle="yes">signature counts</italic>, introduced in the next Section). Optionally, fortuna can further incorporate novel splice sites (e.g. exonic segment <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) identified by any spliced aligner from reads that remained unmapped in step (D), but does not attempt to assemble them to novel exons. Computed counts can be directly used for alternative splicing (AS) analysis or added up to larger units such as those used by DEXSeq (E1). In addition, fortuna annotates all novel events (E2) based on precise definitions of event types (Section 2.4).</p>
    <fig position="float" id="btad419-F1">
      <label>Figure 1.</label>
      <caption>
        <p>fortuna overview. Detailed description in the main text</p>
      </caption>
      <graphic xlink:href="btad419f1" position="float"/>
    </fig>
    <sec>
      <title>2.1 Equivalent mapping signatures</title>
      <p>Short reads can be summarized with respect to a catalog of known transcripts by grouping them according to the set of transcripts they could have originated from. kallisto (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>), for instance, considers two reads equivalent if they are compatible with the exact same set of transcripts. The red reads, dark blue reads, and the two spliced green reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> are compatible with annotated transcripts <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and are thus pairwise equivalent. kallisto then summarizes read data by the sizes of the resulting equivalence classes, often referred to as transcript compatibility counts (TCCs). Reads from the previous example would thus form an equivalence class of size 7. This data summary can serve as input to an EM algorithm to quantify known transcripts (<xref rid="btad419-B5" ref-type="bibr">Bray <italic toggle="yes">et al.</italic> 2016</xref>), or can be directly compared between conditions (<xref rid="btad419-B27" ref-type="bibr">Soneson <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B7" ref-type="bibr">Cmero <italic toggle="yes">et al.</italic> 2019</xref>), or single cells (<xref rid="btad419-B22" ref-type="bibr">Ntranos <italic toggle="yes">et al.</italic> 2016</xref>).</p>
      <fig position="float" id="btad419-F2">
        <label>Figure 2.</label>
        <caption>
          <p>In this example, transcripts <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are assumed to be annotated, while <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are novel. <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> partition exons into subexons <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>–<inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Red, dark blue, and spliced green reads are considered pairwise equivalent by kallisto, while Yanagi distinguishes red and dark blue reads in distinct counts. Gray reads from novel junction are ignored in kallisto and Yanagi. DEXSeq counts reads overlapping individual subexons, while Yanagi summarizes red and spliced green reads into a single counting bin. fortuna refines counting bins to mapping signatures, such as <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the case of the shaded blue read</p>
        </caption>
        <graphic xlink:href="btad419f2" position="float"/>
      </fig>
      <p>TCCs by definition rely on known transcripts. Reads obtained from novel transcripts may be ignored, such as the gray reads from novel transcript <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>, or transcripts missing in the annotation may cause mixing of nonequivalent reads, e.g. red and spliced green reads. Another tool Yanagi (<xref rid="btad419-B15" ref-type="bibr">Gunady <italic toggle="yes">et al.</italic> 2019</xref>) therefore separates alternatively spliced gene regions into distinct counting bins, such that shifts in counts caused by transcripts that combine distant splicing events in novel ways can be detected. For example, an increase in expression of unknown transcript <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> can yield more reads of the dark blue type but not of the red type, which will be reflected in Yanagi’s distinct counts.</p>
      <p>Novel junctions, however, even across annotated splice sites, would still be missed by Yanagi (e.g. gray reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>) and nonequivalent reads may incorrectly be summarized in the same counting bin (red and spliced green reads in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>). Methods such as DEXSeq (<xref rid="btad419-B2" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2012</xref>) therefore subdivide exons into smaller units that transcripts could combine in novel ways. A set of transcripts naturally partitions exons into the smallest possible segments, or <italic toggle="yes">subexons</italic>, that are bounded by splice sites or transcription start and end sites [introduced previously as, e.g., <italic toggle="yes">segments</italic> (<xref rid="btad419-B12" ref-type="bibr">Feng <italic toggle="yes">et al.</italic> 2011</xref>) or <italic toggle="yes">blocks</italic> (<xref rid="btad419-B4" ref-type="bibr">Beretta <italic toggle="yes">et al.</italic> 2014</xref>)]. For example, transcripts <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> imply subexons <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> through <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. DEXSeq then counts the overlapping number of aligned reads for every such subexon. Gray reads, for example, contribute a count of 3 to both <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The possible contribution of a single read to counts of multiple subexons could introduce ambiguities in the DEXSeq analysis. Instead, a different approach has been developed to address this problem by considering two reads equivalent if they overlap the exact same sequence of subexons. This preserves as much information as possible about potentially novel connectivity of subexons in transcripts. For instance, the shaded blue read in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> overlaps subexons <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>5</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, in this order, and can be generated only by the splicing pattern of <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, even though each of the three subexons occur in multiple transcripts. These <italic toggle="yes">(sub)exon paths</italic> were originally introduced in <xref rid="btad419-B24" ref-type="bibr">Rossell <italic toggle="yes">et al.</italic> (2014)</xref>, and have since been used in various splicing analysis methods (e.g. <xref rid="btad419-B6" ref-type="bibr">Canzar <italic toggle="yes">et al.</italic> 2016</xref>, <xref rid="btad419-B1" ref-type="bibr">Alqassem <italic toggle="yes">et al.</italic> 2021</xref>).</p>
      <p>To more formally state this concept as applied in this work, let a given gene be subdivided into subexons <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, consecutively numbered in increasing order of their genomic coordinates. Then the <italic toggle="yes">mapping signature</italic> of a read <italic toggle="yes">r</italic> denotes the increasing sequence of indices of subexons <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> read <italic toggle="yes">r</italic> overlaps, such as <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the case of the shaded read in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>. Then, two reads <italic toggle="yes">r</italic> and <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> are equivalent if their mapping signatures are identical, i.e. if <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>r</mml:mi></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. We refer to the sizes of the resulting equivalence classes as <italic toggle="yes">signature counts.</italic> Mapping signatures can naturally be extended to paired-end reads. A read pair <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> has signature <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Two paired-end reads <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> are equivalent if <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>1</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mn>2</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. In the remainder of this work, we restrict the discussion to single-end reads. We describe how fortuna processes paired-end reads in Section 3.4 and discuss the limitation of this approach in Section 4. To simplify notation, we drop the read subscript where the meaning is clear from the context. We similarly model both exons and transcripts as sequences of subexons and denote the sequence of subexon indices that define exon <italic toggle="yes">e</italic> or transcript <italic toggle="yes">t</italic> as <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively. We alternatively treat transcripts as sequences of exons and point out the distinction where necessary.</p>
      <p>Signature counts computed by fortuna contain sufficient information to allow conversion to other count types without processing raw reads or their alignments, while the reverse is not true. The set of compatible transcripts, and thus the equivalence class of a read as defined by kallisto can be computed from the read’s mapping signature <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> as
where <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denotes the set of transcripts subexon <italic toggle="yes">s</italic> is contained in and <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mo>ı</mml:mo><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:math></inline-formula> contains subexons that lie between the first and last subexon of <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> but are not in <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>. Yanagi’s equivalence classes can be obtained by merging overlapping mapping signatures that are compatible with the same set of (annotated) transcripts. In <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref>, for instance, red reads [signature <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>] and spliced green reads [signature <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>], would be combined into a single counting class, given that transcript <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with its novel junction is missing in the annotation. To generate counts as used in DEXSeq, for every subexon <italic toggle="yes">s</italic> we simply add all counts of mapping signatures that contain <italic toggle="yes">s</italic>. Finally, signature counts can be summed to quantify the elements of splicing graphs. SplAdder, for example, represents subexons and their connections by introns as nodes and edges in a <italic toggle="yes">segment graph</italic>. SplAdder quantifies individual nodes and edges, and thus does not allow reconstruction of mapping signatures which correspond to more complex combinations of elements, e.g. more than one intron, in the segment graph.</p>
      <disp-formula id="E1">
        <mml:math id="M1" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∩</mml:mo>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mo>ı</mml:mo>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mi>t</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>∖</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>∪</mml:mo>
                <mml:mrow>
                  <mml:mi>i</mml:mi>
                  <mml:mo>∈</mml:mo>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mover accent="true">
                        <mml:mo>ı</mml:mo>
                        <mml:mo>¯</mml:mo>
                      </mml:mover>
                    </mml:mrow>
                  </mml:mrow>
                </mml:mrow>
              </mml:munder>
            </mml:mrow>
            <mml:mi>t</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mi>i</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
    </sec>
    <sec>
      <title>2.2 Guessing alternative processing of pre-mRNA</title>
      <p>Pseudoalignments computed by methods such as kallisto rely on a set of annotated transcripts. Reads are compared to this annotated catalog to determine from which transcript they could have potentially originated. Here, we conceptually extend such an annotated set of transcripts <italic toggle="yes">T</italic> to include additional, undocumented alternative splicing events. For a gene <italic toggle="yes">g</italic>, let <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> be the set of transcripts annotated for <italic toggle="yes">g</italic>. In virtual transcriptome <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, we extend <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by transcripts that can be derived from transcripts in <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by alternatively splicing its exons using known donor and acceptor sites. More precisely, <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> additionally contains all transcripts <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> that can be generated from a transcript <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by skipping exons in <italic toggle="yes">t</italic> and by modifying the boundaries of the remaining exons consistently with donor and acceptor sites contained in other transcripts in <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
      <p>For example, novel transcript <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="btad419-F2" ref-type="fig">Fig. 2</xref> is contained in <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, since its novel junction can be obtained by skipping an exon in <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The sequence of introns in <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, i.e. its <italic toggle="yes">intron chain</italic>, is also contained in <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, since its junctions either match a junction in <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or combine a donor site in <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with an acceptor in <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Note that transcript <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> also uses a novel transcription start site, which we do not attempt to infer in fortuna. More formally, set <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> contains all transcripts that satisfy the following:</p>
      <statement id="mthst1">
        <label>Definition 1</label>
        <p>(Virtual transcriptome <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>). <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains all transcripts</italic> <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic></p>
        <p>
          <list list-type="simple">
            <list-item>
              <p><italic toggle="yes">(a)</italic> <italic toggle="yes">there exists a transcript</italic> <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that every exon e of</italic> <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">has nonempty overlap with t, and</italic> <inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains the same transcript start site (TSS) and transcription end site (TES) as t</italic>,</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(b)</italic> <italic toggle="yes">no two “touching” exons from different transcripts can be merged [see property (i) of</italic> <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>]</italic>,</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(c)</italic> <inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">contains only annotated donor and acceptor sites [see property (ii) of</italic> <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>]</italic>.</p>
            </list-item>
          </list>
        </p>
      </statement>
      <p>Transcripts <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref> are examples of novel transcripts created in <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref> shows examples of transcripts that are not contained in <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, because they violate property <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (transcript <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) or property <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> (transcript <inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.). In virtual transcriptome <inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> we mimic more general alternative processing of pre-mRNA, including splicing, 5’ end capping, and 3’ end cleavage. In contrast to <inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, annotated splice sites can be combined in novel ways without restriction to the (modified) exons of a reference transcripts and the genomic region bounded by its TSS and TES. The formal definition of virtual transcriptome <inline-formula id="IE86"><mml:math id="IM86" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.1</xref>. It holds that <inline-formula id="IE87"><mml:math id="IM87" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msub></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>. Transcript <inline-formula id="IE88"><mml:math id="IM88" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>, for instance, is contained in <inline-formula id="IE89"><mml:math id="IM89" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> but not in <inline-formula id="IE90"><mml:math id="IM90" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>g</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> since it combines exons from different transcripts.</p>
      <p>The guessing of novel transcripts in virtual transcriptomes introduces new combinations of annotated splice sites, but the detection of novel splice sites requires a conventional spliced alignment of reads. fortuna optionally incorporates novel splice sites found by a spliced aligner as described in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>.</p>
    </sec>
    <sec>
      <title>2.3 Transcript fragments</title>
      <p>fortuna never explicitly constructs virtual transcriptomes, but counts mapping signatures that are compatible with fragments extracted from them. Given a read length <italic toggle="yes">l</italic> and a transcriptome <italic toggle="yes">T</italic> (or one of its extensions <inline-formula id="IE91"><mml:math id="IM91" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE92"><mml:math id="IM92" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>), we define the set of signatures that can have a nonzero count as <italic toggle="yes">feasible signatures</italic>. In other words, a signature <inline-formula id="IE93"><mml:math id="IM93" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> is feasible if a read of length <italic toggle="yes">l</italic> can be obtained from a transcript in <italic toggle="yes">T</italic>, such that it overlaps exactly subexons in <inline-formula id="IE94"><mml:math id="IM94" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>. More formally, let <inline-formula id="IE95"><mml:math id="IM95" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>⊆</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> denote <inline-formula id="IE96"><mml:math id="IM96" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> to be a subsequence of <inline-formula id="IE97"><mml:math id="IM97" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and let <inline-formula id="IE98"><mml:math id="IM98" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı </mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo> ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> specify a contiguous subsequence <inline-formula id="IE99"><mml:math id="IM99" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula> of <inline-formula id="IE100"><mml:math id="IM100" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. For instance, <inline-formula id="IE101"><mml:math id="IM101" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> but <inline-formula id="IE102"><mml:math id="IM102" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">) </mml:mo><mml:mrow><mml:msub><mml:mo>⊈</mml:mo><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false"> (</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, while <inline-formula id="IE103"><mml:math id="IM103" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
      <statement id="mthst2">
        <label>Definition 2</label>
        <p>(feasible signature). <italic toggle="yes">Let l be the read length and T the set of transcripts. A sequence</italic> <inline-formula id="IE104"><mml:math id="IM104" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>  <italic toggle="yes">of subexons in T is a feasible signature if and only if it satisfies:</italic><disp-quote content-type="extract"><p>(<inline-formula id="IE105"><mml:math id="IM105" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">There must exist a transcript</italic> <inline-formula id="IE106"><mml:math id="IM106" display="inline" overflow="scroll"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic> <inline-formula id="IE107"><mml:math id="IM107" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı </mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo> ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>(<inline-formula id="IE108"><mml:math id="IM108" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">A read of length l can be sampled from</italic> <inline-formula id="IE109"><mml:math id="IM109" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula><italic toggle="yes">:</italic> <inline-formula id="IE110"><mml:math id="IM110" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo>ı</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>≥</mml:mo><mml:mi>l</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:math></inline-formula></p><p>(<inline-formula id="IE111"><mml:math id="IM111" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) <italic toggle="yes">If</italic> <inline-formula id="IE112"><mml:math id="IM112" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">with</italic> <inline-formula id="IE113"><mml:math id="IM113" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula><italic toggle="yes">, a read of length l must be able to cover all subexons:</italic></p></disp-quote>
 <disp-formula id="E4"><mml:math id="M4" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mrow><mml:mo>|</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo>|</mml:mo><mml:mo>≤</mml:mo><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>2.</mml:mn></mml:mrow></mml:math></disp-formula></p>
      </statement>
      <p>A read contained in the equivalence class of a feasible signature <inline-formula id="IE115"><mml:math id="IM115" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> fully covers all subexons <inline-formula id="IE116"><mml:math id="IM116" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with <inline-formula id="IE117"><mml:math id="IM117" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, but may overlap first and last subexons <inline-formula id="IE118"><mml:math id="IM118" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE119"><mml:math id="IM119" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> only partially. More specifically, let <inline-formula id="IE120"><mml:math id="IM120" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE121"><mml:math id="IM121" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> denote the genomic coordinate of the first and last nucleotide in subexon <italic toggle="yes">s</italic>, respectively. Then the leftmost nucleotide <inline-formula id="IE122"><mml:math id="IM122" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> a read of length <italic toggle="yes">l</italic> can cover in <inline-formula id="IE123"><mml:math id="IM123" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the rightmost nucleotide <inline-formula id="IE124"><mml:math id="IM124" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mi>l</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> it can cover in <inline-formula id="IE125"><mml:math id="IM125" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> are specified by <xref rid="E3" ref-type="disp-formula">Equations (1)</xref> and (2) in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>. We denote by [<italic toggle="yes">i</italic>, <italic toggle="yes">j</italic>] the genomic sequence from coordinate <italic toggle="yes">i</italic> to (including) coordinate <italic toggle="yes">j</italic> and, with a slight abuse of notation, by <inline-formula id="IE126"><mml:math id="IM126" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mn>5</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> the genomic sequence of subexon <italic toggle="yes">s</italic>. Then the minimal nucleotide sequence <inline-formula id="IE127"><mml:math id="IM127" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> such that every possible read with mapping signature <inline-formula id="IE128"><mml:math id="IM128" display="inline" overflow="scroll"><mml:mrow><mml:mo>ı</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, for <inline-formula id="IE129"><mml:math id="IM129" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>&gt;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, maps to <inline-formula id="IE130"><mml:math id="IM130" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is:
where “<inline-formula id="IE131"><mml:math id="IM131" display="inline" overflow="scroll"><mml:mo>⋅</mml:mo></mml:math></inline-formula>” denotes the concatenation of nucleotide sequences. For <inline-formula id="IE132"><mml:math id="IM132" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE133"><mml:math id="IM133" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Note that <inline-formula id="IE134"><mml:math id="IM134" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a fragment of a transcript in <italic toggle="yes">T</italic> due to the property <inline-formula id="IE135"><mml:math id="IM135" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Definition 2. Therefore, to determine the mapping signatures of all reads of length <italic toggle="yes">l</italic> obtained from transcripts in <italic toggle="yes">T</italic>, we need to contiguously map them to transcript fragments in the following set <italic toggle="yes">F</italic>:
</p>
      <disp-formula id="E2">
        <mml:math id="M2" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mi>f</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mn>5</mml:mn>
                </mml:mrow>
                <mml:mi>l</mml:mi>
                <mml:mo>′</mml:mo>
              </mml:msubsup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
            <mml:mrow>
              <mml:msup>
                <mml:mrow>
                  <mml:mn>3</mml:mn>
                </mml:mrow>
                <mml:mo>′</mml:mo>
              </mml:msup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mn>1</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>…</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>m</mml:mi>
                        <mml:mo>−</mml:mo>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>⋅</mml:mo>
            <mml:mo stretchy="false">[</mml:mo>
            <mml:mrow>
              <mml:msup>
                <mml:mrow>
                  <mml:mn>5</mml:mn>
                </mml:mrow>
                <mml:mo>′</mml:mo>
              </mml:msup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>s</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                      </mml:mrow>
                      <mml:mi>m</mml:mi>
                    </mml:msub>
                  </mml:mrow>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>,</mml:mo>
            <mml:mrow>
              <mml:msubsup>
                <mml:mrow>
                  <mml:mn>3</mml:mn>
                </mml:mrow>
                <mml:mi>l</mml:mi>
                <mml:mo>′</mml:mo>
              </mml:msubsup>
            </mml:mrow>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo stretchy="false">]</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <disp-formula id="E3">
        <label>(1)</label>
        <mml:math id="M3" display="block" overflow="scroll">
          <mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>F</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mn>1</mml:mn>
                  <mml:mo>:</mml:mo>
                  <mml:mn>1</mml:mn>
                </mml:mrow>
              </mml:msub>
            </mml:mrow>
            <mml:mo>:</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mo>{</mml:mo>
            <mml:mi>f</mml:mi>
            <mml:mo stretchy="false">(</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo stretchy="false">)</mml:mo>
            <mml:mo>|</mml:mo>
            <mml:mo>ı</mml:mo>
            <mml:mo> </mml:mo>
            <mml:mtext>is feasible signature given</mml:mtext>
            <mml:mo> </mml:mo>
            <mml:mi>T</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>l</mml:mi>
            <mml:mo>}</mml:mo>
          </mml:mrow>
        </mml:math>
      </disp-formula>
      <p>A read that maps to a fragment <inline-formula id="IE136"><mml:math id="IM136" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>ı</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in <inline-formula id="IE137"><mml:math id="IM137" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> has mapping signature <inline-formula id="IE138"><mml:math id="IM138" display="inline" overflow="scroll"><mml:mo>ı</mml:mo></mml:math></inline-formula>, and <inline-formula id="IE139"><mml:math id="IM139" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is encoded in the fragment name. Set <inline-formula id="IE140"><mml:math id="IM140" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> will contain many fragments that overlap in their sequence, as illustrated in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>. Redundant sequences can be removed by eliminating all signatures that are contained in other signatures, to obtain fragment set <inline-formula id="IE141"><mml:math id="IM141" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (Equation 3, <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>). In contrast to <inline-formula id="IE142"><mml:math id="IM142" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, sequences of boundary subexons are included in full in the definition of <inline-formula id="IE143"><mml:math id="IM143" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to include all nucleotide sequences corresponding to contained signatures. <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref> contains a description of the algorithm to compute <inline-formula id="IE144"><mml:math id="IM144" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE145"><mml:math id="IM145" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
      <p><xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref> demonstrates that <inline-formula id="IE146"><mml:math id="IM146" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> can contain a substantially smaller number of fragments than <inline-formula id="IE147"><mml:math id="IM147" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Since there is no longer a one-to-one correspondence between fragments in <inline-formula id="IE148"><mml:math id="IM148" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and feasible signatures, the precise equivalence class a read <italic toggle="yes">r</italic> belongs to needs to be computed by a linear scan through the subexons the fragment is composed of. Fragments in <inline-formula id="IE149"><mml:math id="IM149" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> may mutually overlap in their boundary subexons <inline-formula id="IE150"><mml:math id="IM150" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE151"><mml:math id="IM151" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> that are included in their entire length irrespective of read length (e.g. subexon <inline-formula id="IE152"><mml:math id="IM152" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>). We therefore reduce sequence overlap by including sufficiently long subexons as singleton fragments which in turn allows us to trim sequences at the end of the remaining fragments to at most <inline-formula id="IE153"><mml:math id="IM153" display="inline" overflow="scroll"><mml:mrow><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> bases in the first and last subexons. This trimming strategy ensures that every mapping that overlaps <inline-formula id="IE154"><mml:math id="IM154" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE155"><mml:math id="IM155" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> also overlaps <inline-formula id="IE156"><mml:math id="IM156" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE157"><mml:math id="IM157" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, respectively, and thus does not conflict with mappings to singleton <inline-formula id="IE158"><mml:math id="IM158" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE159"><mml:math id="IM159" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. The trimming of fragments and the final set of fragments <italic toggle="yes">F</italic> generated by fortuna are formally specified in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>.</p>
      <statement id="mthst3">
        <label>Theorem 1.</label>
        <p><italic toggle="yes">Let</italic> <inline-formula id="IE160"><mml:math id="IM160" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">denote the (maximal) feasible signature that gave rise to fragment</italic> <inline-formula id="IE161"><mml:math id="IM161" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula><italic toggle="yes">. Given read length l and transcriptome T, the set of transcript fragments F is correct and complete in the following sense:</italic></p>
        <p>
          <list list-type="simple">
            <list-item>
              <p><italic toggle="yes">(1)</italic> <italic toggle="yes">F only contains sequences that can be derived from transcripts in T, namely</italic> <inline-formula id="IE162"><mml:math id="IM162" display="inline" overflow="scroll"><mml:mrow><mml:mo>∀</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi><mml:mo> </mml:mo><mml:mo>∃</mml:mo><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>  <italic toggle="yes">such that</italic> <inline-formula id="IE163"><mml:math id="IM163" display="inline" overflow="scroll"><mml:mrow><mml:mi>s</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mo>⊆</mml:mo></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>ı</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
            </list-item>
            <list-item>
              <p><italic toggle="yes">(2)</italic> <italic toggle="yes">Any read of length l sampled from a transcript in T can be mapped to some</italic> <inline-formula id="IE164"><mml:math id="IM164" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula>.</p>
            </list-item>
          </list>
        </p>
      </statement>
      <p>The proof of Theorem 1 can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>.</p>
    </sec>
    <sec>
      <title>2.4 Alternative splicing events</title>
      <p>fortuna classifies every novel intron implied by a mapping signature as one of the following types of alternative splicing: (Multi-)exon skipping, alternative donor, alternative acceptor, alternative donor-acceptor pair, novel intron in exon [or <italic toggle="yes">exitron</italic> (<xref rid="btad419-B31" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2021</xref>)], and intron retention. Similar to AStalavista (<xref rid="btad419-B13" ref-type="bibr">Foissac and Sammeth 2007</xref>), we compare a novel intron pairwise to every annotated transcript <italic toggle="yes">t</italic> to identify the implied event type. For formal definitions of events, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.4</xref>. Note that the same intron can imply different types of events with respect to different transcripts.</p>
      <p>Since fortuna does not attempt to assemble novel exons, it conservatively labels reads as <italic toggle="yes">intron retention</italic> only if they overlap intronic sequences that are not part of any annotated transcript, and within which no further splicing was observed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.4</xref>).</p>
      <p>All reads that do not satisfy the conditions of the above event types are classified as <italic toggle="yes">unknown</italic> by fortuna. Reads with unknown splicing status were either obtained from novel exons or span novel introns that overlap at most one exon in any given transcript. Both cases would require an assembly of reads to be correctly classified. <xref rid="btad419-F3" ref-type="fig">Figure 3</xref> (and <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref>) illustrates all event types.</p>
      <fig position="float" id="btad419-F3">
        <label>Figure 3.</label>
        <caption>
          <p>Illustration of splicing event definitions. Transcripts <inline-formula id="IE165"><mml:math id="IM165" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> imply subexons <inline-formula id="IE166"><mml:math id="IM166" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>8</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Subexons are colored according to the event type the corresponding (novel) splice junction defines. In this example, mapping signature <inline-formula id="IE167"><mml:math id="IM167" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> defines a classical exon skipping (ES) with respect to <inline-formula id="IE168"><mml:math id="IM168" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and a nonclassical ES wrt <inline-formula id="IE169"><mml:math id="IM169" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE170"><mml:math id="IM170" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> spans an alternative donor (AD) wrt <inline-formula id="IE171"><mml:math id="IM171" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE172"><mml:math id="IM172" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>) an alternative acceptor (AA) wrt <inline-formula id="IE173"><mml:math id="IM173" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE174"><mml:math id="IM174" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> an alternative donor-acceptor pair (AP) wrt <inline-formula id="IE175"><mml:math id="IM175" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and an alternative acceptor wrt <inline-formula id="IE176"><mml:math id="IM176" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE177"><mml:math id="IM177" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> a novel intron in exon (IE) wrt <inline-formula id="IE178"><mml:math id="IM178" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, while the subexons <inline-formula id="IE179"><mml:math id="IM179" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>6</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE180"><mml:math id="IM180" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> including the intron between them constitute a novel intron retention (IR)</p>
        </caption>
        <graphic xlink:href="btad419f3" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 fortuna more accurately detects novel splice junctions than existing methods</title>
      <p>In this section we evaluate the accuracy of fortuna and alternative methods in identifying novel junctions between annotated splice sites. We used FluxSimulator (<xref rid="btad419-B14" ref-type="bibr">Griebel <italic toggle="yes">et al.</italic> 2012</xref>) to generate two simulated data sets containing 80 million reads of length 75 and 100 bp. Reads were obtained from human transcripts annotated in NCBI’s RefSeq database (release 109) and included sequencing errors according to an Illumina error profile predefined by FluxSimulator. To mimic an incomplete catalogue of known splice junctions, we used AStalavista (<xref rid="btad419-B13" ref-type="bibr">Foissac and Sammeth 2007</xref>) to identify exon skipping events and alternative acceptor and donor sites in our simulated data sets and subsequently removed all transcripts that supported such an event type, i.e. that contained the corresponding intron. Even though fortuna introduces more complex splicing alterations in its virtual transcriptomes, for ease of interpretability we focus the analysis on these simple, most abundant types of splicing events (<xref rid="btad419-B25" ref-type="bibr">Sammeth <italic toggle="yes">et al.</italic> 2008</xref>) that involve a single alternative splice site.</p>
      <p>We then provided each method with the full read data, but only the partial transcript annotation. We benchmarked all methods with respect to simulated reads spanning novel junctions that re-combine annotated donor and acceptor sites. In both datasets (75 and 100 bp), we split this set of reads into error-free reads (234,432 and 302,409) and reads that contained at least one mismatch (75,594 and 141,213). Consistent with <xref rid="btad419-B28" ref-type="bibr">Srivastava <italic toggle="yes">et al.</italic> (2016)</xref>, we consider a read a true positive if at least one of its alignments computed by a method matches its true origin across a novel junction. Accordingly, if none of its alignments matches its true origin, we define the read to be a false positive. We counted unmapped reads as false negatives. Based on these definitions, we report in <xref rid="btad419-F4" ref-type="fig">Fig. 4</xref> recall and precision on the 75-bp dataset comparing fortuna to methods Whippet and STAR, which are both able to map reads to novel junctions. STAR is a general purpose spliced aligner whose output is typically utilized by specialized AS analysis methods such as LeafCutter (<xref rid="btad419-B20" ref-type="bibr">Li <italic toggle="yes">et al.</italic> 2018</xref>), rMATS (<xref rid="btad419-B26" ref-type="bibr">Shen <italic toggle="yes">et al.</italic> 2014</xref>), or SplAdder (<xref rid="btad419-B17" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2016</xref>). We ran STAR once in 1-pass and once in 2-pass mode using default options, and provided the same partial annotation during index generation as to all other methods. We let fortuna guess transcripts according to <inline-formula id="IE181"><mml:math id="IM181" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (see Definition 1). As expected, STAR run in 2-pass mode achieved slightly better results than its faster 1-pass variant. For error-free reads, STAR benefited from the second run mostly in terms of precision. When reads contained mismatches, the second STAR run also improved sensitivity. fortuna consistently detected novel junctions with the highest precision, with only a minor drop in sensitivity when inferring novel exons skipping or alternative donors from error-free reads. For reads containing mismatches, fortuna paired the highest sensitivity with the highest precision across event types. Whippet, on the other hand, detected the fewest reads across novel junctions, and mismatches caused its sensitivity to drop further to between 68% and 71%. A similar pattern can be observed for 100 bp long reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5</xref>). Taking junction reads with and without errors together, fortuna consistently achieved highest recall and precision (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). The number of hits per read for STAR, Whippet, and fortuna were 1.02, 1.04, and 1.16, respectively, with a marginally higher value obtained by STAR in 2-pass mode than in 1-pass mode. Even when considering only annotated junctions, their explicit construction by fortuna facilitates the mapping of reads across them (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S6</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). As expected, in this setting the two-pass mode does not provide any advantage for STAR. We have also compared fortuna to ASGAL (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>), a spliced aligner that is able to detect novel splicing events. Consistent with other methods in this benchmark, we evaluated the alignments across novel junctions produced by ASGAL and ignored the subsequent event identification step. ASGAL aligns reads with a competitive precision but achieves substantially smaller recall values, especially when reads contain mismatches (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). For genome-wide analysis, ASGAL relies on Salmon (<xref rid="btad419-B23" ref-type="bibr">Patro <italic toggle="yes">et al.</italic> 2017</xref>) to split input reads into one instance per gene. This might leave some reads from novel junctions unmapped (<xref rid="btad419-B9" ref-type="bibr">Denti <italic toggle="yes">et al.</italic> 2018</xref>) potentially causing a drop in recall. Due to recall values that lie far outside of the shown range, we did not include ASGAL in <xref rid="btad419-F4" ref-type="fig">Fig. 4</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5</xref>. ASGAL was designed to run on a single gene or a small set of target genes. For the genome-wide analysis on the two simulated datasets, ASGAL took more than 32 h. Because of its excessive running time and its different intended use we exclude it from the following experiments, which involve more than three times larger datasets.</p>
      <fig position="float" id="btad419-F4">
        <label>Figure 4.</label>
        <caption>
          <p>Precision and recall in finding novel junctions between annotated splice sites. Results of fortuna, Whippet, STAR and STAR with two-pass mode (STAR2) are shown for the simulated dataset with 75 bp reads. Reads were split into error-free reads (upper row) and reads containing mismatches (bottom row). Results are stratified by event type (columns)</p>
        </caption>
        <graphic xlink:href="btad419f4" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 fortuna finds more reads supporting aberrant splicing events in patients with autism spectrum disorder</title>
      <p>Noncoding genetic variants that disrupt mRNA splicing play an important role in rare genetic diseases (<xref rid="btad419-B8" ref-type="bibr">Cooper <italic toggle="yes">et al.</italic> 2009</xref>). In <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref>, the authors identified a set of <italic toggle="yes">de novo</italic> mutations that they predicted to alter splicing in individuals with intellectual disability or autism spectrum disorder (ASD). The authors validated 21 aberrant splicing events associated with the predicted <italic toggle="yes">de novo</italic> mutations based on RNA-seq reads spanning the affected splice junction(s). Here we use fortuna to re-align reads from RNA-seq experiments performed in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> on peripheral blood-derived lymphoblastoid cell lines from individuals with ASD. We compared the number of reads supporting the aberrant splicing events found by fortuna to the original study as well as to the number of reads found by STAR and Whippet. STAR was run with default options and was provided the same transcript annotation (RefSeq, release 109) during index generation as fortuna and Whippet. fortuna was run to guess novel transcripts according to the definition of transcriptome <inline-formula id="IE182"><mml:math id="IM182" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (Definition 1 in Section 2.2). In fortuna we only retained the single alignment designated as primary by kallisto. The eight aberrant exon skipping events reported in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> correspond to the eight RNA-seq samples listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>. We excluded sample 28, as the exon skipping event in this sample is contained in the RefSeq annotation used in our experiments. Across exon skipping events, the three methods agree on a large fraction of junction spanning reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S7</xref>). The original publication (<xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> 2019</xref>) used OLego (<xref rid="btad419-B33" ref-type="bibr">Wu <italic toggle="yes">et al.</italic> 2013</xref>) to align reads. <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref> tried to eliminate OLego’s reference bias caused by its dependence on splicing motifs, but overall fewer supporting reads were found possibly due to disrupted motifs (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>). On the skipping event in sample 20, STAR and fortuna agreed on a large number of reads (196) which remained unmapped by Whippet. Across events, fortuna detected the largest number of supporting reads, with a substantial number of reads uniquely found by fortuna in all but two samples. Conversely, each read mapped by STAR across one of the aberrantly spliced novel junctions was identically mapped by fortuna. Visual inspection of reads mapped uniquely by fortuna revealed that all but 35 reads in sample 36 spanned at least two introns, which makes them particularly challenging to identify. The remaining 35 reads were mapped uniquely by fortuna across the aberrantly spliced intron reported in <xref rid="btad419-B16" ref-type="bibr">Jaganathan <italic toggle="yes">et al.</italic> (2019)</xref>. This shows that fortuna has a higher sensitivity to detect difficult AS events, and outperforms other analysis tools.</p>
      <p>The eight samples listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref> contained novel acceptor or donor sites that fortuna detected using STAR in a second phase to align reads that were not mapped to annotated transcripts or novel donor and acceptor combinations guessed by fortuna (option—<monospace>refine</monospace>, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>). As expected, fortuna and STAR agreed on the exact set of supporting reads, while Whippet was not able to identify any such read (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>). To be able to detect novel splice sites, Whippet needs to be provided with the (full) alignments of reads previously computed by a conventional read mapper such as STAR, which, in contrast to fortuna, eliminates its original speed advantage over traditional alignment methods. Compared to STAR alignments, only ∼2% of novel junctions between annotated splice sites were missed by fortuna (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S5</xref>), which demonstrates the effectiveness of its underlying virtual transcriptome.</p>
    </sec>
    <sec>
      <title>3.3 fortuna aligns and counts faster than existing methods</title>
      <p>To examine the running time of fortuna as a function of the number of reads, we randomly sampled between 10% and 90% of reads in ASD sample 29, which contained ∼291 million 151 bp paired-end reads. CPU times were measured on a 2.30 GHz Intel<sup>®</sup> Xeon<sup>®</sup> E5-2697 v4 processors with 320 GB memory. STAR does not count reads in genomic features, and thus needs to be combined with counting methods such as SplAdder, sigcount (<xref rid="btad419-B6" ref-type="bibr">Canzar <italic toggle="yes">et al.</italic> 2016</xref>), htseq-count (<xref rid="btad419-B3" ref-type="bibr">Anders <italic toggle="yes">et al.</italic> 2015</xref>), or featureCounts (<xref rid="btad419-B21" ref-type="bibr">Liao <italic toggle="yes">et al.</italic> 2014</xref>). The latter two methods count reads that overlap any of a set of genomic intervals and thus cannot count reads that exactly overlap all intervals (here subexons) of a mapping signature. We therefore provide the total time required to run STAR (in faster 1-pass mode) combined with either SplAdder or sigcount, with a prior sorting and indexing of alignments using samtools (<xref rid="btad419-B19" ref-type="bibr">Li <italic toggle="yes">et al.</italic> 2009</xref>). sigcount is based on the exact same definition of signature counts and uses efficient algorithms and data structures implemented in the SeqAn library (<xref rid="btad419-B11" ref-type="bibr">Döring <italic toggle="yes">et al.</italic> 2008</xref>). SplAdder quantifies reads in (sub)exons and across introns but cannot distinguish more complex combinations of subexons. We included SplAdder in this benchmark since it was used in a large-scale study of alternative splicing in almost 9000 tumor samples (<xref rid="btad419-B18" ref-type="bibr">Kahles <italic toggle="yes">et al.</italic> 2018</xref>), and since signature counts used by fortuna can be converted in principle to exon/intron counts as used in SplAdder. We ran SplAdder with option –quantify-graph to omit the extraction of AS events. Consistent with previous experiments, fortuna was run to guess novel transcripts in <inline-formula id="IE183"><mml:math id="IM183" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> (Definition 1).</p>
      <p><xref rid="btad419-F5" ref-type="fig">Figure 5</xref> demonstrates a clear speed advantage of alignment-free methods Whippet and fortuna compared to conventional align &amp; count approaches. fortuna is more than two times faster than Whippet on all but the smallest sample size. In contrast to Whippet, fortuna can further benefit from multiple threads and was able to count 291 million reads with equivalent mapping signatures in around 15 min using just four threads. With the same number of threads, STAR (1-pass) combined with sigcount took 159 min and was thus still slower than Whippet using a single thread.</p>
      <fig position="float" id="btad419-F5">
        <label>Figure 5.</label>
        <caption>
          <p>Running time in minutes of fortuna and competing methods on random subsamples of an ASD sample with 291 million reads</p>
        </caption>
        <graphic xlink:href="btad419f5" position="float"/>
      </fig>
      <p><xref rid="sup1" ref-type="supplementary-material">Supplementary Table S6</xref> lists the total running times of all methods, which are further split into times required for alignment, sorting, and counting in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S7</xref>. As expected, running STAR in the more accurate 2-pass mode roughly doubled the time required for the alignment step. Note that fortuna and Whippet circumvent writing the (pseudo)alignments of reads to disk which can be time-consuming. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S8</xref>, we report running times of fortuna and Whippet when making use of the option to output aligned reads in addition to counts. Peak memory usage was smallest for methods Whippet (2 GB) and kallisto (4 GB). fortuna used up to 24 GB of memory, compared to 29 GB for STAR. For a shorter read length of 75 bp as used in one of our simulations, fortuna’s peak memory usage decreased to below 10 GB.</p>
      <p>In addition, we ran STAR on reads that fortuna was not able to map to transcripts in <inline-formula id="IE184"><mml:math id="IM184" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> which we then used to refine signature counts (option –refine, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.3</xref>). After providing fortuna with 291 million reads, STAR was run on ∼20 million unmapped reads, ∼3 million of which it successfully aligned in 25 min (single-threaded). The final partitioning of subexons and the adjustment of signature counts by fortuna took &lt;2 min. This shows that fortuna can flexibly incorporate novel splice sites without sacrificing its core speed advantage.</p>
      <p>Finally, we show in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S9</xref> that the set of fragments <italic toggle="yes">F</italic> (equation (4), <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>) fortuna constructs is indeed smaller than <inline-formula id="IE185"><mml:math id="IM185" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (1) and contains less sequence redundancy than <inline-formula id="IE186"><mml:math id="IM186" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (equation (3), <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2.2</xref>), and thus yields the best trade-off between running time and memory usage.</p>
    </sec>
    <sec>
      <title>3.4 fortuna identifies novel, tissue-specific events in <italic toggle="yes">Drosophila</italic></title>
      <p>We next demonstrate the application of fortuna to gain novel, biologically relevant insight into tissue-specific splicing in the model organism <italic toggle="yes">Drosophila</italic>. We tested fortuna on paired-end RNA-seq data generated from different <italic toggle="yes">Drosophila</italic> pupal tissues, including dissected brain, indirect flight muscle (IFM) and whole leg. fortuna (pseudo-)aligned the two reads of each pair independently and reported the sum of counts over both ends. fortuna identified thousands of novel splicing events mapping to hundreds of genes in each tissue, even after stringent filtering (<xref rid="btad419-F6" ref-type="fig">Fig. 6A</xref>). About <inline-formula id="IE187"><mml:math id="IM187" display="inline" overflow="scroll"><mml:mrow><mml:mn>10</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of these events utilize novel splice acceptors or donors, while the majority reflect novel junctions between annotated splice sites (<xref rid="btad419-F6" ref-type="fig">Fig. 6B</xref>). Although we observed novel instances of all types of splice events, exon skipping events were most prevalent (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8A</xref>). Only <inline-formula id="IE188"><mml:math id="IM188" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>2</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of novel events are supported by 150 or more reads (∼RPM <inline-formula id="IE189"><mml:math id="IM189" display="inline" overflow="scroll"><mml:mo>&gt;</mml:mo></mml:math></inline-formula> 1), while more than <inline-formula id="IE190"><mml:math id="IM190" display="inline" overflow="scroll"><mml:mrow><mml:mn>60</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> are supported by five or fewer reads (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8B</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>), likely reflecting noise in the data given the sequencing depth. Thus, subsequent analysis was performed on events with an RPM <inline-formula id="IE191"><mml:math id="IM191" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1, to focus on the most biologically relevant events. We observed only weak correlation between event RPM and gene length, locus complexity or expression level at any filter level (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8C–E</xref>; <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>).</p>
      <fig position="float" id="btad419-F6">
        <label>Figure 6.</label>
        <caption>
          <p>fortuna detects novel, tissue-specific events in <italic toggle="yes">Drosophila</italic>. (A) Line plot showing the number of novel events (left) or genes containing novel events (right) in indirect flight muscle (IFM, green), leg (orange) and brain (purple) samples dissected from <italic toggle="yes">Drosophila</italic> at 72 h after puparium formation. Samples were evaluated at various RPM thresholds. (B) Bar plot of the percent of events (RPM <inline-formula id="IE192"><mml:math id="IM192" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 0) utilizing a novel splice acceptor (SA, cyan), a novel splice donor (SD, purple) or annotated SA/SD (yellow). (C) Venn diagram of the overlap in novel events (top, black numbers) and genes containing events (bottom, blue numbers) between IFM (left circle, purple), leg (right circle, cyan) and brain (bottom circle, yellow) at RPM <inline-formula id="IE193"><mml:math id="IM193" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1. (D) Clustering and heatmap of event RPM for the top 100 events in all three tissues. RT-PCR on IFM confirming novel events in <italic toggle="yes">bruno1</italic> (<italic toggle="yes">bru1</italic>) (E) and <italic toggle="yes">bent</italic> (<italic toggle="yes">bt</italic>, Titin) (F). Annotated (A) and novel (N) isoform lengths in basepairs (bp), as well as exons joined by the novel events (cyan, left most boxes in N), skipped exons (red, present in A but absent in N) and primers (arrows) are illustrated. The <italic toggle="yes">bru1</italic> event results in a shorter 5’-UTR on the <italic toggle="yes">bru1-RD</italic> mRNA isoform (coding: dark gray box, UTR: light gray boxes). The event in <italic toggle="yes">bt</italic> produces a shorter Projectin protein isoform lacking several Fibronectin-3 (FN3, F) and Immunoglobulin (Ig) domain repeats</p>
        </caption>
        <graphic xlink:href="btad419f6" position="float"/>
      </fig>
      <p>We hypothesized that the novel events might reflect tissue-specific splicing that is currently unannotated. Indeed, we found that only <inline-formula id="IE194"><mml:math id="IM194" display="inline" overflow="scroll"><mml:mrow><mml:mn>7.5</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of events with an RPM <inline-formula id="IE195"><mml:math id="IM195" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 1 are shared across all three tissues, while <inline-formula id="IE196"><mml:math id="IM196" display="inline" overflow="scroll"><mml:mrow><mml:mn>13</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula>, <inline-formula id="IE197"><mml:math id="IM197" display="inline" overflow="scroll"><mml:mrow><mml:mn>15</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula>, and <inline-formula id="IE198"><mml:math id="IM198" display="inline" overflow="scroll"><mml:mrow><mml:mn>48</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> are IFM, leg and brain specific, respectively (<xref rid="btad419-F6" ref-type="fig">Fig. 6C</xref>). This is also reflected in a heatmap of the top 100 events in each tissue (<xref rid="btad419-F6" ref-type="fig">Fig. 6D</xref>). Many events are tissue-specific or show dramatically different RPM levels between tissues. The genes harboring these novel events are diverse, and also reflect underlying tissue-specific functionalization as revealed by gene ontology enrichments (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S9A and B</xref>). For example, while genes harboring shared events are enriched in common biological process terms such as “cytoskeleton organization” and “behavior,” brain-specific genes are enriched in “synapse organization,” “neuron recognition,” and “ion transport” reflecting neuronal-specific processes. By contrast, IFM and leg-specific genes are enriched in “actomyosin structure organization,” “oxidation-reduction process,” “flight,” and “mesoderm development,” reflecting muscle-specific processes.</p>
      <p>We also noted that the number of novel events per gene is tissue-specific and moderately correlated with locus expression level (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S8D and E</xref>; <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>). Many novel events are found in genes that undergo tissue-specific alternative splicing, for example genes that encode essential sarcomere proteins such as <italic toggle="yes">Mhc</italic>, <italic toggle="yes">bt</italic>, <italic toggle="yes">Unc-89</italic>, <italic toggle="yes">up</italic>, <italic toggle="yes">Tm1</italic>, <italic toggle="yes">wupA</italic>, <italic toggle="yes">Strn-Mlck</italic> and <italic toggle="yes">sls</italic> all have more than 10 novel events in IFM or leg samples (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S9C</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S10</xref>). By contrast, in brain, genes relevant for neuronal activity such as <italic toggle="yes">kcc</italic>, <italic toggle="yes">slo</italic>, <italic toggle="yes">Atp</italic><inline-formula id="IE199"><mml:math id="IM199" display="inline" overflow="scroll"><mml:mo>α</mml:mo></mml:math></inline-formula>, <italic toggle="yes">CaMKII</italic>, <italic toggle="yes">brp</italic>, <italic toggle="yes">Cadps</italic>, <italic toggle="yes">stj</italic>, and <italic toggle="yes">Rdl</italic> have more than 10 novel events. We verified several novel events in IFM using RT-PCR. One novel exon skipping event in <italic toggle="yes">bru1</italic>, an essential regulator of IFM-specific splicing, results in a shorter 5’-UTR structure of the <italic toggle="yes">bru1-RD</italic> isoform mRNA (<xref rid="btad419-F6" ref-type="fig">Fig. 6E</xref>). Another (multi) exon skipping event we confirmed in <italic toggle="yes">bt</italic>, which encodes Projectin, a Titin isoform that forms connecting filaments in the sarcomere, results in attenuation of a protein region rich in flexible Fibronectin-3 (FN3) and immunoglobulin (Ig) domains (<xref rid="btad419-F6" ref-type="fig">Fig. 6F</xref>) that may impact sarcomere stiffness. These findings illustrate the utility of fortuna to identify novel, biologically relevant alternative splice events. Moreover, this data illustrates the importance of including novel splice event discovery in RNA-seq analysis pipelines, even for “wildtype” samples, as tissue or temporal specific splicing events may not be adequately represented in existing transcriptome annotations.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>We have introduced fortuna, a novel method that allows quantification of novel splicing patterns using fast pseudoalignments. It is several times faster than conventional align and count methods and its explicit construction of fragments containing guessed splice junctions facilitates the identification of novel introns in challenging scenarios.</p>
    <p>fortuna counts reads that are equivalent in terms of their splicing of unambiguous units that do not contain any splice sites. These signature counts can be used as input by various AS analysis methods, and are used by fortuna to infer and annotate novel introns. Furthermore, any counting unit based on transcriptomic features alone can be reconstructed from signature counts. We provide a script that within seconds converts signature counts to counts as defined and used by DEXSeq.</p>
    <p>fortuna currently does not take into account the pairing information of reads during mapping. It computes the signature of each read independently and optionally allows to combine them subsequently to more general signatures and counts of paired-end reads (see Section 2.1). In our experiments on paired-end read data (Section 3.4), we were interested in the total number of individual reads supporting novel junctions, regardless of read pairing. For other types of downstream analysis, signature counts of paired-end reads might contain valuable information that fortuna is able to reconstruct from signatures of individual reads. Using pairing information during mapping could potentially further improve mapping accuracy, but in contrast to genomic mappings the unknown structure of the originating transcript would only impose weak constraints on mapping locations.</p>
    <p>Even though Whippet previously accelerated AS analysis compared to classical alignment-based approaches, fortuna is more than two times faster than Whippet and can further benefit from multiple threads. More importantly, our experiments show that Whippet’s increased speed comes at the cost of a lower sensitivity, especially when mismatches affect flanking <italic toggle="yes">k</italic>-mers. In addition, Whippet will miss reads with an overhang smaller than <italic toggle="yes">k</italic> and can include novel splice sites only when additionally running a spliced aligner on the entire dataset.</p>
    <p>We also used fortuna to explore novel splice junctions in <italic toggle="yes">Drosophila</italic>, demonstrating the broad applicability of our tool across organisms. We identified hundreds of novel AS events reflecting distinct, tissue-specific expression signatures. fortuna’s speed and sensitivity thus make it possible to combine novel junction discovery with other RNA-seq analysis pipelines to supplement gaps in existing annotations and to obtain a more comprehensive and biologically relevant catalog of AS events between cells and tissues in normal development and in neuromuscular disease.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad419_Supplementary_Data</label>
      <media xlink:href="btad419_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Deutsche Forschungsgemeinschaft [417912216 to M.L.S. and SFB-TRR 338/1 2021-452881907 to S.C.]; Deutsche Gesellschaft für Muskelkranke (8225310 to M.L.S.); start-up funding from the University of Missouri Kansas City (to M.L.S.); the International Max Planck Research School for Molecular and Cellular Life Sciences (E.N.); and a Deutsche Forschungsgemeinschaft fellowship through the Graduate School of Quantitative Biosciences Munich (P.M.M.).</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>All mRNA-Seq data are publicly available from GEO under accession number GSE194199.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad419-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alqassem</surname><given-names>I</given-names></string-name>, <string-name><surname>Sonthalia</surname><given-names>Y</given-names></string-name>, <string-name><surname>Klitzke-Feser</surname><given-names>E</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>McSplicer: a probabilistic model for estimating splice site usage from RNA-seq data</article-title>. <source>Bioinformatics</source>  <year>2021</year>;<volume>37</volume>:<fpage>2004</fpage>–<lpage>11</lpage>.<pub-id pub-id-type="pmid">33515239</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S</given-names></string-name>, <string-name><surname>Reyes</surname><given-names>A</given-names></string-name>, <string-name><surname>Huber</surname><given-names>W.</given-names></string-name></person-group>  <article-title>Detecting differential usage of exons from RNA-seq data</article-title>. <source>Genome Res</source>  <year>2012</year>;<volume>22</volume>:<fpage>2008</fpage>–<lpage>17</lpage>.<pub-id pub-id-type="pmid">22722343</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Anders</surname><given-names>S</given-names></string-name>, <string-name><surname>Pyl</surname><given-names>PT</given-names></string-name>, <string-name><surname>Huber</surname><given-names>W.</given-names></string-name></person-group>  <article-title>Htseq – a Python framework to work with high-throughput sequencing data</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>31</volume>:<fpage>166</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">25260700</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Beretta</surname><given-names>S</given-names></string-name>, <string-name><surname>Bonizzoni</surname><given-names>P</given-names></string-name>, <string-name><surname>Vedova</surname><given-names>GD</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Modeling alternative splicing variants from RNA-seq data with isoform graphs</article-title>. <source>J Comput Biol</source>  <year>2014</year>;<volume>21</volume>:<fpage>16</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">24200390</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bray</surname><given-names>NL</given-names></string-name>, <string-name><surname>Pimentel</surname><given-names>H</given-names></string-name>, <string-name><surname>Melsted</surname><given-names>P</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Near-optimal probabilistic RNA-seq quantification</article-title>. <source>Nat Biotechnol</source>  <year>2016</year>;<volume>34</volume>:<fpage>525</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">27043002</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Canzar</surname><given-names>S</given-names></string-name>, <string-name><surname>Andreotti</surname><given-names>S</given-names></string-name>, <string-name><surname>Weese</surname><given-names>D</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Cidane: comprehensive isoform discovery and abundance estimation</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>16</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">26831908</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cmero</surname><given-names>M</given-names></string-name>, <string-name><surname>Davidson</surname><given-names>NM</given-names></string-name>, <string-name><surname>Oshlack</surname><given-names>A.</given-names></string-name></person-group>  <article-title>Using equivalence class counts for fast and accurate testing of differential transcript usage</article-title>. <source>F1000Res</source>  <year>2019</year>;<volume>8</volume>:<fpage>265</fpage>.<pub-id pub-id-type="pmid">31143443</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cooper</surname><given-names>TA</given-names></string-name>, <string-name><surname>Wan</surname><given-names>L</given-names></string-name>, <string-name><surname>Dreyfuss</surname><given-names>G.</given-names></string-name></person-group>  <article-title>RNA and disease</article-title>. <source>Cell</source>  <year>2009</year>;<volume>136</volume>:<fpage>777</fpage>–<lpage>93</lpage>.<pub-id pub-id-type="pmid">19239895</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Denti</surname><given-names>L</given-names></string-name>, <string-name><surname>Rizzi</surname><given-names>R</given-names></string-name>, <string-name><surname>Beretta</surname><given-names>S</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>ASGAL: aligning RNA-seq data to a splicing graph to detect novel alternative splicing events</article-title>. <source>BMC Bioinformatics</source>  <year>2018</year>;<volume>19</volume>:<fpage>444</fpage>.<pub-id pub-id-type="pmid">30458725</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dobin</surname><given-names>A</given-names></string-name>, <string-name><surname>Davis</surname><given-names>CA</given-names></string-name>, <string-name><surname>Schlesinger</surname><given-names>F</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Star: ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source>  <year>2013</year>;<volume>29</volume>:<fpage>15</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">23104886</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Döring</surname><given-names>A</given-names></string-name>, <string-name><surname>Weese</surname><given-names>D</given-names></string-name>, <string-name><surname>Rausch</surname><given-names>T</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Seqan an efficient, generic C++ library for sequence analysis</article-title>. <source>BMC Bioinformatics</source>  <year>2008</year>;<volume>9</volume>:<fpage>11</fpage>.<pub-id pub-id-type="pmid">18184432</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feng</surname><given-names>J</given-names></string-name>, <string-name><surname>Li</surname><given-names>W</given-names></string-name>, <string-name><surname>Jiang</surname><given-names>T.</given-names></string-name></person-group>  <article-title>Inference of isoforms from short sequence reads</article-title>. <source>J Comput Biol</source>  <year>2011</year>;<volume>18</volume>:<fpage>305</fpage>–<lpage>21</lpage>. PMID: 21385036. <pub-id pub-id-type="doi">10.1089/cmb.2010.0243</pub-id>.<pub-id pub-id-type="pmid">21385036</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Foissac</surname><given-names>S</given-names></string-name>, <string-name><surname>Sammeth</surname><given-names>M.</given-names></string-name></person-group>  <article-title>Astalavista: dynamic and flexible analysis of alternative splicing events in custom gene datasets</article-title>. <source>Nucleic Acids Res</source>  <year>2007</year>;<volume>35</volume>:<fpage>W297</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">17485470</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Griebel</surname><given-names>T</given-names></string-name>, <string-name><surname>Zacher</surname><given-names>B</given-names></string-name>, <string-name><surname>Ribeca</surname><given-names>P</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Modelling and simulating generic RNA-seq experiments with the flux simulator</article-title>. <source>Nucleic Acids Res</source>  <year>2012</year>;<volume>40</volume>:<fpage>10073</fpage>–<lpage>83</lpage>.<pub-id pub-id-type="pmid">22962361</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gunady</surname><given-names>MK</given-names></string-name>, <string-name><surname>Mount</surname><given-names>SM</given-names></string-name>, <string-name><surname>Corrada</surname><given-names>CB.</given-names></string-name></person-group>  <article-title>Yanagi: fast and interpretable segment-based alternative splicing and gene expression analysis</article-title>. <source>BMC Bioinformatics</source>  <year>2019</year>;<volume>20</volume>:<fpage>421</fpage>.<pub-id pub-id-type="pmid">31409274</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jaganathan</surname><given-names>K</given-names></string-name>, <string-name><surname>Panagiotopoulou</surname><given-names>SK</given-names></string-name>, <string-name><surname>McRae</surname><given-names>JF</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Predicting splicing from primary sequence with deep learning</article-title>. <source>Cell</source>  <year>2019</year>;<volume>176</volume>:<fpage>535</fpage>–<lpage>48.e24</lpage>.<pub-id pub-id-type="pmid">30661751</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kahles</surname><given-names>A</given-names></string-name>, <string-name><surname>Ong</surname><given-names>CS</given-names></string-name>, <string-name><surname>Zhong</surname><given-names>Y</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>SplAdder: identification, quantification and testing of alternative splicing events from RNA-seq data</article-title>. <source>Bioinformatics</source>  <year>2016</year>;<volume>32</volume>:<fpage>1840</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">26873928</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kahles</surname><given-names>A</given-names></string-name>, <string-name><surname>Lehmann</surname><given-names>K</given-names></string-name>, <string-name><surname>Toussaint</surname><given-names>NC</given-names></string-name></person-group>  <etal>et al</etal>; <collab>Cancer Genome Atlas Research Network</collab>. <article-title>Comprehensive analysis of alternative splicing across tumors from 8,705 patients</article-title>. <source>Cancer Cell</source>  <year>2018</year>;<volume>34</volume>:<fpage>211</fpage>–<lpage>24.e6</lpage>.<pub-id pub-id-type="pmid">30078747</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H</given-names></string-name>, <string-name><surname>Handsaker</surname><given-names>B</given-names></string-name>, <string-name><surname>Wysoker</surname><given-names>A</given-names></string-name></person-group>  <etal>et al</etal>; <collab>1000 Genome Project Data Processing Subgroup</collab>. <article-title>The sequence alignment/map (SAM) format and samtools</article-title>. <source>Bioinformatics</source>  <year>2009</year>;<volume>25</volume>:<fpage>2078</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>YI</given-names></string-name>, <string-name><surname>Knowles</surname><given-names>DA</given-names></string-name>, <string-name><surname>Humphrey</surname><given-names>J</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Annotation-free quantification of RNA splicing using LeafCutter</article-title>. <source>Nat Genet</source>  <year>2018</year>;<volume>50</volume>:<fpage>151</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">29229983</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liao</surname><given-names>Y</given-names></string-name>, <string-name><surname>Smyth</surname><given-names>GK</given-names></string-name>, <string-name><surname>Shi</surname><given-names>W.</given-names></string-name></person-group>  <article-title>featureCounts: an efficient general purpose program for assigning sequence reads to genomic features</article-title>. <source>Bioinformatics</source>  <year>2014</year>;<volume>30</volume>:<fpage>923</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">24227677</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ntranos</surname><given-names>V</given-names></string-name>, <string-name><surname>Kamath</surname><given-names>GM</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>JM</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Fast and accurate single-cell RNA-seq analysis by clustering of transcript-compatibility counts</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>112</fpage>.<pub-id pub-id-type="pmid">27230763</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Patro</surname><given-names>R</given-names></string-name>, <string-name><surname>Duggal</surname><given-names>G</given-names></string-name>, <string-name><surname>Love</surname><given-names>MI</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Salmon provides fast and bias-aware quantification of transcript expression</article-title>. <source>Nat Methods</source>  <year>2017</year>;<volume>14</volume>:<fpage>417</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">28263959</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rossell</surname><given-names>D</given-names></string-name>, <string-name><surname>Attolini</surname><given-names>CSO</given-names></string-name>, <string-name><surname>Kroiss</surname><given-names>M</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Quantifying alternative splicing from paired-end RNA-sequencing data</article-title>. <source>Ann Appl Stat</source>  <year>2014</year>;<volume>8</volume>:<fpage>309</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">24795787</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sammeth</surname><given-names>M</given-names></string-name>, <string-name><surname>Foissac</surname><given-names>S</given-names></string-name>, <string-name><surname>Guigó</surname><given-names>R.</given-names></string-name></person-group>  <article-title>A general definition and nomenclature for alternative splicing events</article-title>. <source>PLoS Comput Biol</source>  <year>2008</year>;<volume>4</volume>:<fpage>e1000147</fpage>.<pub-id pub-id-type="pmid">18688268</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shen</surname><given-names>S</given-names></string-name>, <string-name><surname>Park</surname><given-names>JW</given-names></string-name>, <string-name><surname>Lu</surname><given-names>Z</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>rMATS: robust and flexible detection of differential alternative splicing from replicate rna-seq data</article-title>. <source>Proc Natl Acad Sci USA</source>  <year>2014</year>;<volume>111</volume>:<fpage>E5593</fpage>–<lpage>601</lpage>.<pub-id pub-id-type="pmid">25480548</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Soneson</surname><given-names>C</given-names></string-name>, <string-name><surname>Matthes</surname><given-names>KL</given-names></string-name>, <string-name><surname>Nowicka</surname><given-names>M</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Isoform prefiltering improves performance of count-based methods for analysis of differential transcript usage</article-title>. <source>Genome Biol</source>  <year>2016</year>;<volume>17</volume>:<fpage>12</fpage>.<pub-id pub-id-type="pmid">26813113</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Srivastava</surname><given-names>A</given-names></string-name>, <string-name><surname>Sarkar</surname><given-names>H</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>N</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>RapMap: a rapid, sensitive and accurate tool for mapping RNA-seq reads to transcriptomes</article-title>. <source>Bioinformatics</source>  <year>2016</year>;<volume>32</volume>:<fpage>i192</fpage>–<lpage>200</lpage>.<pub-id pub-id-type="pmid">27307617</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sterne-Weiler</surname><given-names>T</given-names></string-name>, <string-name><surname>Weatheritt</surname><given-names>RJ</given-names></string-name>, <string-name><surname>Best</surname><given-names>AJ</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Efficient and accurate quantitative profiling of alternative splicing patterns of any complexity on a laptop</article-title>. <source>Mol Cell</source>  <year>2018</year>;<volume>72</volume>:<fpage>187</fpage>–<lpage>200.e6</lpage>.<pub-id pub-id-type="pmid">30220560</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Titus</surname><given-names>MB</given-names></string-name>, <string-name><surname>Chang</surname><given-names>AW</given-names></string-name>, <string-name><surname>Olesnicky</surname><given-names>EC.</given-names></string-name></person-group>  <article-title>Exploring the diverse functional and regulatory consequences of alternative splicing in development and disease</article-title>. <source>Front Genet</source>  <year>2021</year>;<volume>12</volume>:<fpage>775395</fpage>.<pub-id pub-id-type="pmid">34899861</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>T-Y</given-names></string-name>, <string-name><surname>Liu</surname><given-names>Q</given-names></string-name>, <string-name><surname>Ren</surname><given-names>Y</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>A pan-cancer transcriptome analysis of exitron splicing identifies novel cancer driver genes and neoepitopes</article-title>. <source>Mol Cell</source>  <year>2021</year>;<volume>81</volume>:<fpage>2246</fpage>–<lpage>60.e12</lpage>.<pub-id pub-id-type="pmid">33861991</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilks</surname><given-names>C</given-names></string-name>, <string-name><surname>Zheng</surname><given-names>SC</given-names></string-name>, <string-name><surname>Chen</surname><given-names>FY</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>recount3: summaries and queries for large-scale RNA-seq expression and splicing</article-title>. <source>Genome Biol</source>  <year>2021</year>;<volume>22</volume>:<fpage>323</fpage>.<pub-id pub-id-type="pmid">34844637</pub-id></mixed-citation>
    </ref>
    <ref id="btad419-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>J</given-names></string-name>, <string-name><surname>Anczukòw</surname><given-names>O</given-names></string-name>, <string-name><surname>Krainer</surname><given-names>AR</given-names></string-name></person-group>  <etal>et al</etal>  <article-title>Olego: fast and sensitive mapping of spliced mrna-seq reads using small seeds</article-title>. <source>Nucleic Acids Res</source>  <year>2013</year>;<volume>41</volume>:<fpage>5149</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">23571760</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

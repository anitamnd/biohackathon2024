<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bio Protoc</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bio Protoc</journal-id>
    <journal-id journal-id-type="publisher-id">Bio Protoc</journal-id>
    <journal-id journal-id-type="publisher-id">Bio-Protoc</journal-id>
    <journal-title-group>
      <journal-title>Bio-protocol</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2331-8325</issn>
    <publisher>
      <publisher-name>Bio-Protocol</publisher-name>
      <publisher-loc>1075 Lorne Way, Sunnyvale, CA 94087, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10883893</article-id>
    <article-id pub-id-type="publisher-id">e4935</article-id>
    <article-id pub-id-type="publisher-id">4935</article-id>
    <article-id pub-id-type="doi">10.21769/BioProtoc.4935</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Biology</subject>
        <subj-group>
          <subject>Clinical Protocols</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CoCoNat: A Deep Learning–Based Tool for the Prediction of Coiled-coil Domains in Protein Sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Manfredi</surname>
          <given-names>Matteo</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Savojardo</surname>
          <given-names>Castrense</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
        <xref rid="cor1" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Casadio</surname>
          <given-names>Rita</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <aff id="aff1">Biocomputing Group, Department of Pharmacy and Biotechnology, University of Bologna, Bologna, Italy</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1">*For correspondence: <email>pierluigi.martelli@unibo.it</email>
</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>20</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>14</volume>
    <issue>4</issue>
    <elocation-id>e4935</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>28</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>05</day>
        <month>1</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©Copyright : © 2024 The Authors; This is an open
access article under the CC BY-NC license </copyright-statement>
      <copyright-year>2024</copyright-year>
      <ali:free_to_read xmlns:ali="http://www.niso.org/schemas/ali/1.0/"/>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY-NC license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">
https://creativecommons.org/licenses/by-nc/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Coiled-coil domains (CCDs) are structural motifs observed in proteins in all organisms that perform several crucial functions. The computational identification of CCD segments over a protein sequence is of great importance for its functional characterization. This task can essentially be divided into three separate steps: the detection of segment boundaries, the annotation of the heptad repeat pattern along the segment, and the classification of its oligomerization state. Several methods have been proposed over the years addressing one or more of these predictive steps. In this protocol, we illustrate how to make use of CoCoNat, a novel approach based on protein language models, to characterize CCDs. CoCoNat is, at its release (August 2023), the state of the art for CCD detection. The web server allows users to submit input protein sequences and visualize the predicted domains after a few minutes. Optionally, precomputed segments can be provided to the model, which will predict the oligomerization state for each of them. CoCoNat can be easily integrated into biological pipelines by downloading the standalone version, which provides a single executable script to produce the output.</p>
      <p>
Key features
</p>
      <p>• Web server for the prediction of coiled-coil segments from a protein sequence.</p>
      <p>• Three different predictions from a single tool (segment position, heptad repeat annotation, oligomerization state).</p>
      <p>• Possibility to visualize the results online or to download the predictions in different formats for further processing.</p>
      <p>• Easy integration in automated pipelines with the local version of the tool.</p>
    </abstract>
    <kwd-group>
      <kwd>Coiled-coil segments</kwd>
      <kwd>Oligomerization</kwd>
      <kwd>Deep learning</kwd>
      <kwd>Prediction</kwd>
      <kwd>Protein Language Models</kwd>
      <kwd>Web server</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <p>
    <bold>Graphical overview</bold>
  </p>
  <p>
    <inline-graphic xlink:href="BioProtoc-14-4-4935-ga001.jpg"/>
  </p>
  <sec id="s2">
    <title>Background</title>
    <p>Coiled-coil domains (CCDs) are structural motifs where α‐helices pack together in an arrangement called knobs-into-holes [1], by which residues from one helix (the knobs) pack into holes formed by side chains in the other helices participating in the domain. CCDs have been observed in different kinds of proteins sequenced from all the kingdoms of life [2] and perform a great number of diverse functions.</p>
    <p>Canonical CCDs include the interaction of two or more α‐helices, each characterized by the repetition of a seven-residue motif called heptad repeat. The positions of the heptad repeat are referred to as registers and are labeled with the letters <italic toggle="yes">a–g</italic>. CCDs can be classified into different oligomerization states, depending on the number (dimers, trimers, tetramers, and higher orders) and orientation (parallel or antiparallel) of the involved α‐helices.</p>
    <p>Methods such as SOCKET [3] or SamCC-Turbo [4] can annotate CCDs starting from the experimental 3D structure of a protein. In the absence of structural information, several tools have been proposed over the years to perform automatic annotations on protein sequences, each addressing different tasks of CCD prediction (i.e., segment localization, heptad repeat annotation, oligomerization state classification).</p>
    <p>Recently, the development of protein language models (PLMs) introduced a novel way of generating embeddings to encode protein sequences for downstream predictive tasks. We proposed CoCoNat [5], a deep learning–based approach that exploits two different and complementary PLMs, ProtT5 [6] and ESM2 [7], to produce a predictive pipeline for the complete ab initio annotation of CCDs.</p>
    <p>CoCoNat processes input sequences with three cascading networks, each trained independently to solve a specific task. The first step adopts a deep architecture based on convolutional and recurrent layers to identify the presence of coil-coiled segments along the sequence. The second step adopts a probabilistic graphical model to assign registers to each residue in the segment. Finally, the third step adopts a neural network to predict the oligomerization state of each segment. Each prediction is also complemented with the probabilities computed by the network, allowing users to assess their reliability.</p>
    <p>CoCoNat is trained on a dataset comprising 2,198 proteins annotated with 4,342 helices and 9,062 proteins without CCD. When tested on a non-redundant benchmark dataset, comprising 400 proteins annotated with 863 helices and 318 proteins without CCD, CoCoNat outperforms other methods on all three predictive tasks included in the pipeline. Specifically, it achieves a 0.54 per-residue F1 score and a 0.49 per-segment F1 score on the identification of segment boundaries over the sequence (first step in the Graphical overview), a Matthew's Correlation Coefficient (MCC) between 0.83 and 0.84 for each type of register in the annotation of the heptad repeats (second step in the Graphical overview), and an average MCC of 0.58 for the 4-class classification of the oligomerization state (third step in the Graphical overview).</p>
    <p>Moreover, the adoption of PLMs to encode the input allows CoCoNat to be extremely time efficient. When tested on the virtual machine hosting the web server (AMD EPYC 7301 12-Core Processor, 48 GB RAM, no GPU), CoCoNat requires an average running time of 330 s (5.5 min) to predict 100 sequences of length comprised between 100 and 200 residues. The same computation takes approximately 2.5 h with CoCoPRED [8], a similar tool based on canonical multiple sequence alignments.</p>
    <p>Here, we illustrate in detail how CoCoNat can be adopted as a web server or as a standalone tool, allowing for easy integration into any computational pipeline. As a test case, we select one of the proteins belonging to our benchmark dataset, the Mating-type switching protein swi5 from the organism <italic toggle="yes">Schizosaccharomyces pombe</italic> (UniProt accession: Q9UUB7). This protein presents two coiled-coil segments organized as a parallel dimer that CoCoNat identifies. Both the registers and the oligomerization classes are correctly assigned. The only difference between the putative and the real annotations is the length of the segments.</p>
    <p>Supplementary File S1 reports a schema of the web server compliant with the Minimum Information About Bioinformatics investigation (MIABi) guidelines [9].</p>
  </sec>
  <sec id="s3">
    <title>Equipment</title>
    <list list-type="order">
      <list-item>
        <p>Computer with internet access and a web browser</p>
      </list-item>
      <list-item>
        <p>(Only for online execution) CoCoNat web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/" ext-link-type="uri">
https://coconat.biocomp.unibo.it/</ext-link>)</p>
      </list-item>
      <list-item>
        <p>(Only for local execution) Machine with a macOS or Linux operating system and at least 4 CPU cores and 48 GB of RAM</p>
        <p>The local release is not suitable to be executed directly on a machine with a Windows operating system. In this case, the adoption of a virtual machine or the Windows Subsystem for Linux (WSL) is recommended.</p>
      </list-item>
    </list>
  </sec>
  <sec id="s4">
    <title>Software and datasets</title>
    <list list-type="order">
      <list-item>
        <p>Docker Engine, installed (<ext-link xlink:href="https://docs.docker.com/engine/install/debian/" ext-link-type="uri">https://docs.docker.com/engine/install/debian/</ext-link>)</p>
      </list-item>
      <list-item>
        <p>Miniconda, installed (<ext-link xlink:href="https://docs.conda.io/projects/miniconda/en/latest/miniconda-install.html" ext-link-type="uri">https://docs.conda.io/projects/miniconda/en/latest/miniconda-install.html</ext-link>)</p>
        <p>As long as Miniconda is installed, Python 3 and pip (both mentioned in the protocol) do not need to be installed separately, as they will be included in the environment generated by Miniconda.</p>
      </list-item>
    </list>
  </sec>
  <sec id="s5">
    <title>Procedure</title>
    <list list-type="alpha-upper">
      <list-item>
        <p>
          <bold>Online single sequence prediction</bold>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare your sequence in FASTA format.</p>
          </list-item>
          <list-item>
            <p>Open the homepage of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/" ext-link-type="uri">
https://coconat.biocomp.unibo.it/</ext-link>).</p>
          </list-item>
          <list-item>
            <p>Paste your sequence in the form or upload the FASTA file.</p>
          </list-item>
          <list-item>
            <p>The web server will validate the format of your input. If the limitations are too strict for your target sequence, we suggest following Procedure C and running CoCoNat locally.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Valid FASTA format.</p>
              </list-item>
              <list-item>
                <p>Sequence length between 40 and 700 residues.</p>
              </list-item>
              <list-item>
                <p>Contains only 20 standard amino acids, 3 non-standard residues (UZB), or undetermined character (X).</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>(<bold>Optional</bold>) Provide precomputed coiled-coil segments.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Tick the box <italic toggle="yes">Provide precomputed coiled-coil segments (predict only oligomerization state).</italic>
</p>
              </list-item>
              <list-item>
                <p>Paste sequence of states. Use the letter <italic toggle="yes">i</italic> to indicate a residue that is not part of a coiled-coil segment; use the letters <italic toggle="yes">a–g</italic> to indicate the registers of the residues in the coiled-coil segment.</p>
              </list-item>
              <list-item>
                <p>If you only know the segments but not the registers, skip this step and run the full prediction.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>Press <italic toggle="yes">Submit</italic> (<xref rid="BioProtoc-14-4-4935-g001" ref-type="fig">Figure 1</xref>).</p>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g001">
                <label>Figure 1.</label>
                <caption>
                  <title>Online single sequence submission page.</title>
                  <p>Homepage of the CoCoNat web server, where users can submit a target sequence in FASTA format. It is possible to load an example sequence (1) or to upload a file from the computer (2). Optionally, it is possible to provide precomputed coiled-coil segments. A button loads an example (3) showing the correct format. At the end of the page, it is possible to clear the forms (4) or to submit the job to start the prediction (5).</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g001" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Bookmark the page that loads after job submission. This page will be updated with the results as soon as they are ready.</p>
          </list-item>
          <list-item>
            <p>Graphically visualize the results (<xref rid="BioProtoc-14-4-4935-g002" ref-type="fig">Figure 2</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Under <italic toggle="yes">Predicted coiled-coil segments</italic>, you will see a list of all predicted segments, including the following information:</p>
                <p>i. Segment start.</p>
                <p>ii. Segment end.</p>
                <p>iii. Length of segment.</p>
                <p>iv. Predicted registers.</p>
                <p>v. Predicted oligomerization state.</p>
                <p>
                  <fig position="float" id="BioProtoc-14-4-4935-g002">
                    <label>Figure 2.</label>
                    <caption>
                      <title>Online single sequence result page (full prediction).</title>
                      <p>Results are visualized after submitting the example input to the web server, without precomputed segments. From the results page, it is possible to copy the link (1) to access them at a later date and to download the results in tab-separated values (TSV) format (2) or in JSON format (3). For each predicted segment, clicking on the magnifying glass (4) will zoom in the corresponding region on the sequence feature viewer. The viewer itself offers the possibility to change visualization by zooming in or out, resetting the zoom, and moving along the sequence length (5). Finally, it is possible to save a screenshot of the selected portion of the sequence (6).</p>
                    </caption>
                    <graphic xlink:href="BioProtoc-14-4-4935-g002" position="float"/>
                  </fig>
                </p>
              </list-item>
              <list-item>
                <p>Under <italic toggle="yes">Sequence feature view</italic>, you will see four lines visualizing from top to bottom the following data:</p>
                <p>i. Residue sequence.</p>
                <p>ii. Predicted coiled-coil regions (colored depending on the predicted oligomerization state).</p>
                <p>iii. Predicted registers (colored depending on the register type).</p>
                <p>iv. Coiled-coil probability, showing how confident the model is at each position.</p>
              </list-item>
              <list-item>
                <p>(<bold>Optional</bold>) If you provided precomputed coiled-coil segments (see step A5), the coiled-coil probabilities (see steps A8b–8d) will be all equal to 1, and only the oligomerization state will be predicted by the web server (<xref rid="BioProtoc-14-4-4935-g003" ref-type="fig">Figure 3</xref>).</p>
              </list-item>
              <list-item>
                <p>If needed, a button is available to take screenshots of the selected region of the sequence.</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g003">
                <label>Figure 3.</label>
                <caption>
                  <title>Online single sequence result page (precomputed segments).</title>
                  <p>Results are visualized after submitting the example input to the web server. In this case, only the oligomerization state was predicted, and the precomputed segments are visualized with an associated probability equal to 100%. The functionalities of the web server are the same as detailed in Figure 2.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g003" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Download results with the buttons at the top of the page.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>If you select the tab-separated format (TSV), the generated file will contain a line for each residue (plus the header) organized in 14 columns, containing information about:</p>
                <p>i. <italic toggle="yes">ID</italic>: ID of the protein.</p>
                <p>ii. <italic toggle="yes">RES</italic>: Residue type.</p>
                <p>iii. <italic toggle="yes">CC_CLASS</italic>: Predicted coiled-coil class. The coiled-coil class is <italic toggle="yes">i</italic> if the residue does not belong to a coiled-coil segment; otherwise, it is a letter from <italic toggle="yes">a</italic> to <italic toggle="yes">g</italic> that indicates the predicted register.</p>
                <p>iv. <italic toggle="yes">OligoState</italic>: Predicted oligomerization state (<italic toggle="yes">P, A, 3</italic>, or <italic toggle="yes">4</italic> for parallel dimer, antiparallel dimer, trimer, or tetramer, respectively).</p>
                <p>v. <italic toggle="yes">Pi, Pa-Pg, PH</italic>: nine columns for the computed probabilities for each possible coiled-coil class (the higher probability will determine the content of the third column).</p>
                <p>vi. <italic toggle="yes">pOligo</italic>: Computed probability of the predicted oligomerization state reported in point iv (the higher the probability, the higher the confidence of the model).</p>
              </list-item>
              <list-item>
                <p>If you select the JSON format, the generated file will contain one entry with 10 fields:</p>
                <p>i. <italic toggle="yes">accession</italic>: ID of the protein.</p>
                <p>ii. <italic toggle="yes">res</italic>: FASTA sequence.</p>
                <p>iii. <italic toggle="yes">labels</italic>: Sequence of predicted coiled-coil classes (see step A9a.iii).</p>
                <p>iv. <italic toggle="yes">prob</italic>: List of probabilities assigned by the predictor to the most likely coiled-coil class for each residue.</p>
                <p>v. <italic toggle="yes">oligo</italic>: Sequence of predicted oligomerization classes (see step A9a.iv).</p>
                <p>vi. <italic toggle="yes">prob_oligo</italic>: List of probabilities assigned by the predictor to the most likely oligomerization class for each residue.</p>
                <p>vii. <italic toggle="yes">segments</italic>: List with one item for each predicted segment reporting summary information about it.</p>
                <p>viii. <italic toggle="yes">length</italic>: Length of the protein.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>A typical computation for a single sequence prediction will require approximately 90 s (1.5 min).</p>
          </list-item>
          <list-item>
            <p>For further help and details, please reference the <italic toggle="yes">Help</italic> page of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/help/" ext-link-type="uri">https://coconat.biocomp.unibo.it/help/</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
      <list-item>
        <p>
          <bold>Online batch prediction</bold>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare your sequences in FASTA format.</p>
          </list-item>
          <list-item>
            <p>Open the Homepage of the web server and go to the tab <italic toggle="yes">batch submission</italic> (<ext-link xlink:href="https://coconat.biocomp.unibo.it/batch/" ext-link-type="uri">https://coconat.biocomp.unibo.it/batch/</ext-link>).</p>
          </list-item>
          <list-item>
            <p>Upload the FASTA file.</p>
          </list-item>
          <list-item>
            <p>(<bold>Optional</bold>) Provide an email address. When results are ready, the link to access them will be sent to you.</p>
          </list-item>
          <list-item>
            <p>The web server will validate the format of your input. If the limitations are too strict for your target sequences, we suggest following Procedure C and running CoCoNat locally.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Valid FASTA format.</p>
              </list-item>
              <list-item>
                <p>No more than 500 sequences.</p>
              </list-item>
              <list-item>
                <p>All sequences with length between 40 and 700 residues and total number of residues not greater than 80,000.</p>
              </list-item>
              <list-item>
                <p>Each sequence contains only 20 standard amino acids, 3 non-standard residues (UZB), or undetermined character (X).</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>Press <italic toggle="yes">Submit</italic>.</p>
          </list-item>
          <list-item>
            <p>Bookmark the page that loads upon job submission. This page will be updated with the results as soon as they are ready. If you have provided an email address, you will receive the link to this page via email once the results are ready.</p>
          </list-item>
          <list-item>
            <p>Download results with the buttons at the top of the page.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>See Procedure A, step 9a for a description of the TSV format.</p>
              </list-item>
              <list-item>
                <p>See Procedure A, step 9b for a description of the JSON format. Mind that, in this case, the JSON file will contain one entry for each sequence in the input file.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>The time needed for computing the outputs will depend on the number and length of the input sequences. A job containing 100 sequences with lengths between 100 and 200 residues should take approximately 330 s (5.5 min).</p>
          </list-item>
          <list-item>
            <p>For further help and details please reference the <italic toggle="yes">Help</italic> page of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/help/" ext-link-type="uri">https://coconat.biocomp.unibo.it/help/</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
      <list-item>
        <p>
          <bold>Local prediction</bold>
        </p>
        <p>
          <italic toggle="yes">Note: All lines of code reported in this section are meant to be executed inside a terminal.</italic>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare the environment (see <xref rid="BioProtoc-14-4-4935-g004" ref-type="fig">Figure 4</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Create a <italic toggle="yes">conda</italic> environment with Python 3.</p>
                <p>conda create -n coconat python</p>
                <p>conda activate coconat</p>
              </list-item>
              <list-item>
                <p>Install dependencies using <italic toggle="yes">pip</italic>.</p>
                <p>pip install docker absl-py</p>
              </list-item>
              <list-item>
                <p>Clone locally the GitHub repository in your current working directory; then, cd (change directory) to the newly created package directory.</p>
                <p>git clone https://github.com/BolognaBiocomp/coconat</p>
                <p>cd coconat</p>
              </list-item>
              <list-item>
                <p>Build the Docker image.</p>
                <p>docker build -t coconat:1.0.</p>
              </list-item>
              <list-item>
                <p>Download the required PLMs (e.g., in the <italic toggle="yes">Home</italic> directory).</p>
                <p>cd</p>
                <p>wget https://coconat.biocomp.unibo.it/static/data/coconat-plms.tar.gz</p>
                <p>tar xvzf coconat-plms.tar.gz</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g004">
                <label>Figure 4.</label>
                <caption>
                  <title>Configuration of local installation.</title>
                  <p>The screenshot displays the content of the CoCoNat folder after downloading the GitHub repository in a local folder. The word “coconat” between parenthesis at the beginning of the prompt (in white) appears only if the conda environment is properly set up.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g004" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Run CoCoNat (see <xref rid="BioProtoc-14-4-4935-g005" ref-type="fig">Figure 5</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Prepare your sequences in FASTA format. Input requirements are the same as the online predictions but without limits on the number and length of the sequences. Please remember that the maximal number of sequences and the maximal length of each sequence that the model will be able to process together will depend on the specifics of your machine.</p>
              </list-item>
              <list-item>
                <p>Run the <italic toggle="yes">run_coconat_abinitio_docker.py</italic> script, providing paths to the input FASTA file, the output TSV file, and the models downloaded at step C1e.</p>
                <p>cd coconat</p>
                <p>python run_coconat_abinitio_docker.py \</p>
                <p>--fasta_file=example-data/example.fasta \</p>
                <p>--output_file=example-data/example.tsv --plm_dir=${HOME}/coconat-plms</p>
              </list-item>
              <list-item>
                <p>(<bold>Optional</bold>) Run instead the <italic toggle="yes">run_coconat_state_docker.py</italic> script, providing an additional input file, to run predictions with precomputed coiled-coil segments. The input segment file must be a TSV containing a row for each precomputed segment and four columns:</p>
                <p>i. ID of the protein containing the segment.</p>
                <p>ii. Segment start.</p>
                <p>iii. Segment end.</p>
                <p>iv. Registers sequence of the segment.</p>
                <p>cd coconat</p>
                <p>python run_coconat_state_docker.py \</p>
                <p>--fasta_file=example-data/example.fasta \</p>
                <p>--seg_file=example-data/example-seg.tsv</p>
                <p>--output_file=example-data/example.tsv --plm_dir=${HOME}/coconat-plms</p>
                <p>See step A9a for a description of the output file generated by the program.</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g005">
                <label>Figure 5.</label>
                <caption>
                  <title>Local execution.</title>
                  <p>The screenshot displays the execution of an example contained in the GitHub repository. At the top, the content of the input files is displayed, including a FASTA file and a segment file. The third command is the execution of the CoCoNat script, followed by the expected messages given during a normal execution. Finally, the last command shows the first 10 lines of the output file in tab-separated format. The meaning of each column is detailed in step A9a.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g005" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>For further help and details please reference the README provided in the GitHub repository (<ext-link xlink:href="https://github.com/BolognaBiocomp/coconat" ext-link-type="uri">https://github.com/BolognaBiocomp/coconat</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
    </list>
  </sec>
  <sec id="s6">
    <title>Validation of protocol</title>
    <p>This protocol or parts of it has been used and validated in the following research article(s):</p>
    <list list-type="bullet">
      <list-item>
        <p>Madeo et al. (2023). CoCoNat: a novel method based on deep learning for coiled-coil prediction. Bioinformatics (Tables 3, 4, 5).</p>
      </list-item>
    </list>
  </sec>
</body>
<back>
  <ack>
    <p>The work was supported by the European Union—NextGenerationEU through the Italian Ministry of University and Research under the projects “Consolidation of the Italian Infrastructure for Omics Data and Bioinformatics” (ElixirxNextGenIT)” (Investment PNRR-M4C2-I3.1, Project IR_0000010, CUP B53C22001800006) and "HEAL ITALIA" (Investment PNRR-M4C2-I1.3, Project PE_00000019, CUP J33C22002920006).</p>
    <p>This protocol describes the method presented in Madeo et al. (2023).</p>
  </ack>
  <fn-group>
    <title>Citation</title>
    <fn id="fn1" fn-type="other" specific-use="citation-format">
      <p>Readers should cite both the Bio-protocol article and <related-article related-article-type="article-reference" ext-link-type="doi" id="BioProtoc-14-4-4935-ra1" xlink:href="10.1093/bioinformatics/btad495">the original research article</related-article> where this protocol was used.</p>
    </fn>
  </fn-group>
  <fn-group>
    <title>Q&amp;A</title>
    <fn id="fn2" fn-type="other" specific-use="citation-format">
      <p>Post your question about this protocol in <ext-link xlink:href="https://bio-protocol.org/e4935?source=PMC#bbs" ext-link-type="uri">Q&amp;A</ext-link> and get help from the authors of the protocol and some of its users.</p>
    </fn>
  </fn-group>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p>There are no conflicts of interest or competing interests.</p>
  </notes>
  <ref-list>
    <title>References</title>
    <ref id="r1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Crick</surname><given-names>F. H. C.</given-names></name></person-group>(<year>1952</year>). <article-title>Is α-Keratin a Coiled Coil</article-title>? <source>Nature</source><volume>170</volume>(<issue>4334</issue>): <fpage>882</fpage><lpage>883</lpage><lpage>883</lpage>. doi: <pub-id pub-id-type="doi">10.1038/170882b0</pub-id></mixed-citation>
    </ref>
    <ref id="r2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Truebestein</surname><given-names>L.</given-names></name> and <name><surname>Leonard</surname><given-names>T. A.</given-names></name>
</person-group>(<year>2016</year>). <article-title>Coiled-coils: The long and short of it</article-title>. <source>Bioessays</source><volume>38</volume>(<issue>9</issue>): <fpage>903</fpage><lpage>916</lpage><lpage>916</lpage>.
doi: <pub-id pub-id-type="doi">10.1002/bies.201600062</pub-id><pub-id pub-id-type="pmid">27492088</pub-id></mixed-citation>
    </ref>
    <ref id="r3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Walshaw</surname><given-names>J.</given-names></name> and <name><surname>Woolfson</surname><given-names>D. N.</given-names></name>
</person-group>(<year>2001</year>). <article-title>Socket: a program for identifying and analysing coiled-coil motifs within protein structures</article-title>. <source>J. Mol. Biol</source>. <volume>307</volume>(<issue>5</issue>): <fpage>1427</fpage><lpage>1450</lpage><lpage>1450</lpage>. 
doi:<pub-id pub-id-type="doi">10.1006/jmbi.2001.4545</pub-id><pub-id pub-id-type="pmid">11292353</pub-id></mixed-citation>
    </ref>
    <ref id="r4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Szczepaniak</surname><given-names>K.</given-names></name>, <name><surname>Bukala</surname><given-names>A.</given-names></name>, <name><surname>da Silva Neto</surname><given-names>A. M.</given-names></name>, <name><surname>Ludwiczak</surname><given-names>J.</given-names></name> and <name><surname>Dunin-Horkawicz</surname><given-names>S.</given-names></name>
</person-group>(<year>2021</year>). <article-title>A library of coiled-coil domains: from regular bundles to peculiar twists</article-title>. <source>Bioinformatics</source><comment>36(22–23): 5368–5376. </comment>
doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa1041</pub-id>
</mixed-citation>
    </ref>
    <ref id="r5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Madeo</surname><given-names>G.</given-names></name>, <name><surname>Savojardo</surname><given-names>C.</given-names></name>, <name><surname>Manfredi</surname><given-names>M.</given-names></name>, <name><surname>Martelli</surname><given-names>P. L.</given-names></name> and <name><surname>Casadio</surname><given-names>R.</given-names></name>
</person-group>(<year>2023</year>). <article-title>CoCoNat: a novel method based on deep learning for coiled-coil prediction</article-title>. <source>Bioinformatics</source><comment>39(8). </comment>
doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btad495</pub-id>
</mixed-citation>
    </ref>
    <ref id="r6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Elnaggar</surname><given-names>A.</given-names></name>, <name><surname>Heinzinger</surname><given-names>M.</given-names></name>, <name><surname>Dallago</surname><given-names>C.</given-names></name>, <name><surname>Rihawi</surname><given-names>G.</given-names></name>, <name><surname>Wang</surname><given-names>Y.</given-names></name>, <name><surname>Jones</surname><given-names>L.</given-names></name>, <name><surname>Gibbs</surname><given-names>T.</given-names></name>, <name><surname>Feher</surname><given-names>T.</given-names></name>, <name><surname>Angerer</surname><given-names>C.</given-names></name>, <name><surname>Steinegger</surname><given-names>M.</given-names></name>, <etal/></person-group>.(<year>2020</year>). <article-title>ProtTrans: Towards Cracking the Language of Life’s Code Through Self-Supervised Deep Learning and High Performance Computing</article-title>. <source>arXiv</source>. <comment>Retrieved from http://arxiv.org/abs/2007.06225</comment></mixed-citation>
    </ref>
    <ref id="r7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lin</surname><given-names>Z.</given-names></name>, <name><surname>Akin</surname><given-names>H.</given-names></name>, <name><surname>Rao</surname><given-names>R.</given-names></name>, <name><surname>Hie</surname><given-names>B.</given-names></name>, <name><surname>Zhu</surname><given-names>Z.</given-names></name>, <name><surname>Lu</surname><given-names>W.</given-names></name>, <name><surname>Smetanin</surname><given-names>N.</given-names></name>, <name><surname>Verkuil</surname><given-names>R.</given-names></name>, <name><surname>Kabeli</surname><given-names>O.</given-names></name>, <name><surname>Shmueli</surname><given-names>Y.</given-names></name>, <etal/></person-group>.(<year>2022</year>). <article-title>Evolutionary-scale prediction of atomic level protein structure with a language model</article-title>. <source>bioRxiv</source> doi: <pub-id pub-id-type="doi">10.1101/2022.07.20.500902</pub-id>
</mixed-citation>
    </ref>
    <ref id="r8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Feng</surname><given-names>S.-H.</given-names></name>, <name><surname>Xia</surname><given-names>C.-Q.</given-names></name> and <name><surname>Shen</surname><given-names>H.-B.</given-names></name>
</person-group>(<year>2022</year>). <article-title>CoCoPRED: coiled-coil protein structural feature prediction from amino acid sequence using deep neural networks</article-title>. <source>Bioinformatics</source><volume>38</volume>(<issue>3</issue>): <fpage>720</fpage><lpage>729</lpage><lpage>729</lpage>. doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btab744</pub-id><pub-id pub-id-type="pmid">34718416</pub-id></mixed-citation>
    </ref>
    <ref id="r9">
      <label>9</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tan</surname><given-names>T.</given-names></name>, <name><surname>Tong</surname><given-names>J.</given-names></name>, <name><surname>Khan</surname><given-names>A. M.</given-names></name>, <name><surname>de Silva</surname><given-names>M.</given-names></name>, <name><surname>Lim</surname><given-names>K.</given-names></name> and <name><surname>Ranganathan</surname><given-names>S.</given-names></name>
</person-group>(<year>2010</year>). <article-title>Advancing standards for bioinformatics activities: persistence, reproducibility, disambiguation and Minimum Information About a Bioinformatics investigation(MIABi)</article-title>. <source>BMC Genomics</source><comment>11: S27. </comment>
doi: <pub-id pub-id-type="doi">10.1186/1471-2164-11-s4-s27</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
  <sec id="s7">
    <title>Supplementary information</title>
    <p>The following supporting information can be downloaded <ext-link xlink:href="https://cdn.bio-protocol.org/journal/static/2305206_File%20S1.docx?v=181" ext-link-type="uri">here</ext-link>:</p>
    <list list-type="order">
      <list-item>
        <p>File S1.</p>
      </list-item>
    </list>
  </sec>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bio Protoc</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bio Protoc</journal-id>
    <journal-id journal-id-type="publisher-id">Bio Protoc</journal-id>
    <journal-id journal-id-type="publisher-id">Bio-Protoc</journal-id>
    <journal-title-group>
      <journal-title>Bio-protocol</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2331-8325</issn>
    <publisher>
      <publisher-name>Bio-Protocol</publisher-name>
      <publisher-loc>1075 Lorne Way, Sunnyvale, CA 94087, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10883893</article-id>
    <article-id pub-id-type="publisher-id">e4935</article-id>
    <article-id pub-id-type="publisher-id">4935</article-id>
    <article-id pub-id-type="doi">10.21769/BioProtoc.4935</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Biology</subject>
        <subj-group>
          <subject>Clinical Protocols</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CoCoNat: A Deep Learning–Based Tool for the Prediction of Coiled-coil Domains in Protein Sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Manfredi</surname>
          <given-names>Matteo</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Savojardo</surname>
          <given-names>Castrense</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
        <xref rid="cor1" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Casadio</surname>
          <given-names>Rita</given-names>
        </name>
        <xref rid="aff1" ref-type="aff"/>
      </contrib>
      <aff id="aff1">Biocomputing Group, Department of Pharmacy and Biotechnology, University of Bologna, Bologna, Italy</aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1">*For correspondence: <email>pierluigi.martelli@unibo.it</email>
</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>20</day>
      <month>2</month>
      <year>2024</year>
    </pub-date>
    <volume>14</volume>
    <issue>4</issue>
    <elocation-id>e4935</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>28</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>05</day>
        <month>1</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©Copyright : © 2024 The Authors; This is an open
access article under the CC BY-NC license </copyright-statement>
      <copyright-year>2024</copyright-year>
      <ali:free_to_read xmlns:ali="http://www.niso.org/schemas/ali/1.0/"/>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY-NC license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">
https://creativecommons.org/licenses/by-nc/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Coiled-coil domains (CCDs) are structural motifs observed in proteins in all organisms that perform several crucial functions. The computational identification of CCD segments over a protein sequence is of great importance for its functional characterization. This task can essentially be divided into three separate steps: the detection of segment boundaries, the annotation of the heptad repeat pattern along the segment, and the classification of its oligomerization state. Several methods have been proposed over the years addressing one or more of these predictive steps. In this protocol, we illustrate how to make use of CoCoNat, a novel approach based on protein language models, to characterize CCDs. CoCoNat is, at its release (August 2023), the state of the art for CCD detection. The web server allows users to submit input protein sequences and visualize the predicted domains after a few minutes. Optionally, precomputed segments can be provided to the model, which will predict the oligomerization state for each of them. CoCoNat can be easily integrated into biological pipelines by downloading the standalone version, which provides a single executable script to produce the output.</p>
      <p>
Key features
</p>
      <p>• Web server for the prediction of coiled-coil segments from a protein sequence.</p>
      <p>• Three different predictions from a single tool (segment position, heptad repeat annotation, oligomerization state).</p>
      <p>• Possibility to visualize the results online or to download the predictions in different formats for further processing.</p>
      <p>• Easy integration in automated pipelines with the local version of the tool.</p>
    </abstract>
    <kwd-group>
      <kwd>Coiled-coil segments</kwd>
      <kwd>Oligomerization</kwd>
      <kwd>Deep learning</kwd>
      <kwd>Prediction</kwd>
      <kwd>Protein Language Models</kwd>
      <kwd>Web server</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <p>
    <bold>Graphical overview</bold>
  </p>
  <p>
    <inline-graphic xlink:href="BioProtoc-14-4-4935-ga001.jpg"/>
  </p>
  <sec id="s2">
    <title>Background</title>
    <p>Coiled-coil domains (CCDs) are structural motifs where α‐helices pack together in an arrangement called knobs-into-holes [1], by which residues from one helix (the knobs) pack into holes formed by side chains in the other helices participating in the domain. CCDs have been observed in different kinds of proteins sequenced from all the kingdoms of life [2] and perform a great number of diverse functions.</p>
    <p>Canonical CCDs include the interaction of two or more α‐helices, each characterized by the repetition of a seven-residue motif called heptad repeat. The positions of the heptad repeat are referred to as registers and are labeled with the letters <italic toggle="yes">a–g</italic>. CCDs can be classified into different oligomerization states, depending on the number (dimers, trimers, tetramers, and higher orders) and orientation (parallel or antiparallel) of the involved α‐helices.</p>
    <p>Methods such as SOCKET [3] or SamCC-Turbo [4] can annotate CCDs starting from the experimental 3D structure of a protein. In the absence of structural information, several tools have been proposed over the years to perform automatic annotations on protein sequences, each addressing different tasks of CCD prediction (i.e., segment localization, heptad repeat annotation, oligomerization state classification).</p>
    <p>Recently, the development of protein language models (PLMs) introduced a novel way of generating embeddings to encode protein sequences for downstream predictive tasks. We proposed CoCoNat [5], a deep learning–based approach that exploits two different and complementary PLMs, ProtT5 [6] and ESM2 [7], to produce a predictive pipeline for the complete ab initio annotation of CCDs.</p>
    <p>CoCoNat processes input sequences with three cascading networks, each trained independently to solve a specific task. The first step adopts a deep architecture based on convolutional and recurrent layers to identify the presence of coil-coiled segments along the sequence. The second step adopts a probabilistic graphical model to assign registers to each residue in the segment. Finally, the third step adopts a neural network to predict the oligomerization state of each segment. Each prediction is also complemented with the probabilities computed by the network, allowing users to assess their reliability.</p>
    <p>CoCoNat is trained on a dataset comprising 2,198 proteins annotated with 4,342 helices and 9,062 proteins without CCD. When tested on a non-redundant benchmark dataset, comprising 400 proteins annotated with 863 helices and 318 proteins without CCD, CoCoNat outperforms other methods on all three predictive tasks included in the pipeline. Specifically, it achieves a 0.54 per-residue F1 score and a 0.49 per-segment F1 score on the identification of segment boundaries over the sequence (first step in the Graphical overview), a Matthew's Correlation Coefficient (MCC) between 0.83 and 0.84 for each type of register in the annotation of the heptad repeats (second step in the Graphical overview), and an average MCC of 0.58 for the 4-class classification of the oligomerization state (third step in the Graphical overview).</p>
    <p>Moreover, the adoption of PLMs to encode the input allows CoCoNat to be extremely time efficient. When tested on the virtual machine hosting the web server (AMD EPYC 7301 12-Core Processor, 48 GB RAM, no GPU), CoCoNat requires an average running time of 330 s (5.5 min) to predict 100 sequences of length comprised between 100 and 200 residues. The same computation takes approximately 2.5 h with CoCoPRED [8], a similar tool based on canonical multiple sequence alignments.</p>
    <p>Here, we illustrate in detail how CoCoNat can be adopted as a web server or as a standalone tool, allowing for easy integration into any computational pipeline. As a test case, we select one of the proteins belonging to our benchmark dataset, the Mating-type switching protein swi5 from the organism <italic toggle="yes">Schizosaccharomyces pombe</italic> (UniProt accession: Q9UUB7). This protein presents two coiled-coil segments organized as a parallel dimer that CoCoNat identifies. Both the registers and the oligomerization classes are correctly assigned. The only difference between the putative and the real annotations is the length of the segments.</p>
    <p>Supplementary File S1 reports a schema of the web server compliant with the Minimum Information About Bioinformatics investigation (MIABi) guidelines [9].</p>
  </sec>
  <sec id="s3">
    <title>Equipment</title>
    <list list-type="order">
      <list-item>
        <p>Computer with internet access and a web browser</p>
      </list-item>
      <list-item>
        <p>(Only for online execution) CoCoNat web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/" ext-link-type="uri">
https://coconat.biocomp.unibo.it/</ext-link>)</p>
      </list-item>
      <list-item>
        <p>(Only for local execution) Machine with a macOS or Linux operating system and at least 4 CPU cores and 48 GB of RAM</p>
        <p>The local release is not suitable to be executed directly on a machine with a Windows operating system. In this case, the adoption of a virtual machine or the Windows Subsystem for Linux (WSL) is recommended.</p>
      </list-item>
    </list>
  </sec>
  <sec id="s4">
    <title>Software and datasets</title>
    <list list-type="order">
      <list-item>
        <p>Docker Engine, installed (<ext-link xlink:href="https://docs.docker.com/engine/install/debian/" ext-link-type="uri">https://docs.docker.com/engine/install/debian/</ext-link>)</p>
      </list-item>
      <list-item>
        <p>Miniconda, installed (<ext-link xlink:href="https://docs.conda.io/projects/miniconda/en/latest/miniconda-install.html" ext-link-type="uri">https://docs.conda.io/projects/miniconda/en/latest/miniconda-install.html</ext-link>)</p>
        <p>As long as Miniconda is installed, Python 3 and pip (both mentioned in the protocol) do not need to be installed separately, as they will be included in the environment generated by Miniconda.</p>
      </list-item>
    </list>
  </sec>
  <sec id="s5">
    <title>Procedure</title>
    <list list-type="alpha-upper">
      <list-item>
        <p>
          <bold>Online single sequence prediction</bold>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare your sequence in FASTA format.</p>
          </list-item>
          <list-item>
            <p>Open the homepage of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/" ext-link-type="uri">
https://coconat.biocomp.unibo.it/</ext-link>).</p>
          </list-item>
          <list-item>
            <p>Paste your sequence in the form or upload the FASTA file.</p>
          </list-item>
          <list-item>
            <p>The web server will validate the format of your input. If the limitations are too strict for your target sequence, we suggest following Procedure C and running CoCoNat locally.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Valid FASTA format.</p>
              </list-item>
              <list-item>
                <p>Sequence length between 40 and 700 residues.</p>
              </list-item>
              <list-item>
                <p>Contains only 20 standard amino acids, 3 non-standard residues (UZB), or undetermined character (X).</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>(<bold>Optional</bold>) Provide precomputed coiled-coil segments.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Tick the box <italic toggle="yes">Provide precomputed coiled-coil segments (predict only oligomerization state).</italic>
</p>
              </list-item>
              <list-item>
                <p>Paste sequence of states. Use the letter <italic toggle="yes">i</italic> to indicate a residue that is not part of a coiled-coil segment; use the letters <italic toggle="yes">a–g</italic> to indicate the registers of the residues in the coiled-coil segment.</p>
              </list-item>
              <list-item>
                <p>If you only know the segments but not the registers, skip this step and run the full prediction.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>Press <italic toggle="yes">Submit</italic> (<xref rid="BioProtoc-14-4-4935-g001" ref-type="fig">Figure 1</xref>).</p>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g001">
                <label>Figure 1.</label>
                <caption>
                  <title>Online single sequence submission page.</title>
                  <p>Homepage of the CoCoNat web server, where users can submit a target sequence in FASTA format. It is possible to load an example sequence (1) or to upload a file from the computer (2). Optionally, it is possible to provide precomputed coiled-coil segments. A button loads an example (3) showing the correct format. At the end of the page, it is possible to clear the forms (4) or to submit the job to start the prediction (5).</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g001" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Bookmark the page that loads after job submission. This page will be updated with the results as soon as they are ready.</p>
          </list-item>
          <list-item>
            <p>Graphically visualize the results (<xref rid="BioProtoc-14-4-4935-g002" ref-type="fig">Figure 2</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Under <italic toggle="yes">Predicted coiled-coil segments</italic>, you will see a list of all predicted segments, including the following information:</p>
                <p>i. Segment start.</p>
                <p>ii. Segment end.</p>
                <p>iii. Length of segment.</p>
                <p>iv. Predicted registers.</p>
                <p>v. Predicted oligomerization state.</p>
                <p>
                  <fig position="float" id="BioProtoc-14-4-4935-g002">
                    <label>Figure 2.</label>
                    <caption>
                      <title>Online single sequence result page (full prediction).</title>
                      <p>Results are visualized after submitting the example input to the web server, without precomputed segments. From the results page, it is possible to copy the link (1) to access them at a later date and to download the results in tab-separated values (TSV) format (2) or in JSON format (3). For each predicted segment, clicking on the magnifying glass (4) will zoom in the corresponding region on the sequence feature viewer. The viewer itself offers the possibility to change visualization by zooming in or out, resetting the zoom, and moving along the sequence length (5). Finally, it is possible to save a screenshot of the selected portion of the sequence (6).</p>
                    </caption>
                    <graphic xlink:href="BioProtoc-14-4-4935-g002" position="float"/>
                  </fig>
                </p>
              </list-item>
              <list-item>
                <p>Under <italic toggle="yes">Sequence feature view</italic>, you will see four lines visualizing from top to bottom the following data:</p>
                <p>i. Residue sequence.</p>
                <p>ii. Predicted coiled-coil regions (colored depending on the predicted oligomerization state).</p>
                <p>iii. Predicted registers (colored depending on the register type).</p>
                <p>iv. Coiled-coil probability, showing how confident the model is at each position.</p>
              </list-item>
              <list-item>
                <p>(<bold>Optional</bold>) If you provided precomputed coiled-coil segments (see step A5), the coiled-coil probabilities (see steps A8b–8d) will be all equal to 1, and only the oligomerization state will be predicted by the web server (<xref rid="BioProtoc-14-4-4935-g003" ref-type="fig">Figure 3</xref>).</p>
              </list-item>
              <list-item>
                <p>If needed, a button is available to take screenshots of the selected region of the sequence.</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g003">
                <label>Figure 3.</label>
                <caption>
                  <title>Online single sequence result page (precomputed segments).</title>
                  <p>Results are visualized after submitting the example input to the web server. In this case, only the oligomerization state was predicted, and the precomputed segments are visualized with an associated probability equal to 100%. The functionalities of the web server are the same as detailed in Figure 2.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g003" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Download results with the buttons at the top of the page.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>If you select the tab-separated format (TSV), the generated file will contain a line for each residue (plus the header) organized in 14 columns, containing information about:</p>
                <p>i. <italic toggle="yes">ID</italic>: ID of the protein.</p>
                <p>ii. <italic toggle="yes">RES</italic>: Residue type.</p>
                <p>iii. <italic toggle="yes">CC_CLASS</italic>: Predicted coiled-coil class. The coiled-coil class is <italic toggle="yes">i</italic> if the residue does not belong to a coiled-coil segment; otherwise, it is a letter from <italic toggle="yes">a</italic> to <italic toggle="yes">g</italic> that indicates the predicted register.</p>
                <p>iv. <italic toggle="yes">OligoState</italic>: Predicted oligomerization state (<italic toggle="yes">P, A, 3</italic>, or <italic toggle="yes">4</italic> for parallel dimer, antiparallel dimer, trimer, or tetramer, respectively).</p>
                <p>v. <italic toggle="yes">Pi, Pa-Pg, PH</italic>: nine columns for the computed probabilities for each possible coiled-coil class (the higher probability will determine the content of the third column).</p>
                <p>vi. <italic toggle="yes">pOligo</italic>: Computed probability of the predicted oligomerization state reported in point iv (the higher the probability, the higher the confidence of the model).</p>
              </list-item>
              <list-item>
                <p>If you select the JSON format, the generated file will contain one entry with 10 fields:</p>
                <p>i. <italic toggle="yes">accession</italic>: ID of the protein.</p>
                <p>ii. <italic toggle="yes">res</italic>: FASTA sequence.</p>
                <p>iii. <italic toggle="yes">labels</italic>: Sequence of predicted coiled-coil classes (see step A9a.iii).</p>
                <p>iv. <italic toggle="yes">prob</italic>: List of probabilities assigned by the predictor to the most likely coiled-coil class for each residue.</p>
                <p>v. <italic toggle="yes">oligo</italic>: Sequence of predicted oligomerization classes (see step A9a.iv).</p>
                <p>vi. <italic toggle="yes">prob_oligo</italic>: List of probabilities assigned by the predictor to the most likely oligomerization class for each residue.</p>
                <p>vii. <italic toggle="yes">segments</italic>: List with one item for each predicted segment reporting summary information about it.</p>
                <p>viii. <italic toggle="yes">length</italic>: Length of the protein.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>A typical computation for a single sequence prediction will require approximately 90 s (1.5 min).</p>
          </list-item>
          <list-item>
            <p>For further help and details, please reference the <italic toggle="yes">Help</italic> page of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/help/" ext-link-type="uri">https://coconat.biocomp.unibo.it/help/</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
      <list-item>
        <p>
          <bold>Online batch prediction</bold>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare your sequences in FASTA format.</p>
          </list-item>
          <list-item>
            <p>Open the Homepage of the web server and go to the tab <italic toggle="yes">batch submission</italic> (<ext-link xlink:href="https://coconat.biocomp.unibo.it/batch/" ext-link-type="uri">https://coconat.biocomp.unibo.it/batch/</ext-link>).</p>
          </list-item>
          <list-item>
            <p>Upload the FASTA file.</p>
          </list-item>
          <list-item>
            <p>(<bold>Optional</bold>) Provide an email address. When results are ready, the link to access them will be sent to you.</p>
          </list-item>
          <list-item>
            <p>The web server will validate the format of your input. If the limitations are too strict for your target sequences, we suggest following Procedure C and running CoCoNat locally.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Valid FASTA format.</p>
              </list-item>
              <list-item>
                <p>No more than 500 sequences.</p>
              </list-item>
              <list-item>
                <p>All sequences with length between 40 and 700 residues and total number of residues not greater than 80,000.</p>
              </list-item>
              <list-item>
                <p>Each sequence contains only 20 standard amino acids, 3 non-standard residues (UZB), or undetermined character (X).</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>Press <italic toggle="yes">Submit</italic>.</p>
          </list-item>
          <list-item>
            <p>Bookmark the page that loads upon job submission. This page will be updated with the results as soon as they are ready. If you have provided an email address, you will receive the link to this page via email once the results are ready.</p>
          </list-item>
          <list-item>
            <p>Download results with the buttons at the top of the page.</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>See Procedure A, step 9a for a description of the TSV format.</p>
              </list-item>
              <list-item>
                <p>See Procedure A, step 9b for a description of the JSON format. Mind that, in this case, the JSON file will contain one entry for each sequence in the input file.</p>
              </list-item>
            </list>
          </list-item>
          <list-item>
            <p>The time needed for computing the outputs will depend on the number and length of the input sequences. A job containing 100 sequences with lengths between 100 and 200 residues should take approximately 330 s (5.5 min).</p>
          </list-item>
          <list-item>
            <p>For further help and details please reference the <italic toggle="yes">Help</italic> page of the web server (<ext-link xlink:href="https://coconat.biocomp.unibo.it/help/" ext-link-type="uri">https://coconat.biocomp.unibo.it/help/</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
      <list-item>
        <p>
          <bold>Local prediction</bold>
        </p>
        <p>
          <italic toggle="yes">Note: All lines of code reported in this section are meant to be executed inside a terminal.</italic>
        </p>
        <list list-type="order">
          <list-item>
            <p>Prepare the environment (see <xref rid="BioProtoc-14-4-4935-g004" ref-type="fig">Figure 4</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Create a <italic toggle="yes">conda</italic> environment with Python 3.</p>
                <p>conda create -n coconat python</p>
                <p>conda activate coconat</p>
              </list-item>
              <list-item>
                <p>Install dependencies using <italic toggle="yes">pip</italic>.</p>
                <p>pip install docker absl-py</p>
              </list-item>
              <list-item>
                <p>Clone locally the GitHub repository in your current working directory; then, cd (change directory) to the newly created package directory.</p>
                <p>git clone https://github.com/BolognaBiocomp/coconat</p>
                <p>cd coconat</p>
              </list-item>
              <list-item>
                <p>Build the Docker image.</p>
                <p>docker build -t coconat:1.0.</p>
              </list-item>
              <list-item>
                <p>Download the required PLMs (e.g., in the <italic toggle="yes">Home</italic> directory).</p>
                <p>cd</p>
                <p>wget https://coconat.biocomp.unibo.it/static/data/coconat-plms.tar.gz</p>
                <p>tar xvzf coconat-plms.tar.gz</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g004">
                <label>Figure 4.</label>
                <caption>
                  <title>Configuration of local installation.</title>
                  <p>The screenshot displays the content of the CoCoNat folder after downloading the GitHub repository in a local folder. The word “coconat” between parenthesis at the beginning of the prompt (in white) appears only if the conda environment is properly set up.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g004" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>Run CoCoNat (see <xref rid="BioProtoc-14-4-4935-g005" ref-type="fig">Figure 5</xref>).</p>
            <list list-type="alpha-lower">
              <list-item>
                <p>Prepare your sequences in FASTA format. Input requirements are the same as the online predictions but without limits on the number and length of the sequences. Please remember that the maximal number of sequences and the maximal length of each sequence that the model will be able to process together will depend on the specifics of your machine.</p>
              </list-item>
              <list-item>
                <p>Run the <italic toggle="yes">run_coconat_abinitio_docker.py</italic> script, providing paths to the input FASTA file, the output TSV file, and the models downloaded at step C1e.</p>
                <p>cd coconat</p>
                <p>python run_coconat_abinitio_docker.py \</p>
                <p>--fasta_file=example-data/example.fasta \</p>
                <p>--output_file=example-data/example.tsv --plm_dir=${HOME}/coconat-plms</p>
              </list-item>
              <list-item>
                <p>(<bold>Optional</bold>) Run instead the <italic toggle="yes">run_coconat_state_docker.py</italic> script, providing an additional input file, to run predictions with precomputed coiled-coil segments. The input segment file must be a TSV containing a row for each precomputed segment and four columns:</p>
                <p>i. ID of the protein containing the segment.</p>
                <p>ii. Segment start.</p>
                <p>iii. Segment end.</p>
                <p>iv. Registers sequence of the segment.</p>
                <p>cd coconat</p>
                <p>python run_coconat_state_docker.py \</p>
                <p>--fasta_file=example-data/example.fasta \</p>
                <p>--seg_file=example-data/example-seg.tsv</p>
                <p>--output_file=example-data/example.tsv --plm_dir=${HOME}/coconat-plms</p>
                <p>See step A9a for a description of the output file generated by the program.</p>
              </list-item>
            </list>
            <p>
              <fig position="float" id="BioProtoc-14-4-4935-g005">
                <label>Figure 5.</label>
                <caption>
                  <title>Local execution.</title>
                  <p>The screenshot displays the execution of an example contained in the GitHub repository. At the top, the content of the input files is displayed, including a FASTA file and a segment file. The third command is the execution of the CoCoNat script, followed by the expected messages given during a normal execution. Finally, the last command shows the first 10 lines of the output file in tab-separated format. The meaning of each column is detailed in step A9a.</p>
                </caption>
                <graphic xlink:href="BioProtoc-14-4-4935-g005" position="float"/>
              </fig>
            </p>
          </list-item>
          <list-item>
            <p>For further help and details please reference the README provided in the GitHub repository (<ext-link xlink:href="https://github.com/BolognaBiocomp/coconat" ext-link-type="uri">https://github.com/BolognaBiocomp/coconat</ext-link>).</p>
          </list-item>
        </list>
      </list-item>
    </list>
  </sec>
  <sec id="s6">
    <title>Validation of protocol</title>
    <p>This protocol or parts of it has been used and validated in the following research article(s):</p>
    <list list-type="bullet">
      <list-item>
        <p>Madeo et al. (2023). CoCoNat: a novel method based on deep learning for coiled-coil prediction. Bioinformatics (Tables 3, 4, 5).</p>
      </list-item>
    </list>
  </sec>
</body>
<back>
  <ack>
    <p>The work was supported by the European Union—NextGenerationEU through the Italian Ministry of University and Research under the projects “Consolidation of the Italian Infrastructure for Omics Data and Bioinformatics” (ElixirxNextGenIT)” (Investment PNRR-M4C2-I3.1, Project IR_0000010, CUP B53C22001800006) and "HEAL ITALIA" (Investment PNRR-M4C2-I1.3, Project PE_00000019, CUP J33C22002920006).</p>
    <p>This protocol describes the method presented in Madeo et al. (2023).</p>
  </ack>
  <fn-group>
    <title>Citation</title>
    <fn id="fn1" fn-type="other" specific-use="citation-format">
      <p>Readers should cite both the Bio-protocol article and <related-article related-article-type="article-reference" ext-link-type="doi" id="BioProtoc-14-4-4935-ra1" xlink:href="10.1093/bioinformatics/btad495">the original research article</related-article> where this protocol was used.</p>
    </fn>
  </fn-group>
  <fn-group>
    <title>Q&amp;A</title>
    <fn id="fn2" fn-type="other" specific-use="citation-format">
      <p>Post your question about this protocol in <ext-link xlink:href="https://bio-protocol.org/e4935?source=PMC#bbs" ext-link-type="uri">Q&amp;A</ext-link> and get help from the authors of the protocol and some of its users.</p>
    </fn>
  </fn-group>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p>There are no conflicts of interest or competing interests.</p>
  </notes>
  <ref-list>
    <title>References</title>
    <ref id="r1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Crick</surname><given-names>F. H. C.</given-names></name></person-group>(<year>1952</year>). <article-title>Is α-Keratin a Coiled Coil</article-title>? <source>Nature</source><volume>170</volume>(<issue>4334</issue>): <fpage>882</fpage><lpage>883</lpage><lpage>883</lpage>. doi: <pub-id pub-id-type="doi">10.1038/170882b0</pub-id></mixed-citation>
    </ref>
    <ref id="r2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Truebestein</surname><given-names>L.</given-names></name> and <name><surname>Leonard</surname><given-names>T. A.</given-names></name>
</person-group>(<year>2016</year>). <article-title>Coiled-coils: The long and short of it</article-title>. <source>Bioessays</source><volume>38</volume>(<issue>9</issue>): <fpage>903</fpage><lpage>916</lpage><lpage>916</lpage>.
doi: <pub-id pub-id-type="doi">10.1002/bies.201600062</pub-id><pub-id pub-id-type="pmid">27492088</pub-id></mixed-citation>
    </ref>
    <ref id="r3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Walshaw</surname><given-names>J.</given-names></name> and <name><surname>Woolfson</surname><given-names>D. N.</given-names></name>
</person-group>(<year>2001</year>). <article-title>Socket: a program for identifying and analysing coiled-coil motifs within protein structures</article-title>. <source>J. Mol. Biol</source>. <volume>307</volume>(<issue>5</issue>): <fpage>1427</fpage><lpage>1450</lpage><lpage>1450</lpage>. 
doi:<pub-id pub-id-type="doi">10.1006/jmbi.2001.4545</pub-id><pub-id pub-id-type="pmid">11292353</pub-id></mixed-citation>
    </ref>
    <ref id="r4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Szczepaniak</surname><given-names>K.</given-names></name>, <name><surname>Bukala</surname><given-names>A.</given-names></name>, <name><surname>da Silva Neto</surname><given-names>A. M.</given-names></name>, <name><surname>Ludwiczak</surname><given-names>J.</given-names></name> and <name><surname>Dunin-Horkawicz</surname><given-names>S.</given-names></name>
</person-group>(<year>2021</year>). <article-title>A library of coiled-coil domains: from regular bundles to peculiar twists</article-title>. <source>Bioinformatics</source><comment>36(22–23): 5368–5376. </comment>
doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa1041</pub-id>
</mixed-citation>
    </ref>
    <ref id="r5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Madeo</surname><given-names>G.</given-names></name>, <name><surname>Savojardo</surname><given-names>C.</given-names></name>, <name><surname>Manfredi</surname><given-names>M.</given-names></name>, <name><surname>Martelli</surname><given-names>P. L.</given-names></name> and <name><surname>Casadio</surname><given-names>R.</given-names></name>
</person-group>(<year>2023</year>). <article-title>CoCoNat: a novel method based on deep learning for coiled-coil prediction</article-title>. <source>Bioinformatics</source><comment>39(8). </comment>
doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btad495</pub-id>
</mixed-citation>
    </ref>
    <ref id="r6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Elnaggar</surname><given-names>A.</given-names></name>, <name><surname>Heinzinger</surname><given-names>M.</given-names></name>, <name><surname>Dallago</surname><given-names>C.</given-names></name>, <name><surname>Rihawi</surname><given-names>G.</given-names></name>, <name><surname>Wang</surname><given-names>Y.</given-names></name>, <name><surname>Jones</surname><given-names>L.</given-names></name>, <name><surname>Gibbs</surname><given-names>T.</given-names></name>, <name><surname>Feher</surname><given-names>T.</given-names></name>, <name><surname>Angerer</surname><given-names>C.</given-names></name>, <name><surname>Steinegger</surname><given-names>M.</given-names></name>, <etal/></person-group>.(<year>2020</year>). <article-title>ProtTrans: Towards Cracking the Language of Life’s Code Through Self-Supervised Deep Learning and High Performance Computing</article-title>. <source>arXiv</source>. <comment>Retrieved from http://arxiv.org/abs/2007.06225</comment></mixed-citation>
    </ref>
    <ref id="r7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lin</surname><given-names>Z.</given-names></name>, <name><surname>Akin</surname><given-names>H.</given-names></name>, <name><surname>Rao</surname><given-names>R.</given-names></name>, <name><surname>Hie</surname><given-names>B.</given-names></name>, <name><surname>Zhu</surname><given-names>Z.</given-names></name>, <name><surname>Lu</surname><given-names>W.</given-names></name>, <name><surname>Smetanin</surname><given-names>N.</given-names></name>, <name><surname>Verkuil</surname><given-names>R.</given-names></name>, <name><surname>Kabeli</surname><given-names>O.</given-names></name>, <name><surname>Shmueli</surname><given-names>Y.</given-names></name>, <etal/></person-group>.(<year>2022</year>). <article-title>Evolutionary-scale prediction of atomic level protein structure with a language model</article-title>. <source>bioRxiv</source> doi: <pub-id pub-id-type="doi">10.1101/2022.07.20.500902</pub-id>
</mixed-citation>
    </ref>
    <ref id="r8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Feng</surname><given-names>S.-H.</given-names></name>, <name><surname>Xia</surname><given-names>C.-Q.</given-names></name> and <name><surname>Shen</surname><given-names>H.-B.</given-names></name>
</person-group>(<year>2022</year>). <article-title>CoCoPRED: coiled-coil protein structural feature prediction from amino acid sequence using deep neural networks</article-title>. <source>Bioinformatics</source><volume>38</volume>(<issue>3</issue>): <fpage>720</fpage><lpage>729</lpage><lpage>729</lpage>. doi: <pub-id pub-id-type="doi">10.1093/bioinformatics/btab744</pub-id><pub-id pub-id-type="pmid">34718416</pub-id></mixed-citation>
    </ref>
    <ref id="r9">
      <label>9</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tan</surname><given-names>T.</given-names></name>, <name><surname>Tong</surname><given-names>J.</given-names></name>, <name><surname>Khan</surname><given-names>A. M.</given-names></name>, <name><surname>de Silva</surname><given-names>M.</given-names></name>, <name><surname>Lim</surname><given-names>K.</given-names></name> and <name><surname>Ranganathan</surname><given-names>S.</given-names></name>
</person-group>(<year>2010</year>). <article-title>Advancing standards for bioinformatics activities: persistence, reproducibility, disambiguation and Minimum Information About a Bioinformatics investigation(MIABi)</article-title>. <source>BMC Genomics</source><comment>11: S27. </comment>
doi: <pub-id pub-id-type="doi">10.1186/1471-2164-11-s4-s27</pub-id>
</mixed-citation>
    </ref>
  </ref-list>
  <sec id="s7">
    <title>Supplementary information</title>
    <p>The following supporting information can be downloaded <ext-link xlink:href="https://cdn.bio-protocol.org/journal/static/2305206_File%20S1.docx?v=181" ext-link-type="uri">here</ext-link>:</p>
    <list list-type="order">
      <list-item>
        <p>File S1.</p>
      </list-item>
    </list>
  </sec>
</back>

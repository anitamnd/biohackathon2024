<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10990682</article-id>
    <article-id pub-id-type="pmid">38532295</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btae153</article-id>
    <article-id pub-id-type="publisher-id">btae153</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyCoMo: a python package for community metabolic model creation and analysis</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3556-4661</contrib-id>
        <name>
          <surname>Predl</surname>
          <given-names>Michael</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0009-0000-4305-5392</contrib-id>
        <name>
          <surname>Mießkes</surname>
          <given-names>Marianne</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0592-7791</contrib-id>
        <name>
          <surname>Rattei</surname>
          <given-names>Thomas</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--thomas.rattei@univie.ac.at-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1964-2455</contrib-id>
        <name>
          <surname>Zanghellini</surname>
          <given-names>Jürgen</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--juergen.zanghellini@univie.ac.at-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btae153-cor1">Corresponding authors. Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna, Djerassiplatz 1, 1030 Vienna, Austria. E-mail: <email>thomas.rattei@univie.ac.at</email> (T.R.); Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna, Sensengasse 8, 1090 Vienna, Austria. E-mail: <email>juergen.zanghellini@univie.ac.at</email> (J.Z.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-03-26">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <volume>40</volume>
    <issue>4</issue>
    <elocation-id>btae153</elocation-id>
    <history>
      <date date-type="received">
        <day>09</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>29</day>
        <month>2</month>
        <year>2024</year>
      </date>
      <date date-type="corrected-typeset">
        <day>03</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btae153.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>PyCoMo is a python package for quick and easy generation of genome-scale compartmentalized community metabolic models that are compliant with current openCOBRA file formats. The resulting models can be used to predict (i) the maximum growth rate at a given abundance profile, (ii) the feasible community compositions at a given growth rate, and (iii) all exchange metabolites and cross-feeding interactions in a community metabolic model independent of the abundance profile; we demonstrate PyCoMo’s capability by analysing methane production in a previously published simplified biogas community metabolic model.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>PyCoMo is freely available under an MIT licence at <ext-link xlink:href="http://github.com/univieCUBE/PyCoMo" ext-link-type="uri">http://github.com/univieCUBE/PyCoMo</ext-link>, the Python Package Index, and Zenodo.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>FWF</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002428</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Cross-feeding interactions are crucial for community formation and function. Predicting these interactions is an open challenge, with much development in the field of metabolic modelling (<xref rid="btae153-B4" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2021</xref>). It has expanded in the direction of microbial communities, with research being done on simple, cultured communities up to personalized models of the human gut microbiome (<xref rid="btae153-B2" ref-type="bibr">Diener <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btae153-B6" ref-type="bibr">Ibrahim <italic toggle="yes">et al.</italic> 2021</xref>, <xref rid="btae153-B15" ref-type="bibr">Saa <italic toggle="yes">et al.</italic> 2022</xref>).</p>
    <p>Metabolic modelling on the level of communities allows investigating questions that can only be stated in the context of communities, such as which interactions can occur within them. Different approaches have been developed to model communities of metabolic models: individual modelling of the members with iterative cross-talk via metabolite availability, lumped models representing the collective enzymatic capabilities of a community without cellular borders, and compartmentalized metabolic models, which place each member model in a separate compartment and add a shared exchange compartment for interaction (<xref rid="btae153-B14" ref-type="bibr">Perez-Garcia <italic toggle="yes">et al.</italic> 2016</xref>). While resulting in the largest and most complex models, the compartmentalized approach allows direct modelling of inter-species interactions such as cross-feeding.</p>
    <p>The creation of compartmentalized community metabolic models includes many technical obstacles, such as matching the namespace of exchange metabolites, creating a community biomass function and preserving the attribution of metabolites and reactions to the community members within the model. All these tasks can be automated when all necessary information is present, as shown in Commmodelpy by <xref rid="btae153-B1" ref-type="bibr">Bekiaris and Klamt (2021)</xref>. Yet, the models generated by the current version (0.0.3) of Commmodelpy face several issues that hinder their reusability for further analyses and curation: the information which member a gene or compartment belongs to is not automatically retained, the flux bounds are changed due to normalization, and the abundance composition cannot be changed without rerunning the merging procedure.</p>
    <p>While standard formats for single organism metabolic models like SBML (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) have emerged and been widely adopted, no standard format for community metabolic models has been established yet. This not only poses a challenge for the compatibility and reuse of community metabolic models, but can also lead to a loss of information in the community model representation, as is the case for Commmodelpy. Apart from retaining information, the abundances of community members and any changes to the original flux bounds need to be documented as well for the model to be reusable.</p>
    <p>Here, we present PyCoMo, a python package for automated generation of compartmentalized community metabolic models. The generated models are suited for reuse and continuous improvement, as all information of the single organisms, as well as all community information, is stored in a format complying to existing standards. PyCoMo allows the quick calculation of the set of potential metabolite exchanges and resulting interactions across the entire community composition space, with a single flux variability analysis (FVA) run. We show an example of these functionalities by replicating the analysis of a previously published three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>).</p>
  </sec>
  <sec>
    <title>2 Description</title>
    <p>PyCoMo is implemented in Python 3 and utilizes COBRApy (<xref rid="btae153-B3" ref-type="bibr">Ebrahim <italic toggle="yes">et al.</italic> 2013</xref>) for model input and output, as well as for fundamental structure and analysis methods. Three types of functionality for community metabolic modelling are implemented: (i) the preparation of the single organism models before merging into a community metabolic model, (ii) the generation of the community metabolic model in a structured format, and (iii) the contextualization and analysis of the community metabolic model (<xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>). The resulting community model can then be used to predict the maximal community growth rate (at a given composition) or all feasible community compositions (at a given community growth rate).</p>
    <fig position="float" id="btae153-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Summary of PyCoMo. (A) Overview of the automated steps in compartmentalized community metabolic model creation and the available analysis. All components of the final model can be traced back to their community member of origin. The community metabolic models can be saved and loaded into SBML format while retaining the original flux bounds, making the models reusable. Mass and charge balance of the entire model is checked, including all external metabolites matched between community members. The community metabolic model structure can be set to fixed growth or fixed abundance. All functionalities are available via a command-line interface. (B) Feasible compositions at different community growth rates in a three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). DV, <italic toggle="yes">Desulfovibrio vulgaris</italic>; MH, <italic toggle="yes">Methanospirillum hungatei</italic>; MB, <italic toggle="yes">Methanosarcina barkeri</italic>. The medium is specified to contain ethanol and CO<sub>2</sub>, with ethanol being the substrate for <italic toggle="yes">Desulfovibrio vulgaris</italic>, which produces the substrates for the other community members. (C) Visualization of the community metabolic model and its cross-feeding interactions using ScyNet. The metabolite exchanges were calculated independently of the community composition and growth rate. Arrow colours denote feasible metabolite production (orange), uptake (green) or both (violet) by the communities’ members.</p>
      </caption>
      <graphic xlink:href="btae153f1" position="float"/>
    </fig>
    <p>The input for PyCoMo are the metabolic models of the community members, in any of the file formats supported by COBRApy (SBML, MATLAB, JSON, and YAML). The imported member models are prepared for merging, by prefixing all individual organism objects’ (i.e. gene products, species, reactions, etc.) IDs with the name of the member they belong to. Further, a separate “medium compartment” is added, which will allow metabolite exchange between organisms as well as the environment. Existing boundary reactions are converted into (internal) reactions transporting metabolites from the organisms’ compartments to the medium compartment, and new boundary reactions are set for the medium compartment. Additionally, consistency checks and corrections for compliance with the SBML format (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) are performed.</p>
    <p>Boundary metabolites of all members need to be matched in the medium compartment. PyCoMo resolves the matching either by ID, or by annotation. When matching by name, all metabolites with the same SBML ID are matched. Matching by annotation utilizes the information of database cross-referencing in the metabolite annotations. Such annotations are available to varying extent in all automatically generated metabolic models. The user can select a database to match all metabolites in the medium compartment with a reference to the same metabolite in the specified database. To avoid inconsistent matches, this process will only be followed through if all boundary metabolites map uniquely to the annotation database, otherwise PyCoMo stops and informs the user to use a different database or match the metabolites via names.</p>
    <p>In a second step a community metabolic model object is created, using the prepared models as input. Here, all components of the models are merged. Metabolites, reactions, compartments and genes remain affiliated to their origin, due to the name change in the preparation.</p>
    <p>Solving a community metabolic model leads to a nonlinear problem by default, due to the bilinear dependence of the community growth rate on the community abundance profile, and the growth rate of the individual members (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). To linearize the model, one can either hold the growth rate or the community member fraction constant by constraining the corresponding reactions (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>).</p>
    <p>Typically, the fluxes in metabolic models are normalized to the (dry) mass of the system. In the context of microbial communities, this system mass represents the total dry mass of the community. Consequently, when consolidating multiple models, all cell-specific fluxes, including their corresponding bounds, need to be re-scaled to match the total community mass. This can be efficiently achieved by multiplying the cell-specific fluxes (alongside their bounds) by the mass fraction of the specific member in the community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). However, when dealing with variable abundance profiles, flux bounds become dynamic, a characteristic not accommodated by the current SBML standard (level 3, Flux Balance Constraints Version 2 Release 2) (<xref rid="btae153-B13" ref-type="bibr">Olivier and Bergmann 2018</xref>). To address this, we convert each genome-scale metabolic model into an equivalent bound-free form, where flux bounds are represented as stoichiometric coefficients for newly introduced dummy metabolites. These metabolites are both produced and consumed by additional reactions, with their fluxes corresponding to the respective member’s mass fraction within the community (refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> for details). This approach aligns with current standards, ensuring seamless interchangeability among various openCOBRA tools.</p>
    <p>The result of the merging and these additional steps is always a COBRApy model object, allowing the large environment of methods available to be utilized. On top of the COBRApy analysis methods, PyCoMo includes the functionality to calculate cross-feeding interactions in the community metabolic model. As community metabolic models have the additional parameter of community composition, typical steady-state, constraint-based modelling either only represents a single state of the community, or is computationally intensive, as it needs to account for the whole space of abundance combinations. By setting the model structure to variable community composition, but also removing the constraint of equal growth rate among the community members, FVA of the members’ exchange reactions calculates the possible ranges of all metabolite exchanges and cross-feeding interactions. The resulting flux ranges may include cross-feeding interactions not feasible under balanced (community) growth if the production of metabolites is coupled to biomass production.</p>
    <p>Community metabolic models generated by PyCoMo can easily be exported and transferred, as all the included export functionalities of COBRApy can be applied, and SBML format requirements are checked. PyCoMo was tested to work with input models of different origins [AGORA (<xref rid="btae153-B5" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2023</xref>), BIGG (<xref rid="btae153-B9" ref-type="bibr">King <italic toggle="yes">et al.</italic> 2016</xref>), CarveMe (<xref rid="btae153-B12" ref-type="bibr">Machado <italic toggle="yes">et al.</italic> 2018</xref>), PathwayTools (<xref rid="btae153-B7" ref-type="bibr">Karp <italic toggle="yes">et al.</italic> 2021</xref>), gapseq (<xref rid="btae153-B16" ref-type="bibr">Zimmermann <italic toggle="yes">et al.</italic> 2021</xref>)], although any model that can be imported using COBRApy will work. Further, community metabolic models generated by PyCoMo can be easily visualized using ScyNet (<ext-link xlink:href="https://www.github.com/univieCUBE/ScyNet" ext-link-type="uri">github.com/univieCUBE/ScyNet</ext-link>, manuscript submitted; see <xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>), as all format requirements are fulfilled.</p>
    <p>PyCoMo contains a command line interface, allowing to directly generate community metabolic models, reading all member models from file and writing the resulting community metabolic model to file. All functionalities described above are available within the command line interface and thus facilitate an easy integration into existing workflows.</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>As an example of a possible workflow, we have analysed a simplified biogas community of three species, aiming to construct a community metabolic model and compare all potential cross-feeding interactions to literature knowledge (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). The community consists of <italic toggle="yes">Desulfovibrio vulgaris</italic>, <italic toggle="yes">Methanospirillum hungatei</italic> and <italic toggle="yes">Methanosarcina barkeri</italic>, each representing a functional guild in the metabolic model. The members of the community are known to be actively cross-feeding, producing methane from ethanol or lactate, via the intermediary metabolites acetate, formate, H<sub>2</sub> and CO<sub>2</sub> (<xref rid="btae153-B10" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2016</xref>). The models of the species members have been previously generated by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>.</p>
    <p>A community metabolic model is generated with PyCoMo following the workflow depicted in <xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>. The input models are loaded from SBML files and the exchange metabolites are matched via identical IDs. The medium is set to contain ethanol and CO<sub>2</sub>, as specified by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. The potential exchange metabolites and cross-feeding interactions were calculated. The result (<xref rid="btae153-F1" ref-type="fig">Fig. 1B</xref>) shows that cross-feeding can occur via acetate, H<sub>2</sub>, CO<sub>2</sub>, and formate. For a clear representation of the interaction structure in the community, the community metabolic model and its cross-feeding interactions is visualized with ScyNet (<xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>).</p>
    <p>FVA of the generated community model shows that <italic toggle="yes">D.vulgaris</italic> can provide acetate and hydrogen to <italic toggle="yes">M.barkeri</italic>. These metabolites are known substrates for two different pathways for methanogenesis in <italic toggle="yes">M.barkeri</italic>, the acetoclastic pathway and the hydrogenotrophic pathway. Similarly, <italic toggle="yes">D.vulgaris</italic> can provide formate and hydrogen for <italic toggle="yes">M.hungatei</italic>, which are all processed via the hydrogenotrophic pathway.</p>
    <p>The community metabolic model would also allow <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> and CO<sub>2</sub>. This uptake was not found in the analysis by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. While it is known that <italic toggle="yes">D.vulgaris</italic> can grow on acetate and hydrogen with sulphate as an electron acceptor, sulphate is not part of the growth medium, neither is acetate. PyCoMo could detect a thermodynamically infeasible cycle as the reason, allowing <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 3</xref>). In this cycle, <italic toggle="yes">D.vulgaris</italic> produces formate from H<sub>2</sub> and CO<sub>2</sub>. Subsequently, <italic toggle="yes">M.hungatei</italic> converts the formate back into H<sub>2</sub> and CO<sub>2</sub>, without the need for any other metabolites.</p>
    <p>The performance of PyCoMo was tested using communities of different sizes (5–40 members). Genome-scale metabolic models from the AGORA collection were used as input models. Three tasks were timed on a system with 16 GB RAM and an AMD Ryzen 7 5700G using only a single core: the construction of the community metabolic model, flux balance analysis (FBA) at equal community member abundance, and the calculation of all potential exchange metabolites. The runtime scales approximately linear with community size for the construction of the community metabolic model and FBA, while the runtime of the calculation of all potential exchange metabolites scales quadratic, with a runtime of 11.3, 2.3, and 31.5 min respectively, at a community size of 40 members (average over three repetitions, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 5</xref>).</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>PyCoMo simplifies the generation and analysis of community metabolic models. This allows quickly addressing questions of which metabolites might be consumed, produced or exchanged in a community of interest, harnessing the knowledge base aspect of metabolic models on a community level. PyCoMo manages the construction of community models within a matter of seconds to minutes, yet the limitations of steady-state metabolic modelling methods apply. This means that simple optimization techniques like FBA will be feasible for larger communities, while the runtime for flux range and sampling approaches like FVA grows faster and can only be applied to smaller communities. Still, PyCoMo can find all exchange metabolites and cross-feeding interactions via FVA in a matter of 3 min for a 10-member community using genome-scale metabolic models.</p>
    <p>Assembling community metabolic models with PyCoMo is reproducible and the resulting metabolic models can easily be used for further analysis with other metabolic modelling methods, including objectives other than biomass and objective free methods. All current openCOBRA file formats are supported for model input and export, with strict adherence to the SBML format. PyCoMo even facilitates (manual) curation on the level of communities by creating community metabolic models that fully preserve all available annotation and documentation in an interoperable, reusable manner adaptable to the necessary structures for different linearization approaches.</p>
    <p>Finally, due to its command-line interface, PyCoMo can be easily integrated into (existing) genome analysis and phenotyping pipelines.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btae153_Supplementary_Data</label>
      <media xlink:href="btae153_supplementary_data.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by FWF doc.funds project DOC 69 “Microbial symbioses in dynamic environments: Metabolic interplay and novel interactions (MAINTAIN)” to M.P.; and the Austrian Climate and Energy Fund carried out under the program “Vorzeigeregion Energie” [project number: 887638 to M.M.].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article are available in this article and its supplementary material, and at <ext-link xlink:href="https://pypi.org/project/pycomo/" ext-link-type="uri">https://pypi.org/project/pycomo/</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btae153-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bekiaris</surname><given-names>PS</given-names></string-name>, <string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group><article-title>Designing microbial communities to maximize the thermodynamic driving force for the production of chemicals</article-title>. <source>PLoS Comput Biol</source><year>2021</year>;<volume>17</volume>:<fpage>e1009093</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1009093</pub-id>.<pub-id pub-id-type="pmid">34129600</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Diener</surname><given-names>C</given-names></string-name>, <string-name><surname>Gibbons</surname><given-names>SM</given-names></string-name>, <string-name><surname>Resendis-Antonio</surname><given-names>O.</given-names></string-name></person-group><article-title>MICOM: metagenome-scale modeling to infer metabolic interactions in the gut microbiota</article-title>. <source>mSystems</source><year>2020</year>;<volume>5</volume>:<fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1128/msystems.00606-19</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ebrahim</surname><given-names>A</given-names></string-name>, <string-name><surname>Lerman</surname><given-names>JA</given-names></string-name>, <string-name><surname>Palsson</surname><given-names>BO</given-names></string-name></person-group><etal>et al</etal><article-title>COBRApy: COnstraints-Based Reconstruction and Analysis for Python</article-title>. <source>BMC Syst Biol</source><year>2013</year>;<volume>7</volume>:<fpage>74</fpage>. <pub-id pub-id-type="doi">10.1186/1752-0509-7-74</pub-id>.<pub-id pub-id-type="pmid">23927696</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Basile</surname><given-names>A</given-names></string-name>, <string-name><surname>Thiele</surname><given-names>I.</given-names></string-name></person-group><article-title>Advances in constraint-based modelling of microbial communities</article-title>. <source>Curr Opin Syst Biol</source><year>2021</year>;<volume>27</volume>:<fpage>100346</fpage>. <pub-id pub-id-type="doi">10.1016/j.coisb.2021.05.007</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Hertel</surname><given-names>J</given-names></string-name>, <string-name><surname>Acharya</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-scale metabolic reconstruction of 7,302 human microorganisms for personalized medicine</article-title>. <source>Nat Biotechnol</source><year>2023</year>;<volume>41</volume>:<fpage>1320</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1038/s41587-022-01628-0</pub-id>.<pub-id pub-id-type="pmid">36658342</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ibrahim</surname><given-names>M</given-names></string-name>, <string-name><surname>Raajaraam</surname><given-names>L</given-names></string-name>, <string-name><surname>Raman</surname><given-names>K.</given-names></string-name></person-group><article-title>Modelling microbial communities: harnessing consortia for biotechnological applications</article-title>. <source>Comput Struct Biotechnol J</source><year>2021</year>;<volume>19</volume>:<fpage>3892</fpage>–<lpage>907</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.06.048</pub-id>.<pub-id pub-id-type="pmid">34584635</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Karp</surname><given-names>PD</given-names></string-name>, <string-name><surname>Midford</surname><given-names>PE</given-names></string-name>, <string-name><surname>Billington</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Pathway tools version 23.0 update: software for pathway/genome informatics and systems biology</article-title>. <source>Brief Bioinform</source><year>2021</year>;<volume>22</volume>:<fpage>109</fpage>–<lpage>26</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbz104</pub-id>.<pub-id pub-id-type="pmid">31813964</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keating</surname><given-names>SM</given-names></string-name>, <string-name><surname>Waltemath</surname><given-names>D</given-names></string-name>, <string-name><surname>König</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal>; <collab>SBML Level 3 Community Members</collab>. <article-title>SBML level 3: an extensible format for the exchange and reuse of biological models</article-title>. <source>Mol Syst Biol</source><year>2020</year>;<volume>16</volume>:<fpage>e9110</fpage>. <pub-id pub-id-type="doi">10.15252/msb.20199110</pub-id>.<pub-id pub-id-type="pmid">32845085</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>King</surname><given-names>ZA</given-names></string-name>, <string-name><surname>Lu</surname><given-names>J</given-names></string-name>, <string-name><surname>Dräger</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>. <source>Nucleic Acids Res</source><year>2016</year>;<volume>44</volume>:<fpage>D515</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>.<pub-id pub-id-type="pmid">26476456</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Benndorf</surname><given-names>D</given-names></string-name>, <string-name><surname>Fronk</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Predicting compositions of microbial communities from stoichiometric models with applications for the biogas process</article-title>. <source>Biotechnol Biofuels</source><year>2016</year>;<volume>9</volume>:<fpage>17</fpage>–<lpage>6</lpage>. <pub-id pub-id-type="doi">10.1186/s13068-016-0429-x</pub-id>.<pub-id pub-id-type="pmid">26807149</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Kohrs</surname><given-names>F</given-names></string-name>, <string-name><surname>Lahmann</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>RedCom: a strategy for reduced metabolic modeling of complex microbial communities and its application for analyzing experimental datasets from anaerobic digestion</article-title>. <source>PLoS Comput Biol</source><year>2019</year>;<volume>15</volume>:<fpage>e1006759</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006759</pub-id>.<pub-id pub-id-type="pmid">30707687</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Machado</surname><given-names>D</given-names></string-name>, <string-name><surname>Andrejev</surname><given-names>S</given-names></string-name>, <string-name><surname>Tramontano</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Fast automated reconstruction of genome-scale metabolic models for microbial species and communities</article-title>. <source>Nucleic Acids Res</source><year>2018</year>;<volume>46</volume>:<fpage>7542</fpage>–<lpage>53</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gky537</pub-id>.<pub-id pub-id-type="pmid">30192979</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olivier</surname><given-names>BG</given-names></string-name>, <string-name><surname>Bergmann</surname><given-names>FT.</given-names></string-name></person-group><article-title>SBML level 3 package: flux balance constraints version 2</article-title>. <source>J Integr Bioinform</source><year>2018</year>;<volume>15</volume>:<fpage>20170082</fpage>. <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>.<pub-id pub-id-type="pmid">29522419</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perez-Garcia</surname><given-names>O</given-names></string-name>, <string-name><surname>Lear</surname><given-names>G</given-names></string-name>, <string-name><surname>Singhal</surname><given-names>N.</given-names></string-name></person-group><article-title>Metabolic network modeling of microbial interactions in natural and engineered environmental systems</article-title>. <source>Front Microbiol</source><year>2016</year>;<volume>7</volume>:<fpage>673</fpage>.<pub-id pub-id-type="pmid">27242701</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Saa</surname><given-names>P</given-names></string-name>, <string-name><surname>Urrutia</surname><given-names>A</given-names></string-name>, <string-name><surname>Silva-Andrade</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Modeling approaches for probing cross-feeding interactions in the human gut microbiome</article-title>. <source>Comput Struct Biotechnol J</source><year>2022</year>;<volume>20</volume>:<fpage>79</fpage>–<lpage>89</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.12.006</pub-id>.<pub-id pub-id-type="pmid">34976313</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zimmermann</surname><given-names>J</given-names></string-name>, <string-name><surname>Kaleta</surname><given-names>C</given-names></string-name>, <string-name><surname>Waschina</surname><given-names>S.</given-names></string-name></person-group><article-title>gapseq: informed prediction of bacterial metabolic pathways and reconstruction of accurate metabolic models</article-title>. <source>Genome Biol</source><year>2021</year>;<volume>22</volume>:<fpage>81</fpage>. <pub-id pub-id-type="doi">10.1186/s13059-021-02295-1</pub-id>.<pub-id pub-id-type="pmid">33691770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10990682</article-id>
    <article-id pub-id-type="pmid">38532295</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btae153</article-id>
    <article-id pub-id-type="publisher-id">btae153</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyCoMo: a python package for community metabolic model creation and analysis</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3556-4661</contrib-id>
        <name>
          <surname>Predl</surname>
          <given-names>Michael</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0009-0000-4305-5392</contrib-id>
        <name>
          <surname>Mießkes</surname>
          <given-names>Marianne</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0592-7791</contrib-id>
        <name>
          <surname>Rattei</surname>
          <given-names>Thomas</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--thomas.rattei@univie.ac.at-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1964-2455</contrib-id>
        <name>
          <surname>Zanghellini</surname>
          <given-names>Jürgen</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--juergen.zanghellini@univie.ac.at-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btae153-cor1">Corresponding authors. Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna, Djerassiplatz 1, 1030 Vienna, Austria. E-mail: <email>thomas.rattei@univie.ac.at</email> (T.R.); Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna, Sensengasse 8, 1090 Vienna, Austria. E-mail: <email>juergen.zanghellini@univie.ac.at</email> (J.Z.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-03-26">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <volume>40</volume>
    <issue>4</issue>
    <elocation-id>btae153</elocation-id>
    <history>
      <date date-type="received">
        <day>09</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>29</day>
        <month>2</month>
        <year>2024</year>
      </date>
      <date date-type="corrected-typeset">
        <day>03</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btae153.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>PyCoMo is a python package for quick and easy generation of genome-scale compartmentalized community metabolic models that are compliant with current openCOBRA file formats. The resulting models can be used to predict (i) the maximum growth rate at a given abundance profile, (ii) the feasible community compositions at a given growth rate, and (iii) all exchange metabolites and cross-feeding interactions in a community metabolic model independent of the abundance profile; we demonstrate PyCoMo’s capability by analysing methane production in a previously published simplified biogas community metabolic model.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>PyCoMo is freely available under an MIT licence at <ext-link xlink:href="http://github.com/univieCUBE/PyCoMo" ext-link-type="uri">http://github.com/univieCUBE/PyCoMo</ext-link>, the Python Package Index, and Zenodo.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>FWF</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002428</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Cross-feeding interactions are crucial for community formation and function. Predicting these interactions is an open challenge, with much development in the field of metabolic modelling (<xref rid="btae153-B4" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2021</xref>). It has expanded in the direction of microbial communities, with research being done on simple, cultured communities up to personalized models of the human gut microbiome (<xref rid="btae153-B2" ref-type="bibr">Diener <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btae153-B6" ref-type="bibr">Ibrahim <italic toggle="yes">et al.</italic> 2021</xref>, <xref rid="btae153-B15" ref-type="bibr">Saa <italic toggle="yes">et al.</italic> 2022</xref>).</p>
    <p>Metabolic modelling on the level of communities allows investigating questions that can only be stated in the context of communities, such as which interactions can occur within them. Different approaches have been developed to model communities of metabolic models: individual modelling of the members with iterative cross-talk via metabolite availability, lumped models representing the collective enzymatic capabilities of a community without cellular borders, and compartmentalized metabolic models, which place each member model in a separate compartment and add a shared exchange compartment for interaction (<xref rid="btae153-B14" ref-type="bibr">Perez-Garcia <italic toggle="yes">et al.</italic> 2016</xref>). While resulting in the largest and most complex models, the compartmentalized approach allows direct modelling of inter-species interactions such as cross-feeding.</p>
    <p>The creation of compartmentalized community metabolic models includes many technical obstacles, such as matching the namespace of exchange metabolites, creating a community biomass function and preserving the attribution of metabolites and reactions to the community members within the model. All these tasks can be automated when all necessary information is present, as shown in Commmodelpy by <xref rid="btae153-B1" ref-type="bibr">Bekiaris and Klamt (2021)</xref>. Yet, the models generated by the current version (0.0.3) of Commmodelpy face several issues that hinder their reusability for further analyses and curation: the information which member a gene or compartment belongs to is not automatically retained, the flux bounds are changed due to normalization, and the abundance composition cannot be changed without rerunning the merging procedure.</p>
    <p>While standard formats for single organism metabolic models like SBML (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) have emerged and been widely adopted, no standard format for community metabolic models has been established yet. This not only poses a challenge for the compatibility and reuse of community metabolic models, but can also lead to a loss of information in the community model representation, as is the case for Commmodelpy. Apart from retaining information, the abundances of community members and any changes to the original flux bounds need to be documented as well for the model to be reusable.</p>
    <p>Here, we present PyCoMo, a python package for automated generation of compartmentalized community metabolic models. The generated models are suited for reuse and continuous improvement, as all information of the single organisms, as well as all community information, is stored in a format complying to existing standards. PyCoMo allows the quick calculation of the set of potential metabolite exchanges and resulting interactions across the entire community composition space, with a single flux variability analysis (FVA) run. We show an example of these functionalities by replicating the analysis of a previously published three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>).</p>
  </sec>
  <sec>
    <title>2 Description</title>
    <p>PyCoMo is implemented in Python 3 and utilizes COBRApy (<xref rid="btae153-B3" ref-type="bibr">Ebrahim <italic toggle="yes">et al.</italic> 2013</xref>) for model input and output, as well as for fundamental structure and analysis methods. Three types of functionality for community metabolic modelling are implemented: (i) the preparation of the single organism models before merging into a community metabolic model, (ii) the generation of the community metabolic model in a structured format, and (iii) the contextualization and analysis of the community metabolic model (<xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>). The resulting community model can then be used to predict the maximal community growth rate (at a given composition) or all feasible community compositions (at a given community growth rate).</p>
    <fig position="float" id="btae153-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Summary of PyCoMo. (A) Overview of the automated steps in compartmentalized community metabolic model creation and the available analysis. All components of the final model can be traced back to their community member of origin. The community metabolic models can be saved and loaded into SBML format while retaining the original flux bounds, making the models reusable. Mass and charge balance of the entire model is checked, including all external metabolites matched between community members. The community metabolic model structure can be set to fixed growth or fixed abundance. All functionalities are available via a command-line interface. (B) Feasible compositions at different community growth rates in a three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). DV, <italic toggle="yes">Desulfovibrio vulgaris</italic>; MH, <italic toggle="yes">Methanospirillum hungatei</italic>; MB, <italic toggle="yes">Methanosarcina barkeri</italic>. The medium is specified to contain ethanol and CO<sub>2</sub>, with ethanol being the substrate for <italic toggle="yes">Desulfovibrio vulgaris</italic>, which produces the substrates for the other community members. (C) Visualization of the community metabolic model and its cross-feeding interactions using ScyNet. The metabolite exchanges were calculated independently of the community composition and growth rate. Arrow colours denote feasible metabolite production (orange), uptake (green) or both (violet) by the communities’ members.</p>
      </caption>
      <graphic xlink:href="btae153f1" position="float"/>
    </fig>
    <p>The input for PyCoMo are the metabolic models of the community members, in any of the file formats supported by COBRApy (SBML, MATLAB, JSON, and YAML). The imported member models are prepared for merging, by prefixing all individual organism objects’ (i.e. gene products, species, reactions, etc.) IDs with the name of the member they belong to. Further, a separate “medium compartment” is added, which will allow metabolite exchange between organisms as well as the environment. Existing boundary reactions are converted into (internal) reactions transporting metabolites from the organisms’ compartments to the medium compartment, and new boundary reactions are set for the medium compartment. Additionally, consistency checks and corrections for compliance with the SBML format (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) are performed.</p>
    <p>Boundary metabolites of all members need to be matched in the medium compartment. PyCoMo resolves the matching either by ID, or by annotation. When matching by name, all metabolites with the same SBML ID are matched. Matching by annotation utilizes the information of database cross-referencing in the metabolite annotations. Such annotations are available to varying extent in all automatically generated metabolic models. The user can select a database to match all metabolites in the medium compartment with a reference to the same metabolite in the specified database. To avoid inconsistent matches, this process will only be followed through if all boundary metabolites map uniquely to the annotation database, otherwise PyCoMo stops and informs the user to use a different database or match the metabolites via names.</p>
    <p>In a second step a community metabolic model object is created, using the prepared models as input. Here, all components of the models are merged. Metabolites, reactions, compartments and genes remain affiliated to their origin, due to the name change in the preparation.</p>
    <p>Solving a community metabolic model leads to a nonlinear problem by default, due to the bilinear dependence of the community growth rate on the community abundance profile, and the growth rate of the individual members (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). To linearize the model, one can either hold the growth rate or the community member fraction constant by constraining the corresponding reactions (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>).</p>
    <p>Typically, the fluxes in metabolic models are normalized to the (dry) mass of the system. In the context of microbial communities, this system mass represents the total dry mass of the community. Consequently, when consolidating multiple models, all cell-specific fluxes, including their corresponding bounds, need to be re-scaled to match the total community mass. This can be efficiently achieved by multiplying the cell-specific fluxes (alongside their bounds) by the mass fraction of the specific member in the community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). However, when dealing with variable abundance profiles, flux bounds become dynamic, a characteristic not accommodated by the current SBML standard (level 3, Flux Balance Constraints Version 2 Release 2) (<xref rid="btae153-B13" ref-type="bibr">Olivier and Bergmann 2018</xref>). To address this, we convert each genome-scale metabolic model into an equivalent bound-free form, where flux bounds are represented as stoichiometric coefficients for newly introduced dummy metabolites. These metabolites are both produced and consumed by additional reactions, with their fluxes corresponding to the respective member’s mass fraction within the community (refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> for details). This approach aligns with current standards, ensuring seamless interchangeability among various openCOBRA tools.</p>
    <p>The result of the merging and these additional steps is always a COBRApy model object, allowing the large environment of methods available to be utilized. On top of the COBRApy analysis methods, PyCoMo includes the functionality to calculate cross-feeding interactions in the community metabolic model. As community metabolic models have the additional parameter of community composition, typical steady-state, constraint-based modelling either only represents a single state of the community, or is computationally intensive, as it needs to account for the whole space of abundance combinations. By setting the model structure to variable community composition, but also removing the constraint of equal growth rate among the community members, FVA of the members’ exchange reactions calculates the possible ranges of all metabolite exchanges and cross-feeding interactions. The resulting flux ranges may include cross-feeding interactions not feasible under balanced (community) growth if the production of metabolites is coupled to biomass production.</p>
    <p>Community metabolic models generated by PyCoMo can easily be exported and transferred, as all the included export functionalities of COBRApy can be applied, and SBML format requirements are checked. PyCoMo was tested to work with input models of different origins [AGORA (<xref rid="btae153-B5" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2023</xref>), BIGG (<xref rid="btae153-B9" ref-type="bibr">King <italic toggle="yes">et al.</italic> 2016</xref>), CarveMe (<xref rid="btae153-B12" ref-type="bibr">Machado <italic toggle="yes">et al.</italic> 2018</xref>), PathwayTools (<xref rid="btae153-B7" ref-type="bibr">Karp <italic toggle="yes">et al.</italic> 2021</xref>), gapseq (<xref rid="btae153-B16" ref-type="bibr">Zimmermann <italic toggle="yes">et al.</italic> 2021</xref>)], although any model that can be imported using COBRApy will work. Further, community metabolic models generated by PyCoMo can be easily visualized using ScyNet (<ext-link xlink:href="https://www.github.com/univieCUBE/ScyNet" ext-link-type="uri">github.com/univieCUBE/ScyNet</ext-link>, manuscript submitted; see <xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>), as all format requirements are fulfilled.</p>
    <p>PyCoMo contains a command line interface, allowing to directly generate community metabolic models, reading all member models from file and writing the resulting community metabolic model to file. All functionalities described above are available within the command line interface and thus facilitate an easy integration into existing workflows.</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>As an example of a possible workflow, we have analysed a simplified biogas community of three species, aiming to construct a community metabolic model and compare all potential cross-feeding interactions to literature knowledge (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). The community consists of <italic toggle="yes">Desulfovibrio vulgaris</italic>, <italic toggle="yes">Methanospirillum hungatei</italic> and <italic toggle="yes">Methanosarcina barkeri</italic>, each representing a functional guild in the metabolic model. The members of the community are known to be actively cross-feeding, producing methane from ethanol or lactate, via the intermediary metabolites acetate, formate, H<sub>2</sub> and CO<sub>2</sub> (<xref rid="btae153-B10" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2016</xref>). The models of the species members have been previously generated by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>.</p>
    <p>A community metabolic model is generated with PyCoMo following the workflow depicted in <xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>. The input models are loaded from SBML files and the exchange metabolites are matched via identical IDs. The medium is set to contain ethanol and CO<sub>2</sub>, as specified by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. The potential exchange metabolites and cross-feeding interactions were calculated. The result (<xref rid="btae153-F1" ref-type="fig">Fig. 1B</xref>) shows that cross-feeding can occur via acetate, H<sub>2</sub>, CO<sub>2</sub>, and formate. For a clear representation of the interaction structure in the community, the community metabolic model and its cross-feeding interactions is visualized with ScyNet (<xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>).</p>
    <p>FVA of the generated community model shows that <italic toggle="yes">D.vulgaris</italic> can provide acetate and hydrogen to <italic toggle="yes">M.barkeri</italic>. These metabolites are known substrates for two different pathways for methanogenesis in <italic toggle="yes">M.barkeri</italic>, the acetoclastic pathway and the hydrogenotrophic pathway. Similarly, <italic toggle="yes">D.vulgaris</italic> can provide formate and hydrogen for <italic toggle="yes">M.hungatei</italic>, which are all processed via the hydrogenotrophic pathway.</p>
    <p>The community metabolic model would also allow <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> and CO<sub>2</sub>. This uptake was not found in the analysis by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. While it is known that <italic toggle="yes">D.vulgaris</italic> can grow on acetate and hydrogen with sulphate as an electron acceptor, sulphate is not part of the growth medium, neither is acetate. PyCoMo could detect a thermodynamically infeasible cycle as the reason, allowing <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 3</xref>). In this cycle, <italic toggle="yes">D.vulgaris</italic> produces formate from H<sub>2</sub> and CO<sub>2</sub>. Subsequently, <italic toggle="yes">M.hungatei</italic> converts the formate back into H<sub>2</sub> and CO<sub>2</sub>, without the need for any other metabolites.</p>
    <p>The performance of PyCoMo was tested using communities of different sizes (5–40 members). Genome-scale metabolic models from the AGORA collection were used as input models. Three tasks were timed on a system with 16 GB RAM and an AMD Ryzen 7 5700G using only a single core: the construction of the community metabolic model, flux balance analysis (FBA) at equal community member abundance, and the calculation of all potential exchange metabolites. The runtime scales approximately linear with community size for the construction of the community metabolic model and FBA, while the runtime of the calculation of all potential exchange metabolites scales quadratic, with a runtime of 11.3, 2.3, and 31.5 min respectively, at a community size of 40 members (average over three repetitions, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 5</xref>).</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>PyCoMo simplifies the generation and analysis of community metabolic models. This allows quickly addressing questions of which metabolites might be consumed, produced or exchanged in a community of interest, harnessing the knowledge base aspect of metabolic models on a community level. PyCoMo manages the construction of community models within a matter of seconds to minutes, yet the limitations of steady-state metabolic modelling methods apply. This means that simple optimization techniques like FBA will be feasible for larger communities, while the runtime for flux range and sampling approaches like FVA grows faster and can only be applied to smaller communities. Still, PyCoMo can find all exchange metabolites and cross-feeding interactions via FVA in a matter of 3 min for a 10-member community using genome-scale metabolic models.</p>
    <p>Assembling community metabolic models with PyCoMo is reproducible and the resulting metabolic models can easily be used for further analysis with other metabolic modelling methods, including objectives other than biomass and objective free methods. All current openCOBRA file formats are supported for model input and export, with strict adherence to the SBML format. PyCoMo even facilitates (manual) curation on the level of communities by creating community metabolic models that fully preserve all available annotation and documentation in an interoperable, reusable manner adaptable to the necessary structures for different linearization approaches.</p>
    <p>Finally, due to its command-line interface, PyCoMo can be easily integrated into (existing) genome analysis and phenotyping pipelines.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btae153_Supplementary_Data</label>
      <media xlink:href="btae153_supplementary_data.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by FWF doc.funds project DOC 69 “Microbial symbioses in dynamic environments: Metabolic interplay and novel interactions (MAINTAIN)” to M.P.; and the Austrian Climate and Energy Fund carried out under the program “Vorzeigeregion Energie” [project number: 887638 to M.M.].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article are available in this article and its supplementary material, and at <ext-link xlink:href="https://pypi.org/project/pycomo/" ext-link-type="uri">https://pypi.org/project/pycomo/</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btae153-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bekiaris</surname><given-names>PS</given-names></string-name>, <string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group><article-title>Designing microbial communities to maximize the thermodynamic driving force for the production of chemicals</article-title>. <source>PLoS Comput Biol</source><year>2021</year>;<volume>17</volume>:<fpage>e1009093</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1009093</pub-id>.<pub-id pub-id-type="pmid">34129600</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Diener</surname><given-names>C</given-names></string-name>, <string-name><surname>Gibbons</surname><given-names>SM</given-names></string-name>, <string-name><surname>Resendis-Antonio</surname><given-names>O.</given-names></string-name></person-group><article-title>MICOM: metagenome-scale modeling to infer metabolic interactions in the gut microbiota</article-title>. <source>mSystems</source><year>2020</year>;<volume>5</volume>:<fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1128/msystems.00606-19</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ebrahim</surname><given-names>A</given-names></string-name>, <string-name><surname>Lerman</surname><given-names>JA</given-names></string-name>, <string-name><surname>Palsson</surname><given-names>BO</given-names></string-name></person-group><etal>et al</etal><article-title>COBRApy: COnstraints-Based Reconstruction and Analysis for Python</article-title>. <source>BMC Syst Biol</source><year>2013</year>;<volume>7</volume>:<fpage>74</fpage>. <pub-id pub-id-type="doi">10.1186/1752-0509-7-74</pub-id>.<pub-id pub-id-type="pmid">23927696</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Basile</surname><given-names>A</given-names></string-name>, <string-name><surname>Thiele</surname><given-names>I.</given-names></string-name></person-group><article-title>Advances in constraint-based modelling of microbial communities</article-title>. <source>Curr Opin Syst Biol</source><year>2021</year>;<volume>27</volume>:<fpage>100346</fpage>. <pub-id pub-id-type="doi">10.1016/j.coisb.2021.05.007</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Hertel</surname><given-names>J</given-names></string-name>, <string-name><surname>Acharya</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-scale metabolic reconstruction of 7,302 human microorganisms for personalized medicine</article-title>. <source>Nat Biotechnol</source><year>2023</year>;<volume>41</volume>:<fpage>1320</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1038/s41587-022-01628-0</pub-id>.<pub-id pub-id-type="pmid">36658342</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ibrahim</surname><given-names>M</given-names></string-name>, <string-name><surname>Raajaraam</surname><given-names>L</given-names></string-name>, <string-name><surname>Raman</surname><given-names>K.</given-names></string-name></person-group><article-title>Modelling microbial communities: harnessing consortia for biotechnological applications</article-title>. <source>Comput Struct Biotechnol J</source><year>2021</year>;<volume>19</volume>:<fpage>3892</fpage>–<lpage>907</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.06.048</pub-id>.<pub-id pub-id-type="pmid">34584635</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Karp</surname><given-names>PD</given-names></string-name>, <string-name><surname>Midford</surname><given-names>PE</given-names></string-name>, <string-name><surname>Billington</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Pathway tools version 23.0 update: software for pathway/genome informatics and systems biology</article-title>. <source>Brief Bioinform</source><year>2021</year>;<volume>22</volume>:<fpage>109</fpage>–<lpage>26</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbz104</pub-id>.<pub-id pub-id-type="pmid">31813964</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keating</surname><given-names>SM</given-names></string-name>, <string-name><surname>Waltemath</surname><given-names>D</given-names></string-name>, <string-name><surname>König</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal>; <collab>SBML Level 3 Community Members</collab>. <article-title>SBML level 3: an extensible format for the exchange and reuse of biological models</article-title>. <source>Mol Syst Biol</source><year>2020</year>;<volume>16</volume>:<fpage>e9110</fpage>. <pub-id pub-id-type="doi">10.15252/msb.20199110</pub-id>.<pub-id pub-id-type="pmid">32845085</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>King</surname><given-names>ZA</given-names></string-name>, <string-name><surname>Lu</surname><given-names>J</given-names></string-name>, <string-name><surname>Dräger</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>. <source>Nucleic Acids Res</source><year>2016</year>;<volume>44</volume>:<fpage>D515</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>.<pub-id pub-id-type="pmid">26476456</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Benndorf</surname><given-names>D</given-names></string-name>, <string-name><surname>Fronk</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Predicting compositions of microbial communities from stoichiometric models with applications for the biogas process</article-title>. <source>Biotechnol Biofuels</source><year>2016</year>;<volume>9</volume>:<fpage>17</fpage>–<lpage>6</lpage>. <pub-id pub-id-type="doi">10.1186/s13068-016-0429-x</pub-id>.<pub-id pub-id-type="pmid">26807149</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Kohrs</surname><given-names>F</given-names></string-name>, <string-name><surname>Lahmann</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>RedCom: a strategy for reduced metabolic modeling of complex microbial communities and its application for analyzing experimental datasets from anaerobic digestion</article-title>. <source>PLoS Comput Biol</source><year>2019</year>;<volume>15</volume>:<fpage>e1006759</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006759</pub-id>.<pub-id pub-id-type="pmid">30707687</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Machado</surname><given-names>D</given-names></string-name>, <string-name><surname>Andrejev</surname><given-names>S</given-names></string-name>, <string-name><surname>Tramontano</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Fast automated reconstruction of genome-scale metabolic models for microbial species and communities</article-title>. <source>Nucleic Acids Res</source><year>2018</year>;<volume>46</volume>:<fpage>7542</fpage>–<lpage>53</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gky537</pub-id>.<pub-id pub-id-type="pmid">30192979</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olivier</surname><given-names>BG</given-names></string-name>, <string-name><surname>Bergmann</surname><given-names>FT.</given-names></string-name></person-group><article-title>SBML level 3 package: flux balance constraints version 2</article-title>. <source>J Integr Bioinform</source><year>2018</year>;<volume>15</volume>:<fpage>20170082</fpage>. <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>.<pub-id pub-id-type="pmid">29522419</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perez-Garcia</surname><given-names>O</given-names></string-name>, <string-name><surname>Lear</surname><given-names>G</given-names></string-name>, <string-name><surname>Singhal</surname><given-names>N.</given-names></string-name></person-group><article-title>Metabolic network modeling of microbial interactions in natural and engineered environmental systems</article-title>. <source>Front Microbiol</source><year>2016</year>;<volume>7</volume>:<fpage>673</fpage>.<pub-id pub-id-type="pmid">27242701</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Saa</surname><given-names>P</given-names></string-name>, <string-name><surname>Urrutia</surname><given-names>A</given-names></string-name>, <string-name><surname>Silva-Andrade</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Modeling approaches for probing cross-feeding interactions in the human gut microbiome</article-title>. <source>Comput Struct Biotechnol J</source><year>2022</year>;<volume>20</volume>:<fpage>79</fpage>–<lpage>89</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.12.006</pub-id>.<pub-id pub-id-type="pmid">34976313</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zimmermann</surname><given-names>J</given-names></string-name>, <string-name><surname>Kaleta</surname><given-names>C</given-names></string-name>, <string-name><surname>Waschina</surname><given-names>S.</given-names></string-name></person-group><article-title>gapseq: informed prediction of bacterial metabolic pathways and reconstruction of accurate metabolic models</article-title>. <source>Genome Biol</source><year>2021</year>;<volume>22</volume>:<fpage>81</fpage>. <pub-id pub-id-type="doi">10.1186/s13059-021-02295-1</pub-id>.<pub-id pub-id-type="pmid">33691770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10990682</article-id>
    <article-id pub-id-type="pmid">38532295</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btae153</article-id>
    <article-id pub-id-type="publisher-id">btae153</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyCoMo: a python package for community metabolic model creation and analysis</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3556-4661</contrib-id>
        <name>
          <surname>Predl</surname>
          <given-names>Michael</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0009-0000-4305-5392</contrib-id>
        <name>
          <surname>Mießkes</surname>
          <given-names>Marianne</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0592-7791</contrib-id>
        <name>
          <surname>Rattei</surname>
          <given-names>Thomas</given-names>
        </name>
        <aff><institution>Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Doctoral School in Microbiology and Environmental Science, University of Vienna</institution>, 1030 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--thomas.rattei@univie.ac.at-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1964-2455</contrib-id>
        <name>
          <surname>Zanghellini</surname>
          <given-names>Jürgen</given-names>
        </name>
        <aff><institution>Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna</institution>, 1090 Vienna, <country country="AT">Austria</country></aff>
        <aff><institution>Austrian Centre of Industrial Biotechnology</institution>, 1190 Vienna, <country country="AT">Austria</country></aff>
        <xref rid="btae153-cor1" ref-type="corresp"/>
        <!--juergen.zanghellini@univie.ac.at-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btae153-cor1">Corresponding authors. Department of Microbiology and Ecosystem Science, Division of Computational Systems Biology, Centre for Microbiology and Environmental Systems Science, University of Vienna, Djerassiplatz 1, 1030 Vienna, Austria. E-mail: <email>thomas.rattei@univie.ac.at</email> (T.R.); Department of Analytical Chemistry, Faculty of Chemistry, University of Vienna, Sensengasse 8, 1090 Vienna, Austria. E-mail: <email>juergen.zanghellini@univie.ac.at</email> (J.Z.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2024-03-26">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <volume>40</volume>
    <issue>4</issue>
    <elocation-id>btae153</elocation-id>
    <history>
      <date date-type="received">
        <day>09</day>
        <month>10</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>12</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>29</day>
        <month>2</month>
        <year>2024</year>
      </date>
      <date date-type="corrected-typeset">
        <day>03</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btae153.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>PyCoMo is a python package for quick and easy generation of genome-scale compartmentalized community metabolic models that are compliant with current openCOBRA file formats. The resulting models can be used to predict (i) the maximum growth rate at a given abundance profile, (ii) the feasible community compositions at a given growth rate, and (iii) all exchange metabolites and cross-feeding interactions in a community metabolic model independent of the abundance profile; we demonstrate PyCoMo’s capability by analysing methane production in a previously published simplified biogas community metabolic model.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>PyCoMo is freely available under an MIT licence at <ext-link xlink:href="http://github.com/univieCUBE/PyCoMo" ext-link-type="uri">http://github.com/univieCUBE/PyCoMo</ext-link>, the Python Package Index, and Zenodo.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>FWF</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002428</institution-id>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Cross-feeding interactions are crucial for community formation and function. Predicting these interactions is an open challenge, with much development in the field of metabolic modelling (<xref rid="btae153-B4" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2021</xref>). It has expanded in the direction of microbial communities, with research being done on simple, cultured communities up to personalized models of the human gut microbiome (<xref rid="btae153-B2" ref-type="bibr">Diener <italic toggle="yes">et al.</italic> 2020</xref>, <xref rid="btae153-B6" ref-type="bibr">Ibrahim <italic toggle="yes">et al.</italic> 2021</xref>, <xref rid="btae153-B15" ref-type="bibr">Saa <italic toggle="yes">et al.</italic> 2022</xref>).</p>
    <p>Metabolic modelling on the level of communities allows investigating questions that can only be stated in the context of communities, such as which interactions can occur within them. Different approaches have been developed to model communities of metabolic models: individual modelling of the members with iterative cross-talk via metabolite availability, lumped models representing the collective enzymatic capabilities of a community without cellular borders, and compartmentalized metabolic models, which place each member model in a separate compartment and add a shared exchange compartment for interaction (<xref rid="btae153-B14" ref-type="bibr">Perez-Garcia <italic toggle="yes">et al.</italic> 2016</xref>). While resulting in the largest and most complex models, the compartmentalized approach allows direct modelling of inter-species interactions such as cross-feeding.</p>
    <p>The creation of compartmentalized community metabolic models includes many technical obstacles, such as matching the namespace of exchange metabolites, creating a community biomass function and preserving the attribution of metabolites and reactions to the community members within the model. All these tasks can be automated when all necessary information is present, as shown in Commmodelpy by <xref rid="btae153-B1" ref-type="bibr">Bekiaris and Klamt (2021)</xref>. Yet, the models generated by the current version (0.0.3) of Commmodelpy face several issues that hinder their reusability for further analyses and curation: the information which member a gene or compartment belongs to is not automatically retained, the flux bounds are changed due to normalization, and the abundance composition cannot be changed without rerunning the merging procedure.</p>
    <p>While standard formats for single organism metabolic models like SBML (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) have emerged and been widely adopted, no standard format for community metabolic models has been established yet. This not only poses a challenge for the compatibility and reuse of community metabolic models, but can also lead to a loss of information in the community model representation, as is the case for Commmodelpy. Apart from retaining information, the abundances of community members and any changes to the original flux bounds need to be documented as well for the model to be reusable.</p>
    <p>Here, we present PyCoMo, a python package for automated generation of compartmentalized community metabolic models. The generated models are suited for reuse and continuous improvement, as all information of the single organisms, as well as all community information, is stored in a format complying to existing standards. PyCoMo allows the quick calculation of the set of potential metabolite exchanges and resulting interactions across the entire community composition space, with a single flux variability analysis (FVA) run. We show an example of these functionalities by replicating the analysis of a previously published three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>).</p>
  </sec>
  <sec>
    <title>2 Description</title>
    <p>PyCoMo is implemented in Python 3 and utilizes COBRApy (<xref rid="btae153-B3" ref-type="bibr">Ebrahim <italic toggle="yes">et al.</italic> 2013</xref>) for model input and output, as well as for fundamental structure and analysis methods. Three types of functionality for community metabolic modelling are implemented: (i) the preparation of the single organism models before merging into a community metabolic model, (ii) the generation of the community metabolic model in a structured format, and (iii) the contextualization and analysis of the community metabolic model (<xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>). The resulting community model can then be used to predict the maximal community growth rate (at a given composition) or all feasible community compositions (at a given community growth rate).</p>
    <fig position="float" id="btae153-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Summary of PyCoMo. (A) Overview of the automated steps in compartmentalized community metabolic model creation and the available analysis. All components of the final model can be traced back to their community member of origin. The community metabolic models can be saved and loaded into SBML format while retaining the original flux bounds, making the models reusable. Mass and charge balance of the entire model is checked, including all external metabolites matched between community members. The community metabolic model structure can be set to fixed growth or fixed abundance. All functionalities are available via a command-line interface. (B) Feasible compositions at different community growth rates in a three species biogas community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). DV, <italic toggle="yes">Desulfovibrio vulgaris</italic>; MH, <italic toggle="yes">Methanospirillum hungatei</italic>; MB, <italic toggle="yes">Methanosarcina barkeri</italic>. The medium is specified to contain ethanol and CO<sub>2</sub>, with ethanol being the substrate for <italic toggle="yes">Desulfovibrio vulgaris</italic>, which produces the substrates for the other community members. (C) Visualization of the community metabolic model and its cross-feeding interactions using ScyNet. The metabolite exchanges were calculated independently of the community composition and growth rate. Arrow colours denote feasible metabolite production (orange), uptake (green) or both (violet) by the communities’ members.</p>
      </caption>
      <graphic xlink:href="btae153f1" position="float"/>
    </fig>
    <p>The input for PyCoMo are the metabolic models of the community members, in any of the file formats supported by COBRApy (SBML, MATLAB, JSON, and YAML). The imported member models are prepared for merging, by prefixing all individual organism objects’ (i.e. gene products, species, reactions, etc.) IDs with the name of the member they belong to. Further, a separate “medium compartment” is added, which will allow metabolite exchange between organisms as well as the environment. Existing boundary reactions are converted into (internal) reactions transporting metabolites from the organisms’ compartments to the medium compartment, and new boundary reactions are set for the medium compartment. Additionally, consistency checks and corrections for compliance with the SBML format (<xref rid="btae153-B8" ref-type="bibr">Keating <italic toggle="yes">et al.</italic> 2020</xref>) are performed.</p>
    <p>Boundary metabolites of all members need to be matched in the medium compartment. PyCoMo resolves the matching either by ID, or by annotation. When matching by name, all metabolites with the same SBML ID are matched. Matching by annotation utilizes the information of database cross-referencing in the metabolite annotations. Such annotations are available to varying extent in all automatically generated metabolic models. The user can select a database to match all metabolites in the medium compartment with a reference to the same metabolite in the specified database. To avoid inconsistent matches, this process will only be followed through if all boundary metabolites map uniquely to the annotation database, otherwise PyCoMo stops and informs the user to use a different database or match the metabolites via names.</p>
    <p>In a second step a community metabolic model object is created, using the prepared models as input. Here, all components of the models are merged. Metabolites, reactions, compartments and genes remain affiliated to their origin, due to the name change in the preparation.</p>
    <p>Solving a community metabolic model leads to a nonlinear problem by default, due to the bilinear dependence of the community growth rate on the community abundance profile, and the growth rate of the individual members (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). To linearize the model, one can either hold the growth rate or the community member fraction constant by constraining the corresponding reactions (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>).</p>
    <p>Typically, the fluxes in metabolic models are normalized to the (dry) mass of the system. In the context of microbial communities, this system mass represents the total dry mass of the community. Consequently, when consolidating multiple models, all cell-specific fluxes, including their corresponding bounds, need to be re-scaled to match the total community mass. This can be efficiently achieved by multiplying the cell-specific fluxes (alongside their bounds) by the mass fraction of the specific member in the community (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). However, when dealing with variable abundance profiles, flux bounds become dynamic, a characteristic not accommodated by the current SBML standard (level 3, Flux Balance Constraints Version 2 Release 2) (<xref rid="btae153-B13" ref-type="bibr">Olivier and Bergmann 2018</xref>). To address this, we convert each genome-scale metabolic model into an equivalent bound-free form, where flux bounds are represented as stoichiometric coefficients for newly introduced dummy metabolites. These metabolites are both produced and consumed by additional reactions, with their fluxes corresponding to the respective member’s mass fraction within the community (refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> for details). This approach aligns with current standards, ensuring seamless interchangeability among various openCOBRA tools.</p>
    <p>The result of the merging and these additional steps is always a COBRApy model object, allowing the large environment of methods available to be utilized. On top of the COBRApy analysis methods, PyCoMo includes the functionality to calculate cross-feeding interactions in the community metabolic model. As community metabolic models have the additional parameter of community composition, typical steady-state, constraint-based modelling either only represents a single state of the community, or is computationally intensive, as it needs to account for the whole space of abundance combinations. By setting the model structure to variable community composition, but also removing the constraint of equal growth rate among the community members, FVA of the members’ exchange reactions calculates the possible ranges of all metabolite exchanges and cross-feeding interactions. The resulting flux ranges may include cross-feeding interactions not feasible under balanced (community) growth if the production of metabolites is coupled to biomass production.</p>
    <p>Community metabolic models generated by PyCoMo can easily be exported and transferred, as all the included export functionalities of COBRApy can be applied, and SBML format requirements are checked. PyCoMo was tested to work with input models of different origins [AGORA (<xref rid="btae153-B5" ref-type="bibr">Heinken <italic toggle="yes">et al.</italic> 2023</xref>), BIGG (<xref rid="btae153-B9" ref-type="bibr">King <italic toggle="yes">et al.</italic> 2016</xref>), CarveMe (<xref rid="btae153-B12" ref-type="bibr">Machado <italic toggle="yes">et al.</italic> 2018</xref>), PathwayTools (<xref rid="btae153-B7" ref-type="bibr">Karp <italic toggle="yes">et al.</italic> 2021</xref>), gapseq (<xref rid="btae153-B16" ref-type="bibr">Zimmermann <italic toggle="yes">et al.</italic> 2021</xref>)], although any model that can be imported using COBRApy will work. Further, community metabolic models generated by PyCoMo can be easily visualized using ScyNet (<ext-link xlink:href="https://www.github.com/univieCUBE/ScyNet" ext-link-type="uri">github.com/univieCUBE/ScyNet</ext-link>, manuscript submitted; see <xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>), as all format requirements are fulfilled.</p>
    <p>PyCoMo contains a command line interface, allowing to directly generate community metabolic models, reading all member models from file and writing the resulting community metabolic model to file. All functionalities described above are available within the command line interface and thus facilitate an easy integration into existing workflows.</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>As an example of a possible workflow, we have analysed a simplified biogas community of three species, aiming to construct a community metabolic model and compare all potential cross-feeding interactions to literature knowledge (<xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2019</xref>). The community consists of <italic toggle="yes">Desulfovibrio vulgaris</italic>, <italic toggle="yes">Methanospirillum hungatei</italic> and <italic toggle="yes">Methanosarcina barkeri</italic>, each representing a functional guild in the metabolic model. The members of the community are known to be actively cross-feeding, producing methane from ethanol or lactate, via the intermediary metabolites acetate, formate, H<sub>2</sub> and CO<sub>2</sub> (<xref rid="btae153-B10" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> 2016</xref>). The models of the species members have been previously generated by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>.</p>
    <p>A community metabolic model is generated with PyCoMo following the workflow depicted in <xref rid="btae153-F1" ref-type="fig">Fig. 1A</xref>. The input models are loaded from SBML files and the exchange metabolites are matched via identical IDs. The medium is set to contain ethanol and CO<sub>2</sub>, as specified by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. The potential exchange metabolites and cross-feeding interactions were calculated. The result (<xref rid="btae153-F1" ref-type="fig">Fig. 1B</xref>) shows that cross-feeding can occur via acetate, H<sub>2</sub>, CO<sub>2</sub>, and formate. For a clear representation of the interaction structure in the community, the community metabolic model and its cross-feeding interactions is visualized with ScyNet (<xref rid="btae153-F1" ref-type="fig">Fig. 1C</xref>).</p>
    <p>FVA of the generated community model shows that <italic toggle="yes">D.vulgaris</italic> can provide acetate and hydrogen to <italic toggle="yes">M.barkeri</italic>. These metabolites are known substrates for two different pathways for methanogenesis in <italic toggle="yes">M.barkeri</italic>, the acetoclastic pathway and the hydrogenotrophic pathway. Similarly, <italic toggle="yes">D.vulgaris</italic> can provide formate and hydrogen for <italic toggle="yes">M.hungatei</italic>, which are all processed via the hydrogenotrophic pathway.</p>
    <p>The community metabolic model would also allow <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> and CO<sub>2</sub>. This uptake was not found in the analysis by <xref rid="btae153-B11" ref-type="bibr">Koch <italic toggle="yes">et al.</italic> (2019)</xref>. While it is known that <italic toggle="yes">D.vulgaris</italic> can grow on acetate and hydrogen with sulphate as an electron acceptor, sulphate is not part of the growth medium, neither is acetate. PyCoMo could detect a thermodynamically infeasible cycle as the reason, allowing <italic toggle="yes">D.vulgaris</italic> to take up H<sub>2</sub> (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 3</xref>). In this cycle, <italic toggle="yes">D.vulgaris</italic> produces formate from H<sub>2</sub> and CO<sub>2</sub>. Subsequently, <italic toggle="yes">M.hungatei</italic> converts the formate back into H<sub>2</sub> and CO<sub>2</sub>, without the need for any other metabolites.</p>
    <p>The performance of PyCoMo was tested using communities of different sizes (5–40 members). Genome-scale metabolic models from the AGORA collection were used as input models. Three tasks were timed on a system with 16 GB RAM and an AMD Ryzen 7 5700G using only a single core: the construction of the community metabolic model, flux balance analysis (FBA) at equal community member abundance, and the calculation of all potential exchange metabolites. The runtime scales approximately linear with community size for the construction of the community metabolic model and FBA, while the runtime of the calculation of all potential exchange metabolites scales quadratic, with a runtime of 11.3, 2.3, and 31.5 min respectively, at a community size of 40 members (average over three repetitions, see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material, Section 5</xref>).</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>PyCoMo simplifies the generation and analysis of community metabolic models. This allows quickly addressing questions of which metabolites might be consumed, produced or exchanged in a community of interest, harnessing the knowledge base aspect of metabolic models on a community level. PyCoMo manages the construction of community models within a matter of seconds to minutes, yet the limitations of steady-state metabolic modelling methods apply. This means that simple optimization techniques like FBA will be feasible for larger communities, while the runtime for flux range and sampling approaches like FVA grows faster and can only be applied to smaller communities. Still, PyCoMo can find all exchange metabolites and cross-feeding interactions via FVA in a matter of 3 min for a 10-member community using genome-scale metabolic models.</p>
    <p>Assembling community metabolic models with PyCoMo is reproducible and the resulting metabolic models can easily be used for further analysis with other metabolic modelling methods, including objectives other than biomass and objective free methods. All current openCOBRA file formats are supported for model input and export, with strict adherence to the SBML format. PyCoMo even facilitates (manual) curation on the level of communities by creating community metabolic models that fully preserve all available annotation and documentation in an interoperable, reusable manner adaptable to the necessary structures for different linearization approaches.</p>
    <p>Finally, due to its command-line interface, PyCoMo can be easily integrated into (existing) genome analysis and phenotyping pipelines.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btae153_Supplementary_Data</label>
      <media xlink:href="btae153_supplementary_data.pdf"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by FWF doc.funds project DOC 69 “Microbial symbioses in dynamic environments: Metabolic interplay and novel interactions (MAINTAIN)” to M.P.; and the Austrian Climate and Energy Fund carried out under the program “Vorzeigeregion Energie” [project number: 887638 to M.M.].</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article are available in this article and its supplementary material, and at <ext-link xlink:href="https://pypi.org/project/pycomo/" ext-link-type="uri">https://pypi.org/project/pycomo/</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btae153-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bekiaris</surname><given-names>PS</given-names></string-name>, <string-name><surname>Klamt</surname><given-names>S.</given-names></string-name></person-group><article-title>Designing microbial communities to maximize the thermodynamic driving force for the production of chemicals</article-title>. <source>PLoS Comput Biol</source><year>2021</year>;<volume>17</volume>:<fpage>e1009093</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1009093</pub-id>.<pub-id pub-id-type="pmid">34129600</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Diener</surname><given-names>C</given-names></string-name>, <string-name><surname>Gibbons</surname><given-names>SM</given-names></string-name>, <string-name><surname>Resendis-Antonio</surname><given-names>O.</given-names></string-name></person-group><article-title>MICOM: metagenome-scale modeling to infer metabolic interactions in the gut microbiota</article-title>. <source>mSystems</source><year>2020</year>;<volume>5</volume>:<fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1128/msystems.00606-19</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ebrahim</surname><given-names>A</given-names></string-name>, <string-name><surname>Lerman</surname><given-names>JA</given-names></string-name>, <string-name><surname>Palsson</surname><given-names>BO</given-names></string-name></person-group><etal>et al</etal><article-title>COBRApy: COnstraints-Based Reconstruction and Analysis for Python</article-title>. <source>BMC Syst Biol</source><year>2013</year>;<volume>7</volume>:<fpage>74</fpage>. <pub-id pub-id-type="doi">10.1186/1752-0509-7-74</pub-id>.<pub-id pub-id-type="pmid">23927696</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Basile</surname><given-names>A</given-names></string-name>, <string-name><surname>Thiele</surname><given-names>I.</given-names></string-name></person-group><article-title>Advances in constraint-based modelling of microbial communities</article-title>. <source>Curr Opin Syst Biol</source><year>2021</year>;<volume>27</volume>:<fpage>100346</fpage>. <pub-id pub-id-type="doi">10.1016/j.coisb.2021.05.007</pub-id>.</mixed-citation>
    </ref>
    <ref id="btae153-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Heinken</surname><given-names>A</given-names></string-name>, <string-name><surname>Hertel</surname><given-names>J</given-names></string-name>, <string-name><surname>Acharya</surname><given-names>G</given-names></string-name></person-group><etal>et al</etal><article-title>Genome-scale metabolic reconstruction of 7,302 human microorganisms for personalized medicine</article-title>. <source>Nat Biotechnol</source><year>2023</year>;<volume>41</volume>:<fpage>1320</fpage>–<lpage>31</lpage>. <pub-id pub-id-type="doi">10.1038/s41587-022-01628-0</pub-id>.<pub-id pub-id-type="pmid">36658342</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ibrahim</surname><given-names>M</given-names></string-name>, <string-name><surname>Raajaraam</surname><given-names>L</given-names></string-name>, <string-name><surname>Raman</surname><given-names>K.</given-names></string-name></person-group><article-title>Modelling microbial communities: harnessing consortia for biotechnological applications</article-title>. <source>Comput Struct Biotechnol J</source><year>2021</year>;<volume>19</volume>:<fpage>3892</fpage>–<lpage>907</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.06.048</pub-id>.<pub-id pub-id-type="pmid">34584635</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Karp</surname><given-names>PD</given-names></string-name>, <string-name><surname>Midford</surname><given-names>PE</given-names></string-name>, <string-name><surname>Billington</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Pathway tools version 23.0 update: software for pathway/genome informatics and systems biology</article-title>. <source>Brief Bioinform</source><year>2021</year>;<volume>22</volume>:<fpage>109</fpage>–<lpage>26</lpage>. <pub-id pub-id-type="doi">10.1093/bib/bbz104</pub-id>.<pub-id pub-id-type="pmid">31813964</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keating</surname><given-names>SM</given-names></string-name>, <string-name><surname>Waltemath</surname><given-names>D</given-names></string-name>, <string-name><surname>König</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal>; <collab>SBML Level 3 Community Members</collab>. <article-title>SBML level 3: an extensible format for the exchange and reuse of biological models</article-title>. <source>Mol Syst Biol</source><year>2020</year>;<volume>16</volume>:<fpage>e9110</fpage>. <pub-id pub-id-type="doi">10.15252/msb.20199110</pub-id>.<pub-id pub-id-type="pmid">32845085</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>King</surname><given-names>ZA</given-names></string-name>, <string-name><surname>Lu</surname><given-names>J</given-names></string-name>, <string-name><surname>Dräger</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>BiGG models: a platform for integrating, standardizing and sharing genome-scale models</article-title>. <source>Nucleic Acids Res</source><year>2016</year>;<volume>44</volume>:<fpage>D515</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv1049</pub-id>.<pub-id pub-id-type="pmid">26476456</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Benndorf</surname><given-names>D</given-names></string-name>, <string-name><surname>Fronk</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Predicting compositions of microbial communities from stoichiometric models with applications for the biogas process</article-title>. <source>Biotechnol Biofuels</source><year>2016</year>;<volume>9</volume>:<fpage>17</fpage>–<lpage>6</lpage>. <pub-id pub-id-type="doi">10.1186/s13068-016-0429-x</pub-id>.<pub-id pub-id-type="pmid">26807149</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Koch</surname><given-names>S</given-names></string-name>, <string-name><surname>Kohrs</surname><given-names>F</given-names></string-name>, <string-name><surname>Lahmann</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>RedCom: a strategy for reduced metabolic modeling of complex microbial communities and its application for analyzing experimental datasets from anaerobic digestion</article-title>. <source>PLoS Comput Biol</source><year>2019</year>;<volume>15</volume>:<fpage>e1006759</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1006759</pub-id>.<pub-id pub-id-type="pmid">30707687</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Machado</surname><given-names>D</given-names></string-name>, <string-name><surname>Andrejev</surname><given-names>S</given-names></string-name>, <string-name><surname>Tramontano</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Fast automated reconstruction of genome-scale metabolic models for microbial species and communities</article-title>. <source>Nucleic Acids Res</source><year>2018</year>;<volume>46</volume>:<fpage>7542</fpage>–<lpage>53</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gky537</pub-id>.<pub-id pub-id-type="pmid">30192979</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olivier</surname><given-names>BG</given-names></string-name>, <string-name><surname>Bergmann</surname><given-names>FT.</given-names></string-name></person-group><article-title>SBML level 3 package: flux balance constraints version 2</article-title>. <source>J Integr Bioinform</source><year>2018</year>;<volume>15</volume>:<fpage>20170082</fpage>. <pub-id pub-id-type="doi">10.1515/jib-2017-0082</pub-id>.<pub-id pub-id-type="pmid">29522419</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perez-Garcia</surname><given-names>O</given-names></string-name>, <string-name><surname>Lear</surname><given-names>G</given-names></string-name>, <string-name><surname>Singhal</surname><given-names>N.</given-names></string-name></person-group><article-title>Metabolic network modeling of microbial interactions in natural and engineered environmental systems</article-title>. <source>Front Microbiol</source><year>2016</year>;<volume>7</volume>:<fpage>673</fpage>.<pub-id pub-id-type="pmid">27242701</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Saa</surname><given-names>P</given-names></string-name>, <string-name><surname>Urrutia</surname><given-names>A</given-names></string-name>, <string-name><surname>Silva-Andrade</surname><given-names>C</given-names></string-name></person-group><etal>et al</etal><article-title>Modeling approaches for probing cross-feeding interactions in the human gut microbiome</article-title>. <source>Comput Struct Biotechnol J</source><year>2022</year>;<volume>20</volume>:<fpage>79</fpage>–<lpage>89</lpage>. <pub-id pub-id-type="doi">10.1016/j.csbj.2021.12.006</pub-id>.<pub-id pub-id-type="pmid">34976313</pub-id></mixed-citation>
    </ref>
    <ref id="btae153-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zimmermann</surname><given-names>J</given-names></string-name>, <string-name><surname>Kaleta</surname><given-names>C</given-names></string-name>, <string-name><surname>Waschina</surname><given-names>S.</given-names></string-name></person-group><article-title>gapseq: informed prediction of bacterial metabolic pathways and reconstruction of accurate metabolic models</article-title>. <source>Genome Biol</source><year>2021</year>;<volume>22</volume>:<fpage>81</fpage>. <pub-id pub-id-type="doi">10.1186/s13059-021-02295-1</pub-id>.<pub-id pub-id-type="pmid">33691770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

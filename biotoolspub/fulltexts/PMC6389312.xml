<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Mol Biol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Mol. Biol. Evol</journal-id>
    <journal-id journal-id-type="publisher-id">molbev</journal-id>
    <journal-title-group>
      <journal-title>Molecular Biology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0737-4038</issn>
    <issn pub-type="epub">1537-1719</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6389312</article-id>
    <article-id pub-id-type="doi">10.1093/molbev/msy228</article-id>
    <article-id pub-id-type="publisher-id">msy228</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Resources</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SLiM 3: Forward Genetic Simulations Beyond the Wright–Fisher Model</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Haller</surname>
          <given-names>Benjamin C</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>bhaller@benhaller.com</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Messer</surname>
          <given-names>Philipp W</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>messer@cornell.edu</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Hernandez</surname>
          <given-names>Ryan</given-names>
        </name>
        <role>Associate Editor</role>
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="msy228-aff1">Department of Biological Statistics and Computational Biology, Cornell University, Ithaca, NY</aff>
    <author-notes>
      <corresp id="msy228-cor1"><bold>Corresponding authors:</bold> E-mails: <email>bhaller@benhaller.com</email>; <email>messer@cornell.edu</email>.</corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>3</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-01-18">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>3</issue>
    <fpage>632</fpage>
    <lpage>637</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press on behalf of the Society for Molecular Biology and Evolution.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="msy228.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>With the desire to model population genetic processes under increasingly realistic scenarios, forward genetic simulations have become a critical part of the toolbox of modern evolutionary biology. The SLiM forward genetic simulation framework is one of the most powerful and widely used tools in this area. However, its foundation in the Wright–Fisher model has been found to pose an obstacle to implementing many types of models; it is difficult to adapt the Wright–Fisher model, with its many assumptions, to modeling ecologically realistic scenarios such as explicit space, overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and so forth. In response to this need, we here introduce SLiM 3, which contains two key advancements aimed at abolishing these limitations. First, the new non-Wright–Fisher or “nonWF” model type provides a much more flexible foundation that allows the easy implementation of all of the above scenarios and many more. Second, SLiM 3 adds support for continuous space, including spatial interactions and spatial maps of environmental variables. We provide a conceptual overview of these new features, and present several example models to illustrate their use.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>eco-evolutionary dynamics</kwd>
      <kwd>whole-population modeling</kwd>
      <kwd>tree sequence recording</kwd>
      <kwd>spatial population dynamics</kwd>
      <kwd>landscape modeling</kwd>
      <kwd>genealogy simulation</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">College of Agriculture and Life Sciences</named-content>
        </funding-source>
        <award-id>SS/05/01</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>R01GM127418</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Forward genetic simulations are playing an increasingly important role in evolutionary biology due to their ability to model a wide range of population genetic mechanisms and include a high level of ecological detail in the simulated scenario (<xref rid="msy228-B4" ref-type="bibr">Carvajal-Rodriguez 2010</xref>; <xref rid="msy228-B20" ref-type="bibr">Yuan et al. 2012</xref>; <xref rid="msy228-B1" ref-type="bibr">Bank et al. 2014</xref>; <xref rid="msy228-B12" ref-type="bibr">Hoban 2014</xref>; <xref rid="msy228-B18" ref-type="bibr">Thornton 2014</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM forward genetic simulation framework (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>) has proved to be a powerful tool for this purpose, and constitutes one of the most widely used computational frameworks for implementing such simulations at the present time.</p>
    <p>The National Cancer Institute’s Genetic Simulation Resources (GSR) website provides a comprehensive database of genetic simulation software tools (<xref rid="msy228-B16" ref-type="bibr">NCI 2018</xref>). At the time of writing, the GSR listed 42 packages supporting forward simulation; this includes many tools that are specialized for a particular type of model, as well as some tools that support a wide variety of evolutionary scenarios. SLiM’s popularity among these tools is based primarily upon three key attributes. First, it is highly scriptable, allowing the mechanics of the SLiM framework to be fundamentally modified and extended in many ways. At the same time, even fairly sophisticated evolutionary models can often be expressed in a page of code or less, since all of the core simulation code is provided by SLiM, yielding tremendous benefits compared with writing simulations from scratch in a language such as C++. Second, SLiM includes a full-featured graphical modeling environment, SLiMgui, that makes interactive model development, visual debugging, and hands-on exploration easy, with large benefits throughout the modeling process (<xref rid="msy228-B6" ref-type="bibr">Grimm 2002</xref>). And third, a great deal of work has been devoted to optimizing SLiM, making it run as efficiently as possible across a wide variety of simulation scenarios; these speed benefits are inherited for free by any model running within SLiM. The GSR does not provide performance comparisons, so users with performance concerns should run their own tests before settling upon a particular package; for comparing the features available in different packages, however, the GSR can be a very helpful resource.</p>
    <p>In our contact with users of SLiM over the past years, one category of questions has predominated: how can SLiM simulations be constructed that go beyond the standard Wright–Fisher or “WF” model (<xref rid="msy228-B5" ref-type="bibr">Fisher 1922</xref>; <xref rid="msy228-B19" ref-type="bibr">Wright 1931</xref>)? This model, which has provided the conceptual foundation for all previous versions of SLiM (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>), is defined by a number of simplifying assumptions. For example, the model assumes that generations are nonoverlapping and discrete, without any age structure or age-based differentiation among individuals. Another critical assumption of the model lies in the rules governing the generation of offspring from the parental population; in the standard WF model, the parents for each child in the next generation are drawn randomly from the previous generation with a probability proportional to each individual’s fitness. This makes it difficult to model variation in litter size, monogamous mating, and other such phenomena. Furthermore, since population size is an externally determined parameter in the WF model, it is often not clear how scenarios in which population size is an emergent variable—depending, for instance, on factors such as mean fitness, available habitat, and colonization history—should be accurately modeled in a WF framework.</p>
    <p>Given the scope of the simplifying assumptions underlying the WF model, the desire among SLiM’s users to go beyond this model takes many forms, but they might be said to unify around the idea of more realistic spatial and ecological dynamics. For example, users have inquired whether it is possible to model the explicit movement of individuals over a continuous landscape, life cycles with overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and more. Because SLiM 2 was already highly scriptable, and thus many of its internal dynamics could be modified through scripting, it was sometimes possible to work around the limitations inherited from the WF model; but those workarounds are often clumsy and laborious, and some types of models have simply proved difficult or impossible to implement in SLiM 2. Fundamentally, the Wright–Fisher model is not an ecological model, and so if we are to progress toward uniting genetics and evolutionary biology with ecology, the need for a more flexible foundation is clear.</p>
    <p>In response to this need, we here introduce SLiM 3, which contains two major advances squarely aimed at these limitations. First, in addition to the traditional Wright–Fisher or WF model type of previous SLiM versions, SLiM 3 supports a new non-Wright–Fisher or “nonWF” model type that provides much greater flexibility in how key processes such as mate choice and reproduction, migration, fitness evaluation, survival, population regulation, and other related areas are implemented, allowing the explicit linking of evolutionary dynamics with ecological patterns and processes. Second, in addition to support for discrete subpopulations connected by migration, SLiM 3 now supports models that occupy continuous spatial landscapes, including built-in support for spatial maps that describe environmental characteristics, and for local spatial interactions such as spatial competition and mate choice. (Support for spatial models was introduced in SLiM 2.3, in fact, but is previously unpublished.)</p>
    <p>SLiM 3 contains many other important additions as well. Most prominently, it adds support for “tree-sequence recording” (also called “pedigree recording”), a method of recording ancestry information in forward simulations (<xref rid="msy228-B13" ref-type="bibr">Kelleher et al. 2016</xref>, <xref rid="msy228-B14" ref-type="bibr">2018</xref>). Tree-sequence recording can decrease simulation runtimes by several orders of magnitude, by allowing neutral mutations to be overlaid efficiently after forward simulation has completed and by allowing neutral burn-in to be done extremely efficiently with “recapitation”, and it provides several other major benefits as well (<xref rid="msy228-B14" ref-type="bibr">Kelleher et al. 2018</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). SLiM 3’s support for tree-sequence recording is discussed further in <xref rid="msy228-B10" ref-type="bibr">Haller et al. (2018)</xref>. Other important changes in SLiM 3 since SLiM 2.0 (the last published version) include many additions and improvements to the Eidos scripting language (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>), many new methods provided by SLiM’s Eidos classes (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>), and many improvements to the SLiMgui graphical modeling environment. SLiM 3 also contains a great deal of optimization work to make simulations run faster. A few more specific improvements are worth mentioning too: a new <monospace>Individual</monospace> class representing simulated individuals, support for a variable mutation rate along the chromosome, a new <monospace>recombination()</monospace> callback mechanism for modifying recombination breakpoints at an individual level, and VCF format output, among others (a complete change list may be found in the SLiM manual).</p>
    <p>Here, however, we will focus on what we believe to be the most important new features in SLiM 3: nonWF models and continuous space, the features that enable users to go beyond the Wright–Fisher model in SLiM. We will provide a conceptual overview of these features, and will demonstrate them with several examples.</p>
    <sec>
      <title>The nonWF Simulation Model</title>
      <p>Perhaps the easiest way to understand nonWF models is by looking at how they differ from the standard WF model type. The most important differences are in the following broad areas:
<list list-type="bullet"><list-item><p><bold>Age structure.</bold> In WF models, generations are discrete and nonoverlapping; all individuals live for a single generation, during which they reproduce and then die. In nonWF models, by contrast, generations can be overlapping; individuals can live for multiple generations, until they die due to some cause (typically selection, old age, or bad luck). More fundamentally, the concept of a “generation” has been broadened. In nonWF models, each generation represents an opportunity to reproduce and/or die—a discretization of those events in time, providing a temporal structure to the model that could be based upon hours, days, seasons, or decades, but that is not necessarily related to the expected lifespan of individuals. Individuals in nonWF models have an age (measured in generations), the population thus has an age structure, and the model can implement whatever age-related behaviors are desired. The generation cycle in nonWF models is contrasted against that of WF models in <xref ref-type="fig" rid="msy228-F1">figure 1</xref>
.</p></list-item><list-item><p><bold>Offspring generation.</bold> In WF models, offspring are generated by drawing parents from the individuals in the previous generation. The population size is a parameter of the model, determining how many offspring are to be generated in each generation; the selfing rate, cloning rate, and sex ratio are, similarly, population-level parameters. In nonWF models, by contrast, the script is much more directly in charge of the process of offspring generation; the script requests the generation of each offspring based upon individual state rather than population-level parameters. Calls are made from SLiM to <monospace>reproduction()</monospace> callbacks defined in the model script, and those callbacks determine which individuals reproduce, how they choose a mate or mates (if any), how many offspring they have, and so forth. The population size, selfing rate, cloning rate, and sex ratio are therefore no longer population-level parameters; instead, they are emergent properties of the model, consequences of the rules specified in script for the individual-based reproduction dynamics. The population size, for example, becomes a result of the balance between birth rates and death rates, often (but not necessarily) regulated by density-dependent viability selection implemented in the model.</p></list-item><list-item><p><bold>Migration.</bold> In WF models, migration between populations is modeled by specifying the fraction of offspring in a given target population that stem from parents in a given source population. Since this model of migration leads to offspring that occupy a different population from their parents, it most closely resembles a model of juvenile migration. In nonWF models, by contrast, migration is again handled more directly by the model script, which may call the <monospace>takeMigrants()</monospace> method to move individuals to a new population at any point in the generation cycle, enabling models where individuals migrate as juveniles, as adults, or at multiple times during their life. This focus on individual-level migration, rather than population-level migration rates, allows for the probability that a given individual will migrate to depend much more flexibly upon individual-level state. A wide range of scenarios can be modeled this way, such as sex-dependent migration, habitat choice, or condition-dependent migration. In such models, the overall migration rate between two populations is again an emergent property that depends on the specific composition of the population and the migration rules specified in script, rather than on a population-level rate.</p></list-item><list-item><p><bold>Fitness.</bold> In WF models, fitness influences the probability that an individual will be chosen as a parent for a child in the next generation; there is no built-in concept of selection-induced mortality. Fitness is therefore relative, resulting in a model of so-called “soft” selection in which greater success for some individuals necessarily comes at the price of diminished success for others. The overall population size is not affected by selection, since it is a model parameter rather than an emergent property of the underlying evolutionary and ecological dynamics. In nonWF models, by contrast, fitness directly influences the probability of survival for each individual during each generation; individuals with low fitness are less likely to survive. Fitness is therefore absolute, and selection is “hard” in such a model by default; as a result, population size will vary naturally with mean population fitness (although this may be compensated for by density-dependent selection or fecundity). Of course one may still model the effects of genetics upon reproductive success or fecundity, in a <monospace>reproduction()</monospace> callback, if desired.</p></list-item></list></p>
      <fig id="msy228-F1" orientation="portrait" position="float">
        <label><sc>Fig.</sc> 1.</label>
        <caption>
          <p>A comparison of the generation cycles in WF models (left) versus nonWF models (right). Note that nonWF models have a viability/survival selection phase, immediately after fitness value recalculation, whereas in WF models fitness influences mating success and there is no concept of mortality-based selection. Events and callbacks are shown in red; these are points in the generation cycle when SLiM will call out to the script to provide custom behavior. So-called <monospace>early()</monospace> and <monospace>late()</monospace> events provide commonly used points in the generation cycle when the model script can intervene in SLiM’s operation, toward the beginning and the end of each generation respectively, to do model-specific tasks—generate output, handle interactions between individuals, move individuals in space, and so forth. As this figure illustrates, in WF models <monospace>early()</monospace> events come before offspring generation and <monospace>late()</monospace> events come after; in nonWF models, <monospace>early()</monospace> events come after offspring generation, whereas <monospace>late()</monospace> events, by virtue of being at the end of the generation cycle, in effect come before offspring generation (when it occurs at the beginning of the next generation). Callbacks, on the other hand, allow the script to override specific aspects of SLiM’s behavior, such as choosing mates, customizing generated offspring, calculating fitness effects, or generating custom recombination breakpoints. Most of these callbacks exist in both WF and nonWF models, but <monospace>mateChoice()</monospace> callbacks exist only in WF models, whereas <monospace>reproduction()</monospace> callbacks are only in nonWF models and handle mate choice as well as other reproduction-related duties.</p>
        </caption>
        <graphic xlink:href="msy228f1"/>
      </fig>
      <p>These differences can be summarized by saying that nonWF models are more individual-based, more script-controlled, more emergent, and therefore more biologically realistic. However, they are also often more complex in certain ways, primarily because of the need to implement a <monospace>reproduction()</monospace> callback and to introduce some explicit mechanism of population regulation. In effect, with the power to more precisely control reproduction and population regulation comes the responsibility to more explicitly think about and specify those phenomena. Populations can be regulated by any of a wide variety of mechanisms, from density-dependent fecundity to resource competition to predation to territorial behavior to natural disasters (<xref rid="msy228-B11" ref-type="bibr">Hixon et al. 2002</xref>; <xref rid="msy228-B2" ref-type="bibr">Begon et al. 2006</xref>). Any of these mechanisms can be implemented in a nonWF model, but it is not done for you as it is in a WF model; the user must decide what mechanism(s) of population regulation are desired and implement them in the model’s script.</p>
      <p>To provide an illustration of the relative ease with which such nonWF models can be specified in SLiM, we have supplied two example recipes (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 1</xref> and <xref ref-type="supplementary-material" rid="sup1">2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first example is a very basic nonWF model in a population where viability depends on the carrying capacity of the population; the second example is a more sophisticated nonWF model with monogamous mating and effects of age on mating and fitness.</p>
    </sec>
    <sec>
      <title>Continuous Space Models and Spatial Interactions</title>
      <p>Continuous-space models in SLiM 3 are quite straightforward at the conceptual level. Continuous space is enabled with a call to <monospace>initializeSLiMOptions()</monospace> that provides a dimensionality: "<monospace>x</monospace>" for one spatial dimension, "<monospace>xy</monospace>" for two, or "<monospace>xyz</monospace>" for three; we will focus here on 2D models since that is probably the most common case. Individuals then have properties representing their <monospace>x</monospace> and <monospace>y</monospace> coordinates in the continuous 2D space, which can be accessed and set. The spatial boundaries of each subpopulation can be configured by the user; by default, the landscape will span the interval [0,1] in each dimension. Setting individual positions is the responsibility of the model, and the model determines what use, if any, is made of those positions; there is no automatic consequence of spatiality upon model dynamics. However, since there are common ways in which models often want spatiality to influence dynamics, two additional facilities are provided: interaction types, and spatial maps.</p>
      <p>Interaction types are supported with a new Eidos class, <monospace>InteractionType</monospace>. An interaction type is defined with a call to <monospace>initializeInteractionType()</monospace>, and specifies two things: a distance metric that determines the interaction distance between two individuals, and an interaction formula that determines how the strength of interaction between two individuals varies with the distance between them. Once an interaction type is set up and evaluated, spatial queries can be made: what are the <italic>n</italic> closest neighbors to a given individual, what is the strength of interaction between individuals <italic>i</italic> and <italic>j</italic>, what is the total interaction strength exerted upon individual <italic>i</italic> by all other individuals in its subpopulation, and so forth. These queries are handled internally by highly optimized data structures such as <italic>k</italic>-d trees (<xref rid="msy228-B3" ref-type="bibr">Bentley 1975</xref>) and sparse arrays (<xref rid="msy228-B17" ref-type="bibr">Tewarson 1973</xref>), but those details are entirely hidden by SLiM, providing a way of implementing spatial interactions such as spatial competition and spatial mate choice that is both simple and fast.</p>
      <p>Spatial maps are not represented with a separate class; instead, they are attached to subpopulations. A new spatial map can be defined with a call to the <monospace>defineSpatialMap()</monospace> method, and the value of a particular spatial map at a given point can then be queried with <monospace>spatialMapValue()</monospace>. Any number of spatial maps may be attached to a subpopulation; multiple maps are distinguished from each other by name. Each map defines a grid of values (of any resolution) that is superimposed across the spatial bounds of the subpopulation, either with or without interpolation of values between grid points. The scale of the map values, and the meaning attached to them, is entirely up to the model to define. One map might define elevation across the landscape, another temperature, and each of those maps might have consequences for survival, or fecundity, or movement, or any other aspect of the model.</p>
      <p>Since much of this may seem rather abstract, we have again supplied two concrete examples (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 3</xref> and <xref ref-type="supplementary-material" rid="sup1">4</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first model is of a basic spatial population with local mate choice and competition; the second model introduces a heterogenous landscape and spatial extinction/recolonization dynamics.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>We have presented SLiM 3, a new major release of the SLiM forward genetic simulation framework. SLiM 3 provides many improvements over previous versions of SLiM, which are described in detail in the comprehensive documentation. Here we have focused on the two major features that enable SLiM 3 models to go beyond the limitations and assumptions of the Wright–Fisher model upon which all previous versions were based: the nonWF model type, and support for continuous space.</p>
    <p>The nonWF model type affords the model control over each individual mating event. This makes it easy to control model characteristics such as mate-choice behavior, fecundity, and individual variation in reproduction. In nonWF models, fitness influences survival, not mating probability, by default, which allows more natural and realistic population dynamics. Other important model features that are relevant for realistic ecology, such as overlapping generations, age structure, and realistic migration/dispersal behavior, also emerge naturally in this design. However, the option to construct a WF model, as in previous SLiM versions, remains; this can be useful particularly when one wishes to compare a forward simulation model to an analytical model based upon Wright–Fisher assumptions.</p>
    <p>Similarly, SLiM 3 provides the option of incorporating continuous space into a model, but models of discrete subpopulations connected by migration are also still supported. When continuous space is enabled, SLiM 3 provides a variety of useful tools for spatial modeling, such as spatial maps, which can define landscape characteristics that influence model dynamics, and a spatial interaction engine that can efficiently calculate interaction strengths between individuals and find nearby neighbors of an individual. SLiMgui also provides helpful visualizations for such models, making it easy to observe the dynamics that emerge from spatiality.</p>
    <p>It should be emphasized that these features really dovetail with each other; in particular, ecologically realistic models involving continuous space should almost always be nonWF models. This is because the WF model imposes global population regulation upon the simulation; an overall size is set for each subpopulation, such that if density increases in one area of space (due to immigration, for example), absolute fitness will effectively decrease across the whole landscape. It is possible to compensate for this with appropriate fitness scaling, but it becomes quite complex if there is variation in local carrying capacity, immigration and emigration rates, variation in fecundity, etc.; the externally imposed population size of WF models is simply not designed to accommodate locally determined population density. The emergent population size and density in nonWF models, on the other hand, automatically accounts for whatever factors influence birth and death in the model. This is the reason that both of the continuous-space examples we presented are nonWF models; the influence upon local density of the sweep of a beneficial mutation in Example 3, or of the occasional disasters of Example 4, would be extremely difficult to model in a WF framework.</p>
    <p>Many other new features of SLiM 3 have not been substantially discussed here. We urge all users to read about tree-sequence recording, which we believe to be a revolutionary new method that will considerably extend the horizon of what is possible in forward simulation (<xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM manual (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>) now contains recipes and reference documentation for other new features, and the Eidos manual (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>) now documents new additions to the Eidos language. It is worth noting particularly that a great deal of optimization work has gone into SLiM 3, and it is generally much faster than previous versions, especially for large models with long chromosomes, which can be orders of magnitude faster than in previous versions. We have provided a performance comparison (<xref ref-type="supplementary-material" rid="sup1">supplementary results</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>) that illustrates these benefits and the performance tradeoffs involved with nonWF models and continuous space.</p>
    <p>SLiM 3 is free, licensed under the GNU GPL, and is available on GitHub. Most users, however, will wish to download the release version from <ext-link ext-link-type="uri" xlink:href="https://messerlab.org/slim/">https://messerlab.org/slim/</ext-link>; the extensive manuals, with many examples, can be downloaded from the same website. We also encourage SLiM users to subscribe to the slim-discuss list at <ext-link ext-link-type="uri" xlink:href="http://bit.ly/slim-discuss">http://bit.ly/slim-discuss</ext-link>, where new versions are announced and users can ask questions and get help. The features that we have focused on here, nonWF models and continuous space, will enable many modeling scenarios that would have been difficult or impossible to model in previous versions of SLiM. We hope this will open up new frontiers in both applied and theoretical research.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Molecular Biology and Evolution</italic> online.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="msy228_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="AK1">
    <title>Acknowledgments</title>
    <p>We thank Jared Galloway, Jerome Kelleher, and Peter Ralph for their work on the tree-sequence recording feature of SLiM 3. Thanks also to Jorge Amaya, Bill Amos, Jaime Ashander, Hannes Becher, Emma Berdan, Yoann Buoro, Deborah Charlesworth, Jean Cury, A.P. Jason de Koning, Emily Dennis, Jordan Rohmeyer Dherby, Jared Galloway, Jesse Garcia, Kimberley Gilbert, Alexandre Harris, Rebecca Harris, Ding He, Kathryn Hodgins, Christian Huber, Melissa Jane Hubisz, Jacob Malte Jensen, Jerome Kelleher, Bhavin Khatri, Bernard Kim, Athanasios Kousathanas, Benjamin Laenen, Stefan Laurent, Eugenio Lopez, Kathleen Lotterhos, Mikhail Matz, Rupert Mazzucco, Maéva Mollion, Miguel Navascués, Greg Owens, Denis Pierron, Peter Ralph, David Rinker, Murillo Fernando Rodrigues, Andrew Sackman, Aaron Sams, Kieran Samuk, Onuralp Söylemez, Kevin Thornton, Robert Unckless, Christos Vlachos, Silu Wang, Aaron Wolf, Justin Yeh, members of the Messer lab, and the stackoverflow community for their valuable comments. Thanks to the editor and two anonymous reviewers, and to Peter Ralph, for helpful comments on previous versions of this manuscript. This study was supported by funds from the College of Agriculture and Life Sciences at Cornell University, New Zealand’s Predator Free 2050 program (grant number SS/05/01), and the National Institutes of Health (grant number R01GM127418) to P.W.M.</p>
  </ack>
  <ref-list id="RL1">
    <title>References</title>
    <ref id="msy228-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bank</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Ewing</surname><given-names>GB</given-names></name>, <name name-style="western"><surname>Ferrer-Admettla</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Foll</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Jensen</surname><given-names>JD</given-names></name></person-group><year>2014</year><article-title>Thinking too positive? Revisiting current methods of population genetic selection inference</article-title>. <source>Trends Genet</source>. <volume>30</volume><issue>12</issue>:<fpage>540</fpage>–<lpage>546</lpage>.<pub-id pub-id-type="pmid">25438719</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B2">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Begon</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Townsend</surname><given-names>CR</given-names></name>, <name name-style="western"><surname>Harper</surname><given-names>JL</given-names></name></person-group><year>2006</year><source>Ecology: from individuals to ecosystems</source>.
<publisher-loc>Hoboken (NJ)</publisher-loc>:
<publisher-name>Wiley-Blackwell</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bentley</surname><given-names>JL</given-names></name></person-group><year>1975</year><article-title>Multidimensional binary search trees used for associative searching</article-title>. <source>Commun ACM</source>. <volume>18</volume><issue>9</issue>:<fpage>509</fpage>–<lpage>517</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Carvajal-Rodriguez</surname><given-names>A</given-names></name></person-group><year>2010</year><article-title>Simulation of genes and genomes forward in time</article-title>. <source>Curr Genomics</source>. <volume>11</volume><issue>1</issue>:<fpage>58</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">20808525</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fisher</surname><given-names>RA</given-names></name></person-group><year>1922</year><article-title>On the dominance ratio</article-title>. <source>P Roy Soc Edinb</source>. <volume>42</volume>:<fpage>321</fpage>–<lpage>341</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grimm</surname><given-names>V</given-names></name></person-group><year>2002</year><article-title>Visual debugging: a way of analyzing, understanding and communicating bottom-up simulation models in ecology</article-title>. <source>Nat Resour Model</source>. <volume>15</volume><issue>1</issue>:<fpage>23</fpage>–<lpage>38</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B7">
      <mixed-citation publication-type="web"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name></person-group><year>2016</year><source>Eidos: A Simple Scripting Language</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/Eidos_Manual.pdf">http://benhaller.com/slim/Eidos_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B8">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2016</year><source>SLiM: An Evolutionary Simulation Framework</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/SLiM_Manual.pdf">http://benhaller.com/slim/SLiM_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2017</year><article-title>SLiM 2: flexible, interactive forward genetic simulations</article-title>. <source>Mol Biol Evol</source>. <volume>34</volume><issue>1</issue>:<fpage>230</fpage>–<lpage>240</lpage>.<pub-id pub-id-type="pmid">27702775</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Galloway</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Tree-sequence recording in SLiM opens new horizons for forward-time simulation of whole genomes</article-title>. <source>Mol Ecol Resour</source>, Advance Access published November 22, 2018, doi:10.1111/1755-0998.12968.</mixed-citation>
    </ref>
    <ref id="msy228-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hixon</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Pacala</surname><given-names>SW</given-names></name>, <name name-style="western"><surname>Sandin</surname><given-names>SA</given-names></name></person-group><year>2002</year><article-title>Population regulation: historical context and contemporary challenges of open vs closed systems</article-title>. <source>Ecology</source><volume>83</volume><issue>6</issue>:<fpage>1490</fpage>–<lpage>1508</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hoban</surname><given-names>S</given-names></name></person-group><year>2014</year><article-title>An overview of the utility of population simulation software in molecular ecology</article-title>. <source>Mol Ecol</source>. <volume>23</volume><issue>10</issue>:<fpage>2383</fpage>–<lpage>2401</lpage>.<pub-id pub-id-type="pmid">24689878</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Etheridge</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>McVean</surname><given-names>G</given-names></name></person-group><year>2016</year><article-title>Efficient coalescent simulation and genealogical analysis for large sample sizes</article-title>. <source>PLoS Comput Biol</source>. <volume>12</volume><issue>5</issue>:<fpage>e1004842</fpage>.<pub-id pub-id-type="pmid">27145223</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name>, <name name-style="western"><surname>Ashander</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Efficient pedigree recording for fast population genetics simulation</article-title>. <source>PLoS Comput Biol</source>. 14(11):e1006581.</mixed-citation>
    </ref>
    <ref id="msy228-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2013</year><article-title>SLiM: simulating evolution with selection and linkage</article-title>. <source>Genetics</source><volume>194</volume><issue>4</issue>:<fpage>1037</fpage>–<lpage>1039</lpage>.<pub-id pub-id-type="pmid">23709637</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B16">
      <mixed-citation publication-type="web">NCI (National Cancer Institute). <year>2018</year>
<source>Genetic simulation resources (GSR)</source>. Available from: <ext-link ext-link-type="uri" xlink:href="https://popmodels.cancercontrol.cancer.gov/gsr/">https://popmodels.cancercontrol.cancer.gov/gsr/</ext-link>, last accessed December 26, 2018.</mixed-citation>
    </ref>
    <ref id="msy228-B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Tewarson</surname><given-names>RP</given-names></name></person-group><year>1973</year><source>Sparse matrices</source>.
<publisher-loc>New York</publisher-loc>:
<publisher-name>Academic Press</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name></person-group><year>2014</year><article-title>A C++ template library for efficient forward-time population genetic simulation of large populations</article-title>. <source>Genetics</source><volume>198</volume><issue>1</issue>:<fpage>157</fpage>–<lpage>166</lpage>.<pub-id pub-id-type="pmid">24950894</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wright</surname><given-names>S</given-names></name></person-group><year>1931</year><article-title>Evolution in Mendelian populations</article-title>. <source>Genetics</source><volume>16</volume><issue>2</issue>:<fpage>97</fpage>–<lpage>159</lpage>.<pub-id pub-id-type="pmid">17246615</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yuan</surname><given-names>X</given-names></name>, <name name-style="western"><surname>Miller</surname><given-names>DJ</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Herrington</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Y</given-names></name></person-group><year>2012</year><article-title>An overview of population genetic data simulation</article-title>. <source>J Comput Biol</source>. <volume>19</volume><issue>1</issue>:<fpage>42</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">22149682</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Mol Biol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Mol. Biol. Evol</journal-id>
    <journal-id journal-id-type="publisher-id">molbev</journal-id>
    <journal-title-group>
      <journal-title>Molecular Biology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0737-4038</issn>
    <issn pub-type="epub">1537-1719</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6389312</article-id>
    <article-id pub-id-type="doi">10.1093/molbev/msy228</article-id>
    <article-id pub-id-type="publisher-id">msy228</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Resources</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SLiM 3: Forward Genetic Simulations Beyond the Wright–Fisher Model</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Haller</surname>
          <given-names>Benjamin C</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>bhaller@benhaller.com</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Messer</surname>
          <given-names>Philipp W</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>messer@cornell.edu</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Hernandez</surname>
          <given-names>Ryan</given-names>
        </name>
        <role>Associate Editor</role>
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="msy228-aff1">Department of Biological Statistics and Computational Biology, Cornell University, Ithaca, NY</aff>
    <author-notes>
      <corresp id="msy228-cor1"><bold>Corresponding authors:</bold> E-mails: <email>bhaller@benhaller.com</email>; <email>messer@cornell.edu</email>.</corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>3</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-01-18">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>3</issue>
    <fpage>632</fpage>
    <lpage>637</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press on behalf of the Society for Molecular Biology and Evolution.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="msy228.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>With the desire to model population genetic processes under increasingly realistic scenarios, forward genetic simulations have become a critical part of the toolbox of modern evolutionary biology. The SLiM forward genetic simulation framework is one of the most powerful and widely used tools in this area. However, its foundation in the Wright–Fisher model has been found to pose an obstacle to implementing many types of models; it is difficult to adapt the Wright–Fisher model, with its many assumptions, to modeling ecologically realistic scenarios such as explicit space, overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and so forth. In response to this need, we here introduce SLiM 3, which contains two key advancements aimed at abolishing these limitations. First, the new non-Wright–Fisher or “nonWF” model type provides a much more flexible foundation that allows the easy implementation of all of the above scenarios and many more. Second, SLiM 3 adds support for continuous space, including spatial interactions and spatial maps of environmental variables. We provide a conceptual overview of these new features, and present several example models to illustrate their use.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>eco-evolutionary dynamics</kwd>
      <kwd>whole-population modeling</kwd>
      <kwd>tree sequence recording</kwd>
      <kwd>spatial population dynamics</kwd>
      <kwd>landscape modeling</kwd>
      <kwd>genealogy simulation</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">College of Agriculture and Life Sciences</named-content>
        </funding-source>
        <award-id>SS/05/01</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>R01GM127418</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Forward genetic simulations are playing an increasingly important role in evolutionary biology due to their ability to model a wide range of population genetic mechanisms and include a high level of ecological detail in the simulated scenario (<xref rid="msy228-B4" ref-type="bibr">Carvajal-Rodriguez 2010</xref>; <xref rid="msy228-B20" ref-type="bibr">Yuan et al. 2012</xref>; <xref rid="msy228-B1" ref-type="bibr">Bank et al. 2014</xref>; <xref rid="msy228-B12" ref-type="bibr">Hoban 2014</xref>; <xref rid="msy228-B18" ref-type="bibr">Thornton 2014</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM forward genetic simulation framework (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>) has proved to be a powerful tool for this purpose, and constitutes one of the most widely used computational frameworks for implementing such simulations at the present time.</p>
    <p>The National Cancer Institute’s Genetic Simulation Resources (GSR) website provides a comprehensive database of genetic simulation software tools (<xref rid="msy228-B16" ref-type="bibr">NCI 2018</xref>). At the time of writing, the GSR listed 42 packages supporting forward simulation; this includes many tools that are specialized for a particular type of model, as well as some tools that support a wide variety of evolutionary scenarios. SLiM’s popularity among these tools is based primarily upon three key attributes. First, it is highly scriptable, allowing the mechanics of the SLiM framework to be fundamentally modified and extended in many ways. At the same time, even fairly sophisticated evolutionary models can often be expressed in a page of code or less, since all of the core simulation code is provided by SLiM, yielding tremendous benefits compared with writing simulations from scratch in a language such as C++. Second, SLiM includes a full-featured graphical modeling environment, SLiMgui, that makes interactive model development, visual debugging, and hands-on exploration easy, with large benefits throughout the modeling process (<xref rid="msy228-B6" ref-type="bibr">Grimm 2002</xref>). And third, a great deal of work has been devoted to optimizing SLiM, making it run as efficiently as possible across a wide variety of simulation scenarios; these speed benefits are inherited for free by any model running within SLiM. The GSR does not provide performance comparisons, so users with performance concerns should run their own tests before settling upon a particular package; for comparing the features available in different packages, however, the GSR can be a very helpful resource.</p>
    <p>In our contact with users of SLiM over the past years, one category of questions has predominated: how can SLiM simulations be constructed that go beyond the standard Wright–Fisher or “WF” model (<xref rid="msy228-B5" ref-type="bibr">Fisher 1922</xref>; <xref rid="msy228-B19" ref-type="bibr">Wright 1931</xref>)? This model, which has provided the conceptual foundation for all previous versions of SLiM (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>), is defined by a number of simplifying assumptions. For example, the model assumes that generations are nonoverlapping and discrete, without any age structure or age-based differentiation among individuals. Another critical assumption of the model lies in the rules governing the generation of offspring from the parental population; in the standard WF model, the parents for each child in the next generation are drawn randomly from the previous generation with a probability proportional to each individual’s fitness. This makes it difficult to model variation in litter size, monogamous mating, and other such phenomena. Furthermore, since population size is an externally determined parameter in the WF model, it is often not clear how scenarios in which population size is an emergent variable—depending, for instance, on factors such as mean fitness, available habitat, and colonization history—should be accurately modeled in a WF framework.</p>
    <p>Given the scope of the simplifying assumptions underlying the WF model, the desire among SLiM’s users to go beyond this model takes many forms, but they might be said to unify around the idea of more realistic spatial and ecological dynamics. For example, users have inquired whether it is possible to model the explicit movement of individuals over a continuous landscape, life cycles with overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and more. Because SLiM 2 was already highly scriptable, and thus many of its internal dynamics could be modified through scripting, it was sometimes possible to work around the limitations inherited from the WF model; but those workarounds are often clumsy and laborious, and some types of models have simply proved difficult or impossible to implement in SLiM 2. Fundamentally, the Wright–Fisher model is not an ecological model, and so if we are to progress toward uniting genetics and evolutionary biology with ecology, the need for a more flexible foundation is clear.</p>
    <p>In response to this need, we here introduce SLiM 3, which contains two major advances squarely aimed at these limitations. First, in addition to the traditional Wright–Fisher or WF model type of previous SLiM versions, SLiM 3 supports a new non-Wright–Fisher or “nonWF” model type that provides much greater flexibility in how key processes such as mate choice and reproduction, migration, fitness evaluation, survival, population regulation, and other related areas are implemented, allowing the explicit linking of evolutionary dynamics with ecological patterns and processes. Second, in addition to support for discrete subpopulations connected by migration, SLiM 3 now supports models that occupy continuous spatial landscapes, including built-in support for spatial maps that describe environmental characteristics, and for local spatial interactions such as spatial competition and mate choice. (Support for spatial models was introduced in SLiM 2.3, in fact, but is previously unpublished.)</p>
    <p>SLiM 3 contains many other important additions as well. Most prominently, it adds support for “tree-sequence recording” (also called “pedigree recording”), a method of recording ancestry information in forward simulations (<xref rid="msy228-B13" ref-type="bibr">Kelleher et al. 2016</xref>, <xref rid="msy228-B14" ref-type="bibr">2018</xref>). Tree-sequence recording can decrease simulation runtimes by several orders of magnitude, by allowing neutral mutations to be overlaid efficiently after forward simulation has completed and by allowing neutral burn-in to be done extremely efficiently with “recapitation”, and it provides several other major benefits as well (<xref rid="msy228-B14" ref-type="bibr">Kelleher et al. 2018</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). SLiM 3’s support for tree-sequence recording is discussed further in <xref rid="msy228-B10" ref-type="bibr">Haller et al. (2018)</xref>. Other important changes in SLiM 3 since SLiM 2.0 (the last published version) include many additions and improvements to the Eidos scripting language (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>), many new methods provided by SLiM’s Eidos classes (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>), and many improvements to the SLiMgui graphical modeling environment. SLiM 3 also contains a great deal of optimization work to make simulations run faster. A few more specific improvements are worth mentioning too: a new <monospace>Individual</monospace> class representing simulated individuals, support for a variable mutation rate along the chromosome, a new <monospace>recombination()</monospace> callback mechanism for modifying recombination breakpoints at an individual level, and VCF format output, among others (a complete change list may be found in the SLiM manual).</p>
    <p>Here, however, we will focus on what we believe to be the most important new features in SLiM 3: nonWF models and continuous space, the features that enable users to go beyond the Wright–Fisher model in SLiM. We will provide a conceptual overview of these features, and will demonstrate them with several examples.</p>
    <sec>
      <title>The nonWF Simulation Model</title>
      <p>Perhaps the easiest way to understand nonWF models is by looking at how they differ from the standard WF model type. The most important differences are in the following broad areas:
<list list-type="bullet"><list-item><p><bold>Age structure.</bold> In WF models, generations are discrete and nonoverlapping; all individuals live for a single generation, during which they reproduce and then die. In nonWF models, by contrast, generations can be overlapping; individuals can live for multiple generations, until they die due to some cause (typically selection, old age, or bad luck). More fundamentally, the concept of a “generation” has been broadened. In nonWF models, each generation represents an opportunity to reproduce and/or die—a discretization of those events in time, providing a temporal structure to the model that could be based upon hours, days, seasons, or decades, but that is not necessarily related to the expected lifespan of individuals. Individuals in nonWF models have an age (measured in generations), the population thus has an age structure, and the model can implement whatever age-related behaviors are desired. The generation cycle in nonWF models is contrasted against that of WF models in <xref ref-type="fig" rid="msy228-F1">figure 1</xref>
.</p></list-item><list-item><p><bold>Offspring generation.</bold> In WF models, offspring are generated by drawing parents from the individuals in the previous generation. The population size is a parameter of the model, determining how many offspring are to be generated in each generation; the selfing rate, cloning rate, and sex ratio are, similarly, population-level parameters. In nonWF models, by contrast, the script is much more directly in charge of the process of offspring generation; the script requests the generation of each offspring based upon individual state rather than population-level parameters. Calls are made from SLiM to <monospace>reproduction()</monospace> callbacks defined in the model script, and those callbacks determine which individuals reproduce, how they choose a mate or mates (if any), how many offspring they have, and so forth. The population size, selfing rate, cloning rate, and sex ratio are therefore no longer population-level parameters; instead, they are emergent properties of the model, consequences of the rules specified in script for the individual-based reproduction dynamics. The population size, for example, becomes a result of the balance between birth rates and death rates, often (but not necessarily) regulated by density-dependent viability selection implemented in the model.</p></list-item><list-item><p><bold>Migration.</bold> In WF models, migration between populations is modeled by specifying the fraction of offspring in a given target population that stem from parents in a given source population. Since this model of migration leads to offspring that occupy a different population from their parents, it most closely resembles a model of juvenile migration. In nonWF models, by contrast, migration is again handled more directly by the model script, which may call the <monospace>takeMigrants()</monospace> method to move individuals to a new population at any point in the generation cycle, enabling models where individuals migrate as juveniles, as adults, or at multiple times during their life. This focus on individual-level migration, rather than population-level migration rates, allows for the probability that a given individual will migrate to depend much more flexibly upon individual-level state. A wide range of scenarios can be modeled this way, such as sex-dependent migration, habitat choice, or condition-dependent migration. In such models, the overall migration rate between two populations is again an emergent property that depends on the specific composition of the population and the migration rules specified in script, rather than on a population-level rate.</p></list-item><list-item><p><bold>Fitness.</bold> In WF models, fitness influences the probability that an individual will be chosen as a parent for a child in the next generation; there is no built-in concept of selection-induced mortality. Fitness is therefore relative, resulting in a model of so-called “soft” selection in which greater success for some individuals necessarily comes at the price of diminished success for others. The overall population size is not affected by selection, since it is a model parameter rather than an emergent property of the underlying evolutionary and ecological dynamics. In nonWF models, by contrast, fitness directly influences the probability of survival for each individual during each generation; individuals with low fitness are less likely to survive. Fitness is therefore absolute, and selection is “hard” in such a model by default; as a result, population size will vary naturally with mean population fitness (although this may be compensated for by density-dependent selection or fecundity). Of course one may still model the effects of genetics upon reproductive success or fecundity, in a <monospace>reproduction()</monospace> callback, if desired.</p></list-item></list></p>
      <fig id="msy228-F1" orientation="portrait" position="float">
        <label><sc>Fig.</sc> 1.</label>
        <caption>
          <p>A comparison of the generation cycles in WF models (left) versus nonWF models (right). Note that nonWF models have a viability/survival selection phase, immediately after fitness value recalculation, whereas in WF models fitness influences mating success and there is no concept of mortality-based selection. Events and callbacks are shown in red; these are points in the generation cycle when SLiM will call out to the script to provide custom behavior. So-called <monospace>early()</monospace> and <monospace>late()</monospace> events provide commonly used points in the generation cycle when the model script can intervene in SLiM’s operation, toward the beginning and the end of each generation respectively, to do model-specific tasks—generate output, handle interactions between individuals, move individuals in space, and so forth. As this figure illustrates, in WF models <monospace>early()</monospace> events come before offspring generation and <monospace>late()</monospace> events come after; in nonWF models, <monospace>early()</monospace> events come after offspring generation, whereas <monospace>late()</monospace> events, by virtue of being at the end of the generation cycle, in effect come before offspring generation (when it occurs at the beginning of the next generation). Callbacks, on the other hand, allow the script to override specific aspects of SLiM’s behavior, such as choosing mates, customizing generated offspring, calculating fitness effects, or generating custom recombination breakpoints. Most of these callbacks exist in both WF and nonWF models, but <monospace>mateChoice()</monospace> callbacks exist only in WF models, whereas <monospace>reproduction()</monospace> callbacks are only in nonWF models and handle mate choice as well as other reproduction-related duties.</p>
        </caption>
        <graphic xlink:href="msy228f1"/>
      </fig>
      <p>These differences can be summarized by saying that nonWF models are more individual-based, more script-controlled, more emergent, and therefore more biologically realistic. However, they are also often more complex in certain ways, primarily because of the need to implement a <monospace>reproduction()</monospace> callback and to introduce some explicit mechanism of population regulation. In effect, with the power to more precisely control reproduction and population regulation comes the responsibility to more explicitly think about and specify those phenomena. Populations can be regulated by any of a wide variety of mechanisms, from density-dependent fecundity to resource competition to predation to territorial behavior to natural disasters (<xref rid="msy228-B11" ref-type="bibr">Hixon et al. 2002</xref>; <xref rid="msy228-B2" ref-type="bibr">Begon et al. 2006</xref>). Any of these mechanisms can be implemented in a nonWF model, but it is not done for you as it is in a WF model; the user must decide what mechanism(s) of population regulation are desired and implement them in the model’s script.</p>
      <p>To provide an illustration of the relative ease with which such nonWF models can be specified in SLiM, we have supplied two example recipes (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 1</xref> and <xref ref-type="supplementary-material" rid="sup1">2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first example is a very basic nonWF model in a population where viability depends on the carrying capacity of the population; the second example is a more sophisticated nonWF model with monogamous mating and effects of age on mating and fitness.</p>
    </sec>
    <sec>
      <title>Continuous Space Models and Spatial Interactions</title>
      <p>Continuous-space models in SLiM 3 are quite straightforward at the conceptual level. Continuous space is enabled with a call to <monospace>initializeSLiMOptions()</monospace> that provides a dimensionality: "<monospace>x</monospace>" for one spatial dimension, "<monospace>xy</monospace>" for two, or "<monospace>xyz</monospace>" for three; we will focus here on 2D models since that is probably the most common case. Individuals then have properties representing their <monospace>x</monospace> and <monospace>y</monospace> coordinates in the continuous 2D space, which can be accessed and set. The spatial boundaries of each subpopulation can be configured by the user; by default, the landscape will span the interval [0,1] in each dimension. Setting individual positions is the responsibility of the model, and the model determines what use, if any, is made of those positions; there is no automatic consequence of spatiality upon model dynamics. However, since there are common ways in which models often want spatiality to influence dynamics, two additional facilities are provided: interaction types, and spatial maps.</p>
      <p>Interaction types are supported with a new Eidos class, <monospace>InteractionType</monospace>. An interaction type is defined with a call to <monospace>initializeInteractionType()</monospace>, and specifies two things: a distance metric that determines the interaction distance between two individuals, and an interaction formula that determines how the strength of interaction between two individuals varies with the distance between them. Once an interaction type is set up and evaluated, spatial queries can be made: what are the <italic>n</italic> closest neighbors to a given individual, what is the strength of interaction between individuals <italic>i</italic> and <italic>j</italic>, what is the total interaction strength exerted upon individual <italic>i</italic> by all other individuals in its subpopulation, and so forth. These queries are handled internally by highly optimized data structures such as <italic>k</italic>-d trees (<xref rid="msy228-B3" ref-type="bibr">Bentley 1975</xref>) and sparse arrays (<xref rid="msy228-B17" ref-type="bibr">Tewarson 1973</xref>), but those details are entirely hidden by SLiM, providing a way of implementing spatial interactions such as spatial competition and spatial mate choice that is both simple and fast.</p>
      <p>Spatial maps are not represented with a separate class; instead, they are attached to subpopulations. A new spatial map can be defined with a call to the <monospace>defineSpatialMap()</monospace> method, and the value of a particular spatial map at a given point can then be queried with <monospace>spatialMapValue()</monospace>. Any number of spatial maps may be attached to a subpopulation; multiple maps are distinguished from each other by name. Each map defines a grid of values (of any resolution) that is superimposed across the spatial bounds of the subpopulation, either with or without interpolation of values between grid points. The scale of the map values, and the meaning attached to them, is entirely up to the model to define. One map might define elevation across the landscape, another temperature, and each of those maps might have consequences for survival, or fecundity, or movement, or any other aspect of the model.</p>
      <p>Since much of this may seem rather abstract, we have again supplied two concrete examples (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 3</xref> and <xref ref-type="supplementary-material" rid="sup1">4</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first model is of a basic spatial population with local mate choice and competition; the second model introduces a heterogenous landscape and spatial extinction/recolonization dynamics.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>We have presented SLiM 3, a new major release of the SLiM forward genetic simulation framework. SLiM 3 provides many improvements over previous versions of SLiM, which are described in detail in the comprehensive documentation. Here we have focused on the two major features that enable SLiM 3 models to go beyond the limitations and assumptions of the Wright–Fisher model upon which all previous versions were based: the nonWF model type, and support for continuous space.</p>
    <p>The nonWF model type affords the model control over each individual mating event. This makes it easy to control model characteristics such as mate-choice behavior, fecundity, and individual variation in reproduction. In nonWF models, fitness influences survival, not mating probability, by default, which allows more natural and realistic population dynamics. Other important model features that are relevant for realistic ecology, such as overlapping generations, age structure, and realistic migration/dispersal behavior, also emerge naturally in this design. However, the option to construct a WF model, as in previous SLiM versions, remains; this can be useful particularly when one wishes to compare a forward simulation model to an analytical model based upon Wright–Fisher assumptions.</p>
    <p>Similarly, SLiM 3 provides the option of incorporating continuous space into a model, but models of discrete subpopulations connected by migration are also still supported. When continuous space is enabled, SLiM 3 provides a variety of useful tools for spatial modeling, such as spatial maps, which can define landscape characteristics that influence model dynamics, and a spatial interaction engine that can efficiently calculate interaction strengths between individuals and find nearby neighbors of an individual. SLiMgui also provides helpful visualizations for such models, making it easy to observe the dynamics that emerge from spatiality.</p>
    <p>It should be emphasized that these features really dovetail with each other; in particular, ecologically realistic models involving continuous space should almost always be nonWF models. This is because the WF model imposes global population regulation upon the simulation; an overall size is set for each subpopulation, such that if density increases in one area of space (due to immigration, for example), absolute fitness will effectively decrease across the whole landscape. It is possible to compensate for this with appropriate fitness scaling, but it becomes quite complex if there is variation in local carrying capacity, immigration and emigration rates, variation in fecundity, etc.; the externally imposed population size of WF models is simply not designed to accommodate locally determined population density. The emergent population size and density in nonWF models, on the other hand, automatically accounts for whatever factors influence birth and death in the model. This is the reason that both of the continuous-space examples we presented are nonWF models; the influence upon local density of the sweep of a beneficial mutation in Example 3, or of the occasional disasters of Example 4, would be extremely difficult to model in a WF framework.</p>
    <p>Many other new features of SLiM 3 have not been substantially discussed here. We urge all users to read about tree-sequence recording, which we believe to be a revolutionary new method that will considerably extend the horizon of what is possible in forward simulation (<xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM manual (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>) now contains recipes and reference documentation for other new features, and the Eidos manual (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>) now documents new additions to the Eidos language. It is worth noting particularly that a great deal of optimization work has gone into SLiM 3, and it is generally much faster than previous versions, especially for large models with long chromosomes, which can be orders of magnitude faster than in previous versions. We have provided a performance comparison (<xref ref-type="supplementary-material" rid="sup1">supplementary results</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>) that illustrates these benefits and the performance tradeoffs involved with nonWF models and continuous space.</p>
    <p>SLiM 3 is free, licensed under the GNU GPL, and is available on GitHub. Most users, however, will wish to download the release version from <ext-link ext-link-type="uri" xlink:href="https://messerlab.org/slim/">https://messerlab.org/slim/</ext-link>; the extensive manuals, with many examples, can be downloaded from the same website. We also encourage SLiM users to subscribe to the slim-discuss list at <ext-link ext-link-type="uri" xlink:href="http://bit.ly/slim-discuss">http://bit.ly/slim-discuss</ext-link>, where new versions are announced and users can ask questions and get help. The features that we have focused on here, nonWF models and continuous space, will enable many modeling scenarios that would have been difficult or impossible to model in previous versions of SLiM. We hope this will open up new frontiers in both applied and theoretical research.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Molecular Biology and Evolution</italic> online.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="msy228_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="AK1">
    <title>Acknowledgments</title>
    <p>We thank Jared Galloway, Jerome Kelleher, and Peter Ralph for their work on the tree-sequence recording feature of SLiM 3. Thanks also to Jorge Amaya, Bill Amos, Jaime Ashander, Hannes Becher, Emma Berdan, Yoann Buoro, Deborah Charlesworth, Jean Cury, A.P. Jason de Koning, Emily Dennis, Jordan Rohmeyer Dherby, Jared Galloway, Jesse Garcia, Kimberley Gilbert, Alexandre Harris, Rebecca Harris, Ding He, Kathryn Hodgins, Christian Huber, Melissa Jane Hubisz, Jacob Malte Jensen, Jerome Kelleher, Bhavin Khatri, Bernard Kim, Athanasios Kousathanas, Benjamin Laenen, Stefan Laurent, Eugenio Lopez, Kathleen Lotterhos, Mikhail Matz, Rupert Mazzucco, Maéva Mollion, Miguel Navascués, Greg Owens, Denis Pierron, Peter Ralph, David Rinker, Murillo Fernando Rodrigues, Andrew Sackman, Aaron Sams, Kieran Samuk, Onuralp Söylemez, Kevin Thornton, Robert Unckless, Christos Vlachos, Silu Wang, Aaron Wolf, Justin Yeh, members of the Messer lab, and the stackoverflow community for their valuable comments. Thanks to the editor and two anonymous reviewers, and to Peter Ralph, for helpful comments on previous versions of this manuscript. This study was supported by funds from the College of Agriculture and Life Sciences at Cornell University, New Zealand’s Predator Free 2050 program (grant number SS/05/01), and the National Institutes of Health (grant number R01GM127418) to P.W.M.</p>
  </ack>
  <ref-list id="RL1">
    <title>References</title>
    <ref id="msy228-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bank</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Ewing</surname><given-names>GB</given-names></name>, <name name-style="western"><surname>Ferrer-Admettla</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Foll</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Jensen</surname><given-names>JD</given-names></name></person-group><year>2014</year><article-title>Thinking too positive? Revisiting current methods of population genetic selection inference</article-title>. <source>Trends Genet</source>. <volume>30</volume><issue>12</issue>:<fpage>540</fpage>–<lpage>546</lpage>.<pub-id pub-id-type="pmid">25438719</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B2">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Begon</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Townsend</surname><given-names>CR</given-names></name>, <name name-style="western"><surname>Harper</surname><given-names>JL</given-names></name></person-group><year>2006</year><source>Ecology: from individuals to ecosystems</source>.
<publisher-loc>Hoboken (NJ)</publisher-loc>:
<publisher-name>Wiley-Blackwell</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bentley</surname><given-names>JL</given-names></name></person-group><year>1975</year><article-title>Multidimensional binary search trees used for associative searching</article-title>. <source>Commun ACM</source>. <volume>18</volume><issue>9</issue>:<fpage>509</fpage>–<lpage>517</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Carvajal-Rodriguez</surname><given-names>A</given-names></name></person-group><year>2010</year><article-title>Simulation of genes and genomes forward in time</article-title>. <source>Curr Genomics</source>. <volume>11</volume><issue>1</issue>:<fpage>58</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">20808525</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fisher</surname><given-names>RA</given-names></name></person-group><year>1922</year><article-title>On the dominance ratio</article-title>. <source>P Roy Soc Edinb</source>. <volume>42</volume>:<fpage>321</fpage>–<lpage>341</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grimm</surname><given-names>V</given-names></name></person-group><year>2002</year><article-title>Visual debugging: a way of analyzing, understanding and communicating bottom-up simulation models in ecology</article-title>. <source>Nat Resour Model</source>. <volume>15</volume><issue>1</issue>:<fpage>23</fpage>–<lpage>38</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B7">
      <mixed-citation publication-type="web"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name></person-group><year>2016</year><source>Eidos: A Simple Scripting Language</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/Eidos_Manual.pdf">http://benhaller.com/slim/Eidos_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B8">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2016</year><source>SLiM: An Evolutionary Simulation Framework</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/SLiM_Manual.pdf">http://benhaller.com/slim/SLiM_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2017</year><article-title>SLiM 2: flexible, interactive forward genetic simulations</article-title>. <source>Mol Biol Evol</source>. <volume>34</volume><issue>1</issue>:<fpage>230</fpage>–<lpage>240</lpage>.<pub-id pub-id-type="pmid">27702775</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Galloway</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Tree-sequence recording in SLiM opens new horizons for forward-time simulation of whole genomes</article-title>. <source>Mol Ecol Resour</source>, Advance Access published November 22, 2018, doi:10.1111/1755-0998.12968.</mixed-citation>
    </ref>
    <ref id="msy228-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hixon</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Pacala</surname><given-names>SW</given-names></name>, <name name-style="western"><surname>Sandin</surname><given-names>SA</given-names></name></person-group><year>2002</year><article-title>Population regulation: historical context and contemporary challenges of open vs closed systems</article-title>. <source>Ecology</source><volume>83</volume><issue>6</issue>:<fpage>1490</fpage>–<lpage>1508</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hoban</surname><given-names>S</given-names></name></person-group><year>2014</year><article-title>An overview of the utility of population simulation software in molecular ecology</article-title>. <source>Mol Ecol</source>. <volume>23</volume><issue>10</issue>:<fpage>2383</fpage>–<lpage>2401</lpage>.<pub-id pub-id-type="pmid">24689878</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Etheridge</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>McVean</surname><given-names>G</given-names></name></person-group><year>2016</year><article-title>Efficient coalescent simulation and genealogical analysis for large sample sizes</article-title>. <source>PLoS Comput Biol</source>. <volume>12</volume><issue>5</issue>:<fpage>e1004842</fpage>.<pub-id pub-id-type="pmid">27145223</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name>, <name name-style="western"><surname>Ashander</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Efficient pedigree recording for fast population genetics simulation</article-title>. <source>PLoS Comput Biol</source>. 14(11):e1006581.</mixed-citation>
    </ref>
    <ref id="msy228-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2013</year><article-title>SLiM: simulating evolution with selection and linkage</article-title>. <source>Genetics</source><volume>194</volume><issue>4</issue>:<fpage>1037</fpage>–<lpage>1039</lpage>.<pub-id pub-id-type="pmid">23709637</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B16">
      <mixed-citation publication-type="web">NCI (National Cancer Institute). <year>2018</year>
<source>Genetic simulation resources (GSR)</source>. Available from: <ext-link ext-link-type="uri" xlink:href="https://popmodels.cancercontrol.cancer.gov/gsr/">https://popmodels.cancercontrol.cancer.gov/gsr/</ext-link>, last accessed December 26, 2018.</mixed-citation>
    </ref>
    <ref id="msy228-B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Tewarson</surname><given-names>RP</given-names></name></person-group><year>1973</year><source>Sparse matrices</source>.
<publisher-loc>New York</publisher-loc>:
<publisher-name>Academic Press</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name></person-group><year>2014</year><article-title>A C++ template library for efficient forward-time population genetic simulation of large populations</article-title>. <source>Genetics</source><volume>198</volume><issue>1</issue>:<fpage>157</fpage>–<lpage>166</lpage>.<pub-id pub-id-type="pmid">24950894</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wright</surname><given-names>S</given-names></name></person-group><year>1931</year><article-title>Evolution in Mendelian populations</article-title>. <source>Genetics</source><volume>16</volume><issue>2</issue>:<fpage>97</fpage>–<lpage>159</lpage>.<pub-id pub-id-type="pmid">17246615</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yuan</surname><given-names>X</given-names></name>, <name name-style="western"><surname>Miller</surname><given-names>DJ</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Herrington</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Y</given-names></name></person-group><year>2012</year><article-title>An overview of population genetic data simulation</article-title>. <source>J Comput Biol</source>. <volume>19</volume><issue>1</issue>:<fpage>42</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">22149682</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Mol Biol Evol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Mol. Biol. Evol</journal-id>
    <journal-id journal-id-type="publisher-id">molbev</journal-id>
    <journal-title-group>
      <journal-title>Molecular Biology and Evolution</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0737-4038</issn>
    <issn pub-type="epub">1537-1719</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6389312</article-id>
    <article-id pub-id-type="doi">10.1093/molbev/msy228</article-id>
    <article-id pub-id-type="publisher-id">msy228</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Resources</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SLiM 3: Forward Genetic Simulations Beyond the Wright–Fisher Model</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Haller</surname>
          <given-names>Benjamin C</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>bhaller@benhaller.com</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Messer</surname>
          <given-names>Philipp W</given-names>
        </name>
        <xref ref-type="corresp" rid="msy228-cor1"/>
        <!--<email>messer@cornell.edu</email>-->
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Hernandez</surname>
          <given-names>Ryan</given-names>
        </name>
        <role>Associate Editor</role>
        <xref ref-type="aff" rid="msy228-aff1"/>
      </contrib>
    </contrib-group>
    <aff id="msy228-aff1">Department of Biological Statistics and Computational Biology, Cornell University, Ithaca, NY</aff>
    <author-notes>
      <corresp id="msy228-cor1"><bold>Corresponding authors:</bold> E-mails: <email>bhaller@benhaller.com</email>; <email>messer@cornell.edu</email>.</corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>3</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-01-18">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>3</issue>
    <fpage>632</fpage>
    <lpage>637</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press on behalf of the Society for Molecular Biology and Evolution.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="msy228.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>With the desire to model population genetic processes under increasingly realistic scenarios, forward genetic simulations have become a critical part of the toolbox of modern evolutionary biology. The SLiM forward genetic simulation framework is one of the most powerful and widely used tools in this area. However, its foundation in the Wright–Fisher model has been found to pose an obstacle to implementing many types of models; it is difficult to adapt the Wright–Fisher model, with its many assumptions, to modeling ecologically realistic scenarios such as explicit space, overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and so forth. In response to this need, we here introduce SLiM 3, which contains two key advancements aimed at abolishing these limitations. First, the new non-Wright–Fisher or “nonWF” model type provides a much more flexible foundation that allows the easy implementation of all of the above scenarios and many more. Second, SLiM 3 adds support for continuous space, including spatial interactions and spatial maps of environmental variables. We provide a conceptual overview of these new features, and present several example models to illustrate their use.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>eco-evolutionary dynamics</kwd>
      <kwd>whole-population modeling</kwd>
      <kwd>tree sequence recording</kwd>
      <kwd>spatial population dynamics</kwd>
      <kwd>landscape modeling</kwd>
      <kwd>genealogy simulation</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">College of Agriculture and Life Sciences</named-content>
        </funding-source>
        <award-id>SS/05/01</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">National Institutes of Health</named-content>
          <named-content content-type="funder-identifier">10.13039/100000002</named-content>
        </funding-source>
        <award-id>R01GM127418</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Forward genetic simulations are playing an increasingly important role in evolutionary biology due to their ability to model a wide range of population genetic mechanisms and include a high level of ecological detail in the simulated scenario (<xref rid="msy228-B4" ref-type="bibr">Carvajal-Rodriguez 2010</xref>; <xref rid="msy228-B20" ref-type="bibr">Yuan et al. 2012</xref>; <xref rid="msy228-B1" ref-type="bibr">Bank et al. 2014</xref>; <xref rid="msy228-B12" ref-type="bibr">Hoban 2014</xref>; <xref rid="msy228-B18" ref-type="bibr">Thornton 2014</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM forward genetic simulation framework (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>) has proved to be a powerful tool for this purpose, and constitutes one of the most widely used computational frameworks for implementing such simulations at the present time.</p>
    <p>The National Cancer Institute’s Genetic Simulation Resources (GSR) website provides a comprehensive database of genetic simulation software tools (<xref rid="msy228-B16" ref-type="bibr">NCI 2018</xref>). At the time of writing, the GSR listed 42 packages supporting forward simulation; this includes many tools that are specialized for a particular type of model, as well as some tools that support a wide variety of evolutionary scenarios. SLiM’s popularity among these tools is based primarily upon three key attributes. First, it is highly scriptable, allowing the mechanics of the SLiM framework to be fundamentally modified and extended in many ways. At the same time, even fairly sophisticated evolutionary models can often be expressed in a page of code or less, since all of the core simulation code is provided by SLiM, yielding tremendous benefits compared with writing simulations from scratch in a language such as C++. Second, SLiM includes a full-featured graphical modeling environment, SLiMgui, that makes interactive model development, visual debugging, and hands-on exploration easy, with large benefits throughout the modeling process (<xref rid="msy228-B6" ref-type="bibr">Grimm 2002</xref>). And third, a great deal of work has been devoted to optimizing SLiM, making it run as efficiently as possible across a wide variety of simulation scenarios; these speed benefits are inherited for free by any model running within SLiM. The GSR does not provide performance comparisons, so users with performance concerns should run their own tests before settling upon a particular package; for comparing the features available in different packages, however, the GSR can be a very helpful resource.</p>
    <p>In our contact with users of SLiM over the past years, one category of questions has predominated: how can SLiM simulations be constructed that go beyond the standard Wright–Fisher or “WF” model (<xref rid="msy228-B5" ref-type="bibr">Fisher 1922</xref>; <xref rid="msy228-B19" ref-type="bibr">Wright 1931</xref>)? This model, which has provided the conceptual foundation for all previous versions of SLiM (<xref rid="msy228-B15" ref-type="bibr">Messer 2013</xref>; <xref rid="msy228-B9" ref-type="bibr">Haller and Messer 2017</xref>), is defined by a number of simplifying assumptions. For example, the model assumes that generations are nonoverlapping and discrete, without any age structure or age-based differentiation among individuals. Another critical assumption of the model lies in the rules governing the generation of offspring from the parental population; in the standard WF model, the parents for each child in the next generation are drawn randomly from the previous generation with a probability proportional to each individual’s fitness. This makes it difficult to model variation in litter size, monogamous mating, and other such phenomena. Furthermore, since population size is an externally determined parameter in the WF model, it is often not clear how scenarios in which population size is an emergent variable—depending, for instance, on factors such as mean fitness, available habitat, and colonization history—should be accurately modeled in a WF framework.</p>
    <p>Given the scope of the simplifying assumptions underlying the WF model, the desire among SLiM’s users to go beyond this model takes many forms, but they might be said to unify around the idea of more realistic spatial and ecological dynamics. For example, users have inquired whether it is possible to model the explicit movement of individuals over a continuous landscape, life cycles with overlapping generations, individual variation in reproduction, density-dependent population regulation, individual variation in dispersal or migration, local extinction and recolonization, mating between subpopulations, age structure, fitness-based survival and hard selection, emergent sex ratios, and more. Because SLiM 2 was already highly scriptable, and thus many of its internal dynamics could be modified through scripting, it was sometimes possible to work around the limitations inherited from the WF model; but those workarounds are often clumsy and laborious, and some types of models have simply proved difficult or impossible to implement in SLiM 2. Fundamentally, the Wright–Fisher model is not an ecological model, and so if we are to progress toward uniting genetics and evolutionary biology with ecology, the need for a more flexible foundation is clear.</p>
    <p>In response to this need, we here introduce SLiM 3, which contains two major advances squarely aimed at these limitations. First, in addition to the traditional Wright–Fisher or WF model type of previous SLiM versions, SLiM 3 supports a new non-Wright–Fisher or “nonWF” model type that provides much greater flexibility in how key processes such as mate choice and reproduction, migration, fitness evaluation, survival, population regulation, and other related areas are implemented, allowing the explicit linking of evolutionary dynamics with ecological patterns and processes. Second, in addition to support for discrete subpopulations connected by migration, SLiM 3 now supports models that occupy continuous spatial landscapes, including built-in support for spatial maps that describe environmental characteristics, and for local spatial interactions such as spatial competition and mate choice. (Support for spatial models was introduced in SLiM 2.3, in fact, but is previously unpublished.)</p>
    <p>SLiM 3 contains many other important additions as well. Most prominently, it adds support for “tree-sequence recording” (also called “pedigree recording”), a method of recording ancestry information in forward simulations (<xref rid="msy228-B13" ref-type="bibr">Kelleher et al. 2016</xref>, <xref rid="msy228-B14" ref-type="bibr">2018</xref>). Tree-sequence recording can decrease simulation runtimes by several orders of magnitude, by allowing neutral mutations to be overlaid efficiently after forward simulation has completed and by allowing neutral burn-in to be done extremely efficiently with “recapitation”, and it provides several other major benefits as well (<xref rid="msy228-B14" ref-type="bibr">Kelleher et al. 2018</xref>; <xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). SLiM 3’s support for tree-sequence recording is discussed further in <xref rid="msy228-B10" ref-type="bibr">Haller et al. (2018)</xref>. Other important changes in SLiM 3 since SLiM 2.0 (the last published version) include many additions and improvements to the Eidos scripting language (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>), many new methods provided by SLiM’s Eidos classes (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>), and many improvements to the SLiMgui graphical modeling environment. SLiM 3 also contains a great deal of optimization work to make simulations run faster. A few more specific improvements are worth mentioning too: a new <monospace>Individual</monospace> class representing simulated individuals, support for a variable mutation rate along the chromosome, a new <monospace>recombination()</monospace> callback mechanism for modifying recombination breakpoints at an individual level, and VCF format output, among others (a complete change list may be found in the SLiM manual).</p>
    <p>Here, however, we will focus on what we believe to be the most important new features in SLiM 3: nonWF models and continuous space, the features that enable users to go beyond the Wright–Fisher model in SLiM. We will provide a conceptual overview of these features, and will demonstrate them with several examples.</p>
    <sec>
      <title>The nonWF Simulation Model</title>
      <p>Perhaps the easiest way to understand nonWF models is by looking at how they differ from the standard WF model type. The most important differences are in the following broad areas:
<list list-type="bullet"><list-item><p><bold>Age structure.</bold> In WF models, generations are discrete and nonoverlapping; all individuals live for a single generation, during which they reproduce and then die. In nonWF models, by contrast, generations can be overlapping; individuals can live for multiple generations, until they die due to some cause (typically selection, old age, or bad luck). More fundamentally, the concept of a “generation” has been broadened. In nonWF models, each generation represents an opportunity to reproduce and/or die—a discretization of those events in time, providing a temporal structure to the model that could be based upon hours, days, seasons, or decades, but that is not necessarily related to the expected lifespan of individuals. Individuals in nonWF models have an age (measured in generations), the population thus has an age structure, and the model can implement whatever age-related behaviors are desired. The generation cycle in nonWF models is contrasted against that of WF models in <xref ref-type="fig" rid="msy228-F1">figure 1</xref>
.</p></list-item><list-item><p><bold>Offspring generation.</bold> In WF models, offspring are generated by drawing parents from the individuals in the previous generation. The population size is a parameter of the model, determining how many offspring are to be generated in each generation; the selfing rate, cloning rate, and sex ratio are, similarly, population-level parameters. In nonWF models, by contrast, the script is much more directly in charge of the process of offspring generation; the script requests the generation of each offspring based upon individual state rather than population-level parameters. Calls are made from SLiM to <monospace>reproduction()</monospace> callbacks defined in the model script, and those callbacks determine which individuals reproduce, how they choose a mate or mates (if any), how many offspring they have, and so forth. The population size, selfing rate, cloning rate, and sex ratio are therefore no longer population-level parameters; instead, they are emergent properties of the model, consequences of the rules specified in script for the individual-based reproduction dynamics. The population size, for example, becomes a result of the balance between birth rates and death rates, often (but not necessarily) regulated by density-dependent viability selection implemented in the model.</p></list-item><list-item><p><bold>Migration.</bold> In WF models, migration between populations is modeled by specifying the fraction of offspring in a given target population that stem from parents in a given source population. Since this model of migration leads to offspring that occupy a different population from their parents, it most closely resembles a model of juvenile migration. In nonWF models, by contrast, migration is again handled more directly by the model script, which may call the <monospace>takeMigrants()</monospace> method to move individuals to a new population at any point in the generation cycle, enabling models where individuals migrate as juveniles, as adults, or at multiple times during their life. This focus on individual-level migration, rather than population-level migration rates, allows for the probability that a given individual will migrate to depend much more flexibly upon individual-level state. A wide range of scenarios can be modeled this way, such as sex-dependent migration, habitat choice, or condition-dependent migration. In such models, the overall migration rate between two populations is again an emergent property that depends on the specific composition of the population and the migration rules specified in script, rather than on a population-level rate.</p></list-item><list-item><p><bold>Fitness.</bold> In WF models, fitness influences the probability that an individual will be chosen as a parent for a child in the next generation; there is no built-in concept of selection-induced mortality. Fitness is therefore relative, resulting in a model of so-called “soft” selection in which greater success for some individuals necessarily comes at the price of diminished success for others. The overall population size is not affected by selection, since it is a model parameter rather than an emergent property of the underlying evolutionary and ecological dynamics. In nonWF models, by contrast, fitness directly influences the probability of survival for each individual during each generation; individuals with low fitness are less likely to survive. Fitness is therefore absolute, and selection is “hard” in such a model by default; as a result, population size will vary naturally with mean population fitness (although this may be compensated for by density-dependent selection or fecundity). Of course one may still model the effects of genetics upon reproductive success or fecundity, in a <monospace>reproduction()</monospace> callback, if desired.</p></list-item></list></p>
      <fig id="msy228-F1" orientation="portrait" position="float">
        <label><sc>Fig.</sc> 1.</label>
        <caption>
          <p>A comparison of the generation cycles in WF models (left) versus nonWF models (right). Note that nonWF models have a viability/survival selection phase, immediately after fitness value recalculation, whereas in WF models fitness influences mating success and there is no concept of mortality-based selection. Events and callbacks are shown in red; these are points in the generation cycle when SLiM will call out to the script to provide custom behavior. So-called <monospace>early()</monospace> and <monospace>late()</monospace> events provide commonly used points in the generation cycle when the model script can intervene in SLiM’s operation, toward the beginning and the end of each generation respectively, to do model-specific tasks—generate output, handle interactions between individuals, move individuals in space, and so forth. As this figure illustrates, in WF models <monospace>early()</monospace> events come before offspring generation and <monospace>late()</monospace> events come after; in nonWF models, <monospace>early()</monospace> events come after offspring generation, whereas <monospace>late()</monospace> events, by virtue of being at the end of the generation cycle, in effect come before offspring generation (when it occurs at the beginning of the next generation). Callbacks, on the other hand, allow the script to override specific aspects of SLiM’s behavior, such as choosing mates, customizing generated offspring, calculating fitness effects, or generating custom recombination breakpoints. Most of these callbacks exist in both WF and nonWF models, but <monospace>mateChoice()</monospace> callbacks exist only in WF models, whereas <monospace>reproduction()</monospace> callbacks are only in nonWF models and handle mate choice as well as other reproduction-related duties.</p>
        </caption>
        <graphic xlink:href="msy228f1"/>
      </fig>
      <p>These differences can be summarized by saying that nonWF models are more individual-based, more script-controlled, more emergent, and therefore more biologically realistic. However, they are also often more complex in certain ways, primarily because of the need to implement a <monospace>reproduction()</monospace> callback and to introduce some explicit mechanism of population regulation. In effect, with the power to more precisely control reproduction and population regulation comes the responsibility to more explicitly think about and specify those phenomena. Populations can be regulated by any of a wide variety of mechanisms, from density-dependent fecundity to resource competition to predation to territorial behavior to natural disasters (<xref rid="msy228-B11" ref-type="bibr">Hixon et al. 2002</xref>; <xref rid="msy228-B2" ref-type="bibr">Begon et al. 2006</xref>). Any of these mechanisms can be implemented in a nonWF model, but it is not done for you as it is in a WF model; the user must decide what mechanism(s) of population regulation are desired and implement them in the model’s script.</p>
      <p>To provide an illustration of the relative ease with which such nonWF models can be specified in SLiM, we have supplied two example recipes (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 1</xref> and <xref ref-type="supplementary-material" rid="sup1">2</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first example is a very basic nonWF model in a population where viability depends on the carrying capacity of the population; the second example is a more sophisticated nonWF model with monogamous mating and effects of age on mating and fitness.</p>
    </sec>
    <sec>
      <title>Continuous Space Models and Spatial Interactions</title>
      <p>Continuous-space models in SLiM 3 are quite straightforward at the conceptual level. Continuous space is enabled with a call to <monospace>initializeSLiMOptions()</monospace> that provides a dimensionality: "<monospace>x</monospace>" for one spatial dimension, "<monospace>xy</monospace>" for two, or "<monospace>xyz</monospace>" for three; we will focus here on 2D models since that is probably the most common case. Individuals then have properties representing their <monospace>x</monospace> and <monospace>y</monospace> coordinates in the continuous 2D space, which can be accessed and set. The spatial boundaries of each subpopulation can be configured by the user; by default, the landscape will span the interval [0,1] in each dimension. Setting individual positions is the responsibility of the model, and the model determines what use, if any, is made of those positions; there is no automatic consequence of spatiality upon model dynamics. However, since there are common ways in which models often want spatiality to influence dynamics, two additional facilities are provided: interaction types, and spatial maps.</p>
      <p>Interaction types are supported with a new Eidos class, <monospace>InteractionType</monospace>. An interaction type is defined with a call to <monospace>initializeInteractionType()</monospace>, and specifies two things: a distance metric that determines the interaction distance between two individuals, and an interaction formula that determines how the strength of interaction between two individuals varies with the distance between them. Once an interaction type is set up and evaluated, spatial queries can be made: what are the <italic>n</italic> closest neighbors to a given individual, what is the strength of interaction between individuals <italic>i</italic> and <italic>j</italic>, what is the total interaction strength exerted upon individual <italic>i</italic> by all other individuals in its subpopulation, and so forth. These queries are handled internally by highly optimized data structures such as <italic>k</italic>-d trees (<xref rid="msy228-B3" ref-type="bibr">Bentley 1975</xref>) and sparse arrays (<xref rid="msy228-B17" ref-type="bibr">Tewarson 1973</xref>), but those details are entirely hidden by SLiM, providing a way of implementing spatial interactions such as spatial competition and spatial mate choice that is both simple and fast.</p>
      <p>Spatial maps are not represented with a separate class; instead, they are attached to subpopulations. A new spatial map can be defined with a call to the <monospace>defineSpatialMap()</monospace> method, and the value of a particular spatial map at a given point can then be queried with <monospace>spatialMapValue()</monospace>. Any number of spatial maps may be attached to a subpopulation; multiple maps are distinguished from each other by name. Each map defines a grid of values (of any resolution) that is superimposed across the spatial bounds of the subpopulation, either with or without interpolation of values between grid points. The scale of the map values, and the meaning attached to them, is entirely up to the model to define. One map might define elevation across the landscape, another temperature, and each of those maps might have consequences for survival, or fecundity, or movement, or any other aspect of the model.</p>
      <p>Since much of this may seem rather abstract, we have again supplied two concrete examples (<xref ref-type="supplementary-material" rid="sup1">supplementary examples 3</xref> and <xref ref-type="supplementary-material" rid="sup1">4</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>). The first model is of a basic spatial population with local mate choice and competition; the second model introduces a heterogenous landscape and spatial extinction/recolonization dynamics.</p>
    </sec>
  </sec>
  <sec sec-type="discussion">
    <title>Discussion</title>
    <p>We have presented SLiM 3, a new major release of the SLiM forward genetic simulation framework. SLiM 3 provides many improvements over previous versions of SLiM, which are described in detail in the comprehensive documentation. Here we have focused on the two major features that enable SLiM 3 models to go beyond the limitations and assumptions of the Wright–Fisher model upon which all previous versions were based: the nonWF model type, and support for continuous space.</p>
    <p>The nonWF model type affords the model control over each individual mating event. This makes it easy to control model characteristics such as mate-choice behavior, fecundity, and individual variation in reproduction. In nonWF models, fitness influences survival, not mating probability, by default, which allows more natural and realistic population dynamics. Other important model features that are relevant for realistic ecology, such as overlapping generations, age structure, and realistic migration/dispersal behavior, also emerge naturally in this design. However, the option to construct a WF model, as in previous SLiM versions, remains; this can be useful particularly when one wishes to compare a forward simulation model to an analytical model based upon Wright–Fisher assumptions.</p>
    <p>Similarly, SLiM 3 provides the option of incorporating continuous space into a model, but models of discrete subpopulations connected by migration are also still supported. When continuous space is enabled, SLiM 3 provides a variety of useful tools for spatial modeling, such as spatial maps, which can define landscape characteristics that influence model dynamics, and a spatial interaction engine that can efficiently calculate interaction strengths between individuals and find nearby neighbors of an individual. SLiMgui also provides helpful visualizations for such models, making it easy to observe the dynamics that emerge from spatiality.</p>
    <p>It should be emphasized that these features really dovetail with each other; in particular, ecologically realistic models involving continuous space should almost always be nonWF models. This is because the WF model imposes global population regulation upon the simulation; an overall size is set for each subpopulation, such that if density increases in one area of space (due to immigration, for example), absolute fitness will effectively decrease across the whole landscape. It is possible to compensate for this with appropriate fitness scaling, but it becomes quite complex if there is variation in local carrying capacity, immigration and emigration rates, variation in fecundity, etc.; the externally imposed population size of WF models is simply not designed to accommodate locally determined population density. The emergent population size and density in nonWF models, on the other hand, automatically accounts for whatever factors influence birth and death in the model. This is the reason that both of the continuous-space examples we presented are nonWF models; the influence upon local density of the sweep of a beneficial mutation in Example 3, or of the occasional disasters of Example 4, would be extremely difficult to model in a WF framework.</p>
    <p>Many other new features of SLiM 3 have not been substantially discussed here. We urge all users to read about tree-sequence recording, which we believe to be a revolutionary new method that will considerably extend the horizon of what is possible in forward simulation (<xref rid="msy228-B10" ref-type="bibr">Haller et al. 2018</xref>). The SLiM manual (<xref rid="msy228-B8" ref-type="bibr">Haller and Messer 2016</xref>) now contains recipes and reference documentation for other new features, and the Eidos manual (<xref rid="msy228-B7" ref-type="bibr">Haller 2016</xref>) now documents new additions to the Eidos language. It is worth noting particularly that a great deal of optimization work has gone into SLiM 3, and it is generally much faster than previous versions, especially for large models with long chromosomes, which can be orders of magnitude faster than in previous versions. We have provided a performance comparison (<xref ref-type="supplementary-material" rid="sup1">supplementary results</xref>, <xref ref-type="supplementary-material" rid="sup1">Supplementary Material online</xref>) that illustrates these benefits and the performance tradeoffs involved with nonWF models and continuous space.</p>
    <p>SLiM 3 is free, licensed under the GNU GPL, and is available on GitHub. Most users, however, will wish to download the release version from <ext-link ext-link-type="uri" xlink:href="https://messerlab.org/slim/">https://messerlab.org/slim/</ext-link>; the extensive manuals, with many examples, can be downloaded from the same website. We also encourage SLiM users to subscribe to the slim-discuss list at <ext-link ext-link-type="uri" xlink:href="http://bit.ly/slim-discuss">http://bit.ly/slim-discuss</ext-link>, where new versions are announced and users can ask questions and get help. The features that we have focused on here, nonWF models and continuous space, will enable many modeling scenarios that would have been difficult or impossible to model in previous versions of SLiM. We hope this will open up new frontiers in both applied and theoretical research.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Molecular Biology and Evolution</italic> online.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>Supplementary Data</label>
      <media xlink:href="msy228_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="AK1">
    <title>Acknowledgments</title>
    <p>We thank Jared Galloway, Jerome Kelleher, and Peter Ralph for their work on the tree-sequence recording feature of SLiM 3. Thanks also to Jorge Amaya, Bill Amos, Jaime Ashander, Hannes Becher, Emma Berdan, Yoann Buoro, Deborah Charlesworth, Jean Cury, A.P. Jason de Koning, Emily Dennis, Jordan Rohmeyer Dherby, Jared Galloway, Jesse Garcia, Kimberley Gilbert, Alexandre Harris, Rebecca Harris, Ding He, Kathryn Hodgins, Christian Huber, Melissa Jane Hubisz, Jacob Malte Jensen, Jerome Kelleher, Bhavin Khatri, Bernard Kim, Athanasios Kousathanas, Benjamin Laenen, Stefan Laurent, Eugenio Lopez, Kathleen Lotterhos, Mikhail Matz, Rupert Mazzucco, Maéva Mollion, Miguel Navascués, Greg Owens, Denis Pierron, Peter Ralph, David Rinker, Murillo Fernando Rodrigues, Andrew Sackman, Aaron Sams, Kieran Samuk, Onuralp Söylemez, Kevin Thornton, Robert Unckless, Christos Vlachos, Silu Wang, Aaron Wolf, Justin Yeh, members of the Messer lab, and the stackoverflow community for their valuable comments. Thanks to the editor and two anonymous reviewers, and to Peter Ralph, for helpful comments on previous versions of this manuscript. This study was supported by funds from the College of Agriculture and Life Sciences at Cornell University, New Zealand’s Predator Free 2050 program (grant number SS/05/01), and the National Institutes of Health (grant number R01GM127418) to P.W.M.</p>
  </ack>
  <ref-list id="RL1">
    <title>References</title>
    <ref id="msy228-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bank</surname><given-names>C</given-names></name>, <name name-style="western"><surname>Ewing</surname><given-names>GB</given-names></name>, <name name-style="western"><surname>Ferrer-Admettla</surname><given-names>A</given-names></name>, <name name-style="western"><surname>Foll</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Jensen</surname><given-names>JD</given-names></name></person-group><year>2014</year><article-title>Thinking too positive? Revisiting current methods of population genetic selection inference</article-title>. <source>Trends Genet</source>. <volume>30</volume><issue>12</issue>:<fpage>540</fpage>–<lpage>546</lpage>.<pub-id pub-id-type="pmid">25438719</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B2">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Begon</surname><given-names>M</given-names></name>, <name name-style="western"><surname>Townsend</surname><given-names>CR</given-names></name>, <name name-style="western"><surname>Harper</surname><given-names>JL</given-names></name></person-group><year>2006</year><source>Ecology: from individuals to ecosystems</source>.
<publisher-loc>Hoboken (NJ)</publisher-loc>:
<publisher-name>Wiley-Blackwell</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bentley</surname><given-names>JL</given-names></name></person-group><year>1975</year><article-title>Multidimensional binary search trees used for associative searching</article-title>. <source>Commun ACM</source>. <volume>18</volume><issue>9</issue>:<fpage>509</fpage>–<lpage>517</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Carvajal-Rodriguez</surname><given-names>A</given-names></name></person-group><year>2010</year><article-title>Simulation of genes and genomes forward in time</article-title>. <source>Curr Genomics</source>. <volume>11</volume><issue>1</issue>:<fpage>58</fpage>–<lpage>61</lpage>.<pub-id pub-id-type="pmid">20808525</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fisher</surname><given-names>RA</given-names></name></person-group><year>1922</year><article-title>On the dominance ratio</article-title>. <source>P Roy Soc Edinb</source>. <volume>42</volume>:<fpage>321</fpage>–<lpage>341</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Grimm</surname><given-names>V</given-names></name></person-group><year>2002</year><article-title>Visual debugging: a way of analyzing, understanding and communicating bottom-up simulation models in ecology</article-title>. <source>Nat Resour Model</source>. <volume>15</volume><issue>1</issue>:<fpage>23</fpage>–<lpage>38</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B7">
      <mixed-citation publication-type="web"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name></person-group><year>2016</year><source>Eidos: A Simple Scripting Language</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/Eidos_Manual.pdf">http://benhaller.com/slim/Eidos_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B8">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2016</year><source>SLiM: An Evolutionary Simulation Framework</source>. Available from: <ext-link ext-link-type="uri" xlink:href="http://benhaller.com/slim/SLiM_Manual.pdf">http://benhaller.com/slim/SLiM_Manual.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="msy228-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2017</year><article-title>SLiM 2: flexible, interactive forward genetic simulations</article-title>. <source>Mol Biol Evol</source>. <volume>34</volume><issue>1</issue>:<fpage>230</fpage>–<lpage>240</lpage>.<pub-id pub-id-type="pmid">27702775</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Haller</surname><given-names>BC</given-names></name>, <name name-style="western"><surname>Galloway</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Tree-sequence recording in SLiM opens new horizons for forward-time simulation of whole genomes</article-title>. <source>Mol Ecol Resour</source>, Advance Access published November 22, 2018, doi:10.1111/1755-0998.12968.</mixed-citation>
    </ref>
    <ref id="msy228-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hixon</surname><given-names>MA</given-names></name>, <name name-style="western"><surname>Pacala</surname><given-names>SW</given-names></name>, <name name-style="western"><surname>Sandin</surname><given-names>SA</given-names></name></person-group><year>2002</year><article-title>Population regulation: historical context and contemporary challenges of open vs closed systems</article-title>. <source>Ecology</source><volume>83</volume><issue>6</issue>:<fpage>1490</fpage>–<lpage>1508</lpage>.</mixed-citation>
    </ref>
    <ref id="msy228-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hoban</surname><given-names>S</given-names></name></person-group><year>2014</year><article-title>An overview of the utility of population simulation software in molecular ecology</article-title>. <source>Mol Ecol</source>. <volume>23</volume><issue>10</issue>:<fpage>2383</fpage>–<lpage>2401</lpage>.<pub-id pub-id-type="pmid">24689878</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Etheridge</surname><given-names>AM</given-names></name>, <name name-style="western"><surname>McVean</surname><given-names>G</given-names></name></person-group><year>2016</year><article-title>Efficient coalescent simulation and genealogical analysis for large sample sizes</article-title>. <source>PLoS Comput Biol</source>. <volume>12</volume><issue>5</issue>:<fpage>e1004842</fpage>.<pub-id pub-id-type="pmid">27145223</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kelleher</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name>, <name name-style="western"><surname>Ashander</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Ralph</surname><given-names>PL</given-names></name></person-group><year>2018</year><article-title>Efficient pedigree recording for fast population genetics simulation</article-title>. <source>PLoS Comput Biol</source>. 14(11):e1006581.</mixed-citation>
    </ref>
    <ref id="msy228-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Messer</surname><given-names>PW</given-names></name></person-group><year>2013</year><article-title>SLiM: simulating evolution with selection and linkage</article-title>. <source>Genetics</source><volume>194</volume><issue>4</issue>:<fpage>1037</fpage>–<lpage>1039</lpage>.<pub-id pub-id-type="pmid">23709637</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B16">
      <mixed-citation publication-type="web">NCI (National Cancer Institute). <year>2018</year>
<source>Genetic simulation resources (GSR)</source>. Available from: <ext-link ext-link-type="uri" xlink:href="https://popmodels.cancercontrol.cancer.gov/gsr/">https://popmodels.cancercontrol.cancer.gov/gsr/</ext-link>, last accessed December 26, 2018.</mixed-citation>
    </ref>
    <ref id="msy228-B17">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Tewarson</surname><given-names>RP</given-names></name></person-group><year>1973</year><source>Sparse matrices</source>.
<publisher-loc>New York</publisher-loc>:
<publisher-name>Academic Press</publisher-name>.</mixed-citation>
    </ref>
    <ref id="msy228-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thornton</surname><given-names>KR</given-names></name></person-group><year>2014</year><article-title>A C++ template library for efficient forward-time population genetic simulation of large populations</article-title>. <source>Genetics</source><volume>198</volume><issue>1</issue>:<fpage>157</fpage>–<lpage>166</lpage>.<pub-id pub-id-type="pmid">24950894</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wright</surname><given-names>S</given-names></name></person-group><year>1931</year><article-title>Evolution in Mendelian populations</article-title>. <source>Genetics</source><volume>16</volume><issue>2</issue>:<fpage>97</fpage>–<lpage>159</lpage>.<pub-id pub-id-type="pmid">17246615</pub-id></mixed-citation>
    </ref>
    <ref id="msy228-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yuan</surname><given-names>X</given-names></name>, <name name-style="western"><surname>Miller</surname><given-names>DJ</given-names></name>, <name name-style="western"><surname>Zhang</surname><given-names>J</given-names></name>, <name name-style="western"><surname>Herrington</surname><given-names>D</given-names></name>, <name name-style="western"><surname>Wang</surname><given-names>Y</given-names></name></person-group><year>2012</year><article-title>An overview of population genetic data simulation</article-title>. <source>J Comput Biol</source>. <volume>19</volume><issue>1</issue>:<fpage>42</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">22149682</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

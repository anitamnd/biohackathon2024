<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">ACS Omega</journal-id>
    <journal-id journal-id-type="iso-abbrev">ACS Omega</journal-id>
    <journal-id journal-id-type="publisher-id">ao</journal-id>
    <journal-id journal-id-type="coden">acsodf</journal-id>
    <journal-title-group>
      <journal-title>ACS Omega</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2470-1343</issn>
    <publisher>
      <publisher-name>American Chemical Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6645593</article-id>
    <article-id pub-id-type="pmid">31457399</article-id>
    <article-id pub-id-type="doi">10.1021/acsomega.7b01464</article-id>
    <article-categories>
      <subj-group>
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>JRgui: A Python Program of Joback and Reid Method</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="ath1">
        <name>
          <surname>Shi</surname>
          <given-names>Chenyang</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <name>
          <surname>Borchardt</surname>
          <given-names>Thomas B.</given-names>
        </name>
      </contrib>
      <aff id="aff1">Drug Product Development, <institution>AbbVie</institution>, 1 North Waukegan Road, North Chicago, Illinois 60064, <country>United States</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>E-mail: <email>chenyang.shi@abbvie.com</email>. Phone: <phone>+1 847-935-3328</phone>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>07</day>
      <month>12</month>
      <year>2017</year>
    </pub-date>
    <pub-date pub-type="collection">
      <day>31</day>
      <month>12</month>
      <year>2017</year>
    </pub-date>
    <volume>2</volume>
    <issue>12</issue>
    <fpage>8682</fpage>
    <lpage>8688</lpage>
    <history>
      <date date-type="received">
        <day>01</day>
        <month>10</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>16</day>
        <month>11</month>
        <year>2017</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2017 American Chemical Society</copyright-statement>
      <copyright-year>2017</copyright-year>
      <copyright-holder>American Chemical Society</copyright-holder>
      <license>
        <license-p>This is an open access article published under an ACS AuthorChoice <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/page/policy/authorchoice_termsofuse.html">License</ext-link>, which permits copying and redistribution of the article or any adaptations for non-commercial purposes.</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0005" id="ab-tgr1"/>
      </p>
      <p>Using
the modern object-oriented programing language Python (e.g., <italic>tkinter</italic> and <italic>pandas</italic> modules) and a chemoinformatics
open-source library (RDKit), the classic Joback and Reid group contribution
method was revisited and written into a graphical user interface program,
JRgui. The underlying algorithm behind the program is explained, herein,
with the users being able to operate the program in either a manual
or automatic mode. In the manual mode, the users are required to determine
the type and occurrence of functional groups in the compound of interest
and manually enter into the program. In the automatic mode, both of
these parameters can be detected automatically via user input of the
compound simplified molecular input line entry specification (SMILES)
string. An additional advantage of the automatic mode is that a large
number of molecules can be processed simultaneously by parsing their
individual SMILES strings into a text file, which is read by the program.
The resulting predicted physical properties along with approximately
200 molecular descriptors are saved in a spreadsheet file for subsequent
analysis. The program is available for free at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/curieshicy/JRgui">https://github.com/curieshicy/JRgui</uri> for Windows, Linux, and macOS 64-bit operating systems. It is hoped
that the current work may facilitate the creation of other user-friendly
programs in the chemoinformatics community using Python.</p>
    </abstract>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ao7b01464</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ao-2017-01464b</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p>In
the early drug-screening stage, a quick estimation of the physical
properties of proposed drug molecules is highly desired as it may
save a large amount of resource in optimization of chemical matter
and subsequent dosage form development. Of all of the available methods,
the prediction of pure-component properties from group contributions
(GCs) is an easy and straightforward method. The GC method is based
on the principle that the physical properties of a molecule have contributions
from the individual functional groups or atomic properties within
a molecule. A general formula for the GC method is provided in <xref rid="eq1" ref-type="disp-formula">eq <xref rid="eq1" ref-type="disp-formula">1</xref></xref><disp-formula id="eq1"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m001" position="anchor"/><label>1</label></disp-formula>where <italic>n</italic><sub><italic>i</italic></sub> is the occurrence of <italic>i</italic>th group in the structure,
Δ<italic>f</italic><sub><italic>i</italic></sub> is the contribution
to the properties from <italic>i</italic>th group, and <italic>c</italic> is a constant. The GC method has been developed from pure additive
group contributions to including second-order or higher-order interactions
from the groups.<sup><xref ref-type="bibr" rid="ref1">1</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup></p>
    <p>In the past few decades, a number of GC methods have been
developed,
and some of them are highly cited in the scientific community.<sup><xref ref-type="bibr" rid="ref1">1</xref>−<xref ref-type="bibr" rid="ref7">7</xref></sup> One of the highly cited methods has been provided by Joback and
Reid (JR method, &gt;1100 citations based on Google Scholar).<sup><xref ref-type="bibr" rid="ref2">2</xref></sup> The JR method divides the common functional groups
into six categories, including ring, nonring, halogen, oxygen, nitrogen,
and sulfur increments. On the basis of the types and occurrence of
the functional groups, the JR method predicts 11 physical properties,
including normal boiling point, normal freezing point, critical temperature,
critical pressure, critical volume, enthalpy of formation, Gibbs energy
of formation, heat capacity, enthalpy of vaporization, enthalpy of
fusion, and liquid viscosity.</p>
    <p>To develop GC programs, computers
have to be able to recognize
chemical structures/functional groups, which can be achieved by storing
them as molecular graphs whose edges and nodes represent, respectively,
bonds and atoms. Alternatively, one may use a connection table or
line notation to communicate the structural information to computers.<sup><xref ref-type="bibr" rid="ref8">8</xref></sup> A connection table contains lists of the atomic
number of atoms and atomic bonds, with additional information, such
as hybridization state and bond order. Line notation, on the other
hand, uses alphanumeric characters to represent key characteristics
of the two-dimensional structure of a molecule. It contains precise
information on the molecular fragments and their connectivity. Of
its typical formats, simplified molecular input line entry specification
(SMILES) and SMILES arbitrary target specification (SMARTS) are widely
used. Developed by daylight chemical information system,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> SMILES accurately describes a plethora of chemical
information of a molecule, such as aromatic rings, number of hydrogen
atoms, and atom-to-atom mapping. SMARTS was developed based on SMILES,
specifically for describing the molecular fragment.</p>
    <p>There are
several online and commercial programs that have implemented
the JR method.<sup><xref ref-type="bibr" rid="ref10">10</xref></sup> However, the algorithm,
in particular for automatch functional groups, is not published. In
addition, it is not straightforward to calculate the properties for
a large number of molecules simultaneously when using a Web-based
program.</p>
    <p>In recent years, the Python programing language has
been gaining
increasing attention in the scientific community,<sup><xref ref-type="bibr" rid="ref11">11</xref></sup> and several programs for chemoinformatics research are
reported.<sup><xref ref-type="bibr" rid="ref12">12</xref>−<xref ref-type="bibr" rid="ref15">15</xref></sup> In this work, we describe the application of the modern object-oriented
programing language Python, specifically the <italic>tkinter</italic> module,<sup><xref ref-type="bibr" rid="cit16a">16a</xref></sup> to create JRgui, a graphical
user interface program based on the JR method. The program utilizes
the <italic>pandas</italic> module within Python<sup><xref ref-type="bibr" rid="cit16b">16b</xref></sup> for a quick save of data, and the open-source chemoinformatics
package, RDKit,<sup><xref ref-type="bibr" rid="ref15">15</xref></sup> for input of requisite
functional group descriptors. We demonstrate how to search subgroups
using SMARTS code and how to remove duplicate functional groups in
the search.</p>
    <p>When using JRgui, the users can either manually
select types/numbers
of groups of molecules of interest or have the computer algorithm
automatically input functional group information via input of a SMILES
string for the molecule of interest. In the case of executing calculations
on a series of molecules simultaneously (e.g., a batch process), the
users are required to store all SMILES strings into a text file for
subsequent input to the program. In automatic mode, the JRgui program
will automatically save and export predicted properties along with
approximately 200 molecular descriptors into a spreadsheet for subsequent
evaluation.</p>
  </sec>
  <sec id="sec2">
    <title>Equations</title>
    <p>In this section, the equations used in JRgui
are summarized and
explained. First, the original equations to calculate 11 physical
properties by the JR method are listed in <xref rid="tbl1" ref-type="other">Table <xref rid="tbl1" ref-type="other">1</xref></xref> (<xref rid="eq2" ref-type="disp-formula">eqs <xref rid="eq2" ref-type="disp-formula">2</xref></xref>, <xref rid="eq3" ref-type="disp-formula">3</xref>, <xref rid="eq4" ref-type="disp-formula">4</xref>, <xref rid="eq5" ref-type="disp-formula">5</xref>, <xref rid="eq6" ref-type="disp-formula">6</xref>, <xref rid="eq7" ref-type="disp-formula">7</xref>, <xref rid="eq8" ref-type="disp-formula">8</xref>, <xref rid="eq9" ref-type="disp-formula">9</xref>, <xref rid="eq10" ref-type="disp-formula">10</xref>, <xref rid="eq11" ref-type="disp-formula">11</xref>, and <xref rid="eq12" ref-type="disp-formula">12</xref>).</p>
    <table-wrap id="tbl1" position="float">
      <label>Table 1</label>
      <caption>
        <title>Equations from the JR Method for Estimation
of Physical Properties<xref rid="t1fn1" ref-type="table-fn">a</xref></title>
      </caption>
      <table frame="hsides" rules="groups" border="0">
        <colgroup>
          <col align="left"/>
          <col align="left"/>
        </colgroup>
        <tbody>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">normal boiling point (K)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq2">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m009" position="anchor"/>
                <label>2</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">normal freezing point (K)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq3">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m010" position="anchor"/>
                <label>3</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">critical temperature (K)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq4">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m011" position="anchor"/>
                <label>4</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">critical pressure (bar)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq5">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m012" position="anchor"/>
                <label>5</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">critical
volume (cm<sup>3</sup>/mol)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq6">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m013" position="anchor"/>
                <label>6</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">enthalpy of formation (kJ/mol) at 298 K</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq7">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m014" position="anchor"/>
                <label>7</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">Gibbs energy of formation (kJ/mol) at 298 K</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq8">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m015" position="anchor"/>
                <label>8</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">heat capacity, ideal gas (J/mol K)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq9">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m016" position="anchor"/>
                <label>9</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">enthalpy
of vaporization
at <italic>T</italic><sub>b</sub> (kJ/mol)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq10">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m017" position="anchor"/>
                <label>10</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">enthalpy of fusion (kJ/mol)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq11">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m018" position="anchor"/>
                <label>11</label>
              </disp-formula>
            </td>
          </tr>
          <tr valign="middle">
            <td style="border:none;" align="left" valign="middle">liquid viscosity (N s/m<sup>2</sup>)</td>
            <td style="border:none;" align="left" valign="middle">
              <disp-formula id="eq12">
                <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m019" position="anchor"/>
                <label>12</label>
              </disp-formula>
            </td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="t1fn1">
          <label>a</label>
          <p>∑ represents the group contributions. <italic>n</italic><sub>A</sub> and MW are the number of atoms and molecular
weight, respectively.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>In
the manual mode, an equation proposed by Mannhold et al. is
used to predict log <italic>P</italic><disp-formula id="eq13"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m002" position="anchor"/><label>13</label></disp-formula>where <italic>N</italic><sub>C</sub> and <italic>N</italic><sub>HET</sub> stand for the number of carbon atoms and
the number of heteroatoms, respectively.<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> The authors surveyed more than 96 000 compounds before they
arrived at this empirical relation.</p>
    <p>Because the JR method predicts
the melting point of molecules,
the general solubility equation<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> and its
modified form<sup><xref ref-type="bibr" rid="ref19">19</xref></sup> can be used to predict
its crystalline solubility via<disp-formula id="eq14"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m003" position="anchor"/><label>14</label></disp-formula><disp-formula id="eq15"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m004" position="anchor"/><label>15</label></disp-formula>where <italic>S</italic> is the solubility
in mol/L, log <italic>P</italic> is the lipophilicity, and
MP is the melting point in °C.</p>
    <p>The crystalline solubility
can be converted to that in μg/mL
by multiplying by molecular weight (in g/mol).<disp-formula id="eq16"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m005" position="anchor"/><label>16</label></disp-formula><disp-formula id="eq17"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m006" position="anchor"/><label>17</label></disp-formula>Finally, the amorphous solubility advantage
relative to that predicted for the crystalline phase can be estimated
by the Gibbs free-energy difference in both states.<sup><xref ref-type="bibr" rid="ref20">20</xref></sup><disp-formula id="eq18"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m007" position="anchor"/><label>18</label></disp-formula><disp-formula id="eq19"><graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_m008" position="anchor"/><label>19</label></disp-formula>where <italic>S</italic><sub>a</sub> and <italic>S</italic><sub>c</sub> are the amorphous and crystalline solubilities
of the compound, respectively, Δ<italic>H</italic><sub>f</sub> and <italic>T</italic><sub>m</sub> are, respectively, the heat of
fusion and melting point of the drug molecule, which can be predicted
by the JR method.</p>
    <p>In automatic mode, more than 200 molecular
descriptors are predicted
using RDKit package, which can be used in further machine learning
study. More details about these descriptors are documented in the
RDKit manual. We note in the automatic mode that log <italic>P</italic> (and molecular refractivity) prediction is based on a
different method by Wildman and Crippen.<sup><xref ref-type="bibr" rid="ref21">21</xref></sup></p>
  </sec>
  <sec id="sec3">
    <title>Usage</title>
    <p>The main window of the program is displayed in <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>. It has a brief
description
on top, and two buttons at the bottom, which link to the manual and
automatic operation modes of the program, respectively.</p>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>Main window
of JRgui program. The buttons at the bottom will link
to manual and automatic modes, respectively.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0007" id="gr1" position="float"/>
    </fig>
    <p>If the <italic>Manually Select Functional Groups</italic> button
is clicked, the users will be directed to a pop-out window, as shown
in <xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref>. The users
can then manually select different types of groups via check buttons
and enter the number of each group in the appropriate entry boxes.
Some additional information is needed from users, which includes temperature,
number of atoms, molecular weight, number of carbon atoms, and number
of heteroatoms. The value of temperature is needed for calculating
heat capacity, liquid viscosity, and amorphous solubility. Molecular
weight is used to calculate liquid viscosity and convert crystalline/amorphous
solubility in log units to mass units (μg/mL). The number of
carbon atoms and heteroatoms is needed for predicting the log <italic>P</italic> value based on Mannhold et al.’s method (<xref rid="eq13" ref-type="disp-formula">eq <xref rid="eq13" ref-type="disp-formula">13</xref></xref>). Boiling Point is left
blank by default, but can be predicted by the JR method. However,
it should be specified if the user knows its value beforehand, to
predict a more reliable critical temperature, which requires boiling
point as an input parameter (<xref rid="eq4" ref-type="disp-formula">eq <xref rid="eq4" ref-type="disp-formula">4</xref></xref>). The radio buttons offer the option to select the general
solubility equation or its modified form. Once all necessary information
is specified, a single click of <italic>Compute Physical Properties</italic> generates an output of the predicted results from the program at
the bottom of the window. <italic>Reset to Default</italic> will restore
the program to its initial state. If required input parameters are
missing for the requested prediction of physical properties, such
as data parameters are not available for predicting liquid viscosity
for nitrogen and sulfur groups, a “Not Computable” will
be displayed in the printed out results.</p>
    <fig id="fig2" position="float">
      <label>Figure 2</label>
      <caption>
        <p>Screenshot of JRgui program
at manual mode.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0006" id="gr2" position="float"/>
    </fig>
    <p>In the automatic mode,
the users can allow the program to detect
the types/occurrence of the functional groups in a molecule. To do
this, the users should click “<italic>Auto Detect Groups</italic> via <italic>SMILES</italic>” in the main window. An interface
as shown in <xref rid="fig3" ref-type="fig">Figure <xref rid="fig3" ref-type="fig">3</xref></xref> will be displayed. The users now only need to type in the SMILES
code that represents their molecule and specify temperature, boiling
point, and the general solubility equation. After clicking <italic>Compute Physical Properties</italic>, the program will automatically
parse the SMILES string, match the groups using SMARTS summarized
in <xref rid="tbl2" ref-type="other">Table <xref rid="tbl2" ref-type="other">2</xref></xref>, remove
duplicate groups, and determine types/numbers of groups before finally
calculating the physical properties. If certain groups are not defined
in the JR method, an error message will be shown. In addition, the
users can write multiple SMILES strings into a text file and then
load it by clicking “<italic>Or Load Your SMILES File</italic>.” Clicking on the “<italic>Save Predicted Results”</italic> button will direct the users to a dialog window that asks where
to save the results as a spreadsheet (in .csv format). In the spreadsheet,
if the parameters are missing in the JR database, the predicted results
will be shown as “NA” in the cell. If some functional
groups are not defined in the JR method, it will be shown as “Error”
instead. If the program has trouble parsing the SMILES string, “NaN”
will be stored into the cell.</p>
    <fig id="fig3" position="float">
      <label>Figure 3</label>
      <caption>
        <p>Screenshot of the JRgui program at auto mode.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0001" id="gr3" position="float"/>
    </fig>
    <table-wrap id="tbl2" position="float">
      <label>Table 2</label>
      <caption>
        <title>Summary of 41 Functional
Groups Used
in the JR method and Their Corresponding SMARTS Codes Used in JRgui
Program<sup><xref ref-type="bibr" rid="ref9">9</xref>,<xref ref-type="bibr" rid="ref15">15</xref>,<xref ref-type="bibr" rid="ref22">22</xref></sup><xref rid="t2fn1" ref-type="table-fn">a</xref></title>
      </caption>
      <table frame="hsides" rules="groups" border="0">
        <colgroup>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
        </colgroup>
        <thead>
          <tr>
            <th colspan="2" align="center">nonring increments</th>
            <th colspan="2" align="center">ring increments</th>
            <th colspan="2" align="center">halogen
increments</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style="border:none;" align="left">–CH<sub>3</sub></td>
            <td style="border:none;" align="left">[CX4H3]</td>
            <td style="border:none;" align="left">–CH<sub>2</sub>–</td>
            <td style="border:none;" align="left">[R;CX4H2]</td>
            <td style="border:none;" align="left">–F</td>
            <td style="border:none;" align="left">[F]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–CH<sub>2</sub>–</td>
            <td style="border:none;" align="left">[!R;CX4H2]</td>
            <td style="border:none;" align="left">&gt;CH–</td>
            <td style="border:none;" align="left">[R;CX4H]</td>
            <td style="border:none;" align="left">–Cl</td>
            <td style="border:none;" align="left">[Cl]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">&gt;CH–</td>
            <td style="border:none;" align="left">[!R;CX4H]</td>
            <td style="border:none;" align="left">&gt;C&lt;</td>
            <td style="border:none;" align="left">[R;CX4H0]</td>
            <td style="border:none;" align="left">–Br</td>
            <td style="border:none;" align="left">[Br]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">&gt;C&lt;</td>
            <td style="border:none;" align="left">[!R;CX4H0]</td>
            <td style="border:none;" align="left">=CH–</td>
            <td style="border:none;" align="left">[R;CX3H1,cX3H1]</td>
            <td style="border:none;" align="left">–I</td>
            <td style="border:none;" align="left">[I]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">=CH<sub>2</sub></td>
            <td style="border:none;" align="left">[CX3H2]</td>
            <td style="border:none;" align="left">=C&lt;</td>
            <td style="border:none;" align="left">[$([R;#6X3H0]);!$([R;#6X3H0]=[#8])]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">=CH–</td>
            <td style="border:none;" align="left">[!R;CX3H1;!$([CX3H1](=O))]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">=C&lt;</td>
            <td style="border:none;" align="left">[$([!R;#6X3H0]);!$([!R;#6X3H0]=[#8])]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">=C=</td>
            <td style="border:none;" align="left">[$([CX2H0](=*)=*)]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">#CH</td>
            <td style="border:none;" align="left">[$([CX2H1]#[!#7])]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">#C–</td>
            <td style="border:none;" align="left">[$([CX2H0]#[!#7])]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
        </tbody>
      </table>
      <table frame="hsides" rules="groups" border="0">
        <colgroup>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
          <col align="left"/>
        </colgroup>
        <thead>
          <tr>
            <th colspan="2" align="center">oxygen increments</th>
            <th colspan="2" align="center">nitrogen increments</th>
            <th colspan="2" align="center">sulfur
increments</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style="border:none;" align="left">–OH (alcohol)</td>
            <td style="border:none;" align="left">[OX2H;!$([OX2H]-[#6]=[O]);!$([OX2H]-a)]</td>
            <td style="border:none;" align="left">–NH<sub>2</sub></td>
            <td style="border:none;" align="left">[NX3H2]</td>
            <td style="border:none;" align="left">–SH</td>
            <td style="border:none;" align="left">[SX2H]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–OH (phenol)</td>
            <td style="border:none;" align="left">[O;H1;$(O-!@c)]</td>
            <td style="border:none;" align="left">&gt;NH (nonring)</td>
            <td style="border:none;" align="left">[NX3H1;!R]</td>
            <td style="border:none;" align="left">–S– (nonring)</td>
            <td style="border:none;" align="left">[#16X2H0;!R]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–O– (nonring)</td>
            <td style="border:none;" align="left">[OX2H0;!R;!$([OX2H0]-[#6]=[#8])]</td>
            <td style="border:none;" align="left">&gt;NH (ring)</td>
            <td style="border:none;" align="left">[#7X3H1;R]</td>
            <td style="border:none;" align="left">–S– (ring)</td>
            <td style="border:none;" align="left">[#16X2H0;R]</td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–O– (ring)</td>
            <td style="border:none;" align="left">[#8X2H0;R;!$([#8X2H0]∼[#6]=[#8])]</td>
            <td style="border:none;" align="left">&gt;N– (nonring)</td>
            <td style="border:none;" align="left">[#7X3H0;!$([#7](∼O)∼O)]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">&gt;C=O (nonring)</td>
            <td style="border:none;" align="left">[$([CX3H0](=[OX1]));!$([CX3](=[OX1])-[OX2]);!R]=O</td>
            <td style="border:none;" align="left">–N= (nonring)</td>
            <td style="border:none;" align="left">[#7X2H0;!R]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">&gt;C=O (ring)</td>
            <td style="border:none;" align="left">[$([#6X3H0](=[OX1]));!$([#6X3](=[#8X1])∼[#8X2]);R]=O</td>
            <td style="border:none;" align="left">–N= (ring)</td>
            <td style="border:none;" align="left">[#7X2H0;R]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">O#CH– (aldehyde)</td>
            <td style="border:none;" align="left">[CH;D2;$(C-!@C)](=O)</td>
            <td style="border:none;" align="left">=NH</td>
            <td style="border:none;" align="left">[#7X2H1]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–COOH (acid)</td>
            <td style="border:none;" align="left">[OX2H]-[C]=O</td>
            <td style="border:none;" align="left">–CN</td>
            <td style="border:none;" align="left">[#6X2]#[#7X1H0]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">–COO– (ester)</td>
            <td style="border:none;" align="left">[#6X3H0;!$([#6X3H0](∼O)(∼O)(∼O))](=[#8X1])[#8X2H0]</td>
            <td style="border:none;" align="left">–NO<sub>2</sub></td>
            <td style="border:none;" align="left">[$([#7X3,#7X3+][!#8])](=[O])∼[O-]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
          <tr>
            <td style="border:none;" align="left">=O (except
as above)</td>
            <td style="border:none;" align="left">[OX1H0;!$([OX1H0]∼[#6X3]);!$([OX1H0]∼[#7X3]∼[#8])]</td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
            <td style="border:none;" align="left"> </td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="t2fn1">
          <label>a</label>
          <p>The codes are double-checked by
visualizing them via online tool SMARTSviewer at Center for Bioinformatics
at University of Hamburg.<sup><xref ref-type="bibr" rid="ref23">23</xref></sup></p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
  </sec>
  <sec id="sec4">
    <title>Algorithm</title>
    <p>A schematic drawing that
describes the operating procedures of
JRgui program is displayed in <xref rid="fig4" ref-type="fig">Figure <xref rid="fig4" ref-type="fig">4</xref></xref>. The users have the options to use either a manual
or an auto mode. In the manual mode, the program requires the input
of functional group information by the user for the program to assign
corresponding group contribution parameters from the JR database to
predict the requested physical properties, which are provided at the
bottom. If certain parameters are missing in the database, a “Not
Computable” message will appear. In Python, this is implemented
using a <italic>try</italic>: <italic>except</italic> block of code
to handle errors and exceptions.<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> The
program first executes the block of code in <italic>try</italic>;
if no error occurs, then <italic>except</italic> is skipped, otherwise
the <italic>except</italic> clause is executed.</p>
    <fig id="fig4" position="float">
      <label>Figure 4</label>
      <caption>
        <p>Schematic diagram illustrating
the workflow of JRgui program.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0002" id="gr4" position="float"/>
    </fig>
    <p>In the automatic mode, after users provide a SMILES code,
the program
uses “search substructure” functionality from the RDKit
package to parse the code based on the SMARTS of each 41 groups in
the JR method. A summary of SMARTS codes for each group is listed
in <xref rid="tbl2" ref-type="other">Table <xref rid="tbl2" ref-type="other">2</xref></xref>.</p>
    <p>The
functionality can also detect occurrence of each group and
heavy atom positions in a molecule. To illustrate this, 4-methylsalicylic
acid (with a SMILES code, CC1=CC(=C(C=C1)C(=O)O)O)
is taken as an example. Its chemical structure is shown in <xref rid="fig5" ref-type="fig">Figure <xref rid="fig5" ref-type="fig">5</xref></xref>: it has a benzene
ring (in this case, 3 =CH&lt; and =C&lt; ring groups
each), one methyl, one hydroxyl (phenol), and one carboxylic acid
group. Using specifically written SMARTS codes for Joback and Reid
functional groups (<xref rid="tbl2" ref-type="other">Table <xref rid="tbl2" ref-type="other">2</xref></xref>), the JRgui program is able to find desired groups as expected.
It is worth mentioning if using loosely defined SMARTS codes, such
as [$(OH1)A] for −OH (alcohol), [CH0;A;X3;!R]=O for
&gt;C=O (nonring), [OX1] for =O, and [CH0;A;X3;!R] for
=C&lt; (nonring), the program detects −OH (alcohol),
&gt;C=O (nonring), =O, and =C&lt; (nonring),
which
are unwanted duplicated groups, as highlighted in red in <xref rid="fig5" ref-type="fig">Figure <xref rid="fig5" ref-type="fig">5</xref></xref>. Although JRgui
program uses SMARTS as specific as possible, to be on the safe side,
the additional codes have been written to remove potential duplicate
counts. The algorithm to remove duplicates is to first look at atom
positions of heavy atoms, which are shown in the right column of the
table. One can see that all of these extra functional groups are within
the carboxylic acid group because their positions, (9), (7, 8), (8),
and (7) are just a subgroup of −COOH (7, 8, 9). The next step
is to remove groups if their atom positions are a subgroup of another
group. Finally, the program records the remained groups and counts
their occurrences before performing a calculation on properties.</p>
    <fig id="fig5" position="float">
      <label>Figure 5</label>
      <caption>
        <p>Example
on searching groups in 4-methylsalicylic acid. The numbers
in the two columns in the right-hand side are atom positions of nonhydrogen
atoms. Using SMARTS code as specific as possible, the JRgui program
can find exact groups as expected. In contrast, the search with loosely
defined SMARTS for functional groups returns duplicate counts as highlighted
in red.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0003" id="gr5" position="float"/>
    </fig>
    <p>The same algorithm can be extended
to detect nonexistent JR groups
in the molecule. In this case, when a SMILES code is given, the program
automatically detects number/type of matched JR groups (with duplicated
groups removed) and positions of all heavy atoms. If certain groups
have not been incorporated in the JR method, such as a boron or phosphorus
group, the sum of heavy atoms in all detected groups will differ from
the total heavy atoms count in the molecule. If that happens, the
program will display a warning message to alert the users. An example
is shown in <xref rid="fig6" ref-type="fig">Figure <xref rid="fig6" ref-type="fig">6</xref></xref>, in which an addition of phosphorous to the SMILES code for 4-methylsalicylic
acid brings up the warning message.</p>
    <fig id="fig6" position="float">
      <label>Figure 6</label>
      <caption>
        <p>Warning message will be displayed if the
SMILES string contains
functional group that is not covered in JR method.</p>
      </caption>
      <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao-2017-01464b_0004" id="gr6" position="float"/>
    </fig>
    <p>In the batch process for a series of molecules,
the program uses
a <italic>for</italic> loop to deal with each single SMILES code.
A quick save to .csv format is made possible using the <italic>pandas</italic> module in Python, where it records data as a <italic>DataFrame</italic> and exports the data in various formats (.xls, .csv, .htm, .tex,
etc.).<sup><xref ref-type="bibr" rid="cit16b">16b</xref></sup> The spreadsheet records 11 physical
properties predicted by JR method and 4 solubility predictions for
crystalline and amorphous compounds using general solubility equation
and its modified form. In addition, as many as 187 molecular descriptors
calculated by RDKit program are also summarized.</p>
  </sec>
  <sec id="sec5">
    <title>Performance</title>
    <p>The
performance of JRgui program was tested on Karthikeyan’s
data sets, which contain 4450 SMILES.<sup><xref ref-type="bibr" rid="ref25">25</xref></sup> On Windows 10 with Intel Core i7-4790 CPU, 3.6 GHz, and 16.0 GB
memory, it takes ∼9 min to finish all calculations (export
4450 × 201 = 894 450 data points to a spreadsheet); it
takes ∼12 min on a Windows 7 machine with Intel Core i5-5300U
CPU, 2.3 GHz, and 8.00 GB memory, and on a macOSX 10.10.3 system with
3.1 GHz Intel Core i7 and 16 GB memory, the time taken is ∼10
min. It is noted that failure to parse SMILES would slow down the
process.</p>
  </sec>
  <sec id="sec6">
    <title>Availability</title>
    <p>JRgui program has been tested on various
operating systems, including
Windows 7, 8.1, 10, Ubuntu 14.04.5, and macOS 10.10.3, and is available
for Windows, Linux, and macOS operating systems (all 64-bit systems).
It can be easily installed using conda command in a terminal. More
details about program installation and availability are listed in
the home page of JRgui <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/curieshicy/JRgui">https://github.com/curieshicy/JRgui</uri>.</p>
  </sec>
  <sec id="sec7">
    <title>Conclusions</title>
    <p>A
new graphical user interface program, JRgui, which estimates
the physical properties by classic group contribution method from
Joback and Reid, is written using the modern object-oriented programing
language, Python. The program operates in both manual and automatic
modes. The detailed algorithms for building the program are explained.
We hope our work could stimulate research in chemoinformatics with
Python and its vibrant scientific community.</p>
  </sec>
</body>
<back>
  <notes id="notes-1" notes-type="si">
    <title>Supporting Information Available</title>
    <p>The Supporting Information
is available free of charge on the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org">ACS Publications website</ext-link> at DOI: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/abs/10.1021/acsomega.7b01464">10.1021/acsomega.7b01464</ext-link>.<list id="silist" list-type="simple"><list-item><p>List of available
descriptors in JRgui program (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acsomega.7b01464/suppl_file/ao7b01464_si_001.pdf">PDF</ext-link>)</p></list-item></list></p>
  </notes>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sifile1">
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ao7b01464_si_001.pdf">
        <caption>
          <p>ao7b01464_si_001.pdf</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <notes notes-type="disclosure" id="notes-3">
    <p>C.S. and T.B.B. are
employees of AbbVie and may own AbbVie stock. The design, study conduct,
and financial support for this research were provided by AbbVie. AbbVie
participated in the interpretation of data, review, and approval of
the publication.</p>
  </notes>
  <notes notes-type="COI-statement" id="notes-2">
    <p>The authors
declare no competing financial interest.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>C.S. and T.B.B. thank various
individuals from Drug Product
Development (Research and Development) at AbbVie for their helpful
insights and discussions. C.S. thanks RDKit and Conda community for
helpful suggestions.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Fredenslund</surname><given-names>A.</given-names></name>; <name><surname>Jones</surname><given-names>R. L.</given-names></name>; <name><surname>Prausnitz</surname><given-names>J. M.</given-names></name><article-title>Group-contribution
estimation of
activity coefficients in non-ideal liquid mixtures</article-title>. <source>AIChE J.</source><year>1975</year>, <volume>21</volume>, <fpage>1086</fpage>–<lpage>1099</lpage>. <pub-id pub-id-type="doi">10.1002/aic.690210607</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Nannoolal</surname><given-names>Y.</given-names></name>; <name><surname>Rarey</surname><given-names>J.</given-names></name>; <name><surname>Ramjugernath</surname><given-names>J.</given-names></name><article-title>Estimation
of pure component properties
Part 2. Estimation of critical property data by group contribution</article-title>. <source>Fluid Phase Equilib.</source><year>2007</year>, <volume>252</volume>, <fpage>1</fpage>–<lpage>27</lpage>. <pub-id pub-id-type="doi">10.1016/j.fluid.2006.11.014</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="journal" id="cit3"><name><surname>Jankowski</surname><given-names>M. D.</given-names></name>; <name><surname>Henry</surname><given-names>C. S.</given-names></name>; <name><surname>Broadbelt</surname><given-names>L. J.</given-names></name>; <name><surname>Hatzimanikatis</surname><given-names>V.</given-names></name><article-title>Group Contribution
Method for Thermodynamic Analysis of Complex Metabolic Networks</article-title>. <source>Biophys. J.</source><year>2008</year>, <volume>95</volume>, <fpage>1487</fpage>–<lpage>1499</lpage>. <pub-id pub-id-type="doi">10.1529/biophysj.107.124784</pub-id>.<pub-id pub-id-type="pmid">18645197</pub-id></mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Klincewicz</surname><given-names>K. M.</given-names></name>; <name><surname>Reid</surname><given-names>R. C.</given-names></name><article-title>Estimation of critical
properties with group contribution
methods</article-title>. <source>AIChE J.</source><year>1984</year>, <volume>30</volume>, <fpage>137</fpage>–<lpage>142</lpage>. <pub-id pub-id-type="doi">10.1002/aic.690300119</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>Joback</surname><given-names>K. G.</given-names></name>; <name><surname>Reid</surname><given-names>R. C.</given-names></name><article-title>Estimation of pure-component properties from group-contributions</article-title>. <source>Chem. Eng. Commun.</source><year>1987</year>, <volume>57</volume>, <fpage>233</fpage>–<lpage>243</lpage>. <pub-id pub-id-type="doi">10.1080/00986448708960487</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Constantinou</surname><given-names>L.</given-names></name>; <name><surname>Gani</surname><given-names>R.</given-names></name><article-title>New group contribution
method for estimating properties of pure compounds</article-title>. <source>AIChE J.</source><year>1994</year>, <volume>40</volume>, <fpage>1697</fpage>–<lpage>1710</lpage>. <pub-id pub-id-type="doi">10.1002/aic.690401011</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Marrero</surname><given-names>J.</given-names></name>; <name><surname>Gani</surname><given-names>R.</given-names></name><article-title>Group-contribution
based estimation of pure component properties</article-title>. <source>Fluid Phase Equilib.</source><year>2001</year>, <volume>183–184</volume>, <fpage>183</fpage>–<lpage>208</lpage>. <pub-id pub-id-type="doi">10.1016/S0378-3812(01)00431-9</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="book" id="cit8"><person-group person-group-type="allauthors"><name><surname>Leach</surname><given-names>A. R.</given-names></name>; <name><surname>Gillet</surname><given-names>V. J.</given-names></name></person-group><source>An Introduction to
Chemoinformatics</source>, <edition>1</edition>st ed.; <publisher-name>Springer Netherlands</publisher-name>: <publisher-loc>Dordrecht</publisher-loc>, <year>2007</year>; pp <fpage>1</fpage>–<lpage>255</lpage>.</mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="weblink" id="cit9"><article-title>Chemical Information Systems, Inc.</article-title><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.daylight.com/">http://www.daylight.com/</uri>.</mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="weblink" id="cit10a"><label>a</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ddbonline.ddbst.de/OnlinePropertyEstimation/OnlinePropertyEstimation.exe">http://ddbonline.ddbst.de/OnlinePropertyEstimation/OnlinePropertyEstimation.exe</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit10b"><label>b</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.chemeo.com/">https://www.chemeo.com/</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit10c"><label>c</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.molknow.com/Online/Estimation.htm">http://www.molknow.com/Online/Estimation.htm</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit10d"><label>d</label><article-title>Molecular Modeling Pro (Norgwyn Montgomery Software)</article-title>. <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.norgwyn.com/mmpplus.html">http://www.norgwyn.com/mmpplus.html</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit10e"><label>e</label><article-title>CRANIUM (Molecular Knowledge Systems)</article-title>. <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.molknow.com/Cranium/cranium.htm">http://www.molknow.com/Cranium/cranium.htm</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit10f"><label>f</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://umansysprop.seaes.manchester.ac.uk/tool/vapour_pressure">http://umansysprop.seaes.manchester.ac.uk/tool/vapour_pressure</uri>.</mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="weblink" id="cit11"><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.python.org/">https://www.python.org/</uri>.</mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="journal" id="cit12"><name><surname>Li</surname><given-names>P.</given-names></name>; <name><surname>Merz</surname><given-names>K. M.</given-names><suffix>Jr.</suffix></name><article-title>MCPB.py: A Python based metal center
parameter builder</article-title>. <source>J. Chem. Inf. Model.</source><year>2016</year>, <volume>56</volume>, <fpage>599</fpage>–<lpage>604</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jcim.5b00674</pub-id>.<pub-id pub-id-type="pmid">26913476</pub-id></mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="journal" id="cit13"><name><surname>Zahariev</surname><given-names>F.</given-names></name>; <name><surname>Silva</surname><given-names>N. D.</given-names></name>; <name><surname>Gordon</surname><given-names>M. S.</given-names></name>; <name><surname>Windus</surname><given-names>T. L.</given-names></name>; <name><surname>Dick-Perez</surname><given-names>M.</given-names></name><article-title>ParFit: A
Python-based object-oriented program for fitting molecular mechanics
parameters to ab initio data</article-title>. <source>J. Chem. Inf.
Model.</source><year>2017</year>, <volume>57</volume>, <fpage>391</fpage>–<lpage>396</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jcim.6b00654</pub-id>.<pub-id pub-id-type="pmid">28169538</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="journal" id="cit14"><name><surname>Cao</surname><given-names>D.-S.</given-names></name>; <name><surname>Liang</surname><given-names>Y.</given-names></name>; <name><surname>Yan</surname><given-names>J.</given-names></name>; <name><surname>Tan</surname><given-names>G.</given-names></name>; <name><surname>Xu</surname><given-names>Q.</given-names></name>; <name><surname>Liu</surname><given-names>S.</given-names></name><article-title>PyDPI: Freely available Python package
for chemoinformatics, bioinformatics
and chemogenomics studies</article-title>. <source>J. Chem. Inf. Model.</source><year>2013</year>, <volume>53</volume>, <fpage>3086</fpage>–<lpage>3096</lpage>. <pub-id pub-id-type="doi">10.1021/ci400127q</pub-id>.<pub-id pub-id-type="pmid">24047419</pub-id></mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="weblink" id="cit15"><article-title>RDKit, Open Source Cheminformatics</article-title>. <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.rdkit.org">http://www.rdkit.org</uri>.</mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="weblink" id="cit16a"><label>a</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://docs.python.org/3/library/tkinter.html">https://docs.python.org/3/library/tkinter.html</uri>.</mixed-citation>
      <mixed-citation publication-type="weblink" id="cit16b"><label>b</label><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://pandas.pydata.org/">http://pandas.pydata.org/</uri>.</mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>Mannhold</surname><given-names>R.</given-names></name>; <name><surname>Poda</surname><given-names>G. I.</given-names></name>; <name><surname>Ostermann</surname><given-names>C.</given-names></name>; <name><surname>Tetko</surname><given-names>I. V.</given-names></name><article-title>Calculation of molecular
lipophilicity: state-of-the-art and comparison of Log P methods on
more than 96 000 compounds</article-title>. <source>J. Pharm. Sci.</source><year>2009</year>, <volume>98</volume>, <fpage>861</fpage>–<lpage>893</lpage>. <pub-id pub-id-type="doi">10.1002/jps.21494</pub-id>.<pub-id pub-id-type="pmid">18683876</pub-id></mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>Yalkowsky</surname><given-names>S. H.</given-names></name>; <name><surname>Valvani</surname><given-names>S. C.</given-names></name><article-title>Solubility and partitioning I: Solubility of nonelectrolytes
in water</article-title>. <source>J. Pharm. Sci.</source><year>1980</year>, <volume>69</volume>, <fpage>912</fpage>–<lpage>922</lpage>. <pub-id pub-id-type="doi">10.1002/jps.2600690814</pub-id>.<pub-id pub-id-type="pmid">7400936</pub-id></mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Jain</surname><given-names>N.</given-names></name>; <name><surname>Yalkowsky</surname><given-names>S. H.</given-names></name><article-title>Estimation of the aqueous solubility I: application
to organic nonelectrolytes</article-title>. <source>J. Pharm. Sci.</source><year>2001</year>, <volume>90</volume>, <fpage>234</fpage>–<lpage>252</lpage>. <pub-id pub-id-type="doi">10.1002/1520-6017(200102)90:2&lt;234::AID-JPS14&gt;3.0.CO;2-V</pub-id>.<pub-id pub-id-type="pmid">11169540</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Hoffman</surname><given-names>J. D.</given-names></name><article-title>Thermodynamic
driving force in nucleation and growth processes</article-title>. <source>J. Chem. Phys.</source><year>1958</year>, <volume>29</volume>, <fpage>1192</fpage>–<lpage>1193</lpage>. <pub-id pub-id-type="doi">10.1063/1.1744688</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="journal" id="cit21"><name><surname>Wildman</surname><given-names>S. A.</given-names></name>; <name><surname>Crippen</surname><given-names>G. M.</given-names></name><article-title>Prediction of physicochemical
parameters by atomic
contributions</article-title>. <source>J. Chem. Inf. Comput. Sci.</source><year>1999</year>, <volume>39</volume>, <fpage>868</fpage>–<lpage>873</lpage>. <pub-id pub-id-type="doi">10.1021/ci990307l</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref22">
      <note>
        <p>Private communication with Jason Biggs.</p>
      </note>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="weblink" id="cit23"><article-title>SMARTSviewer</article-title>. <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://smartsview.zbh.uni-hamburg.de/smartsview/view">http://smartsview.zbh.uni-hamburg.de/smartsview/view</uri>.</mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="weblink" id="cit24"><uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://docs.python.org/3/tutorial/errors.html">https://docs.python.org/3/tutorial/errors.html</uri>.</mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="journal" id="cit25"><name><surname>Karthikeyan</surname><given-names>M.</given-names></name>; <name><surname>Glen</surname><given-names>R. C.</given-names></name>; <name><surname>Bender</surname><given-names>A.</given-names></name><article-title>General melting point prediction
based on a diverse compound data set and artificial neutral networks</article-title>. <source>J. Chem. Inf. Model.</source><year>2005</year>, <volume>45</volume>, <fpage>581</fpage>–<lpage>590</lpage>. <pub-id pub-id-type="doi">10.1021/ci0500132</pub-id>.<pub-id pub-id-type="pmid">15921448</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

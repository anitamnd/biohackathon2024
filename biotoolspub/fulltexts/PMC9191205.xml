<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9191205</article-id>
    <article-id pub-id-type="pmid">35552638</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac324</article-id>
    <article-id pub-id-type="publisher-id">btac324</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Systems Biology</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Nezzle: an interactive and programmable visualization of biological networks in Python</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3004-2901</contrib-id>
        <name>
          <surname>Lee</surname>
          <given-names>Daewon</given-names>
        </name>
        <xref rid="btac324-cor1" ref-type="corresp"/>
        <aff><institution>School of Art and Technology, College of Art and Technology, Chung-Ang University</institution>, Anseong, <country country="KR">Republic of Korea</country></aff>
        <aff><institution>Graduate School of Advanced Imaging Sciences, Multimedia, and Film, Chung-Ang University</institution>, Seoul, <country country="KR">Republic of Korea</country></aff>
        <!--dwlee@cau.ac.kr-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btac324-cor1">Email: <email>dwlee@cau.ac.kr</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-05-13">
      <day>13</day>
      <month>5</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>13</day>
      <month>5</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>12</issue>
    <fpage>3310</fpage>
    <lpage>3311</lpage>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>29</day>
        <month>3</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>07</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>09</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>25</day>
        <month>5</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac324.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>High-quality visualization of biological networks often requires both manual curation for proper alignment and programming to map external data to the graphical components. Nezzle is a network visualization software written in Python, which provides programmable and interactive interfaces for facilitating both manual and automatic curation of the graphical components of networks to create high-quality figures.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>Nezzle is an open-source project under MIT license and is available from <ext-link xlink:href="https://github.com/dwgoon/nezzle" ext-link-type="uri">https://github.com/dwgoon/nezzle</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Chung-Ang University Research Grants in 2020</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Culture Technology R&amp;D Program 2021 through the Korea Creative Content Agency funded by Ministry of Culture</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R2021040044</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="2"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>A variety of real-world phenomena such as biological pathways, communication networks and social relationships can be represented as networks (<xref rid="btac324-B15" ref-type="bibr">Barabási, 2016</xref>). An insightful visualization of networks facilitates understanding of the analyzed networks and leads to important discoveries. Therefore, open-source software for analyzing and visualizing networks such as GraphViz (<xref rid="btac324-B6" ref-type="bibr">Ellson <italic toggle="yes">et al.</italic>, 2001</xref>), NetDraw (<xref rid="btac324-B4" ref-type="bibr">Borgatti, 2002</xref>), Cytoscape (<xref rid="btac324-B13" ref-type="bibr">Shannon <italic toggle="yes">et al.</italic>, 2003</xref>), Pajek (<xref rid="btac324-B3" ref-type="bibr">Batagelj and Mrvar, 2004</xref>) and Gephi (<xref rid="btac324-B2" ref-type="bibr">Bastian <italic toggle="yes">et al.</italic>, 2009</xref>) have been developed, and they have made significant contributions to the field of network science.</p>
    <p>As the Python programming language has become a <italic toggle="yes">lingua franca</italic> for scientific computing (<xref rid="btac324-B9" ref-type="bibr">Harris <italic toggle="yes">et al.</italic>, 2020</xref>), the demand of scientific communities for network visualization in Python has led to the development of the essential libraries and plug-ins. For example, PyGraphviz is a Python interface to the Graphviz, which allows programming the applications of GraphViz in Python (<xref rid="btac324-B7" ref-type="bibr">Hagberg <italic toggle="yes">et al.</italic>, 2004</xref>). Gephi provides a scripting plug-in for Python scripting based on Jython (<xref rid="btac324-B2" ref-type="bibr">Bastian <italic toggle="yes">et al.</italic>, 2009</xref>), and GephiStreamer is a third-party Python package that communicates with Gephi through WebSocket and REST API (<xref rid="btac324-B14" ref-type="bibr">Totet, 2014</xref>). Cytoscape also supports Python programming through CyREST and py4cytoscape (<xref rid="btac324-B5" ref-type="bibr">Demchak, 2020</xref>; <xref rid="btac324-B11" ref-type="bibr">Ono <italic toggle="yes">et al.</italic>, 2015</xref>). However, the aforementioned methods have some limitations in terms of interactive graphical user interface (GUI) and seamless programming in Python. PyGraphViz does not provide any interactive GUI. Python programming in Cytoscape and Gephi is inherently indirect, since they are implemented in Java and rely on a client–server communication.</p>
    <p>To achieve both interactivity and seamlessness for visualizing biological networks with external data in Python, we have developed a network visualization software named Nezzle (it means <bold>Ne</bold>t + Pu<bold>zzle</bold>, because adjusting nodes and edges of a network for visualization is similar to doing a puzzle). Nezzle provides interactive and programmable interfaces that allow users to adjust the positions of nodes and edges and automate the stylization of graphical components through Python programming.</p>
    <p><xref rid="btac324-F1" ref-type="fig">Figure 1A</xref> shows the place of Nezzle in the ecosystem of network visualization in Python. It is located at the position that represents a compromise between interactive GUI and seamless programming in Python. PyGraphViz with Matplotlib (<xref rid="btac324-B10" ref-type="bibr">Hunter, 2007</xref>) and NetworkX (<xref rid="btac324-B8" ref-type="bibr">Hagberg <italic toggle="yes">et al.</italic>, 2008</xref>) is one of the successful solutions for automating network visualization. However, users may have a hard time arranging graphical components as this solution lacks an interactive GUI. On the other hand, Nezzle pursues a lightweight and highly customizable software rather than an enterprise-level and all-in-one software that presents an integrated visualization and analysis environment (IVAE) such as Cytoscape and Gephi. Therefore, the GUI of Nezzle is designed to be as minimal as possible, while solving most problems programmatically.</p>
    <fig position="float" id="btac324-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Overview of Nezzle. (<bold>A)</bold> Location of Nezzle in the ecosystem of network visualization in terms of interactive GUI and seamless programming in Python. <bold>(B)</bold> Main components of Nezzle GUI. <bold>(C)</bold> Use cases of Nezzle.</p>
      </caption>
      <graphic xlink:href="btac324f1" position="float"/>
    </fig>
  </sec>
  <sec>
    <title>2 Features and use cases</title>
    <sec>
      <title>2.1 Design concept</title>
      <p>Visualization in Nezzle is designed primarily to be performed through code execution, and the graphical components are edited manually via the network view of GUI only when necessary (<xref rid="btac324-F1" ref-type="fig">Fig. 1B</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). This is similar to refining the elements of a Matplotlib figure through the GUI after plotting by code execution (<xref rid="btac324-B10" ref-type="bibr">Hunter, 2007</xref>). One of the important features of Nezzle is seamless programming in Python, which means that any Python module or package can be a plug-in for extending the functionality of Nezzle without inter-process or server–client communications (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>).</p>
    </sec>
    <sec>
      <title>2.2 Lightweight visualization</title>
      <p>Most scientists today use high-level languages such as Python, R, and Julia rather than Java and C++. With a few changes, scientists can develop their own visualization pipelines based on existing Python codes with Nezzle. In particular, in the case of simple styling automation or visualization of external data through programming, it is more productive to utilize a lightweight software that supports a high-level language like Python (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Notes</xref>). Nezzle is expected to be an alternative to programming in low-level languages for network visualization.</p>
    </sec>
    <sec>
      <title>2.3 Rapid prototyping</title>
      <p>Nezzle provides a set of essential features for rapid prototyping to visualize biological networks (<xref rid="btac324-F1" ref-type="fig">Fig. 1C</xref>). In general, researchers have to go through a trial-and-error process until they obtain a satisfactory visualization. Users can copy network images from Nezzle and paste them into presentation or word processor software via clipboard to accumulate and compare intermediate visualization results. After confirming the final visualization, users can also export networks as high-quality images or movies for publication.</p>
      <p>Nezzle can be a testbed for rapidly evaluating the feasibility of algorithms related to biological networks in Python. For example, users can develop a prototype of network visualization algorithm that is optimized based on a GPU-accelerated deep learning framework such as PyTorch (<xref rid="btac324-B12" ref-type="bibr">Paszke <italic toggle="yes">et al.</italic>, 2019</xref>). After developing prototype-level algorithms in Nezzle, users may want to implement the algorithms as product-level plug-ins for IVAEs such as Cytoscape or Gephi (<xref rid="btac324-F1" ref-type="fig">Fig. 1C</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Conclusion</title>
    <p>To achieve both manual curation as well as automatic stylization for high-quality visualization of biological networks in Python, Nezzle provides interfaces for interactive graphics and dynamic code execution. Nezzle enables users to rapidly prototype network visualization while obtaining high-quality images for publication. We expect Nezzle will contribute to advancing the ecosystem of network visualization.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btac324_Supplementary_Data</label>
      <media xlink:href="btac324_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank the members of Complex Intelligent Systems Laboratory at Chung-Ang University (<ext-link xlink:href="https://cislab.cau.ac.kr" ext-link-type="uri">https://cislab.cau.ac.kr</ext-link>) for their critical reading and valuable comments.</p>
    <sec>
      <title>Funding</title>
      <p>This research was supported by Chung-Ang University Research Grants in 2020, and by Culture Technology R&amp;D Program 2021 through the Korea Creative Content Agency funded by Ministry of Culture, Sports and Tourism (A Specialist Training of Content R&amp;D based on Virtual Production, R2021040044).</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac324-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Barabási</surname><given-names>A</given-names></string-name></person-group>, .-L. (<year>2014</year>) <article-title>Network science book</article-title>. <source>Netw. Sci</source>., <volume>625</volume>.</mixed-citation>
    </ref>
    <ref id="btac324-B15">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Barabási</surname><given-names>A.-L.</given-names></string-name></person-group> (<year>2016</year>) <italic toggle="yes">Network Science</italic>. 1st edn. Cambridge University Press, Cambridge, England.</mixed-citation>
    </ref>
    <ref id="btac324-B2">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Bastian</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) <italic toggle="yes">Gephi: An Open Source Software for Exploring and Manipulating Networks</italic>. In <italic toggle="yes">Proceedings of the Third International AAAI Conference on Web and Social Media, San Jose, California, USA</italic>, Vol. 3, pp. 361–362.</mixed-citation>
    </ref>
    <ref id="btac324-B3">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Batagelj</surname><given-names>V.</given-names></string-name>, <string-name><surname>Mrvar</surname><given-names>A.</given-names></string-name></person-group> (<year>2004</year>) <part-title>Pajek—analysis and visualization of large networks</part-title>. In: <source>Graph Drawing Software</source>. <publisher-name>Springer</publisher-name>, Berlin, Heidelberg, pp. <fpage>77</fpage>–<lpage>103</lpage>.</mixed-citation>
    </ref>
    <ref id="btac324-B4">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Borgatti</surname><given-names>S.P.</given-names></string-name></person-group> (<year>2002</year>) <source>Netdraw software for network visualization</source>. <publisher-name>Analytic Technologies</publisher-name>, <publisher-loc>Lexington, KY</publisher-loc>, p. <fpage>95</fpage>.</mixed-citation>
    </ref>
    <ref id="btac324-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Demchak</surname><given-names>B.</given-names></string-name></person-group> (<year>2020</year>) <italic toggle="yes">py4cytoscape</italic>. <ext-link xlink:href="https://github.com/cytoscape/py4cytoscape" ext-link-type="uri">https://github.com/cytoscape/py4cytoscape</ext-link> (27 February 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="btac324-B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Ellson</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2001</year>) <part-title>Graphviz—open source graph drawing tools</part-title>. In: <source>International Symposium on Graph Drawing</source>. <publisher-name>Springer</publisher-name>, Berlin, Heidelberg, pp. <fpage>483</fpage>–<lpage>484</lpage>.</mixed-citation>
    </ref>
    <ref id="btac324-B7">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Hagberg</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2004</year>) <italic toggle="yes">PyGraphViz</italic>. <ext-link xlink:href="https://github.com/pygraphviz/pygraphviz" ext-link-type="uri">https://github.com/pygraphviz/pygraphviz</ext-link> (27 February 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="btac324-B8">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Hagberg</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2008</year>) Exploring network structure, dynamics, and function using networks. <italic toggle="yes">Technical report</italic>. Los Alamos National Lab. (LANL), Los Alamos, NM.</mixed-citation>
    </ref>
    <ref id="btac324-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>C.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>Array programming with NumPy</article-title>. <source>Nature</source>, <volume>585</volume>, <fpage>357</fpage>–<lpage>362</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="btac324-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hunter</surname><given-names>J.D.</given-names></string-name></person-group> (<year>2007</year>) <article-title>Matplotlib: a 2D graphics environment</article-title>. <source>Comput. Sci. Eng</source>., <volume>9</volume>, <fpage>90</fpage>–<lpage>95</lpage>.</mixed-citation>
    </ref>
    <ref id="btac324-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ono</surname><given-names>K.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>CyREST: turbocharging cytoscape access for external tools via a RESTful API</article-title>. <source>F1000Research</source>, <volume>4</volume>, <fpage>478</fpage>.<pub-id pub-id-type="pmid">26672762</pub-id></mixed-citation>
    </ref>
    <ref id="btac324-B12">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Paszke</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>). <part-title>PyTorch: an imperative style, high-performance deep learning library</part-title>. In <italic toggle="yes">Proceedings of the 33rd International Conference on Neural Information Processing Systems</italic>, <italic toggle="yes">Vancouver, Canada</italic>, pp. <fpage>8026</fpage>–<lpage>8037</lpage>.</mixed-citation>
    </ref>
    <ref id="btac324-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shannon</surname><given-names>P.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2003</year>) <article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title>. <source>Genome Res</source>., <volume>13</volume>, <fpage>2498</fpage>–<lpage>2504</lpage>.<pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="btac324-B14">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Totet</surname><given-names>M.</given-names></string-name></person-group> (<year>2014</year>) <italic toggle="yes">GephiStreamer</italic>. <ext-link xlink:href="https://github.com/totetmatt/GephiStreamer" ext-link-type="uri">https://github.com/totetmatt/GephiStreamer</ext-link> (27 February 2022, date last accessed).</mixed-citation>
    </ref>
  </ref-list>
</back>

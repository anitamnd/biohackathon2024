<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Molecules</journal-id>
    <journal-id journal-id-type="iso-abbrev">Molecules</journal-id>
    <journal-id journal-id-type="publisher-id">molecules</journal-id>
    <journal-title-group>
      <journal-title>Molecules</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1420-3049</issn>
    <publisher>
      <publisher-name>MDPI</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6337464</article-id>
    <article-id pub-id-type="doi">10.3390/molecules24010179</article-id>
    <article-id pub-id-type="publisher-id">molecules-24-00179</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Scalable Extraction of Big Macromolecular Data in Azure Data Lake Environment</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-6764-6656</contrib-id>
        <name>
          <surname>Mrozek</surname>
          <given-names>Dariusz</given-names>
        </name>
        <xref rid="c1-molecules-24-00179" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dąbek</surname>
          <given-names>Tomasz</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-4977-4915</contrib-id>
        <name>
          <surname>Małysiak-Mrozek</surname>
          <given-names>Bożena</given-names>
        </name>
      </contrib>
    </contrib-group>
    <aff id="af1-molecules-24-00179">Institute of Informatics, Silesian University of Technology, Akademicka 16, 44-100 Gliwice, Poland; <email>dabek.t@gmail.com</email> (T.D.); <email>bozena.malysiak@polsl.pl</email> (B.M.-M.)</aff>
    <author-notes>
      <corresp id="c1-molecules-24-00179"><label>*</label>Correspondence: <email>dariusz.mrozek@polsl.pl</email>; Tel.: +48-32-237-1339</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>05</day>
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>1</month>
      <year>2019</year>
    </pub-date>
    <volume>24</volume>
    <issue>1</issue>
    <elocation-id>179</elocation-id>
    <history>
      <date date-type="received">
        <day>08</day>
        <month>11</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>01</day>
        <month>1</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2019 by the authors.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="open-access">
        <license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Calculation of structural features of proteins, nucleic acids, and nucleic acid-protein complexes on the basis of their geometries and studying various interactions within these macromolecules, for which high-resolution structures are stored in Protein Data Bank (PDB), require parsing and extraction of suitable data stored in text files. To perform these operations on large scale in the face of the growing amount of macromolecular data in public repositories, we propose to perform them in the distributed environment of Azure Data Lake and scale the calculations on the Cloud. In this paper, we present dedicated data extractors for PDB files that can be used in various types of calculations performed over protein and nucleic acids structures in the Azure Data Lake. Results of our tests show that the Cloud storage space occupied by the macromolecular data can be successfully reduced by using compression of PDB files without significant loss of data processing efficiency. Moreover, our experiments show that the performed calculations can be significantly accelerated when using large sequential files for storing macromolecular data and by parallelizing the calculations and data extractions that precede them. Finally, the paper shows how all the calculations can be performed in a declarative way in U-SQL scripts for Data Lake Analytics.</p>
    </abstract>
    <kwd-group>
      <kwd>data processing</kwd>
      <kwd>Cloud computing</kwd>
      <kwd>Big Data</kwd>
      <kwd>data extraction</kwd>
      <kwd>data lake</kwd>
      <kwd>parallel computing</kwd>
      <kwd>querying</kwd>
      <kwd>proteins</kwd>
      <kwd>nucleic acids, macromolecules</kwd>
      <kwd>3D structure</kwd>
      <kwd>structural bioinformatics</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="sec1-molecules-24-00179">
    <title>1. Introduction</title>
    <p>Parsing macromolecular data files is one of the first processes preceding many operations performed on 3D structures of proteins and nucleic acids, including statistical calculations over geometry of proteins, investigations of protein inter-residue contacts, docking prediction, 3D protein structure alignment, studying intra-protein interactions that stabilize protein molecules, like disulphide bonds, aromatic-aromatic interactions, sulphur–aromatic interactions, ionic interactions. Macromolecular data describing 3D structures of proteins and nucleic acids are usually stored in files that have various formats. Protein Data Bank (PDB) [<xref rid="B1-molecules-24-00179" ref-type="bibr">1</xref>], the most popular repository established to collect data describing 3D structures of macromolecules, stores and exchanges the data in three formats—PDB [<xref rid="B2-molecules-24-00179" ref-type="bibr">2</xref>], mmCIF [<xref rid="B3-molecules-24-00179" ref-type="bibr">3</xref>], and PDBML [<xref rid="B4-molecules-24-00179" ref-type="bibr">4</xref>]. All of them are text files with sections and records that hold a particular type of information. The descriptions of macromolecular structures in these files include primarily their geometries, but also many other features that determine the physical and chemical properties of DNA, RNA, and protein molecules. These features can be directly extracted from the files or derived by calculations on the basis of macromolecular data stored in them.</p>
    <p>However, the exponential growth of macromolecular data in the Protein Data Bank may pose pressure on the existing hardware equipment, as compute capabilities of desktop computers are usually limited [<xref rid="B5-molecules-24-00179" ref-type="bibr">5</xref>]. With this hardware, some calculations performed over protein geometries and atomic interactions can be successfully completed in several minutes only for smaller collections of macromolecular data. However, as the repositories grow quickly every year, desktop computers may become a bottleneck in the entire discovery process [<xref rid="B6-molecules-24-00179" ref-type="bibr">6</xref>,<xref rid="B7-molecules-24-00179" ref-type="bibr">7</xref>]. This results in focusing on the use of various scalable platforms that would support efficient data processing and calculations [<xref rid="B8-molecules-24-00179" ref-type="bibr">8</xref>,<xref rid="B9-molecules-24-00179" ref-type="bibr">9</xref>,<xref rid="B10-molecules-24-00179" ref-type="bibr">10</xref>]. Taking into account the complex nature of biological data, including macromolecular data of proteins, various storage formats for the data, the growing amount of the data, and finally, the complexity of some calculation processes performed over the data, we may find out that we meet challenges of Big Data processing and analysis [<xref rid="B11-molecules-24-00179" ref-type="bibr">11</xref>,<xref rid="B12-molecules-24-00179" ref-type="bibr">12</xref>,<xref rid="B13-molecules-24-00179" ref-type="bibr">13</xref>]. Performing many calculations with 3D structures of proteins and nucleic acids meets the 5V model of Big Data at least in terms of the <italic>volume</italic> and the <italic>variety</italic> of data, and maybe for some calculations (e.g., those related to drug design) also the <italic>value</italic>. This leads to the use of various Big Data platforms, like Hadoop [<xref rid="B14-molecules-24-00179" ref-type="bibr">14</xref>] or Spark [<xref rid="B15-molecules-24-00179" ref-type="bibr">15</xref>], to perform these calculations for large collections of data, and make us switching to Cloud computing platforms that enable almost unlimited compute resources for scaling the calculations broadly [<xref rid="B16-molecules-24-00179" ref-type="bibr">16</xref>].</p>
    <p>In this paper, we show how parsing and extracting big macromolecular data of proteins and nucleic acids can be effectively performed in highly scalable Azure Data Lake cloud environment. The  solution presented here mitigates the problem of limited compute resources of desktop computers, in terms of data storing and processing. Moreover, by using the declarative U-SQL query language we now simplify the manipulation of macromolecular data and performing calculations over 3D structures of macromolecules. Together with the methods, in the paper, we show sample U-SQL scripts that can be used in scalable, parallel calculations performed in the Azure Data Lake environment.</p>
  </sec>
  <sec id="sec2-molecules-24-00179">
    <title>2. Related Works</title>
    <p>The spectrum of calculations performed over 3D structures of macromolecules, including proteins, can be very broad. It may include various exploration operations that are based on simple calculations on particular atoms, but also more complex calculations related to structure similarity searching, structural alignment, structural superposition, or computational protein structure determination through prediction. Among the tools that were reported for the exploration of various features of proteins and their geometries, there have been developed several ones that are focused on the recognition and the analysis of different types of interactions in proteins carried out on experimentally determined, high-resolution protein structures from the Protein Data Bank. For example, the protein interactions calculator (PIC) server reported by Tina et al. [<xref rid="B17-molecules-24-00179" ref-type="bibr">17</xref>] was developed for studying different types of interactions that occur within a given protein structure. The aromatic-aromatic Interactions Database (A2ID) reported by Chourasia et al. [<xref rid="B18-molecules-24-00179" ref-type="bibr">18</xref>] allows studying the aromatic-aromatic networks within proteins. IntGeom [<xref rid="B19-molecules-24-00179" ref-type="bibr">19</xref>] can be used for the calculation of interaction geometry between planar groups in proteins. Mentioned examples, however, neither focus on the performance of the operations nor provide large flexibility on performed data explorations.</p>
    <p>In this regard and in terms of big data processing, interesting ideas were proposed by Hazelhurst in [<xref rid="B20-molecules-24-00179" ref-type="bibr">20</xref>]. In the work, the author reported a Hadoop-based PH2 system that enables the exploration of various features of 3D protein structures, e.g., calculation of distances between particular atoms within single protein structures. For this purpose, the system uses the Structured Query Language (SQL)  [<xref rid="B21-molecules-24-00179" ref-type="bibr">21</xref>] as a query language, which provides flexibility in querying macromolecular data. 3D protein structures, as raw PDB files, are stored in a replicated way on the Hadoop Distributed File System (HDFS). PH2 system relies on massive parallelism provided by Hadoop computational framework in order to improve the efficiency of the exploration process. SpeeDB reported by Robillard et al. in  [<xref rid="B22-molecules-24-00179" ref-type="bibr">22</xref>] also tackles similar problems. It provides in-memory database structure to investigate various types of interactions in proteins, including hydrogen bonds, ionic interactions, disulfide bonds, and aromatic interactions but seems to be less flexible in the exploration capabilities. In-memory protein structure management system was also used by us in the IMPSMS for fast calculations over 3D protein structures  [<xref rid="B23-molecules-24-00179" ref-type="bibr">23</xref>]. However, the system suffered the problem of limited memory, leading to a limited number of proteins that could be stored in it.</p>
    <p>Since in the paper we show a solution for various types of calculations performed over protein structures that works on the basis of declarative queries, it is also worth mentioning SQL-based approaches for querying protein data stored in relational databases. For example, procedural extensions to Oracle RDBMS for aligning and matching protein sequences, called the ODM BLAST, were reported in [<xref rid="B24-molecules-24-00179" ref-type="bibr">24</xref>]. The BioSQL [<xref rid="B25-molecules-24-00179" ref-type="bibr">25</xref>], which incorporates modules of the BioJava project [<xref rid="B26-molecules-24-00179" ref-type="bibr">26</xref>], focuses on biomolecular sequences and features, their annotation, a reference taxonomy, and ontologies. Several extensions to the SQL language, including PSS-SQL [<xref rid="B27-molecules-24-00179" ref-type="bibr">27</xref>,<xref rid="B28-molecules-24-00179" ref-type="bibr">28</xref>] and the query language developed by Hammel and Patel [<xref rid="B29-molecules-24-00179" ref-type="bibr">29</xref>] and Tata et al. [<xref rid="B30-molecules-24-00179" ref-type="bibr">30</xref>], were proposed for searching protein similarities on the basis of protein secondary structures. These works show how protein data can be stored in relational tables. They also present searching techniques that can be applied to explore the data, and how these data are indexed in order to speed up the searching process. Although these extensions allow to operate on the primary (ODM BLAST) and the secondary structures of proteins (the rest), these tools do not directly address processing 3D protein structures. In terms of processing and querying 3D protein structures in relational databases, Mrozek et al. [<xref rid="B31-molecules-24-00179" ref-type="bibr">31</xref>] developed the P3D-SQL extension for the Oracle PL/SQL language that allows invoking 3D protein structure similarity searching in SQL queries and performing the process against the whole relational database of 3D protein structures. However, the performance of the solution is worse than the performance of the process executed on raw PDB files stored on hard disc drives (HDD), since the process is executed within Oracle memory pool, which is also limited.</p>
    <p>To overcome the problems of limited computational power and limited memory, several cloud-based solutions for exploration processes performed over protein structures were proposed. For example, the system developed by Che-Lun Hung and Yaw-Ling Lin [<xref rid="B32-molecules-24-00179" ref-type="bibr">32</xref>] uses Hadoop-based implementations of two popular fold-based alignment methods—DALI [<xref rid="B33-molecules-24-00179" ref-type="bibr">33</xref>] and VAST [<xref rid="B34-molecules-24-00179" ref-type="bibr">34</xref>]. The  system is scaled on a private cloud. Hadoop and the MapReduce processing model is also used in our previous works [<xref rid="B35-molecules-24-00179" ref-type="bibr">35</xref>,<xref rid="B36-molecules-24-00179" ref-type="bibr">36</xref>,<xref rid="B37-molecules-24-00179" ref-type="bibr">37</xref>] for the same purpose. These works also show that the use of sequential files (instead of processing individual structures) may increase the performance of parallel protein structure similarity searches. Sequential files will also be used in the approach presented in the paper. Dedicated cloud-based architectures were also developed for scalable protein structure similarity searching [<xref rid="B38-molecules-24-00179" ref-type="bibr">38</xref>,<xref rid="B39-molecules-24-00179" ref-type="bibr">39</xref>,<xref rid="B40-molecules-24-00179" ref-type="bibr">40</xref>,<xref rid="B41-molecules-24-00179" ref-type="bibr">41</xref>] and protein structure prediction [<xref rid="B42-molecules-24-00179" ref-type="bibr">42</xref>,<xref rid="B43-molecules-24-00179" ref-type="bibr">43</xref>]. These works prove that cloud resources may significantly simplify and accelerate many calculations related to protein structures.</p>
    <p>The approach presented in the paper combines wide scaling capabilities offered by the Cloud computing model, Big Data techniques for efficient data processing, and declarative capabilities of SQL-based solutions that simplify various data explorations by querying Big macromolecular Data  sets.</p>
  </sec>
  <sec id="sec3-molecules-24-00179">
    <title>3. Methods and Technologies</title>
    <p>To mitigate the above-mention problems we have developed the <italic>PDBUSQLExtractor</italic> that allows parsing and extracting data from PDB files describing structures of proteins, nucleic acids, and their complexes. In this section, we provide implementation details of the scalable parser for the PDB macromolecular data files developed for the Azure Data Lake.</p>
    <sec id="sec3dot1-molecules-24-00179">
      <title>3.1. Extensions to the Azure Data Lake Environment</title>
      <p>Our <italic>PDBUSQLExtractor</italic> parser with all extraction methods was developed for the Azure Data Lake environment. Azure Data Lake (ADL) is a scalable, cloud environment that enables storing and analyzing large data sets. The interactive batch analysis in the ADL is possible in real time for various types of data, including structured, semi-structured, and unstructured data [<xref rid="B44-molecules-24-00179" ref-type="bibr">44</xref>]. The architecture of our solution for extracting and processing Big macromolecular Data in Azure Data Lake is presented in <xref ref-type="fig" rid="molecules-24-00179-f001">Figure 1</xref>. The Azure Data Lake consists of two main components:<list list-type="order"><list-item><p>Data Lake Store (DLS), which constitutes a petabyte scale, unlimited storage for a domain-related data lake, in which large collections of data located in various files are distributed across many storage servers. This enables performing read operations in parallel and improves the performance of data read operations.</p></list-item><list-item><p>Data Lake Analytics (DLA), which enables efficient and scalable analysis of data stored in Big Data Lakes by parallelizing the analysis on a distributed infrastructure in the Azure cloud. It  provides the U-SQL compiler and distributed execution environment for declarative processing and analysis of data stored in the Data Lake Store.</p></list-item></list></p>
      <p>The U-SQL is a big data query language that combines the declarative capabilities of the SQL query language and expressive power of C# code. Data analysis, preceded by extraction, processing, and transformation of data from the data lake, is performed with the use of the U-SQL scripts containing query expressions. U-SQL scripts can be executed through four available channels, including application programming interfaces (APIs), Azure portal, PowerShell environment, and Visual Studio programming platform. U-SQL programmers and data analysts may use various expressions in data analyses they perform, including the most popular SELECT expression, and also PROCESS, REDUCE, and COMBINE expressions that apply custom or user-defined operators (UDOs). These query expressions produce rowsets that can be assigned to rowset variables. The rowset variables are populated in the EXTRACT U-SQL phrase with the use of appropriate <italic>data extractor</italic>. Built-in extractors, like CSV, TSV, or Text can be used for data extraction. However, specific file formats, like the PDB, require dedicated, custom extractors that know how to extract the data, how a single record looks like, how atomic the information stored in it is, and how to read it. We have developed the <italic>PDBUSQLExtractor</italic> for parsing and extracting data from PDB macromolecular data files describing structures of proteins and nucleic acids. Custom extractors, as .NET assemblies are stored in the Azure SQL Database. Each execution of the U-SQL script invoking the <italic>PDBUSQLExtractor</italic> causes loading the extractor-related DLL library into the execution environment of the Azure Data Lake Analytics. Macromolecular data of proteins and nucleic acids are stored in the Azure Data Lake Store. The Data Lake Analytics has wide access to the data stored in the repository (DLS). Results of data extraction and processing are also stored in the Data Lake Store by invoking the U-SQL OUTPUT expression that uses appropriate <italic>data outputter</italic>. Likewise in the EXTRACT phase, data outputters can be built-in or  custom.</p>
    </sec>
    <sec id="sec3dot2-molecules-24-00179">
      <title>3.2. Setting Up the Azure Data Lake for Scalable Extraction of Macromolecular Data</title>
      <p>To use the <italic>PDBUSQLExtractor</italic> a user must initially complete 3 steps:<list list-type="order"><list-item><p>set up the Azure Data Lake environment,</p></list-item><list-item><p>upload PDB files with macromolecular structures into the Azure Data Lake Store,</p></list-item><list-item><p>register the <italic>PDBUSQLExtractor</italic> library in the Azure Data Lake Analytics.</p></list-item></list></p>
      <p>All of the mentioned operations can be completed through the Azure portal, Azure PowerShell, Azure CLI, or appropriate Application Programming Interfaces (APIs). Users should follow the Azure Data Lake Analytics Documentation [<xref rid="B45-molecules-24-00179" ref-type="bibr">45</xref>] for the particular method. Setting up the Azure Data Lake environment in the Microsoft Azure cloud (step 1) can be easily done through the Azure portal (<uri xlink:href="http://portal.azure.com/">http://portal.azure.com/</uri>), which provides a graphical interface that simplifies the management and configuration of the ADL platform. The portal is available through web browsers in any operating system (OS). What is important, users must set up the ADL environment within their own Azure subscriptions, since they will bear the costs of using the platform (costs of storing the data and costs of computations performed). The same portal can be used for uploading the processed and analyzed data describing macromolecular structures (step 2). However, in the case of many files with macromolecular data, the preferable way may be using one of the command-line tools, like the Azure PowerShell or the Azure CLI. Azure PowerShell is an extension of Windows PowerShell that provides cmdlets for simplifying and automating the management of Azure cloud services. Azure CLI is another Microsoft’s command-line tool for managing Azure resources, but in contrast to the Azure PowerShell, it can operate on various OS platforms. Registering the <italic>PDBUSQLExtractor</italic> library (<italic>PDBUSQLExtractor.dll</italic>, please refer to the Availability section at the end of the paper) in Azure Data Lake environment (step 3) is necessary for using the created data extractors in U-SQL scripts, since the library extends standard capabilities of the ADL environment. The library must be registered as an assembly in one of the Azure SQL Databases (<italic>master</italic> by default) available in the Azure Data Lake environment. Code editors, like Microsoft Visual Studio, greatly facilitate the library registering task, though all mentioned methods can be used for this.</p>
      <p>After completing the three necessary steps, the user can start developing the U-SQL scripts for data extraction and secondary data analysis. For the development of the U-SQL scripts, he can use any code editor, preferably Microsoft Visual Studio or Visual Studio Code. The latter one is an open-source and free source code editor developed by Microsoft for Windows, Linux, and macOS. Both editors include support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring. The developed U-SQL scripts can be executed in the Cloud, in the configured Azure Data Lake environment, or tested locally. Cloud executions allow for parallelization of computations related to data extraction and secondary analysis and scaling the computations on many compute units. Local executions, used for testing the U-SQL scripts, are supported by Azure Data Lake Tools for Visual Studio or by Azure Data Lake U-SQL SDK.</p>
    </sec>
    <sec id="sec3dot3-molecules-24-00179">
      <title>3.3. Modules and Methods for Parsing PDB Files</title>
      <p>In the U-SQL scripts, parsing and extracting of macromolecular data of proteins and nucleic acids is possible by using a dedicated extractor from the created class <monospace>PDBUSQLExtractor</monospace>. The extractor is invoked in the EXTRACT U-SQL statement as it is shown in Listing 1 in line 22. In the presented data extraction, we parse and extract data from the ATOM sections of PDB files (*.ent) located in the indicated folder in the Data Lake Store. The dedicated extractor parses each *.ent file in the folder and fetches data from an appropriate section. At the moment, we have implemented the extraction process for the following sections of the PDB files:<list list-type="bullet"><list-item><p>ATOM that presents the atomic coordinates for standard amino acids and nucleotides. It also presents the occupancy and temperature factor for each atom.</p></list-item><list-item><p>HETATM that presents non-polymer or other non-standard chemical coordinates, such as water molecules or atoms presented in HET groups, together with the occupancy and temperature factor for each atom.</p></list-item><list-item><p>SHEET that is used to identify the position of <inline-formula><mml:math id="mm1"><mml:mrow><mml:mi>β</mml:mi></mml:mrow></mml:math></inline-formula>-sheets in protein molecules.</p></list-item><list-item><p>HELIX that is used to identify the position of <inline-formula><mml:math id="mm2"><mml:mrow><mml:mi>α</mml:mi></mml:mrow></mml:math></inline-formula>-helices in protein molecules.</p></list-item><list-item><p>SEQRES that contains a listing of the consecutive chemical components (amino acids for proteins) covalently linked in a linear fashion to form a polymer.</p></list-item></list></p>
      <p>Although we developed the <italic>PDBUSQLExtractor</italic> extractor mainly for parsing PDB files with macromolecular data describing 3D structures of proteins, it can be also used to extract data from PDB files describing nucleic acids and DNA/RNA-protein complexes. For the DNA/RNA molecules, it is possible to extract data from the ATOM, the HETATM, and the SEQRES sections.</p>
      <graphic xlink:href="molecules-24-00179-g011.jpg" position="float" orientation="portrait"/>
      <p>Attributes fetched during the execution of the extraction script and data types for the attributes are specified dynamically in the EXTRACT clause of the U-SQL statement (lines 5–20). They should be adjusted to the section of the PDB files that is currently extracted. While developing our dedicated extractors we followed the PDB file format specification [<xref rid="B46-molecules-24-00179" ref-type="bibr">46</xref>]. Execution of the whole EXTRACT statement produces the @test rowset (line 4) that can be further processed and analyzed (example will be shown in <xref ref-type="sec" rid="sec4-molecules-24-00179">Section 4</xref>) or stored in the Data Lake Store for future processing. A part of the rowset produced by the presented U-SQL script has the form shown in <xref ref-type="fig" rid="molecules-24-00179-f002">Figure 2</xref> (column headers were formatted manually). Storing the produced rowset is performed in the OUTPUT statement (lines 24–26).</p>
      <p>Similar scripts can be implemented to extract other sections of the PDB macromolecular data files for proteins, nucleic acids, and nucleic acid-protein complexes. For example, Listing 2 shows a sample script for parsing and extracting data from the <monospace>SEQRES</monospace> sections of PDB files. The only difference from the previous script is the <monospace>SEQRES</monospace> value of the parameter of the <italic>PDBExtractor</italic> used in the <monospace>USING</monospace> clause of the <monospace>EXTRACT</monospace> statement (line 23) and attributes fetched in the <monospace>EXTRACT</monospace> clause (lines 5–21). The data from the <monospace>SEQRES</monospace> records of the PDB files are extracted according to the PDB file format documentation and the list of attributes contains: a serial number of the <monospace>SEQRES</monospace> record for the current chain (<monospace>serNum</monospace>), chain identifier (<monospace>chainId</monospace>), number of residues in the chain (<monospace>numRes</monospace>), and names of residues returned in thirteen following columns (<monospace>resName1</monospace>–<monospace>resName13</monospace>). Each returned row in the produced rowset (<monospace>@test</monospace>, line 4) is preceded by the protein PDB ID identifier (<monospace>proteinId</monospace>) since we process many PDB files.</p>
      <graphic xlink:href="molecules-24-00179-g012.jpg" position="float" orientation="portrait"/>
      <p>Execution of the sample script produces the <monospace>@test</monospace> rowset (line 4). Attributes of the rowset that are needed for further analysis can be selected in the SELECT U-SQL expression (example will be shown in <xref ref-type="sec" rid="sec4-molecules-24-00179">Section 4</xref>). A part of the rowset produced by the presented U-SQL script has the the form shown in <xref ref-type="fig" rid="molecules-24-00179-f003">Figure 3</xref>.</p>
    </sec>
    <sec id="sec3dot4-molecules-24-00179">
      <title>3.4. Optimizations</title>
      <p>The <italic>PDBUSQLExtractor</italic> parser and extractor was developed in such a way that it supports space-optimized and performance-optimized storage of macromolecular data in the Cloud. In terms of use of storage space for macromolecular data, the extractor allows to work with:<list list-type="bullet"><list-item><p>decompressed PDB macromolecular files,</p></list-item><list-item><p>compressed PDB macromolecular files.</p></list-item></list></p>
      <p>Using the compression allows reducing the storage space consumed on the Cloud, which has a positive impact on the costs of the Cloud storage. The <italic>PDBUSQLExtractor</italic> supports the standard *.gz compression for the PDB files. However, those users that possess the collections of decompressed macromolecular data in the form of PDB text files may also use the parser in data extraction and  processing.</p>
      <p>In terms of performance of the parsing and data extraction process, the <italic>PDBUSQLExtractor</italic> works on two types of data:<list list-type="bullet"><list-item><p>individual macromolecular data files that are extracted in parallel,</p></list-item><list-item><p>joined, sequential macromolecular data files that are also extracted in parallel.</p></list-item></list></p>
      <p>We assume that in a regular approach the user operates on the repository of standard, individual PDB macromolecular data files. These files will be extracted in parallel according to the parallelism factor set by the user while executing the U-SQL script in the Azure Data Lake environment. However, we also noticed that much better performance can be gained while processing the macromolecular data assembled in sequential macromolecular data files of larger sizes. Therefore, we also gave the possibility to process the data in such a way for these users that prioritize the performance.</p>
      <p>A part of a sample sequential file with several protein structures (in the PDB format) treated as single records in the ADL-based extraction and parsing is shown in <xref ref-type="fig" rid="molecules-24-00179-f004">Figure 4</xref>. The developed extraction method of the <italic>PDBUSQLExtractor</italic> parser uses the END section of each PDB data set to recognize the end of the record in the sequential file. Such a sequential file can be simply produced by using the <italic>copy</italic> command of the Microsoft Windows command line console.</p>
      <p>Extraction of the sequential files is performed with the use of the dedicated <monospace>PDBConcatExtractor</monospace> extractor, invoked in the <monospace>USING</monospace> clause of the <monospace>EXTRACT</monospace> statement in the U-SQL processing script, as it is presented in Listing 3, line 8. The extractor accepts the same parameters as the <monospace>PDBExtractor</monospace> extractor used for processing macromolecular data stored in individual PDB files.</p>
      <graphic xlink:href="molecules-24-00179-g013.jpg" position="float" orientation="portrait"/>
      <p>The advantage of the processing with the use of sequential files is that compute units used by the Data Lake Analytics for parallel extraction and processing will be initiated once. The initiation time is negligible in relation to the extraction and processing time of macromolecular data. The limitation of this solution is the maximum size of the row (record) the extractor can process, which is fixed to 4 MB. This means that the input collection should be divided into files of the size larger than 4 MB and those that are smaller than 4 MB. The smaller files should be concatenated into larger sequential files, and the larger ones should be extracted individually.</p>
      <p>Both types of files, individual and sequential, can be also stored as compressed and decompressed in the Azure Data Lake Storage and processed in the Data Lake Analytics. Influence of this optimization on the performance of the extraction will be studied in <xref ref-type="sec" rid="sec4-molecules-24-00179">Section 4</xref>.</p>
    </sec>
  </sec>
  <sec id="sec4-molecules-24-00179">
    <title>4. Results</title>
    <p>Azure Data Lake allows parallelizing many jobs related to data processing. Parallelization of macromolecular data extraction should bring significant improvements in the performance of the <italic>PDBUSQLExtractor</italic> and reduction of the execution time. We tested the reduction of the execution time in a series of experiments performed in the Azure Data Lake environment.</p>
    <sec id="sec4dot1-molecules-24-00179">
      <title>4.1. Experimental Setup</title>
      <p>The performance of the <italic>PDBUSQLExtractor</italic> was tested with the use of macromolecular data of 3D protein structures taken from the Protein Data Bank. We used two data sets in our tests:<list list-type="bullet"><list-item><p>data set DS1 containing 1475 files,</p></list-item><list-item><p>data set DS2 containing 14,750 files.</p></list-item></list></p>
      <p>The amount of data constituted  1% (DS1) and  10% (DS2) of 3D structures stored in the repository at the time of experiments. Data extractions were performed for three different sections of PDB files,  i.e.,:<list list-type="bullet"><list-item><p>ATOM,</p></list-item><list-item><p>SHEET,</p></list-item><list-item><p>SEQRES.</p></list-item></list></p>
      <p>Tests were performed with compressed and decompressed PDB macromolecular files stored as individual files and sequential files in all combinations. This gave four scenarios of performed  experiments:<list list-type="bullet"><list-item><p>decompressed-individual files (DI),</p></list-item><list-item><p>compressed-individual files (CI),</p></list-item><list-item><p>decompressed-sequential files (DS),</p></list-item><list-item><p>compressed-sequential files (CS).</p></list-item></list></p>
      <p>Parallelization was regulated by the <italic>parallelization factor</italic>, which was changed from one to 1475. This means that in the performance experiments we changed the number of compute units, in Azure Data Lake called <italic>Allocation Units</italic> (AUs), performing extractions and calculations from one up to 1475 (exactly, <inline-formula><mml:math id="mm3"><mml:mrow><mml:mrow><mml:mo>#</mml:mo><mml:mi>A</mml:mi><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>32</mml:mn><mml:mo>,</mml:mo><mml:mn>128</mml:mn><mml:mo>,</mml:mo><mml:mn>512</mml:mn><mml:mo>,</mml:mo><mml:mn>1024</mml:mn><mml:mo>,</mml:mo><mml:mn>1475</mml:mn></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>).</p>
      <p>To compare obtained results with traditional, local processing, we also used a PC workstation with CPU Core i7 4700MQ 2.4GHz (4 cores, 8 threads), RAM 16GB, storage HDD 1TB, working under control of the Microsoft Windows 7 64-bit operating system for performing pure extractions of ATOM sections of processed data sets.</p>
    </sec>
    <sec id="sec4dot2-molecules-24-00179">
      <title>4.2. Execution Times</title>
      <p>In the first series of tests, we verified the performance of the extraction process for 3D protein structures stored separately in individual files. This is the standard format that scientists from the whole world can use when downloading macromolecular data of proteins from the Protein Data Bank repository. In this series of tests, we used the data set DS1 with 1475 protein structures (files) and scaled the extraction process from 1 up to 1475 allocation units (AUs) used by the Azure Data Lake while executing U-SQL extraction scripts. Results of these tests are presented in <xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref>.</p>
      <p>As can be observed in <xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref> the execution time gradually decreases with the number of AUs (increasing parallelization factor). The execution time consists of the extraction time, the time needed for aggregating data from parallel streams, and the time of storing results. For a single AU, it takes more than 3 hours to extract appropriate sections and store extracted data in a new CSV file. The  execution time is much better for 32 AUs—the extraction, aggregation, and storing data takes between 6 and 8  min (391 s to 459 s, depending on the section and compression used). For 1024 AUs the process takes less than 2 min (e.g., 97 s for the CI-ATOM). Extraction of the ATOM sections takes more time than the extraction from other sections. This is due to the larger amount of data that must be extracted, aggregated, and finally, stored after the extraction. Generally, the extraction phase is parallelized better than aggregating and storing data. Therefore, speedup gains are not huge for the increasing number of used AUs. Shapes of the n-fold speedup curves can be observed in <xref ref-type="fig" rid="molecules-24-00179-f005">Figure 5</xref>.</p>
      <p>More details on the use of assigned compute resources can be seen in <xref ref-type="fig" rid="molecules-24-00179-f006">Figure 6</xref>. <xref ref-type="fig" rid="molecules-24-00179-f006">Figure 6</xref>a shows that after parallelizing the process on 1024 AUs most of the AUs are used only in the extraction phase in the first 20 s. The aggregation of extracted data and storing takes the rest of the 94 s taken by the whole process. When assigning less AUs, the use of the resources is more effective. For example, for the 32 AUs assigned, most of the resources are used through the whole execution process (until the 400th s, <xref ref-type="fig" rid="molecules-24-00179-f006">Figure 6</xref>b).</p>
      <p>Compression of data has almost no effect on the execution time. Nevertheless, the compressed data are extracted a little bit faster than uncompressed data in most cases (e.g., 459 s for DI-ATOM and 441 s for CI-ATOM, for 32 AUs in use, see <xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref>). The compression, however, has a significant impact on the storage space occupied. For example, the compressed data set DS1 used in this series of tests occupied 139 MB, and the decompressed one occupied 614 MB.</p>
      <p>Unfortunately, we could observe that the operating time was generally long for a relatively small total data size. Although the extraction of individual PDB files is well-parallelizable, it appeared to be a time-consuming process, especially for the executions that use a small number of AUs. The  same extraction process performed on the PC workstation took between 7 and 9 min (<xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref>, the PC column). This execution time is comparable to the time achieved by 32 AUs processing the same data set DS1 on the Azure Data Lake. This shows that processing individual files in highly scalable Big Data environment is possible, but not impressive in terms of execution times. There are two factors deciding about this. First of all, PDB files must be analyzed atomically. This means that the Azure Data Lake cannot split the analysis of one file between several AUs, because the relevant information, such as model number and protein ID, are stored in other sections of the file. The second factor is the specificity of the Data Lake Analytics platform. It is adapted and optimized to process large data sets. The internal implementation of the ADLA development engine favors the code written directly in the U-SQL from the code written through extensions in the C# language. This is due to the fact that the U-SQL code is compiled to the C++ language and the managed code is executed in the Common Language Runtime (CLR) virtual machine. The CLR virtual machine initialization process is relatively long. The larger the data size, the more negligible the process is. Unfortunately, in the series of tests, the average file size taken from the Protein Data Bank was 96 KB for compressed files and 417 KB for uncompressed files. Initialization of CLR virtual machines consumes most of the time of AU units. At  the same time, the ADL management process allocates one analytical unit for one input stream. This results in a huge time surplus dedicated to the initialization, finalization, and cleaning of CLR machine artifacts.</p>
      <p>The proposed solution for this problem is to pre-process the macromolecular data and combine multiple files into sequential files, as we proposed in <xref ref-type="sec" rid="sec3dot4-molecules-24-00179">Section 3.4</xref>. In this case, each component PDB file of the sequential file can be treated as a separate input row for the extractor. Another advantage in this approach is the ability to opt out of the atomic processing of the sequential file. Then, compute units of the Azure Data Lake Analytics have to be initialized only once, which should additionally reduce the execution time. We checked this approach in the second series of tests.</p>
      <p>For the second series of experiments, we created one sequential file with all macromolecular data from the data set DS1. Then, we run the data extraction process again in the Azure Data Lake. It was enough to use only one AU for the extraction process. Results of the execution are presented in <xref rid="molecules-24-00179-t002" ref-type="table">Table 2</xref>. The execution time of the extraction, aggregation, and storing data in output files takes less than 2 min (116 s) when extracting the ATOM section of the PDF files, and less than 1  min when extracting data from the SHEET (46 s) and the SEQRES (51 s) sections. When processing individual PDB files, such a short execution time is achievable when using hundreds of AUs (see execution times in <xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref> for 128 and 512 AUs). This confirms that the Azure Data Lake and our <italic>PDBUSQLExtractor</italic> are adjusted to processing Big Data files.</p>
      <p>Again, the compression (CS) has no effect on the execution time, but on the storage space occupied by the sequential files. The occupied storage space was similar to the one provided for individual files, as the files were just concatenated.</p>
      <p>In the third series of experiments, we decided to use a larger set of protein structures. For this purpose, we used the data set DS2 with 14,750 protein structures, randomly selected from the Protein Data Bank. The set of proteins was arranged in 10 sequential files of similar sizes. The parallelization factor was changed from 1 to ten (we used up to 10 AUs) during the data extraction. Results are presented only for the extraction of the atomic positions from the ATOM section, as the extraction of this section was the longest one among all the sections that were processed.</p>
      <p>Results of the execution of the whole extraction from the ATOM section of PDB files stored in sequential files for the varying number of allocation units (AUs) is presented in <xref ref-type="fig" rid="molecules-24-00179-f007">Figure 7</xref>. As can be observed the best execution time was achieved when extracting atomic data from 10 sequential files storing approximately 10% of the Protein Data Bank content with the use of 10 AUs—the process took only 330 s.</p>
      <p>This confirms that our optimization in storage format by combining multiple PDB files into sequential files, and development of appropriate U-SQL data extractor, gives measurable benefits for the efficiency of the extraction process. The execution time has significantly decreased when comparing it to processing individual files (see <xref rid="molecules-24-00179-t001" ref-type="table">Table 1</xref>), and the cost of the processing according to the Data Lake Analytics price list has been significantly reduced (in the Cloud users pay for the time of used compute resources). The execution time of the U-SQL scripts became also more predictable compared to the first solution.</p>
    </sec>
    <sec id="sec4dot3-molecules-24-00179">
      <title>4.3. Sample Calculations</title>
      <p>In this section, we show sample calculations that are accompanied by the extraction of atomic positions. In the presented example, we calculate distances between successive <inline-formula><mml:math id="mm4"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms in each chain of successive proteins. Then, we select only these residues for which the distance to <inline-formula><mml:math id="mm5"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms in the following residue is around 3.81Å. For two <inline-formula><mml:math id="mm6"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms from a protein chain:<disp-formula id="FD1-molecules-24-00179"><label>(1)</label><mml:math id="mm7"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mspace width="1.em"/><mml:mi>and</mml:mi><mml:mspace width="1.em"/><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm8"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> are Cartesian coordinates of particular <inline-formula><mml:math id="mm9"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms, the distance between them can be calculated as the norm:<disp-formula id="FD2-molecules-24-00179"><label>(2)</label><mml:math id="mm10"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo>∥</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>∥</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>⁢</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msqrt><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
or by using the Euclidean distance:<disp-formula id="FD3-molecules-24-00179"><label>(3)</label><mml:math id="mm11"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:msubsup><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p>
      <p>Unless the data on the positions of <inline-formula><mml:math id="mm12"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is prepared, the extraction process precedes the calculations and the <italic>PDBUSQLExtractor</italic> must be used. Listing 4 shows a sample U-SQL script that may implement the whole data processing task.</p>
      <p>The U-SQL script references two external libraries. The <italic>PDBUSQLExtractor</italic> library contains implementations of extractors for individual and sequential PDB files (line 1). The FuzzySearchLib library (referenced in line 2) contains modules with classes and methods that allow using fuzzy search conditions to find all those distances that are around 3.81Å. Data extraction is performed by the EXTRACT expression executed in section S1 of the script (lines 6–25). The expression uses the <monospace>PDBConcatExtractor</monospace> (line 25) for fetching data from the ATOM sections of the PDB files assembled in a sequential file indicated in the FROM clause (line 24). Appropriate data from the ATOM sections of each protein, including the <inline-formula><mml:math id="mm13"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> coordinates of atoms, are extracted and supplemented by the <monospace>proteinId</monospace> and <monospace>modelId</monospace> (lines 8–9). The SELECT expression in section S2 of the U-SQL script (lines 27–39) retrieves only these fields of the produced rowset that are further needed for the calculations (lines 29–37), and only these rows of the rowset that correspond to the <inline-formula><mml:math id="mm14"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms by applying appropriate filtering condition in the WHERE clause (line 39). The SELECT expression in section S3 of the U-SQL script performs the calculation of distances between two successive <inline-formula><mml:math id="mm15"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> atoms in each protein chain and produces the new rowset with distances, called <monospace>@filteredDistances</monospace>. Finally, the rowset is used in the SELECT expression in section S4 of the U-SQL script (lines 56–61). This expression implements a fuzzy query with the fuzzy search condition <italic>Distance around 3.81Å</italic>. The <italic>Udfs.Around</italic> function processes <italic>CaCaDistance</italic> values and compares them flexibly with the fuzzy set <italic>Atomic distance around 3.81Å</italic> defined by the Gaussian membership function presented in <xref ref-type="fig" rid="molecules-24-00179-f008">Figure 8</xref>. The fuzzy selection in the WHERE clause accepts only those residues that satisfy the fuzzy condition <italic>CaCaDistance around 3.81</italic> with a minimum degree of truth (similarity or membership degree) <inline-formula><mml:math id="mm16"><mml:mrow><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> (line 61). Visual interpretation of the fuzzy selection is presented in <xref ref-type="fig" rid="molecules-24-00179-f008">Figure 8</xref>.</p>
      <graphic xlink:href="molecules-24-00179-g014.jpg" position="float" orientation="portrait"/>
      <p>Such a U-SQL code generates the report shown in <xref ref-type="fig" rid="molecules-24-00179-f009">Figure 9</xref>, which is saved to CSV files in the Azure cloud storage by executing the OUTPUT statements <inline-formula><mml:math id="mm17"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mn>5</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> in lines 65–67. This report shows residues with values of the <inline-formula><mml:math id="mm18"><mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>–<inline-formula><mml:math id="mm19"><mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>α</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> distance around 3.81Å accompanied by membership degrees, which constitute degrees of truth how the particular distance value matches the fuzzy selection condition.</p>
      <p>The execution of the presented U-SQL script for 14,750 protein structure from the DS2 data set stored in ten sequential files with 10 AUs took 370 s. In <xref ref-type="fig" rid="molecules-24-00179-f010">Figure 10</xref> we can see the computational costs of the data extraction and the data analysis. We can see clearly that, in case of the presented analysis encoded in the U-SQL script, the computational cost of the data extraction is much higher (330 s) than the computational cost of the analysis performed (40 s). However, the proportions depend on the type of the analysis and complexity of the U-SQL code nested between the EXTRACT and the OUTPUT expressions.</p>
    </sec>
  </sec>
  <sec id="sec5-molecules-24-00179">
    <title>5. Discussion</title>
    <p>Efficient parsing and extracting of information from macromolecular data files describing 3D structures of proteins, nucleic acids, and nucleic acid-protein complexes is important for performing various sophisticated calculations on the structures on large scale. This will be especially attractive for all specialists working in the field of structural bioinformatics, computational biology, and drug design. The solution presented in the paper satisfies the requirements of the mentioned groups of specialists two-fold: (1) by providing a huge storage space for macromolecular data in the Data Lake Store in the Azure cloud, (2) by enabling scalable, parallel calculations on macromolecular structures in the Data Lake Analytics.</p>
    <p>Results of performed experiments confirmed that the presented data extractors can be successfully used in retrieving data from particular sections of the PDB files stored in a variety of ways—(1) as individual compressed or decompressed files, or (2) as sequential compressed or decompressed files. The first approach does not require any initial processing of the data—they can be loaded to the cloud storage space as they are retrieved from the Protein Data Bank repository servers or from the local equipment or installed software tools, compressed or decompressed. Compression does not cause significant delays in data extraction in the Data Lake Analytics, but allows to save the storage space. The second approach requires some preprocessing prior to storing the data in the cloud storage space—sequential files must be created by linking many smaller PDB files into larger ones. This preprocessing may take some small amount of time, but causes that the extraction process is extremely fast comparing it to the one performed with individual files. This allows to extract more macromolecular data with a lower parallelization factor (less compute units are used) and, as a consequence, to reduce the costs of data processing in the Cloud platform. The results of our performance tests show that an important factor when working with the Azure Data Lake platform is to design tasks according to the specificity of the platform and its characteristics. The platform is intended to operate on large input, which favors processing sequential macromolecular data files, rather than individual ones. In less than two minutes, the platform with one compute unit (allocation unit) is able to extract and process the sequentially stored macromolecular data of proteins, which would be extracted by hundreds of compute units for the same number of proteins stored individually.</p>
    <p>Our solution complements various calculators for atomic interactions or inter-residue contacts presented in <xref ref-type="sec" rid="sec2-molecules-24-00179">Section 2</xref>. It is less specific in terms of performed operations, but is more flexible. It does not provide any ready solution to calculate the particular type of interaction. However, users are able to encode their calculations in the U-SQL scripts after performing the extraction process. The U-SQL language gives the flexibility that allows performing any operation on macromolecular data in parallel once the data is extracted. This is completely different than the tools that provide dedicated, friendly, but closed web front-ends. In terms of the user interface, the presented solution is similar to the one presented in the PH2 system, but it is based on a different computational framework. The PH2 system uses Hadoop, while our solution is based on the Azure Data Lake. It is less efficient than in-memory solutions, like SpeeDB and IMPSMS, but gives more freedom in managing the underlying data and have a friendly U-SQL interface giving flexibility in various calculations.</p>
    <p>Among important advantages of the presented solution, it is also worth noting that it can be broadly scaled out in the Azure cloud for petabytes of macromolecular data that we are awaiting due to the exponential growth of data in the field of bioinformatics. As a disadvantage, we should mention that the <italic>PDBUSQLExtractor</italic> is able to operate only within the Azure Data Lake platform. It is not possible to use it in other data processing platforms, like Apache Hadoop or Apache Spark. This flows mainly from the programming model of the Azure Data Lake, which <italic>PDBUSQLExtractor</italic> was adjusted to. Another disadvantage is the necessity to pay for the used storage space and, especially, for used compute resources of the Cloud platform. However, according to the principles of Cloud computing, users have to pay only for what they use and are excepted from the maintenance of the hardware. Taking into account current rates and unavoidable dynamics of the data growth in bioinformatics, we have to prepare efficient tools for such situations and our solution perfectly fits this scenario.</p>
    <p>Future works will be focused on further development of the presented data extractors that would enable parsing and extracting data from other file formats, like mmCIF and PDBML. We also encourage readers to use the <italic>PDBUSQLExtractor</italic> while performing various sophisticated calculations on macromolecular structures in their research works. The Azure Data Lake also seems to be a good environment for performing efficient analyzes of other types of biological data, including data obtained in Next Generation Sequencing or mass spectrometry-based proteomics experiments. We are carrying works on the use of the platform in these areas of bioinformatics as they need such scalable solutions due to the enormity of data.</p>
  </sec>
  <sec id="sec6-molecules-24-00179">
    <title>6. Availability</title>
    <p>The <italic>PDBUSQLExtractor</italic> library is available at GitHub (<uri xlink:href="https://github.com/dmrozek/repo-PDBUSQLExtractor">https://github.com/dmrozek/repo-PDBUSQLExtractor</uri>) and at the project homepage <uri xlink:href="http://zti.polsl.pl/w3/dmrozek/science/pdbusqlext.htm">http://zti.polsl.pl/w3/dmrozek/science/pdbusqlext.htm</uri>. The library can be used by the academic society for free, i.e., the software is free, but users have to set up their own Azure Data Lake execution environment in the Azure cloud to use the library for processing and analysis of their own data. Setting up steps are provided at the <italic>PDBUSQLExtractor</italic> project home page.</p>
    <p>Further development of the system will be carried out by the Cloud4Proteins non-profit, scientific group (<uri xlink:href="http://www.zti.aei.polsl.pl/w3/dmrozek/science/cloud4proteins.htm">http://www.zti.aei.polsl.pl/w3/dmrozek/science/cloud4proteins.htm</uri>).</p>
  </sec>
</body>
<back>
  <notes>
    <title>Author Contributions</title>
    <p>D.M. conceived and designed the experiments; T.D. and D.M. performed the experiments; D.M. and B.M.-M. analyzed the data; T.D. and D.M. designed and implemented the tools; B.M.-M. implemented methods for fuzzy data processing; all authors contributed to the preparation of the U-SQL scripts; B.M.-M. and D.M. wrote the paper.</p>
  </notes>
  <notes>
    <title>Funding</title>
    <p>This research and the APC were funded within habilitation grant of the Rector of the Silesian University of Technology, Gliwice, Poland (grant No 02/020/RGH18/0148), and partially, within Statutory Research funds of Institute of Informatics, Silesian University of Technology, Gliwice, Poland (grant No BK/213/RAU2/2018). Access to the Azure Data Lake platform was funded by Microsoft Research within Microsoft Azure for Research Award grant.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Conflicts of Interest</title>
    <p>The authors declare no conflict of interest. The founding sponsors had no role in the design of the study; in the collection, analyses, or interpretation of data; in the writing of the manuscript, and in the decision to publish the results.</p>
  </notes>
  <glossary>
    <title>Abbreviations</title>
    <p>The following abbreviations are used in this manuscript:</p>
    <array orientation="portrait">
      <tbody>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">ADL</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Azure Data Lake</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">API</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Application Programming Interface</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">AUs</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">allocation units</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">CI</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">compressed-individual files</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">CLR</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">common language runtime</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">CS</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">compressed-sequential files</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">CSV</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">comma-separated values</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DI</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">decompressed-individual files</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DLA</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Data Lake Analytics</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DLL</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Dynamic-Link Library</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DLS</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Data Lake Store</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DS</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">decompressed-sequential files</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DS1</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">data set 1</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">DS2</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">data set 2</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">IMPSMS</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">In-Memory Protein Structure Management System</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">OS</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">operating system</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">PDB</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Protein Data Bank</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">SDK</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Software Development Kit</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">SQL</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">Structured Query Language</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">TSV</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">tab-separated values</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">UDO</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">user-defined operator</td>
        </tr>
        <tr>
          <td align="left" valign="middle" rowspan="1" colspan="1">VMs</td>
          <td align="left" valign="middle" rowspan="1" colspan="1">virtual machines</td>
        </tr>
      </tbody>
    </array>
  </glossary>
  <ref-list>
    <title>References</title>
    <ref id="B1-molecules-24-00179">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>H.M.</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>T.N.</given-names>
          </name>
          <name>
            <surname>Weissig</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Shindyalov</surname>
            <given-names>I.N.</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>P.E.</given-names>
          </name>
        </person-group>
        <article-title>The Protein Data Bank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>
        <?supplied-pmid 10592235?>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="B2-molecules-24-00179">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Westbrook</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Fitzgerald</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>The PDB format, mmCIF, and other data formats</article-title>
        <source>Methods Biochem. Anal.</source>
        <year>2003</year>
        <volume>44</volume>
        <fpage>161</fpage>
        <lpage>179</lpage>
        <?supplied-pmid 12647386?>
        <pub-id pub-id-type="pmid">12647386</pub-id>
      </element-citation>
    </ref>
    <ref id="B3-molecules-24-00179">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bourne</surname>
            <given-names>P.E.</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>H.M.</given-names>
          </name>
          <name>
            <surname>McMahon</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Watenpaugh</surname>
            <given-names>K.D.</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J.D.</given-names>
          </name>
          <name>
            <surname>Fitzgerald</surname>
            <given-names>P.M.</given-names>
          </name>
        </person-group>
        <article-title>The macromolecular Crystallographic Information File (mmCIF)</article-title>
        <source>Methods Enzymol.</source>
        <year>1997</year>
        <volume>277</volume>
        <fpage>571</fpage>
        <lpage>590</lpage>
        <?supplied-pmid 18488325?>
        <pub-id pub-id-type="pmid">18488325</pub-id>
      </element-citation>
    </ref>
    <ref id="B4-molecules-24-00179">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wesbrook</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Ito</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Nakamura</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Henrick</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>H.</given-names>
          </name>
        </person-group>
        <article-title>PDBML: The representation of archival macromolecular structure data in XML</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>988</fpage>
        <lpage>992</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti082</pub-id>
        <?supplied-pmid 15509603?>
        <pub-id pub-id-type="pmid">15509603</pub-id>
      </element-citation>
    </ref>
    <ref id="B5-molecules-24-00179">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Brozek</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Parallel implementation of 3D protein structure similarity searches using a GPU and the CUDA</article-title>
        <source>J Mol Model</source>
        <year>2014</year>
        <volume>20</volume>
        <fpage>2067</fpage>
        <pub-id pub-id-type="doi">10.1007/s00894-014-2067-1</pub-id>
        <?supplied-pmid 24481593?>
        <pub-id pub-id-type="pmid">24481593</pub-id>
      </element-citation>
    </ref>
    <ref id="B6-molecules-24-00179">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jia</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Zuo</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Zou</surname>
            <given-names>Q.</given-names>
          </name>
        </person-group>
        <article-title>O-GlcNAcPRED-II: An integrated classification algorithm for identifying O-GlcNAcylation sites based on fuzzy undersampling and a K-means PCA oversampling technique</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>2029</fpage>
        <lpage>2036</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty039</pub-id>
        <?supplied-pmid 29420699?>
        <pub-id pub-id-type="pmid">29420699</pub-id>
      </element-citation>
    </ref>
    <ref id="B7-molecules-24-00179">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Masseroli</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Canakoglu</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Ceri</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Integration and Querying of Genomic and Proteomic Semantic Annotations for Biomedical Knowledge Extraction</article-title>
        <source>IEEE/ACM Trans. Comput. Biol. Bioinform.</source>
        <year>2016</year>
        <volume>13</volume>
        <fpage>209</fpage>
        <lpage>219</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2015.2453944</pub-id>
        <?supplied-pmid 27045824?>
        <pub-id pub-id-type="pmid">27045824</pub-id>
      </element-citation>
    </ref>
    <ref id="B8-molecules-24-00179">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ceri</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Kaitoua</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Masseroli</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Pinoli</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Venco</surname>
            <given-names>F.</given-names>
          </name>
        </person-group>
        <article-title>Data Management for Heterogeneous Genomic Datasets</article-title>
        <source>IEEE/ACM Trans. Comput. Biol. Bioinform.</source>
        <year>2017</year>
        <volume>14</volume>
        <fpage>1251</fpage>
        <lpage>1264</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2016.2576447</pub-id>
        <pub-id pub-id-type="pmid">27295683</pub-id>
      </element-citation>
    </ref>
    <ref id="B9-molecules-24-00179">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wei</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Zou</surname>
            <given-names>Q.</given-names>
          </name>
        </person-group>
        <article-title>Local-DPP: An improved DNA-binding protein prediction method by exploring local evolutionary information</article-title>
        <source>Inf. Sci.</source>
        <year>2017</year>
        <volume>384</volume>
        <fpage>135</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ins.2016.06.026</pub-id>
      </element-citation>
    </ref>
    <ref id="B10-molecules-24-00179">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hung</surname>
            <given-names>C.L.</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>C.Y.</given-names>
          </name>
        </person-group>
        <article-title>Open Reading Frame Phylogenetic Analysis on the Cloud</article-title>
        <source>Int. J. Genom.</source>
        <year>2013</year>
        <volume>2013</volume>
        <pub-id pub-id-type="doi">10.1155/2013/614923</pub-id>
      </element-citation>
    </ref>
    <ref id="B11-molecules-24-00179">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Macalino</surname>
            <given-names>S.J.Y.</given-names>
          </name>
          <name>
            <surname>Basith</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Clavio</surname>
            <given-names>N.A.B.</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Kang</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Evolution of In Silico Strategies for Protein-Protein Interaction Drug Discovery</article-title>
        <source>Molecules</source>
        <year>2018</year>
        <volume>23</volume>
        <elocation-id>1963</elocation-id>
        <pub-id pub-id-type="doi">10.3390/molecules23081963</pub-id>
        <?supplied-pmid 30082644?>
        <pub-id pub-id-type="pmid">30082644</pub-id>
      </element-citation>
    </ref>
    <ref id="B12-molecules-24-00179">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>C.</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Guo</surname>
            <given-names>G.</given-names>
          </name>
          <name>
            <surname>Du</surname>
            <given-names>Y.</given-names>
          </name>
        </person-group>
        <article-title>An Interface for Biomedical Big Data Processing on the Tianhe-2 Supercomputer</article-title>
        <source>Molecules</source>
        <year>2017</year>
        <volume>22</volume>
        <elocation-id>2116</elocation-id>
        <pub-id pub-id-type="doi">10.3390/molecules22122116</pub-id>
        <?supplied-pmid 29194413?>
        <pub-id pub-id-type="pmid">29194413</pub-id>
      </element-citation>
    </ref>
    <ref id="B13-molecules-24-00179">
      <label>13.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <source>Scalable Big Data Analytics for Protein Bioinformatics Computational Biology</source>
        <publisher-name>Springer</publisher-name>
        <publisher-loc>Berlin, Germany</publisher-loc>
        <year>2018</year>
        <volume>Volume 28</volume>
      </element-citation>
    </ref>
    <ref id="B14-molecules-24-00179">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>White</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <source>Hadoop—The Definitive Guide: Storage and Analysis at Internet Scale</source>
        <edition>3rd ed.</edition>
        <publisher-name>O-Reilly</publisher-name>
        <publisher-loc>Sebastopol, CA, USA</publisher-loc>
        <year>2012</year>
      </element-citation>
    </ref>
    <ref id="B15-molecules-24-00179">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zaharia</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Xin</surname>
            <given-names>R.S.</given-names>
          </name>
          <name>
            <surname>Wendell</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Armbrust</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Dave</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Meng</surname>
            <given-names>X.</given-names>
          </name>
          <name>
            <surname>Rosen</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Venkataraman</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Franklin</surname>
            <given-names>M.J.</given-names>
          </name>
          <name>
            <surname>Ghodsi</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Gonzalez</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Shenker</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Stoica</surname>
            <given-names>I.</given-names>
          </name>
        </person-group>
        <article-title>Apache Spark: A Unified Engine for Big Data Processing</article-title>
        <source>Commun. ACM</source>
        <year>2016</year>
        <volume>59</volume>
        <fpage>56</fpage>
        <lpage>65</lpage>
        <pub-id pub-id-type="doi">10.1145/2934664</pub-id>
      </element-citation>
    </ref>
    <ref id="B16-molecules-24-00179">
      <label>16.</label>
      <element-citation publication-type="gov">
        <person-group person-group-type="author">
          <name>
            <surname>Mell</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Grance</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>The NIST Definition of Cloud Computing</article-title>
        <gov>Special Publication 800-145</gov>
        <year>2011</year>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf">http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2017-10-10">(accessed on 10 October 2017)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B17-molecules-24-00179">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tina</surname>
            <given-names>K.G.</given-names>
          </name>
          <name>
            <surname>Bhadra</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Srinivasan</surname>
            <given-names>N.</given-names>
          </name>
        </person-group>
        <article-title>PIC: Protein Interactions Calculator</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>W473</fpage>
        <lpage>W476</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkm423</pub-id>
        <?supplied-pmid 17584791?>
        <pub-id pub-id-type="pmid">17584791</pub-id>
      </element-citation>
    </ref>
    <ref id="B18-molecules-24-00179">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chourasia</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Sastry</surname>
            <given-names>G.M.</given-names>
          </name>
          <name>
            <surname>Sastry</surname>
            <given-names>G.N.</given-names>
          </name>
        </person-group>
        <article-title>Aromatic–Aromatic Interactions Database, A2ID: An analysis of aromatic <italic>Π</italic>-networks in proteins</article-title>
        <source>Int. J. Biol. Macromol.</source>
        <year>2011</year>
        <volume>48</volume>
        <fpage>540</fpage>
        <lpage>552</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ijbiomac.2011.01.008</pub-id>
        <?supplied-pmid 21255607?>
        <pub-id pub-id-type="pmid">21255607</pub-id>
      </element-citation>
    </ref>
    <ref id="B19-molecules-24-00179">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pal</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Bhattacharyya</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Dasgupta</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Mandal</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Chakrabarti</surname>
            <given-names>P.</given-names>
          </name>
        </person-group>
        <article-title>IntGeom: A Server for the Calculation of the Interaction Geometry between Planar Groups in Proteins</article-title>
        <source>J. Proteom. Bioinform.</source>
        <year>2009</year>
        <volume>2</volume>
        <fpage>60</fpage>
        <lpage>63</lpage>
        <pub-id pub-id-type="doi">10.4172/jpb.1000061</pub-id>
      </element-citation>
    </ref>
    <ref id="B20-molecules-24-00179">
      <label>20.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Hazelhurst</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>PH2: An Hadoop-based framework for mining structural properties from the PDB database</article-title>
        <source>Proceedings of the 2010 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists</source>
        <conf-loc>Bela Bela, South Africa</conf-loc>
        <conf-date>11–13 October 2010</conf-date>
        <fpage>104</fpage>
        <lpage>112</lpage>
      </element-citation>
    </ref>
    <ref id="B21-molecules-24-00179">
      <label>21.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Date</surname>
            <given-names>C.</given-names>
          </name>
        </person-group>
        <source>An Introduction to Database Systems</source>
        <edition>8th ed.</edition>
        <publisher-name>Addison-Wesley</publisher-name>
        <publisher-loc>Boston, MA, USA</publisher-loc>
        <year>2003</year>
      </element-citation>
    </ref>
    <ref id="B22-molecules-24-00179">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robillard</surname>
            <given-names>D.E.</given-names>
          </name>
          <name>
            <surname>Mpangase</surname>
            <given-names>P.T.</given-names>
          </name>
          <name>
            <surname>Hazelhurst</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Dehne</surname>
            <given-names>F.</given-names>
          </name>
        </person-group>
        <article-title>SpeeDB: Fast structural protein searches</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <fpage>3027</fpage>
        <lpage>3034</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv274</pub-id>
        <?supplied-pmid 25979473?>
        <pub-id pub-id-type="pmid">25979473</pub-id>
      </element-citation>
    </ref>
    <ref id="B23-molecules-24-00179">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Żur</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>In-Memory Management System for 3D Protein Macromolecular Structures</article-title>
        <source>Curr. Proteom.</source>
        <year>2018</year>
        <volume>15</volume>
        <fpage>175</fpage>
        <lpage>189</lpage>
        <pub-id pub-id-type="doi">10.2174/1570164615666180320151452</pub-id>
      </element-citation>
    </ref>
    <ref id="B24-molecules-24-00179">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stephens</surname>
            <given-names>S.M.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>J.Y.</given-names>
          </name>
          <name>
            <surname>Davidson</surname>
            <given-names>M.G.</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Trute</surname>
            <given-names>B.M.</given-names>
          </name>
        </person-group>
        <article-title>Oracle Database 10g: A platform for BLAST search and Regular Expression pattern matching in life sciences</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2005</year>
        <volume>33</volume>
        <fpage>D675</fpage>
        <lpage>D679</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gki114</pub-id>
        <?supplied-pmid 15608287?>
        <pub-id pub-id-type="pmid">15608287</pub-id>
      </element-citation>
    </ref>
    <ref id="B25-molecules-24-00179">
      <label>25.</label>
      <element-citation publication-type="web">
        <article-title>BioSQL Homepage</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="http://biosql.org/">http://biosql.org/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2018-11-02">(accessed on 2 November 2018)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B26-molecules-24-00179">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Prlić</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Yates</surname>
            <given-names>A.</given-names>
          </name>
          <name>
            <surname>Bliven</surname>
            <given-names>S.E.</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>P.W.</given-names>
          </name>
          <name>
            <surname>Jacobsen</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Troshin</surname>
            <given-names>P.V.</given-names>
          </name>
          <name>
            <surname>Chapman</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Koh</surname>
            <given-names>C.H.</given-names>
          </name>
          <name>
            <surname>Foisy</surname>
            <given-names>S.</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BioJava: An open-source framework for bioinformatics in 2012</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>2693</fpage>
        <lpage>2695</lpage>
        <?supplied-pmid 22877863?>
        <pub-id pub-id-type="pmid">22877863</pub-id>
      </element-citation>
    </ref>
    <ref id="B27-molecules-24-00179">
      <label>27.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Wieczorek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Kozielski</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>PSS-SQL: Protein Secondary Structure—Structured Query Language</article-title>
        <source>Proceedings of the 2010 Annual International Conference of the IEEE Engineering in Medicine and Biology</source>
        <conf-loc>Buenos Aires, Argentina</conf-loc>
        <conf-date>31 August–4 September 2010</conf-date>
        <fpage>1073</fpage>
        <lpage>1076</lpage>
      </element-citation>
    </ref>
    <ref id="B28-molecules-24-00179">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Socha</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Kozielski</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>An efficient and flexible scanning of databases of protein secondary structures</article-title>
        <source>J. Intell. Inf. Syst.</source>
        <year>2016</year>
        <volume>46</volume>
        <fpage>213</fpage>
        <lpage>233</lpage>
        <pub-id pub-id-type="doi">10.1007/s10844-014-0353-0</pub-id>
      </element-citation>
    </ref>
    <ref id="B29-molecules-24-00179">
      <label>29.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Hammel</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Patel</surname>
            <given-names>J.M.</given-names>
          </name>
        </person-group>
        <article-title>Searching on the Secondary Structure of Protein Sequences</article-title>
        <source>VLDB’02: Proceedings of the 28th International Conference on Very Large Databases, Hong Kong, China, 20–23 August 2002</source>
        <person-group person-group-type="editor">
          <name>
            <surname>Bernstein</surname>
            <given-names>P.A.</given-names>
          </name>
          <name>
            <surname>Ioannidis</surname>
            <given-names>Y.E.</given-names>
          </name>
          <name>
            <surname>Ramakrishnan</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Papadias</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <publisher-name>Morgan Kaufmann</publisher-name>
        <publisher-loc>San Francisco, CA, USA</publisher-loc>
        <year>2002</year>
        <fpage>634</fpage>
        <lpage>645</lpage>
      </element-citation>
    </ref>
    <ref id="B30-molecules-24-00179">
      <label>30.</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Tata</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Friedman</surname>
            <given-names>J.S.</given-names>
          </name>
          <name>
            <surname>Swaroop</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>Declarative Querying for Biological Sequences</article-title>
        <source>Proceedings of the 22nd International Conference on Data Engineering (ICDE’06)</source>
        <conf-loc>Atlanta, GA, USA</conf-loc>
        <conf-date>3–7 April 2006</conf-date>
        <fpage>87</fpage>
        <lpage>98</lpage>
      </element-citation>
    </ref>
    <ref id="B31-molecules-24-00179">
      <label>31.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Adamek</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>P3D-SQL: Extending Oracle PL/SQL Capabilities Towards 3D Protein Structure Similarity Searching</article-title>
        <source>Bioinformatics and Biomedical Engineering</source>
        <person-group person-group-type="editor">
          <name>
            <surname>Ortuño</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Rojas</surname>
            <given-names>I.</given-names>
          </name>
        </person-group>
        <comment>Lecture Notes in Computer Science</comment>
        <publisher-name>Springer</publisher-name>
        <publisher-loc>Cham, Switzerland</publisher-loc>
        <year>2015</year>
        <volume>Volume 9043</volume>
        <fpage>548</fpage>
        <lpage>556</lpage>
      </element-citation>
    </ref>
    <ref id="B32-molecules-24-00179">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hung</surname>
            <given-names>C.L.</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y.L.</given-names>
          </name>
        </person-group>
        <article-title>Implementation of a Parallel Protein Structure Alignment Service on Cloud</article-title>
        <source>Int. J. Genom.</source>
        <year>2013</year>
        <pub-id pub-id-type="doi">10.1155/2013/439681</pub-id>
      </element-citation>
    </ref>
    <ref id="B33-molecules-24-00179">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Holm</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Kaariainen</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Rosenstrom</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Schenkel</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>Searching protein structure databases with DaliLite v.3</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>2780</fpage>
        <lpage>2781</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn507</pub-id>
        <pub-id pub-id-type="pmid">18818215</pub-id>
      </element-citation>
    </ref>
    <ref id="B34-molecules-24-00179">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gibrat</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Madej</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Bryant</surname>
            <given-names>S.</given-names>
          </name>
        </person-group>
        <article-title>Surprising similarities in structure comparison</article-title>
        <source>Curr. Opin. Struct. Biol.</source>
        <year>1996</year>
        <volume>6</volume>
        <fpage>377</fpage>
        <lpage>385</lpage>
        <pub-id pub-id-type="doi">10.1016/S0959-440X(96)80058-3</pub-id>
        <pub-id pub-id-type="pmid">8804824</pub-id>
      </element-citation>
    </ref>
    <ref id="B35-molecules-24-00179">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Daniłowicz</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>HDInsight4PSi: Boosting performance of 3D protein structure similarity searching with HDInsight clusters in Microsoft Azure cloud</article-title>
        <source>Inf. Sci.</source>
        <year>2016</year>
        <volume>349</volume>
        <fpage>77</fpage>
        <lpage>101</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ins.2016.02.029</pub-id>
      </element-citation>
    </ref>
    <ref id="B36-molecules-24-00179">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Suwała</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>High-throughput and scalable protein function identification with Hadoop and Map-only pattern of the MapReduce processing model</article-title>
        <source>J. Knowl. Inf. Syst.</source>
        <year>2018</year>
        <fpage>1</fpage>
        <lpage>34</lpage>
        <pub-id pub-id-type="doi">10.1007/s10115-018-1245-3</pub-id>
      </element-citation>
    </ref>
    <ref id="B37-molecules-24-00179">
      <label>37.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Daniłowicz</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <article-title>Efficient 3D Protein Structure Alignment on Large Hadoop Clusters in Microsoft Azure Cloud. Beyond Databases, Architectures and Structures</article-title>
        <source>Facing the Challenges of Data Proliferation and Growing Variety</source>
        <person-group person-group-type="editor">
          <name>
            <surname>Kozielski</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Kasprowski</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Kostrzewa</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <publisher-name>Springer International Publishing</publisher-name>
        <publisher-loc>Cham, Switzerland</publisher-loc>
        <year>2018</year>
        <fpage>33</fpage>
        <lpage>46</lpage>
      </element-citation>
    </ref>
    <ref id="B38-molecules-24-00179">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
          <name>
            <surname>Kłapciński</surname>
            <given-names>A.</given-names>
          </name>
        </person-group>
        <article-title>Cloud4Psi: Cloud computing for 3D protein structure similarity searching</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>2822</fpage>
        <lpage>2825</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu389</pub-id>
        <pub-id pub-id-type="pmid">24930141</pub-id>
      </element-citation>
    </ref>
    <ref id="B39-molecules-24-00179">
      <label>39.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
        </person-group>
        <source>High-Performance Computational Solutions in Protein Bioinformatics</source>
        <comment>SpringerBriefs in Computer Science</comment>
        <publisher-name>Springer</publisher-name>
        <publisher-loc>Cham, Switzerland</publisher-loc>
        <year>2014</year>
      </element-citation>
    </ref>
    <ref id="B40-molecules-24-00179">
      <label>40.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Kutyła</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Accelerating 3D Protein Structure Similarity Searching on Microsoft Azure Cloud with Local Replicas of Macromolecular Data</article-title>
        <source>Parallel Processing and Applied Mathematics—PPAM 2015</source>
        <person-group person-group-type="editor">
          <name>
            <surname>Wyrzykowski</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <comment>Lecture Notes in Computer Science</comment>
        <publisher-name>Springer</publisher-name>
        <publisher-loc>Heidelberg, Germany</publisher-loc>
        <year>2016</year>
        <volume>Volume 9574</volume>
        <fpage>1</fpage>
        <lpage>12</lpage>
      </element-citation>
    </ref>
    <ref id="B41-molecules-24-00179">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hung</surname>
            <given-names>C.L.</given-names>
          </name>
          <name>
            <surname>Hua</surname>
            <given-names>G.J.</given-names>
          </name>
        </person-group>
        <article-title>Cloud Computing for Protein-Ligand Binding Site Comparison</article-title>
        <source>Biomed. Res. Int.</source>
        <year>2013</year>
        <pub-id pub-id-type="doi">10.1155/2013/170356</pub-id>
      </element-citation>
    </ref>
    <ref id="B42-molecules-24-00179">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mrozek</surname>
            <given-names>D.</given-names>
          </name>
          <name>
            <surname>Gosk</surname>
            <given-names>P.</given-names>
          </name>
          <name>
            <surname>Małysiak-Mrozek</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Scaling <italic>Ab Initio</italic> Predictions of 3D Protein Structures in Microsoft Azure Cloud</article-title>
        <source>J. Grid Comput.</source>
        <year>2015</year>
        <volume>13</volume>
        <fpage>561</fpage>
        <lpage>585</lpage>
        <pub-id pub-id-type="doi">10.1007/s10723-015-9353-8</pub-id>
      </element-citation>
    </ref>
    <ref id="B43-molecules-24-00179">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zou</surname>
            <given-names>Q.</given-names>
          </name>
          <name>
            <surname>Wan</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Ju</surname>
            <given-names>Y.</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>J.</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>X.</given-names>
          </name>
        </person-group>
        <article-title>Pretata: Predicting TATA binding proteins with novel features and dimensionality reduction strategy</article-title>
        <source>BMC Syst. Biol.</source>
        <year>2016</year>
        <volume>10</volume>
        <elocation-id>114</elocation-id>
        <pub-id pub-id-type="doi">10.1186/s12918-016-0353-5</pub-id>
        <pub-id pub-id-type="pmid">28155714</pub-id>
      </element-citation>
    </ref>
    <ref id="B44-molecules-24-00179">
      <label>44.</label>
      <element-citation publication-type="web">
        <person-group person-group-type="author">
          <collab>Microsoft Azure</collab>
        </person-group>
        <article-title>Overview of Microsoft Azure Data Lake Analytics</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://docs.microsoft.com/en-us/azure/data-lake-analytics/data-lake-analytics-overview">https://docs.microsoft.com/en-us/azure/data-lake-analytics/data-lake-analytics-overview</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2018-11-07">(accessed on 7 November 2018)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B45-molecules-24-00179">
      <label>45.</label>
      <element-citation publication-type="web">
        <person-group person-group-type="author">
          <collab>Microsoft Azure</collab>
        </person-group>
        <article-title>Azure Data Lake Analytics Documentation</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="https://docs.microsoft.com/en-us/azure/data-lake-analytics/">https://docs.microsoft.com/en-us/azure/data-lake-analytics/</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2018-12-18">(accessed on 18 December 2018)</date-in-citation>
      </element-citation>
    </ref>
    <ref id="B46-molecules-24-00179">
      <label>46.</label>
      <element-citation publication-type="web">
        <person-group person-group-type="author">
          <collab>Protein Data Bank Contents Guide</collab>
        </person-group>
        <article-title>Atomic Coordinate Entry Format Description, Version 3.3</article-title>
        <comment>Available online: <ext-link ext-link-type="uri" xlink:href="http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html">http://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html</ext-link></comment>
        <date-in-citation content-type="access-date" iso-8601-date="2018-11-07">(accessed on 7 November 2018)</date-in-citation>
      </element-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig id="molecules-24-00179-f001" orientation="portrait" position="float">
    <label>Figure 1</label>
    <caption>
      <p>Architecture of our solution for extracting and processing Big macromolecular Data in the Azure Data Lake environment with the <italic>PDBUSQLExtractor</italic>. PDB files describing macromolecular data of proteins and nucleic acids are stored in the Data Lake Store. Efficient processing occurs in the Data Lake Analytics equipped with <italic>PDBUSQLExtractor</italic> library.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g001"/>
  </fig>
  <fig id="molecules-24-00179-f002" orientation="portrait" position="float">
    <label>Figure 2</label>
    <caption>
      <p>Results of the extraction of the ATOM section performed with the U-SQL script from Listing 1 showing a part of produced rowset.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g002"/>
  </fig>
  <fig id="molecules-24-00179-f003" orientation="portrait" position="float">
    <label>Figure 3</label>
    <caption>
      <p>Results of the extraction of the <italic>SEQRES</italic> section performed with the U-SQL script from Listing 2 showing a part of produced rowset.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g003"/>
  </fig>
  <fig id="molecules-24-00179-f004" orientation="portrait" position="float">
    <label>Figure 4</label>
    <caption>
      <p>A part of a sample sequential file with many protein structures stored as records for extraction by the <italic>PDBUSQLExtractor</italic> parallel parser. Each <monospace>END</monospace> section determines the border for a single record processed in the U-SQL script for Data Lake Analytics.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g004"/>
  </fig>
  <fig id="molecules-24-00179-f005" orientation="portrait" position="float">
    <label>Figure 5</label>
    <caption>
      <p>n-fold speedups achieved when extracting data from various sections (ATOM, SHEET, SEQRES) of compressed (CI) and decompressed (DI) individually stored PDB files for the varying number of allocation units (AUs).</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g005"/>
  </fig>
  <fig id="molecules-24-00179-f006" orientation="portrait" position="float">
    <label>Figure 6</label>
    <caption>
      <p>Use of compute resources (AUs) during the whole extraction process on data set DS1 for (<bold>a</bold>) 1024 AUs, and (<bold>b</bold>) 32 AUs assigned to the execution.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g006"/>
  </fig>
  <fig id="molecules-24-00179-f007" orientation="portrait" position="float">
    <label>Figure 7</label>
    <caption>
      <p>Execution time when extracting data from the <italic>ATOM</italic> section of PDB files stored in 10 sequential files (data set DS2) for the varying number of allocation units (AUs).</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g007"/>
  </fig>
  <fig id="molecules-24-00179-f008" orientation="portrait" position="float">
    <label>Figure 8</label>
    <caption>
      <p>Visual interpretation of fuzzy selection with the fuzzy search condition <italic>Atomic distance around 3.81 Å</italic> showing two values of the inter-atomic distance in protein structures: 3.78 that satisfies the condition (<inline-formula><mml:math id="mm20"><mml:mrow><mml:mrow><mml:mi>μ</mml:mi><mml:mo>(</mml:mo><mml:mn>3.78</mml:mn><mml:mo>)</mml:mo><mml:mo>&gt;</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>), and 3.87 that does not satisfy the condition (<inline-formula><mml:math id="mm21"><mml:mrow><mml:mrow><mml:mi>μ</mml:mi><mml:mo>(</mml:mo><mml:mn>3.87</mml:mn><mml:mo>)</mml:mo><mml:mo>&lt;</mml:mo><mml:mi>λ</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) for <inline-formula><mml:math id="mm22"><mml:mrow><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g008"/>
  </fig>
  <fig id="molecules-24-00179-f009" orientation="portrait" position="float">
    <label>Figure 9</label>
    <caption>
      <p>Results of the extraction and the analysis performed with the U-SQL script from Listing 4 showing a part of produced rowset.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g009"/>
  </fig>
  <fig id="molecules-24-00179-f010" orientation="portrait" position="float">
    <label>Figure 10</label>
    <caption>
      <p>Computational costs of data extraction and data analysis for the sample U-SQL script executed for proteins from the data set DS2 stored in ten sequential files with 10 AUs.</p>
    </caption>
    <graphic xlink:href="molecules-24-00179-g010"/>
  </fig>
  <table-wrap id="molecules-24-00179-t001" orientation="portrait" position="float">
    <object-id pub-id-type="pii">molecules-24-00179-t001_Table 1</object-id>
    <label>Table 1</label>
    <caption>
      <p>Execution time (s) for local (PC) and distributed (Azure Data Lake) extractions of various sections of the PDB files and the varying number of allocation units (AUs) for 3D protein structures stored separately as compressed (CI) and decompressed (DI) individual files.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th colspan="9" align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1">Azure Data Lake</th>
          <th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">PC</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold># AUs</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>1</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>2</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>8</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>32</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>128</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>512</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>1024</bold>
          </td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>1475</bold>
          </td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
            <bold>1</bold>
          </td>
        </tr>
        <tr>
          <td align="right" valign="middle" rowspan="1" colspan="1">DI-ATOM</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">12,400</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">6225</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">1606</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">459</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">171</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">100</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">94</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">94</td>
          <td align="center" valign="middle" rowspan="1" colspan="1">464</td>
        </tr>
        <tr>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CI-ATOM</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">11,740</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5892</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1526</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">441</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">170</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">103</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">97</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">97</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">516</td>
        </tr>
        <tr>
          <td align="right" valign="middle" rowspan="1" colspan="1">DI-SHEET</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">12,225</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">6115</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">1548</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">412</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">128</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">60</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">60</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">60</td>
          <td align="center" valign="middle" rowspan="1" colspan="1">–</td>
        </tr>
        <tr>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CI-SHEET</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">11,793</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5898</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1484</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">391</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">120</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">60</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">56</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">56</td>
          <td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">–</td>
        </tr>
        <tr>
          <td align="right" valign="middle" rowspan="1" colspan="1">DI-SEQRES</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">11,831</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">5922</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">1494</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">393</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">129</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">68</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">61</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">61</td>
          <td align="center" valign="middle" rowspan="1" colspan="1">–</td>
        </tr>
        <tr>
          <td align="right" valign="middle" rowspan="1" colspan="1">CI-SEQRES</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">11,746</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">5879</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">1482</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">396</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">124</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">57</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">57</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">57</td>
          <td align="center" valign="middle" rowspan="1" colspan="1">–</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap id="molecules-24-00179-t002" orientation="portrait" position="float">
    <object-id pub-id-type="pii">molecules-24-00179-t002_Table 2</object-id>
    <label>Table 2</label>
    <caption>
      <p>Extraction time (s) for various sections of the PDB files for 3D protein structures stored in compressed (CS) and decompressed (DS) sequential files (data set DS1) for the execution with one allocation unit (AU).</p>
    </caption>
    <table frame="hsides" rules="groups">
      <thead>
        <tr>
          <th align="right" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">
</th>
          <th align="right" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">ATOM</th>
          <th align="right" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">SHEET</th>
          <th align="right" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">SEQRES</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="right" valign="middle" rowspan="1" colspan="1">DS</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">116</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">46</td>
          <td align="right" valign="middle" rowspan="1" colspan="1">51</td>
        </tr>
        <tr>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CS</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">116</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">46</td>
          <td align="right" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">51</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</floats-group>

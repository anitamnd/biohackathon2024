<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName nlm2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Front Genet</journal-id>
    <journal-id journal-id-type="iso-abbrev">Front Genet</journal-id>
    <journal-id journal-id-type="publisher-id">Front. Genet.</journal-id>
    <journal-title-group>
      <journal-title>Frontiers in Genetics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1664-8021</issn>
    <publisher>
      <publisher-name>Frontiers Media S.A.</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8714909</article-id>
    <article-id pub-id-type="publisher-id">802894</article-id>
    <article-id pub-id-type="doi">10.3389/fgene.2021.802894</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Genetics</subject>
        <subj-group>
          <subject>Original Research</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>smplot: An R Package for Easy and Elegant Data Visualization</article-title>
      <alt-title alt-title-type="left-running-head">Min and Zhou</alt-title>
      <alt-title alt-title-type="right-running-head">smplot for Data Visualization</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Min</surname>
          <given-names>Seung Hyun</given-names>
        </name>
        <xref rid="c001" ref-type="corresp">*</xref>
        <uri xlink:href="https://loop.frontiersin.org/people/747678/overview"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhou</surname>
          <given-names>Jiawei</given-names>
        </name>
        <xref rid="c001" ref-type="corresp">*</xref>
        <uri xlink:href="https://loop.frontiersin.org/people/437804/overview"/>
      </contrib>
    </contrib-group>
    <aff>School of Ophthalmology and Optometry, Affiliated Eye Hospital, State Key Laboratory of Ophthalmology, Optometry and Vision Science, Wenzhou Medical University, <addr-line>Wenzhou</addr-line>, <country>China</country>
</aff>
    <author-notes>
      <fn fn-type="edited-by">
        <p><bold>Edited by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1111342/overview" ext-link-type="uri">Guangchuang Yu</ext-link>, Southern Medical University, China</p>
      </fn>
      <fn fn-type="edited-by">
        <p><bold>Reviewed by:</bold><ext-link xlink:href="https://loop.frontiersin.org/people/1331864/overview" ext-link-type="uri">Zongcheng Li</ext-link>, Fifth Medical Center of the PLA General Hospital, China</p>
        <p><ext-link xlink:href="https://loop.frontiersin.org/people/437456/overview" ext-link-type="uri">Binbin Wang</ext-link>, National Research Institute for Family Planning (CAS), China</p>
      </fn>
      <corresp id="c001">*Correspondence: Seung Hyun Min, <email>seung.min@mail.mcgill.ca</email>; Jiawei Zhou, <email>zhoujw@mail.eye.ac.cn</email>
</corresp>
      <fn fn-type="other">
        <p>This article was submitted to Computational Genomics, a section of the journal Frontiers in Genetics</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>12</volume>
    <elocation-id>802894</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>10</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>11</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2021 Min and Zhou.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>Min and Zhou</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>R, a programming language, is an attractive tool for data visualization because it is free and open source. However, learning R can be intimidating and cumbersome for many. In this report, we introduce an R package called “smplot” for easy and elegant data visualization. The R package “smplot” generates graphs with defaults that are visually pleasing and informative. Although it requires basic knowledge of R and ggplot2, it significantly simplifies the process of plotting a bar graph, a violin plot, a correlation plot, a slope chart, a Bland-Altman plot and a raincloud plot. The aesthetics of the plots generated from the package are elegant, highly customisable and adhere to important practices of data visualization. The functions from smplot can be used in a modular fashion, thereby allowing the user to further customise the aesthetics. The <italic>smplot</italic> package is open source under the MIT license and available on Github (<ext-link xlink:href="https://github.com/smin95/smplot" ext-link-type="uri">https://github.com/smin95/smplot</ext-link>), where updates will be posted. All the example figures in this report are reproducible and the codes and data are provided for the reader in a separate online guide (<ext-link xlink:href="https://smin95.github.io/dataviz/" ext-link-type="uri">https://smin95.github.io/dataviz/</ext-link>).</p>
    </abstract>
    <kwd-group>
      <kwd>smplot</kwd>
      <kwd>data visualisation</kwd>
      <kwd>R software</kwd>
      <kwd>data analysis</kwd>
      <kwd>ggplot2</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>Introduction</title>
    <p>Data visualization is an important skill in scientific writing. The reader may agree that most memorable aspects of a scientific paper are its figures rather than texts. There are various programs for plotting data. However, some require subscription fees, such as Matlab. On the other hand, others such as matplotlib in Python (<xref rid="B4" ref-type="bibr">Hunter, 2007</xref>) and <italic>ggplot2</italic> in R (<xref rid="B6" ref-type="bibr">Wickham, 2016</xref>) are free and open source but can overwhelm incoming research trainees because the students are often required to overcome a steep learning curve. Moreover, the learning curves can enforce students to spend a long time to change typesetting or making such minute changes, forcing them to use vector graphics editor such as Adobe Illustrator to polish the figures instead of modifying the codes that generate the original plot. This practice of creating a figure using multiple programs, however, can be time-consuming in the long run. For instance, when the trainee is asked to make changes in the figure, one must make changes in all programs that one has used sequentially, which can be tedious and laborious. In this report, we hope to convince the reader that a polished, satisfying figure can be created using only one software environment by introducing a new, free, and easy-to-use tool for data visualization.</p>
    <p>Biomedical research increasingly incorporates the usage of complex, computational tools for data analysis. For this reason, we introduce an R package “smplot” that is an intuitive and quick tool for performing elegant data visualization for research trainees. Since the use of smplot requires a basic knowledge of R and ggplot2, an online tutorial about R that incorporates smplot has been posted on a separate webpage entitled <italic>Data Visualization in R Using smplot</italic> (<ext-link xlink:href="https://smin95.github.io/dataviz" ext-link-type="uri">https://smin95.github.io/dataviz</ext-link>).</p>
    <sec id="s1-1">
      <title>Why R?</title>
      <p>In R, one can plot data without necessarily using programming concepts such as the <italic>for loop</italic>. This is because the <italic>ggplot2</italic> package in R can automatically plot all data points if necessary. However, this is not the case with Python (matplotlib) and Matlab. All the codes and data for the figures in this report can be found in Chapter 6 of the online guide entitled <italic>Data Visualization in R Using smplot</italic> (<ext-link xlink:href="https://smin95.github.io/dataviz" ext-link-type="uri">https://smin95.github.io/dataviz</ext-link>).</p>
    </sec>
  </sec>
  <sec sec-type="methods" id="s2">
    <title>Methods</title>
    <sec id="s2-1">
      <title>Installation of the smplot Package</title>
      <p>At the time of writing the paper, the smplot package is only available on Github. Therefore, if the reader is interested in installing the package, the reader must open RStudio and directly download the package by typing these commands:</p>
      <p>install.packages (‘devtools).</p>
      <p>devtools:install_github (“smin95/smplot”)</p>
      <p>To load the smplot package into the local environment (and therefore use it), the reader must type this code below:</p>
      <p>library (smplot).</p>
      <p>A complete tutorial on <italic>smplot</italic> is available in Chapter 4 of the online guide (<ext-link xlink:href="https://smin95.github.io/dataviz/" ext-link-type="uri">https://smin95.github.io/dataviz/</ext-link>). If the reader is not familiar with <italic>R</italic>, then please consider reading the online guide from Chapter 1 (<ext-link xlink:href="https://smin95.github.io/dataviz/download-rstudio-basics-of-r.html" ext-link-type="uri">https://smin95.github.io/dataviz/download-rstudio-basics-of-r.html</ext-link>). If the reader is familiar with ggplot2 and only interested in recreating the figures in this report, please read Chapter 6 (<ext-link xlink:href="https://smin95.github.io/dataviz/recreating-the-manuscript-fures.html" ext-link-type="uri">https://smin95.github.io/dataviz/recreating-the-manuscript-figures.html</ext-link>). The package is scheduled to be submitted to the CRAN (The Comprehensive R Archive Network) in near future. All updates will be posted on Github and the online guide.</p>
    </sec>
  </sec>
  <sec sec-type="results|discussion" id="s3">
    <title>Results and Discussion</title>
    <sec id="s3-1">
      <title>Correlation Plot</title>
      <p>A correlation refers to a relationship between two variables. The smplot package provides some functions for plotting a correlation.</p>
      <p><xref rid="F1" ref-type="fig">Figure 1A</xref> shows a correlation plot with defaults of ggplot2 and without smplot. The example is cluttered with distracting features, such as the grey background, and major and minor vertical and horizontal grid lines. Also, the title is not centered. These issues can be resolved by modularly adding a single line of code provided by <italic>smplot</italic>, as shown in <xref rid="F1" ref-type="fig">Figure 1B</xref>. The example in <xref rid="F1" ref-type="fig">Figure 1B</xref> uses the default theme of <italic>smplot</italic> [with the function “<italic>sm_corr_theme()</italic>”]. The minor grid lines have been removed and the title has been centered. Also, the font is generally larger and consistent. The aesthetics can be modified by adding the ggplot2 functions to the base plot. However, <italic>smplot</italic> provides a wrapper function for a clean default theme that can be added in a modular fashion to the base plot. This modularity can allow the user to customise further with ease.</p>
      <fig position="float" id="F1">
        <label>FIGURE 1</label>
        <caption>
          <p>Correlation plots with and without <italic>smplot</italic>. <bold>(A)</bold> A correlation plot without using <italic>smplot</italic>. <bold>(B)</bold> A correlation plot with a default theme of <italic>smplot</italic>. The theme can added in a modular fashion by adding “<italic>sm_corr_theme()</italic>” to the base plot. This function provides a theme with a minimalistic background, a larger font and a centered title. <bold>(C)</bold> A correlation plot with the default theme of <italic>smplot</italic>, printed statistical information (<italic>R</italic> = correlation coefficient, p = statistical significance) and a best-fit regression line. The <italic>R</italic> and <italic>p</italic> values as well as the regression line can be printed by adding the “<italic>sm_statCorr()</italic>” to the given plot in a modular fashion.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g001" position="float"/>
      </fig>
      <p>When plotting a correlation, one is often recommended to report statistics and print a best-fit regression line. A function called “sm_statCorr()” can be added modularly to print the correlation coefficient (R, not R<sup>2</sup>) and the <italic>p</italic>-value for statistical significance of the relationship between two variables (see <xref rid="F1" ref-type="fig">Figure 1C</xref>). There are several arguments that are used in this function. The regression is set to be linear by default but can also be set to be non-linear by specifying the argument “<italic>lm_method</italic>” (ex., “<italic>lm_method = lm</italic>” for linear regression, “<italic>lm_method = loess</italic>” for non-linear local regression). Also, the type of the correlation test can be specified into either Pearson, Spearman or Kendall using the argument “<italic>corr_method</italic>” (ex., “<italic>corr_method = pearson</italic>” is the default). When the user adds “sm_statCorr()” modularly to the base plot without specifying these arguments, the function uses the defaults for the two arguments.</p>
    </sec>
    <sec id="s3-2">
      <title>Bar Plot</title>
      <p>Plotting a bar graph in <italic>ggplot2</italic> can appear to be not straightforward because the functions that plot the bar graph depend on the structure of the data file that is uploaded in RStudio. For instance, although both “<italic>geom_bar()</italic>” and “<italic>stat_summary()</italic>,” which has multiple usages, can both plot the bar graph in a <italic>ggplot2</italic> setting, “<italic>geom_bar()</italic>” requires that the loaded data contain summarised data (ex., mean, standard error of the sample), whereas “<italic>stat_summary()</italic>” requires that the loaded data contain individual data so that function can directly summarise the data as the mean and the standard deviation. This subtle difference between the functions can be confusing. Also, the arguments for the function “<italic>stat_summary()</italic>” are not always clear.</p>
      <p>In <xref rid="F2" ref-type="fig">Figure 2A</xref>, a bar graph that uses the default theme of <italic>ggplot2</italic> is shown. Individual data points and error bars are missing. Major and minor vertical and horizontal grids overly crowd the graph. In a bar graph, since explanatory variables (levels in the x-axis) are often categorical, vertical grids are often not necessary. Also, the bar graph alone does not represent the distribution of data accurately, so plotting individual points and the error bar (ex., standard error, standard deviation or 95% confidence interval) are often recommended when the bar graph is plotted. These issues in <xref rid="F2" ref-type="fig">Figure 2A</xref> can be resolved by modularly adding the function “<italic>sm_bar()</italic>” to the base plot, as shown in <xref rid="F2" ref-type="fig">Figure 2B</xref>. This function enlarges the font, plots individual data points, automatically removes unnecessary grids, centers the title, narrows the bar width for aesthetics, and plots the error bar (in this example: standard error). These aesthetic features, such as the transparency, color and shape of the points, can be customised by using the specifying the arguments of “<italic>sm_bar()</italic>,” such as “<italic>bar_alpha</italic>,” “<italic>point_alpha</italic>” and “<italic>point_size.</italic>” If the reader is interested in learning more about the function, please visit Chapter 4 of the online guide (smin95.github.io/dataviz/).</p>
      <fig position="float" id="F2">
        <label>FIGURE 2</label>
        <caption>
          <p>Bar plots with and without <italic>smplot</italic>. <bold>(A)</bold> A bar plot drawn with “<italic>stat_summary()</italic>”, which is a function of ggplot2. <bold>(B)</bold> A bar plot drawn with “<italic>sm_bar()</italic>”, which is a function of smplot. This function automatically provides several features, such as individual data points, larger font, minimalistic theme, centered title, narrower bar width and error bars, such as standard error, standard deviation or 95% confidence interval.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g002" position="float"/>
      </fig>
    </sec>
    <sec id="s3-3">
      <title>Boxplot</title>
      <p>A preferred method of illustration to a bar graph when reporting data across different groups/time is a boxplot. It reports the median, 25 and 75% quartiles, spread of the data, distribution and outliers, all of which the bar graph does not show. For instance, the minimum and maximum data points are depicted with the <italic>whiskers</italic> that extend to the top and the bottom of the box in the center. The horizontal line within the box represents the <italic>sample median</italic>. Points that are residing above or below the whiskers represent <italic>outliers</italic>.</p>
      <p>In <xref rid="F3" ref-type="fig">Figure 3A</xref>, a boxplot using the default themes of <italic>ggplot2</italic> is shown. On its own, it is not very informative because the individual points are not displayed. Aesthetically, there are some distracting features such as the major and minor vertical and horizontal grids and unnecessarily wide boxes. If the reader adds “<italic>sm_boxplot()</italic>” to the given plot in <xref rid="F3" ref-type="fig">Figure 3A</xref>, she will be able to resolve these aesthetic issues (see <xref rid="F3" ref-type="fig">Figure 3B</xref>).</p>
      <fig position="float" id="F3">
        <label>FIGURE 3</label>
        <caption>
          <p>Boxplots with and without <italic>smplot</italic>. <bold>(A)</bold> A boxplot drawn with “<italic>geom_boxplot()</italic>”, which is a function of <italic>ggplot2</italic>. <bold>(B)</bold> A boxplot drawn with “<italic>sm_boxplot()</italic>”. This function automatically provides several features, such as individual data points, larger font, minimalistic theme, and centered title.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g003" position="float"/>
      </fig>
    </sec>
    <sec id="s3-4">
      <title>Violin Plot</title>
      <p>Another alternative to a bar graph is a violin plot. A violin plot is sometimes preferred to a boxplot because it shows the full distribution of the data while the boxplot fails to do so. The “violin” of the violin plot represents the data distribution (see <xref rid="F4" ref-type="fig">Figure 4A</xref>). The region with the largest width denotes the highest density of the data. The upper- and lowermost tips of the “violin” represent the maximum and minimum values of the data.</p>
      <fig position="float" id="F4">
        <label>FIGURE 4</label>
        <caption>
          <p>Violin plots with and without <italic>smplot</italic>. <bold>(A)</bold> A violin plot drawn with “<italic>geom_violin()</italic>”, which is a function of <italic>ggplot2</italic>. <bold>(B)</bold> A violin plot drawn with “<italic>sm_violin()</italic>”. This function automatically provides several features, such as individual data points, larger font, minimalistic theme, centered title, narrower bar width and error bars, such as standard error, standard deviation and 95% confidence interval.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g004" position="float"/>
      </fig>
      <p>In <xref rid="F4" ref-type="fig">Figure 4A</xref>, a violin plot using the default theme of ggplot2 (and without <italic>smplot</italic>) is shown. It lacks individual points and error bars, such as standard deviation. The aesthetics also need some improvement. Instead, when “<italic>sm_violin()</italic>” is modularly added to the plot in <xref rid="F4" ref-type="fig">Figure 4A</xref>, the violin plot gets improved visually (see <xref rid="F4" ref-type="fig">Figure 4B</xref>).</p>
    </sec>
    <sec id="s3-5">
      <title>Slope Chart</title>
      <p>A slope chart is often used to directly compare paired data at different timepoints or instances (see <xref rid="F5" ref-type="fig">Figures 5A,B</xref>). With a slope chart, one can track changes over time for each data point (i.e., before and after experimental manipulation). If one is interested in performing a statistical test that accounts for repeated measures (ex., repeated measures one-way analysis of variance), a slope chart can be a good choice for plotting data.</p>
      <fig position="float" id="F5">
        <label>FIGURE 5</label>
        <caption>
          <p>Slope charts drawn with “sm_slope <italic>()</italic>”, which is a function of <italic>smplot</italic>. <bold>(A)</bold> A slope chart with two discrete x-levels. <bold>(B)</bold> A slope chart with four discrete x-levels.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g005" position="float"/>
      </fig>
      <p>The <italic>ggplot2</italic> package does not offer a single function that plots a slope chart. To use <italic>ggplot2</italic>, one might need to code multiple line of code to strip away the default <italic>ggplot2</italic> theme and construct an appropriate slope chart, a task that can be tedious and repetitive. For this reason, “<italic>sm_slope()</italic>” has been created.</p>
      <p><xref rid="F5" ref-type="fig">Figure 5A</xref> shows a slope chart that has two levels in the x-axis, whereas <xref rid="F5" ref-type="fig">Figure 5B</xref> shows a slope chart that has four levels in the x-axis. “<italic>sm_slope()</italic>” plots these slope charts with the same command code by automatically detecting the number of discrete x-levels, provided that the loaded data has a proper data frame structure (see example: <ext-link xlink:href="https://github.com/smin95/dataviz/blob/master/data.csv" ext-link-type="uri">https://github.com/smin95/dataviz/blob/master/data.csv</ext-link>).</p>
    </sec>
    <sec id="s3-6">
      <title>Raincloud Plot = Violin Plot + Boxplot + Individual Data</title>
      <p>A raincloud plot is a combination of a violin plot (halved), a boxplot and jittered individual data (<xref rid="B1" ref-type="bibr">Allen et al., 2021</xref>). Plotting a raincloud plot might be challenging for newcomers in R. Although there exists an R package (the <italic>raincloudplots</italic> package) that plots a raincloud plot (<xref rid="B1" ref-type="bibr">Allen et al., 2021</xref>), the function “<italic>sm_raincloud()</italic>” has been created to allow for more visual customisation.</p>
      <p><xref rid="F6" ref-type="fig">Figure 6A</xref> shows a raincloud plot that has two discrete levels in the x-axis (Day 1 and Day 2). These levels are denoted by the distinct colors pink and blue. In this example, the jittered points, boxplot and violin plot overlap with each other because the separation level is set to 0 (“<italic>sep_level = 0</italic>”). “<italic>sep_level</italic>” is an argument for the function “<italic>sm_raincloud()</italic>.” The separation level ranges from 0 to 4, so one can increase the separation amongst the plots by setting “<italic>sep_level = 2</italic>” within the “<italic>sm_raincloud()</italic>” function as shown in <xref rid="F5" ref-type="fig">Figure 5B</xref>. When “<italic>sep_level = 2</italic>,” the violin plot and the boxplot overlap each other but not the individual data points are located apart.</p>
      <fig position="float" id="F6">
        <label>FIGURE 6</label>
        <caption>
          <p>Raincloud plots drawn with “<italic>sm_raincloud ()</italic>”. <bold>(A)</bold> A raincloud plot with two discrete x-levels. In this example, the halved violin plots face to the right because the violins have been specified to face to the right, i.e., “<italic>which_side =</italic> “<italic>right”</italic>”. Also, the violin plots, boxplots and jittered individual data points all overlap among each other because the separation level has been specified to 0, i.e., “<italic>sep_level = 0</italic>”. <bold>(B)</bold> A raincloud plot with two discrete x-levels. In this example, the halved violin plots both face to the left and right, i.e., “<italic>which_side =</italic> “<italic>mixed</italic>””. This mixed configuration allows the individual points to be paired visually using the grey lines. Also, although the halved violin plots and boxplots overlap, the jittered individual data are located separately because the separation level has been specified to 2, i.e., “<italic>sep_level = 2</italic>”. <bold>(C)</bold> A raincloud plot with two discrete x-levels. In this example, the halved violin plots face to the left because the argument “<italic>which_side =</italic> “<italic>left</italic>””. Also, the halved violin plots, boxplots and the jittered individual data do not overlap. There is more separating distance than the plot in panels A and B because the separation level has been specified to 4, i.e., “<italic>sep_level = 4</italic>”. <bold>(D)</bold> A raincloud plot with four discrete x-levels.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g006" position="float"/>
      </fig>
      <p>Another argument for “<italic>sm_raincloud()</italic>” is “<italic>which_side.</italic>” The reader may notice that the direction at which the pink violin plot is facing is to the left rather than the right (see <xref rid="F6" ref-type="fig">Figure 6A</xref>). If the argument “<italic>which_side</italic>” is set to right, all the violin plots face to the right (see <xref rid="F6" ref-type="fig">Figure 6A</xref>). However, if “<italic>which_side = mixed</italic>,” then the directions of the violin plots become asymmetric so that the jittered individual points at each of the two x-level are closest to one another (<xref rid="F6" ref-type="fig">Figure 6B</xref>). Also, “<italic>which_side = mixed</italic>” is only allowed when there are two discrete levels of x-axis, and the function “<italic>sm_raincloud()</italic>” throws an error when the condition is not met.</p>
      <p>In <xref rid="F6" ref-type="fig">Figure 6C</xref>, separation level has been specified to 4, i.e., “<italic>sep_level = 4.</italic>” This allows the features of the raincloud to be separated from one another more. Also, the violin plots at each x level are facing to the left, i.e., “<italic>which_side = left</italic>.”</p>
      <p>The function “<italic>sm_raincloud()</italic>” also plots a raincloud plot when the x-level exceeds 2 (see <xref rid="F6" ref-type="fig">Figure 6D</xref>). This is a novel feature that is not included in the original R package (the <italic>raincloudplots</italic> package) that draws a raincloud plot. It also automatically counts the number of discrete x levels if the loaded data has a proper data frame structure (see example: <ext-link xlink:href="https://github.com/smin95/dataviz/blob/master/data.csv" ext-link-type="uri">https://github.com/smin95/dataviz/blob/master/data.csv</ext-link>).</p>
    </sec>
    <sec id="s3-7">
      <title>Case Study Using <italic>smplot</italic>: Test-Retest Reliability of a Novel Method</title>
      <p>When one is interested in introducing a new measurement method, one must examine whether the new method (i.e., Method 2) shows agreeable results to those obtained from the standard method (i.e., Method 1). In this section, we present a case study where smplot might be useful. All data and codes are uploaded in Chapter 6 of the online guide (<ext-link xlink:href="https://smin95.github.io/dataviz/" ext-link-type="uri">https://smin95.github.io/dataviz/</ext-link>).</p>
      <p>If the data across two different instances/methods are paired, one can draw a slope chart, rather than a bar plot, to see if the data between these two instances show a small variability. For instance, each dot in <xref rid="F7" ref-type="fig">Figure 7A</xref> can represent an individual sample (ex. Patient 1 out of 20) from which the gene expression level is measured. In this example, if a new method is consistent with the standard method, the individual data from each specimen will have a flat grey line. As we have previously mentioned, this can be achieved by using the “<italic>sm_slope()</italic>” function.</p>
      <fig position="float" id="F7">
        <label>FIGURE 7</label>
        <caption>
          <p>Three figures that examine the test-retest reliability of a new method/technology to measure gene expression have been created using <italic>smplot</italic>. <bold>(A)</bold> A slope chart drawn using “<italic>sm_slope()</italic>”. The blue points represent data from the standard method, whereas the orange points show data from the new method. Each dot represents an individual sample. The grey lines indicate the pairing of the points. If the grey lines uniformly have a positive or negative slope, then one can infer that the new method consistently show data of higher or lower values, respectively. <bold>(B)</bold> A correlation plot drawn using “<italic>sm_corr_theme()</italic>” and “<italic>sm_statCorr()</italic>”. Unfortunately, there is an extreme point at the top-right of the panel; it heavily skews the correlation to be robust. Without it, the correlation is much weaker, i.e., <italic>R</italic> = 0.24, <italic>p</italic> = 0.32. <bold>(C)</bold> A Bland-Altman plot drawn using “<italic>sm_statBlandAlt()</italic>” and “<italic>sm_bland_altman()</italic>”. The difference in data between the two methods are plotted as a function of the mean across the data from the two methods. The upper and lower dashed lines denote 95% limits of agreement; the wider the range encapsulated by the limits of agreement, the more measurement variability there is between the methods. The dashed line in the middle indicates the mean of the difference between the data from the two methods. The grey area represents 95% confidence interval of the difference in data between the methods estimated from a t-distribution. If the middle-dashed line (mean difference) does not overlap with the grey area (95% confidence interval), then the mean difference is significantly different from 0 based on one-sample t-test (<italic>p</italic> &lt; 0.05), thereby indicating that the new method shows a very poor agreement with the standard method. In this panel, however, we see an overlap.</p>
        </caption>
        <graphic xlink:href="fgene-12-802894-g007" position="float"/>
      </fig>
      <p>Another popular method to demonstrate that a new technique is reliable is to compute whether there is a high correlation coefficient (see <xref rid="F7" ref-type="fig">Figure 7B</xref>; Pearson’s correlation test is provided in this example). Unfortunately, a high correlation does not indicate a good replicability. In <xref rid="F7" ref-type="fig">Figure 7B</xref>, we see that the correlation is robust (<italic>R</italic> = 0.64, <italic>p</italic> = 0.014). However, the correlation seems to be heavily dependent on one single point in the top-right corner of <xref rid="F7" ref-type="fig">Figure 7B</xref> (Method 1 = 2.5, Method 2 = 2.5). If the correlation coefficient is computed without the extreme point, it might be more representative of whether the new method is truly correlated with the standard method. In this example, the correlation without the extreme point turns out to be weak, <italic>R</italic> = 0.24, <italic>p</italic> = 0.32. If the reader encounters a similar situation to this case study, we suggest that the reader compute the correlation with and without the outlier, and then determine which of the two correlation coefficients is more representative.</p>
      <p>An appropriate approach to report test-retest variability is to show a Bland-Altman plot (see <xref rid="F7" ref-type="fig">Figure 7C</xref>), which is also known as a MA plot (M = minus, A = average) in the field of genomics (<xref rid="B2" ref-type="bibr">Bland and Altman, 1986</xref>; <xref rid="B3" ref-type="bibr">Giavarina, 2015</xref>). The y-axis of the Bland-Altman is the difference between data from the two methods, whereas the x-axis denotes the mean of the data from the two methods. This plot aims to describe agreements between data from two instances. Bland and Altman have stated that 95% of the scatter points in a Bland-Altman plot should reside within the limits of agreement (dashed line in <xref rid="F6" ref-type="fig">Figure 6C</xref>), which represent ±1.96 standard deviations from the mean difference between data from two sessions (<xref rid="B2" ref-type="bibr">Bland and Altman, 1986</xref>). Whether the mean difference between two instances is too large or not can be determined by calculating the mean difference of all paired individual data. If the mean difference of the data is not significantly different from 0 (i.e., one-sample t-test), then it is acceptable to surmise from the given data that there is a good agreement between the two methods. This is also the case in <xref rid="F7" ref-type="fig">Figure 7C</xref>. A Bland-Altman plot can be drawn using these two functions “<italic>sm_statBlandAlt()</italic>” and “<italic>sm_bland_altman()</italic>.”</p>
    </sec>
    <sec id="s3-8">
      <title>Who Is smplot for?</title>
      <p>The <italic>smplot</italic> package is for those who is interested in plotting elegant graphs with minimal codes in a modular fashion. It aims to simplify the process of data visualization for incoming research trainees in fields such as biomedical sciences. That being said, it is not necessary to produce high-quality graphs. We have encountered numerous medical students who use multiple software environments to create and polish figures, a process that is often laborious and tedious. For instance, if students have already created a figure and decide to collect additional data, they will find themselves to change their figures across multiple software platforms, such as Matlab and Adobe Illustrator. We hope to have convinced the reader that <italic>smplot</italic> can be used to create a polished, satisfying figure within one software environment with minimal coding.</p>
      <p>If the reader is interested in learning more about R, please consider reading <italic>R for Data Science</italic> by Hadley Wickham (<xref rid="B7" ref-type="bibr">Wickham and Grolemund, 2016</xref>). If the reader is interested in developing her own color palette, please visit the online guide of Seaborn (<ext-link xlink:href="https://seaborn.pydata.org/tutorial/color_palettes.html" ext-link-type="uri">https://seaborn.pydata.org/tutorial/color_palettes.html</ext-link>), which is a data visualization library in Python (<xref rid="B5" ref-type="bibr">Waskom, 2021</xref>). If the reader is interested in learning important practices of data visualization, please consider reading <italic>Fundamentals of Data Visualization</italic> by Claus Wilke (<xref rid="B9" ref-type="bibr">Wilke, 2019b</xref>); he is the author of the <italic>cowplot</italic> package (<xref rid="B8" ref-type="bibr">Wilke, 2019a</xref>).</p>
    </sec>
    <sec id="s3-9">
      <title>Contributions of the Package</title>
      <p>The smplot package provides numerous functions that quicken the process of data visualization. Most functions are wrapper functions around ggplot2 that aim to change the default of the aesthetics. We also provide new functions, such as “<italic>sm_bland_altman()</italic>” and “<italic>sm_raincloud()</italic>” that do more than changing the default theme of ggplot2. “<italic>sm_bland_altman()</italic>” plots a Bland-Altman plot (along with the mean, upper and lower limits) and a grey shaded region that represents the 95% confidence interval; these labels are all necessary but the R package (ex. the <italic>BlandAltmanLeh</italic> package) for Bland-Altman plots do not necessarily plot all of these features by default and do not use the ggplot2 interface. Moreover, “<italic>sm_raincloud()</italic>” draws a raincloud plot that is more customisable than the original package that draws a raincloud plot (the <italic>raincloudplots</italic> package). smplot does not impose the limits of the number of discrete x-levels unlike the original package (the <italic>raincloudplots</italic> package). For example, the <italic>raincloudplots</italic> package is not capable of plotting <xref rid="F6" ref-type="fig">Figure 6D</xref> because the graph requires 4 discrete x-levels. In addition, the configuration of the violin plots in the raincloud plot as well as the aesthetics can also be more customised than before. Lastly, unlike the <italic>raincloudplots</italic> package, the data structure can have the same format as the one required for ggplot2; this consistency of the data structure between raincloud plots and other ggplot2 figures can allow the user to draw multiple graphs without modifying the data structure.</p>
      <p>The <italic>ggpubr</italic> package is a well-known R package for data visualization. However, many plotting functions of the <italic>ggpubr</italic> package are one-liner, rather than modular, functions that plot a complete graph. For this reason, there are numerous stored defaults that might not be accessible for the user to modify. If a modular function is added to a plot that is created with <italic>ggpubr</italic> to change default aesthetics of <italic>ggpubr</italic>, warnings may appear. For this reason, the <italic>smplot</italic> package provides functions that can be added modularly (ex. “<italic>sm_hgrid</italic>” and “<italic>sm_statCorr</italic>”) to the given plot built with ggplot2 or be added to (“<italic>sm_bland_altman</italic>” and “<italic>sm_raincloud</italic>”) by other modular functions.</p>
      <p>The smplot package provides multiple themes with an interesting feature. First, as is the case of the themes of the <italic>cowplot</italic> package, they can be added in a modular fashion to a given ggplot2 plot (ex. base plot “<italic>+ sm_hgrid()</italic>”). Also, the theme functions of smplot provide a separate argument for the border and the legend (ex. “<italic>sm_hgrid(legends = FALSE, borders = TRUE</italic>).” If “<italic>legends = FALSE</italic>,” the legend will be hidden; if “<italic>borders = TRUE,</italic>” there will be a border around the panel. When these settings are flipped (“<italic>legends = TRUE</italic>” and “<italic>borders = TRUE</italic>”), the relative proportion of the figure as well as the perceived size of the text have been set to appear the same. These features have been added for convenience because the user is otherwise forced to use “<italic>theme()</italic>,” which can be tedious and confusing to use. The themes provided by the <italic>cowplot</italic> package do not offer these features.</p>
    </sec>
  </sec>
</body>
<back>
  <sec sec-type="data-availability" id="s4">
    <title>Data Availability Statement</title>
    <p>The <italic>smplot</italic> R package is free and open source. All sample data and codes of the figures can be accessed in the online guide (<ext-link xlink:href="https://smin95.github.io/dataviz/" ext-link-type="uri">https://smin95.github.io/dataviz/</ext-link>). The source codes of smplot are available in Github (<ext-link xlink:href="https://github.com/smin95/smplot" ext-link-type="uri">https://github.com/smin95/smplot</ext-link>). <italic>smplot</italic> requires <italic>ggplot2</italic> (<xref rid="B6" ref-type="bibr">Wickham, 2016</xref>) and <italic>cowplot</italic> (<xref rid="B8" ref-type="bibr">Wilke, 2019a</xref>) packages, both of which are automatically downloaded when <italic>smplot</italic> is installed via RStudio. Please cite this article when smplot is used.</p>
  </sec>
  <sec id="s5">
    <title>Author Contributions</title>
    <p>SM and JZ wrote the manuscript. SM created the <italic>smplot</italic> package. All authors approved the final submission.</p>
  </sec>
  <sec id="s6">
    <title>Funding</title>
    <p>This study was supported by the Project of State Key Laboratory of Ophthalmology, Optometry and Vision Science, Wenzhou Medical University (J02-20210203).</p>
  </sec>
  <sec sec-type="COI-statement" id="s7">
    <title>Conflict of Interest</title>
    <p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p>
  </sec>
  <sec sec-type="disclaimer" id="s8">
    <title>Publisher’s Note</title>
    <p>All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.</p>
  </sec>
  <sec id="s9">
    <title>Supplementary Material</title>
    <p>The Supplementary Material for this article can be found online at: <ext-link xlink:href="https://www.frontiersin.org/articles/10.3389/fgene.2021.802894/full#supplementary-material" ext-link-type="uri">https://www.frontiersin.org/articles/10.3389/fgene.2021.802894/full#supplementary-material</ext-link>
</p>
    <supplementary-material id="SM1" position="float" content-type="local-data">
      <media xlink:href="DataSheet1.PDF">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Allen</surname><given-names>M.</given-names></name><name><surname>Poggiali</surname><given-names>D.</given-names></name><name><surname>Whitaker</surname><given-names>K.</given-names></name><name><surname>Marshall</surname><given-names>T. R.</given-names></name><name><surname>Kievit</surname><given-names>R. A.</given-names></name><name><surname>Kievit</surname><given-names>R.</given-names></name></person-group> (<year>2021</year>). <article-title>Raincloud Plots: A Multi-Platform Tool for Robust Data Visualization</article-title>. <source>Wellcome Open Res.</source>
<volume>4</volume>, <fpage>63</fpage>. <pub-id pub-id-type="doi">10.12688/wellcomeopenres.15191.1</pub-id>
</mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bland</surname><given-names>J. M.</given-names></name><name><surname>Altman</surname><given-names>D.</given-names></name></person-group> (<year>1986</year>). <article-title>Statistical Methods for Assessing Agreement between Two Methods of Clinical Measurement</article-title>. <source>The Lancet</source>
<volume>327</volume> (<issue>8476</issue>), <fpage>307</fpage>–<lpage>310</lpage>. <pub-id pub-id-type="doi">10.1016/s0140-6736(86)90837-8</pub-id>
</mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Giavarina</surname><given-names>D.</given-names></name></person-group> (<year>2015</year>). <article-title>Understanding Bland Altman Analysis</article-title>. <source>Biochem. Med.</source>
<volume>25</volume> (<issue>2</issue>), <fpage>141</fpage>–<lpage>151</lpage>. <pub-id pub-id-type="doi">10.11613/bm.2015.015</pub-id>
</mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hunter</surname><given-names>J. D.</given-names></name></person-group> (<year>2007</year>). <article-title>Matplotlib: A 2D Graphics EnvironmentComputing in Science &amp; Engineering</article-title>. <source>Comput. Sci. Eng.</source>
<volume>9</volume> (<issue>3</issue>), <fpage>90</fpage>–<lpage>95</lpage>. <pub-id pub-id-type="doi">10.1109/mcse.2007.55</pub-id>
</mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Waskom</surname><given-names>M.</given-names></name></person-group> (<year>2021</year>). <article-title>Seaborn: Statistical Data Visualization</article-title>. <source>J. Open Source Softw.</source>
<volume>6</volume> (<issue>60</issue>), <fpage>3021</fpage>. <pub-id pub-id-type="doi">10.21105/joss.03021</pub-id>
</mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wickham</surname><given-names>H.</given-names></name></person-group> (<year>2016</year>). <source>ggplot2: Elegant Graphics for Data Analysis</source>. <publisher-name>Springer</publisher-name>. </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wickham</surname><given-names>H.</given-names></name><name><surname>Grolemund</surname><given-names>G.</given-names></name></person-group> (<year>2016</year>). <source>R for Data Science: Import, Tidy, Transform, Visualize, and Model Data</source>. <publisher-name>O'Reilly Media, Inc.</publisher-name>
</mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilke</surname><given-names>C. O.</given-names></name></person-group> (<year>2019a</year>). <article-title>Cowplot: Streamlined Plot Theme and Plot Annotations for ‘ggplot2</article-title>. <comment>R package version 0.9 4</comment>. </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wilke</surname><given-names>C. O.</given-names></name></person-group> (<year>2019b</year>). <source>Fundamentals of Data Visualization: A Primer on Making Informative and Compelling Figures</source>. <publisher-name>O'Reilly Media</publisher-name>. </mixed-citation>
    </ref>
  </ref-list>
</back>

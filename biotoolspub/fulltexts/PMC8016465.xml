<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8016465</article-id>
    <article-id pub-id-type="pmid">33325493</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btaa1031</article-id>
    <article-id pub-id-type="publisher-id">btaa1031</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Data and Text Mining</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>struct: an R/Bioconductor-based framework for standardized metabolomics data analysis and beyond</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Lloyd</surname>
          <given-names>Gavin Rhys</given-names>
        </name>
        <xref ref-type="aff" rid="btaa1031-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jankevics</surname>
          <given-names>Andris</given-names>
        </name>
        <xref ref-type="aff" rid="btaa1031-aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Weber</surname>
          <given-names>Ralf J M</given-names>
        </name>
        <xref ref-type="corresp" rid="btaa1031-cor1"/>
        <xref ref-type="aff" rid="btaa1031-aff1"/>
        <!--<email>r.j.weber@bham.ac.uk</email>-->
      </contrib>
    </contrib-group>
    <aff id="btaa1031-aff1"><institution>Phenome Centre Birmingham and School of Biosciences, University of Birmingham</institution>, Birmingham, B15 2TT, <country country="GB">UK</country></aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Wren</surname>
          <given-names>Jonathan</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btaa1031-cor1">To whom correspondence should be addressed. <email>r.j.weber@bham.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2020-12-27">
      <day>27</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>12</month>
      <year>2020</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>36</volume>
    <issue>22-23</issue>
    <fpage>5551</fpage>
    <lpage>5552</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>7</month>
        <year>2020</year>
      </date>
      <date date-type="rev-recd">
        <day>30</day>
        <month>10</month>
        <year>2020</year>
      </date>
      <date date-type="editorial-decision">
        <day>28</day>
        <month>11</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btaa1031.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>Implementing and combining methods from a diverse range of R/Bioconductor packages into ‘omics’ data analysis workflows represents a significant challenge in terms of standardization, readability and reproducibility. Here, we present an R/Bioconductor package, named struct (Statistics in R using Class-based Templates), which defines a suite of class-based templates that allows users to develop and implement highly standardized and readable statistical analysis workflows. Struct integrates with the STATistics Ontology to ensure consistent reporting and maximizes semantic interoperability. We also present a toolbox, named structToolbox, which includes an extensive set of commonly used data analysis methods that have been implemented using struct. This toolbox can be used to build data-analysis workflows for metabolomics and other omics technologies.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>struct and structToolbox are implemented in R, and are freely available from Bioconductor (<ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/struct">http://bioconductor.org/packages/struct</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/structToolbox">http://bioconductor.org/packages/structToolbox</ext-link>), including documentation and vignettes. Source code is available and maintained at <ext-link ext-link-type="uri" xlink:href="https://github.com/computational-metabolomics">https://github.com/computational-metabolomics</ext-link>.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Wellcome Trust</institution>
            <institution-id institution-id-type="DOI">10.13039/100010269</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>202952/Z/16/Z</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="2"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>The development of computational workflows to analyse complex multivariate biological datasets has become commonplace across an ever growing number of scientific disciplines. The R language is often used to develop such workflows, and there is a large number of publicly available packages that enhance its functionality. CRAN and Bioconductor are two examples of free, open source repositories for R packages. Bioconductor has a strong focus on molecular biology, while CRAN is more generic. Implementing and combining functionalities from a diverse range of R/Bioconductor packages into robust, readable and reproducible scripts and workflows can be challenging and time consuming. The lack of reproducibility and reusability of such scripts and workflows is increasingly being scrutinized by the ‘omics’ user communities, scientific journals and funding bodies, highlighting the need for a standardized framework to address these limitations. This led us to develop struct (Statistics in R using Class-based Templates), which includes a suite of S4 class-based templates (i.e. model, sequence, iterator, chart and metric classes) to facilitate the standardization of R-based workflows for statistics and machine learning. S4 is an R-based system for object oriented programming and is commonly used in Bioconductor. Struct integrates with the STATistics Ontology (STATO) to ensure consistent reporting and provide interoperability via semantic types (<xref rid="btaa1031-B2" ref-type="bibr">Rocca-Serra et al., 2019</xref>). A complementary R/Bioconductor package, named structToolbox, is also presented to demonstrate the implementation and application of struct. The toolbox contains an extensive set of commonly used methods that have been implemented using struct, and which can be used to build preprocessing and data analysis workflows for metabolomics and other omics technologies.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>Here, we describe each of the main S4 class-based templates included in struct. The templates have been designed to support different functionalities that are required to build a typical statistics and/or machine learning workflow. A set of helper functions (e.g. <monospace>set_struct_obj</monospace> and <monospace>set_obj_method</monospace>) are available to allow the user to create and develop new objects from one of the pre-defined templates. In this way, users will be able to include data analysis methods beyond those from metabolomics and easily incorporate new analyses into their workflows.</p>
    <sec>
      <title>2.1 DatasetExperiment class: a data container</title>
      <p>The DatasetExperiment class (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>, defined as <monospace>DE</monospace>) is an extension of Bioconductor's SummarizedExperiment class (<xref rid="btaa1031-B1" ref-type="bibr">Morgan <italic>et al.</italic>, 2020</xref>). It is used to standardize the format of data matrices and meta data commonly generated by omics studies, and used within a struct-based workflow. The DatasetExperiment object contains three components, sample measurements, sample and variable metadata. They are coordinated in such a way that the samples and/or variables can be subset and/or filtered while remaining the samples and variables in sync.</p>
      <fig id="btaa1031-F1" orientation="portrait" position="float">
        <label>Fig. 1.</label>
        <caption>
          <p>Illustration summarizing the main struct S4 class-based templates and associated pseudo code defining a metabolomics-based workflow for preprocessing and multivariate statistics</p>
        </caption>
        <graphic xlink:href="btaa1031f1"/>
      </fig>
    </sec>
    <sec>
      <title>2.2 Model and sequence classes</title>
      <p>Struct allows a user to compartmentalize a data analysis workflow into a set of objects derived from the ‘model’ class. More specifically, the ‘model’ class can be used as a template to define and implement statistical or machine learning methods from existing R/Bioconductor packages [e.g. partial least squares-discriminant analysis (PLSDA) and support vector machines (SVM)] and/or bespoke R-code. It can also be used to implement preprocessing steps, such as normalization and scaling. The different class objects can be linked together into a sequence object using the plus (i.e. ‘<monospace>+</monospace>’) symbol (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>, defined as <monospace>MS</monospace>). This particular ‘grammar’ is comparable to that employed by TidyVerse (Wickham <italic>et al.</italic>, 2019). A sequence can be executed using the (i) ‘model_train’ method to train each step of the sequence using a training dataset; (ii), the ‘model_predict’ method to apply a trained sequence on a test dataset (i.e. model validation); (iii) ‘model_apply’ to train and predict using the same dataset (sometimes called autoprediction), which is useful for non-supervised and univariate statistical methods (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>). The outputs of each step in the workflow (i.e. sequence) are retained and accessible by its index number (see <xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>, for example <monospace>MS[5]</monospace>). This allows the user to explore different steps of the analysis and also allows sequences to be nested within other objects for the purposes of, for example, cross-validation (see Section 2.3). The method ‘predicted’ (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>) can be used to extract the modified data matrix and metadata, in the form of a DatasetExperiment object, from any step in a sequence.</p>
    </sec>
    <sec>
      <title>2.3 Iterator and metric classes for model validation</title>
      <p>Supervised multivariate analysis requires training and testing phases to validate a model. The struct ‘iterator’ and ‘metric’ classes have been designed to support such approaches. Iterators allow the collection of model outputs over a number of iterations. The asterisk (i.e. ‘<monospace>*</monospace>’) symbol can be used to nest a model (or model sequence) inside an iterator, which indicates that the nested model (or sequence) will be used multiple times. As well as model outputs it is useful to accumulate metrics, such as balanced accuracy (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>, defined as <monospace>M</monospace>), over a number of iterations. Both iterator and metric classes can be extended like the other templates (<xref ref-type="fig" rid="btaa1031-F1">Fig. 1</xref>, defined as <monospace>perm_test</monospace> and <monospace>kfold_xva</monospace>l). The ‘run’ method is provided to execute an iterator with a nested model and calculate the input metric for all iterations.</p>
    </sec>
    <sec>
      <title>2.4 Chart and STATO classes for reporting</title>
      <p>Struct includes a ‘chart’ class, which allows specific types of plots to be defined depending on the type of the input object. For DatasetExperiment objects this might be boxplots of a variable/feature in different sample groups, while for models and iterators will be specific to the interpretation of that method, e.g. a scores plot for PLSDA. The plots available for a class can be standardized, e.g. using ggplot themes allowing for consistency in reporting (<xref rid="btaa1031-B4" ref-type="bibr">Wickham et al., 2009</xref>). New charts can be added by extending the provided chart class template. All templates can be combined with the STATO template, which enables methods for extracting formal definitions of statistical methods from a snapshot of the STATO repository (<xref rid="btaa1031-B2" ref-type="bibr">Rocca-Serra <italic>et al.</italic>, 2019</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Implementation and application</title>
    <p>To demonstrate the implementation and applicability of struct we have developed a package, named structToolbox, which includes a diverse range of methods commonly used to study metabolomics datasets (<xref rid="btaa1031-B3" ref-type="bibr">Stanstrup et al., 2019</xref>). Various preprocessing steps such as filters, normalization and scaling are included as well as univariate statistics (e.g. <italic>t</italic>-test, ANOVA and the non-parametric equivalents), multivariate statistics (e.g. PCA, PLSDA), model validation methods (cross-validation, permutation testing) and machine learning methods (SVM). Comprehensive vignettes are available that demonstrate the application of the structToolbox to a range of public Liquid Chromatography Mass Spectrometry (LCMS), Direct Infusion Mass Spectrometry (DIMS) and Nuclear Magnetic Resonance (NMR)_metabolomics datasets.</p>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>Philippe Rocca-Serra is gratefully acknowledged for his helpful comments and conversations about STATistics Ontology (STATO). </p>
    <p><italic>Financial Support</italic>: This work was supported by the Wellcome Trust [202952/Z/16/Z].</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btaa1031-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Morgan</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) SummarizedExperiment: SummarizedExperiment container. Bioconductor version: Release (3.11). <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/3.11/bioc/html/SummarizedExperiment.html">https://bioconductor.org/packages/3.11/bioc/html/SummarizedExperiment.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="btaa1031-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rocca-Serra</surname><given-names>P.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>Experiment design driven FAIRification of omics data matrices, an exemplar</article-title>. <source>Sci. Data</source>, <volume>6</volume>, <fpage>271</fpage>.<pub-id pub-id-type="pmid">31831744</pub-id></mixed-citation>
    </ref>
    <ref id="btaa1031-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stanstrup</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) 
<article-title>The metaRbolomics Toolbox in Bioconductor and beyond</article-title>. <source>Metabolites</source>, <volume>9</volume>, <fpage>200</fpage>.</mixed-citation>
    </ref>
    <ref id="btaa1031-B4">
      <mixed-citation publication-type="book">Wickham,H. <italic>et al</italic>. (2019) Welcome to the tidyverse. <italic>JOSS</italic>, <bold>4</bold>,1686. 
</mixed-citation>
    </ref>
  </ref-list>
</back>
